{"version":3,"file":"131.98930c44620c250242a3.js","mappings":"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AAiBloC,EAAiB,IAAXuoC,KAC5DA,GAAYJ,GACZ1nC,EAAAA,GAAAA,cAAA,WACGT,EAAK,UACNS,EAAAA,GAAAA,cAAA,QAAMd,UF5CkB,WE4CKG,QAdnB4oC,KACtBL,IACAC,EAA+B,CAAEhuB,OAAQyD,EAAQzD,OAAQquB,YAAY,MAatD3oC,EAAK,sBASxB,GCmfA,GAAezB,EAAAA,EAAAA,IAzZ0BqqC,EACvCC,uBACA1mC,qBACA6zB,eACAC,sBACAjmB,SACA+N,UACA+qB,OACAC,UACAC,QACA3S,YACAjY,uBACA8X,mBACAS,qBACAP,iBACA+I,SACA8J,aACAC,aACAC,gBACAC,gBACAC,WACAC,WACAC,UACAC,qBACAC,aACAC,UACAC,YACAC,aACAC,cACAC,aACAC,kBACAC,oBACAC,WACAC,eACAC,aACAC,eACAC,cACAC,aACAC,gBACAC,gBACAC,mBACAC,qBACAC,iBACAC,qBACAC,iBACAC,yBACAC,uBACAC,qBACAxmB,kBACAymB,mBACA3U,yBACAC,qBACA4R,wBACAC,mBACA8C,WACAC,gBACAC,UACAC,oBACAC,SACAC,WACAC,aACAC,YACAC,iBACAC,YACAC,mBACAC,YACAC,UACAC,gBACA35B,WACAo0B,uBACAwF,cACAC,gBACAC,cACAC,aACAC,gBACAC,eACAC,gBACAC,kBACA1X,oBACAC,sBACAC,2BACAyX,kBACAC,wBACAC,eACAC,kBACAC,oBACAC,gBACAC,eAEA,MAAM,iBACJluB,GAAgB,eAAEmuB,GAAc,oBAAEC,GAAmB,aAAEC,GAAY,cAAEC,KACnEpqC,EAAAA,EAAAA,MACEqiC,IAAU1nC,EAAAA,EAAAA,MACV0vC,IAAgB1vC,EAAAA,EAAAA,MAChB2vC,IAAUntC,EAAAA,EAAAA,KACVD,IAAOoT,EAAAA,EAAAA,KACPi6B,IAAehX,IAAcH,EAC7BhX,GAAuBnB,EAAQmB,qBAC/BouB,GAAiBvC,KAAwBsC,IAAgBnuB,GACzDquB,GAAY,aAAcxvB,GAAYA,EAAQwvB,SAC9CC,GAAczvB,EAAQyvB,YACtBC,GAAiD,gBAAjC1vB,EAAQ2F,QA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","sources":["webpack://TeleGPT/./src/hooks/useImageLoader.ts","webpack://TeleGPT/./src/components/common/PeerChip.module.scss?346e","webpack://TeleGPT/./src/components/common/PeerChip.tsx","webpack://TeleGPT/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://TeleGPT/./src/hooks/useResizeMessageObserver.ts","webpack://TeleGPT/./src/hooks/schedulers/useTimeout.ts","webpack://TeleGPT/./src/components/common/PasswordForm.tsx","webpack://TeleGPT/./src/util/events/getPointerPosition.ts","webpack://TeleGPT/./src/util/visibility/getOffsetToContainer.ts","webpack://TeleGPT/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://TeleGPT/./src/components/common/PremiumProgress.module.scss?8969","webpack://TeleGPT/./src/components/common/PremiumProgress.tsx","webpack://TeleGPT/./src/components/common/CalendarModal.async.tsx","webpack://TeleGPT/./src/hooks/useSchedule.tsx","webpack://TeleGPT/./src/components/common/AvatarList.module.scss?00d4","webpack://TeleGPT/./src/components/common/AvatarList.tsx","webpack://TeleGPT/./src/components/common/MediaSpoiler.module.scss?4929","webpack://TeleGPT/./src/components/common/MediaSpoiler.tsx","webpack://TeleGPT/./src/hooks/usePrevious.ts","webpack://TeleGPT/./src/util/resolveTransitionName.ts","webpack://TeleGPT/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://TeleGPT/./src/hooks/useHorizontalScroll.ts","webpack://TeleGPT/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://TeleGPT/./src/components/common/profile/RadialPatternBackground.tsx","webpack://TeleGPT/./src/util/visibility/isElementInViewport.ts","webpack://TeleGPT/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://TeleGPT/./src/components/middle/message/reactions/Reactions.tsx","webpack://TeleGPT/./src/hooks/useCanvasBlur.ts","webpack://TeleGPT/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://TeleGPT/./src/components/common/pickers/PickerItem.tsx","webpack://TeleGPT/./src/components/common/helpers/renderMessageText.ts","webpack://TeleGPT/./src/hooks/useEnsureMessage.ts","webpack://TeleGPT/./src/components/common/pickers/PeerPicker.tsx","webpack://TeleGPT/./src/hooks/useRunDebounced.ts","webpack://TeleGPT/./src/util/animateHorizontalScroll.ts","webpack://TeleGPT/./src/util/objects/customPeer.ts","webpack://TeleGPT/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://TeleGPT/./src/components/common/AnimatedIconWithPreview.tsx","webpack://TeleGPT/./src/hooks/useCustomBackground.ts","webpack://TeleGPT/./src/components/common/helpers/gifts.ts","webpack://TeleGPT/./src/components/common/AnimatedCounter.tsx","webpack://TeleGPT/./src/components/common/AnimatedCounter.module.scss?3640","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://TeleGPT/./src/util/scrollLock.ts","webpack://TeleGPT/./src/hooks/useFolderManager.ts","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://TeleGPT/./src/hooks/useInputFocusOnOpen.ts","webpack://TeleGPT/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://TeleGPT/./src/components/common/AnimatedIconFromSticker.tsx","webpack://TeleGPT/./src/components/common/helpers/sortChatIds.ts","webpack://TeleGPT/./src/util/parseHtmlAsFormattedText.ts","webpack://TeleGPT/./src/util/getMessageIdsForSelectedText.ts","webpack://TeleGPT/./src/components/common/BadgeButton.module.scss?da7b","webpack://TeleGPT/./src/components/common/BadgeButton.tsx","webpack://TeleGPT/./src/util/animateScroll.ts","webpack://TeleGPT/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://TeleGPT/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://TeleGPT/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://TeleGPT/./src/components/modals/prompt/PromptDialog.tsx","webpack://TeleGPT/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://TeleGPT/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://TeleGPT/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://TeleGPT/./src/components/common/PinMessageModal.async.tsx","webpack://TeleGPT/./src/components/middle/message/helpers/copyOptions.ts","webpack://TeleGPT/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://TeleGPT/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://TeleGPT/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://TeleGPT/./src/components/middle/message/MessageContextMenu.tsx","webpack://TeleGPT/./src/components/middle/message/ContextMenuContainer.tsx","webpack://TeleGPT/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts"],"sourcesContent":["import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { preloadImage } from '../util/files';\nimport useAsync from './useAsync';\n\nexport type UseImageLoaderResult = {\n  image?: HTMLImageElement;\n};\n\nexport default function useImageLoader(file?: Blob): UseImageLoaderResult {\n  const urlRef = useRef<string | undefined>();\n\n  const { result: image } = useAsync(() => {\n    if (!file) {\n      return Promise.resolve(undefined);\n    }\n\n    if (urlRef.current) {\n      URL.revokeObjectURL(urlRef.current);\n    }\n\n    const url = URL.createObjectURL(file);\n    urlRef.current = url;\n\n    return preloadImage(url);\n  }, [file]);\n\n  useEffect(() => {\n    return () => {\n      if (urlRef.current) {\n        URL.revokeObjectURL(urlRef.current);\n        urlRef.current = undefined;\n      }\n    };\n  }, []);\n\n  return { image };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import React from '@teact';\nimport type { TeactNode } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n\n  peerId?: string;\n\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","import React from '@teact';\nimport {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { ElementRef } from '../lib/teact/teact';\nimport { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: ElementRef<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import React from '@teact';\nimport type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  const inputRef = useRef<HTMLInputElement>();\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getPointerPosition(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  if ('touches' in e) {\n    return {\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n    };\n  }\n\n  return {\n    x: e.clientX,\n    y: e.clientY,\n  };\n}\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement | null;\n  }\n\n  offsetTop -= container.clientTop;\n  offsetLeft -= container.clientLeft;\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  const floatingBadgeRef = useRef<HTMLDivElement>();\n  const parentContainerRef = useRef<HTMLDivElement>();\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React from '@teact';\nimport { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"nsfw\":\"FJGQoa6s\",\"nsfwIcon\":\"Y7JVRkxJ\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Icon from './icons/Icon';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  isNsfw?: boolean;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  isNsfw,\n  className,\n  width,\n  height,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n      {isNsfw && (\n        <span className={styles.nsfw}>\n          <Icon name=\"eye-crossed-outline\" className={styles.nsfwIcon} />\n          {lang('MediaSpoilerSensitive')}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import type { AnimationLevel } from '../types';\n\nimport { ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN } from '../config.ts';\nimport { IS_ANDROID, IS_IOS } from './browser/windowEnvironment.ts';\n\nexport function resolveTransitionName(\n  name: 'slideOptimized' | 'slide' | 'layers',\n  animationLevel: AnimationLevel,\n  isDisabled = false,\n  isRtl = false,\n) {\n  if (isDisabled || animationLevel === ANIMATION_LEVEL_MIN) return 'none';\n\n  if (animationLevel === ANIMATION_LEVEL_MED) return 'slideFade';\n\n  return name === 'slideOptimized' ? (\n    isRtl ? 'slideOptimizedRtl' : 'slideOptimized'\n  ) : name === 'slide' ? (\n    isRtl ? 'slideRtl' : 'slide'\n  ) : (\n    IS_ANDROID ? 'slideFade' : IS_IOS ? 'slideLayers' : 'pushSlide'\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: ElementRef<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React from '@teact';\nimport {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import React from '@teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const effectRef = useRef<HTMLDivElement>();\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React from '@teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import React from '@teact';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React from '@teact';\nimport { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {Boolean(inputElement) && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {Boolean(avatarElement) && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {Boolean(subtitle) && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n}: {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import React from '@teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getMainUsername, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  const inputRef = useRef<HTMLInputElement>();\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) {\n        return (\n          <div key={id}>\n            No peer or category with ID\n            {id}\n          </div>\n        );\n      }\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = getMainUsername(peer);\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n\n        onClick={() => handleItemClick(id)}\n\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById = new Map<string, VoidFunction>();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React from '@teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import React from '@teact';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: ElementRef<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  AI_FOLDER_ID, ALL_FOLDER_ID, PRESET_FOLDER_ID, UNREAD_FOLDER_ID,\n} from '../config';\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport { filterAITag, filterPresetTag } from '../components/chatAssistant/ai-chatfolders/tag-filter';\nimport { isChatBot } from '../components/chatAssistant/ai-chatfolders/util';\nimport { GLOBAL_SUMMARY_CHATID } from '../components/chatAssistant/variables';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  if (folderId === UNREAD_FOLDER_ID) {\n    return getUnreadChatsByFolderId()[ALL_FOLDER_ID];\n  }\n  if (folderId === PRESET_FOLDER_ID) {\n    return filterPresetTag(getOrderedIds(ALL_FOLDER_ID)?.filter((i) => !isChatBot(i)));\n  }\n  if (folderId === AI_FOLDER_ID) {\n    return filterAITag(getOrderedIds(ALL_FOLDER_ID)?.filter((i) => !isChatBot(i)));\n  }\n  if (folderId === ALL_FOLDER_ID) {\n    const res = getOrderedIds(folderId);\n    if (res && res?.indexOf(GLOBAL_SUMMARY_CHATID) < 0) {\n      res?.unshift(GLOBAL_SUMMARY_CHATID);\n    } else {\n      res?.sort((a, b) => (a === GLOBAL_SUMMARY_CHATID ? -1 : b === GLOBAL_SUMMARY_CHATID ? 1 : 0));\n    }\n\n    return res;\n  }\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import React from '@teact';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import React from '@teact';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import React from '@teact';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n        && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: ElementRef<HTMLDivElement>;\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React from '@teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './browser/windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import React from '@teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, clientHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React from '@teact';\nimport { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React from '@teact';\nimport { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const menuRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import copy from 'copy-to-clipboard';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getWebPagePhoto,\n  getWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { selectChatTranslations } from '../../../../global/selectors';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const { webPage } = statefulContent || {};\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getWebPageVideo(webPage) ? getWebPagePhoto(webPage) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          ) as string[];\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n    const global = getGlobal();\n    const { id: messageId, chatId } = message;\n    const chatTranslations = selectChatTranslations(global, chatId);\n    const { autoTranslateLanguage } = global.settings.byKey;\n    const messageTranslation = autoTranslateLanguage && messageId\n      ? chatTranslations?.byLangCode[autoTranslateLanguage]?.[messageId] : undefined;\n    const { isPending, text: translatedText } = messageTranslation || {};\n    if (translatedText && !isPending) {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            copy(translatedText.text);\n          }\n          afterEffect?.();\n        },\n      });\n    } else {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          const messageIds = getMessageIdsForSelectedText();\n          if (messageIds?.length && onCopyMessages) {\n            onCopyMessages(messageIds);\n          } else if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            const clipboardText = renderMessageText(\n              { message, shouldRenderAsHtml: true },\n            );\n            if (clipboardText) {\n              copyHtmlToClipboard(\n                clipboardText.join(''),\n                getMessageTextWithSpoilers(message, statefulContent)!,\n              );\n            }\n          }\n\n          afterEffect?.();\n        },\n      });\n    }\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = selection?.anchorNode?.parentNode as HTMLElement;\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React from '@teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React from '@teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canAppendTodoList?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onAppendTodoList?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  webPage,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  canAppendTodoList,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onAppendTodoList,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  const menuRef = useRef<HTMLDivElement>();\n  const scrollableRef = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: oldLang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, webPage, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? oldLang('SendAnotherGift')\n                : oldLang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{oldLang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{oldLang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {oldLang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {oldLang('Conversation.ContextViewReplies', repliesThreadInfo.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{oldLang('Edit')}</MenuItem>}\n        {canAppendTodoList && (\n          <MenuItem icon=\"add\" onClick={onAppendTodoList}>\n            {lang('MenuButtonAppendTodoList')}\n          </MenuItem>\n        )}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{oldLang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{oldLang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{oldLang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && (\n          <MenuItem icon=\"language\" onClick={onShowOriginal}>\n            {oldLang('ShowOriginalButton')}\n          </MenuItem>\n        )}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{oldLang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >\n            {oldLang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{oldLang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{oldLang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{oldLang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{oldLang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{oldLang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? oldLang('lng_context_cancel_download') : oldLang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{oldLang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{oldLang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{oldLang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{oldLang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(\n                  oldLang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'],\n                )}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(oldLang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? oldLang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : oldLang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? oldLang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : oldLang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiWebPage,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  TODO_ITEMS_LIMIT,\n} from '../../../config';\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSavedDialogIdFromMessage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { selectMessageDownloadableMedia } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canSmartReply?: boolean;\n  canScheduleMeeting?:boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canAppendTodoList?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n  savedDialogId?: string;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  webPage,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  canAppendTodoList,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  savedDialogId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n    openTodoListModal,\n    showNotification,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    const global = getGlobal();\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = selectMessageDownloadableMedia(global, msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        monoforumPeerId: savedDialogId,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    if (message.content.todo) {\n      openTodoListModal({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    } else {\n      setEditingId({ messageId: message.id });\n    }\n    closeMenu();\n  });\n\n  const handleAppendTodoList = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForAppendToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      openTodoListModal({\n        chatId: message.chatId,\n        messageId: message.id,\n        forNewTask: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    const global = getGlobal();\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = selectMessageDownloadableMedia(global, msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canAppendTodoList={canAppendTodoList}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        webPage={webPage}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        // onSmartReply={handleSmartReply}\n        // onScheduleMeet={handleScheduleMeeting}\n        onEdit={handleEdit}\n        onAppendTodoList={handleAppendTodoList}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={oldLang('lng_polls_stop_warning')}\n        confirmLabel={oldLang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n      && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !chat.isMonoforum\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    const savedDialogId = selectSavedDialogIdFromMessage(global, message);\n    const todoItemsMax = global.appConfig?.todoItemsMax || TODO_ITEMS_LIMIT;\n    const canAppendTodoList = message.content.todo?.todo.othersCanAppend\n      && message.content.todo?.todo.items?.length < todoItemsMax;\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canAppendTodoList,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n      savedDialogId,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n"],"names":["useImageLoader","file","urlRef","useRef","result","image","useAsync","Promise","resolve","undefined","current","URL","revokeObjectURL","url","createObjectURL","preloadImage","useEffect","memo","withGlobal","global","peerId","forceShowSelf","peer","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","title","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","className","withPeerColors","withEmojiStatus","onClick","itemClassName","lang","useOldLang","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","React","Icon","name","style","Avatar","size","getPeerTitle","FullNameTitle","fullClassName","buildClassName","isForum","isAvatarSquare","getPeerColorClass","dir","isRtl","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","reaction","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","ref","isCustom","type","availableReaction","useMemo","find","r","isSameReaction","centerIconId","centerIcon","id","customEmoji","useCustomEmoji","documentId","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","Math","floor","random","length","isIntersecting","useIsIntersecting","mediaHashCenterIcon","getStickerHashById","mediaHashEffect","mediaDataCenterIcon","useMedia","mediaDataEffect","activeReaction","active","shouldPlayEffect","Boolean","shouldPlayCenter","shouldRender","shouldRenderEffect","transitionClassNames","animationClassNames","useShowTransitionDeprecated","shouldRenderCenter","centerAnimationClassNames","handleEnded","useLastCallback","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","useFlag","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","styles","root","animating","ReactionStaticEmoji","CustomEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","key","animatedIcon","roundToNearestEven","tgsUrl","play","noLoop","onLoad","onEnded","effect","CustomEmojiEffect","particleSize","max","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","entry","lastHeight","newHeight","contentRect","height","isAnimatingScroll","container","target","closest","beginHeavyAnimation","resizeDiff","offsetHeight","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useResizeObserver","callback","delay","savedCallback","setTimeout","clearTimeout","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","tabIndex","value","onChange","e","MIN_PASSWORD_LENGTH","maxLength","role","Button","ripple","disabled","getPointerPosition","x","touches","clientX","y","clientY","getOffsetToContainer","element","offsetTop","offsetLeft","contains","offsetParent","clientTop","clientLeft","top","left","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","useMediaTransitionDeprecated","shouldApplySizeFix","shouldReplaceWithHeartIcon","src","blankUrl","alt","draggable","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","shiftX","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","min","newTailPosition","hasFloatingBadge","isProgressFull","buildStyle","width","viewBox","fill","d","props","isOpen","CalendarModal","useModuleLoader","Bundles","Extra","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","date","isWhenOnline","scheduledAt","getTime","Date","now","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onClose","onSecondButtonClick","AvatarList","peers","limit","badgeText","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","MediaSpoiler","isVisible","withAnimation","thumbDataUri","isNsfw","useLang","canvasRef","useCanvasBlur","handleClick","el","rect","currentTarget","getBoundingClientRect","shiftY","setAttribute","usePrevious","prevRef","lastRef","resolveTransitionName","animationLevel","isDisabled","ANIMATION_LEVEL_MIN","ANIMATION_LEVEL_MED","IS_ANDROID","IS_IOS","useHorizontalScroll","containerRef","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","getStickerMediaHash","previewUrl","then","patternPositions","coordinates","ring","ringItemCount","ringProgress","ringRadius","angleShift","PI","i","angle","cos","sin","sizeFactor","push","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","forEach","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","isElementInViewport","display","windowHeight","windowSize","get","MAX_EFFECT_COUNT","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","AnimatedIcon","LOCAL_TGS_URLS","StarReactionEffect","nonInteractive","quality","REACTION_SIZE","selectStarsState","stars","ReactionButton","isOwnMessage","recentReactors","chosenClassName","chatId","messageId","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","count","stopPropagation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","getComputedStyle","scale","cancel","animate","offset","duration","easing","prevAmount","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","chosen","onMouseDown","onContextMenu","Sparkles","preset","animatedEmoji","AnimatedCounter","text","formatIntegerCompact","paidCounter","counter","Reactions","message","threadId","maxWidth","metaChildren","noRecentReactors","isCurrentUserPremium","tags","isAccountFrozen","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","openPremiumModal","showNotification","openFrozenAccountModal","results","areTags","recentReactions","withServiceReactions","areReactionsPossible","totalCount","reduce","acc","recentReactorsByReactionKey","getGlobal","recentReaction","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","actionText","cacheBreaker","toString","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","isOutgoing","withContextMenu","onRemove","RADIUS","ITERATIONS","dataUri","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","fastBlur","onload","requestMeasure","PickerItem","subtitle","avatarElement","inputElement","inputPosition","inactive","titleClassName","subtitleClassName","onDisabledClick","isClickable","RippleEffect","renderMessageText","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","maxTimestamp","entities","content","contentNotSupportedText","getMessageText","trimText","renderTextWithEntities","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","getMessageSummaryText","renderText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","useEnsureMessage","replyOriginForId","loadMessage","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","timeoutId","window","lockedSelectedIdsSet","Set","lockedUnselectedIdsSet","unlockedSelectedIds","has","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","categoryType","newSelectedCategories","includes","splice","indexOf","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","username","getMainUsername","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","Radio","checked","onlyInput","Checkbox","beforeChildren","pickerCategoryTitle","header","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","cb","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","selectCanAnimateInterface","getAttribute","containerWidth","scrollWidth","dataset","scrollId","path","remainingPath","isStopped","set","scrollSnapType","startAt","cleanup","delete","t","currentPath","transition","CUSTOM_PEER_PREMIUM","isCustomPeer","titleKey","subtitleKey","avatarIcon","withPremiumGradient","CUSTOM_PEER_INCLUDED_CHAT_TYPES","peerColorId","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","loadedPreviewUrls","otherProps","isThumbOpen","unmarkThumbOpen","thumbClassNames","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","add","handleAnimationReady","_extends","useCustomBackground","theme","settingValue","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","catch","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","getStickerFromGift","gift","sticker","attributes","attr","getTotalGiftAvailability","availabilityTotal","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","characters","elements","textLength","prevTextLength","charIndex","prevTextCharIndex","unshift","renderAnimatedCharacters","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","isTextBox","disableScrolling","_excludedClosestSelector","document","onkeydown","enableScrolling","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","UNREAD_FOLDER_ID","getUnreadChatsByFolderId","ALL_FOLDER_ID","PRESET_FOLDER_ID","filterPresetTag","getOrderedIds","isChatBot","AI_FOLDER_ID","filterAITag","res","GLOBAL_SUMMARY_CHATID","sort","a","b","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","ReactionSelectorCustomReaction","isReady","noAppearAnimation","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","cn","createClassNameBuilder","ReactionSelector","allAvailableReactions","topReactions","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isPrivate","canPlayAnimatedEmojis","isInSavedMessages","isInStoryViewer","isForEffects","effectReactions","isWithPaidReaction","onShowMore","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","color","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isConnected","blur","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","animateScroll","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","noLoad","forcePreview","thumbnail","localMediaHash","previewBlobUrl","ApiMediaFormat","BlobUrl","AnimatedIconWithPreview","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","isVerified","ENTITY_CLASS_BY_NODE_NAME","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","parseHtmlAsFormattedText","html","withMarkdownLinks","skipMarkdown","fragment","createElement","innerHTML","parsedHtml","replace","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","trim","textIndex","recursionDeepness","addEntity","node","nodeType","Node","COMMENT_NODE","index","entity","rawText","entityType","nodeName","anchor","MentionName","Url","href","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","substring","userId","language","Timestamp","timestamp","isNaN","getEntityDataFromNode","hasChildNodes","from","childNodes","querySelectorAll","replaceWith","ELEMENT_NODE","getMessageIdsForSelectedText","selection","getSelection","selectedFragments","rangeCount","getRangeAt","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageIds","children","classList","messageEl","firstChild","removeChild","pop","parentNode","BadgeButton","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","abs","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","isLottie","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","withSharedAnimation","onAnimationEnd","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","getTriggerElement","getRootElement","body","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","onCloseAnimationEnd","MenuItem","destructive","div","ALLOWED_QUOTE_ENTITIES","getSelectionAsFormattedText","range","clonedSelection","appendChild","commonAncestorContainer","currentElement","parentElement","wrapHtmlWithMarkupTags","getSelectionAsHtml","stripEntitiesForQuote","PinMessageModal","checkMessageHasSelection","selectionParentNode","anchorNode","selectedMessageElement","getMessageHtmlId","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","Transition","activeKey","handleOpenModal","isReadDate","MessageContextMenu","isReactionPickerOpen","poll","webPage","story","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canQuote","canEdit","canAppendTodoList","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","onReply","onOpenThread","onEdit","onAppendTodoList","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","userFullName","canGift","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","scrollableRef","oldLang","noReactions","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","copyOptions","afterEffect","options","photo","getMessagePhoto","getWebPageVideo","getWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","label","handler","mediaLoader","blobUrl","copyImageToClipboard","copyTextToClipboard","execCommand","clipboardText","copyHtmlToClipboard","join","getMessageTextWithSpoilers","chatTranslations","selectChatTranslations","autoTranslateLanguage","settings","byKey","messageTranslation","byLangCode","isPending","translatedText","copy","getMessageCopyOptions","groupStatefulContent","extraHeightAudioPlayer","middleColumn","getElementById","middleColumnComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","messagesCount","option","withPreventDefaultOnMouseDown","MenuSeparator","inline","withWrap","reactors","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","UNQUOTABLE_OFFSET","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isMonoforum","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","storyData","selectPeerStory","selectCanGift","savedDialogId","selectSavedDialogIdFromMessage","todoItemsMax","TODO_ITEMS_LIMIT","todo","othersCanAppend","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","ContextMenuContainer","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","reportMessages","openTodoListModal","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","calendar","chatsById","chats","byId","usersById","users","uniqueReactors","PREVIEW_AVATAR_COUNT","messages","msg","downloadableMedia","selectMessageDownloadableMedia","getIsDownloading","selectionRange","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","startOffset","endOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","monoforumPeerId","replyToPeerId","fromChatId","handleOpenThread","handleEdit","handleAppendTodoList","forNewTask","handlePin","handleUnpin","isUnpin","handleForward","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","video","getMessageVideo","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","ConfirmDialog","confirmLabel","confirmHandler"],"sourceRoot":""}