{"version":3,"file":"4376.c7c4312d656057e9cddf.js","mappings":"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,mBACA37B,wBAAwBgoC,EAAAA,EAAAA,KAA6B55C,EAAQnH,EAAQM,QACrE2zC,gBACAC,gBAAiB2L,KAAmBG,GACpC7L,kBAAmB0L,KAAmBG,GACtCgB,oBAAqBnB,GACrB5hB,uBAAuBgjB,EAAAA,EAAAA,KAA4B95C,GACnDqrC,sBAAsB0O,EAAAA,EAAAA,KAA2B/5C,GACjD+2B,qBACA0f,YACAW,iBACAjgB,mBAAoBie,GAAc4E,wBAClC1O,QACAC,SACA2D,eACAC,aAvKc1uC,CAjqBoCw5C,EACtDp7B,WACAza,qBACAoyB,eACAC,sBACAnlB,SACAwjC,kBACAj8C,UACAs/C,sBACA5K,kBACA2M,QACA5O,OACAC,QACApM,SACAqM,aACAmK,YACAlK,aACAgO,cACA/N,gBACAE,WAGAI,SACAkB,oBACAjB,WACAC,YACAkB,wBACAhrC,OACAgqC,YACAiB,sBACAvB,UACApV,mBACAE,iBACAC,YACA5X,uBACAktB,cACAR,iBACAU,kBACAC,oBACAC,WACAC,eACAC,aACAC,eACAC,cACAC,aACAC,gBACA/V,yBACA8T,mBACAD,wBACAuK,mBACAnJ,aACAoB,iBACAv7B,0BACAk7B,gBACA+M,uBACA9M,mBACAC,qBACA3B,wBACAtU,qBACAqgB,kBACAjgB,sBACA+X,gBACAC,WACAxtC,aACA6R,WACA61B,2BAEA,MAAM,WACJ8Q,GAAU,qBACVC,GAAoB,aACpBC,GAAY,WACZC,GAAU,gBACVC,GAAe,cACfC,GAAa,YACbC,GAAW,cACXC,GAAa,uBACbC,GAAsB,sBACtBC,GAAqB,kBACrBC,GAAiB,cACjBC,GAAa,oBACbC,GAAmB,WACnBC,GAAU,gBACVC,GAAe,qBACfC,GAAoB,aACpBC,GAAY,aACZC,GAAY,kBACZC,GAAiB,QACjBC,GAAO,aACPhM,GAAY,eACZiM,GAAc,UACdC,GAAS,eACTp8B,GAAc,0BACdq8B,GAAyB,oBACzBC,GAAmB,sBACnBC,GAAqB,0BACrBC,GAAyB,iBACzBp8B,GAAgB,mBAChBq8B,GAAkB,gBAClBC,GAAe,uBACfC,GAAsB,qBACtB18B,GA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","sources":["webpack://TeleGPT/./src/components/chatAssistant/utils/ai-analyse-message.ts","webpack://TeleGPT/./src/components/common/PeerChip.module.scss?346e","webpack://TeleGPT/./src/components/common/PeerChip.tsx","webpack://TeleGPT/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://TeleGPT/./src/hooks/useResizeMessageObserver.ts","webpack://TeleGPT/./src/hooks/schedulers/useTimeout.ts","webpack://TeleGPT/./src/components/common/PasswordForm.tsx","webpack://TeleGPT/./src/util/visibility/getOffsetToContainer.ts","webpack://TeleGPT/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://TeleGPT/./src/components/common/PremiumProgress.module.scss?8969","webpack://TeleGPT/./src/components/common/PremiumProgress.tsx","webpack://TeleGPT/./src/components/common/CalendarModal.async.tsx","webpack://TeleGPT/./src/hooks/useSchedule.tsx","webpack://TeleGPT/./src/components/common/AvatarList.module.scss?00d4","webpack://TeleGPT/./src/components/common/AvatarList.tsx","webpack://TeleGPT/./src/components/common/MediaSpoiler.module.scss?4929","webpack://TeleGPT/./src/components/common/MediaSpoiler.tsx","webpack://TeleGPT/./src/hooks/usePrevious.ts","webpack://TeleGPT/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://TeleGPT/./src/hooks/useHorizontalScroll.ts","webpack://TeleGPT/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://TeleGPT/./src/components/common/profile/RadialPatternBackground.tsx","webpack://TeleGPT/./src/util/visibility/isElementInViewport.ts","webpack://TeleGPT/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://TeleGPT/./src/components/middle/message/reactions/Reactions.tsx","webpack://TeleGPT/./src/hooks/useCanvasBlur.ts","webpack://TeleGPT/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://TeleGPT/./src/components/common/pickers/PickerItem.tsx","webpack://TeleGPT/./src/components/common/helpers/renderMessageText.ts","webpack://TeleGPT/./src/hooks/useEnsureMessage.ts","webpack://TeleGPT/./src/components/common/pickers/PeerPicker.tsx","webpack://TeleGPT/./src/hooks/useRunDebounced.ts","webpack://TeleGPT/./src/util/animateHorizontalScroll.ts","webpack://TeleGPT/./src/util/objects/customPeer.ts","webpack://TeleGPT/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://TeleGPT/./src/components/common/AnimatedIconWithPreview.tsx","webpack://TeleGPT/./src/hooks/useCustomBackground.ts","webpack://TeleGPT/./src/components/common/helpers/gifts.ts","webpack://TeleGPT/./src/components/common/AnimatedCounter.tsx","webpack://TeleGPT/./src/components/common/AnimatedCounter.module.scss?3640","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://TeleGPT/./src/util/scrollLock.ts","webpack://TeleGPT/./src/hooks/useFolderManager.ts","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://TeleGPT/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://TeleGPT/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://TeleGPT/./src/components/common/AnimatedIconFromSticker.tsx","webpack://TeleGPT/./src/components/common/helpers/sortChatIds.ts","webpack://TeleGPT/./src/util/parseHtmlAsFormattedText.ts","webpack://TeleGPT/./src/util/getMessageIdsForSelectedText.ts","webpack://TeleGPT/./src/components/common/BadgeButton.module.scss?da7b","webpack://TeleGPT/./src/components/common/BadgeButton.tsx","webpack://TeleGPT/./src/util/animateScroll.ts","webpack://TeleGPT/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://TeleGPT/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://TeleGPT/./src/global/helpers/payments.ts","webpack://TeleGPT/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://TeleGPT/./src/components/modals/prompt/PromptDialog.tsx","webpack://TeleGPT/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://TeleGPT/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://TeleGPT/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://TeleGPT/./src/components/common/PinMessageModal.async.tsx","webpack://TeleGPT/./src/components/middle/message/helpers/copyOptions.ts","webpack://TeleGPT/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://TeleGPT/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://TeleGPT/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://TeleGPT/./src/components/middle/message/MessageContextMenu.tsx","webpack://TeleGPT/./src/components/middle/message/ContextMenuContainer.tsx","webpack://TeleGPT/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts"],"sourcesContent":["/* eslint-disable */\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ApiMessage } from \"../../../api/types\";\nimport eventEmitter, { Actions } from \"../lib/EventEmitter\";\nimport { ChataiStores } from \"../store\";\nimport { StoreMessage } from \"../store/messages-store\";\nimport {\n  audioAISummary,\n  documentAISummary,\n  imageAISummary,\n  mentionReply,\n  webPageAISummary,\n} from \"./chat-api\";\nimport { sleep } from \"../ai-chatfolders/util\";\nimport { getMediaHash } from \"../../../global/helpers\";\nimport * as mediaLoader from \"../../../util/mediaLoader\";\nimport { message as showMessage } from \"antd\";\nimport * as pdfjsLib from \"pdfjs-dist/legacy/build/pdf\";\nimport { getActions, getGlobal } from \"../../../global\";\nimport { selectChatMessage } from \"../../../global/selectors\";\n\npdfjsLib.GlobalWorkerOptions.workerSrc = \"pdf.worker.min.js\";\n\nconst mammoth = require(\"mammoth\");\n\nexport async function replyToMention(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  if (!message.isMentioned || !message.content?.text?.text) return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-reply-mention\" }],\n    content: JSON.stringify({\n      messageId: message.id,\n      content: message.content.text?.text,\n      isAuto,\n      status: \"loading\",\n    }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  mentionReply({\n    message: message.content.text?.text,\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            messageId: message.id,\n            content: message.content.text?.text,\n            replys: response.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function photoSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const photo = message.content?.photo;\n  if (!photo) return;\n  const mediaHash = getMediaHash(photo, \"download\");\n  if (!mediaHash) return;\n  const mimeType = \"image/jpeg\";\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  await handleImageToSummaryText({\n    mimeType,\n    mediaHash,\n    message,\n    newMessage,\n    isAuto,\n  });\n}\n\nexport async function webPageSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const webPage = message.content?.webPage;\n  const url = webPage ? webPage?.url : message.content?.text?.text;\n  if (!url || url === \"\") return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  webPageAISummary({\n    url,\n    text: message.content?.text?.text || \"\",\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response?.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            message,\n            summaryInfo: response?.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function documentSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const document = message.content?.document;\n  if (!document) return;\n\n  const mediaHash = getMediaHash(document, \"download\");\n  if (!mediaHash) return;\n  if (checkIsImage(document.mimeType) && isAuto) return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  // image\n  if (checkIsImage(document.mimeType)) {\n    handleImageToSummaryText({\n      mimeType: document.mimeType,\n      mediaHash,\n      message,\n      newMessage,\n      isAuto,\n    });\n    return;\n  }\n  // video\n  if (checkIsVideo(document.mimeType)) {\n    await handleAudioToSummaryText({\n      mediaHash,\n      mimeType: document?.mimeType,\n      filename: document?.fileName,\n      size: document?.size,\n      newMessage,\n      message,\n      isAuto,\n    });\n    return;\n  }\n\n  await mediaLoader.fetch(mediaHash, 0);\n  const blobUrl = mediaLoader.getFromMemory(mediaHash);\n  if (!blobUrl) return;\n\n  const response = await fetch(blobUrl);\n  const blob = await response.blob();\n\n  const arrayBuffer = await blob.arrayBuffer();\n  let text = \"\";\n  switch (document.mimeType) {\n    case \"text/plain\":\n      text = new TextDecoder().decode(arrayBuffer);\n      break;\n    case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n    case \"application/msword\":\n      const result = await mammoth.extractRawText({ arrayBuffer });\n      text = result.value;\n      break;\n    case \"application/pdf\":\n      const pdf = await pdfjsLib.getDocument({ data: arrayBuffer }).promise;\n      let pdfText = \"\";\n      for (let i = 1; i <= pdf.numPages; i++) {\n        const page = await pdf.getPage(i);\n        const content = await page.getTextContent();\n        const pageText = content.items.map((item: any) => item.str).join(\" \");\n        pdfText += pageText + \"\\n\";\n      }\n      text = pdfText;\n      break;\n    default:\n      await sendErrorMessage(newMessage, message, isAuto);\n      return;\n  }\n  if (text === \"\") {\n    await sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n\n  documentAISummary({\n    content: text,\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response?.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            message: message,\n            summaryInfo: response?.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function voiceSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const voice = message.content?.voice;\n  if (!voice) return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  let text = \"\";\n  const global = getGlobal();\n  const { isTranscriptionError, transcriptionId } = message;\n  if (isTranscriptionError) {\n    sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n  if (transcriptionId && transcriptionId !== \"\") {\n    text = global?.transcriptions?.[transcriptionId]?.text;\n  } else {\n    await getActions().transcribeAudio({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    await sleep(2000);\n    const newGlobal = getGlobal();\n    const currentMessage = selectChatMessage(\n      newGlobal,\n      message.chatId,\n      message.id\n    );\n    if (currentMessage?.isTranscriptionError) {\n      sendErrorMessage(newMessage, message, isAuto);\n      return;\n    }\n    if (\n      currentMessage?.transcriptionId &&\n      currentMessage?.transcriptionId !== \"\"\n    ) {\n      text = newGlobal.transcriptions?.[currentMessage?.transcriptionId]?.text;\n    }\n  }\n  if (text === \"\") {\n    await sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n  documentAISummary({\n    content: text,\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response?.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            message: message,\n            summaryInfo: response?.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function voiceToAudioSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const voice = message.content?.voice;\n  if (!voice) return;\n  const mediaHash = getMediaHash(voice, \"download\");\n  if (!mediaHash) return;\n  const maxBase64Length = Math.floor(4 * 1024 * 1024);\n  if (\n    message.content.audio?.size &&\n    message.content.audio?.size * (4 / 3) > maxBase64Length\n  ) {\n    showMessage.info(\"File size exceeds limit (4 MB)\");\n    return;\n  }\n  //\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  await handleAudioToSummaryText({\n    mediaHash,\n    mimeType: \"audio/ogg\",\n    filename: voice?.id + \".ogg\",\n    size: voice?.size,\n    newMessage,\n    message,\n    isAuto,\n  });\n}\n\nexport async function audioSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const audio = message.content?.audio;\n  if (!audio) return;\n  const mediaHash = getMediaHash(audio, \"download\");\n  if (!mediaHash) return;\n  //\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  await handleAudioToSummaryText({\n    mediaHash,\n    mimeType: audio?.mimeType,\n    filename: audio?.fileName,\n    size: audio?.size,\n    newMessage,\n    message,\n    isAuto,\n  });\n}\n\nexport async function videoSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const video = message.content?.video;\n  if (!video) return;\n  const mediaHash = getMediaHash(video, \"download\");\n  if (!mediaHash) return;\n  //\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n  if (video?.mimeType !== \"video/mp4\") {\n    await sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n\n  await handleAudioToSummaryText({\n    mediaHash,\n    mimeType: video?.mimeType,\n    filename: video?.fileName,\n    size: video?.size,\n    newMessage,\n    message,\n    isAuto,\n  });\n}\n\nasync function sendMessageToAIRoom(newMessage: StoreMessage) {\n  await ChataiStores.message?.storeMessage(newMessage);\n  await eventEmitter.emit(Actions.AddRoomAIMessage, newMessage);\n}\n\nasync function handleAudioToSummaryText({\n  mediaHash,\n  mimeType,\n  filename,\n  size,\n  newMessage,\n  message,\n  isAuto,\n}: {\n  mediaHash: string;\n  mimeType?: string;\n  filename?: string;\n  size?: number;\n  newMessage: StoreMessage;\n  message: ApiMessage;\n  isAuto: boolean;\n}) {\n  try {\n    // check size\n    if (size && size > 4.5 * 1024 * 1024) {\n      showMessage.info(\"File size exceeds limit (4.5 MB)\");\n      newMessage = {\n        ...newMessage,\n        content: JSON.stringify({\n          message,\n          errorMsg: \"File size exceeds limit (4.5 MB)\",\n          isAuto,\n          status: \"error\",\n        }),\n      };\n      await sendMessageToAIRoom(newMessage);\n      return;\n    }\n    // download\n    await mediaLoader.fetch(mediaHash, 0);\n    const blobUrl = mediaLoader.getFromMemory(mediaHash);\n    if (!blobUrl) {\n      sendErrorMessage(newMessage, message, isAuto);\n      return;\n    }\n\n    const response = await fetch(blobUrl);\n    const blob = await response.blob();\n    //\n    const formData = new FormData();\n    formData.append(\"file\", blob, filename || \"audio.ogg\");\n    formData.append(\"language\", getAutoTransLang());\n    if (mimeType) formData.append(\"mimeType\", mimeType);\n\n    const summaryResponse: any = await audioAISummary(formData);\n    if (summaryResponse?.text) {\n      newMessage = {\n        ...newMessage,\n        content: JSON.stringify({\n          message,\n          summaryInfo: summaryResponse?.text,\n          isAuto,\n          status: \"success\",\n        }),\n      };\n      sendMessageToAIRoom(newMessage);\n    } else {\n      sendErrorMessage(newMessage, message, isAuto);\n    }\n  } catch (err) {\n    console.log(\"error\", err);\n    sendErrorMessage(newMessage, message, isAuto);\n  }\n}\n\nasync function handleImageToSummaryText({\n  mimeType,\n  mediaHash,\n  message,\n  newMessage,\n  isAuto,\n}: {\n  mimeType: string;\n  mediaHash: string;\n  message: ApiMessage;\n  newMessage: StoreMessage;\n  isAuto: boolean;\n}) {\n  // download\n  await mediaLoader.fetch(mediaHash, 0);\n  const blobUrl = mediaLoader.getFromMemory(mediaHash);\n  if (!blobUrl) {\n    sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n\n  const response = await fetch(blobUrl);\n  const blob = await response.blob();\n\n  const reader = new FileReader();\n  reader.onloadend = function () {\n    const base64Data = reader.result?.toString().split(\",\")[1] || \"\";\n    imageAISummary({\n      image: `data:${mimeType};base64,` + base64Data,\n      language: getAutoTransLang(),\n    })\n      .then((response: any) => {\n        if (response?.text) {\n          newMessage = {\n            ...newMessage,\n            content: JSON.stringify({\n              message,\n              summaryInfo: JSON.stringify({ text: response?.text }),\n              isAuto,\n              status: \"success\",\n            }),\n          };\n          sendMessageToAIRoom(newMessage);\n        } else {\n          sendErrorMessage(newMessage, message, isAuto);\n        }\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n        sendErrorMessage(newMessage, message, isAuto);\n      });\n  };\n  reader.readAsDataURL(blob);\n}\n\nexport function canSummarize(message: ApiMessage) {\n  const { photo, document, webPage, voice, audio, text, video } =\n    message?.content;\n  const isUrl = checkIsUrl(text?.text);\n  const hasText = text?.text && text.text.trim() !== \"\";\n\n  return photo || document || (webPage && !hasText) || voice || audio || isUrl || video;\n}\n\nexport function isHasUrl(text?: string) {\n  const urls = extractUrls(text);\n  const hasUrl = urls.length > 0;\n\n  return hasUrl;\n}\n\nexport function checkIsUrl(text?: string) {\n  return (\n    typeof text === \"string\" &&\n    /^https?:\\/\\/[\\w\\-._~:/?#[\\]@!$&'()*+,;=%]+$/i.test(text)\n  );\n}\n\nexport function checkIsImage(mimeType: string) {\n  return mimeType.startsWith(\"image/\");\n}\n\nasync function sendErrorMessage(\n  newMessage: StoreMessage,\n  message: ApiMessage,\n  isAuto: boolean\n) {\n  newMessage = {\n    ...newMessage,\n    content: JSON.stringify({\n      message,\n      isAuto,\n      status: \"error\",\n    }),\n  };\n  await sendMessageToAIRoom(newMessage);\n}\n\nexport function getAutoTransLang() {\n  const global = getGlobal();\n  const { autoTranslateLanguage = \"en\" } = global.settings.byKey;\n\n  return (\n    new Intl.DisplayNames([autoTranslateLanguage], { type: \"language\" }).of(\n      autoTranslateLanguage\n    ) || \"en\"\n  );\n}\n\nexport function extractUrls(text?: string): string[] {\n  if (typeof text !== \"string\") return [];\n\n  const urlRegex = /https?:\\/\\/[\\w\\-._~:/?#[\\]@!$&'()*+,;=%]+/gi;\n  return text.match(urlRegex) || [];\n}\n\nexport function checkIsVideo(mimeType: string) {\n  return ['video/mp4'].indexOf(mimeType) >= 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = peer.usernames?.[0]?.username;\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  AI_FOLDER_ID, ALL_FOLDER_ID, PRESET_FOLDER_ID, UNREAD_FOLDER_ID,\n} from '../config';\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport { filterAITag, filterPresetTag } from '../components/chatAssistant/ai-chatfolders/tag-filter';\nimport { isChatBot } from '../components/chatAssistant/ai-chatfolders/util';\nimport { GLOBAL_SUMMARY_CHATID } from '../components/chatAssistant/variables';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  if (folderId === UNREAD_FOLDER_ID) {\n    return getUnreadChatsByFolderId()[ALL_FOLDER_ID];\n  }\n  if (folderId === PRESET_FOLDER_ID) {\n    return filterPresetTag(getOrderedIds(ALL_FOLDER_ID)?.filter((i) => !isChatBot(i)));\n  }\n  if (folderId === AI_FOLDER_ID) {\n    return filterAITag(getOrderedIds(ALL_FOLDER_ID)?.filter((i) => !isChatBot(i)));\n  }\n  if (folderId === ALL_FOLDER_ID) {\n    const res = getOrderedIds(folderId);\n    if (res && res?.indexOf(GLOBAL_SUMMARY_CHATID) < 0) {\n      res?.unshift(GLOBAL_SUMMARY_CHATID);\n    } else {\n      res?.sort((a, b) => (a === GLOBAL_SUMMARY_CHATID ? -1 : b === GLOBAL_SUMMARY_CHATID ? 1 : 0));\n    }\n\n    return res;\n  }\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './browser/windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'premiumGiftStars') {\n    const {\n      months, userId, message,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'premiumGiftStars',\n      months,\n      message,\n      user,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, boostPeerId } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: boostPeerId,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import copy from 'copy-to-clipboard';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { selectChatTranslations } from '../../../../global/selectors';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n    const global = getGlobal();\n    const { id: messageId, chatId } = message;\n    const chatTranslations = selectChatTranslations(global, chatId);\n    const { autoTranslateLanguage } = global.settings.byKey;\n    const messageTranslation = autoTranslateLanguage && messageId\n      ? chatTranslations?.byLangCode[autoTranslateLanguage]?.[messageId] : undefined;\n    const { isPending, text: translatedText } = messageTranslation || {};\n    if (translatedText && !isPending) {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            copy(translatedText.text);\n          }\n          afterEffect?.();\n        },\n      });\n    } else {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          const messageIds = getMessageIdsForSelectedText();\n          if (messageIds?.length && onCopyMessages) {\n            onCopyMessages(messageIds);\n          } else if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            const clipboardText = renderMessageText(\n              { message, shouldRenderAsHtml: true },\n            );\n            if (clipboardText) {\n              copyHtmlToClipboard(\n                clipboardText.join(''),\n                getMessageTextWithSpoilers(message, statefulContent)!,\n              );\n            }\n          }\n\n          afterEffect?.();\n        },\n      });\n    }\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n  isUserId,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\n// import SerenaPath from '../../chatAssistant/assets/serena.png';\n// import { canSummarize } from '../../chatAssistant/utils/ai-analyse-message';\n// import { AIReplyIcon, MeetingIcon, SummarizeIcon } from '../../chatAssistant/utils/icons';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  // canSmartReply?: boolean;\n  // canScheduleMeeting?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  // onSmartReply?: NoneToVoidFunction;\n  // onScheduleMeet?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  // onSummarize?: NoneToVoidFunction;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  // canSmartReply,\n  // canScheduleMeeting,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  // onSmartReply,\n  // onScheduleMeet,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  // onSummarize,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n  // const canAISummarize = canSummarize(message);\n  // const canSerenaAI = canAISummarize || canScheduleMeeting || canSmartReply;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? lang('SendAnotherGift')\n                : lang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n\n        {/* {canSerenaAI && (\n          <MenuItem\n            customIcon={(\n              <img\n                src={SerenaPath}\n                className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n                alt=\"\"\n              />\n            )}\n            submenu={(\n              <>\n                {canScheduleMeeting && (\n                  <MenuItem\n                    customIcon={(\n                      <div className=\"mr-[1.25rem]\">\n                        <MeetingIcon width={20} height={20} />\n                      </div>\n                    )}\n                    onClick={onScheduleMeet}\n                  >\n                    {lang('Schedule Meeting')}\n                  </MenuItem>\n                )}\n                {canAISummarize && (\n                  <MenuItem\n                    customIcon={(\n                      <div className=\"mr-[1.25rem]\">\n                        <SummarizeIcon width={20} height={20} />\n                      </div>\n                    )}\n                    onClick={onSummarize}\n                  >\n                    {lang('Summarize')}\n                  </MenuItem>\n                )}\n                {canSmartReply && (\n                  <MenuItem\n                    customIcon={(\n                      <div className=\"mr-[1.25rem]\">\n                        <AIReplyIcon width={20} height={20} />\n                      </div>\n                    )}\n                    onClick={onSmartReply}\n                  >\n                    {lang('AI Reply')}\n                  </MenuItem>\n                )}\n              </>\n            )}\n          >\n            {lang('SerenaAI')}\n          </MenuItem>\n        )} */}\n\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {/* {canSmartReply && (\n          <MenuItem\n            customIcon={(\n              <img\n                className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n                src={SmartReplyIcon}\n                alt=\"\"\n              />\n            )}\n            onClick={onSmartReply}\n          >\n            {lang('Smart Reply')}\n          </MenuItem>\n        )} */}\n        {/* {canScheduleMeeting && (\n          <MenuItem\n            customIcon={(\n              <img\n                className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n                src={ScheduleMeetingIcon}\n                alt=\"\"\n              />\n            )}\n            onClick={onScheduleMeet}\n          >\n            {lang('Schedule a Meeting')}\n          </MenuItem>\n        )} */}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageContent,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageText,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport {\n  audioSummary, checkIsUrl, documentSummary, photoSummary, videoSummary, voiceToAudioSummary, webPageSummary,\n} from '../../chatAssistant/utils/ai-analyse-message';\nimport { chatAIGenerate } from '../../chatAssistant/utils/chat-api';\nimport { createAuthConfirmModal } from '../../chatAssistant/utils/google-api';\nimport { getAuthState, isTokenValid } from '../../chatAssistant/utils/google-auth';\nimport ScheduleMeeting from '../../chatAssistant/utils/schedule-meeting';\nimport { knowledgeEmbeddingStore } from '../../chatAssistant/vector-store';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport eventEmitter from '../../chatAssistant/lib/EventEmitter';\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canSmartReply?: boolean;\n  canScheduleMeeting?:boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  // canSmartReply,\n  // canScheduleMeeting,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n    openChatAIWithInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text!.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSmartReply = useLastCallback(async () => {\n    closeMenu();\n    if (message.content.text?.text) {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n      });\n      const vectorSearchResults = await knowledgeEmbeddingStore.similaritySearch({\n        query: message.content.text?.text,\n      });\n      type Metadata = { answer: string }; // Define the type for metadata\n      const similarResult = vectorSearchResults.similarItems[0] as { metadata: Metadata; score: number } | undefined;\n      if (similarResult && similarResult.score > 0.8) {\n        eventEmitter.emit('update-input-text', similarResult.metadata.answer);\n      } else {\n        eventEmitter.emit('update-input-spiner', true);\n        chatAIGenerate({\n          data: {\n            messages: [\n              {\n                role: 'system',\n                content: '你是一个多语种智能助手。接收用户消息后，自动识别其使用的语言，并用相同的语言进行自然、得体的回复。你应该理解消息的语境，确保回复简洁、友好且符合语言习惯。',\n                id: '1',\n              },\n              {\n                role: 'user',\n                content: `请回复下面的消息: ${message.content.text?.text}`,\n                id: '2',\n              },\n            ],\n          },\n          onResponse: (response) => {\n            eventEmitter.emit('update-input-text', response);\n          },\n          onFinish: () => {\n            // eslint-disable-next-line no-console\n            console.log('Finish');\n          },\n        });\n      }\n    }\n  });\n\n  const handleScheduleMeeting = useLastCallback(() => {\n    const chatId = message.chatId;\n    const text = getMessageContent(message)?.text?.text || '';\n    const scheduleMeeting = ScheduleMeeting.create({ chatId });\n    const auth = getAuthState();\n    if (!auth || !isTokenValid(auth)) {\n      createAuthConfirmModal({\n        onOk: () => {\n          scheduleMeeting.start({\n            chatId,\n            text,\n          });\n        },\n      });\n    } else {\n      scheduleMeeting.start({\n        chatId,\n        text,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  const handleSummarize = useLastCallback(async () => {\n    const {\n      photo, document, webPage, voice, audio, text, video,\n    } = message.content;\n    const isUrl = checkIsUrl(text?.text);\n    await openChatAIWithInfo({ chatId: message.chatId });\n    if (photo) {\n      photoSummary(message);\n    } else if ((webPage && !text?.text) || isUrl) {\n      webPageSummary(message);\n    } else if (document) {\n      documentSummary(message);\n    } else if (voice) {\n      voiceToAudioSummary(message);\n    } else if (audio) {\n      audioSummary(message);\n    } else if (video) {\n      videoSummary(message);\n    }\n    closeMenu();\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        // canSmartReply={canSmartReply}\n        // canScheduleMeeting={canScheduleMeeting}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        // onSmartReply={handleSmartReply}\n        // onScheduleMeet={handleScheduleMeeting}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        // onSummarize={handleSummarize}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n    const hasTextContent = hasMessageText(message);\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canSmartReply: !isPinned && !isScheduled && canReplyGlobally && canSendText && hasTextContent,\n      canScheduleMeeting: !isOwn && hasTextContent,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n"],"names":["pdfjsLib","workerSrc","mammoth","require","async","replyToMention","message","isAuto","isMentioned","content","text","newMessage","chatId","timestamp","Date","getTime","id","uuidv4","createdAt","role","annotations","type","JSON","stringify","messageId","status","sendMessageToAIRoom","mentionReply","language","getAutoTransLang","then","response","replys","sendErrorMessage","catch","err","console","log","photoSummary","photo","mediaHash","getMediaHash","handleImageToSummaryText","mimeType","webPageSummary","webPage","url","webPageAISummary","summaryInfo","documentSummary","document","checkIsImage","indexOf","handleAudioToSummaryText","filename","fileName","size","mediaLoader","blobUrl","fetch","blob","arrayBuffer","TextDecoder","decode","extractRawText","value","pdf","data","promise","pdfText","i","numPages","page","getPage","getTextContent","items","map","item","str","join","documentAISummary","voiceToAudioSummary","voice","maxBase64Length","Math","floor","audio","showMessage","info","audioSummary","videoSummary","video","ChataiStores","storeMessage","eventEmitter","emit","Actions","AddRoomAIMessage","errorMsg","formData","FormData","append","summaryResponse","audioAISummary","reader","FileReader","onloadend","base64Data","result","toString","split","imageAISummary","image","readAsDataURL","canSummarize","isUrl","checkIsUrl","hasText","trim","test","startsWith","global","getGlobal","autoTranslateLanguage","settings","byKey","Intl","DisplayNames","of","memo","withGlobal","peerId","forceShowSelf","peer","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","title","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","className","withPeerColors","withEmojiStatus","onClick","itemClassName","lang","useOldLang","apiPeer","anyPeer","chat","isApiPeerChat","undefined","iconElement","titleElement","titleText","React","createElement","Icon","name","style","Avatar","getPeerTitle","FullNameTitle","fullClassName","buildClassName","isForum","isAvatarSquare","getPeerColorClass","dir","isRtl","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","reaction","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","ref","useRef","isCustom","availableReaction","useMemo","find","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","documentId","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","random","length","isIntersecting","useIsIntersecting","mediaHashCenterIcon","getStickerHashById","mediaHashEffect","mediaDataCenterIcon","useMedia","mediaDataEffect","activeReaction","active","shouldPlayEffect","Boolean","shouldPlayCenter","shouldRender","shouldRenderEffect","transitionClassNames","animationClassNames","useShowTransitionDeprecated","shouldRenderCenter","centerAnimationClassNames","handleEnded","useLastCallback","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","useFlag","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","styles","root","animating","ReactionStaticEmoji","CustomEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","key","animatedIcon","roundToNearestEven","tgsUrl","play","noLoop","onLoad","onEnded","Fragment","effect","CustomEmojiEffect","particleSize","max","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","entry","lastHeight","current","newHeight","contentRect","height","isAnimatingScroll","container","target","closest","beginHeavyAnimation","resizeDiff","offsetHeight","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useResizeObserver","callback","delay","savedCallback","useEffect","setTimeout","clearTimeout","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","tabIndex","onChange","e","MIN_PASSWORD_LENGTH","maxLength","Button","ripple","disabled","getOffsetToContainer","element","offsetTop","offsetLeft","contains","offsetParent","top","left","withIconHeart","staticIconId","staticIcon","mediaData","useMediaTransitionDeprecated","shouldApplySizeFix","shouldReplaceWithHeartIcon","src","blankUrl","alt","draggable","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","shiftX","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","min","newTailPosition","hasFloatingBadge","isProgressFull","buildStyle","width","viewBox","fill","d","props","isOpen","CalendarModal","useModuleLoader","Bundles","Extra","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","date","isWhenOnline","scheduledAt","now","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onClose","onSecondButtonClick","AvatarList","peers","limit","badgeText","pxSize","AVATAR_SIZES","renderingBadgeText","slice","MediaSpoiler","isVisible","withAnimation","thumbDataUri","canvasRef","useCanvasBlur","handleClick","el","rect","currentTarget","getBoundingClientRect","x","clientX","y","clientY","shiftY","setAttribute","usePrevious","prevRef","lastRef","useHorizontalScroll","containerRef","isDisabled","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","getStickerMediaHash","previewUrl","preloadImage","patternPositions","coordinates","ring","ringItemCount","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","push","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","forEach","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","isElementInViewport","display","windowHeight","windowSize","get","MAX_EFFECT_COUNT","IS_IOS","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","AnimatedIcon","LOCAL_TGS_URLS","StarReactionEffect","nonInteractive","quality","REACTION_SIZE","selectStarsState","stars","ReactionButton","isOwnMessage","recentReactors","chosenClassName","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","useLang","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","count","stopPropagation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","getComputedStyle","scale","cancel","animate","offset","duration","easing","prevAmount","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","chosen","onMouseDown","onContextMenu","Sparkles","preset","animatedEmoji","AnimatedCounter","formatIntegerCompact","paidCounter","counter","Reactions","threadId","maxWidth","metaChildren","noRecentReactors","isCurrentUserPremium","tags","isAccountFrozen","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","openPremiumModal","showNotification","openFrozenAccountModal","results","areTags","recentReactions","withServiceReactions","areReactionsPossible","totalCount","reduce","acc","recentReactorsByReactionKey","recentReaction","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","actionText","cacheBreaker","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","isOutgoing","withContextMenu","onRemove","RADIUS","ITERATIONS","dataUri","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","fastBlur","onload","requestMeasure","PickerItem","subtitle","avatarElement","inputElement","inputPosition","inactive","titleClassName","subtitleClassName","onDisabledClick","isClickable","RippleEffect","renderMessageText","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","maxTimestamp","entities","contentNotSupportedText","getMessageText","trimText","renderTextWithEntities","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","getMessageSummaryText","renderText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","useEnsureMessage","replyOriginForId","loadMessage","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","timeoutId","window","lockedSelectedIdsSet","Set","lockedUnselectedIdsSet","unlockedSelectedIds","has","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","categoryType","newSelectedCategories","includes","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","username","usernames","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","Radio","checked","onlyInput","Checkbox","beforeChildren","pickerCategoryTitle","header","peerChip","InputText","InfiniteScroll","pickerList","padded","itemSelector","Loading","noResults","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","cb","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","selectCanAnimateInterface","getAttribute","containerWidth","scrollWidth","dataset","scrollId","path","remainingPath","Promise","resolve","isStopped","set","scrollSnapType","startAt","cleanup","delete","t","currentPath","transition","CUSTOM_PEER_PREMIUM","isCustomPeer","titleKey","subtitleKey","avatarIcon","withPremiumGradient","CUSTOM_PEER_INCLUDED_CHAT_TYPES","peerColorId","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","loadedPreviewUrls","otherProps","isThumbOpen","unmarkThumbOpen","thumbClassNames","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","add","handleAnimationReady","_extends","useCustomBackground","theme","settingValue","setThemeSettings","setValue","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","URL","createObjectURL","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","getStickerFromGift","gift","sticker","attributes","attr","getTotalGiftAvailability","availabilityTotal","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","characters","elements","textLength","prevTextLength","charIndex","prevTextCharIndex","unshift","renderAnimatedCharacters","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","isTextBox","disableScrolling","_excludedClosestSelector","onkeydown","enableScrolling","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","UNREAD_FOLDER_ID","getUnreadChatsByFolderId","ALL_FOLDER_ID","PRESET_FOLDER_ID","filterPresetTag","getOrderedIds","isChatBot","AI_FOLDER_ID","filterAITag","res","GLOBAL_SUMMARY_CHATID","sort","a","b","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","ReactionSelectorCustomReaction","isReady","noAppearAnimation","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","cn","createClassNameBuilder","ReactionSelector","allAvailableReactions","topReactions","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isPrivate","canPlayAnimatedEmojis","isInSavedMessages","isInStoryViewer","isForEffects","effectReactions","isWithPaidReaction","onShowMore","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","Link","color","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","animateScroll","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","noLoad","forcePreview","thumbnail","localMediaHash","previewBlobUrl","ApiMediaFormat","BlobUrl","AnimatedIconWithPreview","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","isVerified","ENTITY_CLASS_BY_NODE_NAME","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","parseHtmlAsFormattedText","html","withMarkdownLinks","skipMarkdown","fragment","innerHTML","parsedHtml","replace","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","textIndex","recursionDeepness","addEntity","node","nodeType","Node","COMMENT_NODE","index","entity","rawText","entityType","nodeName","anchor","MentionName","Url","href","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","substring","userId","Timestamp","isNaN","getEntityDataFromNode","hasChildNodes","from","childNodes","querySelectorAll","replaceWith","ELEMENT_NODE","getMessageIdsForSelectedText","selection","getSelection","selectedFragments","rangeCount","getRangeAt","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageIds","children","classList","messageEl","firstChild","removeChild","pop","parentNode","BadgeButton","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","abs","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","isLottie","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","withSharedAnimation","onAnimationEnd","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","currency","purpose","hash","months","userIds","boostChannelId","option","users","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","savedId","buildStarsTransactionCustomPeer","customPeerAvatarColor","formatStarsTransactionAmount","starsAmount","nanos","number","formatStarsAmount","getStarsTransactionFromGift","transactionId","senderId","isGift","isMyGift","getPrizeStarsTransactionFromGiveaway","boostPeerId","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","getTriggerElement","getRootElement","body","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","onCloseAnimationEnd","MenuItem","destructive","div","ALLOWED_QUOTE_ENTITIES","getSelectionAsFormattedText","range","clonedSelection","appendChild","commonAncestorContainer","currentElement","parentElement","wrapHtmlWithMarkupTags","getSelectionAsHtml","stripEntitiesForQuote","PinMessageModal","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","Transition","activeKey","handleOpenModal","isReadDate","MessageContextMenu","isReactionPickerOpen","poll","story","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","onReply","onOpenThread","onEdit","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","userFullName","canGift","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","scrollableRef","noReactions","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","copyOptions","afterEffect","options","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","label","handler","copyImageToClipboard","copyTextToClipboard","anchorNode","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","chatTranslations","selectChatTranslations","messageTranslation","byLangCode","isPending","translatedText","execCommand","copy","clipboardText","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","extraHeightAudioPlayer","middleColumn","getElementById","middleColumnComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","messagesCount","withPreventDefaultOnMouseDown","MenuSeparator","inline","withWrap","reactors","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","UNQUOTABLE_OFFSET","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","storyData","selectPeerStory","selectCanGift","hasTextContent","hasMessageText","canSmartReply","canScheduleMeeting","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","ContextMenuContainer","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","reportMessages","openChatAIWithInfo","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","calendar","chatsById","chats","byId","usersById","uniqueReactors","PREVIEW_AVATAR_COUNT","messages","msg","downloadableMedia","getMessageDownloadableMedia","getIsDownloading","selectionRange","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","startOffset","endOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","replyToPeerId","fromChatId","handleOpenThread","similarResult","knowledgeEmbeddingStore","similaritySearch","query","similarItems","score","metadata","answer","chatAIGenerate","onResponse","onFinish","getMessageContent","scheduleMeeting","ScheduleMeeting","create","auth","getAuthState","isTokenValid","start","createAuthConfirmModal","onOk","handleEdit","handlePin","handleUnpin","isUnpin","handleForward","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","getMessageVideo","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","ConfirmDialog","confirmLabel","confirmHandler"],"sourceRoot":""}