{"version":3,"file":"2394.75e36901459d579ccadd.js","mappings":"0HAAO,MAAMA,EAAa,IAAIC,YAAY,CACxC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,KAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,GAAQ,KAAQ,GAAQ,KAAQ,GAAQ,KACxF,GAAQ,KAAQ,GAAQ,KAAQ,GAAQ,KAAQ,GAAQ,KAAQ,GAAQ,KAAQ,GAAQ,KACxF,GAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,QAG7DC,EAAgB,CAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5C,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5C,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5C,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvD,IAAK,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","sources":["webpack://TeleGPT/./src/util/phoneCallEmojiConstants.ts","webpack://TeleGPT/./src/components/right/DeleteMemberModal.tsx","webpack://TeleGPT/./src/global/actions/apiUpdaters/calls.async.ts","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipant.tsx","webpack://TeleGPT/./src/bundles/calls.ts","webpack://TeleGPT/./src/global/actions/ui/calls.ts","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipantList.module.scss?6462","webpack://TeleGPT/./src/components/calls/phone/PhoneCall.module.scss?a250","webpack://TeleGPT/./src/components/calls/phone/RatePhoneCallModal.tsx","webpack://TeleGPT/./src/lib/secret-sauce/utils.ts","webpack://TeleGPT/./src/lib/secret-sauce/parseSdp.ts","webpack://TeleGPT/./src/lib/secret-sauce/buildSdp.ts","webpack://TeleGPT/./src/lib/secret-sauce/blacksilence.ts","webpack://TeleGPT/./src/lib/secret-sauce/secretsauce.ts","webpack://TeleGPT/./src/lib/secret-sauce/p2p.ts","webpack://TeleGPT/./src/global/actions/api/calls.async.ts","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipant.module.scss?2375","webpack://TeleGPT/./src/types/electron.ts","webpack://TeleGPT/./src/components/calls/group/MicrophoneButton.tsx","webpack://TeleGPT/./src/components/calls/phone/RatePhoneCallModal.module.scss?64f6","webpack://TeleGPT/./src/components/calls/group/GroupCall.tsx","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipantVideo.tsx","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipantVideo.module.scss?799e","webpack://TeleGPT/./src/components/calls/phone/PhoneCall.tsx","webpack://TeleGPT/./src/components/calls/ActiveCallHeader.tsx","webpack://TeleGPT/./src/util/vibrate.ts","webpack://TeleGPT/./src/hooks/useRunThrottled.ts","webpack://TeleGPT/./src/components/calls/group/MicrophoneButton.module.scss?3a9a","webpack://TeleGPT/./src/components/calls/group/OutlinedMicrophoneIcon.tsx","webpack://TeleGPT/./src/components/calls/phone/PhoneCallButton.module.scss?9dea","webpack://TeleGPT/./src/components/calls/group/helpers/formatGroupCallVolume.ts","webpack://TeleGPT/./src/components/calls/phone/PhoneCallButton.tsx","webpack://TeleGPT/./src/components/calls/group/GroupCall.module.scss?4417","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipantList.tsx","webpack://TeleGPT/./src/hooks/window/useFullscreen.ts","webpack://TeleGPT/./src/components/calls/group/hooks/useGroupCallVideoLayout.ts","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipantMenu.tsx"],"sourcesContent":["export const EMOJI_DATA = new Uint16Array([\n  0xd83d, 0xde09, 0xd83d, 0xde0d, 0xd83d, 0xde1b, 0xd83d, 0xde2d, 0xd83d, 0xde31, 0xd83d, 0xde21,\n  0xd83d, 0xde0e, 0xd83d, 0xde34, 0xd83d, 0xde35, 0xd83d, 0xde08, 0xd83d, 0xde2c, 0xd83d, 0xde07,\n  0xd83d, 0xde0f, 0xd83d, 0xdc6e, 0xd83d, 0xdc77, 0xd83d, 0xdc82, 0xd83d, 0xdc76, 0xd83d, 0xdc68,\n  0xd83d, 0xdc69, 0xd83d, 0xdc74, 0xd83d, 0xdc75, 0xd83d, 0xde3b, 0xd83d, 0xde3d, 0xd83d, 0xde40,\n  0xd83d, 0xdc7a, 0xd83d, 0xde48, 0xd83d, 0xde49, 0xd83d, 0xde4a, 0xd83d, 0xdc80, 0xd83d, 0xdc7d,\n  0xd83d, 0xdca9, 0xd83d, 0xdd25, 0xd83d, 0xdca5, 0xd83d, 0xdca4, 0xd83d, 0xdc42, 0xd83d, 0xdc40,\n  0xd83d, 0xdc43, 0xd83d, 0xdc45, 0xd83d, 0xdc44, 0xd83d, 0xdc4d, 0xd83d, 0xdc4e, 0xd83d, 0xdc4c,\n  0xd83d, 0xdc4a, 0x270c, 0x270b, 0xd83d, 0xdc50, 0xd83d, 0xdc46, 0xd83d, 0xdc47, 0xd83d, 0xdc49,\n  0xd83d, 0xdc48, 0xd83d, 0xde4f, 0xd83d, 0xdc4f, 0xd83d, 0xdcaa, 0xd83d, 0xdeb6, 0xd83c, 0xdfc3,\n  0xd83d, 0xdc83, 0xd83d, 0xdc6b, 0xd83d, 0xdc6a, 0xd83d, 0xdc6c, 0xd83d, 0xdc6d, 0xd83d, 0xdc85,\n  0xd83c, 0xdfa9, 0xd83d, 0xdc51, 0xd83d, 0xdc52, 0xd83d, 0xdc5f, 0xd83d, 0xdc5e, 0xd83d, 0xdc60,\n  0xd83d, 0xdc55, 0xd83d, 0xdc57, 0xd83d, 0xdc56, 0xd83d, 0xdc59, 0xd83d, 0xdc5c, 0xd83d, 0xdc53,\n  0xd83c, 0xdf80, 0xd83d, 0xdc84, 0xd83d, 0xdc9b, 0xd83d, 0xdc99, 0xd83d, 0xdc9c, 0xd83d, 0xdc9a,\n  0xd83d, 0xdc8d, 0xd83d, 0xdc8e, 0xd83d, 0xdc36, 0xd83d, 0xdc3a, 0xd83d, 0xdc31, 0xd83d, 0xdc2d,\n  0xd83d, 0xdc39, 0xd83d, 0xdc30, 0xd83d, 0xdc38, 0xd83d, 0xdc2f, 0xd83d, 0xdc28, 0xd83d, 0xdc3b,\n  0xd83d, 0xdc37, 0xd83d, 0xdc2e, 0xd83d, 0xdc17, 0xd83d, 0xdc34, 0xd83d, 0xdc11, 0xd83d, 0xdc18,\n  0xd83d, 0xdc3c, 0xd83d, 0xdc27, 0xd83d, 0xdc25, 0xd83d, 0xdc14, 0xd83d, 0xdc0d, 0xd83d, 0xdc22,\n  0xd83d, 0xdc1b, 0xd83d, 0xdc1d, 0xd83d, 0xdc1c, 0xd83d, 0xdc1e, 0xd83d, 0xdc0c, 0xd83d, 0xdc19,\n  0xd83d, 0xdc1a, 0xd83d, 0xdc1f, 0xd83d, 0xdc2c, 0xd83d, 0xdc0b, 0xd83d, 0xdc10, 0xd83d, 0xdc0a,\n  0xd83d, 0xdc2b, 0xd83c, 0xdf40, 0xd83c, 0xdf39, 0xd83c, 0xdf3b, 0xd83c, 0xdf41, 0xd83c, 0xdf3e,\n  0xd83c, 0xdf44, 0xd83c, 0xdf35, 0xd83c, 0xdf34, 0xd83c, 0xdf33, 0xd83c, 0xdf1e, 0xd83c, 0xdf1a,\n  0xd83c, 0xdf19, 0xd83c, 0xdf0e, 0xd83c, 0xdf0b, 0x26a1, 0x2614, 0x2744, 0x26c4, 0xd83c, 0xdf00,\n  0xd83c, 0xdf08, 0xd83c, 0xdf0a, 0xd83c, 0xdf93, 0xd83c, 0xdf86, 0xd83c, 0xdf83, 0xd83d, 0xdc7b,\n  0xd83c, 0xdf85, 0xd83c, 0xdf84, 0xd83c, 0xdf81, 0xd83c, 0xdf88, 0xd83d, 0xdd2e, 0xd83c, 0xdfa5,\n  0xd83d, 0xdcf7, 0xd83d, 0xdcbf, 0xd83d, 0xdcbb, 0x260e, 0xd83d, 0xdce1, 0xd83d, 0xdcfa, 0xd83d,\n  0xdcfb, 0xd83d, 0xdd09, 0xd83d, 0xdd14, 0x23f3, 0x23f0, 0x231a, 0xd83d, 0xdd12, 0xd83d, 0xdd11,\n  0xd83d, 0xdd0e, 0xd83d, 0xdca1, 0xd83d, 0xdd26, 0xd83d, 0xdd0c, 0xd83d, 0xdd0b, 0xd83d, 0xdebf,\n  0xd83d, 0xdebd, 0xd83d, 0xdd27, 0xd83d, 0xdd28, 0xd83d, 0xdeaa, 0xd83d, 0xdeac, 0xd83d, 0xdca3,\n  0xd83d, 0xdd2b, 0xd83d, 0xdd2a, 0xd83d, 0xdc8a, 0xd83d, 0xdc89, 0xd83d, 0xdcb0, 0xd83d, 0xdcb5,\n  0xd83d, 0xdcb3, 0x2709, 0xd83d, 0xdceb, 0xd83d, 0xdce6, 0xd83d, 0xdcc5, 0xd83d, 0xdcc1, 0x2702,\n  0xd83d, 0xdccc, 0xd83d, 0xdcce, 0x2712, 0x270f, 0xd83d, 0xdcd0, 0xd83d, 0xdcda, 0xd83d, 0xdd2c,\n  0xd83d, 0xdd2d, 0xd83c, 0xdfa8, 0xd83c, 0xdfac, 0xd83c, 0xdfa4, 0xd83c, 0xdfa7, 0xd83c, 0xdfb5,\n  0xd83c, 0xdfb9, 0xd83c, 0xdfbb, 0xd83c, 0xdfba, 0xd83c, 0xdfb8, 0xd83d, 0xdc7e, 0xd83c, 0xdfae,\n  0xd83c, 0xdccf, 0xd83c, 0xdfb2, 0xd83c, 0xdfaf, 0xd83c, 0xdfc8, 0xd83c, 0xdfc0, 0x26bd, 0x26be,\n  0xd83c, 0xdfbe, 0xd83c, 0xdfb1, 0xd83c, 0xdfc9, 0xd83c, 0xdfb3, 0xd83c, 0xdfc1, 0xd83c, 0xdfc7,\n  0xd83c, 0xdfc6, 0xd83c, 0xdfca, 0xd83c, 0xdfc4, 0x2615, 0xd83c, 0xdf7c, 0xd83c, 0xdf7a, 0xd83c,\n  0xdf77, 0xd83c, 0xdf74, 0xd83c, 0xdf55, 0xd83c, 0xdf54, 0xd83c, 0xdf5f, 0xd83c, 0xdf57, 0xd83c,\n  0xdf71, 0xd83c, 0xdf5a, 0xd83c, 0xdf5c, 0xd83c, 0xdf61, 0xd83c, 0xdf73, 0xd83c, 0xdf5e, 0xd83c,\n  0xdf69, 0xd83c, 0xdf66, 0xd83c, 0xdf82, 0xd83c, 0xdf70, 0xd83c, 0xdf6a, 0xd83c, 0xdf6b, 0xd83c,\n  0xdf6d, 0xd83c, 0xdf6f, 0xd83c, 0xdf4e, 0xd83c, 0xdf4f, 0xd83c, 0xdf4a, 0xd83c, 0xdf4b, 0xd83c,\n  0xdf52, 0xd83c, 0xdf47, 0xd83c, 0xdf49, 0xd83c, 0xdf53, 0xd83c, 0xdf51, 0xd83c, 0xdf4c, 0xd83c,\n  0xdf50, 0xd83c, 0xdf4d, 0xd83c, 0xdf46, 0xd83c, 0xdf45, 0xd83c, 0xdf3d, 0xd83c, 0xdfe1, 0xd83c,\n  0xdfe5, 0xd83c, 0xdfe6, 0x26ea, 0xd83c, 0xdff0, 0x26fa, 0xd83c, 0xdfed, 0xd83d, 0xddfb, 0xd83d,\n  0xddfd, 0xd83c, 0xdfa0, 0xd83c, 0xdfa1, 0x26f2, 0xd83c, 0xdfa2, 0xd83d, 0xdea2, 0xd83d, 0xdea4,\n  0x2693, 0xd83d, 0xde80, 0x2708, 0xd83d, 0xde81, 0xd83d, 0xde82, 0xd83d, 0xde8b, 0xd83d, 0xde8e,\n  0xd83d, 0xde8c, 0xd83d, 0xde99, 0xd83d, 0xde97, 0xd83d, 0xde95, 0xd83d, 0xde9b, 0xd83d, 0xdea8,\n  0xd83d, 0xde94, 0xd83d, 0xde92, 0xd83d, 0xde91, 0xd83d, 0xdeb2, 0xd83d, 0xdea0, 0xd83d, 0xde9c,\n  0xd83d, 0xdea6, 0x26a0, 0xd83d, 0xdea7, 0x26fd, 0xd83c, 0xdfb0, 0xd83d, 0xddff, 0xd83c, 0xdfaa,\n  0xd83c, 0xdfad, 0xd83c, 0xddef, 0xd83c, 0xddf5, 0xd83c, 0xddf0, 0xd83c, 0xddf7, 0xd83c, 0xdde9,\n  0xd83c, 0xddea, 0xd83c, 0xdde8, 0xd83c, 0xddf3, 0xd83c, 0xddfa, 0xd83c, 0xddf8, 0xd83c, 0xddeb,\n  0xd83c, 0xddf7, 0xd83c, 0xddea, 0xd83c, 0xddf8, 0xd83c, 0xddee, 0xd83c, 0xddf9, 0xd83c, 0xddf7,\n  0xd83c, 0xddfa, 0xd83c, 0xddec, 0xd83c, 0xdde7, 0x0031, 0x20e3, 0x0032, 0x20e3, 0x0033, 0x20e3,\n  0x0034, 0x20e3, 0x0035, 0x20e3, 0x0036, 0x20e3, 0x0037, 0x20e3, 0x0038, 0x20e3, 0x0039, 0x20e3,\n  0x0030, 0x20e3, 0xd83d, 0xdd1f, 0x2757, 0x2753, 0x2665, 0x2666, 0xd83d, 0xdcaf, 0xd83d, 0xdd17,\n  0xd83d, 0xdd31, 0xd83d, 0xdd34, 0xd83d, 0xdd35, 0xd83d, 0xdd36, 0xd83d, 0xdd37,\n]);\n\nexport const EMOJI_OFFSETS = [\n  0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22,\n  24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46,\n  48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70,\n  72, 74, 76, 78, 80, 82, 84, 86, 87, 88, 90, 92,\n  94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116,\n  118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140,\n  142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164,\n  166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188,\n  190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212,\n  214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236,\n  238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 259,\n  260, 261, 262, 264, 266, 268, 270, 272, 274, 276, 278, 280,\n  282, 284, 286, 288, 290, 292, 294, 295, 297, 299, 301, 303,\n  305, 306, 307, 308, 310, 312, 314, 316, 318, 320, 322, 324,\n  326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348,\n  350, 351, 353, 355, 357, 359, 360, 362, 364, 365, 366, 368,\n  370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392,\n  394, 396, 398, 400, 402, 404, 406, 407, 408, 410, 412, 414,\n  416, 418, 420, 422, 424, 426, 427, 429, 431, 433, 435, 437,\n  439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 459, 461,\n  463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485,\n  487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 508,\n  510, 511, 513, 515, 517, 519, 521, 522, 524, 526, 528, 529,\n  531, 532, 534, 536, 538, 540, 542, 544, 546, 548, 550, 552,\n  554, 556, 558, 560, 562, 564, 566, 567, 569, 570, 572, 574,\n  576, 578, 582, 586, 590, 594, 598, 602, 606, 610, 614, 618,\n  620, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 641,\n  642, 643, 644, 646, 648, 650, 652, 654, 656, 658,\n];\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import type { ApiPhoneCall } from '../../../api/types';\nimport type { ApiCallProtocol } from '../../../lib/secret-sauce';\nimport type { ActionReturnType } from '../../types';\n\nimport {\n  handleUpdateGroupCallConnection,\n  handleUpdateGroupCallParticipants,\n  joinPhoneCall, processSignalingMessage,\n} from '../../../lib/secret-sauce';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { omit } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { EMOJI_DATA, EMOJI_OFFSETS } from '../../../util/phoneCallEmojiConstants';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport { updateGroupCall, updateGroupCallParticipant } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectActiveGroupCall, selectGroupCallParticipant, selectPhoneCallUser } from '../../selectors/calls';\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  const { activeGroupCallId } = global.groupCalls;\n\n  switch (update['@type']) {\n    case 'updateGroupCallLeavePresentation': {\n      actions.toggleGroupCallPresentation({ value: false });\n      break;\n    }\n    case 'updateGroupCallStreams': {\n      if (!update.userId || !activeGroupCallId) break;\n      if (!selectGroupCallParticipant(global, activeGroupCallId, update.userId)) break;\n\n      return updateGroupCallParticipant(global, activeGroupCallId, update.userId, omit(update, ['@type', 'userId']));\n    }\n    case 'updateGroupCallConnectionState': {\n      if (!activeGroupCallId) break;\n\n      if (update.connectionState === 'disconnected') {\n        if ('leaveGroupCall' in actions) actions.leaveGroupCall({ isFromLibrary: true, tabId: getCurrentTabId() });\n        break;\n      }\n\n      return updateGroupCall(global, activeGroupCallId, {\n        connectionState: update.connectionState,\n        isSpeakerDisabled: update.isSpeakerDisabled,\n      });\n    }\n    case 'updateGroupCallParticipants': {\n      const { groupCallId, participants } = update;\n      if (activeGroupCallId === groupCallId) {\n        void handleUpdateGroupCallParticipants(participants);\n      }\n      break;\n    }\n    case 'updateGroupCallConnection': {\n      if (update.data.stream) {\n        actions.showNotification({ message: 'Big live streams are not yet supported', tabId: getCurrentTabId() });\n        if ('leaveGroupCall' in actions) actions.leaveGroupCall({ tabId: getCurrentTabId() });\n        break;\n      }\n      void handleUpdateGroupCallConnection(update.data, update.presentation);\n\n      const groupCall = selectActiveGroupCall(global);\n      if (groupCall?.participants && Object.keys(groupCall.participants).length > 0) {\n        void handleUpdateGroupCallParticipants(Object.values(groupCall.participants));\n      }\n      break;\n    }\n    case 'updatePhoneCallMediaState':\n      return {\n        ...global,\n        phoneCall: {\n          ...global.phoneCall,\n          ...omit(update, ['@type']),\n        } as ApiPhoneCall,\n      };\n    case 'updatePhoneCall': {\n      if (!ARE_CALLS_SUPPORTED) return undefined;\n      const { phoneCall, currentUserId } = global;\n\n      const call: ApiPhoneCall = {\n        ...phoneCall,\n        ...update.call,\n      };\n\n      const isOutgoing = phoneCall?.adminId === currentUserId;\n\n      global = {\n        ...global,\n        phoneCall: call,\n      };\n      setGlobal(global);\n      global = getGlobal();\n\n      if (phoneCall && phoneCall.id && call.id !== phoneCall.id) {\n        if (call.state !== 'discarded') {\n          callApi('discardCall', {\n            call,\n            isBusy: true,\n          });\n        }\n        return undefined;\n      }\n\n      const {\n        accessHash, state, connections, gB,\n      } = call;\n\n      if (state === 'active' || state === 'accepted') {\n        if (!verifyPhoneCallProtocol(call.protocol)) {\n          const user = selectPhoneCallUser(global);\n          if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n          actions.showNotification({\n            message: langProvider.oldTranslate('VoipPeerIncompatible', user?.firstName),\n            tabId: getCurrentTabId(),\n          });\n          return undefined;\n        }\n      }\n\n      if (state === 'discarded') {\n        // Discarded from other device\n        if (!phoneCall) return undefined;\n\n        return updateTabState(global, {\n          ...(call.needRating && { ratingPhoneCall: call }),\n          isCallPanelVisible: undefined,\n        }, getCurrentTabId());\n      } else if (state === 'accepted' && accessHash && gB) {\n        (async () => {\n          const { gA, keyFingerprint, emojis } = await callApi('confirmPhoneCall', [gB, EMOJI_DATA, EMOJI_OFFSETS]);\n\n          global = getGlobal();\n          const newCall = {\n            ...global.phoneCall,\n            emojis,\n          } as ApiPhoneCall;\n\n          global = {\n            ...global,\n            phoneCall: newCall,\n          };\n          setGlobal(global);\n\n          callApi('confirmCall', {\n            call, gA, keyFingerprint,\n          });\n        })();\n      } else if (state === 'active' && connections && phoneCall?.state !== 'active') {\n        if (!isOutgoing) {\n          callApi('receivedCall', { call });\n          (async () => {\n            const { emojis } = await callApi('confirmPhoneCall', [call.gAOrB!, EMOJI_DATA, EMOJI_OFFSETS]);\n\n            global = getGlobal();\n            const newCall = {\n              ...global.phoneCall,\n              emojis,\n            } as ApiPhoneCall;\n\n            global = {\n              ...global,\n              phoneCall: newCall,\n            };\n            setGlobal(global);\n          })();\n        }\n        void joinPhoneCall(\n          connections,\n          actions.sendSignalingData,\n          isOutgoing,\n          Boolean(call?.isVideo),\n          Boolean(call.isP2pAllowed),\n          actions.apiUpdate,\n        );\n      }\n\n      return global;\n    }\n    case 'updatePhoneCallConnectionState': {\n      const { connectionState } = update;\n\n      if (!global.phoneCall) return global;\n\n      if (connectionState === 'closed' || connectionState === 'disconnected' || connectionState === 'failed') {\n        if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n        return undefined;\n      }\n\n      return {\n        ...global,\n        phoneCall: {\n          ...global.phoneCall,\n          isConnected: connectionState === 'connected',\n        },\n      };\n    }\n    case 'updatePhoneCallSignalingData': {\n      const { phoneCall } = global;\n\n      if (!phoneCall) {\n        break;\n      }\n\n      callApi('decodePhoneCallData', [update.data])?.then(processSignalingMessage);\n      break;\n    }\n  }\n\n  return undefined;\n});\n\nfunction verifyPhoneCallProtocol(protocol?: ApiCallProtocol) {\n  return protocol?.libraryVersions.some((version) => {\n    return version === '4.0.0' || version === '4.0.1';\n  });\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { GROUP_CALL_DEFAULT_VOLUME } from '../../../config';\nimport { THRESHOLD } from '../../../lib/secret-sauce';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport formatGroupCallVolume from './helpers/formatGroupCallVolume';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport GroupCallParticipantMenu from './GroupCallParticipantMenu';\nimport OutlinedMicrophoneIcon from './OutlinedMicrophoneIcon';\n\nimport styles from './GroupCallParticipant.module.scss';\n\ntype OwnProps = {\n  participant: TypeGroupCallParticipant;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n};\n\nconst GroupCallParticipant: FC<OwnProps & StateProps> = ({\n  participant,\n  peer,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const {\n    isSelf, isMutedByMe, isMuted, hasVideoStream, hasPresentationStream,\n  } = participant;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleBeforeContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isSelf);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => menuRef.current!,\n    [],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: true }),\n    [],\n  );\n\n  const hasCustomVolume = Boolean(\n    !isMuted && isSpeaking && participant.volume && participant.volume !== GROUP_CALL_DEFAULT_VOLUME,\n  );\n\n  const [aboutText, aboutColor] = useMemo(() => {\n    if (isMutedByMe) {\n      return [lang('VoipGroupMutedForMe'), styles.subtitleRed];\n    }\n\n    if (isRaiseHand) {\n      return [lang('WantsToSpeak'), styles.subtitleBlue];\n    }\n\n    if (hasCustomVolume) {\n      return [\n        lang('SpeakingWithVolume', formatGroupCallVolume(participant))\n          .replace('%%', '%'),\n        styles.subtitleGreen,\n      ];\n    }\n\n    if (!isMuted && isSpeaking) {\n      return [\n        lang('Speaking'),\n        styles.subtitleGreen,\n      ];\n    }\n\n    if (isSelf) {\n      return [lang('ThisIsYou'), styles.subtitleBlue];\n    }\n\n    return participant.about ? [participant.about, ''] : [lang('Listening'), styles.subtitleBlue];\n  }, [isMutedByMe, isRaiseHand, hasCustomVolume, isMuted, isSpeaking, isSelf, participant, lang]);\n\n  if (!peer) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      leftElement={<Avatar peer={peer} className={styles.avatar} />}\n      rightElement={<OutlinedMicrophoneIcon participant={participant} className={styles.icon} />}\n      className={styles.root}\n      onClick={handleContextMenu}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      multiline\n      ripple\n      ref={ref}\n    >\n      <FullNameTitle peer={peer} withEmojiStatus className={styles.title} />\n      <span className={buildClassName(styles.subtitle, 'subtitle', aboutColor)}>\n        {hasPresentationStream && <Icon name=\"share-screen\" />}\n        {hasVideoStream && <Icon name=\"video\" />}\n        {hasCustomVolume && <Icon name=\"speaker\" />}\n        <span className={styles.subtitleText}>{renderText(aboutText)}</span>\n      </span>\n      <GroupCallParticipantMenu\n        participant={participant}\n        isDropdownOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        getLayout={getLayout}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        menuRef={menuRef}\n      />\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { participant }): StateProps => {\n    return {\n      peer: selectUser(global, participant.id) || selectChat(global, participant.id),\n    };\n  },\n)(GroupCallParticipant));\n","import { initializeSoundsForSafari } from '../global/actions/ui/calls';\nimport { IS_IOS, IS_SAFARI } from '../util/browser/windowEnvironment';\n\nexport { default as GroupCall } from '../components/calls/group/GroupCall';\nexport { default as ActiveCallHeader } from '../components/calls/ActiveCallHeader';\nexport { default as PhoneCall } from '../components/calls/phone/PhoneCall';\nexport { default as RatePhoneCallModal } from '../components/calls/phone/RatePhoneCallModal';\n\nif (IS_SAFARI || IS_IOS) {\n  document.addEventListener('click', initializeSoundsForSafari, { once: true });\n}\n","import type { ApiGroupCall } from '../../../api/types';\nimport type { CallSound } from '../../../types';\nimport type { RequiredGlobalActions } from '../../index';\nimport type {\n  ActionReturnType, GlobalState, TabArgs,\n} from '../../types';\n\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { omit } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport safePlay from '../../../util/safePlay';\nimport { callApi } from '../../../api/gramjs';\nimport { getMainUsername } from '../../helpers';\nimport {\n  addActionHandler, getGlobal,\n  setGlobal,\n} from '../../index';\nimport { updateGroupCall } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat, selectChatFullInfo, selectIsCurrentUserFrozen,\n  selectTabState, selectUser,\n} from '../../selectors';\nimport { selectActiveGroupCall, selectChatGroupCall, selectGroupCall } from '../../selectors/calls';\nimport { fetchChatByUsername, loadFullChat } from '../api/chats';\n\n// This is a tiny MP3 file that is silent - retrieved from https://bigsoundbank.com and then modified\n// eslint-disable-next-line @stylistic/max-len\nconst silentSound = 'data:audio/mpeg;base64,SUQzBAAAAAABEVRYWFgAAAAtAAADY29tbWVudABCaWdTb3VuZEJhbmsuY29tIC8gTGFTb25vdGhlcXVlLm9yZwBURU5DAAAAHQAAA1N3aXRjaCBQbHVzIMKpIE5DSCBTb2Z0d2FyZQBUSVQyAAAABgAAAzIyMzUAVFNTRQAAAA8AAANMYXZmNTcuODMuMTAwAAAAAAAAAAAAAAD/80DEAAAAA0gAAAAATEFNRTMuMTAwVVVVVVVVVVVVVUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQsRbAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQMSkAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV';\n\nlet audioElement: HTMLAudioElement | undefined;\nlet audioContext: AudioContext | undefined;\nlet sounds: Record<CallSound, HTMLAudioElement>;\n\n// Workaround: this function is called once on the first user interaction.\n// After that, it will be possible to play the notification on iOS without problems.\n// https://rosswintle.uk/2019/01/skirting-the-ios-safari-audio-auto-play-policy-for-ui-sound-effects/\nexport function initializeSoundsForSafari() {\n  initializeSounds();\n\n  return Promise.all(Object.values(sounds).map((sound) => {\n    const prevSrc = sound.src;\n    sound.src = silentSound;\n    sound.muted = true;\n    sound.volume = 0.0001;\n    return sound.play()\n      .then(() => {\n        sound.pause();\n        sound.volume = 1;\n        sound.currentTime = 0;\n        sound.muted = false;\n\n        requestNextMutation(() => {\n          sound.src = prevSrc;\n        });\n      });\n  }));\n}\n\nexport function initializeSounds() {\n  if (sounds) {\n    return;\n  }\n  const joinAudio = new Audio('./voicechat_join.mp3');\n  const connectingAudio = new Audio('./voicechat_connecting.mp3');\n  connectingAudio.loop = true;\n  const leaveAudio = new Audio('./voicechat_leave.mp3');\n  const allowTalkAudio = new Audio('./voicechat_onallowtalk.mp3');\n  const busyAudio = new Audio('./call_busy.mp3');\n  const connectAudio = new Audio('./call_connect.mp3');\n  const endAudio = new Audio('./call_end.mp3');\n  const incomingAudio = new Audio('./call_incoming.mp3');\n  incomingAudio.loop = true;\n  const ringingAudio = new Audio('./call_ringing.mp3');\n  ringingAudio.loop = true;\n\n  sounds = {\n    join: joinAudio,\n    allowTalk: allowTalkAudio,\n    leave: leaveAudio,\n    connecting: connectingAudio,\n    incoming: incomingAudio,\n    end: endAudio,\n    connect: connectAudio,\n    busy: busyAudio,\n    ringing: ringingAudio,\n  };\n}\n\nasync function fetchGroupCall<T extends GlobalState>(global: T, groupCall: Partial<ApiGroupCall>) {\n  if (selectIsCurrentUserFrozen(global)) return undefined;\n  const result = await callApi('getGroupCall', {\n    call: groupCall,\n  });\n\n  if (!result) return undefined;\n\n  global = getGlobal();\n\n  const existingGroupCall = selectGroupCall(global, groupCall.id!);\n\n  global = updateGroupCall(\n    global,\n    groupCall.id!,\n    omit(result.groupCall, ['connectionState']),\n    undefined,\n    existingGroupCall?.isLoaded ? undefined : result.groupCall.participantsCount,\n  );\n\n  setGlobal(global);\n\n  return result.groupCall;\n}\n\nfunction requestGroupCallParticipants(\n  groupCall: Partial<ApiGroupCall>, nextOffset?: string,\n) {\n  return callApi('fetchGroupCallParticipants', {\n    call: groupCall as ApiGroupCall,\n    offset: nextOffset,\n  });\n}\n\naddActionHandler('toggleGroupCallPanel', (global, actions, payload): ActionReturnType => {\n  const { force, tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    isCallPanelVisible: 'force' in (payload || {}) ? force : !selectTabState(global, tabId).isCallPanelVisible,\n  }, tabId);\n});\n\naddActionHandler('createGroupCall', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('createGroupCall', {\n    peer: chat,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateGroupCall(global, result.id, {\n    ...result,\n    chatId,\n  });\n  setGlobal(global);\n\n  actions.requestMasterAndJoinGroupCall({ id: result.id, accessHash: result.accessHash, tabId });\n});\n\naddActionHandler('createGroupCallInviteLink', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n\n  let inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  if (hasPublicUsername) {\n    inviteLink = await callApi('exportGroupCallInvite', {\n      call: groupCall,\n      canSelfUnmute: false,\n    });\n  }\n\n  if (!inviteLink) {\n    return;\n  }\n\n  copyTextToClipboard(inviteLink);\n  actions.showNotification({\n    message: {\n      key: 'LinkCopied',\n    },\n    tabId,\n  });\n});\n\naddActionHandler('joinVoiceChatByLink', async (global, actions, payload): Promise<void> => {\n  const { username, inviteHash, tabId = getCurrentTabId() } = payload;\n\n  const chat = await fetchChatByUsername(global, username);\n\n  if (!chat) {\n    actions.showNotification({ message: langProvider.oldTranslate('NoUsernameFound'), tabId });\n    return;\n  }\n\n  global = getGlobal();\n  const full = await loadFullChat(global, actions, chat);\n\n  if (full?.groupCall) {\n    actions.requestMasterAndJoinGroupCall({\n      id: full.groupCall.id,\n      accessHash: full.groupCall.accessHash,\n      inviteHash,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('requestMasterAndJoinGroupCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'joinGroupCall',\n    payload,\n    tabId: payload.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('requestMasterAndAcceptCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'acceptCall',\n    payload: undefined,\n    tabId: payload?.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('joinGroupCall', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, id, accessHash, inviteHash, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (!ARE_CALLS_SUPPORTED) {\n    actions.showNotification({\n      message: 'Sorry, your browser doesn\\'t support group calls',\n      tabId,\n    });\n    return;\n  }\n\n  if (global.phoneCall) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  createAudioElement();\n\n  initializeSounds();\n  global = getGlobal();\n  void checkNavigatorUserMediaPermissions(global, actions, true, tabId);\n\n  const { groupCalls: { activeGroupCallId } } = global;\n  let groupCall = id ? selectGroupCall(global, id) : selectChatGroupCall(global, chatId!);\n\n  if (groupCall && groupCall.id === activeGroupCallId) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  if (activeGroupCallId) {\n    if ('leaveGroupCall' in actions) {\n      actions.leaveGroupCall({\n        rejoin: payload,\n        tabId,\n      });\n    }\n    return;\n  }\n\n  if (groupCall && activeGroupCallId === groupCall.id) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  if (!groupCall && (!id || !accessHash) && chatId) {\n    const chat = selectChat(global, chatId);\n\n    if (!chat) return;\n\n    await loadFullChat(global, actions, chat);\n    global = getGlobal();\n    groupCall = selectChatGroupCall(global, chatId);\n  } else if (!groupCall && id && accessHash) {\n    groupCall = await fetchGroupCall(global, {\n      id,\n      accessHash,\n    });\n  }\n\n  if (!groupCall) return;\n\n  global = getGlobal();\n  global = updateGroupCall(\n    global,\n    groupCall.id,\n    {\n      ...groupCall,\n      inviteHash,\n    },\n    undefined,\n    groupCall.participantsCount + 1,\n  );\n  global = {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      activeGroupCallId: groupCall.id,\n    },\n  };\n\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: false, tabId });\n});\n\naddActionHandler('playGroupCallSound', (global, actions, payload): ActionReturnType => {\n  const { sound } = payload;\n\n  if (!sounds?.[sound]) {\n    return;\n  }\n\n  const doPlay = () => {\n    if (sound !== 'connecting') {\n      sounds.connecting.pause();\n    }\n    if (sound !== 'incoming') {\n      sounds.incoming.pause();\n    }\n    if (sound !== 'ringing') {\n      sounds.ringing.pause();\n    }\n    safePlay(sounds[sound]);\n  };\n\n  doPlay();\n});\n\naddActionHandler('loadMoreGroupCallParticipants', (global): ActionReturnType => {\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) {\n    return;\n  }\n\n  void requestGroupCallParticipants(groupCall, groupCall.nextOffset);\n});\n\naddActionHandler('requestMasterAndRequestCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'requestCall',\n    payload,\n    tabId: payload.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('requestCall', (global, actions, payload): ActionReturnType => {\n  const { userId, isVideo, tabId = getCurrentTabId() } = payload;\n\n  if (global.phoneCall) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  const user = selectUser(global, userId);\n\n  if (!user) {\n    return;\n  }\n\n  initializeSounds();\n  global = getGlobal();\n  void checkNavigatorUserMediaPermissions(global, actions, isVideo, tabId);\n\n  global = getGlobal();\n  global = {\n    ...global,\n    phoneCall: {\n      id: '',\n      state: 'requesting',\n      participantId: userId,\n      isVideo,\n      adminId: global.currentUserId,\n    },\n  };\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: false, tabId });\n});\n\nfunction createAudioContext() {\n  return (new (window.AudioContext || (window as any).webkitAudioContext)());\n}\n\nconst silence = (ctx: AudioContext) => {\n  const oscillator = ctx.createOscillator();\n  const dst = oscillator.connect(ctx.createMediaStreamDestination());\n  oscillator.start();\n  return new MediaStream([Object.assign((dst as any).stream.getAudioTracks()[0], { enabled: false })]);\n};\n\nfunction createAudioElement() {\n  const ctx = createAudioContext();\n  audioElement = new Audio();\n  audioContext = ctx;\n  audioElement.srcObject = silence(ctx);\n  safePlay(audioElement);\n}\n\nexport function getGroupCallAudioElement() {\n  return audioElement;\n}\n\nexport function getGroupCallAudioContext() {\n  return audioContext;\n}\n\nexport function removeGroupCallAudioElement() {\n  audioElement?.pause();\n  audioContext = undefined;\n  audioElement = undefined;\n}\n\n// This method is used instead of a navigator.permissions.query to determine permission to use a microphone,\n// because Firefox does not have support for 'microphone' and 'camera' permissions\n// https://github.com/mozilla/standards-positions/issues/19#issuecomment-370158947\nexport function checkNavigatorUserMediaPermissions<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions, isVideo?: boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  if (isVideo) {\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((stream) => {\n        if (stream.getVideoTracks().length === 0) {\n          actions.showNotification({\n            message: langProvider.oldTranslate('Call.Camera.Error'),\n            tabId,\n          });\n        } else {\n          stream.getTracks().forEach((track) => track.stop());\n          checkMicrophonePermission(global, actions, tabId);\n        }\n      })\n      .catch(() => {\n        actions.showNotification({\n          message: langProvider.oldTranslate('Call.Camera.Error'),\n          tabId,\n        });\n      });\n  } else {\n    checkMicrophonePermission(global, actions, tabId);\n  }\n}\n\nfunction checkMicrophonePermission<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  navigator.mediaDevices.getUserMedia({ audio: true })\n    .then((stream) => {\n      if (stream.getAudioTracks().length === 0) {\n        actions.showNotification({\n          message: langProvider.oldTranslate('RequestAcces.Error.HaveNotAccess.Call'),\n          tabId,\n        });\n      } else {\n        stream.getTracks().forEach((track) => track.stop());\n      }\n    })\n    .catch(() => {\n      actions.showNotification({\n        message: langProvider.oldTranslate('RequestAcces.Error.HaveNotAccess.Call'),\n        tabId,\n      });\n    });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"npTa6CmI\",\"portrait\":\"v7oB2HTv\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GNYRVAUg\",\"blurred\":\"RBmbMiou\",\"single-column\":\"O7cZE08z\",\"singleColumn\":\"O7cZE08z\",\"header\":\"GI6dY5aJ\",\"close-button\":\"ULiJZuaP\",\"closeButton\":\"ULiJZuaP\",\"emojis-backdrop\":\"RFBKZpjx\",\"emojisBackdrop\":\"RFBKZpjx\",\"open\":\"zi1NlOXX\",\"emojis\":\"DFco1VIN\",\"emoji-tooltip\":\"MRIShZ3V\",\"emojiTooltip\":\"MRIShZ3V\",\"user-info\":\"eaUe2A0c\",\"userInfo\":\"eaUe2A0c\",\"buttons\":\"qIeflO02\",\"leave\":\"hclywYYk\",\"accept\":\"ln_ZBUHy\",\"accept-icon\":\"cVRd3twS\",\"acceptIcon\":\"cVRd3twS\",\"main-video\":\"bGlBFSJq\",\"mainVideo\":\"bGlBFSJq\",\"second-video\":\"TOFu1n5x\",\"secondVideo\":\"TOFu1n5x\",\"visible\":\"LOnSFN9w\",\"fullscreen\":\"Omg5T1o6\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './RatePhoneCallModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\nconst RatePhoneCallModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const { closeCallRatingModal, setCallRating } = getActions();\n\n  const inputRef = useRef<HTMLInputElement>();\n\n  const lang = useOldLang();\n  const [rating, setRating] = useState<number | undefined>();\n\n  const handleSend = useCallback(() => {\n    if (!rating) {\n      closeCallRatingModal();\n      return;\n    }\n    setCallRating({\n      rating: rating + 1,\n      comment: inputRef.current?.value || '',\n    });\n  }, [closeCallRatingModal, rating, setCallRating]);\n\n  function handleClickStar(index: number) {\n    return () => setRating(rating === index ? undefined : index);\n  }\n\n  const handleCancelClick = useCallback(() => {\n    closeCallRatingModal();\n  }, [closeCallRatingModal]);\n\n  return (\n    <Modal title={lang('lng_call_rate_label')} className=\"narrow\" onClose={closeCallRatingModal} isOpen={isOpen}>\n      <div className={styles.stars}>\n        {new Array(5).fill(undefined).map((_, i) => {\n          const isFilled = rating !== undefined && rating >= i;\n          return (\n            <Icon\n              name={isFilled ? 'favorite-filled' : 'favorite'}\n              className={buildClassName(\n                isFilled && styles.isFilled,\n                styles.star,\n              )}\n              onClick={handleClickStar(i)}\n            />\n          );\n        })}\n      </div>\n      <InputText\n        ref={inputRef}\n        placeholder={lang('lng_call_rate_comment')}\n        className={buildClassName(styles.comment, rating !== 4 && rating !== undefined && styles.visible)}\n      />\n\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleSend}>\n          {lang('Send')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={handleCancelClick}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(RatePhoneCallModal);\n","import type { P2PPayloadType } from './p2pMessage';\nimport type { PayloadType } from './types';\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// unsign => sign\nexport function toTelegramSource(source: number) {\n  // eslint-disable-next-line no-bitwise\n  return source << 0;\n}\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// sign => unsign\nexport function fromTelegramSource(source: number) {\n  // eslint-disable-next-line no-bitwise\n  return source >>> 0;\n}\n\nexport function getAmplitude(array: Uint8Array, scale = 3) {\n  if (!array) return 0;\n\n  const { length } = array;\n  let total = 0;\n  for (let i = 0; i < length; i++) {\n    total += array[i] * array[i];\n  }\n  const rms = Math.sqrt(total / length) / 255;\n\n  return Math.min(1, rms * scale);\n}\n\nexport function p2pPayloadTypeToConference(p: P2PPayloadType): PayloadType {\n  return {\n    id: p.id,\n    name: p.name,\n    'rtcp-fbs': p.feedbackTypes,\n    clockrate: p.clockrate,\n    parameters: p.parameters,\n    channels: p.channels,\n  };\n}\n\nexport function isRelayAddress(candidate: string) {\n  const parts = candidate.split(' ');\n  return parts.some((part) => part === 'relay');\n}\n\nexport function removeRelatedAddress(candidate: string) {\n  const parts = candidate.split(' ');\n\n  const raddrIndex = parts.indexOf('raddr');\n  if (raddrIndex !== -1) {\n    parts.splice(raddrIndex, 2);\n  }\n\n  const rportIndex = parts.indexOf('rport');\n  if (rportIndex !== -1) {\n    parts.splice(rportIndex, 2);\n  }\n\n  return parts.join(' ');\n}\n\nexport const THRESHOLD = 0.1;\n\nexport const IS_SCREENSHARE_SUPPORTED = 'getDisplayMedia' in (navigator?.mediaDevices || {});\nexport const IS_ECHO_CANCELLATION_SUPPORTED = navigator?.mediaDevices?.getSupportedConstraints().echoCancellation;\n// @ts-ignore\nexport const IS_NOISE_SUPPRESSION_SUPPORTED = navigator?.mediaDevices?.getSupportedConstraints().noiseSuppression;\n","import { toTelegramSource } from './utils';\nimport type { JoinGroupCallPayload, SsrcGroup } from './types';\n\nexport default (sessionDescription: RTCSessionDescriptionInit, isP2p = false): JoinGroupCallPayload => {\n  if (!sessionDescription || !sessionDescription.sdp) {\n    throw Error('Failed parsing SDP: session description is null');\n  }\n\n  const sections = sessionDescription\n    .sdp\n    .split('\\r\\nm=')\n    .map((s, i) => (i === 0 ? s : `m=${s}`))\n    .reduce((acc: Record<string, string[]>, el) => {\n      const name = el.match(/^m=(.+?)\\s/)?.[1] || 'header';\n      acc[acc.hasOwnProperty(name) && name === 'video' ? 'screencast' : name] = el.split('\\r\\n').filter(Boolean);\n      return acc;\n    }, {});\n\n  const lookup = (prefix: string, sectionName?: string) => {\n    if (!sectionName) {\n      return Object.values(sections).map((section) => {\n        return section.find((line) => line.startsWith(prefix))?.substr(prefix.length);\n      }).filter(Boolean)[0];\n    } else {\n      return sections[sectionName]?.find((line) => line.startsWith(prefix))?.substr(prefix.length);\n    }\n  };\n\n  const parseExtmaps = (sectionName: string) => {\n    return sections[sectionName].filter((l) => l.startsWith('a=extmap')).map((l) => {\n      const [, id, uri] = l.match(/extmap:(\\d+)(?:\\/.+)?\\s(.+)/)!;\n      return { id: Number(id), uri };\n    });\n  };\n\n  const parsePayloadTypes = (sectionName: string) => {\n    const payloads = sections[sectionName].filter((l) => l.startsWith('a=rtpmap')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const [name, clockrate, channels] = data.split('/');\n      return {\n        id: Number(id), name, clockrate: Number(clockrate), ...(channels && { channels: Number(channels) }),\n      };\n    });\n\n    const fbParams = sections[sectionName].filter((l) => l.startsWith('a=rtcp-fb')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const [type, subtype] = data.split(' ');\n      return { id: Number(id), type, subtype: subtype || '' };\n    });\n\n    const parameters = sections[sectionName].filter((l) => l.startsWith('a=fmtp')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const d = data?.split(';').reduce((acc: Record<string, string>, q) => {\n        const [name, value] = q.split('=');\n        acc[name] = value;\n        return acc;\n      }, {});\n      if (!d || Object.values(d).some((z) => !z)) return undefined;\n      return { id: Number(id), data: d };\n    }).filter(Boolean);\n\n    return payloads.map((payload) => {\n      const p = parameters.filter((l) => l!.id === payload.id).map((q) => q!.data).reduce((acc, el) => {\n        return Object.assign(acc, el);\n      }, {});\n      const f = fbParams.filter((l) => l.id === payload.id).map((l) => {\n        return {\n          type: l.type,\n          subtype: l.subtype,\n        };\n      });\n\n      return {\n        ...payload,\n        ...(Object.keys(p).length > 0 && { parameters: p }),\n        ...(f.length > 0 && { feedbackTypes: f }),\n      };\n    });\n  };\n\n  const rawSource = lookup('a=ssrc:', 'audio');\n  const sourceAudio = rawSource && Number(rawSource.split(' ')[0]);\n\n  // TODO multiple source groups\n  const rawSourceVideo = lookup('a=ssrc-group:', 'video')?.split(' ') || undefined;\n  const rawSourceScreencast = lookup('a=ssrc-group:', 'screencast')?.split(' ') || undefined;\n\n  if (!rawSourceVideo) {\n    throw Error('Failed parsing SDP: no video ssrc');\n  }\n\n  const [hash, fingerprint] = lookup('a=fingerprint:')?.split(' ') || [];\n\n  const setup = lookup('a=setup:');\n  if (!hash || !fingerprint) {\n    throw Error('Failed parsing SDP: no fingerprint');\n  }\n\n  console.log(sections);\n\n  const ufrag = lookup('a=ice-ufrag:');\n  const pwd = lookup('a=ice-pwd:');\n\n  if (!ufrag || !pwd) {\n    throw Error('Failed parsing SDP: no ICE ufrag or pwd');\n  }\n\n  return {\n    fingerprints: [\n      {\n        fingerprint,\n        hash,\n        setup: isP2p ? setup! : 'active',\n      },\n    ],\n    pwd,\n    ufrag,\n    ...(sourceAudio && { ssrc: toTelegramSource(sourceAudio) }),\n    ...(rawSourceVideo && {\n      'ssrc-groups': [\n        {\n          semantics: rawSourceVideo[0],\n          sources: rawSourceVideo.slice(1, rawSourceVideo.length).map(Number).map(toTelegramSource),\n        },\n        (isP2p && rawSourceScreencast && {\n          semantics: rawSourceScreencast[0],\n          sources: rawSourceScreencast.slice(1, rawSourceScreencast.length).map(Number).map(toTelegramSource),\n        }),\n      ].filter(Boolean) as SsrcGroup[],\n    }),\n    ...(isP2p && {\n      audioExtmap: parseExtmaps('audio'),\n      videoExtmap: parseExtmaps('video'),\n      screencastExtmap: parseExtmaps('screencast'),\n      audioPayloadTypes: parsePayloadTypes('audio'),\n      videoPayloadTypes: parsePayloadTypes('video'),\n      screencastPayloadTypes: parsePayloadTypes('screencast'),\n    }),\n  };\n};\n","import type {\n  Candidate, GroupCallTransport, PayloadType, RTPExtension, SsrcGroup,\n} from './types';\nimport { fromTelegramSource } from './utils';\n\nexport type Conference = {\n  sessionId: number;\n  audioExtensions: RTPExtension[];\n  videoExtensions: RTPExtension[];\n  audioPayloadTypes: PayloadType[];\n  videoPayloadTypes: PayloadType[];\n  ssrcs: Ssrc[];\n  transport: GroupCallTransport;\n};\n\nexport type Ssrc = {\n  userId: string;\n  endpoint: string;\n  mid: string;\n  isMain: boolean;\n  isRemoved?: boolean;\n  isVideo: boolean;\n  isPresentation?: boolean;\n  sourceGroups: SsrcGroup[];\n};\n\nexport default (conference: Conference, isAnswer = false, isPresentation = false, isP2p = false) => {\n  const lines: string[] = [];\n\n  const add = (value: string) => {\n    lines.push(value);\n  };\n\n  const {\n    sessionId,\n    ssrcs,\n    audioExtensions,\n    videoExtensions,\n    audioPayloadTypes,\n    videoPayloadTypes,\n    transport: {\n      ufrag,\n      pwd,\n      fingerprints,\n      candidates,\n    },\n  } = conference;\n\n  // Header\n  add('v=0'); // version\n  add(`o=- ${sessionId} 2 IN IP4 0.0.0.0`); // sessionId, 2=sessionVersion\n  add('s=-'); // name of the session\n  add('t=0 0'); // time when session is valid\n  add('a=ice-options:trickle');\n  add('a=msid-semantic:WMS *');\n  add(`a=group:BUNDLE ${ssrcs.map((ssrc) => ssrc.mid).join(' ')}${isPresentation ? '' : ` ${isP2p ? '3' : '2'}`}`);\n  // ice-lite: is a minimal version of the ICE specification, intended only for servers running on a public IP address\n  if (!isP2p) add('a=ice-lite');\n\n  const addCandidate = (c: Candidate) => {\n    if (c.sdpString) {\n      add(`a=${c.sdpString}`);\n    } else {\n      let str = '';\n      str += 'a=candidate:';\n      str += `${c.foundation} ${c.component} ${c.protocol} ${c.priority} ${c.ip} ${c.port} typ ${c.type}`;\n      if ('rel-addr' in c) {\n        str += ` raddr ${c['rel-addr']} rport ${c['rel-port']}`;\n      }\n      str += ` generation ${c.generation}`;\n      add(str);\n    }\n  };\n\n  const addTransport = () => {\n    add(`a=ice-ufrag:${ufrag}`);\n    add(`a=ice-pwd:${pwd}`);\n    fingerprints.forEach((fingerprint) => {\n      add(`a=fingerprint:${fingerprint.hash} ${fingerprint.fingerprint}`);\n      add(`a=setup:${isP2p ? (fingerprint.setup) : 'passive'}`);\n    });\n\n    candidates.forEach(addCandidate);\n  };\n\n  const addPayloadType = (payloadType: PayloadType) => {\n    const {\n      channels, id, name, clockrate, parameters,\n    } = payloadType;\n\n    const channelsString = channels ? `/${channels}` : '';\n    add(`a=rtpmap:${id} ${name}/${clockrate}${channelsString}`);\n\n    if (parameters) {\n      const parametersString = Object.keys(parameters).map((key) => {\n        return `${key}=${parameters![key]};`;\n      }).join(' ');\n\n      add(`a=fmtp:${id} ${parametersString}`);\n    }\n\n    payloadType['rtcp-fbs']?.forEach((fbParam) => {\n      add(`a=rtcp-fb:${id} ${fbParam.type}${fbParam.subtype ? ` ${fbParam.subtype}` : ''}`);\n    });\n  };\n\n  const addSsrcEntry = (entry: Ssrc) => {\n    const payloadTypes = entry.isVideo ? videoPayloadTypes : audioPayloadTypes;\n\n    const type = entry.isVideo ? 'video' : 'audio';\n    add(`m=${type} ${entry.isMain ? 1 : 0} RTP/SAVPF ${payloadTypes.map((l) => l.id).join(' ')}`);\n    add('c=IN IP4 0.0.0.0');\n    add('b=AS:1300'); // 1300000 / 1000\n    add(`a=mid:${entry.mid}`);\n    add('a=rtcp-mux');\n    payloadTypes.forEach(addPayloadType);\n\n    add('a=rtcp:1 IN IP4 0.0.0.0');\n    if (entry.isVideo) {\n      add('a=rtcp-rsize');\n    }\n\n    (entry.isVideo ? videoExtensions : audioExtensions).forEach(({ id, uri }) => {\n      add(`a=extmap:${id} ${uri}`);\n    });\n\n    if (entry.isRemoved) {\n      add('a=inactive');\n      return;\n    }\n\n    addTransport();\n\n    if (isP2p) {\n      add('a=sendrecv');\n      add('a=bundle-only');\n    } else {\n      if (isAnswer) {\n        add('a=recvonly');\n        return;\n      }\n      if (entry.isMain) {\n        add('a=sendrecv');\n      } else {\n        add('a=sendonly');\n        add('a=bundle-only');\n      }\n    }\n\n    entry.sourceGroups.forEach((sourceGroup) => {\n      if (sourceGroup.semantics) {\n        add(`a=ssrc-group:${sourceGroup.semantics} ${sourceGroup.sources.map(fromTelegramSource).join(' ')}`);\n      }\n      sourceGroup.sources.forEach((ssrcTelegram) => {\n        const ssrc = fromTelegramSource(ssrcTelegram);\n        add(`a=ssrc:${ssrc} cname:${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} msid:${entry.endpoint} ${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} mslabel:${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} label:${entry.endpoint}`);\n      });\n    });\n  };\n\n  if (!isP2p) {\n    ssrcs.filter((ssrc) => ssrc.mid === '0' || ssrc.mid === '1').map(addSsrcEntry);\n  } else {\n    ssrcs.filter(addSsrcEntry);\n  }\n\n  if (!isPresentation) {\n    add('m=application 1 UDP/DTLS/SCTP webrtc-datachannel');\n    add('c=IN IP4 0.0.0.0');\n    addTransport();\n    add('a=ice-options:trickle');\n    add(`a=mid:${isP2p ? '3' : (isPresentation ? '1' : '2')}`);\n    add('a=sctp-port:5000');\n    add('a=max-message-size:262144');\n  }\n\n  if (!isP2p) {\n    ssrcs.filter((ssrc) => ssrc.mid !== '0' && ssrc.mid !== '1').map(addSsrcEntry);\n  }\n\n  return `${lines.join('\\n')}\\n`;\n};\n","// https://blog.mozilla.org/webrtc/warm-up-with-replacetrack/\n\nexport const silence = (ctx: AudioContext) => {\n  const oscillator = ctx.createOscillator();\n  const dst = oscillator.connect(ctx.createMediaStreamDestination());\n  oscillator.start();\n  return new MediaStream([Object.assign((dst as any).stream.getAudioTracks()[0], { enabled: false })]);\n};\n\nexport const black = ({ width = 640, height = 480 } = {}) => {\n  const canvas = Object.assign(document.createElement('canvas'), { width, height });\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw Error('Cannot create canvas ctx');\n\n  ctx.fillRect(0, 0, width, height);\n  const stream = canvas.captureStream();\n  return new MediaStream([Object.assign(stream.getVideoTracks()[0], { enabled: false })]);\n};\n","import parseSdp from './parseSdp';\nimport { ColibriClass } from './colibriClass';\nimport type {\n  GroupCallConnectionData, GroupCallConnectionState, GroupCallParticipant, JoinGroupCallPayload,\n} from './types';\nimport buildSdp, { Conference, Ssrc } from './buildSdp';\nimport { black, silence } from './blacksilence';\nimport {\n  getAmplitude,\n  IS_ECHO_CANCELLATION_SUPPORTED,\n  IS_NOISE_SUPPRESSION_SUPPORTED,\n  THRESHOLD,\n} from './utils';\nimport Deferred from \"../../util/Deferred\";\nimport safePlay from \"../../util/safePlay\";\n\nexport type StreamType = 'audio' | 'video' | 'presentation';\nconst DEFAULT_MID = 3;\ntype GroupCallState = {\n  connection?: RTCPeerConnection;\n  screenshareConnection?: RTCPeerConnection;\n  dataChannel?: RTCDataChannel;\n  screenshareDataChannel?: RTCDataChannel;\n  participants?: GroupCallParticipant[];\n  conference?: Partial<Conference>;\n  screenshareConference?: Partial<Conference>;\n  streams?: Record<string, {\n    audio?: MediaStream;\n    video?: MediaStream;\n    presentation?: MediaStream;\n  }>;\n  participantFunctions?: Record<string, {\n    setVolume?: (volume: number) => void;\n    toggleMute?: (muted: boolean) => void;\n    getCurrentAmplitude?: () => number;\n  }>;\n  onUpdate?: (...args: any[]) => void;\n  myId?: string;\n  black?: MediaStream;\n  silence?: MediaStream;\n  updatingParticipantsQueue?: any[];\n  facingMode?: VideoFacingModeEnum;\n  isSpeakerDisabled?: boolean;\n  analyserInterval?: number;\n  speaking?: Record<string, number>;\n  audioElement?: HTMLAudioElement;\n  destination?: MediaStreamAudioDestinationNode;\n  audioContext?: AudioContext;\n  mediaStream?: MediaStream;\n  lastMid: number;\n  audioStream?: MediaStream;\n  audioSource?: MediaStreamAudioSourceNode;\n  audioAnalyser?: AnalyserNode;\n};\n\nlet state: GroupCallState | undefined;\n\nexport async function getDevices(streamType: StreamType, isInput = true) {\n  return (await navigator.mediaDevices.enumerateDevices())\n    .filter((l) => l.kind === `${streamType}${isInput ? 'input' : 'output'}`);\n}\n\nexport function toggleSpeaker() {\n  if (!state) {\n    return;\n  }\n\n  state.isSpeakerDisabled = !state.isSpeakerDisabled;\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallConnectionState',\n    connectionState: 'connected',\n    isSpeakerDisabled: state.isSpeakerDisabled,\n  });\n  if (state.participantFunctions) {\n    Object.values(state.participantFunctions).forEach((l) => {\n      l.toggleMute?.(!!state?.isSpeakerDisabled);\n    });\n  }\n}\n\nfunction leavePresentation(isFromToggle?: boolean) {\n  if (!state) {\n    return;\n  }\n  state.screenshareDataChannel?.close();\n  state.screenshareConnection?.close();\n\n  if (!isFromToggle) {\n    state.onUpdate?.({\n      '@type': 'updateGroupCallLeavePresentation',\n    });\n  }\n}\n\nexport function toggleNoiseSuppression() {\n  if (!state || !state.myId || !state.streams) {\n    return;\n  }\n\n  const audioStream = state.streams[state.myId].audio;\n  if (!audioStream) {\n    return;\n  }\n\n  const track = audioStream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  // @ts-ignore\n  const { echoCancellation, noiseSuppression } = track.getConstraints();\n\n  track.applyConstraints({\n    echoCancellation: !echoCancellation,\n    // @ts-ignore\n    noiseSuppression: !noiseSuppression,\n  });\n}\n\nexport function getUserStreams(userId: string) {\n  return state?.streams?.[userId];\n}\n\nexport function setVolume(userId: string, volume: number) {\n  const participantFunctions = state?.participantFunctions?.[userId];\n  if (!participantFunctions) return;\n  participantFunctions.setVolume?.(volume);\n}\n\nexport function isStreamEnabled(streamType: StreamType, userId?: string) {\n  const id = userId || state?.myId;\n  const stream = id && getUserStreams(id)?.[streamType];\n  if (!stream) return false;\n\n  return stream.getTracks()[0]?.enabled;\n}\n\nfunction updateGroupCallStreams(userId: string) {\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallStreams',\n    userId,\n    hasAudioStream: isStreamEnabled('audio', userId),\n    hasVideoStream: isStreamEnabled('video', userId),\n    hasPresentationStream: isStreamEnabled('presentation', userId),\n    amplitude: state.speaking?.[userId],\n  });\n}\n\nasync function getUserStream(streamType: StreamType, facing: VideoFacingModeEnum = 'user') {\n  if (streamType === 'audio' && state?.audioStream) {\n    return state.audioStream;\n  }\n\n  if (streamType === 'presentation') {\n    return (navigator.mediaDevices as any).getDisplayMedia({\n      audio: false,\n      video: true,\n    });\n  }\n\n  const media = await navigator.mediaDevices.getUserMedia({\n    audio: streamType === 'audio' ? {\n      // @ts-ignore\n      ...(IS_ECHO_CANCELLATION_SUPPORTED && {echoCancellation: true}),\n      ...(IS_NOISE_SUPPRESSION_SUPPORTED && {noiseSuppression: true}),\n    } : false,\n    video: streamType === 'video' ? {\n      facingMode: facing,\n    } : false,\n  });\n\n  if (state && streamType === 'audio') {\n    state.audioStream = media;\n  }\n\n  if (streamType === 'video') {\n    const vid = document.createElement('video');\n    vid.srcObject = media;\n\n    const deferred = new Deferred();\n    vid.oncanplay = () => deferred.resolve();\n    await deferred.promise;\n  }\n\n  return media;\n}\n\nexport async function switchCameraInput() {\n  if (!state?.myId || !state.connection || !state.streams || !state.facingMode) {\n    return;\n  }\n\n  const stream = getUserStreams(state.myId)?.video;\n\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  state.facingMode = state.facingMode === 'environment' ? 'user' : 'environment';\n  try {\n    const newStream = await getUserStream('video', state.facingMode);\n\n    await sender.replaceTrack(newStream.getTracks()[0]);\n    state.streams[state.myId].video = newStream;\n  } catch (e) {\n\n  }\n}\n\nexport async function toggleStream(streamType: StreamType, value: boolean | undefined = undefined) {\n  if (!state || !state.myId || !state.connection || !state.streams) {\n    return;\n  }\n\n  const stream = getUserStreams(state.myId)?.[streamType];\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = [\n    ...state.connection.getSenders(),\n    ...(state.screenshareConnection?.getSenders() || []),\n  ].find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  value = value === undefined ? !track.enabled : value;\n\n  try {\n    if (value && !track.enabled) {\n      const newStream = await getUserStream(streamType);\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      state.streams[state.myId][streamType] = newStream;\n      if (streamType === 'video') {\n        state.facingMode = 'user';\n      } else if (streamType === 'audio') {\n        const { audioContext } = state;\n        if (!audioContext) return;\n        const source = state.audioSource || audioContext.createMediaStreamSource(newStream);\n\n        const analyser = state.audioAnalyser || audioContext.createAnalyser();\n        analyser.minDecibels = -100;\n        analyser.maxDecibels = -30;\n        analyser.smoothingTimeConstant = 0.05;\n        analyser.fftSize = 1024;\n\n        source.connect(analyser);\n\n        state = {\n          ...state,\n          audioSource: source,\n          audioAnalyser: analyser,\n          participantFunctions: {\n            ...state.participantFunctions,\n            [state.myId]: {\n              ...state.participantFunctions?.[state.myId],\n              getCurrentAmplitude: () => {\n                const array = new Uint8Array(analyser.frequencyBinCount);\n                analyser.getByteFrequencyData(array);\n                return getAmplitude(array, 1.5);\n              },\n            },\n          },\n        };\n      }\n    } else if (!value && track.enabled) {\n      const newStream = streamType === 'audio' ? state.silence : state.black;\n      if (!newStream) return;\n\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      state.streams[state.myId][streamType] = newStream;\n      if (streamType === 'video') {\n        state.facingMode = undefined;\n      }\n\n      if(streamType !== 'audio') {\n        // We only want to stop video streams\n        track.stop();\n      } else {\n        state.audioSource?.disconnect();\n        state.audioAnalyser?.disconnect();\n      }\n    }\n    updateGroupCallStreams(state.myId!);\n    if (streamType === 'presentation' && !value) leavePresentation(true);\n  } catch (e) {\n\n  }\n}\n\nfunction updateConnectionState(connectionState: GroupCallConnectionState) {\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallConnectionState',\n    connectionState,\n  });\n}\n\nexport function leaveGroupCall() {\n  if (!state) {\n    return;\n  }\n\n  if (state.myId && state.streams?.[state.myId]) {\n    Object.values(state.streams[state.myId] || {}).forEach((stream) => {\n      stream?.getTracks().forEach((track) => {\n        track.stop();\n      });\n    });\n  }\n\n  state.audioStream?.getTracks().forEach((track) => {\n    track.stop();\n  });\n  leavePresentation(true);\n  state.dataChannel?.close();\n  state.connection?.close();\n  updateConnectionState('disconnected');\n\n  if (state.analyserInterval) {\n    clearInterval(state.analyserInterval);\n  }\n\n  state = undefined;\n}\n\nfunction analyzeAmplitudes() {\n  if (!state || !state.participantFunctions) return;\n\n  Object.keys(state.participantFunctions).forEach((id) => {\n    const { getCurrentAmplitude } = state!.participantFunctions![Number(id)];\n\n    if (getCurrentAmplitude) {\n      const amplitude = getCurrentAmplitude();\n      const prevAmplitude = state!.speaking![id] || 0;\n      state!.speaking![id] = amplitude;\n      if ((amplitude > THRESHOLD && prevAmplitude <= THRESHOLD)\n        || (amplitude <= THRESHOLD && prevAmplitude > THRESHOLD)) {\n        updateGroupCallStreams(id);\n      }\n    }\n  });\n}\n\nfunction createDataChannel(connection: RTCPeerConnection) {\n  const dataChannel = connection.createDataChannel('data', {\n    id: 0,\n  });\n\n  dataChannel.onopen = () => {\n    // console.log('Data channel open!');\n  };\n\n  dataChannel.onmessage = (e) => {\n    // console.log('onmessage');\n    const data = JSON.parse(e.data) as ColibriClass;\n    // console.log(data);\n    switch (data.colibriClass) {\n      case 'DominantSpeakerEndpointChangeEvent':\n        break;\n      case 'SenderVideoConstraints':\n\n        break;\n      case 'EndpointConnectivityStatusChangeEvent':\n\n        break;\n    }\n  };\n\n  dataChannel.onerror = (e) => {\n    console.log('%conerror', 'background: green; font-size: 5em');\n    console.error(e);\n  };\n\n  return dataChannel;\n}\n\nexport async function handleUpdateGroupCallParticipants(updatedParticipants: GroupCallParticipant[]) {\n  if (!state) {\n    return;\n  }\n\n  const {\n    participants, conference, connection, myId,\n  } = state;\n\n  if (!participants || !conference || !connection || !conference.ssrcs || !conference.transport || !myId) {\n    return;\n  }\n\n  // Joined from another client\n  if (updatedParticipants.find((participant) => {\n    return participant.isSelf\n      && participant.source\n      !== state?.conference?.ssrcs?.find((l) => l.isMain && !l.isVideo)?.sourceGroups[0].sources[0];\n  })) {\n    leaveGroupCall();\n    return;\n  }\n\n  const newEndpoints: string[] = [];\n  updatedParticipants.forEach((participant) => {\n    if (participant.isSelf) {\n      if (participant.isMuted && !participant.canSelfUnmute) {\n        // Muted by admin\n        toggleStream('audio', false);\n        toggleStream('video', false);\n        toggleStream('presentation', false);\n      }\n      return;\n    }\n\n    const { isLeft } = participant;\n    const isAudioLeft = participant.isMuted || participant.isMutedByMe;\n    const isVideoLeft = !participant.isVideoJoined || !participant.video || isLeft;\n    const isPresentationLeft = !participant.presentation || isLeft;\n\n    let hasVideo = false;\n    let hasAudio = false;\n    let hasPresentation = false;\n\n    conference.ssrcs!.filter((l) => l.userId === participant.id).forEach((ssrc) => {\n      if (!ssrc.isVideo) {\n        if (ssrc.sourceGroups[0].sources[0] === participant.source) {\n          hasAudio = true;\n        }\n        // console.log('has audio, removed=', isAudioLeft);\n        ssrc.isRemoved = isAudioLeft;\n      }\n\n      if (ssrc.isVideo) {\n        if (!ssrc.isPresentation) {\n          if (!!participant.video && ssrc.endpoint === participant.video.endpoint) {\n            hasVideo = true;\n          }\n          // console.log('has video = ', hasVideo, ' removed=', isVideoLeft);\n          ssrc.isRemoved = isVideoLeft;\n        }\n\n        if (ssrc.isPresentation) {\n          if (!!participant.presentation && ssrc.endpoint === participant.presentation.endpoint) {\n            hasPresentation = true;\n          }\n          // console.log('has presentation, removed=', isPresentationLeft);\n          ssrc.isRemoved = isPresentationLeft;\n        }\n      }\n    });\n\n    if (!isAudioLeft && !hasAudio) {\n      // console.log('add audio');\n      state!.lastMid = state!.lastMid + 1;\n      conference.ssrcs!.push({\n        userId: participant.id,\n        isMain: false,\n        endpoint: `audio${participant.source}`,\n        isVideo: false,\n        sourceGroups: [{\n          sources: [participant.source],\n        }],\n        mid: state!.lastMid.toString()\n      });\n    }\n\n    if (!isVideoLeft && !hasVideo && participant.video) {\n      // console.log('add video', participant.video);\n      state!.lastMid = state!.lastMid + 1;\n\n      newEndpoints.push(participant.video.endpoint);\n      conference.ssrcs!.push({\n        userId: participant.id,\n        isMain: false,\n        endpoint: participant.video.endpoint,\n        isVideo: true,\n        sourceGroups: participant.video.sourceGroups,\n        mid: state!.lastMid.toString()\n      });\n    }\n\n    if (!isPresentationLeft && !hasPresentation && participant.presentation) {\n      // console.log('add presentation');\n      state!.lastMid = state!.lastMid + 1;\n      conference.ssrcs!.push({\n        isPresentation: true,\n        userId: participant.id,\n        isMain: false,\n        endpoint: participant.presentation.endpoint,\n        isVideo: true,\n        sourceGroups: participant.presentation.sourceGroups,\n        mid: state!.lastMid.toString()\n      });\n    }\n  });\n\n  if (state.updatingParticipantsQueue) {\n    state.updatingParticipantsQueue.push(conference);\n    return;\n  } else {\n    state.updatingParticipantsQueue = [];\n  }\n\n  const sdp = buildSdp(conference as Conference);\n  await connection.setRemoteDescription({\n    type: 'offer',\n    sdp,\n  });\n\n  try {\n    const answer = await connection.createAnswer();\n    await connection.setLocalDescription(answer);\n\n    updateGroupCallStreams(myId);\n    if (state.updatingParticipantsQueue.length > 0) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const newConference of state.updatingParticipantsQueue) {\n        await connection.setRemoteDescription({\n          type: 'offer',\n          sdp: buildSdp(newConference as Conference),\n        });\n        const answerNew = await connection.createAnswer();\n        await connection.setLocalDescription(answerNew);\n        updateGroupCallStreams(myId);\n\n        // if (newEndpoints.length > 0) {\n        //   sendDataChannelMessage({\n        //     colibriClass: 'ReceiverVideoConstraints',\n        //     defaultConstraints: {\n        //       maxHeight: 0,\n        //     },\n        //     constraints: {\n        //       ...(newEndpoints.reduce((acc: Record<string, any>, el) => {\n        //         acc[el] = {\n        //           minHeight: 0,\n        //           maxHeight: 1080,\n        //         };\n        //         return acc;\n        //       }, {})),\n        //     },\n        //     onStageEndpoints: [],\n        //   });\n        // }\n      }\n    }\n    state.updatingParticipantsQueue = undefined;\n  } catch (e) {\n    console.error(e);\n  }\n}\n//\n// function sendDataChannelMessage(message: ColibriClass) {\n//   if (!state || !state.dataChannel || state.dataChannel.readyState !== 'open') {\n//     return;\n//   }\n//\n//   // console.log('SEND!', message);\n//   state.dataChannel.send(JSON.stringify(message));\n// }\n\nexport async function handleUpdateGroupCallConnection(data: GroupCallConnectionData, isPresentation: boolean) {\n  if (!state) {\n    return;\n  }\n\n  const conference = isPresentation ? state.screenshareConference : state.conference;\n  const connection = isPresentation ? state.screenshareConnection : state.connection;\n\n  if (!conference || !connection || !conference.ssrcs) {\n    return;\n  }\n\n  const sessionId = Date.now();\n  const newConference = {\n    ...conference,\n    transport: data.transport,\n    sessionId,\n    audioExtensions: data.audio?.['rtp-hdrexts'],\n    audioPayloadTypes: data.audio?.['payload-types'],\n    videoExtensions: data.video?.['rtp-hdrexts'],\n    videoPayloadTypes: data.video?.['payload-types'],\n  } as Conference;\n\n  state = {\n    ...state,\n    ...(!isPresentation ? { conference: newConference } : { screenshareConference: newConference }),\n  };\n\n  try {\n    await connection.setRemoteDescription({\n      type: 'answer',\n      sdp: buildSdp(newConference, true, isPresentation),\n    });\n\n    // state.resolveTest();\n    // state.test = true;\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction handleTrack(e: RTCTrackEvent) {\n  if (!state || !state.audioElement || !state.audioContext || !state.mediaStream) {\n    return;\n  }\n  const ssrc = state.conference?.ssrcs?.find((l) => l.endpoint === e.track.id);\n  if (!ssrc || !ssrc.userId) {\n    return;\n  }\n\n  const { userId, isPresentation } = ssrc;\n  const participant = state.participants?.find((p) => p.id === userId);\n\n  const streamType = (e.track.kind === 'video' ? (isPresentation ? 'presentation' : 'video') : 'audio') as StreamType;\n\n  e.track.onended = () => {\n    delete state?.streams?.[userId][streamType];\n    updateGroupCallStreams(userId);\n  };\n\n  const stream = e.streams[0];\n\n  if (e.track.kind === 'audio') {\n    const { mediaStream } = state;\n    const audioContext = new (window.AudioContext)();\n    const source = audioContext.createMediaStreamSource(stream);\n\n    const gainNode = audioContext.createGain();\n    gainNode.gain.value = (participant?.volume || 10000) / 10000;\n\n    const muteNode = audioContext.createGain();\n    gainNode.gain.value = 1;\n\n    const analyser = audioContext.createAnalyser();\n    analyser.minDecibels = -100;\n    analyser.maxDecibels = -30;\n    analyser.smoothingTimeConstant = 0.05;\n    analyser.fftSize = 1024;\n\n    source.connect(analyser).connect(muteNode).connect(gainNode).connect(audioContext.destination);\n\n    mediaStream!.addTrack(source.mediaStream.getAudioTracks()[0]);\n\n    // https://stackoverflow.com/questions/41784137/webrtc-doesnt-work-with-audiocontext#comment117600018_41784241\n    const test = new Audio();\n    test.srcObject = stream;\n    // test.srcObject = source.mediaStream;\n    test.muted = true;\n    test.remove();\n\n    state = {\n      ...state,\n      participantFunctions: {\n        ...state.participantFunctions,\n        [userId]: {\n          ...state.participantFunctions?.[userId],\n          setVolume: (volume: number) => {\n            gainNode.gain.value = volume > 1 ? volume * 2 : volume;\n          },\n          toggleMute: (muted?: boolean) => {\n            muteNode.gain.value = muted ? 0 : 1;\n          },\n          getCurrentAmplitude: () => {\n            const array = new Uint8Array(analyser.frequencyBinCount);\n            analyser.getByteFrequencyData(array);\n            return getAmplitude(array, 1.5);\n          },\n        },\n      },\n    };\n  }\n\n  state = {\n    ...state,\n    streams: {\n      ...state.streams,\n      [userId]: {\n        ...state.streams?.[userId],\n        [streamType]: stream,\n      },\n    },\n  };\n\n  updateGroupCallStreams(userId);\n}\n\nfunction initializeConnection(\n  streams: MediaStream[],\n  resolve: (payload: JoinGroupCallPayload) => void,\n  isPresentation = false,\n) {\n  const connection = new RTCPeerConnection();\n\n  const dataChannel = isPresentation ? undefined : createDataChannel(connection);\n\n  streams.forEach((stream) => stream.getTracks().forEach((track) => {\n    connection.addTrack(track, stream);\n  }));\n\n  if (!isPresentation) {\n    connection.oniceconnectionstatechange = () => {\n      const connectionState = connection.iceConnectionState;\n      console.log('iceconnectionstatechange', connectionState);\n      if (connectionState === 'connected' || connectionState === 'completed') {\n        updateConnectionState('connected');\n      } else if (connectionState === 'checking' || connectionState === 'new') {\n        updateConnectionState('connecting');\n      } else if (connection.iceConnectionState === 'disconnected') {\n        updateConnectionState('reconnecting');\n      }\n    };\n  }\n  connection.onconnectionstatechange = () => {\n    console.log('connectionstatechange', connection.connectionState);\n  }\n  connection.ontrack = handleTrack;\n  connection.onnegotiationneeded = async () => {\n    if (!state) return;\n\n    console.log('onnegotiationneeded');\n\n    const { myId } = state;\n\n    if (!myId) {\n      return;\n    }\n    const offer = await connection.createOffer({\n      offerToReceiveVideo: true,\n      offerToReceiveAudio: !isPresentation,\n    });\n    console.log('offer created');\n\n    await connection.setLocalDescription(offer);\n    console.log('local desc set');\n\n    if (!offer.sdp) {\n      return;\n    }\n\n    const sdp = parseSdp(offer);\n    const audioSsrc: Ssrc | undefined = !isPresentation ? {\n      userId: '',\n      sourceGroups: [\n        {\n          sources: [sdp.ssrc || 0],\n        },\n      ],\n      isRemoved: isPresentation,\n      isMain: true,\n      isVideo: false,\n      isPresentation,\n      endpoint: isPresentation ? '1' : '0',\n      mid: isPresentation ? '1' : '0'\n    } : undefined;\n\n    const videoSsrc: Ssrc | undefined = sdp['ssrc-groups'] && {\n      isPresentation,\n      userId: '',\n      sourceGroups: sdp['ssrc-groups'],\n      isMain: true,\n      isVideo: true,\n      endpoint: isPresentation ? '0' : '1',\n      mid: isPresentation ? '0' : '1'\n    };\n\n    const conference = isPresentation ? state.screenshareConference : state.conference;\n\n    const ssrcs: Ssrc[] = [];\n    if (isPresentation) {\n      if (videoSsrc) ssrcs.push(videoSsrc);\n      if (audioSsrc) ssrcs.push(audioSsrc);\n    } else {\n      if (audioSsrc) ssrcs.push(audioSsrc);\n      if (videoSsrc) ssrcs.push(videoSsrc);\n    }\n\n    const audioStream = streams.find((l) => l.getTracks()[0].kind === 'audio');\n    const videoStream = streams.find((l) => l.getTracks()[0].kind === 'video');\n\n    state = {\n      ...state,\n      ...(!isPresentation ? {\n        conference: {\n          ...conference,\n          ssrcs,\n        },\n      } : {\n        screenshareConference: {\n          ...conference,\n          ssrcs,\n        },\n      }),\n      streams: {\n        ...state.streams,\n        [myId]: {\n          ...state.streams?.[myId],\n          ...(audioStream && { audio: audioStream }),\n          ...(!isPresentation && videoStream ? { video: videoStream } : { presentation: videoStream }),\n        },\n      },\n    };\n\n    updateGroupCallStreams(myId);\n\n    resolve(sdp);\n  };\n\n  return { connection, dataChannel };\n}\n\nexport async function startSharingScreen(): Promise<JoinGroupCallPayload | undefined> {\n  if (!state) {\n    return undefined;\n  }\n\n  try {\n    const stream: MediaStream | undefined = await getUserStream('presentation');\n\n    if (!stream) {\n      return undefined;\n    }\n\n    stream.getTracks()[0].onended = () => {\n      if (state && state.myId) {\n        delete state.streams?.[state.myId].presentation;\n        updateGroupCallStreams(state.myId);\n        leavePresentation();\n      }\n    };\n\n    return await new Promise((resolve) => {\n      const { connection, dataChannel } = initializeConnection([stream], resolve, true);\n      state = {\n        ...state!,\n        screenshareConnection: connection,\n        screenshareDataChannel: dataChannel,\n      };\n    });\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function joinGroupCall(\n  myId: string,\n  audioContext: AudioContext,\n  audioElement: HTMLAudioElement,\n  onUpdate: (...args: any[]) => void,\n): Promise<JoinGroupCallPayload> {\n  if (state) {\n    throw Error('Already in call');\n  }\n\n  updateConnectionState('connecting');\n\n  const mediaStream = new MediaStream();\n  audioElement.srcObject = mediaStream;\n  safePlay(audioElement);\n\n  state = {\n    onUpdate,\n    participants: [],\n    myId,\n    speaking: {},\n    silence: silence(audioContext),\n    black: black({ width: 640, height: 480 }),\n    // @ts-ignore\n    analyserInterval: setInterval(analyzeAmplitudes, 1000),\n    audioElement,\n    // destination,\n    audioContext,\n    mediaStream,\n    lastMid: DEFAULT_MID,\n  };\n\n  // Prepare microphone\n  getUserStream('audio');\n\n  return new Promise((resolve) => {\n    state = {\n      ...state!,\n      ...initializeConnection([state!.silence!, state!.black!], resolve),\n    };\n  });\n}\n","import { black, silence } from './blacksilence';\nimport type { ApiPhoneCallConnection, P2pParsedSdp } from './types';\nimport parseSdp from './parseSdp';\nimport type { MediaContent, MediaStateMessage, P2pMessage } from './p2pMessage';\nimport {\n  fromTelegramSource,\n  IS_ECHO_CANCELLATION_SUPPORTED,\n  IS_NOISE_SUPPRESSION_SUPPORTED, \n  p2pPayloadTypeToConference,\n} from './utils';\nimport buildSdp, { Conference } from './buildSdp';\nimport { StreamType } from './secretsauce';\n\ntype P2pState = {\n  connection: RTCPeerConnection;\n  dataChannel: RTCDataChannel;\n  emitSignalingData: (data: P2pMessage) => void;\n  onUpdate: (...args: any[]) => void;\n  conference?: Partial<Conference>;\n  isOutgoing: boolean;\n  pendingCandidates: string[];\n  streams: {\n    video?: MediaStream;\n    audio?: MediaStream;\n    presentation?: MediaStream;\n    ownAudio?: MediaStream;\n    ownVideo?: MediaStream;\n    ownPresentation?: MediaStream;\n  };\n  silence: MediaStream;\n  blackVideo: MediaStream;\n  blackPresentation: MediaStream;\n  mediaState: Omit<MediaStateMessage, '@type'>;\n  audio: HTMLAudioElement;\n  gotInitialSetup?: boolean;\n  facingMode?: VideoFacingModeEnum;\n};\n\nlet state: P2pState | undefined;\n\nconst ICE_CANDIDATE_POOL_SIZE = 10;\n\nexport function getStreams() {\n  return state?.streams;\n}\n\nfunction updateStreams() {\n  state?.onUpdate({\n    ...state.mediaState,\n    '@type': 'updatePhoneCallMediaState',\n  });\n}\n\nfunction getUserStream(streamType: StreamType, facing: VideoFacingModeEnum = 'user') {\n  if (streamType === 'presentation') {\n    return (navigator.mediaDevices as any).getDisplayMedia({\n      audio: false,\n      video: true,\n    });\n  }\n\n  return navigator.mediaDevices.getUserMedia({\n    audio: streamType === 'audio' ? {\n      ...(IS_ECHO_CANCELLATION_SUPPORTED && { echoCancellation: true }),\n      ...(IS_NOISE_SUPPRESSION_SUPPORTED && { noiseSuppression: true }),\n    } : false,\n    video: streamType === 'video' ? {\n      facingMode: facing,\n    } : false,\n  });\n}\n\nexport async function switchCameraInputP2p() {\n  if (!state || !state.facingMode) {\n    return;\n  }\n\n  const stream = state.streams.ownVideo;\n\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  state.facingMode = state.facingMode === 'environment' ? 'user' : 'environment';\n  try {\n    const newStream = await getUserStream('video', state.facingMode);\n\n    await sender.replaceTrack(newStream.getTracks()[0]);\n    state.streams.ownVideo = newStream;\n    updateStreams();\n  } catch (e) {\n\n  }\n}\n\nexport async function toggleStreamP2p(streamType: StreamType, value: boolean | undefined = undefined) {\n  if (!state) return;\n  const stream = streamType === 'audio' ? state.streams.ownAudio\n    : (streamType === 'video' ? state.streams.ownVideo : state.streams.ownPresentation);\n\n  if (!stream) return;\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  value = value === undefined ? !track.enabled : value;\n\n  try {\n    if (value && !track.enabled) {\n      const newStream = await getUserStream(streamType);\n      newStream.getTracks()[0].onended = () => {\n        toggleStreamP2p(streamType, false);\n      };\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      if (streamType === 'audio') {\n        state.streams.ownAudio = newStream;\n      } else if (streamType === 'video') {\n        state.streams.ownVideo = newStream;\n        state.facingMode = 'user';\n      } else {\n        state.streams.ownPresentation = newStream;\n      }\n      if (streamType === 'video' || streamType === 'presentation') {\n        toggleStreamP2p(streamType === 'video' ? 'presentation' : 'video', false);\n      }\n      // if (streamType === 'video') {\n      //   state.facingMode = 'user';\n      // }\n    } else if (!value && track.enabled) {\n      track.stop();\n      const newStream = streamType === 'audio' ? state.silence\n        : (streamType === 'video' ? state.blackVideo : state.blackPresentation);\n      if (!newStream) return;\n\n      await sender.replaceTrack(newStream.getTracks()[0]);\n\n      if (streamType === 'audio') {\n        state.streams.ownAudio = newStream;\n      } else if (streamType === 'video') {\n        state.streams.ownVideo = newStream;\n      } else {\n        state.streams.ownPresentation = newStream;\n      }\n      // if (streamType === 'video') {\n      //   state.facingMode = undefined;\n      // }\n    }\n    updateStreams();\n    sendMediaState();\n  } catch (err) {\n    console.error(err)\n  }\n}\n\nexport async function joinPhoneCall(\n  connections: ApiPhoneCallConnection[],\n  emitSignalingData: (data: P2pMessage) => void,\n  isOutgoing: boolean,\n  shouldStartVideo: boolean,\n  isP2p: boolean,\n  onUpdate: (...args: any[]) => void,\n) {\n  const conn = new RTCPeerConnection({\n    iceServers: connections.map((connection) => (\n      {\n        urls: [\n          connection.isTurn && `turn:${connection.ip}:${connection.port}`,\n          connection.isStun && `stun:${connection.ip}:${connection.port}`,\n        ].filter(Boolean),\n        username: connection.username,\n        credentialType: 'password',\n        credential: connection.password,\n      }\n    )),\n    iceTransportPolicy: isP2p ? 'all' : 'relay',\n    bundlePolicy: 'max-bundle',\n    iceCandidatePoolSize: ICE_CANDIDATE_POOL_SIZE,\n  });\n\n  conn.onicecandidate = (e) => {\n    if (!e.candidate) {\n      return;\n    };\n    emitSignalingData({\n      '@type': 'Candidates',\n      candidates: [{\n        sdpString: e.candidate.candidate,\n      }],\n    });\n  };\n\n  conn.onconnectionstatechange = () => {\n    onUpdate({\n      '@type': 'updatePhoneCallConnectionState',\n      connectionState: conn.connectionState,\n    });\n  };\n\n  conn.ontrack = (e) => {\n    if (!state) return;\n\n    const stream = e.streams[0];\n    if (e.track.kind === 'audio') {\n      state.audio.srcObject = stream;\n      state.audio.play().catch();\n      state.streams.audio = stream;\n    } else if (e.transceiver.mid === '1') {\n      state.streams.video = stream;\n    } else {\n      state.streams.presentation = stream;\n    }\n\n    updateStreams();\n  };\n\n  conn.oniceconnectionstatechange = async (e) => {\n    switch(conn.iceConnectionState) {\n      case 'disconnected':\n      case 'failed':\n        if (isOutgoing) {\n          await createOffer(conn, {\n            offerToReceiveAudio: true,\n            offerToReceiveVideo: true,\n            iceRestart: true,\n          });\n        }\n      default:\n        break;\n    }\n  }\n\n  const slnc = silence(new AudioContext());\n  const video = black({ width: 640, height: 480 });\n  const screenshare = black({ width: 640, height: 480 });\n  conn.addTrack(slnc.getTracks()[0], slnc);\n  conn.addTrack(video.getTracks()[0], video);\n  conn.addTrack(screenshare.getTracks()[0], screenshare);\n\n  const dc = conn.createDataChannel('data', {\n    id: 0,\n    negotiated: true,\n  });\n\n  dc.onmessage = (e) => {\n    processSignalingMessage(JSON.parse(e.data));\n  };\n\n  const audio = new Audio();\n\n  state = {\n    audio,\n    connection: conn,\n    emitSignalingData,\n    isOutgoing,\n    pendingCandidates: [],\n    onUpdate,\n    streams: {\n      ownVideo: video,\n      ownAudio: slnc,\n      ownPresentation: screenshare,\n    },\n    mediaState: {\n      isBatteryLow: false,\n      screencastState: 'inactive',\n      videoState: 'inactive',\n      videoRotation: 0,\n      isMuted: true,\n    },\n    blackVideo: video,\n    blackPresentation: screenshare,\n    silence: slnc,\n    dataChannel: dc,\n  };\n\n  try {\n    toggleStreamP2p('audio', true);\n  } catch (err) {\n    console.error(err)\n  }\n\n  if (isOutgoing) {\n    await createOffer(conn, {\n      offerToReceiveAudio: true,\n      offerToReceiveVideo: true,\n    })\n  }\n}\n\nexport function stopPhoneCall() {\n  if (!state) return;\n\n  state.streams.ownVideo?.getTracks().forEach((track) => track.stop());\n  state.streams.ownPresentation?.getTracks().forEach((track) => track.stop());\n  state.streams.ownAudio?.getTracks().forEach((track) => track.stop());\n  state.dataChannel.close();\n  state.connection.close();\n  state = undefined;\n}\n\nfunction sendMediaState() {\n  if (!state) return;\n  const { emitSignalingData, streams } = state;\n\n  emitSignalingData({\n    '@type': 'MediaState',\n    videoRotation: 0,\n    isMuted: !streams.ownAudio?.getTracks()[0].enabled,\n    isBatteryLow: true,\n    videoState: streams.ownVideo?.getTracks()[0].enabled ? 'active' : 'inactive',\n    screencastState: streams.ownPresentation?.getTracks()[0].enabled ? 'active' : 'inactive',\n  });\n}\n\nfunction filterVP8(mediaContent: MediaContent) {\n  if (!state || state.isOutgoing) return mediaContent;\n\n  const { payloadTypes } = mediaContent!;\n  const idx = payloadTypes.findIndex((payloadType) => payloadType.name === 'VP8');\n  const vp8PayloadType = payloadTypes[idx];\n  const rtxIdx = payloadTypes.findIndex((payloadType) => Number(payloadType.parameters?.apt) === vp8PayloadType.id);\n  mediaContent.payloadTypes = [payloadTypes[idx], payloadTypes[rtxIdx]];\n\n  return mediaContent;\n}\n\nfunction sendInitialSetup(sdp: P2pParsedSdp) {\n  if (!state) return;\n  const { emitSignalingData } = state;\n\n  if (!sdp.ssrc || !sdp['ssrc-groups'] || !sdp['ssrc-groups'][0] || !sdp['ssrc-groups'][1]) return;\n\n  emitSignalingData({\n    '@type': 'InitialSetup',\n    fingerprints: sdp.fingerprints,\n    ufrag: sdp.ufrag,\n    pwd: sdp.pwd,\n    audio: {\n      ssrc: fromTelegramSource(sdp.ssrc).toString(),\n      ssrcGroups: [],\n      payloadTypes: sdp.audioPayloadTypes,\n      rtpExtensions: sdp.audioExtmap,\n    },\n    video: filterVP8({\n      ssrc: fromTelegramSource(sdp['ssrc-groups'][0].sources[0]).toString(),\n      ssrcGroups: [{\n        semantics: sdp['ssrc-groups'][0].semantics,\n        ssrcs: sdp['ssrc-groups'][0].sources.map(fromTelegramSource),\n      }],\n      payloadTypes: sdp.videoPayloadTypes,\n      rtpExtensions: sdp.videoExtmap,\n    }),\n    screencast: filterVP8({\n      ssrc: fromTelegramSource(sdp['ssrc-groups'][1].sources[0]).toString(),\n      ssrcGroups: [{\n        semantics: sdp['ssrc-groups'][1].semantics,\n        ssrcs: sdp['ssrc-groups'][1].sources.map(fromTelegramSource),\n      }],\n      payloadTypes: sdp.screencastPayloadTypes,\n      rtpExtensions: sdp.screencastExtmap,\n    }),\n  });\n}\n\nexport async function processSignalingMessage(message: P2pMessage) {\n  if (!state || !state.connection) return;\n\n  switch (message['@type']) {\n    case 'MediaState': {\n      state.mediaState = message;\n      updateStreams();\n      sendMediaState();\n      break;\n    }\n    case 'Candidates': {\n      const { pendingCandidates, gotInitialSetup } = state;\n      message.candidates.forEach((candidate) => {\n        pendingCandidates.push(candidate.sdpString);\n      });\n      if (gotInitialSetup) {\n        await commitPendingIceCandidates();\n      }\n      break;\n    }\n    case 'InitialSetup': {\n      const {\n        connection, isOutgoing,\n      } = state;\n      if (!connection) return;\n\n      const newConference = {\n        transport: {\n          candidates: [],\n          ufrag: message.ufrag,\n          pwd: message.pwd,\n          fingerprints: message.fingerprints,\n          'rtcp-mux': false,\n          xmlns: '',\n        },\n        sessionId: Date.now(),\n        ssrcs: [\n          message.audio && {\n            isVideo: false,\n            isMain: false,\n            userId: '123',\n            endpoint: '0',\n            mid: '0',\n            sourceGroups: [{\n              sources: [message.audio.ssrc],\n            }],\n          },\n          message.video && {\n            isVideo: true,\n            isPresentation: false,\n            isMain: false,\n            userId: '123',\n            endpoint: '1',\n            mid: '1',\n            sourceGroups: message.video.ssrcGroups.map((l) => ({\n              semantics: l.semantics,\n              sources: l.ssrcs,\n            })),\n          },\n          message.screencast && {\n            isVideo: true,\n            isPresentation: true,\n            isMain: false,\n            userId: '123',\n            endpoint: '2',\n            mid: '2',\n            sourceGroups: message.screencast.ssrcGroups.map((l) => ({\n              semantics: l.semantics,\n              sources: l.ssrcs,\n            })),\n          },\n        ],\n        audioPayloadTypes: message.audio!.payloadTypes?.map(p2pPayloadTypeToConference) || [],\n        audioExtensions: message.audio!.rtpExtensions,\n        videoPayloadTypes: filterVP8(message.video!).payloadTypes?.map(p2pPayloadTypeToConference) || [],\n        videoExtensions: message.video!.rtpExtensions,\n      } as Conference;\n\n      await connection.setRemoteDescription({\n        sdp: buildSdp(newConference, isOutgoing, undefined, true),\n        type: isOutgoing ? 'answer' : 'offer',\n      });\n\n      state.conference = newConference;\n\n      if (!isOutgoing) {\n        const answer = await connection.createAnswer();\n        await connection.setLocalDescription(answer);\n        sendInitialSetup(parseSdp(connection.localDescription!, true) as P2pParsedSdp);\n      }\n      state.gotInitialSetup = true;\n      await commitPendingIceCandidates();\n      break;\n    }\n  }\n}\n\nasync function commitPendingIceCandidates() {\n  if (!state) {\n    return;\n  }\n  const { pendingCandidates, connection } = state;\n  if (!pendingCandidates.length) {\n    return;\n  }\n  await Promise.all(pendingCandidates.map((c) => tryAddCandidate(connection, c)));\n  state.pendingCandidates = [];\n}\n\nasync function tryAddCandidate(connection: RTCPeerConnection, candidate: string) {\n  try {\n    await connection.addIceCandidate({\n      candidate,\n      sdpMLineIndex: 0,\n    })\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function createOffer(conn: RTCPeerConnection, params: RTCOfferOptions) {\n  const offer = await conn.createOffer(params);\n  await conn.setLocalDescription(offer);\n  sendInitialSetup(parseSdp(conn.localDescription!, true) as P2pParsedSdp);\n}\n","import type { ActionReturnType } from '../../types';\n\nimport { GROUP_CALL_VOLUME_MULTIPLIER } from '../../../config';\nimport {\n  isStreamEnabled,\n  joinGroupCall,\n  leaveGroupCall,\n  setVolume, startSharingScreen,\n  stopPhoneCall,\n  toggleStream,\n} from '../../../lib/secret-sauce';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  removeGroupCall,\n  updateActiveGroupCall,\n} from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectChat, selectTabState, selectUser } from '../../selectors';\nimport {\n  selectActiveGroupCall, selectPhoneCallUser,\n} from '../../selectors/calls';\nimport { getGroupCallAudioContext, getGroupCallAudioElement, removeGroupCallAudioElement } from '../ui/calls';\nimport { loadFullChat } from './chats';\n\nconst HANG_UP_UI_DELAY = 500;\n\naddActionHandler('leaveGroupCall', async (global, actions, payload): Promise<void> => {\n  const {\n    isFromLibrary, shouldDiscard, shouldRemove, rejoin,\n    isPageUnload, tabId = getCurrentTabId(),\n  } = payload || {};\n\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) {\n    return;\n  }\n\n  global = updateActiveGroupCall(global, { connectionState: 'disconnected' }, groupCall.participantsCount - 1);\n  global = {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      activeGroupCallId: undefined,\n    },\n  };\n  setGlobal(global);\n\n  await callApi('leaveGroupCall', {\n    call: groupCall, isPageUnload,\n  });\n  await callApi('abortRequestGroup', 'call');\n\n  if (shouldDiscard) {\n    await callApi('discardGroupCall', {\n      call: groupCall,\n    });\n  }\n\n  global = getGlobal();\n  if (shouldRemove) {\n    global = removeGroupCall(global, groupCall.id);\n  }\n\n  removeGroupCallAudioElement();\n\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n  if (!isFromLibrary) {\n    leaveGroupCall();\n  }\n\n  actions.afterHangUp();\n\n  if (rejoin) {\n    actions.requestMasterAndJoinGroupCall({\n      ...rejoin,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('toggleGroupCallVideo', async (global): Promise<void> => {\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  await toggleStream('video');\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    videoStopped: !isStreamEnabled('video'),\n    participant: user,\n  });\n});\n\naddActionHandler('requestToSpeak', (global, actions, payload): ActionReturnType => {\n  const { value } = payload || { value: true };\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  void callApi('editGroupCallParticipant', {\n    call: groupCall,\n    raiseHand: value,\n    participant: user,\n  });\n});\n\naddActionHandler('setGroupCallParticipantVolume', (global, actions, payload): ActionReturnType => {\n  const { participantId, volume } = payload;\n\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, participantId);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  setVolume(participantId, Math.floor(volume / GROUP_CALL_VOLUME_MULTIPLIER) / 100);\n\n  void callApi('editGroupCallParticipant', {\n    call: groupCall,\n    volume: Number(volume),\n    participant: user,\n  });\n});\n\naddActionHandler('toggleGroupCallMute', async (global, actions, payload): Promise<void> => {\n  const { participantId, value } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, participantId || global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  const muted = value === undefined ? isStreamEnabled('audio', user.id) : value;\n\n  if (!participantId) {\n    await toggleStream('audio');\n  } else {\n    setVolume(participantId, muted ? 0 : 1);\n  }\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    muted,\n    participant: user,\n  });\n});\n\naddActionHandler('toggleGroupCallPresentation', async (global, actions, payload): Promise<void> => {\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  const value = payload?.value !== undefined ? payload?.value : !isStreamEnabled('presentation');\n  if (value) {\n    const params = await startSharingScreen();\n    if (!params) {\n      return;\n    }\n\n    await callApi('joinGroupCallPresentation', {\n      call: groupCall,\n      params,\n    });\n  } else {\n    await toggleStream('presentation', false);\n    await callApi('leaveGroupCallPresentation', {\n      call: groupCall,\n    });\n  }\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    presentationPaused: !isStreamEnabled('presentation'),\n    participant: user,\n  });\n});\n\naddActionHandler('connectToActiveGroupCall', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) return;\n\n  if (groupCall.connectionState === 'discarded') {\n    actions.showNotification({ message: 'This voice chat is not active', tabId });\n    return;\n  }\n\n  const audioElement = getGroupCallAudioElement();\n  const audioContext = getGroupCallAudioContext();\n\n  if (!audioElement || !audioContext) {\n    return;\n  }\n\n  const {\n    currentUserId,\n  } = global;\n\n  if (!currentUserId) return;\n\n  const params = await joinGroupCall(currentUserId, audioContext, audioElement, actions.apiUpdate);\n\n  const result = await callApi('joinGroupCall', {\n    call: groupCall,\n    params,\n    inviteHash: groupCall.inviteHash,\n  });\n\n  global = getGlobal();\n\n  if (!result) {\n    actions.showNotification({\n      // TODO[lang] Localize error message\n      message: 'Failed to join voice chat',\n      tabId,\n    });\n    actions.leaveGroupCall({ tabId });\n    return;\n  }\n\n  actions.loadMoreGroupCallParticipants();\n\n  if (groupCall.chatId) {\n    global = getGlobal();\n    const chat = selectChat(global, groupCall.chatId);\n    if (!chat) return;\n    await loadFullChat(global, actions, chat);\n  }\n});\n\naddActionHandler('connectToActivePhoneCall', async (global, actions): Promise<void> => {\n  const { phoneCall } = global;\n\n  if (!phoneCall) return;\n\n  const user = selectPhoneCallUser(global);\n\n  if (!user) return;\n\n  const dhConfig = await callApi('getDhConfig');\n\n  if (!dhConfig) return;\n\n  await callApi('createPhoneCallState', [true]);\n\n  const gAHash = await callApi('requestPhoneCall', [dhConfig]);\n\n  const result = await callApi('requestCall', { user, gAHash, isVideo: phoneCall.isVideo });\n\n  if (!result) {\n    if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n  }\n});\n\naddActionHandler('acceptCall', async (global): Promise<void> => {\n  const { phoneCall } = global;\n\n  if (!phoneCall) return;\n\n  const dhConfig = await callApi('getDhConfig');\n  if (!dhConfig) return;\n\n  await callApi('createPhoneCallState', [false]);\n\n  const gB = await callApi('acceptPhoneCall', [dhConfig]);\n  await callApi('acceptCall', { call: phoneCall, gB });\n});\n\naddActionHandler('sendSignalingData', (global, actions, payload): ActionReturnType => {\n  const { phoneCall } = global;\n  if (!phoneCall) {\n    return;\n  }\n\n  const data = JSON.stringify(payload);\n\n  (async () => {\n    const encodedData = await callApi('encodePhoneCallData', [data]);\n\n    if (!encodedData) return;\n\n    callApi('sendSignalingData', { data: encodedData, call: phoneCall });\n  })();\n});\n\naddActionHandler('closeCallRatingModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    ratingPhoneCall: undefined,\n  }, tabId);\n});\n\naddActionHandler('setCallRating', (global, actions, payload): ActionReturnType => {\n  const { rating, comment, tabId = getCurrentTabId() } = payload;\n\n  const { ratingPhoneCall } = selectTabState(global, tabId);\n  if (!ratingPhoneCall) {\n    return undefined;\n  }\n\n  callApi('setCallRating', { call: ratingPhoneCall, rating, comment });\n\n  return updateTabState(global, {\n    ratingPhoneCall: undefined,\n  }, tabId);\n});\n\naddActionHandler('hangUp', (global, actions, payload): ActionReturnType => {\n  const { isPageUnload, tabId = getCurrentTabId() } = payload || {};\n  const { phoneCall } = global;\n\n  if (!phoneCall) return undefined;\n\n  if (phoneCall.state === 'discarded') {\n    callApi('destroyPhoneCallState');\n    stopPhoneCall();\n\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n    actions.afterHangUp();\n\n    return undefined;\n  }\n\n  callApi('destroyPhoneCallState');\n  stopPhoneCall();\n  callApi('discardCall', { call: phoneCall, isPageUnload });\n\n  if (phoneCall.state === 'requesting') {\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n    actions.afterHangUp();\n\n    return undefined;\n  }\n\n  setTimeout(() => {\n    global = getGlobal();\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n    actions.afterHangUp();\n  }, HANG_UP_UI_DELAY);\n\n  return undefined;\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wk7JwPx3\",\"subtitle\":\"ShcCNemD\",\"subtitleText\":\"UZLgp2cx\",\"icon\":\"vRc6jhKf\",\"subtitleBlue\":\"yA7bxEWw\",\"subtitleRed\":\"DnuZwImI\",\"subtitleGreen\":\"BkgYQGFq\",\"avatar\":\"ouHUJ9ff\"};","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_WINDOW_BUTTONS_POSITION = 'set-window-buttons-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type WindowButtonsPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setWindowButtonsPosition: (position: WindowButtonsPosition) => Promise<void>;\n  /**\n   * @deprecated Use `setWindowButtonsPosition` instead\n   */\n  setTrafficLightPosition: (position: WindowButtonsPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  googleLogin: () => Promise<any>;\n\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallConnectionState } from '../../../lib/secret-sauce';\n\nimport { selectActiveGroupCall, selectGroupCallParticipant } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { vibrateShort } from '../../../util/vibrate';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './MicrophoneButton.module.scss';\n\nconst CONNECTION_STATE_DEFAULT = 'discarded';\n\ntype OwnProps = {\n  className?: string;\n};\n\ntype StateProps = {\n  connectionState?: GroupCallConnectionState;\n  hasRequestedToSpeak: boolean;\n  isMuted?: boolean;\n  canSelfUnmute?: boolean;\n  noAudioStream: boolean;\n};\n\nconst REQUEST_TO_SPEAK_THROTTLE = 3000;\nconst HOLD_TO_SPEAK_TIME = 200;\nconst ICON_SIZE = 36;\n\nconst MicrophoneButton: FC<OwnProps & StateProps> = ({\n  className,\n  noAudioStream,\n  canSelfUnmute,\n  isMuted,\n  connectionState,\n}) => {\n  const {\n    toggleGroupCallMute,\n    requestToSpeak,\n    playGroupCallSound,\n  } = getActions();\n\n  const lang = useOldLang();\n  const muteMouseDownState = useRef('up');\n\n  const [isRequestingToSpeak, setIsRequestingToSpeak] = useState(false);\n  const isConnecting = connectionState !== 'connected';\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n  const prevShouldRaiseHand = usePreviousDeprecated(shouldRaiseHand);\n\n  useEffect(() => {\n    if (prevShouldRaiseHand && !shouldRaiseHand) {\n      playGroupCallSound({ sound: 'allowTalk' });\n    }\n  }, [playGroupCallSound, prevShouldRaiseHand, shouldRaiseHand]);\n\n  // Voice mini\n  // unmuted -> muted [69, 99]\n  // muted -> unmuted [36, 69]\n  // raise -> muted [0, 36]\n  // muted -> raise [99, 136]\n  // unmuted -> raise [136, 172]\n  // TODO should probably move to other component\n  const playSegment: [number, number] = useMemo(() => {\n    if (isRequestingToSpeak) {\n      const r = Math.floor(Math.random() * 100);\n      return (r < 32 ? [0, 120]\n        : (r < 64 ? [120, 240]\n          : (r < 97 ? [240, 420]\n            : [420, 540]\n          )\n        )\n      );\n    }\n    if (!prevShouldRaiseHand && shouldRaiseHand) {\n      return noAudioStream ? [99, 135] : [136, 172];\n    }\n    if (prevShouldRaiseHand && !shouldRaiseHand) {\n      return [0, 36];\n    }\n    if (!shouldRaiseHand) {\n      return noAudioStream ? [69, 99] : [36, 69];\n    }\n    return [0, 0];\n  }, [prevShouldRaiseHand, isRequestingToSpeak, noAudioStream, shouldRaiseHand]);\n\n  const animatedIconName = isRequestingToSpeak ? 'HandFilled' : 'VoiceMini';\n\n  const toggleMute = useCallback(() => {\n    vibrateShort();\n    toggleGroupCallMute();\n  }, [toggleGroupCallMute]);\n\n  const handleMouseDownMute = useCallback(() => {\n    if (shouldRaiseHand) {\n      if (isRequestingToSpeak) return;\n      vibrateShort();\n      requestToSpeak();\n      setIsRequestingToSpeak(true);\n      setTimeout(() => {\n        setIsRequestingToSpeak(false);\n      }, REQUEST_TO_SPEAK_THROTTLE);\n      return;\n    }\n    muteMouseDownState.current = 'down';\n    if (noAudioStream) {\n      setTimeout(() => {\n        if (muteMouseDownState.current === 'down') {\n          muteMouseDownState.current = 'hold';\n          toggleMute();\n        }\n      }, HOLD_TO_SPEAK_TIME);\n    }\n  }, [isRequestingToSpeak, noAudioStream, requestToSpeak, shouldRaiseHand, toggleMute]);\n\n  const handleMouseUpMute = useCallback(() => {\n    if (shouldRaiseHand) {\n      return;\n    }\n    toggleMute();\n    muteMouseDownState.current = 'up';\n  }, [shouldRaiseHand, toggleMute]);\n\n  return (\n    <Button\n      round\n      size=\"default\"\n      className={buildClassName(\n        styles.root,\n        !isConnecting && noAudioStream && styles.canUnmute,\n        !isConnecting && shouldRaiseHand && styles.mutedByAdmin,\n        className,\n      )}\n      onMouseDown={handleMouseDownMute}\n      onMouseUp={handleMouseUpMute}\n      ariaLabel={lang(isMuted ? 'VoipUnmute' : 'VoipMute')}\n      disabled={isConnecting}\n    >\n      <AnimatedIcon\n        tgsUrl={LOCAL_TGS_URLS[animatedIconName]}\n        size={ICON_SIZE}\n        play={playSegment.toString()}\n        playSegment={playSegment}\n        className={styles.icon}\n        forceAlways\n      />\n      <Spinner className={buildClassName(styles.spinner, isConnecting && styles.spinnerVisible)} color=\"white\" />\n    </Button>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const groupCall = selectActiveGroupCall(global);\n\n    const { connectionState } = groupCall || {};\n    const meParticipant = groupCall && selectGroupCallParticipant(global, groupCall.id, global.currentUserId!);\n\n    const {\n      raiseHandRating, hasAudioStream, canSelfUnmute, isMuted,\n    } = meParticipant || {};\n\n    return {\n      connectionState: connectionState || CONNECTION_STATE_DEFAULT,\n      hasRequestedToSpeak: Boolean(raiseHandRating),\n      noAudioStream: !hasAudioStream,\n      canSelfUnmute,\n      isMuted,\n    };\n  },\n)(MicrophoneButton));\n","// extracted by mini-css-extract-plugin\nexport default {\"stars\":\"P7EfDKJN\",\"star\":\"t8LJLFSN\",\"isFilled\":\"_XX6q8YW\",\"comment\":\"EvL0WaKD\",\"visible\":\"v5hn1XvT\"};","import React from '@teact';\nimport '../../../global/actions/calls';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  GroupCallConnectionState, GroupCallParticipant as TypeGroupCallParticipant,\n} from '../../../lib/secret-sauce';\nimport type { VideoParticipant } from './hooks/useGroupCallVideoLayout';\n\nimport { IS_SCREENSHARE_SUPPORTED } from '../../../lib/secret-sauce';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport {\n  selectCanInviteToActiveGroupCall,\n  selectGroupCall,\n  selectGroupCallParticipant,\n  selectIsAdminInActiveGroupCall,\n} from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIntersectionObserver, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useFullscreenStatus } from '../../../hooks/window/useFullscreen';\nimport useGroupCallVideoLayout from './hooks/useGroupCallVideoLayout';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Modal from '../../ui/Modal';\nimport GroupCallParticipantList from './GroupCallParticipantList';\nimport GroupCallParticipantVideo from './GroupCallParticipantVideo';\nimport MicrophoneButton from './MicrophoneButton';\n\nimport styles from './GroupCall.module.scss';\n\nconst INTERSECTION_THROTTLE = 200;\n\nexport type OwnProps = {\n  groupCallId: string;\n};\n\ntype StateProps = {\n  isCallPanelVisible: boolean;\n  connectionState: GroupCallConnectionState;\n  title?: string;\n  meParticipant?: TypeGroupCallParticipant;\n  participantsCount?: number;\n  isAdmin: boolean;\n  participants: Record<string, TypeGroupCallParticipant>;\n  canInvite: boolean;\n};\n\nconst GroupCall: FC<OwnProps & StateProps> = ({\n  groupCallId,\n  isCallPanelVisible,\n  connectionState,\n  participantsCount,\n  title,\n  meParticipant,\n  isAdmin,\n  participants,\n  canInvite,\n}) => {\n  const {\n    toggleGroupCallVideo,\n    toggleGroupCallPresentation,\n    leaveGroupCall,\n    toggleGroupCallPanel,\n    connectToActiveGroupCall,\n    playGroupCallSound,\n    createGroupCallInviteLink,\n  } = getActions();\n\n  const lang = useOldLang();\n  const containerRef = useRef<HTMLDivElement>();\n\n  const primaryVideoContainerRef = useRef<HTMLDivElement>();\n  const secondaryVideoContainerRef = useRef<HTMLDivElement>();\n\n  const panelScrollTriggerRef = useRef<HTMLDivElement>();\n  const panelRef = useRef<HTMLDivElement>();\n\n  const [isLeaving, setIsLeaving] = useState(false);\n  const isOpen = !isCallPanelVisible && !isLeaving;\n\n  const { observe } = useIntersectionObserver({\n    rootRef: panelRef,\n    throttleMs: INTERSECTION_THROTTLE,\n    isDisabled: !isOpen,\n  });\n\n  const hasScrolled = !useIsIntersecting(panelScrollTriggerRef, isOpen ? observe : undefined);\n\n  const { isMobile, isLandscape } = useAppLayout();\n\n  const [isFullscreen, openFullscreen, closeFullscreen] = useFlag();\n  const [isSidebarOpen, openSidebar, closeSidebar] = useFlag(true);\n  const isLandscapeLayout = Boolean(isFullscreen && isLandscape);\n  const isAppFullscreen = useFullscreenStatus();\n\n  const firstPresentation = useMemo(() => {\n    return Object.values(participants).find(({ presentation }) => presentation);\n  }, [participants]);\n  const videoParticipants = useMemo(() => Object.values(participants)\n    .filter(({ video, presentation }) => video || presentation)\n    .flatMap(({ id, video, presentation }) => compact([\n      video ? {\n        id,\n        type: 'video' as const,\n      } : undefined,\n      presentation ? {\n        id,\n        type: 'screen' as const,\n      } : undefined,\n    ])),\n  [participants]);\n  const hasVideoParticipants = videoParticipants.length > 0;\n\n  const groupCallTitle = title || lang('VoipGroupVoiceChat');\n  const membersString = lang('Participants', participantsCount, 'i');\n\n  const [isConfirmLeaveModalOpen, openConfirmLeaveModal, closeConfirmLeaveModal] = useFlag();\n  const [isEndGroupCallModal, setIsEndGroupCallModal] = useState(false);\n  const [shouldEndGroupCall, setShouldEndGroupCall] = useState(false);\n\n  const hasVideo = meParticipant?.hasVideoStream;\n  const hasPresentation = meParticipant?.hasPresentationStream;\n  const hasAudioStream = meParticipant?.hasAudioStream;\n  const isConnecting = connectionState !== 'connected';\n  const canSelfUnmute = meParticipant?.canSelfUnmute;\n  const canRequestToSpeak = !canSelfUnmute && !hasAudioStream;\n\n  useEffect(() => {\n    if (connectionState === 'connected') {\n      playGroupCallSound({ sound: 'join' });\n    } else if (connectionState === 'reconnecting') {\n      playGroupCallSound({ sound: 'connecting' });\n    }\n  }, [connectionState]);\n\n  const handleCloseConfirmLeaveModal = useLastCallback(() => {\n    closeConfirmLeaveModal();\n    setIsEndGroupCallModal(false);\n  });\n\n  const handleToggleFullscreen = useLastCallback(() => {\n    if (!containerRef.current || isMobile) return;\n\n    if (isFullscreen) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  });\n\n  const handleToggleSidebar = useLastCallback(() => {\n    if (isSidebarOpen) {\n      closeSidebar();\n    } else {\n      openSidebar();\n    }\n  });\n\n  const handleToggleGroupCallPanel = useLastCallback(() => {\n    toggleGroupCallPanel();\n  });\n\n  const handleInviteMember = useLastCallback(() => {\n    createGroupCallInviteLink();\n  });\n\n  const handleClickVideo = useLastCallback(() => {\n    toggleGroupCallVideo();\n  });\n\n  useEffect(() => {\n    connectToActiveGroupCall();\n  }, [connectToActiveGroupCall, groupCallId]);\n\n  const handleLeaveGroupCall = useLastCallback(() => {\n    if (isAdmin && !isConfirmLeaveModalOpen) {\n      openConfirmLeaveModal();\n      return;\n    }\n    playGroupCallSound({ sound: 'leave' });\n    setIsLeaving(true);\n    closeConfirmLeaveModal();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (!isLeaving) return;\n\n    leaveGroupCall({\n      shouldDiscard: shouldEndGroupCall,\n    });\n  });\n\n  const handleToggleGroupCallPresentation = useLastCallback(() => {\n    toggleGroupCallPresentation();\n  });\n\n  const canPinVideo = videoParticipants.length > 1 && !isMobile;\n  const isLandscapeWithVideos = isLandscapeLayout && hasVideoParticipants;\n  const [pinnedVideo, setPinnedVideo] = useState<VideoParticipant | undefined>(undefined);\n  const {\n    videoLayout,\n    panelOffset,\n  } = useGroupCallVideoLayout({\n    primaryContainerRef: primaryVideoContainerRef,\n    secondaryContainerRef: secondaryVideoContainerRef,\n    videoParticipants,\n    isLandscapeLayout,\n    pinnedVideo,\n  });\n\n  const handleSetPinnedVideo = useLastCallback((video: VideoParticipant | undefined) => {\n    setPinnedVideo(video);\n    if (video && !isFullscreen) {\n      openFullscreen();\n    }\n  });\n\n  const handleOpenFirstPresentation = useLastCallback(() => {\n    if (!firstPresentation) return;\n\n    setPinnedVideo({\n      id: firstPresentation.id,\n      type: 'screen',\n    });\n  });\n\n  useEffect(handleOpenFirstPresentation, [handleOpenFirstPresentation, Boolean(firstPresentation)]);\n\n  useEffect(() => {\n    if (!pinnedVideo) return;\n    if (!videoParticipants.some((l) => l.type === pinnedVideo.type && l.id === pinnedVideo.id)) {\n      setPinnedVideo(undefined);\n    }\n  }, [pinnedVideo, videoLayout, videoParticipants]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={toggleGroupCallPanel}\n      className={buildClassName(\n        styles.root,\n        (isFullscreen || isMobile) && styles.fullscreen,\n        isAppFullscreen && styles.appFullscreen,\n        isLandscapeLayout && styles.landscape,\n        !hasVideoParticipants && styles.noVideoParticipants,\n        !isLandscapeLayout && styles.portrait,\n        !isSidebarOpen && isLandscapeWithVideos && styles.noSidebar,\n      )}\n      dialogRef={containerRef}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {isLandscapeWithVideos && (\n        <div className={styles.videos}>\n          <div className={styles.videosHeader}>\n            {!isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                onClick={handleToggleFullscreen}\n                className={buildClassName(styles.headerButton, styles.firstButton)}\n                ariaLabel={lang(isFullscreen ? 'AccExitFullscreen' : 'AccSwitchToFullscreen')}\n              >\n                <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n              </Button>\n            )}\n\n            <h3 className={buildClassName(styles.title, styles.bigger)}>\n              {title || lang('VoipGroupVoiceChat')}\n            </h3>\n\n            {isLandscapeWithVideos && !isSidebarOpen && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                className={buildClassName(styles.headerButton, styles.videosHeaderLastButton)}\n                onClick={handleToggleSidebar}\n                ariaLabel={lang('AccDescrExpandPanel')}\n              >\n                <Icon name=\"sidebar\" />\n              </Button>\n            )}\n          </div>\n\n          <div\n            className={styles.videosContent}\n            ref={primaryVideoContainerRef}\n          />\n        </div>\n      )}\n\n      <div className={styles.panelWrapper} ref={panelRef}>\n        <div className={buildClassName(styles.panel, 'custom-scroll')}>\n          <div className={styles.panelScrollTrigger} ref={panelScrollTriggerRef} />\n\n          <div className={buildClassName(styles.panelHeader, hasScrolled && styles.scrolled)}>\n            {!isLandscapeWithVideos && !isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.firstButton,\n                  styles.headerButton,\n                )}\n                onClick={handleToggleFullscreen}\n                ariaLabel={lang('AccSwitchToFullscreen')}\n              >\n                <Icon name=\"fullscreen\" />\n              </Button>\n            )}\n\n            {isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                onClick={handleToggleGroupCallPanel}\n                className={buildClassName(styles.headerButton, styles.firstButton)}\n                ariaLabel={lang('Close')}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            )}\n\n            {isLandscapeWithVideos && (\n              <Button\n                round\n                size=\"smaller\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.firstButton,\n                  styles.headerButton,\n                )}\n                color=\"translucent\"\n                onClick={handleToggleSidebar}\n                ariaLabel={lang('AccDescrCollapsePanel')}\n              >\n                <Icon name=\"sidebar\" />\n              </Button>\n            )}\n\n            <div className={styles.panelHeaderText}>\n              <h3 className={buildClassName(styles.title, isLandscapeWithVideos && styles.bigger)}>\n                {isLandscapeWithVideos ? membersString : groupCallTitle}\n              </h3>\n              {!isLandscapeWithVideos && (\n                <span className={styles.subtitle}>\n                  {membersString}\n                </span>\n              )}\n            </div>\n\n            {!isLandscapeWithVideos && canInvite && (\n              <Button\n                round\n                size=\"smaller\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.lastButton,\n                  styles.headerButton,\n                )}\n                color=\"translucent\"\n                onClick={handleInviteMember}\n                ariaLabel={lang('VoipGroupInviteMember')}\n              >\n                <Icon name=\"add-user\" />\n              </Button>\n            )}\n          </div>\n\n          <div className={styles.participants}>\n            <div\n              className={styles.participantVideos}\n              ref={secondaryVideoContainerRef}\n              style={`height: ${panelOffset}px;`}\n            >\n              {videoLayout.map((layout) => {\n                const participant = participants[layout.participantId];\n                if (!layout.isRemounted || !participant) {\n                  return (\n                    <div\n                      teactOrderKey={layout.orderKey}\n                      key={`${layout.participantId}_${layout.type}`}\n                    />\n                  );\n                }\n\n                return (\n                  <GroupCallParticipantVideo\n                    teactOrderKey={layout.orderKey}\n                    key={`${layout.participantId}_${layout.type}`}\n                    layout={layout}\n                    canPin={canPinVideo}\n                    setPinned={handleSetPinnedVideo}\n                    pinnedVideo={pinnedVideo}\n                    participant={participant}\n                  />\n                );\n              })}\n            </div>\n            <GroupCallParticipantList\n              panelOffset={panelOffset}\n              isLandscape={isLandscapeWithVideos}\n            />\n          </div>\n        </div>\n\n        <FloatingActionButton\n          key=\"add-participant\"\n          isShown={isLandscapeWithVideos && canInvite}\n          onClick={handleInviteMember}\n          className={styles.addParticipantButton}\n          ariaLabel={lang('VoipGroupInviteMember')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      </div>\n\n      <div className={styles.mainVideoContainer}>\n        {videoLayout.map((layout) => {\n          const participant = participants[layout.participantId];\n          if (layout.isRemounted || !participant) {\n            return (\n              <div\n                teactOrderKey={layout.orderKey}\n                key={`${layout.participantId}_${layout.type}`}\n              />\n            );\n          }\n          return (\n            <GroupCallParticipantVideo\n              teactOrderKey={layout.orderKey}\n              key={`${layout.participantId}_${layout.type}`}\n              layout={layout}\n              canPin={canPinVideo}\n              setPinned={handleSetPinnedVideo}\n              pinnedVideo={pinnedVideo}\n              participant={participant}\n              className={styles.video}\n            />\n          );\n        })}\n      </div>\n\n      <div className={styles.actions}>\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          onClick={handleClickVideo}\n          ariaLabel={lang(hasVideo ? 'VoipStopVideo' : 'VoipStartVideo')}\n          disabled={isConnecting}\n        >\n          <Icon name={!hasVideo ? 'video-stop' : 'video'} />\n        </Button>\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          onClick={handleToggleGroupCallPresentation}\n          ariaLabel={lang(hasPresentation ? 'lng_group_call_screen_share_stop' : 'lng_group_call_tooltip_screen')}\n          disabled={isConnecting || !IS_SCREENSHARE_SUPPORTED}\n        >\n          <Icon name={!hasPresentation ? 'share-screen-stop' : 'share-screen'} />\n        </Button>\n\n        <MicrophoneButton className={styles.actionButton} />\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          ariaLabel={lang('lng_group_call_settings')}\n          disabled\n        >\n          <Icon name=\"settings-filled\" />\n        </Button>\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            styles.destructive,\n          )}\n          onClick={handleLeaveGroupCall}\n          ariaLabel={lang('lng_group_call_leave')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      </div>\n\n      <Modal\n        isOpen={isConfirmLeaveModalOpen}\n        onClose={handleCloseConfirmLeaveModal}\n        className=\"error\"\n        title={lang(isEndGroupCallModal ? 'VoipGroupEndAlertTitle' : 'VoipGroupLeaveAlertTitle')}\n      >\n        <p>{lang(isEndGroupCallModal ? 'VoipGroupEndAlertText' : 'VoipGroupLeaveAlertText')}</p>\n        {!isEndGroupCallModal && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={lang('VoipGroupEndChat')}\n            checked={shouldEndGroupCall}\n            onCheck={setShouldEndGroupCall}\n          />\n        )}\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" onClick={handleLeaveGroupCall}>\n            {lang(isEndGroupCallModal ? 'VoipGroupEnd' : 'VoipGroupLeave')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseConfirmLeaveModal}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </Modal>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { groupCallId }): StateProps => {\n    const {\n      connectionState, title, participants, participantsCount, chatId,\n    } = selectGroupCall(global, groupCallId) || {};\n\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n\n    return {\n      connectionState,\n      title: title || chat?.title,\n      participantsCount,\n      meParticipant: selectGroupCallParticipant(global, groupCallId, global.currentUserId!),\n      isCallPanelVisible: Boolean(selectTabState(global).isCallPanelVisible),\n      isAdmin: selectIsAdminInActiveGroupCall(global),\n      participants,\n      canInvite: selectCanInviteToActiveGroupCall(global),\n    };\n  },\n)(GroupCall));\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\nimport type { VideoLayout, VideoParticipant } from './hooks/useGroupCallVideoLayout';\n\nimport { GROUP_CALL_DEFAULT_VOLUME } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getUserStreams, THRESHOLD } from '../../../lib/secret-sauce';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport { animate } from '../../../util/animation';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { fastRaf } from '../../../util/schedulers';\nimport formatGroupCallVolume from './helpers/formatGroupCallVolume';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport GroupCallParticipantMenu from './GroupCallParticipantMenu';\nimport OutlinedMicrophoneIcon from './OutlinedMicrophoneIcon';\n\nimport styles from './GroupCallParticipantVideo.module.scss';\n\nconst BLUR_RADIUS = 2;\nconst BLUR_ITERATIONS = 2;\nconst VIDEO_FALLBACK_UPDATE_INTERVAL = 1000;\n\ntype OwnProps = {\n  layout: VideoLayout;\n  setPinned: (participant?: VideoParticipant) => void;\n  pinnedVideo: VideoParticipant | undefined;\n  canPin: boolean;\n  participant: TypeGroupCallParticipant;\n  className?: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n};\n\nconst GroupCallParticipantVideo: FC<OwnProps & StateProps> = ({\n  layout,\n  pinnedVideo,\n  setPinned,\n  canPin,\n  className,\n  participant,\n  user,\n  chat,\n}) => {\n  const lang = useOldLang();\n\n  const thumbnailRef = useRef<HTMLCanvasElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n  const videoFallbackRef = useRef<HTMLCanvasElement>();\n\n  const {\n    x, y, width, height, noAnimate, isRemoved,\n    type,\n  } = layout;\n  const {\n    isSelf, isMutedByMe, isMuted,\n  } = participant;\n  const isPinned = pinnedVideo?.id === participant.id && pinnedVideo?.type === type;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n  const shouldFlipVideo = type === 'video' && participant.isSelf;\n\n  const status = useMemo(() => {\n    if (isSelf) {\n      return lang('ThisIsYou');\n    }\n\n    if (isMutedByMe) {\n      return lang('VoipGroupMutedForMe');\n    }\n\n    if (isRaiseHand) {\n      return lang('WantsToSpeak');\n    }\n\n    if (isMuted || !isSpeaking) {\n      return lang('Listening');\n    }\n\n    if (participant.volume && participant.volume !== GROUP_CALL_DEFAULT_VOLUME) {\n      return lang('SpeakingWithVolume', formatGroupCallVolume(participant))\n        .replace('%%', '%');\n    }\n\n    return lang('Speaking');\n  }, [isSelf, isMutedByMe, isRaiseHand, isMuted, isSpeaking, participant, lang]);\n\n  const prevLayoutRef = useRef<VideoLayout>();\n  if (!isRemoved) {\n    prevLayoutRef.current = layout;\n  }\n  const {\n    x: prevX, y: prevY, width: prevWidth, height: prevHeight,\n  } = prevLayoutRef.current || {};\n\n  const [currentX, currentY, currentWidth, currentHeight] = isRemoved\n    ? [prevX, prevY, prevWidth, prevHeight] : [x, y, width, height];\n\n  const [isHidden, setIsHidden] = useState(!noAnimate);\n\n  const streams = getUserStreams(user?.id || chat!.id);\n  const actualStream = type === 'video' ? streams?.video : streams?.presentation;\n  const streamRef = useRef(actualStream);\n  if (actualStream?.active && actualStream?.getVideoTracks()[0].enabled) {\n    streamRef.current = actualStream;\n  }\n  const stream = streamRef.current;\n\n  const handleInactive = useLastCallback(() => {\n    const video = videoRef.current;\n    if (!video) return;\n    // eslint-disable-next-line no-null/no-null\n    video.srcObject = null;\n  });\n\n  useEffect(() => {\n    stream?.addEventListener('inactive', handleInactive);\n    return () => {\n      stream?.removeEventListener('inactive', handleInactive);\n    };\n  }, [handleInactive, stream]);\n\n  useEffect(() => {\n    setIsHidden(false);\n  }, []);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleCanPlay = useLastCallback(() => {\n    setIsLoading(false);\n  });\n\n  // When video stream is removed, the video element starts showing empty black screen.\n  // To avoid that, we hide the video element and show the fallback frame instead, which is constantly updated\n  // every VIDEO_FALLBACK_UPDATE_INTERVAL milliseconds.\n  useInterval(() => {\n    if (!stream?.active) return;\n    const video = videoRef.current!;\n    const canvas = videoFallbackRef.current!;\n\n    requestMutation(() => {\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      canvas.getContext('2d')!.drawImage(video, 0, 0, canvas.width, canvas.height);\n    });\n  }, VIDEO_FALLBACK_UPDATE_INTERVAL);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    const thumbnail = thumbnailRef.current;\n    if (!video || !thumbnail || !stream) return undefined;\n\n    const ctx = thumbnail.getContext('2d', { alpha: false });\n    if (!ctx) return undefined;\n\n    let isDrawing = true;\n    requestMutation(() => {\n      if (!isDrawing) return;\n      thumbnail.width = 16;\n      thumbnail.height = 16;\n      ctx.filter = 'blur(2px)';\n\n      const draw = () => {\n        if (!isDrawing) return false;\n        if (!stream.active) {\n          return false;\n        }\n        ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight, 0, 0, thumbnail.width, thumbnail.height);\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, thumbnail.width, thumbnail.height, BLUR_RADIUS, BLUR_ITERATIONS);\n        }\n        return true;\n      };\n\n      animate(draw, fastRaf);\n    });\n\n    return () => {\n      isDrawing = false;\n    };\n  }, [stream]);\n\n  const ref = useRef<HTMLDivElement>();\n  const menuRef = useRef<HTMLDivElement>();\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isSelf);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => menuRef.current!,\n    [],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: true }),\n    [],\n  );\n\n  const handleClickPin = useCallback(() => {\n    setPinned(!isPinned ? {\n      id: user?.id || chat!.id,\n      type,\n    } : undefined);\n  }, [chat, isPinned, setPinned, type, user?.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.wrapper,\n        (isHidden || isRemoved) && styles.hidden,\n        noAnimate && styles.noAnimate,\n        className,\n        isPinned && styles.pinned,\n      )}\n      style={`--x: ${currentX}px; --y: ${currentY}px; --width: ${currentWidth}px; --height: ${currentHeight}px;`}\n      ref={ref}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={canPin ? handleClickPin : undefined}\n    >\n      <div\n        className={buildClassName(\n          styles.root,\n          isSpeaking && styles.speaking,\n        )}\n      >\n        {isLoading && (\n          <Skeleton className={buildClassName(styles.video, styles.loader)} />\n        )}\n        {stream && (\n          <video\n            className={buildClassName(styles.video, shouldFlipVideo && styles.flipped)}\n            muted\n            autoPlay\n            playsInline\n            srcObject={stream}\n            ref={videoRef}\n            onCanPlay={handleCanPlay}\n          />\n        )}\n        <canvas\n          className={buildClassName(styles.videoFallback, shouldFlipVideo && styles.flipped)}\n          ref={videoFallbackRef}\n        />\n        <div className={styles.thumbnailWrapper}>\n          <canvas\n            className={buildClassName(styles.thumbnail, shouldFlipVideo && styles.flipped)}\n            ref={thumbnailRef}\n          />\n        </div>\n        {canPin && (\n          <Button\n            round\n            size=\"smaller\"\n            ripple\n            color=\"translucent\"\n            className={styles.pinButton}\n            ariaLabel={lang(isPinned ? 'lng_group_call_context_unpin_camera' : 'lng_group_call_context_pin_camera')}\n            onClick={handleClickPin}\n          >\n            <Icon name={isPinned ? 'unpin' : 'pin'} />\n          </Button>\n        )}\n        <div className={styles.bottomPanel}>\n          <div className={styles.info}>\n            <FullNameTitle peer={user || chat!} className={styles.name} />\n            <div className={styles.status}>{status}</div>\n          </div>\n          <OutlinedMicrophoneIcon participant={participant} className={styles.icon} noColor />\n        </div>\n      </div>\n\n      <GroupCallParticipantMenu\n        participant={participant}\n        isDropdownOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        getLayout={getLayout}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        menuRef={menuRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { participant }): StateProps => {\n    return {\n      user: participant.isUser ? selectUser(global, participant.id) : undefined,\n      chat: !participant.isUser ? selectChat(global, participant.id) : undefined,\n    };\n  },\n)(GroupCallParticipantVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DKuzmnN7\",\"hidden\":\"T_wodAHA\",\"noAnimate\":\"yPCkJzpi\",\"root\":\"eBq1NoLo\",\"speaking\":\"h4NcT6OS\",\"loader\":\"XedVWQii\",\"video\":\"eUXuK9Oz\",\"videoFallback\":\"eTpvBU_b eUXuK9Oz\",\"thumbnailWrapper\":\"R5ULTrF9\",\"thumbnail\":\"cjUWuViy\",\"flipped\":\"O2bTiH2E\",\"pinButton\":\"lPdblo0y\",\"bottomPanel\":\"T1deCDSn\",\"info\":\"LzFFayK3\",\"pinned\":\"B4WZhF9P\",\"name\":\"RBwMAuKp\",\"status\":\"z1ZZTsjC\",\"icon\":\"j1aDzn1H\"};","import React from '@teact';\nimport '../../../global/actions/calls';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoneCall, ApiUser } from '../../../api/types';\n\nimport {\n  getStreams, IS_SCREENSHARE_SUPPORTED, switchCameraInputP2p, toggleStreamP2p,\n} from '../../../lib/secret-sauce';\nimport { selectTabState } from '../../../global/selectors';\nimport { selectPhoneCallUser } from '../../../global/selectors/calls';\nimport {\n  IS_ANDROID,\n  IS_IOS,\n  IS_REQUEST_FULLSCREEN_SUPPORTED,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport PhoneCallButton from './PhoneCallButton';\n\nimport styles from './PhoneCall.module.scss';\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCall?: ApiPhoneCall;\n  isOutgoing: boolean;\n  isCallPanelVisible?: boolean;\n};\n\nconst PhoneCall: FC<StateProps> = ({\n  user,\n  isOutgoing,\n  phoneCall,\n  isCallPanelVisible,\n}) => {\n  const lang = useOldLang();\n  const {\n    hangUp, requestMasterAndAcceptCall, playGroupCallSound, toggleGroupCallPanel, connectToActivePhoneCall,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n\n  const [isFullscreen, openFullscreen, closeFullscreen] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const toggleFullscreen = useCallback(() => {\n    if (isFullscreen) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  const handleToggleFullscreen = useCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isFullscreen) {\n      document.exitFullscreen().then(closeFullscreen);\n    } else {\n      containerRef.current.requestFullscreen().then(openFullscreen);\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  useEffect(() => {\n    if (!IS_REQUEST_FULLSCREEN_SUPPORTED) return undefined;\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    container.addEventListener('fullscreenchange', toggleFullscreen);\n\n    return () => {\n      container.removeEventListener('fullscreenchange', toggleFullscreen);\n    };\n  }, [toggleFullscreen]);\n\n  const handleClose = useCallback(() => {\n    toggleGroupCallPanel();\n    if (isFullscreen) {\n      closeFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, toggleGroupCallPanel]);\n\n  const isDiscarded = phoneCall?.state === 'discarded';\n  const isBusy = phoneCall?.reason === 'busy';\n\n  const isIncomingRequested = phoneCall?.state === 'requested' && !isOutgoing;\n  const isOutgoingRequested = (phoneCall?.state === 'requested' || phoneCall?.state === 'waiting') && isOutgoing;\n  const isActive = phoneCall?.state === 'active';\n  const isConnected = phoneCall?.isConnected;\n\n  const [isHangingUp, startHangingUp, stopHangingUp] = useFlag();\n  const handleHangUp = useCallback(() => {\n    startHangingUp();\n    hangUp();\n  }, [hangUp, startHangingUp]);\n\n  useEffect(() => {\n    if (isHangingUp) {\n      playGroupCallSound({ sound: 'end' });\n    } else if (isIncomingRequested) {\n      playGroupCallSound({ sound: 'incoming' });\n    } else if (isBusy) {\n      playGroupCallSound({ sound: 'busy' });\n    } else if (isDiscarded) {\n      playGroupCallSound({ sound: 'end' });\n    } else if (isOutgoingRequested) {\n      playGroupCallSound({ sound: 'ringing' });\n    } else if (isConnected) {\n      playGroupCallSound({ sound: 'connect' });\n    }\n  }, [isBusy, isDiscarded, isIncomingRequested, isOutgoingRequested, isConnected, playGroupCallSound, isHangingUp]);\n\n  useEffect(() => {\n    if (phoneCall?.id) {\n      stopHangingUp();\n    } else {\n      connectToActivePhoneCall();\n    }\n  }, [connectToActivePhoneCall, phoneCall?.id, stopHangingUp]);\n\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, isConnected ? 1000 : undefined);\n\n  const callStatus = useMemo(() => {\n    const state = phoneCall?.state;\n    if (isHangingUp) {\n      return lang('lng_call_status_hanging');\n    }\n    if (isBusy) return 'busy';\n    if (state === 'requesting') {\n      return lang('lng_call_status_requesting');\n    } else if (state === 'requested') {\n      return isOutgoing ? lang('lng_call_status_ringing') : lang('lng_call_status_incoming');\n    } else if (state === 'waiting') {\n      return lang('lng_call_status_waiting');\n    } else if (state === 'active' && isConnected) {\n      return undefined;\n    } else {\n      return lang('lng_call_status_exchanging');\n    }\n  }, [isBusy, isConnected, isHangingUp, isOutgoing, lang, phoneCall?.state]);\n\n  const hasVideo = phoneCall?.videoState === 'active';\n  const hasPresentation = phoneCall?.screencastState === 'active';\n\n  const streams = getStreams();\n  const hasOwnAudio = streams?.ownAudio?.getTracks()[0].enabled;\n  const hasOwnPresentation = streams?.ownPresentation?.getTracks()[0].enabled;\n  const hasOwnVideo = streams?.ownVideo?.getTracks()[0].enabled;\n\n  const [isHidingPresentation, startHidingPresentation, stopHidingPresentation] = useFlag();\n  const [isHidingVideo, startHidingVideo, stopHidingVideo] = useFlag();\n\n  const handleTogglePresentation = useCallback(() => {\n    if (hasOwnPresentation) {\n      startHidingPresentation();\n    }\n    if (hasOwnVideo) {\n      startHidingVideo();\n    }\n    setTimeout(async () => {\n      await toggleStreamP2p('presentation');\n      stopHidingPresentation();\n      stopHidingVideo();\n    }, 250);\n  }, [\n    hasOwnPresentation, hasOwnVideo, startHidingPresentation, startHidingVideo, stopHidingPresentation, stopHidingVideo,\n  ]);\n\n  const handleToggleVideo = useCallback(() => {\n    if (hasOwnVideo) {\n      startHidingVideo();\n    }\n    if (hasOwnPresentation) {\n      startHidingPresentation();\n    }\n    setTimeout(async () => {\n      await toggleStreamP2p('video');\n      stopHidingPresentation();\n      stopHidingVideo();\n    }, 250);\n  }, [\n    hasOwnPresentation, hasOwnVideo, startHidingPresentation, startHidingVideo, stopHidingPresentation, stopHidingVideo,\n  ]);\n\n  const handleToggleAudio = useCallback(() => {\n    void toggleStreamP2p('audio');\n  }, []);\n\n  const [isEmojiOpen, openEmoji, closeEmoji] = useFlag();\n\n  const [isFlipping, startFlipping, stopFlipping] = useFlag();\n\n  const handleFlipCamera = useCallback(() => {\n    startFlipping();\n    switchCameraInputP2p();\n    setTimeout(stopFlipping, 250);\n  }, [startFlipping, stopFlipping]);\n\n  const timeElapsed = phoneCall?.startDate && (Number(new Date()) / 1000 - phoneCall.startDate);\n\n  useEffect(() => {\n    if (phoneCall?.state === 'discarded') {\n      setTimeout(hangUp, 250);\n    }\n  }, [hangUp, phoneCall?.reason, phoneCall?.state]);\n\n  return (\n    <Modal\n      isOpen={phoneCall && phoneCall?.state !== 'discarded' && !isCallPanelVisible}\n      onClose={handleClose}\n      className={buildClassName(\n        styles.root,\n        isMobile && styles.singleColumn,\n      )}\n      dialogRef={containerRef}\n    >\n      <Avatar\n        peer={user}\n        size=\"jumbo\"\n        className={hasVideo || hasPresentation ? styles.blurred : ''}\n      />\n      {phoneCall?.screencastState === 'active' && streams?.presentation\n        && <video className={styles.mainVideo} muted autoPlay playsInline srcObject={streams.presentation} />}\n      {phoneCall?.videoState === 'active' && streams?.video\n        && <video className={styles.mainVideo} muted autoPlay playsInline srcObject={streams.video} />}\n      <video\n        className={buildClassName(\n          styles.secondVideo,\n          !isHidingPresentation && hasOwnPresentation && styles.visible,\n          isFullscreen && styles.fullscreen,\n        )}\n        muted\n        autoPlay\n        playsInline\n        srcObject={streams?.ownPresentation}\n      />\n      <video\n        className={buildClassName(\n          styles.secondVideo,\n          !isHidingVideo && hasOwnVideo && styles.visible,\n          isFullscreen && styles.fullscreen,\n        )}\n        muted\n        autoPlay\n        playsInline\n        srcObject={streams?.ownVideo}\n      />\n      <div className={styles.header}>\n        {IS_REQUEST_FULLSCREEN_SUPPORTED && (\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={handleToggleFullscreen}\n            ariaLabel={lang(isFullscreen ? 'AccExitFullscreen' : 'AccSwitchToFullscreen')}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          className={styles.closeButton}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      </div>\n      <div\n        className={buildClassName(styles.emojisBackdrop, isEmojiOpen && styles.open)}\n        onClick={!isEmojiOpen ? openEmoji : closeEmoji}\n      >\n        <div className={buildClassName(styles.emojis, isEmojiOpen && styles.open)}>\n          {phoneCall?.isConnected && phoneCall?.emojis && renderText(phoneCall.emojis, ['emoji'])}\n        </div>\n        <div className={buildClassName(styles.emojiTooltip, isEmojiOpen && styles.open)}>\n          {lang('CallEmojiKeyTooltip', user?.firstName).replace('%%', '%')}\n        </div>\n      </div>\n      <div className={styles.userInfo}>\n        <h1>{user?.firstName}</h1>\n        <span className={styles.status}>{callStatus || formatMediaDuration(timeElapsed || 0)}</span>\n      </div>\n      <div className={styles.buttons}>\n        <PhoneCallButton\n          onClick={handleToggleAudio}\n          icon=\"microphone\"\n          isDisabled={!isActive}\n          isActive={hasOwnAudio}\n          label={lang(hasOwnAudio ? 'lng_call_mute_audio' : 'lng_call_unmute_audio')}\n        />\n        <PhoneCallButton\n          onClick={handleToggleVideo}\n          icon=\"video\"\n          isDisabled={!isActive}\n          isActive={hasOwnVideo}\n          label={lang(hasOwnVideo ? 'lng_call_stop_video' : 'lng_call_start_video')}\n        />\n        {hasOwnVideo && (IS_ANDROID || IS_IOS) && (\n          <PhoneCallButton\n            onClick={handleFlipCamera}\n            customIcon={(\n              <AnimatedIcon\n                tgsUrl={LOCAL_TGS_URLS.CameraFlip}\n                playSegment={!isFlipping ? [0, 1] : [0, 10]}\n                size={32}\n              />\n            )}\n            isDisabled={!isActive}\n            label={lang('VoipFlip')}\n          />\n        )}\n        {IS_SCREENSHARE_SUPPORTED && (\n          <PhoneCallButton\n            onClick={handleTogglePresentation}\n            icon=\"share-screen\"\n            isDisabled={!isActive}\n            isActive={hasOwnPresentation}\n            label={lang('lng_call_screencast')}\n          />\n        )}\n        {isIncomingRequested && (\n          <PhoneCallButton\n            onClick={requestMasterAndAcceptCall}\n            icon=\"phone-discard\"\n            isDisabled={isDiscarded}\n            label={lang('lng_call_accept')}\n            className={styles.accept}\n            iconClassName={styles.acceptIcon}\n          />\n        )}\n        <PhoneCallButton\n          onClick={handleHangUp}\n          icon=\"phone-discard\"\n          isDisabled={isDiscarded}\n          label={lang(isIncomingRequested ? 'lng_call_decline' : 'lng_call_end_call')}\n          className={styles.leave}\n        />\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { phoneCall, currentUserId } = global;\n    const { isCallPanelVisible, isMasterTab } = selectTabState(global);\n    const user = selectPhoneCallUser(global);\n\n    return {\n      isCallPanelVisible: Boolean(isCallPanelVisible),\n      user,\n      isOutgoing: phoneCall?.adminId === currentUserId,\n      phoneCall: isMasterTab ? phoneCall : undefined,\n    };\n  },\n)(PhoneCall));\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiGroupCall, ApiUser } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { selectActiveGroupCall, selectPhoneCallUser } from '../../global/selectors/calls';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ActiveCallHeader.scss';\n\ntype StateProps = {\n  isCallPanelVisible?: boolean;\n  groupCall?: ApiGroupCall;\n  phoneCallUser?: ApiUser;\n};\n\nconst ActiveCallHeader: FC<StateProps> = ({\n  groupCall,\n  phoneCallUser,\n  isCallPanelVisible,\n}) => {\n  const { toggleGroupCallPanel } = getActions();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    document.body.classList.toggle('has-call-header', Boolean(isCallPanelVisible));\n    const updateButtonPosition = window.electron?.setWindowButtonsPosition || window.electron?.setTrafficLightPosition;\n    updateButtonPosition?.(isCallPanelVisible ? 'lowered' : 'standard');\n\n    return () => {\n      document.body.classList.toggle('has-call-header', false);\n      updateButtonPosition?.('standard');\n    };\n  }, [isCallPanelVisible]);\n\n  function handleToggleGroupCallPanel() {\n    toggleGroupCallPanel();\n  }\n\n  if (!groupCall && !phoneCallUser) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'ActiveCallHeader',\n        isCallPanelVisible && 'open',\n      )}\n      onClick={handleToggleGroupCallPanel}\n    >\n      <span className=\"title\">{phoneCallUser?.firstName || groupCall?.title || lang('VoipGroupVoiceChat')}</span>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    return {\n      groupCall: tabState.isMasterTab ? selectActiveGroupCall(global) : undefined,\n      isCallPanelVisible: tabState.isCallPanelVisible,\n      phoneCallUser: tabState.isMasterTab ? selectPhoneCallUser(global) : undefined,\n    };\n  },\n)(ActiveCallHeader));\n","export const vibrateShort = () => {\n  navigator.vibrate?.(50);\n};\n","import useThrottledCallback from './useThrottledCallback';\n\nexport default function useRunThrottled(ms: number, noFirst?: boolean, deps: any = []) {\n  return useThrottledCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lKdhQ5pw\",\"spinner\":\"tyQNJC6B\",\"spinnerVisible\":\"LowChABq\",\"mutedByAdmin\":\"Ynow5UuE\",\"canUnmute\":\"bjKqp3SI\",\"icon\":\"Ea1XnQaX\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { GroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { THRESHOLD } from '../../../lib/secret-sauce';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\n\ntype OwnProps = {\n  participant: GroupCallParticipant;\n  noColor?: boolean;\n  className?: string;\n};\n\nconst OutlinedMicrophoneIcon: FC<OwnProps> = ({\n  participant,\n  noColor,\n  className,\n}) => {\n  const { isMuted, isMutedByMe } = participant;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n  const prevIsRaiseHand = usePreviousDeprecated(isRaiseHand);\n  const canSelfUnmute = Boolean(participant?.canSelfUnmute);\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n  const prevIsMuted = usePreviousDeprecated(isMuted);\n\n  const playSegment: [number, number] = useMemo(() => {\n    if (isMuted && !prevIsMuted) {\n      return [43, 64];\n    }\n\n    if (!isMuted && prevIsMuted) {\n      return [22, 42];\n    }\n\n    if (isRaiseHand && !prevIsRaiseHand) {\n      return [65, 84];\n    }\n\n    if (!shouldRaiseHand && prevIsRaiseHand) {\n      return [0, 21];\n    }\n\n    // TODO cancel request to speak should play in reverse\n    // if (!isRaiseHand && prevIsRaiseHand) {\n    //   return [84, 65];\n    // }\n\n    return isMuted ? [22, 23] : [43, 44];\n    // eslint-disable-next-line\n  }, [isMuted, shouldRaiseHand, isRaiseHand]);\n\n  const microphoneColor: string = useMemo(() => {\n    if (noColor) {\n      return '#ffffff';\n    }\n\n    if (isRaiseHand) {\n      return '#4da6e0';\n    }\n\n    if (shouldRaiseHand || isMutedByMe) {\n      return '#ff706f';\n    }\n\n    if (isSpeaking) {\n      return '#57bc6c';\n    }\n\n    return '#aaaaaa';\n  }, [noColor, isRaiseHand, shouldRaiseHand, isMutedByMe, isSpeaking]);\n\n  return (\n    <AnimatedIcon\n      tgsUrl={LOCAL_TGS_URLS.VoiceOutlined}\n      play={playSegment.toString()}\n      playSegment={playSegment}\n      size={28}\n      color={microphoneColor}\n      className={className}\n      forceAlways\n      nonInteractive\n    />\n  );\n};\n\nexport default memo(OutlinedMicrophoneIcon);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lBO3RZUM\",\"button\":\"ch2sqAKW\",\"active\":\"OQxlsRp7\",\"button-text\":\"aHguvLcL\",\"buttonText\":\"aHguvLcL\"};","import type { GroupCallParticipant } from '../../../../lib/secret-sauce';\n\nimport { GROUP_CALL_DEFAULT_VOLUME, GROUP_CALL_VOLUME_MULTIPLIER } from '../../../../config';\n\nexport default function formatGroupCallVolume(participant: GroupCallParticipant) {\n  return Math.floor((participant.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER).toString();\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './PhoneCallButton.module.scss';\n\ntype OwnProps = {\n  onClick: VoidFunction;\n  label: string;\n  icon?: IconName;\n  iconClassName?: string;\n  customIcon?: React.ReactNode;\n  className?: string;\n  isDisabled?: boolean;\n  isActive?: boolean;\n};\n\nconst PhoneCallButton: FC<OwnProps> = ({\n  onClick,\n  label,\n  customIcon,\n  icon,\n  iconClassName,\n  className,\n  isDisabled,\n  isActive,\n}) => {\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        className={buildClassName(className, styles.button, isActive && styles.active)}\n        onClick={onClick}\n        disabled={isDisabled}\n      >\n        {customIcon || <Icon name={icon!} className={iconClassName} />}\n      </Button>\n      <div className={styles.buttonText}>{label}</div>\n    </div>\n  );\n};\n\nexport default memo(PhoneCallButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OsO5GKfn\",\"panelWrapper\":\"cUVoePr_\",\"panel\":\"Thuz79M3\",\"panelScrollTrigger\":\"zoK6Y6IS\",\"panelHeader\":\"DMBtCL9Z\",\"scrolled\":\"GdEH1Agb\",\"fullscreen\":\"JJx0QI2w\",\"landscape\":\"wamCuzMB\",\"headerButton\":\"gmyieSid\",\"firstButton\":\"hVnn6KBp\",\"lastButton\":\"iy78A5rG\",\"panelHeaderText\":\"TwEEA77i\",\"title\":\"pNZ9skLf\",\"bigger\":\"NumT3v5i\",\"subtitle\":\"gmfUKabx\",\"participants\":\"iTeC_RxH\",\"participantVideos\":\"PZmKIdTl\",\"addParticipantButton\":\"clmu2oBt\",\"videos\":\"ATwoMlAV\",\"mainVideoContainer\":\"hqFon3dV\",\"videosHeader\":\"KPHc659W\",\"appFullscreen\":\"cl2sfoBF\",\"videosHeaderLastButton\":\"_t50HVNJ\",\"videosContent\":\"oEEQZilE\",\"actions\":\"uGzi9s97\",\"actionButton\":\"foXbVcnN\",\"destructive\":\"YIR9Z9CZ\",\"canRequestToSpeak\":\"ZoiZQu_O\",\"muted\":\"wpvv1V6m\",\"portrait\":\"R6HQcMwx\",\"noVideoParticipants\":\"aepCFyJQ\",\"noSidebar\":\"XjgP21E6\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { selectActiveGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { compareFields } from '../../../util/iteratees';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport GroupCallParticipant from './GroupCallParticipant';\n\nimport styles from './GroupCallParticipantList.module.scss';\n\ntype OwnProps = {\n  panelOffset: number;\n  isLandscape: boolean;\n};\n\ntype StateProps = {\n  participantsCount: number;\n  participants?: Record<string, TypeGroupCallParticipant>;\n  canInvite?: boolean;\n};\n\nconst GroupCallParticipantList: FC<OwnProps & StateProps> = ({\n  panelOffset,\n  participants,\n  participantsCount,\n  isLandscape,\n}) => {\n  const {\n    loadMoreGroupCallParticipants,\n  } = getActions();\n\n  const orderedParticipantIds = useMemo(() => {\n    return Object.values(participants || {}).sort(compareParticipants).map((participant) => participant.id);\n  }, [participants]);\n\n  const handleLoadMoreGroupCallParticipants = useLastCallback(() => {\n    loadMoreGroupCallParticipants();\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMoreGroupCallParticipants,\n    orderedParticipantIds,\n    orderedParticipantIds.length >= participantsCount,\n  );\n\n  return (\n    <InfiniteScroll\n      items={viewportIds}\n      onLoadMore={getMore}\n      style={`transform: translateY(${panelOffset}px);`}\n      className={buildClassName(styles.root, !isLandscape && styles.portrait)}\n    >\n      {participants && viewportIds?.map(\n        (participantId) => (\n          participants[participantId] && (\n            <GroupCallParticipant\n              key={participantId}\n              teactOrderKey={orderedParticipantIds.indexOf(participantId)}\n              participant={participants[participantId]}\n            />\n          )\n        ),\n      )}\n    </InfiniteScroll>\n  );\n};\n\nfunction compareParticipants(a: TypeGroupCallParticipant, b: TypeGroupCallParticipant) {\n  return compareFields(!a.isMuted, !b.isMuted)\n    || compareFields(a.presentation, b.presentation)\n    || compareFields(a.video, b.video)\n    || compareFields(a.raiseHandRating, b.raiseHandRating);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { participantsCount, participants } = selectActiveGroupCall(global) || {};\n\n    return {\n      participants,\n      participantsCount: participantsCount || 0,\n    };\n  },\n)(GroupCallParticipantList));\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\n\nconst PADDING_HORIZONTAL = 10;\nconst PADDING_VERTICAL = 8;\nconst PREFERRED_PANEL_VIDEO_HEIGHT = 240;\n\nexport type VideoLayout = {\n  participantId: string;\n  type: 'video' | 'screen';\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  shouldRemount?: boolean;\n  isRemounted?: boolean;\n  noAnimate?: boolean;\n  isRemoved?: boolean;\n  orderKey: number;\n};\n\nexport type VideoParticipant = {\n  id: string;\n  type: 'video' | 'screen';\n};\n\nexport default function useGroupCallVideoLayout({\n  primaryContainerRef,\n  secondaryContainerRef,\n  videoParticipants,\n  isLandscapeLayout,\n  pinnedVideo,\n}: {\n  primaryContainerRef: ElementRef<HTMLDivElement>;\n  secondaryContainerRef: ElementRef<HTMLDivElement>;\n  videoParticipants: VideoParticipant[];\n  isLandscapeLayout: boolean;\n  pinnedVideo: VideoParticipant | undefined;\n}) {\n  const [videoLayout, setVideoLayout] = useState<VideoLayout[]>([]);\n  const [panelOffset, setPanelOffset] = useState(0);\n  const videosCount = videoParticipants.length;\n  const prevVideosCount = usePreviousDeprecated(videosCount);\n  const prevVideoParticipants = usePreviousDeprecated(videoParticipants);\n  const removedVideoParticipants = useMemo(() => {\n    return prevVideoParticipants?.filter(\n      ({ id, type }) => !videoParticipants.some((p) => p.id === id && p.type === type),\n    );\n  }, [prevVideoParticipants, videoParticipants]);\n\n  const recalculateLayout = useLastCallback(() => {\n    const primaryContainer = primaryContainerRef.current;\n    const secondaryContainer = secondaryContainerRef.current;\n    if (!secondaryContainer) return;\n\n    const removed = prevVideosCount !== undefined && prevVideosCount > videosCount\n      ? prevVideosCount - videosCount : 0;\n\n    const {\n      x: secondaryInitialX,\n      y: secondaryInitialY,\n      width: secondaryContainerWidth,\n    } = secondaryContainer.getBoundingClientRect();\n\n    const layout: VideoLayout[] = [];\n    if (pinnedVideo !== undefined || !primaryContainer || !isLandscapeLayout) {\n      const isRemounted = true;\n      let skip = false;\n      let pinnedSkipIndex = 0;\n      let pinnedPush: VideoLayout | undefined;\n      let participants = videoParticipants;\n      if (pinnedVideo && primaryContainer && isLandscapeLayout) {\n        pinnedSkipIndex = participants\n          .findIndex(({ id, type }) => id === pinnedVideo.id && type === pinnedVideo.type);\n        if (pinnedSkipIndex !== -1) {\n          const {\n            x: initialX,\n            y: initialY,\n            width: containerWidth,\n            height: containerHeight,\n          } = primaryContainer.getBoundingClientRect();\n\n          const { id: participantId, type } = pinnedVideo;\n\n          pinnedPush = {\n            x: initialX,\n            y: initialY,\n            width: containerWidth,\n            height: containerHeight,\n            participantId,\n            type,\n            orderKey: pinnedSkipIndex,\n          };\n          skip = true;\n          participants = participants\n            .filter(({ id, type: videoType }) => id !== participantId || videoType !== pinnedVideo.type);\n        }\n      }\n\n      const secondaryVideosCounts = skip ? videosCount - 1 : videosCount;\n\n      const isFirstBig = secondaryVideosCounts % 2 === 1;\n      const columns = 2;\n      const rows = Math.ceil(secondaryVideosCounts / columns);\n      const smallWidth = (secondaryContainerWidth - (columns - 1) * PADDING_HORIZONTAL) / columns;\n      const heightTotal = Math.max(0, isFirstBig\n        ? (PREFERRED_PANEL_VIDEO_HEIGHT + (rows - 1) * smallWidth + (rows - 1) * PADDING_VERTICAL)\n        : rows * smallWidth + (rows - 1) * PADDING_VERTICAL);\n\n      for (let i = 0; i < secondaryVideosCounts; i++) {\n        const isBig = isFirstBig && i === 0;\n        const width = isBig ? secondaryContainerWidth : smallWidth;\n        const height = isBig ? PREFERRED_PANEL_VIDEO_HEIGHT : smallWidth;\n\n        const realIndex = isFirstBig && i !== 0 ? i + 1 : i;\n\n        const x = (isRemounted ? 0 : secondaryInitialX) + (realIndex % columns) * (width + PADDING_HORIZONTAL);\n        const y = (isRemounted ? 0 : secondaryInitialY) + (isFirstBig && i !== 0 ? (\n          PREFERRED_PANEL_VIDEO_HEIGHT + PADDING_VERTICAL\n          + (Math.floor(realIndex / columns) - 1) * (height + PADDING_VERTICAL)\n        ) : (\n          Math.floor(realIndex / columns) * (height + PADDING_VERTICAL)\n        ));\n        layout.push({\n          x,\n          y,\n          width,\n          height,\n          shouldRemount: !isRemounted,\n          isRemounted,\n          noAnimate: true,\n          participantId: participants[i].id,\n          type: participants[i].type,\n          orderKey: i >= pinnedSkipIndex ? i + 1 : i,\n        });\n      }\n\n      if (pinnedPush) {\n        layout.splice(pinnedSkipIndex, 0, pinnedPush);\n      }\n\n      if (removedVideoParticipants) {\n        for (let i = 0; i < removed; i++) {\n          layout.push({\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n            isRemounted,\n            isRemoved: true,\n            participantId: removedVideoParticipants[i].id,\n            type: removedVideoParticipants[i].type,\n            orderKey: i + videosCount,\n          });\n        }\n      }\n\n      setPanelOffset(heightTotal);\n      setVideoLayout(layout);\n      return;\n    }\n\n    const {\n      x: initialX,\n      y: initialY,\n      width: containerWidth,\n      height: containerHeight,\n    } = primaryContainer.getBoundingClientRect();\n\n    const columns = calculateColumnsCount(videosCount);\n    const rows = Math.ceil(videosCount / columns);\n    const totalGridSize = rows * columns;\n    const shouldFillLastRow = totalGridSize > videosCount;\n    const width = (containerWidth - (columns - 1) * PADDING_HORIZONTAL) / columns;\n    const height = (containerHeight - (rows - 1) * PADDING_VERTICAL) / rows;\n\n    const lastRowWidth = width * (videosCount % columns);\n    for (let i = 0; i < videosCount; i++) {\n      const row = Math.floor(i / columns);\n      const shouldCenter = shouldFillLastRow && row === rows - 1;\n      const x = initialX + (i % columns) * (width + PADDING_HORIZONTAL)\n        + (shouldCenter ? (containerWidth - lastRowWidth) / 2 : 0);\n      const y = initialY + Math.floor(i / columns) * (height + PADDING_VERTICAL);\n      layout.push({\n        x,\n        y,\n        width,\n        height,\n        participantId: videoParticipants[i].id,\n        type: videoParticipants[i].type,\n        orderKey: i,\n      });\n    }\n\n    if (removedVideoParticipants) {\n      for (let i = 0; i < removed; i++) {\n        layout.push({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n          isRemoved: true,\n          participantId: removedVideoParticipants[i].id,\n          type: removedVideoParticipants[i].type,\n          orderKey: i + videosCount,\n        });\n      }\n    }\n\n    setPanelOffset(0);\n    setVideoLayout(layout);\n  });\n\n  useEffect(recalculateLayout, [\n    recalculateLayout, videoParticipants, isLandscapeLayout, pinnedVideo,\n  ]);\n\n  useResizeObserver(primaryContainerRef, recalculateLayout, !primaryContainerRef.current);\n  useResizeObserver(secondaryContainerRef, recalculateLayout, !secondaryContainerRef.current);\n\n  return {\n    videoLayout, panelOffset,\n  };\n}\n\nfunction calculateColumnsCount(videosCount: number) {\n  if (videosCount >= 25) {\n    return 5;\n  } else if (videosCount >= 13) {\n    return 4;\n  } else if (videosCount >= 7) {\n    return 3;\n  } else if (videosCount >= 3) {\n    return 2;\n  } else {\n    return 1;\n  }\n}\n","import React from '@teact';\nimport type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallParticipant } from '../../../lib/secret-sauce';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { GROUP_CALL_DEFAULT_VOLUME, GROUP_CALL_VOLUME_MULTIPLIER } from '../../../config';\nimport { selectIsAdminInActiveGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunThrottled from '../../../hooks/useRunThrottled';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport DeleteMemberModal from '../../right/DeleteMemberModal';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './GroupCallParticipantMenu.scss';\n\nconst SPEAKER_ICON_DISABLED_SEGMENT: [number, number] = [0, 17];\nconst SPEAKER_ICON_ENABLED_SEGMENT: [number, number] = [17, 34];\n\ntype OwnProps =\n  {\n    participant?: GroupCallParticipant;\n    onCloseAnimationEnd: VoidFunction;\n    onClose: VoidFunction;\n    isDropdownOpen: boolean;\n    menuRef?: ElementRef<HTMLDivElement>;\n  }\n  & MenuPositionOptions;\n\ntype StateProps = {\n  isAdmin: boolean;\n};\n\nconst VOLUME_ZERO = 0;\nconst VOLUME_LOW = 50;\nconst VOLUME_MEDIUM = 100;\nconst VOLUME_NORMAL = 150;\n\nconst VOLUME_CHANGE_THROTTLE = 500;\n\nconst SPEAKER_ICON_SIZE = 24;\n\nconst GroupCallParticipantMenu: FC<OwnProps & StateProps> = ({\n  participant,\n  onCloseAnimationEnd,\n  onClose,\n  isDropdownOpen,\n  isAdmin,\n  menuRef,\n  ...menuPositionOptions\n}) => {\n  const {\n    toggleGroupCallMute,\n    setGroupCallParticipantVolume,\n    toggleGroupCallPanel,\n    openChat,\n    requestToSpeak,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isDeleteUserModalOpen, openDeleteUserModal, closeDeleteUserModal] = useFlag();\n\n  const id = participant?.id;\n  const {\n    isMutedByMe, isMuted, isSelf, canSelfUnmute,\n  } = participant || {};\n  const isRaiseHand = Boolean(participant?.raiseHandRating);\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n\n  const [localVolume, setLocalVolume] = useState(\n    isMutedByMe ? VOLUME_ZERO : ((participant?.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER),\n  );\n\n  const [shouldPlay, setShouldPlay] = useState(false);\n\n  const isLocalVolumeZero = localVolume === VOLUME_ZERO;\n  const speakerIconPlaySegment = isLocalVolumeZero ? SPEAKER_ICON_DISABLED_SEGMENT : SPEAKER_ICON_ENABLED_SEGMENT;\n\n  useEffect(() => {\n    if (isDropdownOpen) return;\n    setShouldPlay(false);\n  }, [isDropdownOpen]);\n\n  const handleSetLocalVolume = useLastCallback((volume: number) => {\n    setLocalVolume(volume);\n    const isNewLocalVolumeZero = volume === VOLUME_ZERO;\n    setShouldPlay(isNewLocalVolumeZero !== isLocalVolumeZero);\n  });\n\n  useEffect(() => {\n    setLocalVolume(isMutedByMe\n      ? VOLUME_ZERO\n      : ((participant?.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER));\n    // We only want to initialize local volume when switching participants and ignore following updates from server\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [id]);\n\n  const runThrottled = useRunThrottled(VOLUME_CHANGE_THROTTLE);\n\n  const handleRemove = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    openDeleteUserModal();\n    onClose();\n  });\n\n  const handleCancelRequestToSpeak = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    requestToSpeak({\n      value: false,\n    });\n    onClose();\n  });\n\n  const handleMute = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    onClose();\n\n    if (!isAdmin) {\n      handleSetLocalVolume(isMutedByMe ? GROUP_CALL_DEFAULT_VOLUME / GROUP_CALL_VOLUME_MULTIPLIER : VOLUME_ZERO);\n    } else if (shouldRaiseHand) {\n      handleSetLocalVolume((participant?.volume ?? GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER);\n    }\n\n    toggleGroupCallMute({\n      participantId: id!,\n      value: isAdmin ? !shouldRaiseHand : !isMutedByMe,\n    });\n  });\n\n  const handleOpenProfile = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    toggleGroupCallPanel();\n    openChat({\n      id,\n    });\n    onClose();\n  });\n\n  const handleChangeVolume = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = Number(e.target.value);\n    handleSetLocalVolume(value);\n\n    runThrottled(() => {\n      if (value === VOLUME_ZERO) {\n        toggleGroupCallMute({\n          participantId: id!,\n          value: true,\n        });\n      } else {\n        setGroupCallParticipantVolume({\n          participantId: id!,\n          volume: Math.floor(value * GROUP_CALL_VOLUME_MULTIPLIER),\n        });\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Menu\n        isOpen={isDropdownOpen}\n        ref={menuRef}\n        withPortal\n        onClose={onClose}\n        onCloseAnimationEnd={onCloseAnimationEnd}\n        className=\"participant-menu with-menu-transitions\"\n        {...menuPositionOptions}\n      >\n        {!isSelf && !shouldRaiseHand && (\n          <div className=\"group\">\n            <div className={buildClassName(\n              'volume-control',\n              localVolume < VOLUME_LOW && 'low',\n              localVolume >= VOLUME_LOW && localVolume < VOLUME_MEDIUM && 'medium',\n              localVolume >= VOLUME_MEDIUM && localVolume < VOLUME_NORMAL && 'normal',\n              localVolume >= VOLUME_NORMAL && 'high',\n            )}\n            >\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"200\"\n                value={localVolume}\n                onChange={handleChangeVolume}\n              />\n              <div className=\"info\">\n                <AnimatedIcon\n                  tgsUrl={LOCAL_TGS_URLS.Speaker}\n                  play={shouldPlay ? speakerIconPlaySegment.toString() : false}\n                  playSegment={speakerIconPlaySegment}\n                  size={SPEAKER_ICON_SIZE}\n                />\n                <span>\n                  {localVolume}\n                  %\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"group\">\n          {(isRaiseHand && isSelf) && (\n            <MenuItem\n              icon=\"stop-raising-hand\"\n              onClick={handleCancelRequestToSpeak}\n            >\n              {lang('VoipGroupCancelRaiseHand')}\n            </MenuItem>\n          )}\n          {!isSelf && <MenuItem icon=\"user\" onClick={handleOpenProfile}>{lang('VoipGroupOpenProfile')}</MenuItem>}\n          {!isSelf && (\n            // TODO cross mic\n            <MenuItem\n              icon={isMuted ? (isAdmin && shouldRaiseHand ? 'allow-speak' : 'microphone-alt') : 'microphone-alt'}\n              onClick={handleMute}\n            >\n              {isAdmin\n                ? lang(shouldRaiseHand ? 'VoipGroupAllowToSpeak' : 'VoipMute')\n                : lang(isMutedByMe ? 'VoipGroupUnmuteForMe' : 'VoipGroupMuteForMe')}\n            </MenuItem>\n          )}\n          {!isSelf && isAdmin && (\n            // TODO replace with hand\n            <MenuItem icon=\"delete-user\" destructive onClick={handleRemove}>\n              {lang('VoipGroupUserRemove')}\n            </MenuItem>\n          )}\n        </div>\n      </Menu>\n\n      {!isSelf && isAdmin && (\n        <DeleteMemberModal\n          isOpen={isDeleteUserModalOpen}\n          userId={id}\n          onClose={closeDeleteUserModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isAdmin: selectIsAdminInActiveGroupCall(global),\n    };\n  },\n)(GroupCallParticipantMenu));\n"],"names":["EMOJI_DATA","Uint16Array","EMOJI_OFFSETS","DeleteMemberModal","isOpen","chat","userId","contactName","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","React","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","memo","withGlobal","global","selectCurrentChat","user","selectUser","getUserFirstOrLastName","undefined","addActionHandler","actions","update","activeGroupCallId","groupCalls","toggleGroupCallPresentation","value","selectGroupCallParticipant","updateGroupCallParticipant","omit","connectionState","leaveGroupCall","isFromLibrary","tabId","getCurrentTabId","updateGroupCall","isSpeakerDisabled","groupCallId","participants","handleUpdateGroupCallParticipants","data","stream","showNotification","message","handleUpdateGroupCallConnection","presentation","groupCall","selectActiveGroupCall","Object","keys","length","values","phoneCall","ARE_CALLS_SUPPORTED","currentUserId","call","isOutgoing","adminId","setGlobal","getGlobal","state","callApi","isBusy","accessHash","connections","gB","protocol","libraryVersions","some","version","selectPhoneCallUser","hangUp","langProvider","firstName","updateTabState","needRating","ratingPhoneCall","isCallPanelVisible","gA","keyFingerprint","emojis","newCall","gAOrB","joinPhoneCall","sendSignalingData","Boolean","isVideo","isP2pAllowed","apiUpdate","isConnected","then","processSignalingMessage","GroupCallParticipant","participant","peer","ref","useRef","menuRef","isSelf","isMutedByMe","isMuted","hasVideoStream","hasPresentationStream","isSpeaking","amplitude","THRESHOLD","isRaiseHand","raiseHandRating","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleBeforeContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","current","getRootElement","closest","getMenuElement","getLayout","withPortal","hasCustomVolume","volume","GROUP_CALL_DEFAULT_VOLUME","aboutText","aboutColor","useMemo","styles","subtitleRed","subtitleBlue","formatGroupCallVolume","replace","subtitleGreen","about","ListItem","leftElement","Avatar","className","avatar","rightElement","OutlinedMicrophoneIcon","icon","root","onClick","onMouseDown","onContextMenu","multiline","ripple","FullNameTitle","withEmojiStatus","buildClassName","subtitle","Icon","name","subtitleText","GroupCallParticipantMenu","isDropdownOpen","anchor","onCloseAnimationEnd","selectChat","IS_SAFARI","IS_IOS","document","addEventListener","initializeSoundsForSafari","once","silentSound","audioElement","audioContext","sounds","initializeSounds","Promise","all","map","sound","prevSrc","src","muted","play","pause","currentTime","requestNextMutation","joinAudio","Audio","connectingAudio","loop","leaveAudio","allowTalkAudio","busyAudio","connectAudio","endAudio","incomingAudio","ringingAudio","join","allowTalk","leave","connecting","incoming","end","connect","busy","ringing","async","fetchGroupCall","selectIsCurrentUserFrozen","result","existingGroupCall","selectGroupCall","isLoaded","participantsCount","requestGroupCallParticipants","nextOffset","offset","payload","force","selectTabState","requestMasterAndJoinGroupCall","hasPublicUsername","getMainUsername","inviteLink","selectChatFullInfo","canSelfUnmute","copyTextToClipboard","key","username","inviteHash","fetchChatByUsername","full","loadFullChat","requestMasterAndCallAction","action","toggleGroupCallPanel","createAudioElement","checkNavigatorUserMediaPermissions","selectChatGroupCall","rejoin","safePlay","participantId","silence","ctx","oscillator","createOscillator","dst","createMediaStreamDestination","start","MediaStream","assign","getAudioTracks","enabled","window","AudioContext","webkitAudioContext","srcObject","getGroupCallAudioElement","getGroupCallAudioContext","removeGroupCallAudioElement","navigator","mediaDevices","getUserMedia","video","getVideoTracks","getTracks","forEach","track","stop","checkMicrophonePermission","catch","audio","RatePhoneCallModal","closeCallRatingModal","setCallRating","inputRef","rating","setRating","useState","handleSend","comment","handleCancelClick","Modal","stars","Array","fill","_","i","isFilled","star","index","InputText","placeholder","visible","Button","isText","toTelegramSource","source","fromTelegramSource","getAmplitude","array","scale","total","rms","Math","sqrt","min","p2pPayloadTypeToConference","p","feedbackTypes","clockrate","parameters","channels","IS_SCREENSHARE_SUPPORTED","IS_ECHO_CANCELLATION_SUPPORTED","getSupportedConstraints","echoCancellation","IS_NOISE_SUPPRESSION_SUPPORTED","noiseSuppression","sessionDescription","isP2p","sdp","Error","sections","split","s","reduce","acc","el","match","hasOwnProperty","filter","lookup","prefix","sectionName","find","line","startsWith","substr","section","parseExtmaps","l","uri","Number","parsePayloadTypes","payloads","fbParams","type","subtype","d","q","z","f","rawSource","sourceAudio","rawSourceVideo","rawSourceScreencast","hash","fingerprint","setup","console","log","ufrag","pwd","fingerprints","ssrc","semantics","sources","slice","audioExtmap","videoExtmap","screencastExtmap","audioPayloadTypes","videoPayloadTypes","screencastPayloadTypes","conference","isAnswer","isPresentation","lines","add","push","sessionId","ssrcs","audioExtensions","videoExtensions","transport","candidates","mid","addCandidate","c","sdpString","str","foundation","component","priority","ip","port","generation","addTransport","addPayloadType","payloadType","parametersString","fbParam","addSsrcEntry","entry","payloadTypes","isMain","isRemoved","sourceGroups","sourceGroup","ssrcTelegram","endpoint","black","width","height","canvas","createElement","getContext","fillRect","captureStream","DEFAULT_MID","leavePresentation","isFromToggle","screenshareDataChannel","close","screenshareConnection","onUpdate","getUserStreams","streams","setVolume","participantFunctions","isStreamEnabled","streamType","myId","updateGroupCallStreams","hasAudioStream","speaking","getUserStream","facing","audioStream","getDisplayMedia","media","facingMode","vid","deferred","Deferred","oncanplay","resolve","promise","toggleStream","connection","sender","getSenders","newStream","replaceTrack","audioSource","createMediaStreamSource","analyser","audioAnalyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","getCurrentAmplitude","Uint8Array","frequencyBinCount","getByteFrequencyData","disconnect","e","updateConnectionState","dataChannel","analyserInterval","clearInterval","analyzeAmplitudes","prevAmplitude","updatedParticipants","newEndpoints","isLeft","isAudioLeft","isVideoLeft","isVideoJoined","isPresentationLeft","hasVideo","hasAudio","hasPresentation","lastMid","toString","updatingParticipantsQueue","buildSdp","setRemoteDescription","answer","createAnswer","setLocalDescription","newConference","answerNew","error","screenshareConference","Date","now","handleTrack","mediaStream","kind","onended","gainNode","createGain","gain","muteNode","destination","addTrack","test","remove","toggleMute","initializeConnection","RTCPeerConnection","createDataChannel","onopen","onmessage","JSON","parse","colibriClass","onerror","oniceconnectionstatechange","iceConnectionState","onconnectionstatechange","ontrack","onnegotiationneeded","offer","createOffer","offerToReceiveVideo","offerToReceiveAudio","parseSdp","audioSsrc","videoSsrc","videoStream","startSharingScreen","joinGroupCall","setInterval","ICE_CANDIDATE_POOL_SIZE","getStreams","updateStreams","mediaState","switchCameraInputP2p","ownVideo","toggleStreamP2p","ownAudio","ownPresentation","blackVideo","blackPresentation","sendMediaState","err","emitSignalingData","shouldStartVideo","conn","iceServers","urls","isTurn","isStun","credentialType","credential","password","iceTransportPolicy","bundlePolicy","iceCandidatePoolSize","onicecandidate","candidate","transceiver","iceRestart","slnc","screenshare","dc","negotiated","pendingCandidates","isBatteryLow","screencastState","videoState","videoRotation","stopPhoneCall","filterVP8","mediaContent","idx","findIndex","vp8PayloadType","rtxIdx","apt","sendInitialSetup","ssrcGroups","rtpExtensions","screencast","gotInitialSetup","commitPendingIceCandidates","xmlns","localDescription","addIceCandidate","sdpMLineIndex","tryAddCandidate","params","HANG_UP_UI_DELAY","shouldDiscard","shouldRemove","isPageUnload","updateActiveGroupCall","removeGroupCall","afterHangUp","videoStopped","raiseHand","floor","GROUP_CALL_VOLUME_MULTIPLIER","presentationPaused","loadMoreGroupCallParticipants","dhConfig","gAHash","stringify","encodedData","setTimeout","ElectronEvent","CONNECTION_STATE_DEFAULT","REQUEST_TO_SPEAK_THROTTLE","HOLD_TO_SPEAK_TIME","ICON_SIZE","MicrophoneButton","noAudioStream","toggleGroupCallMute","requestToSpeak","playGroupCallSound","muteMouseDownState","isRequestingToSpeak","setIsRequestingToSpeak","isConnecting","shouldRaiseHand","prevShouldRaiseHand","usePreviousDeprecated","useEffect","playSegment","r","random","animatedIconName","vibrateShort","handleMouseDownMute","handleMouseUpMute","round","size","canUnmute","mutedByAdmin","onMouseUp","ariaLabel","disabled","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","forceAlways","Spinner","spinner","spinnerVisible","color","meParticipant","hasRequestedToSpeak","INTERSECTION_THROTTLE","GroupCall","isAdmin","canInvite","toggleGroupCallVideo","connectToActiveGroupCall","createGroupCallInviteLink","containerRef","primaryVideoContainerRef","secondaryVideoContainerRef","panelScrollTriggerRef","panelRef","isLeaving","setIsLeaving","observe","useIntersectionObserver","rootRef","throttleMs","isDisabled","hasScrolled","useIsIntersecting","isMobile","isLandscape","useAppLayout","isFullscreen","openFullscreen","closeFullscreen","useFlag","isSidebarOpen","openSidebar","closeSidebar","isLandscapeLayout","isAppFullscreen","useFullscreenStatus","firstPresentation","videoParticipants","flatMap","compact","hasVideoParticipants","groupCallTitle","membersString","isConfirmLeaveModalOpen","openConfirmLeaveModal","closeConfirmLeaveModal","isEndGroupCallModal","setIsEndGroupCallModal","shouldEndGroupCall","setShouldEndGroupCall","canRequestToSpeak","handleCloseConfirmLeaveModal","useLastCallback","handleToggleFullscreen","handleToggleSidebar","handleToggleGroupCallPanel","handleInviteMember","handleClickVideo","handleLeaveGroupCall","handleCloseAnimationEnd","handleToggleGroupCallPresentation","canPinVideo","isLandscapeWithVideos","pinnedVideo","setPinnedVideo","videoLayout","panelOffset","useGroupCallVideoLayout","primaryContainerRef","secondaryContainerRef","handleSetPinnedVideo","handleOpenFirstPresentation","fullscreen","appFullscreen","landscape","noVideoParticipants","portrait","noSidebar","dialogRef","videos","videosHeader","headerButton","firstButton","bigger","videosHeaderLastButton","videosContent","panelWrapper","panel","panelScrollTrigger","panelHeader","scrolled","panelHeaderText","lastButton","participantVideos","style","layout","isRemounted","GroupCallParticipantVideo","teactOrderKey","orderKey","canPin","setPinned","GroupCallParticipantList","FloatingActionButton","isShown","addParticipantButton","mainVideoContainer","actionButton","destructive","Checkbox","label","checked","onCheck","selectIsAdminInActiveGroupCall","selectCanInviteToActiveGroupCall","BLUR_RADIUS","BLUR_ITERATIONS","VIDEO_FALLBACK_UPDATE_INTERVAL","thumbnailRef","videoRef","videoFallbackRef","x","y","noAnimate","isPinned","shouldFlipVideo","status","prevLayoutRef","prevX","prevY","prevWidth","prevHeight","currentX","currentY","currentWidth","currentHeight","isHidden","setIsHidden","actualStream","streamRef","active","handleInactive","removeEventListener","isLoading","setIsLoading","handleCanPlay","useInterval","requestMutation","videoWidth","videoHeight","drawImage","thumbnail","alpha","isDrawing","animate","draw","IS_CANVAS_FILTER_SUPPORTED","fastBlur","fastRaf","handleClickPin","wrapper","hidden","pinned","onDoubleClick","Skeleton","loader","flipped","autoPlay","playsInline","onCanPlay","videoFallback","thumbnailWrapper","pinButton","bottomPanel","info","noColor","isUser","PhoneCall","requestMasterAndAcceptCall","connectToActivePhoneCall","toggleFullscreen","exitFullscreen","requestFullscreen","IS_REQUEST_FULLSCREEN_SUPPORTED","container","handleClose","isDiscarded","reason","isIncomingRequested","isOutgoingRequested","isActive","isHangingUp","startHangingUp","stopHangingUp","handleHangUp","forceUpdate","useForceUpdate","callStatus","hasOwnAudio","hasOwnPresentation","hasOwnVideo","isHidingPresentation","startHidingPresentation","stopHidingPresentation","isHidingVideo","startHidingVideo","stopHidingVideo","handleTogglePresentation","handleToggleVideo","handleToggleAudio","isEmojiOpen","openEmoji","closeEmoji","isFlipping","startFlipping","stopFlipping","handleFlipCamera","timeElapsed","startDate","singleColumn","blurred","mainVideo","secondVideo","header","closeButton","emojisBackdrop","open","emojiTooltip","userInfo","formatMediaDuration","buttons","PhoneCallButton","IS_ANDROID","customIcon","CameraFlip","accept","iconClassName","acceptIcon","isMasterTab","ActiveCallHeader","phoneCallUser","body","classList","toggle","updateButtonPosition","electron","setWindowButtonsPosition","setTrafficLightPosition","tabState","vibrate","useRunThrottled","ms","noFirst","deps","useThrottledCallback","cb","prevIsRaiseHand","prevIsMuted","microphoneColor","VoiceOutlined","nonInteractive","button","buttonText","orderedParticipantIds","sort","compareParticipants","handleLoadMoreGroupCallParticipants","viewportIds","getMore","useInfiniteScroll","InfiniteScroll","items","onLoadMore","indexOf","a","b","compareFields","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","setIsFullscreen","useLayoutEffect","element","listener","isEnabled","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","checkIfFullscreen","removeElectronListener","on","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","PADDING_HORIZONTAL","PADDING_VERTICAL","PREFERRED_PANEL_VIDEO_HEIGHT","setVideoLayout","setPanelOffset","videosCount","prevVideosCount","prevVideoParticipants","removedVideoParticipants","recalculateLayout","primaryContainer","secondaryContainer","removed","secondaryInitialX","secondaryInitialY","secondaryContainerWidth","getBoundingClientRect","pinnedPush","skip","pinnedSkipIndex","initialX","initialY","containerWidth","containerHeight","videoType","secondaryVideosCounts","isFirstBig","columns","rows","ceil","smallWidth","heightTotal","max","isBig","realIndex","shouldRemount","splice","calculateColumnsCount","shouldFillLastRow","lastRowWidth","row","useResizeObserver","SPEAKER_ICON_DISABLED_SEGMENT","SPEAKER_ICON_ENABLED_SEGMENT","VOLUME_ZERO","VOLUME_LOW","VOLUME_MEDIUM","VOLUME_NORMAL","VOLUME_CHANGE_THROTTLE","SPEAKER_ICON_SIZE","menuPositionOptions","setGroupCallParticipantVolume","openChat","isDeleteUserModalOpen","openDeleteUserModal","closeDeleteUserModal","localVolume","setLocalVolume","shouldPlay","setShouldPlay","isLocalVolumeZero","speakerIconPlaySegment","handleSetLocalVolume","runThrottled","handleRemove","stopPropagation","handleCancelRequestToSpeak","handleMute","handleOpenProfile","Menu","_extends","onChange","target","Speaker","MenuItem"],"sourceRoot":""}