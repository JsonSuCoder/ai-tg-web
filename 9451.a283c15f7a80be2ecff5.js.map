{"version":3,"file":"9451.a283c15f7a80be2ecff5.js","mappings":"oPACA,SAAgB,QAAU,WAAW,OAAS,WAAW,OAAS,WAAW,WAAa,WAAW,UAAY,WAAW,aAAe,WAAW,YAAc,WAAW,aAAe,WAAW,YAAc,WAAW,SAAW,YCuI7O,GAAeA,EAAAA,EAAAA,KAtG2BC,EACxCC,WACAC,YACAC,UACAC,qBACAC,oBACAC,cACAC,cAEA,MAAMC,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,EAAAA,MAENC,EAAoBC,EAAqBC,IAAyBC,EAAAA,EAAAA,MAEzEC,EAAAA,EAAAA,KAAU,KACHf,GACHa,GACF,GACC,CAACb,IAEJ,MAAOgB,EAAkBC,IAAaC,EAAAA,EAAAA,KAAQ,KAC5C,IAAKhB,EAAS,MAAO,MAACiB,GAAW,GAEjC,MAAMC,EAAYlB,EAAQmB,QAAO,CAACC,EAAKC,IACrCD,EAAIE,MAAQD,EAAOC,MAAQF,EAAMC,IAE7BE,EAAepB,GAAee,EAAUI,MAAQnB,EAEhDqB,EAAwG,GAC9G,IAAIC,EAA2B,EAC3BC,GAAmB,EAgBvB,OAfA1B,EAAQ2B,SAAQ,CAACN,EAAQO,KAClBP,EAAOQ,YAAYJ,IAEpBtB,IAAgBoB,GAAgBF,EAAOC,MAAQnB,IAC9CM,IAAsBY,EAAOQ,WAIlCL,EAAOM,KAAK,CACVT,SACAU,WAAYC,KAAKC,IAAIR,EArDL,GAsDhBS,OAAQN,IAAU5B,EAAQmC,OAAS,IANnCT,GAAmB,EAOnB,IAGG,CAACF,EAAQE,EAAiB,GAChC,CAACjB,EAAoBT,EAASG,IAEjC,OACEiC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,EAAAA,GAAeC,EAAOvC,QAASD,IAC5Ce,GAAkB0B,KAAI,EAAGnB,SAAQU,aAAYG,aAC5C,MAAMC,EAASrB,GAAkBqB,OAC3BM,EAAQN,EAAS,GAAM,EACvBO,EAAiBrB,IAAWpB,EAElC,IAAI0C,EACJ,GAAItB,GAAU,YAAaA,EAAQ,CACjC,MAAMuB,EAASvB,EAAOwB,QAAQC,MAAMC,GAAQA,EAAIC,QAAU9C,KACrDmB,EAAOwB,QAAQ1B,QAAO,CAACC,EAAK2B,IAASA,EAAIC,MAAQ5B,EAAI4B,MAAQD,EAAM3B,GAAMC,EAAOwB,QAAQ,IAC7FF,EAAmBC,GAAQK,YAC7B,CAEA,OACEb,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,EAAAA,GACTC,EAAOlB,QAAUoB,GAASP,GAAWK,EAAOW,WAAYR,GAAkBH,EAAOY,QAEnFC,IAAK/B,EAAOC,MACZlB,QAASA,IAAMA,IAAUiB,IAEzBe,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,EAAOc,WAAW,KAC9BC,EAAAA,EAAAA,IAAcjC,EAAOC,OACvBc,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,EAAOgB,aAAcC,IAAKjD,EAAKkD,MAAQ,MAAQ,OAC5DC,MAAMC,KAAK,CAAExB,OAAQJ,IAAcS,KAAI,IACtCJ,EAAAA,GAAAC,cAACuB,EAAAA,EAAQ,CAAC7D,UAAWwC,EAAOsB,YAAaC,KAAK,OAAOC,KAAK,YAIhE3B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,EAAOyB,eACpBC,EAAAA,EAAAA,GAAe1D,EAAMc,EAAO6C,OAAQ7C,EAAO8C,YAE5CzB,GAAmBzC,GAAsB,YAAaA,IAAwB0C,GAC9EP,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,EAAOyB,cACrB5B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,EAAOU,eACpBmB,EAAAA,EAAAA,GAAW/D,EAAQ,2BAA2BiD,EAAAA,EAAAA,IAAcX,OAI/D,KAGRlC,GAAsBM,GACtBqB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAWwC,EAAO+B,YAAaC,QAAM,EAACC,mBAAiB,EAACpE,QAASM,GACtEL,EAAQ,2BACT+B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UAAWwC,EAAOmC,SAAUC,KAAK,UAGvC,G,mHCjHV,MACMC,EAAuC,CAAC,EAAG,IAC3CC,EAAwC,CAAC,EAAG,IAC5CC,EAAsC,CAAC,GAAI,GAoCjD,GAAelF,EAAAA,EAAAA,KAlCsBmF,EAAGC,oBAAmBC,YACzD,MAAOC,EAAqBC,IAAyBvE,EAAAA,EAAAA,IAAQ,IACtDwE,EAAaC,IAAiBzE,EAAAA,EAAAA,IAAQ,IACvC,SAAE0E,IAAaC,EAAAA,EAAAA,MAEfC,EAAaF,EAAWG,EAAAA,IAA2BC,EAAAA,KAEzDC,EAAAA,EAAAA,GAAWN,EAZkB,KAa7B,MAAMO,GAAwBC,EAAAA,EAAAA,IAAYV,EAAuB,CAACA,IAElE,OACE/C,EAAAA,GAAAC,cAAA,OAAKyD,GAAG,SAAS/F,UAAWkF,EAAQ,MAAQ,KACxCC,GACA9C,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBAEjBqC,EAAAA,GAAAC,cAAC0D,EAAAA,EAAe,CACdhC,KAAMkB,EAAQe,EAAAA,IAAsBR,EACpCzF,UAAWqF,EAAc,SAAW,QACpCa,OAAQC,EAAAA,EAAeC,YACvBC,YAAaxB,EACbyB,QAAM,EACNC,OAAQV,IAEVxD,EAAAA,GAAAC,cAAC0D,EAAAA,EAAe,CACdhC,KAAMkB,EAAQe,EAAAA,IAAsBR,EACpCzF,UAAWqF,EAAc,QAAU,SACnCa,OAAQC,EAAAA,EAAeK,WACvBH,YAAapB,EAAoBH,EAAsBC,EACvDuB,QAAM,IAEJ,G,kHCrDV,MC6EA,GAAezG,EAAAA,EAAAA,KAhDS4G,EACtBC,SACAC,eACAC,iBACAC,SACAC,SACAC,aACAC,cACAC,gBACAC,UACAC,gBACAC,sBAGE/E,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACR1G,WAAWuC,EAAAA,EAAAA,GD7CM,WC6CsB6E,GACvCA,iBD9CwJ,WC+CxJE,wBAAsB,EACtBC,yBAA0BP,EAAc,yBAAsB9F,EAC9DgG,QAASA,GAERN,GAAkBvE,EAAAA,GAAAC,cAAA,OAAKtC,UDnDiF,YCmDtDqC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAMgC,KAC9DC,EACDxE,EAAAA,GAAAC,cAAA,WACGqE,GAAclE,KAAI,EAAE+E,EAAMC,EAAOC,KAE9BrF,EAAAA,GAAAC,cAACqF,EAAAA,EAAQ,CACPC,UAAQ,EACRC,WAAS,EACTL,KAAMA,EACNM,cD5D2H,YC8D3HzF,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASyH,GACzBpF,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAY0H,OAKnCT,GAAiB5E,EAAAA,GAAAC,cAACyF,EAAAA,EAAS,CAAC/H,UDpEkJ,aCqE9K8G,EACAC,GACC1E,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACN,KAAK,UAAU3D,QAAS8G,GAAiBD,GAAUH,K,oxECKpD,SAASiB,EAAiBC,GACvC,IAAKA,EAAQ,OAEb,GAAoB,eAAhBA,EAAOlE,KACT,MAAO,CACLmE,MAAOD,EAAOC,MAAMD,EAAOE,YAC3BC,SAAkC,IAAxBH,EAAOC,MAAM9F,QAI3B,GAAoB,WAAhB6F,EAAOlE,KAAmB,CAC5B,MAAMsE,EAASJ,EAAOK,eAAeC,OAAON,EAAOE,YACnD,OAAIE,EACK,CACLH,MAAOG,QAGX,CACF,CAEA,MAAM,OACJG,EAAM,SAAEC,EAAQ,MAAEC,EAAK,MAAEC,EAAK,QAAEC,EAAO,UAAEC,IACvCC,EAAAA,EAAAA,IAAkBb,EAAOc,SAE7B,GAAqB,kBAAjBP,GAAQzE,MAA6C,wBAAjByE,GAAQzE,KAC9C,MAAO,CACLmE,MAAOM,EAAOE,MACdN,UAAU,GAId,GAAIK,KAAaO,EAAAA,EAAAA,IAAgBP,KAAaQ,EAAAA,EAAAA,IAAgBR,IAC5D,MAAO,CACLP,MAAOO,GAIX,GAAIG,EAAS,CACX,MAAQF,MAAOQ,EAAcP,MAAOQ,EAAcV,SAAUW,GAAoBR,EAC1ES,EAAkBD,KAAoBJ,EAAAA,EAAAA,IAAgBI,KAAoBH,EAAAA,EAAAA,IAAgBG,IAE1FlB,EAAQiB,IADQE,EAAkBD,OAAkBlI,IACXgI,EAC/C,GAAIhB,EACF,MAAO,CACLA,QACAE,UAAU,EAGhB,CAEA,GAAIS,EAAW,CACb,MAAMS,EAAgBT,EAAUS,cAAcrB,EAAOE,YAAc,GACnE,KAAM,cAAemB,GAAgB,CACnC,MAAQZ,MAAOa,EAAeZ,MAAOa,GAAkBF,EACvD,MAAO,CACLpB,MAAQqB,GAAiBC,EAE7B,CACF,CAEA,MAAMtB,EAAQS,GAASD,EAEvB,OAAIR,EACK,CACLA,QACAE,SAAUO,GAAOc,YAHrB,CAQF,C,sECkEA,SAASC,EAAYC,EAAsDC,GACzE,MAAMC,EAAQpB,SAASnG,cAAc,OACrCuH,EAAMC,UAAUC,IAAI,SAEpB,MAAMC,EAAM,IAAIC,MAchB,GAbAD,EAAIE,WAAY,EAChBF,EAAIG,cAAgBC,EAAAA,EAEE,iBAAXT,EACTK,EAAIK,IAAMV,EACDA,aAAkBW,iBAC3BN,EAAIK,IAAMV,EAAOY,OAEjBP,EAAIK,IAAMV,EAAOU,IAGnBR,EAAMW,YAAYR,GAEdJ,IAAWa,EAAAA,GAAkBC,eAAiBd,IAAWa,EAAAA,GAAkBE,eAAgB,CAC7Fd,EAAMC,UAAUC,IAAI,eAChBH,IAAWa,EAAAA,GAAkBE,gBAC/Bd,EAAMC,UAAUC,IAAI,QAEtB,MAAMa,EAAcnC,SAASoC,cAC3BjB,IAAWa,EAAAA,GAAkBC,cACzB,kCACA,gCAEFE,GACFf,EAAMW,YAAYI,EAAYE,WAAU,GAE5C,CAEA,OAAOjB,CACT,CA2CA,SAASkB,EAASnB,EAA2Bb,EAAsBlH,GACjE,IAAImJ,EACAC,EAEJ,OAAQrB,GACN,KAAKa,EAAAA,GAAkBS,MACvB,KAAKT,EAAAA,GAAkBU,eAErBH,EAAqB,yDAAuDI,EAAAA,EAAAA,IAAiBrC,EAAShD,GAAIlE,KAC1GoJ,EAAgB,cAChB,MAEF,KAAKR,EAAAA,GAAkBY,aACrBL,EAAqB,iBAAgBnJ,IACrCoJ,EAAgB,MAChB,MAEF,KAAKR,EAAAA,GAAkBa,YACrBN,EAAqB,iBAAeI,EAAAA,EAAAA,IAAiBrC,EAAShD,GAAIlE,KAClEoJ,EAAgB,MAChB,MAEF,KAAKR,EAAAA,GAAkBc,aACrBP,EAAqB,iBAAeI,EAAAA,EAAAA,IAAiBrC,EAAShD,GAAIlE,KAClEoJ,EAAgB,MAChB,MAEF,KAAKR,EAAAA,GAAkBe,mBACrBR,EAAoB,2DACpBC,EAAgB,gBAChB,MAEF,KAAKR,EAAAA,GAAkBE,eACrBK,EAAoB,gEACpBC,EAAgB,gBAChB,MAEF,KAAKR,EAAAA,GAAkBC,cACrBM,EAAoB,mEACpBC,EAAgB,gBAChB,MAEF,KAAKR,EAAAA,GAAkBgB,cACvB,KAAKhB,EAAAA,GAAkBiB,gBACrBV,EAAqB,6CAA2CI,EAAAA,EAAAA,IAAiBrC,EAAShD,GAAIlE,KAC9FoJ,EAAgB,cAChB,MAEF,KAAKR,EAAAA,GAAkBkB,iBACrBX,EAAoB,6BACpBC,EAA0B,IAAVpJ,EAAe,4BAA2BA,yBAA0BX,EACpF,MAEF,KAAKuJ,EAAAA,GAAkBmB,iBACrBZ,EAAoB,mEACpBC,EAAiB,GAAEY,EAAAA,mBAAwCA,EAAAA,kCAC3D,MAEF,KAAKpB,EAAAA,GAAkBqB,gBACvB,KAAKrB,EAAAA,GAAkBsB,OACvB,QACEf,EAAqB,6CAA2CI,EAAAA,EAAAA,IAAiBrC,EAAShD,GAAIlE,KAC9FoJ,EAAiB,GAAEY,EAAAA,mBAAwCA,EAAAA,kCAG/D,MAAMG,EAAYvD,SAASoC,cAA2BG,GAChDiB,EAAWhB,EACbe,GAAWE,iBAAsDjB,QAAiB/J,EAEtF,MAAO,CACL8K,YACAG,QAASF,IAAW,GAExB,CAEA,SAASG,EAAWvC,EAAuBD,GACzC,OAAQA,GACN,KAAKa,EAAAA,GAAkBS,MACvB,KAAKT,EAAAA,GAAkBU,eACvB,KAAKV,EAAAA,GAAkBsB,OACvB,KAAKtB,EAAAA,GAAkBqB,gBACvB,KAAKrB,EAAAA,GAAkBkB,iBACvB,KAAKlB,EAAAA,GAAkBY,aACvB,KAAKZ,EAAAA,GAAkBgB,cACrB5B,EAAMC,UAAUC,IAAI,mBACpB,MAEF,KAAKU,EAAAA,GAAkBa,YACvB,KAAKb,EAAAA,GAAkBE,eACvB,KAAKF,EAAAA,GAAkBC,cACvB,KAAKD,EAAAA,GAAkBc,aACpB1B,EAAMwC,WAA2BC,MAAMC,UAAY,QACpD,MAEF,KAAK9B,EAAAA,GAAkBe,mBACvB,KAAKf,EAAAA,GAAkBiB,gBACrB7B,EAAMC,UAAUC,IAAI,UAChBH,IAAWa,EAAAA,GAAkBiB,iBAC/B7B,EAAMC,UAAUC,IAAI,qBAI5B,C,4FC1XA,MAAMyC,GAASC,EAAAA,EAAAA,KAAa,GACtBC,EAAwBF,EAAO,GA8ErC,SAASG,EAAuBhE,GAE9B,GAAIA,EAAMiE,gCAA6E,mBAApCjE,EAAMkE,0BAEvD,OAAOlE,EAAMkE,0BAA0BC,KAAKnE,EAGhD,CAeO,SAASoE,IACd,GAAItE,SAASuE,wBACX,IACEvE,SAASwE,sBACX,CAAE,MAAOC,GACHC,EAAAA,KAEFC,QAAQC,IAAI,8BAA+BH,EAE/C,CAEJ,C,2DCxHA,MAIMI,EAAQ,IAAIC,I,yCCclB,MAAMC,EAAsBC,EAAAA,GASfC,EAAgBA,EAC3BxF,QACAyF,WACA/D,SACAgE,YAEA,MAAMC,EAAgBF,GAAiC,UAArBzF,GAAO4F,YAA0B5F,EAAM6F,QACnEC,EAAgBL,GAAiC,UAArBzF,GAAO4F,WAAyB5F,EAAM6F,QAClEE,EAAkC,aAArB/F,GAAO4F,UACpBC,EAAgC,UAArB7F,GAAO4F,YAA0B5F,EAAMgG,SAAaD,IAAchF,EAAAA,EAAAA,IAAgBf,GAC7FiG,EAA+B,UAArBjG,GAAO4F,WAA0BG,IAAcjF,EAAAA,EAAAA,IAAgBd,GACzEuB,EAA6B,UAArBvB,GAAO4F,WAAyB5F,EAAMuB,MAC9C2E,EAAoBxE,IAAWa,EAAAA,GAAkBa,YACjD+C,EAAezE,IAAWa,EAAAA,GAAkBc,aAE5C+C,GAAuBrN,EAAAA,EAAAA,KAAQ,IAAOsN,IAC1C,GAAKrG,EAEL,OAAK2F,IAAiBG,GAAmBO,EAIrCP,GAAiBO,GACZC,EAAAA,EAAAA,IAA8BtG,IAGhCuG,EAAAA,EAAAA,IAAavG,EAAOqG,EAAS,OAAS,YAPpCG,EAAAA,EAAAA,IAAyBxG,EAOqB,GACtD,CAAC8F,EAAeH,EAAe3F,IAE5ByG,GAAmBC,EAAAA,EAAAA,GACvB1G,IAEIkG,GAAqBC,GAAgBJ,KACtCQ,EAAAA,EAAAA,IAAavG,EAAO,kBACvBhH,EACA2N,EAAAA,GAAeC,QACflB,GAEImB,EAAmBT,IACnBU,GAAiBJ,EAAAA,EAAAA,GACrBG,OACA7N,EACA2N,EAAAA,GAAeC,QACflB,IAGAqB,UAAWC,EAAgB,aAC3BC,IACEC,EAAAA,EAAAA,GACFd,GAAqB,QACrBpN,EACAgH,IAASmH,EAAAA,EAAAA,IAAenH,EAAO,QAC/B0F,GAGI0B,EAAepH,GAAS,YAAaA,EAAQA,EAAMqH,aAAUrO,EACnE,IAAIsO,GAAkBzB,IAAYuB,GAAgBJ,IAAsBF,GAAkBL,EAC1F,MAAMc,EChFO,SAAqBC,GAClC,MAAMC,GAAaC,EAAAA,EAAAA,MAEnB,IAAIC,GAAY,GAEhBC,EAAAA,EAAAA,IAAc,KAMZ,GAJAD,GAAY,EAEZF,EAAWI,aAAU7O,GAEhBwO,EACH,OAGF,MAAM1F,EAAM,IAAIC,MAEhB,GADAD,EAAIK,IAAMqF,GACL1F,EAAIgG,MACP,OAGF,MAAMC,GAASC,EAAAA,EAAAA,IAAYlG,IAC3BmG,EAAAA,EAAAA,GAASF,EAAOG,WAAW,MAAO,EAAG,EAAGH,EAAOD,MAAOC,EAAOI,OAzBlD,EACI,GA0BfV,EAAWI,QAAUE,EAAOK,WAAW,GACtC,CAACZ,IAIJ,MAAMa,EF3BO,SAAiBb,EAAkBc,GAAa,EAAO5C,GACpE,MAAM+B,GAAaC,EAAAA,EAAAA,IAA2BF,EAAUpC,EAAMmD,IAAIf,QAAWxO,GACvEwP,GAAad,EAAAA,EAAAA,MACbe,GAAcC,EAAAA,EAAAA,KAqCpB,OAnCIF,EAAWX,SAAWS,IACxBK,aAAaH,EAAWX,SACxBW,EAAWX,aAAU7O,IAGvBJ,EAAAA,EAAAA,KAAU,KACR,IAAK4O,GAAWC,EAAWI,SAAWS,EACpC,OAGF,MAAMxG,EAAM,IAAIC,MAEhBD,EAAI8G,OAAS,KACX,MAAMb,GAASC,EAAAA,EAAAA,IAAYlG,IAC3BmG,EAAAA,EAAAA,GAASF,EAAOG,WAAW,MAAO,EAAG,EAAGH,EAAOD,MAAOC,EAAOI,OAzBpD,EACI,GAyBb,MAAMU,EAAiBd,EAAOK,YAE9BX,EAAWI,QAAUgB,EACrBJ,IAEIrD,EAAMtJ,MA7BO,KA8BfsJ,EAAM0D,QAER1D,EAAM2D,IAAIvB,EAASqB,EAAe,EAGhCnD,EACF8C,EAAWX,QAAUmB,OAAOC,YAAW,KACrCnH,EAAIK,IAAMqF,CAAO,GAChB9B,GAEH5D,EAAIK,IAAMqF,CACZ,GACC,CAACA,EAAS9B,EAAO+C,EAAaH,IAE1Bb,EAAWI,OACpB,CEduBqB,CAAQ1B,QAAWxO,EAAWmQ,QAAQ1B,EAAWI,UAEtE,OAAOJ,EAAWI,UAAaF,GAAaU,GAAiBb,QAAWxO,CAC1E,CDgDuBoQ,EAAa9B,GAAiBtH,IAASqJ,EAAAA,EAAAA,IAAiBrJ,IACxEsH,GAAiB5F,IAAWa,EAAAA,GAAkBc,eACjDiE,EAAgBC,GAEdzB,GAAiBgB,IACnBQ,EAAgBR,GAElB,MAAMwC,EAAWlC,GAAgBJ,IAC7BlB,GAAkBD,OAAmE7M,EAAvD8N,GAAkBL,GAAoBa,GAGlEiC,EAAYvJ,IAASwJ,EAAAA,EAAAA,IAAiBxJ,GAEtCyJ,EAAUN,QAAQ/B,GAElBsC,GAAa3Q,EAAAA,EAAAA,KAAQ,IACrB0M,EACKK,EAAgB6D,EAAAA,GAA+BpE,EAAAA,GAGpDQ,EACK/F,EAAMuJ,UAGXtD,GACK2D,EAAAA,EAAAA,IAAuB5J,GAG5B6F,GACKgE,EAAAA,EAAAA,IAAmB7J,GAGrBsF,GACN,CAACG,EAAUM,EAAYE,EAASJ,EAASC,EAAe9F,IAE3D,MAAO,CACLuG,aAAcH,EACdpG,QACA6F,UACAI,UACA1E,QACAwE,aACAuB,gBACAgC,WACAI,aACAxD,oBACAJ,gBACA2D,UACAxC,eACAsC,YACD,E,yDErHH,MA6EA,GAAe5R,EAAAA,EAAAA,KA7EyBmS,EACtCtL,SACAuL,SACAvJ,QACAxB,UACAgL,0BAEA,MAAM,mBAAEC,IAAuBC,EAAAA,EAAAA,OAExBC,EAAgBC,IAAqBC,EAAAA,EAAAA,IAA0B,SAC/DC,EAAaC,IAAkBF,EAAAA,EAAAA,IAAS,IAEzCG,GAAeC,EAAAA,EAAAA,IAAgB,KACnCR,EAAmB,CACjBS,OAAQX,EAAQvJ,QAAOmK,OAAQR,EAAgBG,gBAEjDtL,GAAS,IAGL4L,GAAqBH,EAAAA,EAAAA,IAAiBI,IAC1CT,EAAkBS,EAAyB,IAGvCC,GAA0BL,EAAAA,EAAAA,IAAiBM,IAC/CR,EAAeQ,EAAEC,OAAOH,MAAM,IAG1BvS,GAAOD,EAAAA,EAAAA,KAEP4S,GAA8DlS,EAAAA,EAAAA,KAAQ,IAAM,CAChF,CAAE8R,MAAO,OAAQK,MAAO5S,EAAK,2BAC7B,CAAEuS,MAAO,WAAYK,MAAO5S,EAAK,+BACjC,CAAEuS,MAAO,cAAeK,MAAO5S,EAAK,kCACpC,CAAEuS,MAAO,aAAcK,MAAO5S,EAAK,kCACnC,CAAEuS,MAAO,YAAaK,MAAO5S,EAAK,+BAClC,CAAEuS,MAAO,eAAgBK,MAAO,iBAChC,CAAEL,MAAO,kBAAmBK,MAAO,oBACnC,CAAEL,MAAO,QAASK,MAAO5S,EAAK,8BAC7B,CAACA,IAEJ,IAAKyR,IAAWvJ,EACd,OAGF,MAAMjB,EAAQjH,EAAK,qBAEnB,OACE6B,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRQ,QAASA,EACTmM,QAAS3M,EAASgM,OAAexR,EACjCgR,oBAAqBA,EACrBlS,UAAU,SACVyH,MAAOA,GAEPpF,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACTtT,UAAU,wBACV4E,KAAK,iBACL3E,QAASkT,EACTI,SAAUT,EACVU,SAAUnB,IAEZhQ,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO5S,EAAK,iCACZuS,MAAOP,EACPe,SAAUP,IAEZ3Q,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACoP,MAAM,SAAS1T,UAAU,wBAAwBwE,QAAM,EAACnE,QAASqS,GACtElS,EAAK,sBAER6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAAS6G,GAAU1G,EAAK,YAErE,I,4BC5FZ,MAAOmT,GAAeC,KAAiBnH,EAAAA,EAAAA,IAAa,GAErC,SAASoH,KAKtB,OAJAC,EAAAA,EAAAA,KAAkB,KAChBF,GAAc,EAAE,IAGX,CAACD,GAAeC,GACzB,CCSA,MA6CA,IAAe/T,EAAAA,EAAAA,KA7C+BkU,EAC5CrN,SACAgC,QACAsL,YACA9M,UACA+M,gBAEA,MAAM,mBACJC,EAAkB,gBAClBC,IACE/B,EAAAA,EAAAA,MAEEgC,GAAoBtO,EAAAA,EAAAA,KAAY,KACpCmO,OACII,EAAAA,EAAAA,IAASL,GACXE,EAAmB,CAAExL,UAErByL,EAAgB,CACdzL,QACAkK,OAAQoB,IAGZ9M,GAAS,GACR,CAAC+M,EAAWD,EAAW9M,EAASgN,EAAoBxL,EAAOyL,IAExD3T,GAAOD,EAAAA,EAAAA,KAEb,OACE8B,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRQ,QAASA,EACTmM,QAASe,EACTpU,UAAU,+BACVyH,MAAOjH,EAAK,eAEZ6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACoP,MAAM,SAAS1T,UAAU,wBAAwBwE,QAAM,EAACnE,QAAS+T,GACtE5T,EAAK,wBAER6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAAS6G,GAAU1G,EAAK,YAErE,I,wCCKZ,MAkUA,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GACCC,OAAMC,qBAEN,MAAMC,GAAWC,EAAAA,EAAAA,KAAeJ,IAC1B,OAAE3K,GAAW8K,EAASE,YAEtB7L,EAAyB,YAAfyL,GAAMzQ,KAAqByQ,EAAKzL,aAAU7H,EACpD2T,EAA6B,WAAfL,GAAMzQ,KAAoByQ,EAAKK,iBAAc3T,EAC3D4T,EAA6B,WAAfN,GAAMzQ,MAAqByQ,EAAKlM,cAAcC,OAAOiM,EAAKrM,YAExE4M,GAAOC,EAAAA,EAAAA,KAAkBT,GACzBU,GAAqBC,EAAAA,EAAAA,KAAyBX,IAC9C,SAAEY,IAAaD,EAAAA,EAAAA,KAAyBX,IAAW,CAAC,EACpDa,GAAcC,EAAAA,EAAAA,KAAyBd,EAAQxL,GAC/CuM,GAAkBC,EAAAA,EAAAA,KAAsBhB,GACxCiB,EAAkBzM,IAAW0M,EAAAA,EAAAA,KAAsBlB,EAAQxL,GAAS6J,SAClE8C,UAAWC,GAAsBR,GACpCpM,IAAW6M,EAAAA,EAAAA,KAAgCrB,EAAQxL,EAASoM,IAAc,CAAC,EAC1EU,EAAkBf,GAAgBA,EAAY/O,KAAO8O,GAAaiB,cAClEC,EAAkBtB,GAAkBpD,QAAQyD,GAC5CY,EAAYC,GAAoBI,EAChCC,EAAYvB,GAAkBpD,QAAQyD,KAAiBe,EACvDI,EAAkBhB,GAAoBlR,KAE5C,MAAO,CACLuR,kBACAF,cACAL,OACAS,kBACAE,YACAM,YACAC,kBACArM,SACD,GAlCe0K,EAlUkC4B,EACpD1B,OACAvF,YACAlB,UACAgH,OACAS,kBACAJ,cACAe,kBACAT,YACAM,YACAC,kBACAX,kBACA1L,SACAwM,eAAgBC,EAChBC,qBACAC,iBACAC,gBAEA,MAAOC,EAAmBC,EAAiBC,IAAoB9V,EAAAA,EAAAA,IAAQ,IAChE8S,EAAeC,GAAiBC,MACjC,SAAEtO,IAAaC,EAAAA,EAAAA,OAEf,cACJoR,EAAa,oBACbC,EAAmB,mBACnBC,EAAkB,gBAClBC,EAAe,gBACfC,EAAe,uBACfC,IACE7E,EAAAA,EAAAA,MAEE8E,EAA2B,YAAf1C,GAAMzQ,MAElB,MAAEmE,GAAUF,EAAiBwM,IAAS,CAAC,EACvC2C,EAAWjP,IAASkP,EAAAA,EAAAA,IAAiBlP,GACrCmP,EAAgBnP,IAASoP,EAAAA,EAAAA,IAAiBhC,EAAiBpN,IAEzDiH,aAAcoI,IAAqBnI,EAAAA,EAAAA,GACzClH,IAASuG,EAAAA,EAAAA,IAAavG,EAAO,aAC5BmP,EACDnP,IAASmH,EAAAA,EAAAA,IAAenH,EAAO,aAG3BsP,GAAsB7E,EAAAA,EAAAA,IAAgB,KAC1C,GAAKzK,EAEL,GAAImP,EACFR,EAAoB,CAAE3O,cACjB,CACL,MAAMa,EAAyB,YAAfyL,GAAMzQ,KAAqByQ,EAAKzL,aAAU7H,EAC1D0V,EAAc,CAAE1O,QAAOuP,cAAe1O,GACxC,KAGI2O,GAAgB/E,EAAAA,EAAAA,IAAgB,KACpC,MAAMgF,EAAahE,IAEnBC,GADe+D,EAAa,EAAIA,EAAa,GACtB,EAAE,IAGrBC,GAAejF,EAAAA,EAAAA,IAAgB,KACnC,MAAMgF,EAAahE,IAEnBC,GADe+D,EAAa,EAAIA,EAAa,GACtB,EAAE,IAGrBE,GAAelF,EAAAA,EAAAA,IAAgB,KACnC,GAAmB,WAAf6B,GAAMzQ,KAAmB,OAC7B,MAAM,YAAE8Q,EAAW,cAAEvM,EAAa,WAAEH,GAAeqM,EAC7CM,EAAcxM,GAAeC,OAAOJ,IACtCkM,EAAAA,EAAAA,IAASQ,EAAY9O,IACvB+Q,EAAmB,CAAEpO,MAAOoM,IAE5BiC,EAAgB,CAAEnE,OAAQiC,EAAY9O,GAAI2C,MAAOoM,IAGnDkC,EAAgB,CACdpN,OAAQA,EACRgJ,OAAQiC,EAAY9O,GACpBoC,WAAY,EACZ2P,cAAc,GACb,CACDC,uBAAuB,GACvB,IAGEvX,GAAOD,EAAAA,EAAAA,KAEPyX,GAA8D/W,EAAAA,EAAAA,KAAQ,IACnE,EAAGgX,YAAWvR,YACnBrE,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACN1T,UAAW0G,EAAS,cAAWxF,EAC/Bb,QAAS4X,EACTE,UAAU,gBAEV9V,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGd,IAEH,SAASwT,IACP,MAAuB,WAAf5D,GAAMzQ,KACZ1B,EAAAA,GAAAC,cAACyR,GAAuB,CACtBrN,OAAQ+P,EACRvP,QAASyP,EACT1C,UAAWsC,EACXvC,UAAWQ,EAAKK,YAAY9O,GAC5B2C,MAAO8L,EAAKlM,cAAcC,OAAOiM,EAAKrM,mBAEtCjH,CACN,CAmCA,MAAMmX,GAAyB1F,EAAAA,EAAAA,IAAgB,KAC1B,YAAf6B,GAAMzQ,MAAsBgR,EAC9BkC,EAAuB,CACrBrE,OAAQmC,GAAMhP,GACduS,WAAY,CAAC9D,EAAKzL,QAAQhD,IAC1BwS,WAAgC,cAApBtC,EACZhC,UAAWsC,IAGbG,GACF,IAGF,GAAInR,EAAU,CACZ,MAAMiT,EAA6B,GAkDnC,GAjDItB,GAAa1C,EAAKzL,QAAQ0P,sBAAwBjE,EAAKzL,QAAQ2P,QAAQlQ,SAAWgN,GACpFgD,EAAUzW,KAAK,CACbyF,KAAM,UACNnH,QAASmW,EACTmC,SAAUnY,EAAK,aAGd4U,IACCrH,EACFyK,EAAUzW,KAAK,CACbyF,KAAM6P,EAAgB,QAAU,WAChChX,QAASmX,EACTmB,SAAUtB,EAAiB,GAAEpV,KAAKiW,MAAyB,IAAnBX,qBAA4C,aAGtFiB,EAAUzW,KAAK,CACbyF,KAAM,WACNoR,KAAM3J,EACN4J,SAAU1B,EACVwB,SAAUnY,EAAK,wBAKjB2V,GACFqC,EAAUzW,KAAK,CACbyF,KAAM,OACNnH,QAASgW,EACTsC,SAAUnY,EAAK,uBAIfwV,GACFwC,EAAUzW,KAAK,CACbyF,KAAM,aACNnH,QAASwX,EACTc,SAAUnY,EAAK,+BAIfkV,GACF8C,EAAUzW,KAAK,CACbyF,KAAM,SACNnH,QAASgY,EACTM,SAAUnY,EAAK,UACfsY,aAAa,IAIQ,IAArBN,EAAUpW,OACZ,OAGF,OACEC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,6BACbqC,EAAAA,GAAAC,cAACyW,GAAAA,EAAY,CACXC,QAAShB,EACTiB,UAAU,SAETT,EAAU/V,KAAI,EACb+E,OAAMnH,UAASuY,OAAMC,WAAUF,WAAUG,iBAEzCzW,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP7V,IAAKmE,EACLA,KAAMA,EACNoR,KAAMA,EACNC,SAAUA,EACVxY,QAASA,EACTyY,YAAaA,GAEZH,MAINtB,GAAiBhV,EAAAA,GAAAC,cAAC6W,GAAAA,EAAe,CAACC,SAAU7B,EAAkBvT,KAAK,IAAIqV,SAAO,IAC9E3D,GAAa0C,IAGpB,CAEA,OACE/V,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBACZkX,GAAa1C,EAAKzL,QAAQ0P,sBAAwBjD,GACjDnT,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,oBACNyE,UAAW3X,EAAK,WAChBH,QAASmW,GAETnU,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,aA1InB,WACE,IAAIwQ,GAA8B,eAAfZ,GAAMzQ,KAIzB,MAAsB,qBAAfyQ,GAAMzQ,OAAgCgK,EAC3C1L,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,oBACNyE,UAAW3X,EAAK,qBAChBH,QAASmX,GAERH,EACChV,EAAAA,GAAAC,cAAC6W,GAAAA,EAAe,CAACC,SAAU7B,EAAkBvT,KAAK,IAAI3D,QAASmX,IAE/DnV,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,cAIfvC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLsU,KAAM3J,EACN4J,SAAU1B,EACVe,OAAK,EACLlU,KAAK,UACL0P,MAAM,oBACNyE,UAAW3X,EAAK,sBAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,cAGjB,CA8GK0U,GACDjX,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,oBACNyE,UAAW3X,EAAK,gBAChBH,QAASqX,GAETrV,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,cAEbvC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,oBACNyE,UAAW3X,EAAK,eAChBH,QAASuX,GAETvV,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,aAEZuR,GACC9T,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,oBACNyE,UAAW3X,EAAKuN,EAAU,8BAAgC,+BAC1D1N,QAASgW,GAEThU,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UAGdoR,GACC3T,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,oBACNyE,UAAW3X,EAAK,6BAChBH,QAASwX,GAETxV,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAGd8Q,GACCrT,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,oBACNyE,UAAW3X,EAAK,UAChBH,QAASgY,GAEThW,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,YAGfvC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,oBACNyE,UAAW3X,EAAK,SAChBH,QAASiW,GAETjU,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEZ8Q,GAAa0C,IACV,K,gHC1XH,SAASmB,GAAgBC,GAC9B,MAAMC,GAAM7J,EAAAA,EAAAA,IAAU4J,KAQtB,OANAE,EAAAA,GAAAA,IAAc,IACLF,EAASG,WAAU,KACxBF,EAAI1J,QAAUyJ,GAAU,MAIrBC,CACT,C,wCCbA,MAAOG,GAAoBC,KAAsBpN,EAAAA,EAAAA,KAAa,IACvDqN,GAAaC,KAAetN,EAAAA,EAAAA,KAAa,GAEjC,SAASuN,KAOtB,MAAO,EANYC,EAAAA,GAAAA,IACjB,IAAML,OAAyBE,MAE/B,CAACF,GAAoBE,KAGHD,GAAoBE,GAC1C,C,gBCXO,MAAOG,GAAgBC,KAAkB1N,EAAAA,EAAAA,IAAa,GAE9C,SAAS2N,KAKtB,OAJAtG,EAAAA,EAAAA,KAAkB,KAChBqG,GAAe,EAAE,IAGZ,CAACD,GAAgBC,GAC1B,C,qCCOA,MAmFA,GAvEwCE,EACtCC,OAAO,GAAIvT,aAAYwT,aAAYla,UAASma,uBAAsBpF,cAAaqF,2BAE/E,MAAOC,EAAaC,IAAkBpI,EAAAA,EAAAA,KAAS,IACzC,SAAEhN,IAAaC,EAAAA,EAAAA,OACdoV,GAAgBZ,KACjBa,GAAWC,EAAAA,GAAAA,IAAgB,MAAOC,EAAAA,KAAgBH,KAAyB,CAACA,KAElF9Z,EAAAA,EAAAA,KAAU,KACR,MAAMka,EAAgBvS,SAASoC,cAAc,kCAEvCoQ,EAAmBA,KACvB,MAAM5K,EAAS2K,EAAgBA,EAAcE,aAAe,EAE5DP,EAAetK,EAAe,EAAN8K,EAAAA,EAAQ,EAIlCF,IAEA,MAAMG,GAAeC,EAAAA,GAAAA,IAASJ,EAhCP,KAgC6C,GAIpE,OAFA/J,OAAOoK,iBAAiB,SAAUF,GAAc,GAEzC,KACLlK,OAAOqK,oBAAoB,SAAUH,GAAc,EAAM,CAC1D,GACA,IAQH,MAAMjU,GAAgBwL,EAAAA,EAAAA,IAAgB,KACpC6H,GAAsB,IAGlBgB,GAAajZ,EAAAA,GAAAA,GACjB,oBACAgY,GAAc,eACdM,GAAY,YACZzF,GAAe,eACfqF,GAAwB,UAG1B,OACEpY,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwb,EAAYnb,QAnB9B,SAAmB4S,GACbqH,GACFrH,EAAEwI,iBAEN,GAgBKpK,QAAQiJ,IACPjY,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,8BAA8BK,QAAUkF,OAAqBrE,EAAVb,GAChEgC,EAAAA,GAAAC,cAAA,KAAGtC,UAAY,6CAA2C0a,EAAc,YAAc,IAAMjX,IAAI,QAC7F6W,IAINjJ,QAAQtK,IACP1E,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GAAe,8BAA+B,uBACzDyB,KAAK,UACL0P,MAAM,UACNgI,eAAa,EACbrb,QAAS8G,GAERJ,GAGD,E,oDC9FH,MAAO4U,GAAmBC,KAAqBnP,EAAAA,EAAAA,KAAa,GAEpD,SAASoP,KAKtB,OAJA/H,EAAAA,EAAAA,KAAkB,KAChB8H,IAAkB,EAAM,IAGnB,CAACD,GAAmBC,GAC7B,C,seCLA,MAAME,GAAYC,EAAAA,IAAcC,EAAAA,GAC1BC,GAAsBF,EAAAA,IAAcC,EAAAA,GAAU,GAAM,IACpDE,GAAaJ,GAAY,GAAK,GAC9BK,GAAmB,IAEnBC,IAAcC,EAAAA,GAAAA,MAEpB,IAAIC,GAEG,MAAMC,GAOXC,WAAAA,CAAYC,EAAaxM,GAA2ByM,GAAA,cANjB,IAAInP,KAAKmP,GAAA,mBAE9B,GAACA,GAAA,sBAKbC,KAAK1M,OAASA,EACdmM,GAAYxa,SAAQ,EAAGgb,aAAa/a,KAC7B+a,EAAUC,QAAQ,CACrBjY,KAAM,qBACNkY,KAAM,CACJL,EACAP,GACAra,EACAkb,GAAAA,GACAJ,KAAKK,QAAQlQ,KAAK6P,QAEpB,GAEN,CAEQK,OAAAA,CAAQC,EAAcC,GAC5BP,KAAKQ,OAAOlM,IAAIgM,EAAMC,GAClBD,IAASN,KAAKS,aAChBT,KAAKU,OAAOJ,EAEhB,CAEQK,UAAAA,GACNX,KAAKQ,OAAOvb,SAASsb,IACnBA,EAAMK,OAAO,IAEfZ,KAAKQ,OAAOnM,OACd,CAEAqM,MAAAA,CAAOJ,GACLN,KAAKS,YAAcH,EACnB,MAAMC,EAAQP,KAAKQ,OAAO1M,IAAIwM,GAC9B,QAAKC,KACLM,EAAAA,EAAAA,KAAgB,KACdb,KAAK1M,OAAOD,MAAQkN,EAAMlN,MAC1B2M,KAAK1M,OAAOI,OAAS6M,EAAM7M,OACfsM,KAAK1M,OAAOG,WAAW,MAC/BqN,UAAUP,EAAO,EAAG,EAAGP,KAAK1M,OAAOD,MAAO2M,KAAK1M,OAAOI,OAAO,KAE5D,EACT,CAEAqN,OAAAA,GACEf,KAAKW,aACLlB,GAAYxa,SAAQ,EAAGgb,gBAChBA,EAAUC,QAAQ,CACrBjY,KAAM,wBACNkY,KAAM,IACN,GAEN,EAkBFV,GAAYxa,SAAQ,EAAG+b,aACrBA,EAAOrC,iBAAiB,WAAWsC,UACjC,MAAM,KAAE7Z,EAAI,UAAE8Z,EAAS,OAAE5V,GAAWgL,EAAE6K,KAMtC,GAAa,gBAAT/Z,EACF,OAGF,MAAMtC,QAAesc,EAAAA,GAAAA,IAAQ,gBAAiB,CAAEC,YAAanP,EAAAA,GAAeoP,eAAgBhW,IAC5F,IAAKxG,EACH,OAGF,MAAM,YAAEyc,GAAgBzc,EAExBkc,EAAOQ,YAAY,CACjBpa,KAAM,eACN8Z,YACApc,OAAQyc,GACP,CAACA,GAAc,GAClB,I,gBCnHJ,SAAqJ,WCwCrJ,IAAIE,GAEJ,MAoPA,IAAeve,EAAAA,EAAAA,KApPgBwe,EAC7BC,WACAC,iBACAC,UACAC,aACAC,eACAjC,MACA1c,WACA4e,YACAC,oBACAC,SACAC,kBAGA,MAAMC,GAAYnP,EAAAA,EAAAA,IAAuB,OAClCoP,GAAwB5E,MACxB6E,GAAgBpD,KACjB3B,GAAiBgF,EAAAA,GAAAA,IAAmBF,EApBvB,MAqBZG,EAAiBC,IAAmBC,EAAAA,EAAAA,IAAUnF,MAC9CoF,EAAkBC,IAAoBF,EAAAA,EAAAA,IAAU,IAChDG,EAAgBC,IAAkBJ,EAAAA,EAAAA,IAAU,GAC7CK,GAAc9P,EAAAA,EAAAA,KAAgB,IAC7B+P,EAAkBC,IAAqBrN,EAAAA,EAAAA,KAAS,IAChDsN,EAAWC,IAAgBvN,EAAAA,EAAAA,KAAS,GAErCwN,GAAmBnQ,EAAAA,EAAAA,IAA0B,MAE7CoQ,GAAapQ,EAAAA,EAAAA,IAAuB,MAEpCqQ,GAAcrQ,EAAAA,EAAAA,IAAuB,MAErCsQ,GAAiBtQ,EAAAA,EAAAA,IAAuB,MAExCuQ,GAAclf,EAAAA,EAAAA,KAAQ,IFCvB,SAA8B+O,EAAeK,GAGlD,MAAM+P,GAFNpQ,EAAQ/N,KAAKiW,MAAMlI,EAAQiM,MAC3B5L,EAASpO,KAAKiW,MAAM7H,EAAS4L,KAU7B,OARIjM,EAAQmM,KACVnM,EAAQmM,GACR9L,EAASpO,KAAKiW,MAAMlI,EAAQoQ,IAE1B/P,EAAS8L,KACX9L,EAAS8L,GACTnM,EAAQ/N,KAAKiW,MAAM7H,EAAS+P,IAEvB,CAAEpQ,QAAOK,SAClB,CEbWgQ,CAAqB5B,GAAYzO,OAAS,EAAGyO,GAAYpO,QAAU,IACzE,CAACoO,IAEE6B,GAAa3N,EAAAA,EAAAA,IAAiBsK,IAClCA,EAAOhb,KAAKse,MAAMtD,GAClBwC,EAAexC,GFgDZ,SAA4BA,GAC5BX,IACEA,GAAae,OAAOJ,EAC7B,CElDIuD,CAAmBvD,EAAK,IAqK1B,OAlKAnc,EAAAA,EAAAA,KAAU,KACR,IAAI8d,GAAsBnC,GAAQ+B,EAClC,OF+BG,SAA6B/B,EAAaxM,GAK/C,OAJIqM,IACFA,GAAaoB,UAEfpB,GAAe,IAAIC,GAAaE,EAAKxM,GAC9B,KACLqM,IAAcoB,UACdpB,QAAepb,CAAS,CAE5B,CExCWuf,CAAoBhE,EAAKsD,EAAiBhQ,QAAS,GACzD,CAAC0M,EAAK+B,EAASI,KAElB9d,EAAAA,EAAAA,KAAU,KACR8e,GAAkB,EAAM,GACvB,CAAC7f,KAEJe,EAAAA,EAAAA,KAAU,KAGR,GAFIsd,IAAiBA,KACrBA,QAAkBld,GACbwe,EAAY3P,UAAY8P,EAAW,CACtC,MAAM5C,EAAO/C,IACPwG,EAAYpC,EAAWrB,EAC7BmB,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9B/c,KAAMqZ,EACN2D,GAAItC,EACJA,SAAuB,IAAZoC,EAAoBhC,EAC/BmC,SAAUzB,GAEd,IACC,CAAClF,EAAgB2F,EAAWT,EAAiBV,EAAcJ,KAE9Dxd,EAAAA,EAAAA,KAAU,KACH6d,IAAaM,MACZb,IAAiBA,KACrBA,QAAkBld,EACpB,GACC,CAACyd,EAAWQ,EAAiBF,KAEhCne,EAAAA,EAAAA,KAAU,KACR,GAAI6d,EAAW,CACTP,IAAiBA,KACrBA,QAAkBld,EAClB,MAAM+b,EAAO/C,IACPwG,EAAYpC,EAAWrB,EAC7BmB,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9B/c,KAAMqZ,EACN2D,GAAItC,EACJA,SAAuB,IAAZoC,EAAoBhC,EAC/BmC,SAAUzB,GAEd,IAEC,CAACT,EAAWD,EAAcJ,KAE7BwC,EAAAA,EAAAA,KAAgB,KACd,IAAKb,EAAYlQ,QAAS,OAC1B,MAAMqJ,GAAWlB,EAAAA,GAAAA,IAAOiH,IAAoBb,EAAY,IAAK,GAC7D2B,EAAYlQ,QAAQzD,MAAM0D,MAAS,GAAEoJ,IAAW,GAC/C,CAAC+F,EAAiBb,KAErBwC,EAAAA,EAAAA,KAAgB,KACTd,EAAWjQ,UAChBiQ,EAAWjQ,QAAQzD,MAAMyU,KAAQ,GAAEzB,QAAsB,GACxD,CAACA,KAEJwB,EAAAA,EAAAA,KAAgB,KACTZ,EAAenQ,UACpBmQ,EAAenQ,QAAQiR,WAAYC,EAAAA,GAAAA,IAAoBzB,KAAiB,GACvE,CAACA,KAEJ1e,EAAAA,EAAAA,KAAU,KACR,IAAKie,EAAUhP,UAAYhQ,EAAU,OACrC,MAAMmhB,EAASnC,EAAUhP,QACzB,IAAIoR,EAAaD,EAAOE,wBAEpBnE,EAAO,EACPoE,EAAS,EAEb,MAAMC,EAAmBrO,IACvB,MAAMsO,EAAQtO,aAAauO,WAAavO,EAAEsO,MAAQtO,EAAEwO,QAAQ,GAAGF,MACzDG,GAAIC,EAAAA,GAAAA,IAAMrD,IAAaiD,EAAQJ,EAAWJ,MAAQI,EAAWnR,OAAQ,EAAGsO,GAC9E,GAAIM,EAAmB,MAAO,CAAC8C,EAAG,GAC7BP,EAAWnR,QAAOmR,EAAaD,EAAOE,yBAC3C,MAAMQ,EAAU5B,EAAWjQ,QAI3B,MAAO,CAAC2R,GAHEC,EAAAA,GAAAA,IACRJ,EAAQJ,EAAWJ,KAAOa,EAAQC,YAAc,GAAI,EAAGV,EAAWnR,MAAQ4R,EAAQC,YAAc,GAErF,EAGTC,EAAgBA,KAChB1D,IAAiBA,KACrBA,QAAkBld,CAAS,EAmBvB6gB,EAAiBA,KACrBD,IACApC,EAAY3P,SAAU,EACtB6P,GAAkB,GAClBE,GAAa,GACbV,EAAgBnC,GAChB4B,EAAO5B,GAEP9L,YAAW,KACTuO,EAAY3P,SAAU,CAAK,GA/Jd,IAgKC,EAGZiS,GAAUC,EAAAA,GAAAA,IAAcf,EAAQ,CACpCgB,UArBsBC,KACtBL,IACAlC,GAAkB,GAClBE,GAAa,GACbhB,GAAa,EAkBbsD,UAAWL,EACX1hB,QAAS0hB,EACTM,OAjCkBpP,IAClB6O,IACAlC,GAAkB,IAChB3C,EAAMoE,GAAUC,EAAgBrO,GAC7BqN,EAAWrD,GAChBsC,EAAiB8B,GACjBjC,EAAgBnC,EAAK,IA8BvB,GAAIlC,EAAAA,IAAgB6D,EAClB,OAAOoD,EAGT,MAAMM,EAAuBrP,IAC3B2M,GAAkB,IAChB3C,EAAMoE,GAAUC,EAAgBrO,GAClCsM,EAAiB8B,GACZf,EAAWrD,EAAK,EAGjBsF,EAAuBA,KAC3B3C,GAAkB,EAAM,EAO1B,OAJAsB,EAAO5F,iBAAiB,YAAagH,GACrCpB,EAAO5F,iBAAiB,aAAcgH,GACtCpB,EAAO5F,iBAAiB,aAAciH,GAE/B,KACLP,IACAd,EAAO3F,oBAAoB,YAAa+G,GACxCpB,EAAO3F,oBAAoB,aAAc+G,GACzCpB,EAAO3F,oBAAoB,aAAcgH,EAAqB,CAC/D,GACA,CACDjE,EACAgC,EACAvgB,EACA8e,EACAC,EACAS,EACAH,EACAU,EACAlB,EACAF,IAIArc,EAAAA,GAAAC,cAAA,OAAKtC,UDxPmB,WCwPUyZ,IAAKsF,IACnCH,GACAvc,EAAAA,GAAAC,cAACkgB,GAAAA,EAAc,CACb9b,QAAM,EACNmU,UAAW8E,EACX3f,UD7PuC,WC8PvCsM,MAAQ,UAAS6T,EAAYnQ,oBAAoBmQ,EAAY9P,WAC7DoJ,IAAKuG,GAEL3d,EAAAA,GAAAC,cAAA,UAAQtC,UDjQ0D,WCiQzByZ,IAAKsG,IAC9C1d,EAAAA,GAAAC,cAAA,OAAKtC,UDlQsF,YCmQzFqC,EAAAA,GAAAC,cAAA,QAAMtC,UDnQgH,WCmQ7EyZ,IAAKyG,MAIpD7d,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACb+b,EAAe9b,KAAI,EAClBggB,QACAC,SAEArgB,EAAAA,GAAAC,cAAA,OACEe,IAAM,GAAEof,KAASC,IACjB1iB,UD9Q+J,WCgR/JsM,MAAQ,SAAgB,IAARmW,cAAwB,IAAY,IAANC,UAIpDrgB,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OACEmX,IAAKwG,EACLjgB,WAAWuC,EAAAA,GAAAA,GDvR0K,WCuR5Isd,GDvRiK,eC0R1M,IC/NJzV,GAAa6I,IACjBA,EAAEwI,iBAAiB,EAGfkH,GAAiB,CACrB,GACA,EACA,IACA,GA8MF,IAAe9iB,EAAAA,EAAAA,KAzM2B+iB,EACxCnG,MACA8B,iBACAsE,mBACAvE,WACAE,UACAsE,WACArI,uBACAkE,YACAoE,wBACAC,eACAC,aACArE,oBACAsE,SACAC,UACAzE,eACAD,aACA2E,qBACAC,gBACAC,iBACAC,uBACAC,8BACAC,2BACAC,cACA7E,aAEA,MAAO8E,EAAoBC,EAAkBC,IAAqBhjB,EAAAA,EAAAA,MAC3DqZ,GAAkBE,KACnBgD,GAActC,EAAAA,GAAAA,IAAgB,IAAM7Y,KAAK6hB,MAAM5J,MAAmB,CAACA,KAClE6J,EAAcjE,IAAgBT,EAAAA,EAAAA,KAAU,IAEzC,SAAE9Z,IAAaC,EAAAA,EAAAA,OACdoV,EAAcoJ,GAAiBhK,KAChCiK,GAAYnJ,EAAAA,GAAAA,GAAgBF,IAElC9Z,EAAAA,EAAAA,KAAU,KACR,IAAKia,EAAAA,KAAiBN,EAAsB,OAC5C,IAAIyJ,EACJ,GAAKD,GAActF,IAAagF,IAAsBI,IAOtD,OAHAG,EAAUhT,OAAOC,YAAW,KAC1B6S,GAAc,EAAM,GA7CO,KA+CtB,KACDE,GAAShT,OAAOL,aAAaqT,EAAQ,EAPrCA,GAAShT,OAAOL,aAAaqT,EAQlC,GACA,CAACvF,EAAWsF,EAAWD,EAAeL,EAAoBI,EAActJ,KAE3EqG,EAAAA,EAAAA,KAAgB,KACVmD,EACFxb,SAAS0b,KAAKra,UAAUC,IAAI,0BAE5BtB,SAAS0b,KAAKra,UAAUsa,OAAO,0BAE1B,KACL3b,SAAS0b,KAAKra,UAAUsa,OAAO,yBAAyB,IAEzD,CAACH,KAEJnjB,EAAAA,EAAAA,KAAU,KACHmjB,GACHJ,GACF,GACC,CAACA,EAAmBI,IAEvB,MAAMzjB,GAAOD,EAAAA,EAAAA,KAEP8jB,GAAa1R,EAAAA,EAAAA,IAAiB2R,IAClCxE,GAAa,GACbjB,EAAOyF,EAAS,IAGZC,GAAkB5R,EAAAA,EAAAA,IAAgB,KACtCmN,GAAa,EAAK,IAGd0E,GAAuBvjB,EAAAA,EAAAA,KAAQ,IACpB,IAAXiiB,GAAgBC,EAAgB,QAChCD,EAAS,GAAY,WACrBA,EAAS,GAAY,WAClB,YACN,CAACA,EAAQC,IAEZ,OACE9gB,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAe,sBAAuBkY,GAAwB,SAAUwJ,GAAa,UAChG5jB,QAAS+J,IAET/H,EAAAA,GAAAC,cAAC+b,GAAQ,CACP5B,IAAKA,EACL6B,SAAUA,EACVE,QAASA,EACTG,UAAWA,EACXC,kBAAmBA,EACnBH,WAAYA,EACZF,eAAgBA,EAChBG,aAAcA,EACdG,OAAQwF,EACRvF,YAAayF,EACbxkB,SAAUkkB,IAEZ5hB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL6T,UAAW3X,EAAK,iBAChBwD,KAAK,OACLygB,QAASlf,EACTmO,MAAM,oBACN1T,UAAU,OACVkY,OAAK,EACL7X,QAASqjB,GAETrhB,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAM+Z,EAAY,QAAU,UAEpCtc,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL6T,UAAU,SACVnU,KAAK,OACL0P,MAAM,oBACN1T,UAAU,SACVkY,OAAK,EACL7X,QAASgjB,GAEThhB,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAM4f,MAEZxI,EAAAA,IACA3Z,EAAAA,GAAAC,cAACoiB,GAAAA,EAAW,CAACC,MAAI,EAAC3kB,UAAU,gBAAgB+S,MAAOoQ,EAAU,EAAa,IAATD,EAAc3P,SAAU+P,IAmEnG,SAAoBlG,EAAqBkB,GACvC,OACEjc,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACX,IAAEihB,EAAAA,GAAAA,IAAoB7D,SAAkB6D,EAAAA,GAAAA,IAAoB3C,KAGpE,CAvESsG,CAAWxH,EAAakB,IACvB2E,GACA5gB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,oBACX,IAAE6kB,EAAAA,GAAAA,IAAerkB,EAAMsiB,EAAWD,SAAuBgC,EAAAA,GAAAA,IAAerkB,EAAMsiB,MAGpFzgB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACfqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL6T,UAAU,gBACVnU,KAAK,OACL0P,MAAM,oBACN1T,UAAU,gBACVkY,OAAK,EACL7X,QAASujB,GAEP,GAAElF,MAEL8E,GACCnhB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL6T,UAAU,qBACVnU,KAAK,OACL0P,MAAM,oBACN1T,UAAU,aACVkY,OAAK,EACL7X,QAASojB,GAETphB,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,SAGdme,GACC1gB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL6T,UAAU,aACVnU,KAAK,OACL0P,MAAM,oBACN1T,UAAU,aACVkY,OAAK,EACL7X,QAAS+iB,GAET/gB,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAMoe,EAAe,cAAgB,iBAIjD3gB,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI,CACHpe,OAAQid,EACR3jB,WAAWuC,EAAAA,GAAAA,GACT,sBACCwgB,GAAyB,iBACzBS,GAA+B,UAElCvK,UAAU,QACV8L,UAAU,SACVC,WAAS,EACT9d,QAAS2c,GAERlB,GAAelgB,KAAKwiB,GAEnB5iB,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAACgM,SAAUxG,IAAiBuG,EAAM5kB,QAASA,IAAMkjB,EAAqB0B,IAC3E,GAAEA,SAIN,I,2NC9MV,MAuUA,IAAeplB,EAAAA,EAAAA,KAnUmBslB,EAChC1I,MACAhT,QACA2b,aACA3G,aACAtP,eACA2T,WACAuC,oBACAC,SACApC,SACAC,UACAzE,eACAjE,uBACA8K,qBACAnQ,cACAoQ,kBACA5G,oBACA6G,qBACAC,YACAlL,uBACAtT,cAEA,MAAM,qBACJye,EAAoB,oBACpBC,EAAmB,2BACnBC,EAA0B,qBAC1BC,IACE1T,EAAAA,EAAAA,MAEE2T,GAAWnW,EAAAA,EAAAA,IAAyB,OACnC+O,EAAWqH,IAAgBzT,EAAAA,EAAAA,KAAUwI,EAAAA,KAAiBiB,EAAAA,KACtDgH,EAAciD,EAAeC,IAAkBC,EAAAA,GAAAA,IAAcJ,EAAUC,IACxE,SAAEzgB,IAAaC,EAAAA,EAAAA,MACf8Y,EAAWyH,EAAShW,SAASuO,UAAY,EACzC8H,EAAW3c,GAAS6U,GAtCF,GAwClB+H,GAAwB1T,EAAAA,EAAAA,IAAgB,KAExC2T,EAAAA,IACJR,EAAqB,CAAEjL,UAAU,GAAO,IAGpC0L,GAAwB5T,EAAAA,EAAAA,IAAgB,KACxC2T,EAAAA,IACJR,EAAqB,CAAEjL,UAAU,GAAQ,KAIzC2I,EACAgD,EACAC,GjBzFW,SACbC,EACArT,EACAsT,GAEA,MAAOC,EAAaC,IAAkBtU,EAAAA,EAAAA,KAAS,IACxCxS,EAAU+mB,IAAevU,EAAAA,EAAAA,KAAS,IAEzCuO,EAAAA,EAAAA,KAAgB,KAEd,GAAK9E,EAAAA,IAAU+K,EAAAA,KAAYL,EAAM3W,QAAS,OAC1C,MAAMpH,EAAQ+d,EAAM3W,QACdiX,EAAUra,EAAuBhE,GAGvC,KAFmBF,SAASwe,yBAA4BP,EAAM3W,SAASmX,+BACtDhmB,IAAZ8lB,EACW,OAEhBre,EAAMwe,sBAAuB,EAC7BN,GAAe,GACf,MAAMO,EAAkBA,KACtB/T,IACAyT,GAAY,GACZpa,GAAsB,EAAK,EAEvB2a,EAAkBA,KACtB3a,GAAsB,GACtBoa,GAAY,GACZH,GAAS,EAIX,OAFAhe,EAAM2S,iBAAiB,wBAAyB8L,GAChDze,EAAM2S,iBAAiB,wBAAyB+L,GACzC,KACL1e,EAAM4S,oBAAoB,wBAAyB6L,GACnDze,EAAM4S,oBAAoB,wBAAyB8L,EAAgB,CACpE,GACA,CAACX,EAAOrT,EAASsT,IAEpB,MAAM1Z,GAAuBnH,EAAAA,EAAAA,KAAY,KACvC,IAAK4gB,EAAM3W,QAAS,OACpB,MACMiX,EAAUra,EADF+Z,EAAM3W,SAEhBiX,EACFA,EAAQ,UAERja,GACF,GACC,CAAC2Z,IAEEF,GAAwB1gB,EAAAA,EAAAA,KAAY,KACxC,IAAK4gB,EAAM3W,QAAS,OACpB9C,IACA,MAAMtE,EAAQ+d,EAAM3W,QACd4O,GAAY2I,EAAAA,EAAAA,GAAkB3e,GAC9Bqe,EAAUra,EAAuBhE,GACnCqe,EACFA,EAAQ,sBA0Bd,SAAiCre,GAC/B,GAAIA,EAAM4e,wBACR,IACE5e,EAAM4e,yBACR,CAAE,MAAOra,GACHC,EAAAA,KAEFC,QAAQC,IAAI,8BAA+BH,EAE/C,CAEJ,CAnCMqa,CAAwB5e,GAGtBgW,IACF6I,EAAAA,EAAAA,GAAS7e,EACX,GACC,CAAC+d,EAAOzZ,IAEX,OAAK2Z,EAIE,CAACA,EAAaJ,EAAuBzmB,GAHnC,EAAC,EAIZ,CiBoBM0nB,CAAoB1B,EAAUM,EAAuBE,IAElD,CAAEmB,EAAgBC,GAAgB3N,KAEnC4N,GAAkBjV,EAAAA,EAAAA,IAAgB,KACtC+U,GAAe,EAAK,IAGhBG,IAAmBlV,EAAAA,EAAAA,IAAiBM,IACxC,MAAM6U,EAAS/B,EAAShW,SAASqR,wBAC5B0G,IACD7U,EAAE8U,QAAUD,EAAO/G,MAAQ9N,EAAE8U,QAAUD,EAAOE,OAAS/U,EAAEgV,QAAUH,EAAOI,KAAOjV,EAAEgV,QAAUH,EAAOK,SACtGT,GAAe,EACjB,KAGI,QACJlJ,GAAO,WAAEyE,GAAU,eAAE1E,GAAc,kBAAE6J,GAAiB,iBAAEvF,KACtDwF,EAAAA,GAAAA,KACEC,IAAgBC,EAAAA,GAAAA,GAAoBxC,OAAU7kB,GAAYub,IAG9D+L,aAAcC,GACdC,qBAAsBC,KACpBC,EAAAA,GAAAA,IACD3F,KAAeqF,QAAepnB,OAAWA,EAAW,SAGrDsnB,aAAcK,GACdH,qBAAsBI,KACpBF,EAAAA,GAAAA,GACF5M,EAAAA,KAAW2C,IAAc8J,KAAwBH,QAAepnB,OAAWA,EAAW,SAGjF,CAAEiZ,IAAkBC,MACpB,CAAEwB,IAAqBC,MAE9B/a,EAAAA,EAAAA,KAAU,KACR6mB,EAAac,GAAoB,GAChC,CAACd,EAAcc,MAElB3nB,EAAAA,EAAAA,KAAU,KACJwkB,IAAWD,GAAqBiD,GAClCvC,EAAShW,QAASgZ,QACTtM,IAAQ1B,EAAAA,KAIjByM,EAAAA,EAAAA,GAASzB,EAAShW,QACpB,GACC,CAACuV,EAAQD,EAAmB5I,EAAKmJ,EAAqB0C,MAEzDxnB,EAAAA,EAAAA,KAAU,KACRilB,EAAShW,QAASmT,OAASA,CAAM,GAChC,CAACA,KAEJpiB,EAAAA,EAAAA,KAAU,KACRilB,EAAShW,QAAS2O,aAAeA,CAAY,GAC5C,CAACA,KAEJ5d,EAAAA,EAAAA,KAAU,KACH4kB,IACLK,EAAShW,QAASqN,YAAcsI,EAChCvL,GAAeuL,GAAU,GACxB,CAACvL,GAAgBuL,IAEpB,MAAMsD,IAAkBrW,EAAAA,EAAAA,IAAiBM,IACvCA,EAAEwI,kBACEkD,GACFoH,EAAShW,QAASgZ,QAClB/C,GAAa,MAEbwB,EAAAA,EAAAA,GAASzB,EAAShW,SAClBiW,GAAa,GACf,IAGIiD,IAActW,EAAAA,EAAAA,IAAiBM,IAC/BwS,IACFjL,KAAuB,GACvBtT,EAAQ+L,IAENuS,IAGAD,EACFre,EAAQ+L,GAER+V,GAAgB/V,GAClB,KAGFiW,EAAAA,GAAAA,GAAgBnD,EAAUqC,IAE1B,MAAMe,IAAmBxW,EAAAA,EAAAA,IAAiBM,IACxC,MAAMtK,EAAQsK,EAAEmW,cACZzgB,EAAM0gB,YAtJU,IAuJlBzN,IAAkB,GAClBzB,GAAexR,EAAMyU,cAElBgJ,GAAYzd,EAAMyU,cAAgBzU,EAAM2V,WAC3CnE,GAAe,GACf6L,GAAa,GACf,IAGIsD,IAAc3W,EAAAA,EAAAA,IAAgB,KAC9ByT,IACJjM,GAAe,GACf6L,GAAa,GACb0B,GAAe,GAAK,IAGhB6B,IAAyB5W,EAAAA,EAAAA,IAAgB,KACzCqQ,GAAgBkD,EAClBA,KACUlD,GAAgBiD,GAC1BA,GACF,IAGI5B,IAAa1R,EAAAA,EAAAA,IAAiB2R,IAClCyB,EAAShW,QAASqN,YAAckH,CAAQ,IAGpCkF,IAAqB7W,EAAAA,EAAAA,IAAiB8W,IAC1C9D,EAAqB,CAAEzC,OAAQuG,EAAY,KAAM,IAG7CC,IAAoB/W,EAAAA,EAAAA,IAAgB,KAExCoT,EAAShW,QAAS4Z,OAAS5D,EAAShW,QAAS4Z,MAC7C/D,EAAoB,CAAEzC,SAAUA,GAAU,IAGtCyG,IAA2BjX,EAAAA,EAAAA,IAAiBkX,IAChDhE,EAA2B,CAAEnH,aAAcmL,GAAkB,KAG/D/oB,EAAAA,EAAAA,KAAU,KACR,IAAKukB,EAAmB,OACxB,MAAMyE,EAAUrmB,IACd,IAAKuf,EAAc,OACnB,MAAMra,EAAQod,EAAShW,QACjBga,GAAUpI,EAAAA,GAAAA,IAAMhZ,EAAMyU,YArMd,EAqM4B3Z,EAAmB,EAAGkF,EAAM2V,UAClE0L,OAAOC,SAASF,KAClBphB,EAAMyU,YAAc2M,EACtB,EAEIG,EAAiBjX,IACrB,IAAIwT,EACJ,OAAQxT,EAAE5P,KACR,IAAK,IACL,IAAK,QACH4P,EAAEkX,iBACFnB,GAAgB/V,GAChB,MACF,IAAK,OACL,IAAK,YACHA,EAAEkX,iBACFL,GAAQ,GACR,MACF,IAAK,QACL,IAAK,aACH7W,EAAEkX,iBACFL,EAAO,GAEX,EAKF,OAFArhB,SAAS6S,iBAAiB,UAAW4O,GAAe,GAE7C,KACLzhB,SAAS8S,oBAAoB,UAAW2O,GAAe,EAAM,CAC9D,GACA,CAAClB,GAAiB3D,EAAmBrC,EAAcyD,IAEtD,MAAM2D,GAAe3L,GAAe,UAASA,EAAWzO,oBAAoByO,EAAWpO,WACjFga,GAAc,yBAAwBjF,KACtCkF,IAAwBvP,EAAAA,KAAiBN,EAE/C,OAEEpY,EAAAA,GAAAC,cAAA,OACEtC,UAAU,cACVuqB,YAAaD,GAAuB1C,OAAkB1mB,EACtDspB,WAAYF,GAAuBzC,QAAmB3mB,GAEtDmB,EAAAA,GAAAC,cAAA,OACEgK,MAAO8d,IAGNhV,GACC/S,EAAAA,GAAAC,cAAA,OACEmoB,cAAergB,EAAAA,EACfsgB,cAAgB3P,EAAAA,QAAwC7Z,EAAzBqoB,GAC/BlpB,QAAUkF,OAA6BrE,EAAlB8nB,GACrBhpB,UAAU,cAGdqC,EAAAA,GAAAC,cAAA,QAAAqoB,GAAA,CACElR,IAAKsM,EACL6E,SAAU7P,EAAAA,GACV8P,aAAa,aACbC,aAAW,EACXC,KAAM3E,EAENuD,MAAOlgB,GAAS0Z,EAChBpd,GAAG,qBACHuG,MAAO+d,GACPW,UAAWA,IAAMpP,IAAkB,GACnCqP,OAAQA,IAAMjF,GAAa,GAC3BkF,QAAS5B,GACTjpB,QAAUkF,GAAayd,OAA6B9hB,EAAd+nB,GACtCyB,cAAgB3P,EAAAA,QAAwC7Z,EAAzBqoB,IAE3BnB,GAAiB,CACrB+C,QAAUlY,IACR+S,GAAa,GACboC,GAAkB+C,QAAQlY,EAAE,EAE9BmY,aAAcjC,GACd9e,IAAKoS,MAGRoM,IACCxmB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAAC4T,OAAK,EAAClY,UAAY,eAAc8oB,KAAwBzoB,QAAS2oB,IACvE3mB,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UAGd6jB,IACCpmB,EAAAA,GAAAC,cAAA,OAAKtC,UAAW,CAAC,oBAAqB2oB,IAAmB0C,KAAK,OAC1DpI,IAAc5gB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,aAAY,gBAC3CqC,EAAAA,GAAAC,cAAC6W,GAAAA,EAAe,CACdnV,KAAK,KACLoV,SAAU6J,GAAa,EAAI9T,EAC3B9O,QAAS6G,MAIbuC,IAAUgc,IAAuB6C,IACjCjmB,EAAAA,GAAAC,cAACsgB,GAAmB,CAClBnG,IAAKA,EACLkC,UAAWA,EACXJ,eAAgBA,GAChBsE,iBAAkBA,GAClBI,WAAYA,GACZF,sBAAuB1R,QAAQ4U,GAC/BzC,4BAA6BA,EAC7BR,aAAcA,EACdpE,kBAAmBA,EACnBkE,SAAUA,EACVxE,SAAUA,EACVE,QAASA,GACTC,WAAYA,EACZhE,qBAAsBA,EACtBoE,OAAQwF,GACRjB,mBAAoBmG,GACpB9F,yBAA0B+C,EAC1B9C,YAAasF,GACb9F,OAAQA,EACRxE,aAAcA,EACdyE,QAASA,EACTE,cAAeqG,GACfpG,eAAgBkG,GAChBjG,qBAAsBqG,KAGtB,IC5IV,IAAe/pB,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAUC,WACT,MAAM,OACJ0O,EAAM,QACNC,EAAO,aACPzE,EAAY,SACZ7D,EAAQ,OACRjR,EAAM,UACN8b,EAAS,SACTvQ,IACER,EAAAA,EAAAA,KAAeJ,GAAQK,YACrB7L,EAAwB,YAAdyL,EAAKzQ,KAAqByQ,EAAKzL,aAAU7H,EACnDoqB,EAAiC,qBAAd9W,EAAKzQ,KAA8ByQ,EAAKzL,aAAU7H,EACrEqqB,EAAcxiB,GAAWuiB,EAEzBE,EAAeziB,IAAW0iB,EAAAA,EAAAA,KAAmClX,EAAQxL,GAAS,GAEpF,MAAO,CACLa,SACA2hB,cACAnW,YAAarM,IAAWsM,EAAAA,EAAAA,KAAyBd,EAAQxL,GACzDma,SACAC,UACAtI,WACA6D,eACAvJ,WACAuQ,YACA8F,eACD,GA5BelX,EAhLOoX,EACzBlX,OACAzU,WACAwrB,cACA3hB,SACA+hB,gBACAvW,cACA8N,SACAxE,eACAyE,UACAtI,WACA+Q,WACAzW,WACAuQ,YACA8F,eACAtkB,UACA2kB,gBACArR,2BAEA,MAAM,4BAAEsR,IAAgC1Z,EAAAA,EAAAA,MAElC5R,GAAOD,EAAAA,EAAAA,KAEPoN,EAAyB,WAAd6G,EAAKzQ,KAChB0hB,EAAmC,qBAAdjR,EAAKzQ,MAC1B,MAAEmE,GAAUF,EAAiBwM,IAAS,CAAC,GAEvC,QACJzG,EAAO,QACPI,EAAO,cACPqB,EAAa,SACbgC,EAAQ,WACRI,EAAU,MACVnI,EAAK,QACLkI,EAAO,cACP3D,EAAa,UACbyD,EAAS,aACTtC,GACEzB,EAAc,CAChBxF,QAAOyF,WAAU/D,SAAQgE,QAAO+d,GA3CT,OA8ClB,CAAEjE,GAAkB1N,MACpBE,GAAkBE,KAEnB1T,EAAS2K,QAAQnJ,IACjB,SAAE3C,IAAaC,EAAAA,EAAAA,MAEfumB,GAAuBpZ,EAAAA,EAAAA,IAAgB,KAC3C+U,GAAe,EAAK,IAGhBsE,GAA0BC,EAAAA,GAAAA,IAAqB,KACnD,IAAKlsB,IAAawrB,GAAoC,UAArBrjB,GAAO4F,UAAuB,OAC/D,GAAI5F,EAAMoW,SAAW4N,EAAAA,IAAuC,OAE5D,MAAMnjB,EAAU,OAAQwiB,EAAcA,OAAcrqB,EAC9Ckc,EAAclD,IACpB,IAAKkD,IAAgBrU,GAAWA,EAAQojB,UAAW,OAGnD,MAAMC,EAAelkB,EAAMoW,SAAWlB,EAAciP,EAAgCjP,OAAclc,EAClG4qB,EAA4B,CAAElZ,OAAQ7J,EAAQ6J,OAAQiL,UAAW9U,EAAQhD,GAAI2f,UAAW0G,GAAe,GACtG,CAAClS,EAAgBna,EAAUmI,EAAOqjB,GAjER,KAqE7B,IAFAe,EAAAA,GAAAA,GAAgBN,EAAyB,CAAC9R,KAErChS,EAAO,OAEZ,GAAkB,WAAdsM,EAAKzQ,KACP,OAAKiK,EAaD3L,EAAAA,GAAAC,cAAA,OAAKe,IAAK6E,EAAMnC,GAAI/F,UAAU,sBAC5BqC,EAAAA,GAAAC,cAAC6iB,GAAW,CACV9hB,IAAK6E,EAAMnC,GACX0W,IAAKjL,EACL/H,OAAK,EACL2b,WAAY5V,EACZiP,YAAY8N,EAAAA,EAAAA,IAA+B3a,GAAa,GAAO,GAC/DzC,aAAcA,EACd2T,SAAUrR,EACV4T,kBAAmB3e,GAAU3G,EAC7BqV,YAAaA,EACbwJ,mBAAoB4N,GAAAA,IAA2B7a,EAC/C2T,QAASvlB,EACTmH,QAASA,EACTic,SAAO,EACPoC,oBAAkB,EAClBrC,OAAQ,EACRsC,gBAAiBoG,EACjBlN,aAAc,EACd+G,mBAAoBA,EACpBjL,qBAAsBA,KA/B1BnY,EAAAA,GAAAC,cAAA,OAAKe,IAAK6E,EAAMnC,GAAI/F,UAAU,sBAC3BysB,GACCjb,GACA+a,EAAAA,EAAAA,IAA+B3a,GAAa,IAC3CrM,IAAa6P,EACdA,IAiCV,MAAMsX,EAAYnB,IAAqD,wBAArCA,EAAY7S,QAAQlQ,QAAQzE,KAC1DvD,EAAK,qCACLmsB,EAAAA,EAAAA,GAAkB,CAClB5jB,QAASwiB,EAAaC,eAAcrW,WAAUyX,eAAe,EAAMC,kBAAkB,KAEnF9lB,EAAawkB,GAAe,eAAgBA,EAAcA,EAAYxkB,gBAAa7F,EACnF4rB,EAAYzb,QAAQqb,GACpBjO,GAAa8N,EAAAA,EAAAA,IAA+B3a,EAAakb,EAAW/e,GACpE0M,GAAuBlV,GAiJ/B,SAAkCkZ,GAChC,QAAKA,GACEA,EAAWzO,MA5QiB,GA6QrC,CApJ2C+c,CAAyBtO,GAElE,OACEpc,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAe,qBAAsBuqB,GAAa,cAC7DvC,YAAa9P,KAAyBM,EAAAA,GAAegR,OAAuB7qB,GAE3EiN,GAAWse,GACVjb,EACAiN,GACClZ,IAAa6P,EACdA,GAEDrH,IAAahO,EAMZsC,EAAAA,GAAAC,cAAC6iB,GAAW,CACV9hB,IAAK6E,EAAMnC,GACX0W,IAAKjL,EACL/H,MAAOA,EACP2b,WAAY5V,EACZiP,WAAYA,EACZtP,aAAcA,EACd2T,SAAUrR,EACV4T,kBAAmB3e,GAAU3G,EAC7BulB,QAASvlB,EACT6e,mBAAoB4N,GAAAA,IAA2B7a,EAC/CzK,QAASA,EACTic,QAASA,EACTtI,SAAUA,EACVJ,qBAAsBA,GACtBrF,YAAaA,EACb8N,OAAQA,EACRsC,gBAAiBoG,EACjBlN,aAAcA,EACd+G,mBAAoBA,EACpBjL,qBAAsBA,EACtBkL,UAAWA,IA0ErB,SAA4BnW,EAAkByd,EAA2BC,EAAmB7X,GAC1F,MAAMgV,EAAe4C,GAAc,UAASA,EAAUhd,oBAAoBgd,EAAU3c,WAC9Ega,EAAc,yBAAwB9a,KAC5C,OAAOA,EAEHlN,EAAAA,GAAAC,cAAA,OACEtC,UAAU,eAEToV,GAAe/S,EAAAA,GAAAC,cAAA,OAAKmoB,cAAergB,EAAAA,EAAWpK,UAAU,cACzDqC,EAAAA,GAAAC,cAAA,OACEgK,MAAO8d,GAGP/nB,EAAAA,GAAAC,cAAA,SACEgK,MAAO+d,EACPrqB,WAAWuC,EAAAA,GAAAA,GAAe6S,GAAe,gBACzClL,UAAWmH,QAAQ4b,OAMzB5qB,EAAAA,GAAAC,cAAA,OACEtC,UAAU,kBACVsM,MAAO0gB,EAAa,UAASA,EAAUhd,UAAY,IAEnD3N,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAGvB,CAlI+B8M,CACvBhR,EACAiP,GACClZ,IAAa6P,EACdA,IA0BDsX,GACCrqB,EAAAA,GAAAC,cAAC+X,GAAiB,CAChBC,KAAMoS,EACN3lB,WAAYA,EACZ1G,QAASwrB,EACTzW,YAAaA,EACbqF,qBAAsBA,GACtBF,WAAYxM,IAAYtE,EACxB+Q,qBAAsBA,IAGtB,KAoCV,SAASiS,GAAYld,EAAkByd,EAA2BC,EAAmB7X,GACnF,OAAO7F,EAEHlN,EAAAA,GAAAC,cAAA,OAAKgK,MAAM,uBACR8I,GAAe/S,EAAAA,GAAAC,cAAA,OAAKmoB,cAAergB,EAAAA,EAAWpK,UAAU,cACzDqC,EAAAA,GAAAC,cAAA,OACE+H,IAAKkF,EACL4d,IAAI,GACJntB,WAAWuC,EAAAA,GAAAA,GAAe6S,GAAe,gBACzC9I,MAAO0gB,EAAa,UAASA,EAAUhd,UAAY,GACnD9F,UAAWmH,QAAQ4b,MAKvB5qB,EAAAA,GAAAC,cAAA,OACEtC,UAAU,kBACVsM,MAAO0gB,EAAa,UAASA,EAAUhd,UAAY,IAEnD3N,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAGvB,CChQA,MAAM,aAAE0Z,GAAY,aAAEC,IAAiBC,EAAAA,GA2BjCC,GAAaxS,EAAAA,GAAe,GAAK,EACjCyS,GAAqB,IAS3B,IAAIpP,GACAqP,GAA0C,IAQzCC,GAAc,SAAdA,GAAc,OAAdA,EAAAA,EAAc,2BAAdA,EAAAA,EAAc,uBAAdA,CAAc,EAAdA,IAAc,IAKnB,MA4rBA,IAAe7tB,EAAAA,EAAAA,KA5rByB8tB,EACtCnZ,OACAzG,UACAtE,QACA/C,SACAilB,gBACA9Q,WACA+S,qBACAC,WACAC,wBACAC,cACAC,aACA9mB,UACA2kB,gBACArR,2BAGA,MAAMyT,GAAere,EAAAA,EAAAA,IAAuB,MAEtCse,GAAiBte,EAAAA,EAAAA,IAAuB,MAExCue,GAAeve,EAAAA,EAAAA,IAAuB,MAEtCwe,GAAgBxe,EAAAA,EAAAA,IAAuB,MACvCye,GAAmBze,EAAAA,EAAAA,IAAkB,CAAE0e,EAAG,EAAGC,EAAG,EAAGC,MAAO,IAC1DC,GAAoB7e,EAAAA,EAAAA,SAAmC1O,GACvDwtB,GAAwB9e,EAAAA,EAAAA,SAA4B1O,GACpDytB,GAAgB/e,EAAAA,EAAAA,KAAO,IACtB7P,EAAU+mB,IAAevU,EAAAA,EAAAA,KAAS,IAClCoB,GAAiBE,KAClB+a,GAAoBhf,EAAAA,EAAAA,IAAO+D,KAC3BqP,GAAe6L,EAAAA,GAAAA,OACdC,EAAaC,IAAkBxc,EAAAA,EAAAA,KAAS,IACxCyc,EAAcC,IAAgB5P,EAAAA,EAAAA,IAAqB,CAAEiP,EAAG,EAAGC,EAAG,EAAGC,MAAO,IACzEU,EAAe3V,GAAayV,IAC3BG,EAAeC,IAAiB/P,EAAAA,EAAAA,IAAuC7K,GACxE6a,EAAgB9V,GAAa4V,GAC7BG,GAAWxU,EAAAA,GAAAA,IAAgB,IAA+B,IAAzBkU,IAAeR,OAAa,CAACQ,IAC9DO,GAAazU,EAAAA,GAAAA,GAAgBqU,IAC3B9e,OAAQmf,EAAcxf,MAAOyf,EAAW,WAAEC,IAAeC,EAAAA,GAAAA,MAC1D/V,EAAoBC,EAAoB8N,GAAgB3N,KAEzDxZ,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,SAAU2G,EACVmpB,OAAQ3oB,EACR4oB,kBAAkB,IAGpB,MAAMC,GAAsBC,EAAAA,GAAAA,GAAqBhC,EAAY,CAACA,GAxElC,KAwEsE,GAC5FiC,GAA+BD,EAAAA,GAAAA,IAAqB,KACxDvB,EAAkB1e,aAAU7O,CAAS,GACpC,GA1EkB,KA0EE,GAEjBgvB,GAAuBF,EAAAA,GAAAA,IAAsBjd,GAAU+T,EAAY/T,IAAQ,GA3E3D,KA2EgF,GAEhGod,EAAqB9e,QAAQ5H,IAAUuS,EAAAA,IACvCoU,EAAkBrV,EAAAA,GAAe,GAAK0U,EAAc,GAEpDY,IAA2B1d,EAAAA,EAAAA,IAAiBM,IAChD,IAAK8H,EAAAA,GAAc,OACnB,MAAMuV,EAAWd,EAAevc,EAAEsd,MAhFZ,IAiFjBD,GAAYrd,EAAEsO,MAAQ6O,IACtBE,GAAYrd,EAAEsO,MAAQkO,EAAcW,GACzCvW,GAAoBD,IAAqB,KAG3ChU,EAAAA,GAAAA,IAAW,IAAMiU,GAAmB,IAAO2T,KAE3C1sB,EAAAA,EAAAA,KAAU,KACR,MAAM,MAAE0tB,EAAK,EAAEF,EAAC,EAAEC,GAAMW,EAAanf,QAE3B,IAANue,GAAiB,IAANC,GAAqB,IAAVC,GACxBY,EAAc5a,EAChB,GACC,CAACA,EAAM4a,EAAeF,KAEzBpuB,EAAAA,EAAAA,KAAU,KACH+sB,GAAa0B,IAAc3B,GAChCE,EAAsByB,EAAW,GAChC,CAACA,EAAYzB,EAAuBD,EAAUD,KAEjD9M,EAAAA,EAAAA,KAAgB,KACd,MAAM,EAAEwN,EAAC,EAAEC,EAAC,MAAEC,GAAUQ,IACxBrH,EAAuB,IAAV6G,GACTL,EAAape,UACfoe,EAAape,QAAQzD,MAAMkkB,UAAYC,IAAmBhB,EAAcnB,EAAIf,KAE1EW,EAAene,UACjBme,EAAene,QAAQzD,MAAMkkB,UAAYC,GAAkBnC,EAAGC,EAAGC,IAE/DJ,EAAcre,UAChBqe,EAAcre,QAAQzD,MAAMkkB,UAAYC,GAAkBhB,EAAcnB,EAAIf,IAC9E,GACC,CAACyB,EAAcrH,EAAc8H,KAEhC3uB,EAAAA,EAAAA,KAAU,KACR,IAAKmtB,EAAale,cAAqC7O,IAA1BmuB,EAActf,SAAyB8K,GAAYmI,EAC9E,OAEF,IAAI0N,EAAgBrC,EAAiBte,QACrC,MAAM4gB,EAAiB,CACrBrC,EAAG,EACHC,EAAG,GAECqC,EAAiB,CACrBtC,EAAG,EACHC,EAAG,GAECsC,EAAW,CACfvC,EAAG,EACHC,EAAG,GAEL,IACI7V,EADAoY,EAAkBC,KAAKC,MAE3B,MAAMC,GAAqBC,EAAAA,GAAAA,KAAS,KAClCJ,EAAkBC,KAAKC,KAAK,GAC3B,KAAK,GAAO,GAETG,EAAeC,IACnB,MAAMC,EAAchC,EAActf,QAClC,QAAoB7O,IAAhBmwB,EAA2B,OAAO,EACtC,MAAMC,EAAWvD,EAAYsD,EAAaD,GAC1C,QAAiBlwB,IAAbowB,EAAwB,CAC1B,MAAMjQ,GAAUoO,EAAclC,IAAc6D,EAEtC9C,EADYY,EAAanf,QACXue,EAAIjN,EAMxB,OALAyF,GAAY,GACZsI,EAAckC,GACdvB,EAAoBuB,GACpBpB,GAAqB,GACrBQ,EAAgB,CAAEpC,EAAG,EAAGC,EAAG,EAAGC,MAAO,GAChC7C,GAILvN,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9B/c,KAAM0qB,EACN1N,GAAI,EACJtC,SAAUkP,GACV+D,OAAQnE,GACRvM,SAAW9N,GAAUkc,EAAa,CAChCV,EAAG,EACHD,EAAGvb,EACHyb,MAAO,OAGJ,IAdLS,EAAayB,IACN,EAcX,CACA,OAAO,CAAK,EAGRc,EAAsBve,IAC1B,MAAM,MAAEub,GAAUU,EAAanf,QAC/B,GAAc,IAAVye,EAAa,MAAO,EAAC,GAAO,GAChC,GAAKvb,EAAEC,OAAuBue,QAAQ,2BACpC,MAAO,EAAC,GAAO,GAEjB,IAAIL,EAAY,EAChB,OAAI5B,EAAevc,EAAEsd,MAlLD,GAmLX,EAAC,GAAO,IAEbtd,EAAEsO,MAAQ6O,EACZgB,GAAa,EACJne,EAAEsO,MAAQkO,EAAcW,IACjCgB,EAAY,GAIP,CAD6B,IAAdA,EADDD,EAAYC,IAEG,EAGhClH,EAAiBjX,IACrB,MAAM,MAAEub,GAAUU,EAAanf,QAC/B,GAAc,IAAVye,EACJ,OAAQvb,EAAE5P,KACR,IAAK,OACL,IAAK,YACH8tB,GAAa,GACb,MAEF,IAAK,QACL,IAAK,aACHA,EAAY,GAEhB,EAGIO,EAA4BA,EAC9BpD,IAAGC,IAAGC,SACRmD,EAAY,KAEZ,MAAMC,EAAqBlD,EAAsB3e,QACjD,IAAK6hB,EAAoB,MAAO,CAAC,CAAEtD,IAAGC,IAAGC,UAAS,GAAM,GAExD,IAAIqD,GAAY,EACZC,GAAY,EAEhB,MAAMC,GAAWtC,EAAcA,EAAcjB,GAAS,EAChDwD,GAAWxC,EAAeA,EAAehB,GAAS,EAIlDyD,EAAahwB,KAAKZ,KAAKuwB,EAAmB7Q,KAAOyN,EAAOuD,GACxDG,EAAazC,EAAcmC,EAAmB5J,MAAQwG,EAC5DqD,GAAYM,EAAAA,GAAAA,IAAU7D,EAAG4D,EAAYD,GACrC3D,GAAI3M,EAAAA,GAAAA,IAAM2M,EAAG4D,EAAYD,GAEzB,MAAMG,EAAanwB,KAAKZ,KAAKuwB,EAAmB1J,IAAMsG,EAAQmD,EAAWK,GACnEK,EAAa7C,EAAeoC,EAAmBzJ,OAASqG,EAI9D,OAHAsD,GAAYK,EAAAA,GAAAA,IAAU5D,EAAG8D,EAAYD,GAG9B,CAAC,CAAE9D,IAAGC,EAFbA,GAAI5M,EAAAA,GAAAA,IAAM4M,EAAG8D,EAAYD,GAET5D,SAASqD,EAAWC,EAAU,EAG1C1P,EAAanP,IAGjB,GAAI0b,EAAc5e,QAEhB,YADA4e,EAAc5e,SAAU,GAGX,YAAXkD,EAAElP,MACJgrB,GAAe,GAEjB,MAAMyB,EAAYtB,EAAanf,SACzB,EAAEwe,EAAC,MAAEC,GAAUgC,EACrB,IAAIlC,EAAIkC,EAAUlC,EAClB,MAAMgE,EAAOrwB,KAAKswB,IAAIjE,GAChBkE,EAAOvwB,KAAKswB,IAAIhE,GAMtB,GAJA0B,IACAC,GAAqB,GAGjB1B,EAAQ,EAaV,OAZAkC,EAAgB,CAAEpC,EAAG,EAAGC,EAAG,EAAGC,MAAO,QACrCpQ,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9B/c,KAAM,CAAC0qB,EAAGC,EAAGC,GACb5N,GAAI,CAAC,EAAG,EAAG,GACXtC,SAAUkP,GACV+D,OAAQnE,GACRvM,SAAW9N,GAAUkc,EAAa,CAChCX,EAAGvb,EAAM,GACTwb,EAAGxb,EAAM,GACTyb,MAAOzb,EAAM,QAKnB,GAAIyb,EAAQ,EAAG,CAEb,MAAMiE,EAAKxwB,KAAKC,IAAIssB,EA9QX,GA+QHkE,EAAcD,EAAKjE,EAIzB,IAAImE,EAAKrE,EAAIoE,GAAe9B,EAAetC,EAAIoE,EAAc9B,EAAetC,GACxEsE,EAAKrE,EAAImE,GAAe9B,EAAerC,EAAImE,EAAc9B,EAAerC,GAG5E,MAAMsE,EAAI,IAGV,GAAe,UAAX5f,EAAElP,MAAoB2sB,EAAclC,QAAUA,EAAO,CAEvD,MAAMsE,EAAK7wB,KAAKswB,IAAI5B,EAAerC,IAAMyC,KAAKC,MAAQF,GAChDiC,EAAK9wB,KAAKswB,IAAI5B,EAAepC,IAAMwC,KAAKC,MAAQF,GAGtD6B,GAAM1wB,KAAKswB,IAAI5B,EAAerC,GAAKwE,EAAKD,EAAIhC,EAASvC,EACrDsE,GAAM3wB,KAAKswB,IAAI5B,EAAepC,GAAKwE,EAAKF,EAAIhC,EAAStC,CACvD,CAcA,OAZCmC,GAAiBgB,EAA0B,CAAEpD,EAAGqE,EAAIpE,EAAGqE,EAAIpE,MAAOiE,GArSrD,SAsSdrU,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9B/c,KAAM,CAAC0qB,EAAGC,EAAGC,GACb5N,GAAI,CAAC8P,EAAcpC,EAAGoC,EAAcnC,EAAGmC,EAAclC,OACrDlQ,SAAUkP,GACV+D,OAAQnE,GACRvM,SAAW9N,GAAUkc,EAAa,CAChCX,EAAGvb,EAAM,GACTwb,EAAGxb,EAAM,GACTyb,MAAOzb,EAAM,OAInB,CAMA,GALA2d,EAAgB,CACdpC,IACAC,IACAC,SAEEgE,GAhUgB,GAkUlB,YADAtrB,IAIF,GAAIsrB,EAAO,EAYT,YAXApU,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9B/c,KAAM2qB,EACN3N,GAAI,EACJtC,SAAUkP,GACV+D,OAAQnE,GACRvM,SAAW9N,GAAUkc,EAAa,CAChCX,EAAG,EACHC,EAAGxb,EACHyb,aAMN,MAAM4C,EAAY9C,EAAI,EAAI,GAAK,EACzB+C,EAAchC,EAActf,QAC5BuhB,EAAWD,GAAetD,EAAYsD,EAAa/C,EAAI,EAAI,GAAK,GAKhE0E,EAAOnC,EAASvC,EAAI,GAAK,EAAI,OAClBptB,IAAbowB,GAA0BgB,GA7VV,IA6VuClB,IAAc4B,IAIvE1E,IAHgBmB,EAAclC,IAAc6D,EAI5ChC,EAAckC,GACdvB,EAAoBuB,IAGtBlT,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9B/c,KAAM0qB,EACN1N,GAAI,EACJtC,SAAUkP,GACV+D,OAAQnE,GACRvM,SAAW9N,GAAUkc,EAAa,CAChCV,EAAG,EACHD,EAAGvb,EACHyb,MAAOA,GAAS,KAElB,EAGExM,GAAUC,EAAAA,GAAAA,IAAcgM,EAAale,QAAS,CAClDkjB,cAAc,EACdC,gBAAgB,EAChBC,wBAAyB,0DACzBC,QA5WW,EA6WXC,QA9WW,EA+WXC,cAlXkB,EAmXlBC,eAAe,EACfrR,UAAYjP,IACV,GAAIugB,GAAqBvgB,GAAI,OAC7B,MAAM,EAAEqb,EAAC,EAAEC,EAAC,MAAEC,GAAUU,EAAanf,QACrC,GAAe,cAAXkD,EAAElP,OACJgrB,GAAe,GACD,IAAVP,IAMN,GADAsC,EAAkBC,KAAKC,MACb,IAAN1C,GAAiB,IAANC,GAAqB,IAAVC,EAAa,CACrC,IAAKN,EAAene,QAAS,OAE7B,GADA2I,EAAUwV,EAAene,QAAQlF,cAAc,eAC1C6N,EAAS,OAEdgW,EAAsB3e,QAAU2I,EAAQ0I,uBAC1C,OAXInO,EAAEkX,gBAWN,EAEF9H,OAAQA,CAACoR,EAAOC,GACdC,cACAC,eACCC,KACD,GAAIlF,EAAc5e,SAAWyjB,GAAqBC,GAAQ,OAE1D,GAAIzX,EAAAA,IAAgC,eAAtB0X,EAAa3vB,KAAuB,CAChD,MAAM,MAAEwd,GAAWmS,EAAgCjS,QAAQ,GAC3D,GAAIF,GAASuS,GAAAA,IAA6BvS,GAASkO,EAAcqE,GAAAA,GAC/D,MAEJ,CACI1V,KACFA,KACAA,QAAkBld,GAEpB2vB,EAASvC,EAAIqC,EAAerC,EAAIqF,EAChC9C,EAAStC,EAAIoC,EAAepC,EAAIqF,EAChCjD,EAAerC,EAAIqF,EACnBhD,EAAepC,EAAIqF,EACnB,MAAMG,EAAa9xB,KAAKswB,IAAIoB,GACtBK,EAAa/xB,KAAKswB,IAAIqB,IACtB,EAAEtF,EAAC,EAAEC,EAAC,MAAEC,GAAUU,EAAanf,QAOrC,GAHAkhB,IAGc,IAAVzC,GAkBJ,GAAmB,cAAfiF,EAAM1vB,KAAV,CACA,GAAI0qB,EAAkB1e,UAAY2d,GAAeuG,WAG3CxF,EAAkB1e,UAAY2d,GAAewG,YAC5CjyB,KAAKswB,IAAIjE,GAAK6F,GAAAA,IAA6BJ,EAAaC,EAAaI,GAAAA,IAA2B,CACnG3F,EAAkB1e,QAAU2d,GAAewG,WAC3CpN,GAAY,GACZ,MAAMuN,EAAQ5E,EAAclC,GACtBoF,GAAKhR,EAAAA,GAAAA,IAAMgS,GAAcU,EAAOA,GAatC,OAZApF,EAAa,CACXX,EAAGqE,EACHpE,EAAG,EACHC,eAKiB,UAAfiF,EAAM1vB,MAAoB9B,KAAKswB,IAAII,GAAM2B,MAC3ClS,EAAUqR,GACV9E,EAAc5e,SAAU,GAG5B,CAGF,GAAI0e,EAAkB1e,UAAY2d,GAAeuG,UAC5ChyB,KAAKswB,IAAIhE,GAAK4F,GAAAA,IAA6BH,EAAaD,EAAaK,GAAAA,GAA2B,CACnG3F,EAAkB1e,QAAU2d,GAAeuG,SAC3C,MAAMI,EAAQ7E,EACRoD,GAAKjR,EAAAA,GAAAA,IAAMiS,GAAcS,EAAOA,GACtCpF,EAAa,CACXX,EAAG,EACHC,EAAGqE,EACHpE,UAEiB,UAAfiF,EAAM1vB,MAAoB9B,KAAKswB,IAAIK,GAAM2B,MAC3CnS,EAAUqR,GACV9E,EAAc5e,SAAU,EAE5B,CAxCsC,MAlBtC,CACE,MAAM4iB,EAAKjC,EAAcpC,EAAIqF,EACvBf,EAAKlC,EAAcnC,EAAIqF,EAC7B,GAAI,CAAC,QAAS,aAAaY,SAASf,EAAM1vB,MAAO,CAC/C,MAAOysB,EAAWqB,EAAWC,GAAaJ,EAA0B,CAAEpD,EAAGqE,EAAIpE,EAAGqE,EAAIpE,SAta1E,IAyaV,OAFIqF,GAAYA,GAAYhC,GAAYC,QACxC7C,EAAauB,EAEf,CACI,YAAaiD,GAAkC,IAAzBA,EAAMhS,QAAQrf,QACtC6sB,EAAa,CACXX,EAAGqE,EACHpE,EAAGqE,EACHpE,SAIN,CAyCA,EAEFiG,OAAQA,CAACxhB,GACPyhB,OACAC,aACAC,iBACAC,iBACAlB,cACAC,cACAkB,iBACAC,qBAEI3W,IAAiBA,KACrBwW,EAAiBA,GAAkBnF,EAAc,EACjDoF,EAAiBA,GAAkBrF,EAAe,EAClDsF,EAAiBA,GAAkBrF,EAAc,EACjDsF,EAAiBA,GAAkBvF,EAAe,EAGlD,MAAMhB,EAAQkG,IAAQ/S,EAAAA,GAAAA,IAAM+O,EAAclC,MAAQmG,EAAaK,GAAgBC,IACzEvC,EAAclE,EAAQkC,EAAclC,MACpC0G,EAAUjzB,KAAKswB,IAAItwB,KAAKC,IAAIwuB,EAAcpC,EAAG,IAC7C6G,EAAUlzB,KAAKswB,IAAItwB,KAAKC,IAAIwuB,EAAcnC,EAAG,IAGnDqC,EAAetC,EAAIwG,EACnBlE,EAAerC,EAAIwG,EAGnB,MAAMK,EAAgBF,EAAUN,EAC1BS,EAAgBF,EAAUN,EAG1BS,EAAgBF,EAAgB1C,EAAc0C,EAC9CG,EAAgBF,EAAgB3C,EAAc2C,GAE7C7E,GAAakB,EAA0B,CAC5CpD,EAAGoC,EAAcpC,EAAIgH,EAAe3B,EACpCpF,EAAGmC,EAAcnC,EAAIgH,EAAe3B,EACpCpF,UAGFS,EAAauB,EAAU,EAEzBnwB,OAAAA,CAAQ4S,GACN8b,GAAe,GACf,MAAOyG,EAAeC,GAAgBjE,EAAmBve,GACzD,GAAIuiB,EAAJ,CAGE,GAFAviB,EAAEkX,iBACFlX,EAAEwI,kBACEV,EAAAA,GAAc,OACb0a,GAAcvuB,GAErB,MAC4B,IAAxBwpB,EAAclC,OAAezT,EAAAA,KAC7BoV,GAAuBuF,GAAsBziB,EAAEC,OAAuB,iBACxEhM,GAEJ,EACAwjB,aAAAA,CAAczX,GAAG,QACf8e,EAAO,QACPC,IAEA,MAAOwD,GAAiBhE,EAAmBve,GAC3C,GAAIuiB,EAGF,OAFAviB,EAAEkX,sBACFlX,EAAEwI,kBAGJ,IAAKV,EAAAA,IAA2B,UAAX9H,EAAElP,KAAkB,OACzC,MAAM,EAAEuqB,EAAC,EAAEC,EAAC,MAAEC,GAAUU,EAAanf,QAIrC,GAAc,IAAVye,EAAa,CACf,GAAU,IAANF,GAAiB,IAANC,EAAS,OACxBmC,EAAgBgB,EAA0B,CACxCpD,EALkByD,EAtiBN,EAsiBkCA,EAM9CxD,EALkByD,EAviBN,EAuiBkCA,EAM9CxD,MA7iBY,IA8iBX,EACL,MACEkC,EAAgB,CACdpC,EAAG,EACHC,EAAG,EACHC,MAAO,GAGXpQ,IAAkBuC,EAAAA,EAAAA,IAAc,CAC9B/c,KAAM,CAAC0qB,EAAGC,EAAGC,GACb5N,GAAI,CAAC8P,EAAcpC,EAAGoC,EAAcnC,EAAGmC,EAAclC,OACrDlQ,SAAUkP,GACV+D,OAAQnE,GACRvM,SAAW9N,IACT,MAAMyd,EAAY,CAChBlC,EAAGvb,EAAM,GACTwb,EAAGxb,EAAM,GACTyb,MAAOzb,EAAM,IAEfkc,EAAauB,EAAU,GAG7B,EACApO,cAGF,OADA3Z,SAAS6S,iBAAiB,UAAW4O,GAAe,GAC7C,KACLlI,IACAvZ,SAAS8S,oBAAoB,UAAW2O,GAAe,EAAM,CAC9D,GAEH,CACEmF,EACAY,EACAG,EACArC,EACA/K,EACAnI,EACA3T,EACA6oB,EACAX,EACAc,EACAjB,EACAkB,EACAjB,EACAM,EACAC,EACA9D,KAGF7qB,EAAAA,EAAAA,KAAU,KACR,MAAM6W,EAAahE,IACbgiB,OAA+Cz0B,IAA9B0tB,EAAkB7e,SACpC6e,EAAkB7e,UAAY4H,EACnC,IAAKsW,EAAale,UAAY4lB,GAAkB9a,GAAYmI,EAAc,OAC1E4L,EAAkB7e,QAAU4H,EAC5B,MAAM,MAAE6W,GAAUU,EAAanf,QACzBtM,EAAMkU,EAAa,GAAK,EAAI,EAGlC,IAAIie,EAAQ,IACRC,EAAY,EACZrH,GAJYwG,IAIQvxB,EAAM,GAC1B+qB,GAJYyG,IAIQxxB,EAAM,IAChB,IAAV+qB,GAAe/qB,EAAM,IAAGmyB,EAAQ,IAChCnI,IAAqBA,KACzBA,IAAsB9M,EAAAA,EAAAA,IAAc,CAClC/c,KAAMH,EACNmd,GAAInd,EAAMmyB,EACVtX,SAAUkP,GACV+D,OAAQlE,GACRxM,SAAW9N,IACT,IAAKkb,EAAale,QAAS,OAC3B,MAAM+lB,GAAQ5d,EAAAA,GAAAA,IAAMnF,EAAQ8iB,EAAW,GACvCA,EAAY9iB,EAEZ,MAAMgjB,EAAa,IAAIC,WAAW,QAAS,CACzCC,OAAQH,EACRI,SAAS,IAEXjI,EAAale,QAAQomB,cAAcJ,EAAW,IAEhD,GACD,CAACpiB,EAAekH,EAAUmI,EAAckM,IAE3C,MAAOkH,GAAU9E,KAAYrwB,EAAAA,EAAAA,KAAQ,SAChBC,IAAfquB,EAAiC,MAACruB,OAAWA,GAC1C,CAAC6sB,EAAYwB,GAAa,GAAIxB,EAAYwB,EAAY,KAC5D,CAACA,EAAYxB,IAEhB,QAAmB7sB,IAAfquB,EAA0B,OAE9B,MAAM8G,QAAuBn1B,IAAbk1B,GACVE,QAAuBp1B,IAAbowB,GACV1F,GAAWkD,GAAeQ,EAEhC,OACEjtB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,oBAAoByZ,IAAKwU,GACtC5rB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBAAmByZ,IAAK0U,GACpCkI,KAAY/G,IAAaI,GACxBrtB,EAAAA,GAAAC,cAACopB,GAAkB,CACjBC,cAAeA,EACfC,SAAUA,GACVpX,KAAM4hB,GACNlvB,QAASA,EACT2kB,cAAeA,EACfrR,qBAAsBA,KAI5BnY,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACT,mBACA,2BACAqpB,IAAY,4BAEdvrB,QAASgwB,GACT5W,IAAKyU,GAEL7rB,EAAAA,GAAAC,cAACopB,GAAkB,CACjBlX,KAAM+a,EACN5D,cAAeA,EACf5rB,SAAUA,EACV6rB,SAAUA,GACV1kB,QAASA,EACT2kB,cAAeA,EACfrR,qBAAsBA,KAG1BnY,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBAAmByZ,IAAK2U,GACpCkI,KAAYhH,IAAaI,GACxBrtB,EAAAA,GAAAC,cAACopB,GAAkB,CACjBC,cAAeA,EACfC,SAAUA,GACVpX,KAAM8c,GACNpqB,QAASA,EACT2kB,cAAeA,EACfrR,qBAAsBA,KAI3B6b,KAAY/G,IAAavU,EAAAA,IACxB1Y,EAAAA,GAAAC,cAAA,UACEyB,KAAK,SACL/D,UAAY,mBAAkB+N,IAAYtE,GAAS,WACnD,aAAYjJ,EAAK,oBACjBiD,IAAKjD,EAAKkD,MAAQ,WAAQxC,IAG7Bo1B,KAAYhH,IAAavU,EAAAA,IACxB1Y,EAAAA,GAAAC,cAAA,UACEyB,KAAK,SACL/D,UAAY,mBAAkB+N,IAAYtE,GAAS,WACnD,aAAYjJ,EAAK,QACjBiD,IAAKjD,EAAKkD,MAAQ,WAAQxC,IAG1B,IAMV,SAASuvB,GAAkBnC,EAAI,EAAGC,EAAI,EAAGC,EAAQ,GAC/C,MAAQ,eAAcF,EAAEiI,QAAQ,SAAShI,EAAEgI,QAAQ,oBAAoB/H,EAAM+H,QAAQ,KACvF,CAEA,SAASb,GAAsBc,EAAsBC,GACnD,QAAKD,MACDA,EAAQE,QAAQD,IACbplB,QAAQmlB,EAAQ/E,QAAQgF,IACjC,CAEA,SAASjD,GAAqBvgB,GAC5B,MAAMC,EAASD,EAAEC,OACjB,QAAIwiB,GAAsBxiB,EAAQ,0BAC5BwiB,GACFxiB,EACA,gGAIFD,EAAEkX,kBAFO,EAMb,C,uCC5wBA,MA8FA,IAAe7V,EAAAA,EAAAA,KACb,CAACC,GAAUC,WACT,MAAMzL,EAAyB,YAAfyL,GAAMzQ,KAAqByQ,EAAKzL,aAAU7H,EACpDy1B,EAAgB5tB,IAAW6tB,EAAAA,EAAAA,KAAariB,EAAQxL,GAItD,MAAO,CACL8tB,MAH2B,WAAfriB,GAAMzQ,KAAoByQ,EAAKK,YAAc8hB,EAI1D,GATL,EA3F8CG,EAC5CD,QACAriB,WAEA,MAAM,iBACJuiB,EAAgB,aAChBC,EAAY,eACZC,IACE7kB,EAAAA,EAAAA,OAEE,SAAE7M,IAAaC,EAAAA,EAAAA,MAEf0xB,GAAqBvkB,EAAAA,EAAAA,IAAgB,KAGzC,GAFAokB,IAEmB,YAAfviB,GAAMzQ,KAAoB,OAE9B,MAAMgF,EAAUyL,EAAKzL,QAEjBxD,EACF4L,YAAW,KACT8lB,EAAe,CAAEE,OAAO,GAAS,CAAEC,gBAAgB,IACnDJ,EAAa,CAAEpkB,OAAQ7J,EAAQ6J,OAAQiL,UAAW9U,EAAQhD,IAAK,GAxB5C,KA2BrBixB,EAAa,CAAEpkB,OAAQ7J,EAAQ6J,OAAQiL,UAAW9U,EAAQhD,IAC5D,IAGIvF,GAAOD,EAAAA,EAAAA,KAEPmH,GAAWzG,EAAAA,EAAAA,KAAQ,KACvB,IAAKuT,GAAsB,eAAdA,EAAKzQ,KAAuB,OAEzC,MAAM8Q,EAA4B,WAAdL,EAAKzQ,KAAoByQ,EAAKK,iBAAc3T,EAC1DoH,EAA8B,WAAdkM,EAAKzQ,KAAoByQ,EAAKlM,mBAAgBpH,EAC9DmH,EAASC,GAAeC,OAAOiM,EAAKrM,YACpCkvB,EAAmBhvB,GAAQtC,KAAOuC,GAAegvB,eAAevxB,GAChEwxB,EAAmBlvB,GAAQtC,KAAOuC,GAAekvB,eAAezxB,GAChE0xB,EAAqB,YAAdjjB,EAAKzQ,KAAqByQ,EAAKzL,QAAQ0uB,KAAOpvB,GAAQovB,KACnE,IAAKA,EAAM,OAEX,MAAMC,GAAgBC,EAAAA,GAAAA,IAAoBn3B,EAAa,IAAPi3B,GAAa,GACvDG,EAAQtvB,GAAesvB,OACvBtvB,EAAcsvB,OAAStvB,GAAegvB,cAAgB,EAAI,GAC1DO,EAAerjB,EAAKrM,WAAc,GAAKG,GAAekvB,eAAiB,EAAI,GAC3EM,EAAYF,GAASp3B,EAAK,KAAM,CAACq3B,EAAcD,IAE/CG,EAAkB,GACxB,GAAI1vB,EAAQ,CACV,MAAM0M,GAAQV,EAAAA,EAAAA,IAASQ,EAAa9O,SAA+B7E,EAAzB2T,EACpCmjB,EAAYjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,GAClCmjB,EAAUnjB,IAAQojB,EAAAA,EAAAA,IAAYpjB,GACpCgjB,EAAMh2B,KAAKvB,EACT+2B,EAAmB,qCACfF,EAAmB,qCACjBW,EAAY,8BACVE,EAAU,4BAA8B,+BAEpD,CAQA,OANIJ,GAAcP,GAAqBF,GACrCU,EAAMh2B,KAAK+1B,GAGbC,EAAMh2B,KAAK21B,GAEJK,EAAM1M,KAAM,MAAa,GAC/B,CAAC7W,EAAMhU,IAEV,IAAKq2B,EACH,OAGF,MAAMuB,GAAcC,EAAAA,GAAAA,IAAa73B,EAAMq2B,GAEvC,OACEx0B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,aAAaK,QAAS62B,GACnC70B,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACj1B,IAAKwzB,EAAM9wB,GAAI/B,KAAK,SAASu0B,KAAM1B,IAC3Cx0B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,QACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,QAAQyD,IAAI,QACxB20B,IAAe/zB,EAAAA,GAAAA,GAAW+zB,IAE7B/1B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,OAAOyD,IAAI,QACvBiE,IAGD,ICjCJ8lB,GAAqB,IA0Y3B,IAAe3tB,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,YAAEK,EAAW,4BAAE4jB,IAAgC7jB,EAAAA,EAAAA,KAAeJ,IAC9D,OACJ3B,EAAM,SACNuC,EAAQ,UACR0I,EAAS,OACTjU,EAAM,SACNiR,EAAQ,mBACR4d,EAAkB,gBAClBC,EAAe,WACfvwB,EAAU,aACV2P,EAAY,mBACZ2N,GACE7Q,EACE+W,GAAgBgN,EAAAA,EAAAA,KAA+BpkB,EAAQ,0BAEvD,cAAEqkB,EAAa,SAAE/K,GAAatZ,EAC9BskB,EAAiBxnB,QAAQuB,KAAWkmB,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,GAEvE,GAAIkF,EAAc,CAChB,MAAMygB,GAAOQ,EAAAA,EAAAA,KAAWxkB,EAAQ3B,GAChC,IAAI6B,GAAiB,EACjB8jB,IACF9jB,GAAiBJ,EAAAA,EAAAA,IAASkkB,EAAKxyB,IAAMwyB,EAAKxyB,KAAO6yB,GAAgBI,EAAAA,EAAAA,IAAYT,IAG/E,MAAMjwB,GAAgB2wB,EAAAA,EAAAA,KAAiB1kB,EAAQ3B,GAE/C,MAAO,CACLtK,gBACAD,OAAQC,GAAeC,OAAOJ,GAC9B0M,YAAa0jB,EACb3K,mBAAoBtlB,GAAe4wB,UACnCL,iBACApkB,iBACAkX,gBACA/hB,SACA4uB,8BACA3d,WACA6d,kBACAvwB,aACA0lB,WAEJ,CAEA,IAAI9kB,EASAuiB,EAOA6N,EAfAvmB,GAAUiL,IAEV9U,EADEa,GAAU,CAACa,EAAAA,GAAkBU,eAAgBV,EAAAA,GAAkBqB,iBAAiB0oB,SAAS5qB,IACjFwvB,EAAAA,EAAAA,KAAuB7kB,EAAQ3B,EAAQiL,IAEvCwb,EAAAA,EAAAA,KAAkB9kB,EAAQ3B,EAAQiL,IAK5C4H,GAAsB7S,GACpBhJ,IAAWa,EAAAA,GAAkBmB,mBAC/B0f,GAAmBgO,EAAAA,EAAAA,KAAuB/kB,EAAQ3B,IAMlDA,IAEAumB,EADEvvB,GAAU,CAACa,EAAAA,GAAkBU,eAAgBV,EAAAA,GAAkBqB,iBAAiB0oB,SAAS5qB,IAC5E2vB,EAAAA,EAAAA,KAA4BhlB,EAAQ3B,IAEpC4mB,EAAAA,EAAAA,KAAmBjlB,EAAQ3B,IAI9C,IAAIgb,GAAqB,EACzB,MAAM6L,EAAiB7vB,IAAWa,EAAAA,GAAkBsB,OAC9C2tB,EAAgB9vB,IAAWa,EAAAA,GAAkBS,MACnD,IAAIyuB,EAEJ,GAAI/mB,GAAUuC,GAAY0I,EACxB,GAAI4a,IAAuBgB,GAAkBC,GAAgB,CAC3D,MAAME,GAAgBC,EAAAA,EAAAA,KAA6BtlB,GACnDqZ,EAAqBvc,QAAQuoB,GAAeV,WAC5C,MAAM,SAAEY,GAAcF,GAAeG,gBAAmB,CAAC,EACzDJ,EAAsBG,CACxB,MAAO,GAAIlwB,IAAWa,EAAAA,GAAkBa,YAAa,CACnD,MAAMsuB,GAAgBI,EAAAA,EAAAA,KAA+BzlB,IAC/C,SAAEulB,GAAcF,GAAiBA,EAAcK,eAAiBL,EAAcK,cAAc/xB,OAAU,CAAC,EAC7GyxB,EAAsBG,CACxB,MAAWL,GAAkBC,KAE3BC,GADqBO,EAAAA,EAAAA,KAA8B3lB,EAAQ3B,EAAQuC,EAAU0I,KACvCsc,EAAAA,EAAAA,KAAgB5lB,EAAQ3B,EAAQuC,IAI1E,MAAO,CACLvC,SACAuC,WACA0I,YACAgb,iBACAjvB,SACAb,UACAowB,eACA7N,mBACAqO,sBACAhO,gBACA9Q,WACA2d,8BACAC,qBACAC,kBACAvwB,aACAylB,qBACAC,WACD,GA/GevZ,EAvYA8lB,EAClBxnB,SACAuC,WACA0I,YACA9U,UACA4wB,sBACAd,iBACApkB,iBACA7K,SACAvB,SACAwM,cACAvM,gBACA6wB,eACA7N,mBACAoN,kBACAvwB,aACAwjB,gBACA9Q,WACA2d,8BACAC,qBACA7K,qBACAC,gBAEA,MAAM,gBACJ7W,GAAe,iBACf+f,GAAgB,gBAChBsD,GAAe,aACfrD,GAAY,eACZC,GAAc,wBACdqD,GAAuB,sBACvBC,GAAqB,eACrBC,GAAc,QACdC,KACEroB,EAAAA,EAAAA,MAEE1L,GAAS2K,QAAQwD,GAAe9L,GAAW2vB,GAAmBpN,IAC9D,SAAE/lB,KAAaC,EAAAA,EAAAA,MAGfk1B,IAAe9qB,EAAAA,EAAAA,MACf+qB,GAAW5xB,GAAS4xB,UAAY9lB,GAAa9O,IAAMgD,GAAS6J,OAC5DgoB,IAAeC,EAAAA,EAAAA,GAA0CF,IACzDG,GAAkBnP,EAAgB,YAAc,OAChDoP,GAAmB1pB,QAAQsa,IAAkB6M,IAG5CwC,GAAyBC,GAAuBC,KAA0Br6B,EAAAA,EAAAA,KAE3Es6B,GvB9GD,UAA4B,QACjCpyB,EAAO,YAAE8L,EAAW,cAAEvM,EAAa,gBAAEowB,EAAe,WAAEvwB,EAAU,iBAAEmjB,IASlE,OAAIzW,GAAevM,EACV,CACLvE,KAAM,SACN8Q,cACAvM,gBACAH,WAAYA,GAIZuwB,EACK,CACL30B,KAAM,aACNmE,MAAOwwB,EACPvwB,WAAYA,GAIZY,EACK,CACLhF,KAAM,UACNgF,UACAZ,cAIAmjB,EACK,CACLvnB,KAAM,mBACNgF,QAASuiB,EACTnjB,mBAJJ,CASF,CuBkEsBizB,CAAmB,CACrCryB,UAAS8L,cAAa6jB,kBAAiBpwB,gBAAeH,aAAYmjB,sBAE9D,MAAEpjB,GAAK,SAAEE,IAAaJ,EAAiBmzB,KAAgB,CAAC,GAExD,QACJptB,GAAO,QACPI,GAAO,cACPqB,GAAa,SACbgC,GAAQ,WACRI,GAAU,MACVnI,GAAK,kBACL2E,IACEV,EAAc,CAChBxF,SAAOyF,SAAU0D,QAAQwD,GAAcjL,SAAQgE,MAAOmtB,IAAoBvN,KAGtErX,GAAkB,MACtB,GAAI0iB,EAAgB,OAAO,EAC3B,GAA0B,WAAtBsC,IAAap3B,OAAsB8Q,EAAa,OAAO,EAC3D,MAAMwmB,EAAOF,GAAY7yB,cACzB,OAAIJ,KAAUmzB,EAAK7D,aAEpB,EANuB,GAOlBvT,IAAapJ,GAAYnU,GAEzB40B,IAAkBr6B,EAAAA,EAAAA,KAAQ,IACvBw3B,EACHkB,GACA4B,EAAAA,EAAAA,IAAuBpC,GAAgB,CAAC,EAAGQ,GAAuB,GAAIvrB,KACzE,CAAC+qB,EAAcQ,EAAqBvrB,GAAmBqqB,KAEtD/xB,IAAYk0B,IAAgBA,KAAiBD,SAAqCz5B,IAAzBw5B,GAAa3qB,UACxE2qB,GAAa3qB,QAAU3H,GAAW,EAAKyV,GAAa1V,GAGtD,MAAOqzB,IrB/JAhvB,GqBiKP1L,EAAAA,EAAAA,KAAU,KACR,IAAK4F,IAAU80B,KACb,QAGFC,EAAAA,EAAAA,MACA,MAAMC,GAAuBC,EAAAA,EAAAA,MAE7B,MAAO,KACLD,KACAE,EAAAA,EAAAA,KAAuB,CACxB,GACA,CAACl1B,GAAQ80B,MAEZ16B,EAAAA,EAAAA,KAAU,KACJmjB,IACFlX,GACF,GACC,CAACkX,MAEJnjB,EAAAA,EAAAA,KAAU,KACJyE,KACFiY,EAAAA,EAAAA,KAAgB,KACd/U,SAAS0b,KAAKra,UAAU+xB,OAAO,uBAAwBn1B,GAAO,GAElE,GACC,CAACnB,GAAUmB,KAGd,MAAMo1B,IAAYlsB,EAAAA,EAAAA,IAAuB,OACzCmsB,EAAAA,EAAAA,GAAgBD,IAEhB,MAAMnrB,IAAcC,EAAAA,EAAAA,MACpB9P,EAAAA,EAAAA,KAAU,KACR,MAAMk7B,EAAM9qB,OAAO+qB,WAAWC,EAAAA,IAG9B,OAFAF,EAAI1gB,iBAAiB,SAAU3K,IAExB,KACLqrB,EAAIzgB,oBAAoB,SAAU5K,GAAY,CAC/C,GACA,CAACA,KAEJ,MAAMwrB,IAActB,EAAAA,EAAAA,GAA8C9xB,GAC5DqzB,IAAevB,EAAAA,EAAAA,GAA2ChgB,GAC1DwhB,IAAaxB,EAAAA,EAAAA,GAAsBjxB,GACnCwsB,IAAWyE,EAAAA,EAAAA,GAAsBM,IACjCmB,IAAoBzB,EAAAA,EAAAA,GAAsBrrB,IAC1Ckd,GAAY3jB,GAAU4jB,EAAAA,EAAAA,GAAkB,CAAE5jB,UAAS6jB,eAAe,EAAMC,kBAAkB,SAAU3rB,EACpG4rB,GAAYzb,QAAQqb,IACpB6P,GAAuBH,IAAgBhG,KAAa+E,IAE1Dr6B,EAAAA,EAAAA,KAAU,KACJi6B,IAAoBr0B,KAAW61B,KAAyBnG,OAC1DoG,EAAAA,EAAAA,IAAoBhP,GAAqBiP,EAAAA,KtBnNxC,SACL3P,EACAljB,EACA4F,EACAoC,EACA7D,EACAhF,EACAZ,GAEA,MAAQgE,QAASuwB,GAAc3xB,EAASnB,EAAQb,EAASZ,GACzD,IAAKu0B,EACH,OAGF,MAAQ1sB,MAAOyf,GAAgBkN,EAAAA,EAAWlsB,OAExCT,MAAO4sB,EAAgBvsB,OAAQwsB,IAC7BC,EAAAA,EAAAA,IAAkChQ,EAAW/e,IACzCiC,MAAO+sB,EAAS1sB,OAAQ2sB,IAAaC,EAAAA,EAAAA,IAC3CL,EAAgBC,EAAiBjrB,EAAW5B,MAAO4B,EAAWvB,QAE1D6sB,GAAUzN,EAAcsN,GAAW,EACnCI,EA6OR,SAAsBrQ,GACpB,MAAMkP,EAAM9qB,OAAO+qB,WAAWC,EAAAA,IAC9B,IAAIkB,EAAe,MAKnB,OAJItQ,IAAc/R,EAAAA,KAChBqiB,GAAgBpB,EAAItF,QAAU,KAAQ,OAGjC0G,EAAejiB,EAAAA,CACxB,CArPgBkiB,CAAavQ,IAAc+P,EAAkBG,GAAY,EAEvE,IACE9U,IAAKoV,EAASvc,KAAMwc,EAAUvtB,MAAOwtB,EAAWntB,OAAQotB,GACtDf,EAAUtb,wBAEd,GAAI,CACF3W,EAAAA,GAAkBa,YAClBb,EAAAA,GAAkBS,MAClBT,EAAAA,GAAkBU,eAClBV,EAAAA,GAAkBc,cAClBipB,SAAS5qB,GAAS,CAClB,MAAM8zB,EAkMV,SAAiBC,EAAmBC,EAAoB1V,EAAanH,EAAc/Q,EAAeK,GAChG,GAAIstB,IAAcC,EAAY,CAC5B,MAAM55B,EAAO/B,KAAKZ,IAAI2O,EAAOK,IAAWstB,EAAYC,GACpD7c,IAAS/c,EAAOgM,GAAS,EACzBkY,IAAQlkB,EAAOqM,GAAU,EACzBL,EAAQhM,EACRqM,EAASrM,CACX,MAAO,GAAI25B,EAAYC,EAAY,CACjC,MAAMC,EAAW7tB,EAEjB+Q,KADA/Q,EAAQK,GAAUstB,EAAYC,IACbC,GAAY,CAC/B,MAAO,GAAID,EAAaD,EAAW,CACjC,MAAMG,EAAYztB,EAElB6X,KADA7X,EAASL,GAAS4tB,EAAaD,IACdG,GAAa,CAChC,CAEA,MAAO,CACL5V,MAAKnH,OAAM/Q,QAAOK,SAEtB,CAtNsB0tB,CAAQhB,EAASC,EAAUM,EAASC,EAAUC,EAAWC,GAC3EH,EAAUI,EAAUxV,IACpBqV,EAAWG,EAAU3c,KACrByc,EAAYE,EAAU1tB,MACtBytB,EAAaC,EAAUrtB,MACzB,CAEA,MAAM2tB,EAAkBT,EAAWC,EAAY,GAAMN,EAASH,EAAU,GAClEkB,EAAkBX,EAAUG,EAAa,GAAMN,EAAQH,EAAW,GAClEkB,EAAaV,EAAYT,EACzBoB,EAAaV,EAAaT,GAEhCxf,EAAAA,EAAAA,KAAgB,KACd,MAAM3T,EAAQH,EAAY8F,GAAiBktB,IAC3C0B,EAAAA,EAAAA,IAAYv0B,EAAO,CACjBqe,IAAM,GAAEiV,MACRpc,KAAO,GAAEmc,MACTltB,MAAQ,GAAE+sB,MACV1sB,OAAS,GAAE2sB,MACXxM,UAAY,eAAcwN,QAAqBC,iBAA8BC,MAAeC,OAE9F/xB,EAAWvC,EAAOD,GAElBnB,SAAS0b,KAAK3Z,YAAYX,GAC1BpB,SAAS0b,KAAKra,UAAUC,IAAI,oBAE5ByT,EAAAA,EAAAA,KAAgB,KACd3T,EAAMyC,MAAMkkB,UAAY,GAwT9B,SAAoB3mB,GACjBA,EAAMwC,WAA2BC,MAAMC,UAAY,UACpD1C,EAAMC,UAAUsa,OAAO,kBAAmB,SAC5C,CA1TMia,CAAWx0B,GAEXsH,YAAW,MACTqM,EAAAA,EAAAA,KAAgB,KACV/U,SAAS0b,KAAKma,SAASz0B,IACzBpB,SAAS0b,KAAKoa,YAAY10B,GAE5BpB,SAAS0b,KAAKra,UAAUsa,OAAO,kBAAkB,GACjD,GAxEiB,IAyEGqY,EAAAA,IAAoB,GAC5C,GAEN,CsB0IM+B,CAAe1R,GAAWljB,EAAS4F,GAAgBoC,GAAa7D,GAAShF,EAASZ,IAGhF4yB,KAAqBr0B,IAAU0vB,MACjCoG,EAAAA,EAAAA,IAAoBhP,GAAqBiP,EAAAA,KtB5IxC,SACL7yB,EAA2B4F,EAAuBzG,EAAsBZ,GAExE,MAAM,UAAE6D,EAAWG,QAASsyB,GAAY1zB,EAASnB,EAAQb,EAASZ,GAClE,IAAKs2B,EACH,OAGF,MAAM/B,EAAYj0B,SAASi2B,eAAe,eAAgB7zB,cACxD,kEAEF,IAAK6xB,EACH,OAGF,MACExU,IAAKoV,EAASvc,KAAMwc,EAAUvtB,MAAOwtB,EAAWntB,OAAQotB,GACtDf,EAAUtb,yBAEZ8G,IAAKyW,EAAW5d,KAAMmc,EAAQltB,MAAO+sB,EAAS1sB,OAAQ2sB,GACpDyB,EAAQrd,wBAEZ,IAAI+b,EAAQwB,EACZ,KAAKC,EAAAA,EAAAA,GAAoB5yB,GAAY,CACnC,MAAQqE,OAAQmf,GAAiBmN,EAAAA,EAAWlsB,MAC5C0sB,EAAQwB,EAAYrB,GAAWN,EAAWxN,CAC5C,CAEA,MAAMwO,EAAkBT,EAAWC,EAAY,GAAMN,EAASH,EAAU,GAClEkB,EAAkBX,EAAUG,EAAa,GAAMN,EAAQH,EAAW,GACxE,IAAIkB,EAAaV,EAAYT,EACzBoB,EAAaV,EAAaT,EAE9B,MAAM6B,EACJ,CACEp0B,EAAAA,GAAkBsB,OAClBtB,EAAAA,GAAkBqB,gBAClBrB,EAAAA,GAAkBS,MAClBT,EAAAA,GAAkBU,gBAClBqpB,SAAS5qB,KAuIf,SAAoCk1B,GAClC,MAAMC,EAAqBt2B,SAASoC,cAA8B,4CAE5D,IAAEqd,IAAQ8W,EAAAA,EAAAA,GAAqBF,EAASC,GAE9C,OAAO7W,EAAM6W,EAAmBE,WAC3B/W,EAAM4W,EAAQI,aAAeH,EAAmBE,UAAYF,EAAmBG,YACtF,CA7IQC,CAA2BV,GAG7B,CACFh0B,EAAAA,GAAkBa,YAClBb,EAAAA,GAAkBS,MAClBT,EAAAA,GAAkBU,eAClBV,EAAAA,GAAkBc,cAClBipB,SAAS5qB,KACLs0B,EAAaC,EACfD,EAAaC,EACJA,EAAaD,IACtBC,EAAaD,IAIjB,MAAMkB,EAAgB32B,SAAS42B,uBAAuB,SAAS,GACzDx1B,EAAQu1B,GAAiB11B,EAAY8F,GAAiBivB,EAAS70B,GAErE,IAAIpH,EACJ,GAAI48B,EAAe,CACjB,MAAM,IACJlX,EAAG,KAAEnH,EAAI,MAAE/Q,EAAK,OAAEK,GAChB+uB,EAAche,wBAIlB5e,EAAS,CACP88B,WAAY,OACZpX,IAAM,GAAEiV,MACRpc,KAAO,GAAEmc,MACTqC,gBAAiB,WACjB/O,UAAY,eAAczP,EAAOmc,QAAahV,EAAMiV,iBARvCntB,EAAQ+sB,MACR1sB,EAAS2sB,KAQtBhtB,MAAQ,GAAE+sB,MACV1sB,OAAS,GAAE2sB,MAEf,MACEx6B,EAAS,CACP0lB,IAAM,GAAEiV,MACRpc,KAAO,GAAEmc,MACTltB,MAAQ,GAAE+sB,MACV1sB,OAAS,GAAE2sB,MACXxM,UAAY,eAAcwN,QAAqBC,iBAA8BC,MAAeC,OAIhG3gB,EAAAA,EAAAA,KAAgB,MACd4gB,EAAAA,EAAAA,IAAYv0B,EAAOrH,GACd48B,GAAe32B,SAAS0b,KAAK3Z,YAAYX,GAC9CpB,SAAS0b,KAAKra,UAAUC,IAAI,oBAE5ByT,EAAAA,EAAAA,KAAgB,KACV4hB,IACFA,EAAc9yB,MAAMgzB,WAAa,IAGnCz1B,EAAMyC,MAAMkkB,UAAY,GAEpBqO,IACFh1B,EAAMyC,MAAMkzB,QAAU,KAGxBpzB,EAAWvC,EAAOD,GAElBuH,YAAW,MACTqM,EAAAA,EAAAA,KAAgB,KACV/U,SAAS0b,KAAKma,SAASz0B,IACzBpB,SAAS0b,KAAKoa,YAAY10B,GAE5BpB,SAAS0b,KAAKra,UAAUsa,OAAO,kBAAkB,GACjD,GA5LiB,IA6LGqY,EAAAA,IAAoB,GAC5C,GAEN,CsB2BMgD,CAAepD,GAAaC,GAAoBH,GAAa/F,IAAUjuB,YACzE,GACC,CACDqH,GAAeoC,GAAYkb,GAAWiO,GAAkBr0B,GAAQqH,GAAShF,EAASa,EAClF0yB,GAAmBlG,GAAU+F,GAAaE,GAAYE,GAAsBp0B,IAG9E,MAAMu3B,IAAc/sB,EAAAA,EAAAA,IAAgB,IAAMokB,OAEpC4I,IAAoBhtB,EAAAA,EAAAA,IAAiBM,IACrCA,EAAEC,kBAAkB0sB,aAAe3sB,EAAEC,OAAOue,QAAQ,OAExDiO,KAEK9sB,GAAWiL,IAEZtY,GACF4L,YAAW,KACT8lB,GAAe,CAAEE,OAAO,GAAS,CAAEC,gBAAgB,IACnDJ,GAAa,CAAEpkB,SAAQuC,WAAU0I,aAAY,GAC5C2P,IAEHwJ,GAAa,CAAEpkB,SAAQuC,WAAU0I,eACnC,IAGIrD,IAAuB7H,EAAAA,EAAAA,IAAiBktB,IACvCvU,GAAqB1Y,IAE1B4nB,GAAe,CAAEsF,QAASD,EAAa7c,cAAc,EAAM+c,SAAUzU,EAAiByU,WACtFtF,GAAQ,CAAEhe,IAAK6O,EAAkB7O,MACjCsa,KAAkB,IAGdiJ,IAAgBrtB,EAAAA,EAAAA,IAAgB,KACpC0nB,GAAgB,CACd4F,WAAYrtB,EACZ0F,WAAY,CAACuF,IACb,KAGJ/c,EAAAA,EAAAA,KAAU,IAAO4F,IAASw5B,EAAAA,EAAAA,IAAsB,KAC9CR,IAAa,SACVx+B,GAAY,CAACw+B,GAAah5B,MAE/B5F,EAAAA,EAAAA,KAAU,KACJiN,KAAYtE,KACd02B,EAAAA,EAAAA,KACF,GACC,CAAC12B,GAAOsE,KAEX,MAAM+f,IAAwBnb,EAAAA,EAAAA,IAAiB6B,IAC7C,GAAKA,IAAQoZ,EAAb,CAEA,GAAkB,WAAdpZ,EAAKzQ,KAAmB,CAE1B,KADkByQ,EAAKrM,YAAcqM,EAAKlM,cAAcC,OAAOnG,OA1MzC,GA2MN,OAChBm4B,GAAsB,CAAEtoB,OAAQuC,EAAKK,YAAY9O,IACnD,CAEkB,YAAdyO,EAAKzQ,MAAsB00B,GAC7B6B,GAAwB,CAAE1nB,SAAQuC,WAAUirB,sBAAuB5rB,EAAKzL,QAAQhD,IAT3C,CAUvC,IAGIgoB,IAAcpb,EAAAA,EAAAA,IAAgB,CAAC/O,EAAuBwtB,KAC1D,GAAkB,IAAdA,GAAmBhpB,GAAU,OAEjC,GAAkB,eAAdxE,EAAKG,KAAuB,CAC9B,MAAQmE,MAAOm4B,EAAWl4B,WAAYm4B,GAAmB18B,EACnD28B,EAAYD,EAAiBlP,EACnC,OAAImP,GAAa,GAAKA,EAAYF,EAAUj+B,OACnC,CAAE2B,KAAM,aAAcmE,MAAOm4B,EAAWl4B,WAAYo4B,QAG7D,CACF,CAEA,GAAkB,WAAd38B,EAAKG,KAAmB,CAC1B,MAAQ8Q,YAAa2rB,EAAiBl4B,cAAem4B,EAAmBt4B,WAAYm4B,GAAmB18B,EACjG28B,EAAYD,EAAiBlP,EACnC,OAAImP,GAAa,GAAKE,GAAqBF,EAAYE,EAAkBl4B,OAAOnG,OACvE,CACL2B,KAAM,SACN8Q,YAAa2rB,EACbl4B,cAAem4B,EACft4B,WAAYo4B,QAIhB,CACF,CAEA,GAAkB,qBAAd38B,EAAKG,KAA6B,CACpC,MAAQgF,QAAS23B,EAAsBv4B,WAAYw4B,GAA8B/8B,EAC3E28B,EAAYI,EAA6BvP,EAC/C,OAAImP,GAAa,GAAKG,EACb,CAAE38B,KAAM,mBAAoBgF,QAAS23B,EAAsBv4B,WAAYo4B,QAGhF,CACF,CAEA,MAAQx3B,QAAS63B,EAAaz4B,WAAYm4B,GAAmB18B,EAEvDiF,GAAYg4B,EAAAA,EAAAA,IAAoBD,GACtC,GAAI/3B,EAAW,CACb,MAAM03B,EAAYD,EAAkBlP,EAEpC,GAAImP,GAAa,GAAKA,EAAY13B,EAAUS,cAAclH,OACxD,MAAO,CAAE2B,KAAM,UAAWgF,QAAS63B,EAAaz4B,WAAYo4B,EAEhE,CAEA,MAAM1+B,EAAQy5B,IAAiBwF,QAAQF,EAAY76B,IACnD,QAAc7E,IAAVW,EAAqB,OACzB,MACMk/B,EAAgBzF,GADJz5B,EAAQuvB,GAEpB4P,EAAc7H,IAAe4H,GACnC,OAAIC,EACK,CAAEj9B,KAAM,UAAWgF,QAASi4B,QADrC,CAIgB,IAGZC,IAAsBtuB,EAAAA,EAAAA,IAAiB6B,IAC3C,IAAKA,EAEH,YADAkrB,KAIF,MAAMwB,EAA2B,WAAd1sB,EAAKzQ,KACpByQ,EAAKK,YAAY9O,GAAmB,YAAdyO,EAAKzQ,KACzByQ,EAAKzL,QAAQ6J,YAAS1R,EACtBigC,EAA8B,YAAd3sB,EAAKzQ,KAAqByQ,EAAKzL,QAAQhD,QAAK7E,EAC5DkgC,EAAoC,eAAd5sB,EAAKzQ,KAAwByQ,EAAKtM,WAAQhH,EAEtE8V,GAAgB,CACdpN,OAAQA,EACRgJ,OAAQsuB,EACRrjB,UAAWsjB,EACXzI,gBAAiB0I,EACjBj5B,WAAYqM,EAAKrM,WACjB2P,aAA4B,WAAdtD,EAAKzQ,KACnB00B,sBACC,CACD1gB,uBAAuB,GACvB,IAGEspB,IAAqB1uB,EAAAA,EAAAA,IAAgB,KAGzC,IAFmBrK,GAAeC,OAAOnG,QACpCs2B,GAAiBt2B,QAAUk5B,IAAiBl5B,QAAU,IACzC,IAAM+4B,GAEtB,YADAuE,KAIF,MAAM4B,EAAYvT,GAAYoN,IAAc,GACxCmG,EACFL,GAAoBK,GAII,WAArBnG,GAAYp3B,OAAqBsQ,EAAAA,EAAAA,IAAS8mB,GAAYtmB,YAAY9O,KAA6B,eAArBo1B,GAAYp3B,MAK3F27B,IAAa,IAGTl/B,IAAOD,EAAAA,EAAAA,KAEb,OACE8B,EAAAA,GAAAC,cAACkgB,GAAAA,EAAc,CACbzc,GAAG,cACHW,OAAQA,GACRmU,SAAUA,EACV0mB,0BAAwB,EACxBC,kBAAmBhJ,GAEnBn2B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,oBAAoByD,IAAKjD,GAAKkD,MAAQ,WAAQxC,EAAWuY,IAAKqiB,IAC1Ev2B,IACClD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,qBACVkY,OAAK,EACLlU,KAAK,UACL0P,MAAM,oBACNyE,UAAW3X,GAAK,SAChBH,QAASq/B,IAETr9B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGfvC,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CAACC,UAAWhH,GAAa3qB,QAAUnL,KAAMk2B,IAClDz4B,EAAAA,GAAAC,cAACw0B,GAAU,CACTzzB,IAAK6E,IAAOnC,GACZyO,KAAM2mB,MAGV94B,EAAAA,GAAAC,cAAC4T,GAAkB,CACjBjH,UAAWuC,GACXzD,QAASA,GACTyG,KAAM2mB,GACN1mB,eAAgBA,EAChB0B,gBAAiBA,GACjBI,eAAgB8qB,GAChBjrB,eAAgB6kB,GAChB3kB,mBAAoBopB,GACpBlpB,UAAWwpB,KAEb39B,EAAAA,GAAAC,cAAC0P,EAAiB,CAChBtL,OAAQs0B,GACR9zB,QAASg0B,GACTxyB,MAAOL,EACP4J,OAAQ4C,GAAa9O,MAGzB1D,EAAAA,GAAAC,cAACqrB,GAAiB,CAChBnZ,KAAM2mB,GACNrN,sBAAuBA,GACvBF,mBAAoBA,EACpBC,SAAUA,GACVE,YAAaA,GACbnb,OAAQA,EACRzE,QAASA,GACT1E,MAAOA,GACP0L,SAAUA,EACVwsB,cAAe9sB,GAAa9O,GAC5B6D,OAAQA,EACRlD,OAAQA,GACRomB,UAAWA,GACX/e,QAASA,GACT4d,cAAeA,EACfzkB,QAASw4B,GACT1R,WAAYiT,GACZpmB,SAAUA,EACVgR,cAAe8T,GACfnlB,qBAAsBA,KAET,K,eC/drB,SAA6C,WAA7C,GAA4K,WAA5K,GAAwM,WAAxM,GAA4O,WAA5O,GAAiQ,WAAjQ,GAAuS,WAAvS,GAA2Z,WAA3Z,GAA+c,WAA/c,GAAie,WAAje,GAAof,WAApf,GAA6gB,WAA7gB,GAAgkB,WAAhkB,GAAwlB,WAAxlB,GAAm1B,WAAn1B,GAAy+B,WAAz+B,GAAopC,WAAppC,GAAiuC,WAAjuC,GAA+yC,WAA/yC,GAAy7C,WCgBn7ConB,GAAgB,IAAMzmB,EAAAA,EACtB0mB,GAAgB,GAAM1mB,EAAAA,EAsJ5B,SAASzR,GAAYC,EAAgBm4B,GAAU,EAAOC,GAAW,GAC/D,MAAMl4B,EAAQpB,SAASnG,cAAc,OACrCuH,EAAMC,UAAUC,IAAKg4B,EDzK+zC,WAApB,YC2Kh0C,MAAM/3B,EAAM,IAAIC,MAKhB,GAJAD,EAAIE,WAAY,EAChBF,EAAIG,cAAgBC,EAAAA,EACpBJ,EAAIF,UAAUC,ID9K81C,YCgLx2C+3B,EAAS,CACX,MAAM7xB,EAASxH,SAASnG,cAAc,UACtC2N,EAAOnG,UAAUC,IAAIvH,IACrBwH,EAAI8G,OAAS,KACX,MAAMkxB,EAAM/xB,EAAOG,WAAW,KAAM,CAAE6xB,OAAO,KACvC,MACJjyB,EAAK,OACLK,GACErG,GAEJwT,EAAAA,EAAAA,KAAgB,KACdvN,EAAOD,MAAQA,EACfC,EAAOI,OAASA,EAEZ6xB,EAAAA,KACFF,EAAIG,OAAU,aAGhBH,EAAIvkB,UAAUzT,GAAK,GAAa,EAAagG,EAAQoyB,EAAY/xB,EAAS+xB,GAErEF,EAAAA,KACH/xB,EAAAA,EAAAA,GAAS6xB,EAAK,EAAG,EAAGhyB,EAAOK,EAjCtB,EACI,EAiCX,GACA,EAEJrG,EAAIK,IAAMV,EACVE,EAAMW,YAAYyF,EACpB,MACEjG,EAAIK,IAAMV,EACVE,EAAMW,YAAYR,GAGpB,OAAOH,CACT,CAEA,SAASkB,GAASnB,EAA2By4B,GAC3C,IAAIr3B,EACJ,MAAMC,EAAiB,KAAGq3B,EAAAA,EAAAA,IAAmBD,KAE7C,OAAQz4B,GACN,KAAK24B,EAAAA,GAAkBC,YACrBx3B,EAAqB,gBAAey3B,GAAAA,EAAkBC,OACtD,MACF,KAAKH,EAAAA,GAAkB/2B,mBACrBR,EAAoB,mDACpB,MACF,KAAKu3B,EAAAA,GAAkBI,SACrB33B,EAAoB,yBACpB,MACF,KAAKu3B,EAAAA,GAAkBh3B,aACrBP,EAAoB,qCAIxB,MAAMgB,EAAYvD,SAASoC,cAA2BG,GAChDiB,EAAWD,GAAaA,EAAUE,iBAAoC,GAAEjB,SAE9E,MAAO,CACLe,YACAG,QAASF,IAAW,GAExB,CCrMO,SAAS22B,IAAiB,MAC/BpU,EAAK,YACLqU,EAAW,kBACXC,EAAiB,yBACjBC,EAAwB,WACxBC,IAQA,MAAMC,EA1Ce,IA0CgBH,EA9CP,IAEP,KA6CjBI,GAAoBjhC,KAAKswB,IAAIsQ,GAAe,IA3C7B,IA4CfE,EAhDwB,IAEP,MA+CjBI,GAAcC,EAAAA,GAAAA,KAAoBH,EAAaC,GAAoB1U,GAEzE,OAAOwU,GAAcG,EAAcA,CACrC,CCtDe,SAASE,KACtB,MAAQrzB,MAAOyf,EAAapf,OAAQmf,IAAiBG,EAAAA,GAAAA,KACrD,OAAO1uB,EAAAA,EAAAA,KAAQ,IDMV,SAA6BwuB,EAAqBD,GAOvD,MAAMhB,EAyCR,SAAwB8U,EAAmBC,EAAoBC,EAAkBC,GAC/E,MAAMC,EAAaF,EAzDK,KA0DlBG,EAAcF,EAzDK,IA2DzB,OAAOxhC,KAAKC,IAAIwhC,EAAYC,EAC9B,CA9CgBC,CAfU,EACC,EAc2CnU,EAAaD,GAE3EqU,GAAmBT,EAAAA,GAAAA,IAfK,IAewC5U,GAChEsV,GAAaV,EAAAA,GAAAA,IAdI,IAckC5U,GAEzD,MAAO,CACLuV,YAAa,CACX/zB,MAAO6zB,EACPxzB,QAAQ+yB,EAAAA,GAAAA,IApBmB,IAoB2B5U,IAExDwV,MAAO,CACLh0B,MAAO8zB,EACPzzB,QAAQ+yB,EAAAA,GAAAA,IAtBY,IAsB2B5U,IAEjDA,QACAyV,cAAeJ,EAAmBC,EAClCI,gBAAiBJ,EAAaD,EAElC,CC/BuBM,CAAoB1U,EAAaD,IAAe,CAACC,EAAaD,GACrF,CCFe,SAAS4U,GACtBC,EAAsBC,GAAuB,EAAOC,GAAqB,GAEzE,MAAMC,EAAgBH,GAAS,YAAaA,EACtCI,EAAiBJ,GAAS,cAAeA,EACzCK,IAAUF,IAAgBG,EAAAA,EAAAA,IAAeN,GACzCO,EAAiBJ,GAAiBnzB,QAAQgzB,EAAMQ,aAEtD,IAAIC,EACAN,IACEH,EAAM3rB,QAAQhQ,OAAOo8B,YACvBA,EAAYT,EAAM3rB,QAAQhQ,MAAMo8B,UAAUp1B,SAExC20B,EAAM3rB,QAAQ/P,OAAOm8B,WAAWp1B,UAClCo1B,EAAYT,EAAM3rB,QAAQ/P,MAAMm8B,UAAUp1B,UAI9C,MAAMq1B,EAAcP,GAAgBQ,EAAAA,EAAAA,IAAkBX,QAASnjC,EACzD8N,GAAiBJ,EAAAA,EAAAA,GAASm2B,GAC1Bh3B,EAAUsD,QAAQmzB,GAAiBH,EAAM3rB,QAAQ/P,OACjDs8B,EAAUT,GAAiBH,EAAM3rB,QAAQ/P,OAAOs8B,QAChDC,EAAgBV,GAAgBQ,EAAAA,EAAAA,IAAkBX,EAAO,aAAUnjC,EACnEikC,GAAgBv2B,EAAAA,EAAAA,GAASs2B,GAAgBb,EAAOt2B,EAAUc,EAAAA,GAAeoP,YAAcpP,EAAAA,GAAeC,SACtGs2B,EAAer3B,GAAWy2B,GAAgBQ,EAAAA,EAAAA,IAAkBX,EAAO,QAAQ,QAAQnjC,EACnFmkC,GAAez2B,EAAAA,EAAAA,GAASw2B,GAAef,EAAOx1B,EAAAA,GAAeoP,aAE7DqnB,EAAcj0B,QAAQ8zB,GAAiBE,GACvC71B,EAAgBzB,EAAUiB,EAAiBm2B,GAAiBn2B,EAC5Du2B,GAAYv2B,IAAmBs2B,EAE/BE,EAAclB,GAAwBE,IAAkBH,EAAMoB,WAC9DC,EAAelB,GAAgBQ,EAAAA,EAAAA,IAAkBX,EAAO,iBAAcnjC,EAG5E,MAAO,CACLsjC,gBACAC,iBACAC,UACAE,iBACAE,YACAC,cACA/1B,iBACAjB,UACAk3B,UACAC,gBACAC,gBACAC,eACAC,eACAC,cACA91B,gBACA+1B,WACAC,cACAG,mBApBwB/2B,EAAAA,EAAAA,GAAS82B,GAAeF,IAAgBjB,GAsBpE,C,wCC7DA,SAA2I,WAA3I,GAA6J,WAA7J,GAAuM,WC8HvM,IAAe1kC,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAYC,IAC9B,MAAMG,GAAWC,EAAAA,EAAAA,KAAeJ,GAEhC,MAAO,CACL7N,OAAQgO,EAASkxB,aAAaC,mBAC9BC,YAAavxB,EAAOwxB,QAAQD,YAC5BxB,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GAClD,GAPiBD,EArGK2xB,EAAGv/B,SAAQo/B,cAAaxB,2BAC/C,MAAM,mBACJ4B,EAAkB,oBAClBC,EAAmB,iBACnBC,EAAgB,iBAChBC,IACEj0B,EAAAA,EAAAA,OACGk0B,EAAcC,IAAmBh0B,EAAAA,EAAAA,KAAS,IAEjDzR,EAAAA,EAAAA,KAAU,KACR,IAAKglC,EAAa,OAClB,MAAMU,GAAaC,EAAAA,GAAAA,MACfX,EAAYY,eAAiBZ,EAAYY,cAAgBF,GAC3DD,GAAgB,EAClB,GACC,CAACT,EAAap/B,IAEjB,MAAMlG,GAAOD,EAAAA,EAAAA,KAEPomC,GAAkBh0B,EAAAA,EAAAA,IAAgB,KACtC4zB,GAAgB,EAAM,IAGlB7G,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClCuzB,EAAmB,CAAEx/B,QAAQ,GAAQ,IAGjCkgC,GAAiBj0B,EAAAA,EAAAA,IAAgB,KAChC2xB,GAKL6B,IACAC,EAAiB,CACf3+B,MAAOjH,EAAK,iBACZuI,QAASvI,EAAK,uBAEhB0lC,EAAmB,CAAEx/B,QAAQ,KAT3B2/B,EAAiB,CAAEQ,eAAgB,WASA,IAGvC,OACExkC,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,UAAU,uBACVoH,iBDrEiB,WCsEjBV,OAAQA,EACRogC,QAAM,EACN5/B,QAASw4B,GAETr9B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACLhE,UD9EwC,WC+ExCmY,UAAW3X,EAAK,SAChBH,QAASq/B,GAETr9B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UDpF8D,YCqFjEqC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,yBAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UDvFiF,YCuFvDQ,EAAK,gBACpC6B,EAAAA,GAAAC,cAAA,OAAKtC,UDxF0G,YCyF5GQ,EAAK8jC,EAAuB,kBAAoB,2BAEnDjiC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,WAAWuC,EAAAA,GAAAA,GAAeC,GAAiB,gBAC3CqF,WAAS,EACTk/B,UAAQ,EACRC,YAAa3kC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,eAAe5E,UAAWwC,MAElDH,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,oBAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAYC,KAAmBhC,EAAK,gCAEtE6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,WAAWuC,EAAAA,GAAAA,GAAeC,GAAiB,gBAC3CqF,WAAS,EACTk/B,UAAQ,EACRC,YAAa3kC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,iBAAiB5E,UAAWwC,GAAa,oBAEjEH,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,kBAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAYC,KAAmBhC,EAAK,8BAEtE6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UD9GyK,WC+GzKgE,KAAK,UACLkhB,SAAUohB,EACVW,SAAU3C,EACV4C,qBAAsB5C,EACtBjkC,QAASumC,GAEPtC,EACEgC,EACGjkC,EAAAA,GAAAC,cAAC6kC,GAAAA,EAAS,CAACC,QAAQ,cAAcC,OAAQvB,EAAaY,cAAgBY,MAAOX,IAC9EnmC,EAAK,qBAHcA,EAAK,sBAK1B,K,gBC7EZ,UAAeX,EAAAA,EAAAA,KA/Bf,UAAiC,OAC/B6G,EAAM,MAAE29B,EAAK,QAAEn9B,IAEf,MAAM,YAAEqgC,EAAW,cAAEC,IAAkBp1B,EAAAA,EAAAA,MAEjC5R,GAAOD,EAAAA,EAAAA,KAEPknC,GAAyB3hC,EAAAA,EAAAA,KAAY,KACpCu+B,IAILmD,IACAD,EAAY,CAAEt1B,OAAQoyB,EAAMpyB,OAAQy1B,QAASrD,EAAMt+B,KACnDmB,IAAS,GACR,CAACA,EAASm9B,IAEb,OACEhiC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQA,EACRQ,QAASA,EACTO,MAAOjH,EAAK,oBACZ8Z,KAAM9Z,EAAK,uBACXonC,aAAcpnC,EAAK,UACnBqnC,eAAgBJ,EAChBK,sBAAoB,EACpB9nC,UAAU,wBAGhB,I,gECYA,UAAeH,EAAAA,EAAAA,KArCf,UAAuB,GACrBkG,EAAE,eACFgiC,EAAc,cACdnP,EAAa,YACboP,EAAW,UACXC,EAAS,SACTC,IAEA,MAAM1nC,GAAOD,EAAAA,EAAAA,MAEN4nC,EAAaC,IAAkB71B,EAAAA,EAAAA,IAAiB,IACjD81B,GAAepnC,EAAAA,EAAAA,KAAQ,KAC3B,MAAMqnC,GAAcP,GAAkB,IAAI5F,QAAQE,GAAWA,IAAWzJ,IACxE,OAAO2P,EAAAA,GAAAA,KAAOC,EAAAA,GAAAA,IAAmB,CAAEC,IAAK,IAAIT,GAAe,MAAOM,GAAaI,MAAOP,EAAapkC,KAAM,SAAU,GAClH,CAACgkC,EAAgBnP,EAAeuP,EAAaH,IAEhD,OACE3lC,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACTtlC,IAAK0C,EACL6iC,QAASP,EACTL,YAAaA,GAAea,GAAAA,EAC5BC,kBAAmBb,EACnBc,YAAaZ,EACba,kBAAmBxoC,EAAK,UACxByoC,cAAgB,GAAEljC,kBAClBmjC,cAAY,EACZC,oBAAkB,EAClBC,eAAa,EACbC,oBAAqBnB,EACrBoB,eAAgBlB,EAChBmB,eAAa,EACbC,YAAU,EACVC,cAAc,YAGpB,I,4BCrDA,MC8FA,IAAe5pC,EAAAA,EAAAA,KAlEf,UAAsB,SACpBE,EAAQ,eAAEgoC,EAAc,UAAE2B,EAAS,cAAE9Q,EAAa,QAAE1xB,IAEpD,MAAM,iBAAEyiC,IAAqBv3B,EAAAA,EAAAA,MAEvB5R,GAAOD,EAAAA,EAAAA,MACN4nC,EAAaC,IAAkB71B,EAAAA,EAAAA,IAAiB,KAChDq3B,EAAeC,IAAoBt3B,EAAAA,EAAAA,KAAkB,IACrDu3B,EAAuBC,IAA4Bx3B,EAAAA,EAAAA,IAAmB,IAEvEy3B,GAAiB/oC,EAAAA,EAAAA,KAAQ,KACrB8mC,GAAkB,IAAI5F,QAAQE,GAAWqH,EAAUrH,IAAS4H,iBACnE,CAAClC,EAAgB2B,IAEdrB,GAAepnC,EAAAA,EAAAA,KAAQ,KAC3B,MAAMqnC,GAAcP,GAAkB,IAAI5F,QAAQp8B,GAAOA,IAAO6yB,IAChE,OAAO2P,EAAAA,GAAAA,KAAOC,EAAAA,GAAAA,IAAmB,CAAEC,IAAK,IAAIuB,KAAmB1B,GAAaI,MAAOP,EAAapkC,KAAM,SAAU,GAC/G,CAACimC,EAAgBjC,EAAgBnP,EAAeuP,KAEnD+B,EAAAA,GAAAA,IAAsB,EAAEC,OACjBA,GAAgBpqC,IACnB8pC,GAAiB,GACjBE,EAAyBC,GAC3B,GACC,CAACjqC,EAAUiqC,IAEd,MAAMI,GAAiCtkC,EAAAA,EAAAA,KAAaiN,IAClDg3B,EAAyBh3B,GACzB82B,GAAiB,EAAK,GACrB,IAEGQ,GAAe13B,EAAAA,EAAAA,IAAgB,KACnCg3B,EAAiB,CAAEW,QAASR,IAC5B5iC,GAAS,IAGX,OACE7E,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACTC,QAASP,GAAgB,GACzBL,YAAa8B,EACbf,YAAaZ,EACba,kBAAmBxoC,EAAK,UACxByoC,cAAc,8BACdC,cAAY,EACZC,oBAAkB,EAClBE,oBAAqBe,EACrBd,eAAgBlB,EAChBmB,eAAa,EACbC,YAAU,EACVC,cAAc,aAGhBpnC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GDjFS,WCiF2BqnC,GDjFP,aCkF3CvnC,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAASb,EACTvpC,QAASgqC,EACTlyB,UAAW3X,EAAK,SAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,YAKrB,IC5FA,IAAgB,MAAQ,WAAW,OAAS,WAAW,YAAc,WAAW,YAAc,WAAW,QAAU,WAAW,QAAU,WAAW,MAAQ,WAAW,KAAO,WAAW,OAAS,WAAW,QAAU,WAAW,MAAQ,WAAW,KAAO,WAAW,OAAS,WAAW,cAAgB,WAAW,OAAS,WAAW,KAAO,WAAW,OAAS,YCsD9V8lC,GAA2B,CAAC,CAChC9lC,KAAM,6BACNmO,MAAO,YACPW,MAAO,CAAC,UAAW,WACnBlM,KAAM,iBACNmjC,QAAS,gBACR,CACD/lC,KAAM,6BACNmO,MAAO,WACPW,MAAO,CAAC,UAAW,WACnBlM,KAAM,cACNmjC,QAAS,uBACR,CACD/lC,KAAM,iCACNmO,MAAO,eACPW,MAAO,CAAC,UAAW,WACnBlM,KAAM,kBACNmjC,QAAS,gBACR,CACD/lC,KAAM,qCACNmO,MAAO,SACPW,MAAO,CAAC,UAAW,WACnBlM,KAAM,eACNmjC,QAAS,iBACR,IAEEC,GAAO,SAAPA,GAAO,OAAPA,EAAAA,EAAO,qBAAPA,EAAAA,EAAO,yBAAPA,EAAAA,EAAO,+BAAPA,EAAAA,EAAO,uBAAPA,CAAO,EAAPA,IAAO,IAkUZ,UAAe/qC,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACxC,MACEqxB,aAAa,QACX8B,EAAO,OAAEz1B,KAET0C,EAAAA,EAAAA,KAAeJ,GACb8vB,EAASpyB,GAAUy1B,GACrBmD,EAAAA,EAAAA,KAAgBt2B,EAAQtC,EAAQy1B,QAChCxmC,EAEJ,MAAO,CACLmjC,MAAOA,GAAS,YAAaA,EAAQA,OAAoBnjC,EACzD4pC,WAAYzG,GAAS,eAAgBA,EAAQA,EAAMyG,gBAAa5pC,EAChE6mC,eAAgBxzB,EAAOw2B,aAAaT,QACpCZ,UAAWn1B,EAAOtR,MAAM+nC,KACxBpS,cAAerkB,EAAOqkB,cACvB,GAhBiBtkB,EA3TpB,UAAuB,OACrB5N,EAAM,MACN29B,EAAK,WACLyG,EAAU,eACV/C,EAAc,UACd2B,EAAS,cACT9Q,EAAa,QACb1xB,IAEA,MAAM,iBAAE+jC,EAAgB,qBAAEC,IAAyB94B,EAAAA,EAAAA,MAE7C5R,GAAOD,EAAAA,EAAAA,MACN4qC,EAAaC,EAAWC,IAAcxqC,EAAAA,EAAAA,IAAQ,IAC9CyqC,EAASC,IAAch5B,EAAAA,EAAAA,IAAyCu4B,IAChEU,EAAUC,IAAel5B,EAAAA,EAAAA,IAAS8xB,GAAOqH,cACzChK,EAAWiK,IAAgBp5B,EAAAA,EAAAA,IAAkBq4B,GAAQU,UACrDM,EAAyBC,IAA8Bt5B,EAAAA,EAAAA,IAA4B,aACpFu5B,EAAepK,IAAckJ,GAAQU,QAErCtB,GAAiB/oC,EAAAA,EAAAA,KAAQ,KACrB8mC,GAAkB,IAAI5F,QAAQE,GAAWqH,EAAUrH,IAAS4H,iBACnE,CAAClC,EAAgB2B,IAEdzB,GAAYhnC,EAAAA,EAAAA,KAAQ,KACxB,GAAIygC,IAAckJ,GAAQmB,aACnBT,GAASU,cAAc5pC,QAAUkpC,EAAQU,aAAa,KAAOpT,GAElE,MAAO,CAACA,EAGM,GACf,CAAC8I,EAAW9I,EAAe0S,GAASU,eAEjCC,GAAqBhrC,EAAAA,EAAAA,KAAQ,IAC7B2qC,IAA4BN,GAASR,WAAmB,GACrDQ,GAASY,cAAgB,IAC/B,CAACN,EAAyBN,GAASY,aAAcZ,GAASR,aAEvDqB,GAA2Bx5B,EAAAA,EAAAA,IAAiBy5B,IAChDb,EAAW,IACND,EACHU,aAAcI,GAAQhqC,OAASgqC,GAAQjK,QAAQp8B,GAAOA,IAAO6yB,IAAiB,CAACA,IAC/E,IAGEyT,GAA0B15B,EAAAA,EAAAA,IAAiBy5B,IAC/Cb,EAAW,IACND,EACHY,aAAcE,EACdtB,WAAYc,GACZ,KAGJ9qC,EAAAA,EAAAA,KAAU,KACJ4F,IACFilC,EAAaf,GAAQU,SACrBF,IACF,GACC,CAAC1kC,KAEJ5F,EAAAA,EAAAA,KAAU,KACRyqC,EAAWT,EAAW,GACrB,CAACA,IAEJ,MAAMwB,GAAyB35B,EAAAA,EAAAA,IAAgB,KACzC+uB,IAAckJ,GAAQU,QAK1BK,EAAaf,GAAQU,SAJnBD,GAI2B,IA+BzBkB,GAAuB55B,EAAAA,EAAAA,IAAgB,KAC3C84B,GAAaD,EAAS,IAKlBnB,GAAe13B,EAAAA,EAAAA,IAAgB,KACnCs4B,EAAiB,CACfh5B,OAAQoyB,EAAOpyB,OACfy1B,QAASrD,EAAOt+B,GAChBulC,QAASA,IAEPjH,EAAOqH,cAAgBF,GACzBN,EAAqB,CAAEj5B,OAAQoyB,EAAOpyB,OAAQy1B,QAASrD,EAAOt+B,GAAI2lC,YAAaF,IAEjFH,GAAY,IAuDd,SAASmB,EAAczsC,GACrB,OAAQ2hC,GACN,KAAKkJ,GAAQU,QACX,OAsCN,WACE,MAAMmB,EAAgBpI,GAAQqI,EAAAA,GAAAA,IAASrI,EAAMsI,WAAatI,EAAM5M,MAAQ,EAExE,OACEp1B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOoqC,SACrBvqC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,GAAOiF,OAAQjH,EAAK,qCACnC6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOqqC,MACpBnC,GAAQjoC,KAAKnB,IACZe,SAAAA,GAAAC,cAAA,SACEe,IAAK/B,EAAOyR,MACZ/S,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOlB,OAAQA,EAAOyR,QAAUu4B,GAASR,YAActoC,GAAOsqC,UAExFzqC,EAAAA,GAAAC,cAAA,SACEyB,KAAK,QACLa,KAAK,gBACL5E,UAAWwC,GAAOuqC,MAClBh6B,MAAOzR,EAAOyR,MACd+5B,QAASxrC,EAAOyR,QAAUu4B,GAASR,WACnCv3B,SAAUA,KAAMy5B,OA9JAC,EA8JuB3rC,EAAOyR,WA7J5Dw4B,EAAW,IACND,EACHR,WAAYmC,IAHhB,IAAgCA,CA8JqC,EACrDC,2BAAyB,IAE3B7qC,EAAAA,GAAAC,cAAA,QACEtC,UAAWwC,GAAOgF,KAClB8E,MAAQ,iBAAgBhL,EAAOoS,MAAM,mBAAmBpS,EAAOoS,MAAM,MAErErR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAMtD,EAAOkG,QAErBnF,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO2qC,eACrB9qC,EAAAA,GAAAC,cAAA,QAAMtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO4qC,cAAe5sC,EAAKc,EAAOsD,OACjEtD,EAAOqpC,SACNtoC,EAAAA,GAAAC,cAAA,OACE+qC,SAAU,EACVC,KAAK,SACLttC,UAAWwC,GAAOgG,OAClB,aAAYhI,EAAK,QACjBH,QAAU4S,KAxK9B,SAA2BA,EAAqCzK,GAG9D,QAFA4B,EAAAA,EAAAA,GAAU6I,GAEFzK,GACN,IAAK,eACHmjC,EAAaf,GAAQ2C,cACrB,MACF,IAAK,eACH5B,EAAaf,GAAQmB,WACrB,MACF,IAAK,eACHJ,EAAaf,GAAQ4C,UACrB3B,EAA2B,aAC3B,MACF,IAAK,sBACHF,EAAaf,GAAQ4C,UACrB3B,EAA2B,YAGjC,CAqJsC4B,CAAkBx6B,EAAG3R,EAAOqpC,QAAS,GAEvDtoC,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,GAAOkrC,aAlI3B,kBADSllC,EAmIiDlH,EAAOqpC,SAjIhD,IAA1BX,EAAe5nC,OACV5B,EAAK,wCAGgB,IAA1BwpC,EAAe5nC,QACVi2B,EAAAA,GAAAA,IAAa73B,EAAMkpC,EAAUM,EAAe,KAG9CxpC,EAAK,2BAA4BwpC,EAAe5nC,OAAQ,KAGjD,iBAAXoG,GAAqD,cAAxB8iC,GAASR,YAC1B,wBAAXtiC,GAA4D,aAAxB8iC,GAASR,WAC5CQ,GAASY,cAAc9pC,OAIQ,IAAhCkpC,EAAQY,aAAa9pC,OAChB5B,EAAK,mCAAmCmtC,EAAAA,EAAAA,IAAgBjE,EAAU4B,EAAQY,aAAa,MAGzF1rC,EAAK,kCAAmC8qC,EAAQY,aAAa9pC,OAAQ,KAPnE5B,EAAK,oCAUX8qC,GAASU,cAAgD,IAAhCV,EAAQU,aAAa5pC,OAIf,IAAhCkpC,EAAQU,aAAa5pC,QAChBurC,EAAAA,EAAAA,IAAgBjE,EAAU4B,EAAQU,aAAa,KAGjDxrC,EAAK,2BAA4B8qC,EAAQU,aAAa5pC,OAAQ,KAP5D5B,EAAK,6CAyGI6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,YApI/B,IAA0B4D,CAyIf,MAGLnG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOoqC,SACrBvqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAAC8c,QAAM,EAACpkB,QAASksC,GACxBlqC,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,cACZ6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACP7nC,GAAG,sBACHqN,MAAO5S,EAAK,aACZssC,QAAStB,EACTzE,UAAQ,MAId1kC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOsE,QACrBzE,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO64B,MAAO76B,EAAK,gBAAiBisC,IACpDpqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOqrC,QACrBxrC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACjE,QAASgqC,GAAe7pC,EAAK,6BAK/C,CAxGastC,GACT,KAAKlD,GAAQ2C,aACX,OACElrC,EAAAA,GAAAC,cAACyrC,GAAY,CACX1qC,IAAI,gBACJtD,SAAUA,EACVgoC,eAAgBA,EAChBnP,cAAeA,EACf8Q,UAAWA,EACXxiC,QAASolC,IAGf,KAAK1B,GAAQ4C,SACX,OACEnrC,EAAAA,GAAAC,cAAC0rC,GAAa,CACZ3qC,IAAI,YACJ0C,GAAG,YACHgiC,eAAgBA,EAChBnP,cAAeA,EACfoP,YAAaiE,EACb/D,SAAUmE,IAGhB,KAAKzB,GAAQmB,UACX,OACE1pC,EAAAA,GAAAC,cAAC0rC,GAAa,CACZ3qC,IAAI,aACJ0C,GAAG,aACHgiC,eAAgBA,EAChBE,UAAWA,EACXrP,cAAeA,EACfoP,YAAasD,GAASU,aACtB9D,SAAUiE,IAIpB,CAsEA,OACE9pC,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQykC,EACRnrC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOyrC,MAAO,wBACxC/mC,QAASmkC,EACT6C,YAAU,EACVh8B,oBAAqBhL,GAErB7E,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOqE,QACrBxE,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO2rC,YAAa,gBAC9Cj2B,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACL3D,QAASisC,EACTn0B,UAA0B3X,EAAfsrC,EAAoB,cAAsB,iBAErDzpC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,sBAAuBupC,GAAgB,iBAExEzpC,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CAAC78B,KAAK,YAAY88B,UAAWA,GA9I9C,WACE,OAAQA,GACN,KAAKkJ,GAAQU,QACX,OAAOjpC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,GAAO4rC,aAAc5tC,EAAK,+BAClD,KAAKoqC,GAAQmB,UACX,OAAO1pC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,GAAO4rC,aAAc5tC,EAAK,yCAClD,KAAKoqC,GAAQ2C,aACX,OAAOlrC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,GAAO4rC,aAAc5tC,EAAK,iBAClD,KAAKoqC,GAAQ4C,SACX,OAAOnrC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,GAAO4rC,aAAc5tC,EAAK,2CAEtD,CAoIS6tC,KAGLhsC,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACTC,UAAWA,EACX98B,KAAK,YACL0pC,eAAe,yBACftuC,UAAWwC,GAAOkW,SAEjB8zB,GAIT,K,qUCxWA,MAiGA,IAAe3sC,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAUswB,kBAIF,CACL0J,OAJa1J,EAAY2J,YAAazV,EAAAA,EAAAA,KAAWxkB,EAAQswB,EAAY2J,iBAActtC,EAKnFmjC,MAJYQ,EAAY6C,SAAW7C,EAAY2J,YAC7C3D,EAAAA,EAAAA,KAAgBt2B,EAAQswB,EAAY2J,WAAY3J,EAAY6C,cAAWxmC,KAJ3DoT,EAjGoCm6B,EACtDzuC,YACA6kC,cACA0J,SACAlK,YAEA,MAAM,gBAAEqK,EAAe,qBAAEC,EAAoB,SAAEC,IAAax8B,EAAAA,EAAAA,MAEtDqH,GAAM7J,EAAAA,EAAAA,IAAuB,MAE7BpP,GAAOD,EAAAA,EAAAA,MAEbO,EAAAA,EAAAA,KAAU,MACHujC,GAASQ,EAAY2J,YAAc3J,EAAY6C,SAClDiH,EAAqB,CACnB18B,OAAQ4yB,EAAY2J,WACpBK,SAAU,CAAChK,EAAY6C,UAE3B,GACC,CAAC7C,EAAaR,IAEjB,MAAMjM,EAAcmW,GAASlW,EAAAA,GAAAA,IAAa73B,EAAM+tC,GAAU1J,EAAYiK,SAEhEC,GAAoBp8B,EAAAA,EAAAA,IAAgB,KACxC,MAAM,WAAE67B,EAAU,QAAE9G,GAAY7C,EAC3B2J,KAEgBnK,GAAW,cAAeA,GAASA,EAAM2K,UAS5DJ,EAAS,CAAE7oC,GAAIyoC,IANfE,EAAgB,CACdz8B,OAAQu8B,EACR9G,UACAuH,eAAe,IAInB,KAGI,YAAEhmB,EAAW,gBAAEimB,IAAoBC,EAAAA,GAAAA,GAAaJ,GA6BtD,OACE1sC,EAAAA,GAAAC,cAAC8sC,GAAAA,EAAgB,CACf31B,IAAKA,EACLzZ,WAAWuC,EAAAA,GAAAA,GACT,kBACAvC,GACAqvC,EAAAA,GAAAA,GAAkBd,GAAQ,GAAM,IAElC9qC,IAAKjD,EAAKkD,MAAQ,WAAQxC,EAC1Bb,QAAS4oB,EACTqmB,YAAaJ,GAEZX,GAAQ76B,OAAO67B,mBACdltC,EAAAA,GAAAC,cAACktC,GAAAA,EAAmB,CAClBC,gBAAiBlB,EAAO76B,MAAM67B,kBAC9BvvC,UAAU,sCAGdqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gBA7CnB,WACE,GAAIqkC,GAAS,YAAaA,GAASA,EAAM3rB,QAAQ4B,KAC/C,OACEjY,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,0BACV0vC,EAAAA,GAAAA,IAAuBrL,EAAM3rB,QAAQ4B,MAM9C,CAoCOq1B,GACDttC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBAnCrB,WACE,IAAKuuC,IAAWnW,EACd,OAGF,MAAM5wB,GAA8B6M,EAAAA,EAAAA,IAASk6B,EAAOxoC,IAAyB,cAAnB,iBAE1D,OACE1D,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACG/iC,GAAQnF,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAM4C,EAAMxH,UAAU,uBACpCo4B,IAAe/zB,EAAAA,GAAAA,GAAW+zB,GAGjC,CAuBSwX,KAGY,K,gBCgCvB,UAAe/vC,EAAAA,EAAAA,KAtIf,UAAsB,MACpBwkC,EAAK,WAAEwL,EAAU,UAAE7vC,EAAS,SAAE8vC,EAAQ,OAAEC,IAExC,MAAMvvC,GAAOD,EAAAA,EAAAA,KAEPkZ,GAAM7J,EAAAA,EAAAA,IAAuB,MAE7BogC,GAAapgC,EAAAA,EAAAA,IAAuB,MAEpCqgC,GAAUrgC,EAAAA,EAAAA,IAAuB,MAEjCsgC,GAAoBtgC,EAAAA,EAAAA,IAAuB,MAC3CugC,GAAiBC,EAAAA,GAAAA,GAAiB/L,GAAO,GAEzCgM,EAAUF,GAAgBz3B,QAAQ4B,MAEjCg2B,EAAaC,IAAkBh+B,EAAAA,EAAAA,KAAS,GACzCi+B,GAAiBC,EAAAA,GAAAA,GAAuBZ,QAAc3uC,EApBzB,KAqB7BwvC,EAAoBb,GAAcW,GAExC1vC,EAAAA,EAAAA,KAAU,MACR0c,EAAAA,EAAAA,KAAgB,KACTwyB,EAAWjgC,UAIZ8/B,GACFc,EAAAA,GAAAA,IAAcX,EAAWjgC,QAASvN,KAElCouC,EAAAA,GAAAA,IAAiBZ,EAAWjgC,QAASvN,IACvC,GACA,GACD,CAACqtC,IAEJ,MAAMgB,EAAYP,IAAgBI,GAC1BloB,aAAcsoB,EAAoB,qBAAEpoB,IAAyBE,EAAAA,GAAAA,GACnEioB,OAAW3vC,GAAW,EAAM,QAAQ,IAGtC4f,EAAAA,EAAAA,KAAgB,MACdiwB,EAAAA,EAAAA,KAAe,KACb,IAAKb,EAAkBngC,QACrB,OAGF,MAAMihC,EAASd,EAAkBngC,SAE3B,YAAEkhC,GAAgBD,GAExBxzB,EAAAA,EAAAA,KAAgB,KACdwzB,EAAO1kC,MAAM4kC,YAAY,wBAA0B,GAAED,MAAgB,GACrE,GACF,GACD,KAEHnwB,EAAAA,EAAAA,KAAgB,MACdqwB,EAAAA,EAAAA,KAAoB,KAClB,IAAKnB,EAAWjgC,UAAYkgC,EAAQlgC,QAClC,OAGF,MAAM/D,EAAYgkC,EAAWjgC,QACvBqhC,EAAgBnB,EAAQlgC,QAExBshC,EAAgBD,EAAczf,WAC9B,WAAE2f,EAAU,WAAEC,IAAeC,EAAAA,GAAAA,GAA2BJ,GACxDK,EAAgBF,EApEN,EAqEVG,EAAgBL,EArEN,EAqEsBC,EAEtC,MAAO,KACDG,KACFd,EAAAA,GAAAA,IAAc3kC,EdtGilC,YcuG/lCukC,GAAe,IAGjBvkC,EAAUM,MAAM4kC,YAAY,oBAAsB,GAAEQ,MAAkB,CACvE,GACD,GACD,CAACrB,KAEJvvC,EAAAA,EAAAA,KAAU,KACH+uC,GACHp2B,EAAI1J,SAAS4hC,SAAS,CAAEzpB,IAAK,GAC/B,GACC,CAAC2nB,IAEJ,MAAM+B,GAAgBrvC,EAAAA,GAAAA,GdrH+hC,WcuHnjCmuC,GdvH2nC,WcwH3nCI,GdxH0qC,Yc2H5qC,OACEzuC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,Gd5HuV,Wc4HxTvC,IAC7CqC,EAAAA,GAAAC,cAAA,OACEmX,IAAKu2B,EACLhwC,UAAW4xC,EACXtE,KAAMuD,EAAY,cAAW3vC,EAC7Bb,QAASwwC,EAAYf,EAAWC,GAEhC1tC,EAAAA,GAAAC,cAAA,OACEmX,IAAKA,EACLzZ,WAAWuC,EAAAA,GAAAA,GdrIsgC,WcqIl+B,kBAAmB,kBAEjE4tC,GAAgBtL,aACfxiC,EAAAA,GAAAC,cAACmsC,GAAoB,CACnB5J,YAAasL,EAAetL,YAC5B7kC,Ud1Io8C,ac6Iv8CmwC,GACC9tC,EAAAA,GAAAC,cAAA,OAAKmX,IAAKw2B,EAASjwC,Ud9IijC,Yc+IlkCqC,EAAAA,GAAAC,cAACuvC,GAAAA,EAAW,CACVC,eAAgB3B,EAChB4B,uBAAqB,EACrBnlB,eAAa,OAMtBkkB,GACCzuC,EAAAA,GAAAC,cAAA,OACEmX,IAAKy2B,EACLlwC,WAAWuC,EAAAA,GAAAA,Gd3JsrC,Wc2J/oCmmB,GAClDroB,QAASyvC,GAERtvC,EAAK,0BAKhB,I,4BCnKA,SAAuB,WAAvB,GAAkM,WAAlM,GAAqN,WC+KrN,IAAeX,EAAAA,EAAAA,KAtJKmyC,EAClB3N,QACArkC,gBAEA,MAAM,mBAAEiyC,EAAkB,gBAAE5X,EAAe,kBAAE6X,IAAsB9/B,EAAAA,EAAAA,MAC7D5R,GAAOD,EAAAA,EAAAA,MAEP,MACJ4xC,EAAK,MAAEC,EAAK,OAAEngC,EAAQlM,GAAI2hC,EAAO,aAAE2K,GACjChO,GACE,WAAEiO,EAAU,cAAEC,EAAa,eAAEC,GAAmBL,GAAS,CAAC,EAC1Dna,IAAa3jB,EAAAA,EAAAA,IAASpC,GAEtBwgC,EAA2BJ,IAAgBK,EAAAA,EAAAA,IAAeL,EAAcM,EAAAA,KAExEC,EAAavhC,SAChB+gC,GAASpa,IACPqM,EAAMwO,WACLxO,EAAMoB,YAGNqN,GAAcC,EAAAA,EAAAA,IAAY9gC,EAAQy1B,GAElCsL,GAAgB/xC,EAAAA,EAAAA,KAAQ,KAC5B,MAAQgC,OAAS+nC,KAAMtB,KAAgBuJ,EAAAA,EAAAA,MAEjCC,EAAkBf,GAAS,oBAAqBA,EAAQA,EAAMe,qBAAkBhyC,EACtF,GAAKgyC,EAEL,OAAOA,EAAgBzwC,KAAKsD,GAAO2jC,EAAU3jC,KAAKo8B,OAAO9wB,QAAQ,GAChE,CAAC8gC,IAEEgB,GAA2BxgC,EAAAA,EAAAA,IAAgB,KAC/Cs/B,EAAmB,CAAEvK,WAAU,IAG3B0L,GAAqBzgC,EAAAA,EAAAA,IAAgB,KACzC0nB,EAAgB,CAAE4F,WAAYhuB,EAAQy1B,WAAU,IAG5C2L,GAAkB1gC,EAAAA,EAAAA,IAAgB,KACtC,MAAM2gC,EAAWjB,OAAenxC,EAAYyxC,EAAAA,IAC5CT,EAAkB,CAChBjgC,SACAy1B,UACAoL,cACAQ,YACA,IAGJ,OAAKhB,EASHjwC,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACTC,GACAxC,IAGFqC,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GD3F0B,YC2FOy1B,GD3FkB,YC4F9D33B,QAAU23B,OAAuC92B,EAA3BiyC,GAErB9hC,QAAQ2hC,GAAe5wC,SACtBC,EAAAA,GAAAC,cAACixC,GAAAA,EAAU,CACTvvC,KAAK,QACLwvC,MAAOR,EACPhzC,UDlG+E,aCsGlFg4B,EACC31B,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,IAAcH,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,eAAe5E,UDvGwK,aCuGzIsyC,GAExFjwC,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,IAAehC,EAAK,QAAS8xC,EAAY,MAE3DjhC,QAAQmhC,KAAoBxa,GAC3B31B,EAAAA,GAAAC,cAAA,QAAMtC,UD5G0H,YC6G9HqC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,QAAQ5E,UD7G2I,aC8G7JwyC,IAIPnwC,EAAAA,GAAAC,cAAA,OAAKtC,UDlHoG,aCmHxG4yC,GACCvwC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,cACN1P,KAAK,UACLkU,OAAK,EACL7X,QAAS+yC,EACTj7B,UAAW3X,EAAK,WAChBR,UAAWwC,IAEXH,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,aAGdozB,GACC31B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACGl5B,QAAQkhC,IACPlwC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACLyvC,gBAAc,EACdt7B,UAAW3X,EAAK,iBAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UAEbvC,EAAAA,GAAAC,cAAA,YAAOiwC,IAGXlwC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlY,UDlJyP,WCmJzP0T,MAAM,cACN1P,KAAK,UACL3D,QAASgzC,EACTl7B,UAAW3X,EAAK,iBAEf6xC,GACChwC,EAAAA,GAAAC,cAACoxC,GAAAA,EAAqB,CACpBrwC,KAAKswC,EAAAA,EAAAA,IAAetB,GACpBS,YAAaA,EACbQ,SAAUjB,EACVuB,eAAgBnB,MAGjBJ,GAAgBI,IACjBpwC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CACHE,KAAM6tC,EAA2B,QAAU,gBAC3CzyC,WAAWuC,EAAAA,GAAAA,GAAekwC,GDnKsP,eCuKrRphC,QAAQmhC,IAAoBnwC,EAAAA,GAAAC,cAAA,YAAOkwC,MA1F1CnwC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAaxC,IACzCQ,EAAK,gBA6FJ,IC3HV,IAAeX,EAAAA,EAAAA,KA5Bf,UAAuB,SACrBE,EAAQ,SAAE8zC,EAAQ,QAAE9lC,EAAO,SAAEuQ,EAHE,EAGiC,SAAEw1B,EAAQ,gBAAEC,IAE5E,MAAMC,GAAqBrhC,EAAAA,EAAAA,IAAiB8gB,IACrC1lB,GCxB+F,aDwBpF0lB,EAAMwgB,eACpBF,GACF,IAGIv4B,GAAajZ,EAAAA,GAAAA,GC7BE,WD+BnBsxC,GC/BuC,WDgCvC9zC,GChC2D,WDiC3D+zC,GCjCwH,YDoC1H,OACEzxC,EAAAA,GAAAC,cAAA,QACEtC,UAAWwb,EACX,kBAECzb,GACCsC,EAAAA,GAAAC,cAAA,KAAGgK,MAAQ,wBAAuBgS,KAAate,UC1C2B,WD0CFk0C,eAAgBF,IAIhG,IE+DMG,GAAwBC,EAAAA,GAAY,EAAI,EAgzB9C,IAAev0C,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAqB,CAACC,GACxCtC,SACAy1B,UACAjxB,wBAEA,MAAM,UAAE49B,GAAc9/B,EAChB+/B,GAAOC,EAAAA,EAAAA,KAAWhgC,EAAQtC,GAC1B8C,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQtC,GAC1BwiC,GAAeC,EAAAA,EAAAA,KAAmBngC,EAAQtC,GAC1CyC,GAAWC,EAAAA,EAAAA,KAAeJ,IAE9BqxB,aAAa,QACXziB,EAAO,UACPwxB,EAAS,mBACTC,EAAkB,mBAClB/O,EAAkB,UAClBgP,GAEFC,iBAAmBpN,QAASqN,GAAkB,aAC9CC,EAAY,iBACZC,EAAgB,SAChBC,EAAQ,YACRC,EAAW,cACXC,EAAa,kCACbC,GACE3gC,GACIhO,OAAQ4uC,GAAuBN,GAAgB,CAAC,EAClD3Q,GAAQwG,EAAAA,EAAAA,KAAgBt2B,EAAQtC,EAAQy1B,GACxClD,EAAgBH,GAAS,YAAaA,EACtCkR,EAAmBlkC,QACvBgkC,GACGV,GAAaI,GAAoBrgC,EAAS8gC,gBAAgB9N,SAAWyN,GAAeP,GACpFU,GAAsB7+B,GAAqBw+B,GAAoBpP,GAAsBqP,GAAYE,GAGhGvQ,EAAcL,EAAgBH,EAAMQ,iBAAc3jC,EAClDu0C,EAAajR,EAAgBH,EAAMoR,gBAAav0C,EAChDw0C,EAAkB7Q,GAAa2J,YAChCiH,GAAY1yC,MAAM4yC,GAAwD,gBAAdA,EAAK5xC,QAAyB6xC,UACzFC,EAAgBH,GAAkB3c,EAAAA,EAAAA,KAAWxkB,EAAQmhC,QAAmBx0C,EACxE40C,GAAsBnd,EAAAA,EAAAA,KAA+BpkB,EAAQ,yBAE7DwhC,EAAWvR,GAAiBH,EAAM2R,QAASjd,EAAAA,EAAAA,KAAWxkB,EAAQ8vB,EAAM2R,aAAU90C,EAC9E+0C,GAAoBC,EAAAA,EAAAA,KAA4B3hC,EAAQtC,GACxDkkC,GAAkBC,EAAAA,EAAAA,KAA0B7hC,GAElD,MAAO,CACLgkB,KAAO+b,GAAQv/B,EACf8gC,gBACAE,WACA1R,QACAgS,WAAYxB,GAAWyB,iBAAiBrkC,GACxCkR,UACAmhB,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GACjDghC,mBACAgB,qBAAsBlC,EAAWkC,qBACjCC,oBAAqBnC,EAAWoC,kBAAoBpC,EAAWqC,yBAC/DC,YAAatlC,QAAQ0D,GACrB6hC,sBAAuBvlC,QAAQojC,GAAcoC,UAC7C/Q,YAAavxB,EAAOwxB,QAAQD,YAC5BgQ,sBACAG,oBACAE,kBACD,GA/DiB7hC,EA3yBpB,UAAe,OACbrC,EAAM,QACNy1B,EAAO,KACPnP,EAAI,cACJsd,EAAa,SACbE,EAAQ,QACR5yB,EAAO,kBACP2zB,EAAiB,iBACjBC,EAAgB,MAChB1S,EAAK,WACLgS,EAAU,cACVpH,EAAa,WACbr9B,EAAU,iBACV2jC,EAAgB,qBAChBgB,EAAoB,oBACpBC,EAAmB,YACnBG,EAAW,sBACXC,EAAqB,eACrBI,EAAc,qBACd1S,EAAoB,YACpBwB,EAAW,oBACXgQ,EAAmB,SACnBmB,EAAQ,QACR/vC,EAAO,SACPmP,EAAQ,kBACR4/B,EAAiB,gBACjBE,IAEA,MAAM,UACJe,EAAS,oBACTC,EAAmB,kBACnBC,EAAiB,cACjB5P,EAAa,uBACb6P,EAAsB,gBACtBhd,EAAe,cACfid,EAAa,qBACbpM,EAAoB,SACpB0D,EAAQ,iBACRxI,EAAgB,uBAChBmR,EAAsB,iBACtBC,EAAgB,UAChBC,EAAS,eACTC,EAAc,mBACdxR,IACE9zB,EAAAA,EAAAA,MACEo0B,GAAaC,EAAAA,GAAAA,MAEbnmC,GAAUC,EAAAA,EAAAA,KACVC,IAAOC,EAAAA,GAAAA,MACP,SAAE8E,KAAaC,EAAAA,EAAAA,OACdmyC,GAAoBC,GAAsBC,KAA0Bh3C,EAAAA,EAAAA,IAAQ,IAC5Ei3C,GAA0BC,GAAWC,KAAcn3C,EAAAA,EAAAA,IAAQ,IAC3Do3C,GAAgBC,GAAkBC,KAAsBt3C,EAAAA,EAAAA,IAAQ,IAChEu3C,GAAcC,GAAgBC,KAAoBz3C,EAAAA,EAAAA,IAAQ,IAC1D03C,GAAmBC,GAAeC,KAAe53C,EAAAA,EAAAA,IAAQ,IACzD63C,GAAoBC,KAAyBpmC,EAAAA,EAAAA,KAAS,IACtDqmC,GAAqBC,GAAyBC,KAA6Bj4C,EAAAA,EAAAA,IAAQ,IACnF0jC,GAAoBwU,GAAsBC,KAA0Bn4C,EAAAA,EAAAA,IAAQ,GAE7EklB,IAAWnW,EAAAA,EAAAA,IAAyB,OACpC,eACJ60B,GAAc,QACdC,GAAO,eACPE,GAAc,UACdE,GAAS,eACT91B,GAAc,QACdjB,GAAO,QACPk3B,GAAO,cACPE,GAAa,aACbC,GAAY,aACZC,GAAY,YACZC,GAAW,SACXC,GAAQ,YACRC,GAAW,kBACXG,IACEvB,GAAcC,EAAOC,EAAsBC,IAEzCC,GAAgBH,GAAS,YAAaA,EACtC4U,GAAchnC,IAAWskC,EACzB2C,IAAc7kC,EAAAA,EAAAA,IAASpC,GACvBknC,IAAeD,GACfE,GAAiBD,KAAelhB,EAAAA,EAAAA,IAAcM,GAC9C6Z,GAAQ5N,IAAiBH,EAAM+N,MAE/BiH,IAAkBjJ,EAAAA,GAAAA,GACtBgC,IAAS/N,EAAMqH,iBAAcxqC,GAC7B,GAEIo4C,IAAsBlJ,EAAAA,GAAAA,GAC1BgC,GAAQ/N,EAAMqH,iBAAcxqC,GAC5B,GAEIq4C,GAAkBloC,QACtB+gC,IAAU/N,EAAO5M,KAAO+e,GAAuB/P,EAAAA,GAAAA,OAG3C+S,GAAqB3D,GAAgBxd,EAAAA,GAAAA,IAAa/3B,EAASu1C,GAC5DrR,IAAiBH,EAAMQ,aAAaiK,SAEnC2K,GAAcpoC,QAClBmzB,IACGH,EAAMwO,WACLoG,IACD1gB,GAAMmhB,WAAWt3C,QAGhBu3C,GAAWtoC,QACfmzB,IACGH,EAAMwO,WACLxO,EAAMoB,aACNwT,KACAV,IAGAqB,GAAevoC,QACnBi0B,KAAgBiQ,GAAoB6C,KAAiBT,KAAuBY,KACxEG,KAAuBE,IAGvBt6B,GAAWkmB,IAAiBH,EAAM3rB,QAAQ/P,OAAO2V,SACnD+lB,EAAM3rB,QAAQ/P,MAAM2V,cACpBpd,EAEE24C,KAAuBzH,IAAS8G,IAAiBD,IAAgBG,IAAmBjD,GACpF2D,GAAmBtV,KAAkBqV,KAAuBzH,IAASgH,IACrEte,GAAkBv1B,IAAYuwC,EAAsB,YAAc,QAGtEttB,aAAcuxB,GACdrxB,qBAAsBsxB,KACpBpxB,EAAAA,GAAAA,IAA6B0c,KAG/B5c,qBAAsBuxB,KACpBrxB,EAAAA,GAAAA,GAA4BvX,QAAQ8zB,KAElC+U,IAAWC,EAAAA,GAAAA,GAAcrV,IAAYS,IACrC6U,IAA8BC,EAAAA,GAAAA,GAA6BrrC,KAG/DwZ,aAAc8xB,GACd5xB,qBAAsB6xB,KACpB3xB,EAAAA,GAAAA,GAA4BixB,KAG9BrxB,aAAcgyB,GACd9xB,qBAAsB+xB,KACpB7xB,EAAAA,GAAAA,GAA4B8b,IAAW6T,KAEnC7vB,qBAAsBgyB,KAAkC9xB,EAAAA,GAAAA,IAA4B,IAE1FJ,aAAcmyB,GACdjyB,qBAAsBkyB,KACpBhyB,EAAAA,GAAAA,GAA4B8b,IAAWE,IAErCiW,IAAuBC,EAAAA,GAAAA,GAAa/0B,GAAUof,GAAe4V,GAAAA,IAEnEC,EAAAA,GAAAA,GAAkB/oC,EAAQy1B,IAE1B5mC,EAAAA,EAAAA,KAAU,KACJ4mC,GACFwP,EAAU,CAAEjlC,SAAQy1B,WACtB,GACC,CAACA,EAASz1B,KAEbnR,EAAAA,EAAAA,KAAU,KACRu2C,EAAuB,CAAEplC,UAAS,GACjC,CAACA,KAGJnR,EAAAA,EAAAA,KAAU,KACR,MAAMm6C,GAAW5mC,EAAAA,EAAAA,IAASpC,IACrB0kC,GAAesE,GAClBxD,EAAU,CAAE7kC,OAAQX,GACtB,GACC,CAAC0kC,EAAa1kC,KACjBnR,EAAAA,EAAAA,KAAU,KACJ61C,IAAgBC,GAClBY,EAAiB,CAAEvlC,UACrB,GACC,CAAC2kC,EAAuBD,EAAa1kC,IAExC,MAAMipC,IAAmBvoC,EAAAA,EAAAA,IAAgB,KACnC5E,IACFgY,GAAShW,SAASgZ,QAGpBovB,KACAH,IAAY,IAGRmD,IAAkBxoC,EAAAA,EAAAA,IAAgB,KACjCinC,KAEL7B,KACKhqC,IAASmqC,KAAkB,IAG5BkD,IAAuBzoC,EAAAA,EAAAA,IAAgB,KAC3CkmC,IAAyB,IAErBwC,IAAqB1oC,EAAAA,EAAAA,IAAgB,KACzCmmC,IAA2B,IAGvBwC,IAAyB3oC,EAAAA,EAAAA,IAAgB,KAC7ComC,KACAmC,IAAkB,IAGdK,IAA0B5oC,EAAAA,EAAAA,IAAgB,KAC9CqmC,KACAmC,IAAiB,KAIjB7L,YAAakM,GACbC,UAAWC,GACXC,aAAcC,GACdC,aAAcC,GACdC,WAAYC,KACVC,EAAAA,GAAAA,GAAa,CACfC,QAASd,GACT9T,MAAO+T,KAGH/yB,IAAgBC,EAAAA,GAAAA,GACpBxC,QACA7kB,GACC6M,KAAYo3B,IAAiB0V,IAG1BsB,GAAahX,MAAmBC,IAAgBC,KAEtDvkC,EAAAA,EAAAA,KAAU,KACJq7C,KAAe7zB,IAAe6yB,IAAiB,GAClD,CAACgB,GAAY7zB,MAEhB8zB,EAAAA,GAAAA,GAAkB9D,GAAkBD,KAEpCv3C,EAAAA,EAAAA,KAAU,KACHq7C,IACLp2B,GAAShW,SAASssC,MAAM,GACvB,CAACF,MAEJr7C,EAAAA,EAAAA,KAAU,MACH0jC,IAAiBC,IAAkB8U,KAEnCnH,IAAUgH,KAGf1B,EAAe,CAAEzlC,SAAQy1B,WAAU,GAClC,CAACjD,GAAgB8U,GAAiB/U,GAAevyB,EAAQy1B,EAAS0K,GAAOgH,MAE5Et4C,EAAAA,EAAAA,KAAU,KAENy0C,IAAqB6C,IAAgBT,IAClCY,IAAqBG,IAAsBE,GAE9CsC,KAEAC,IACF,GACC,CACDA,GAAiB/C,GAAcG,GAAmBZ,GAClDpC,EAAkBmD,GAAoBE,MAGxC93C,EAAAA,EAAAA,KAAU,KACR,KAAI62C,IAAsBpC,GAAoBgD,IAa9C,OAFA9vC,SAAS6S,iBAAiB,UAAW4O,GAE9B,KACLzhB,SAAS8S,oBAAoB,UAAW2O,EAAc,EAVxD,SAASA,EAAcjX,GArRL,KAsRZA,EAAEqpC,UACJrpC,EAAEkX,iBACFwuB,IAAuBD,IAE3B,CAMC,GACA,CAACH,GAAmBZ,GAAoBe,GAAoBnD,KAG/DrL,EAAAA,GAAAA,IAAsB,EACpBqS,EACAC,EACAC,EACAC,EACAC,OAGGjE,IAAsBH,IAAqBZ,IACzCpC,IAAqB6C,IAAgBQ,IAMxC4D,IAA0BjE,IACvBgE,IAA2B5E,IAC3B8E,IAAyBlH,GACzBmH,IAAqBtE,IACrBuE,IAA4B/D,IAE/BD,IAAsB,EACxB,GACC,CAAChB,GAAoBY,GAAmBhD,EAAkB6C,GAAcQ,GAAqBF,KAEhG,MAAMkE,IAAiBjqC,EAAAA,EAAAA,IAAgB,KACrCzL,IACA0nC,EAAS,CAAE7oC,GAAIkM,GAAS,IAGpB4qC,IAAyBlqC,EAAAA,EAAAA,IAAgB,KAC7CzL,IACA0nC,EAAS,CAAE7oC,GAAI8vC,EAAe9vC,IAAK,IAG/B+2C,IAAsBnqC,EAAAA,EAAAA,IAAgB,KAC1CzL,IACA0nC,EAAS,CAAE7oC,GAAIgwC,EAAUhwC,IAAK,IAG1Bg3C,IAAsBpqC,EAAAA,EAAAA,IAAgB,KAC1CykC,GAAmB,IAGf4F,IAAsBrqC,EAAAA,EAAAA,IAAgB,KAC1C60B,GAAe,IAGXyV,IAA6BtqC,EAAAA,EAAAA,IAAiBM,IAClD,MAAMtK,EAAQsK,EAAEmW,cACZzgB,EAAM0gB,YAAc8qB,GACtB+D,KAEAC,KAEE75B,KAAYpG,EAAAA,GAAAA,IAAMvP,EAAMyU,YAAa,KAAMlF,EAAAA,GAAAA,IAAMoG,GAAU,IAC7D0+B,IACF,KAGFl8C,EAAAA,EAAAA,KAAU,IACAk2C,KAAqBW,QAGxBz2C,GAH6Cg8C,EAAAA,GAAAA,GAAyB,CACzEC,QAASH,GACTI,OAAQL,MAET,CAAC/F,EAAgBW,KAEpB,MAAM0F,IAAsB1qC,EAAAA,EAAAA,IAAgB,KAC1C2kC,EAAc,CAAErlC,SAAQy1B,WAAU,IAG9B4V,IAAiB3qC,EAAAA,EAAAA,IAAgB,KACrCu4B,EAAqB,CAAEj5B,SAAQy1B,UAASgE,aAAa,GAAO,IAGxD6R,IAAmB5qC,EAAAA,EAAAA,IAAgB,KACvCu4B,EAAqB,CAAEj5B,SAAQy1B,UAASgE,aAAa,GAAQ,IAGzDjE,IAAyB90B,EAAAA,EAAAA,IAAgB,KAC7CskC,EAAS5S,EAAO,IAGZmZ,IAAyB7qC,EAAAA,EAAAA,IAAgB,KAC7C0D,GAAU,IAGN+8B,IAAqBzgC,EAAAA,EAAAA,IAAgB,KACzC0nB,EAAgB,CAAE4F,WAAYhuB,EAAQy1B,WAAU,IAG5C+V,IAAwB9qC,EAAAA,EAAAA,IAAgB,KAC5C4kC,GAAwB,IAGpBmG,IAAyB/qC,EAAAA,EAAAA,IAAgB,KAC7C,MAAMm4B,GAActG,IAAiBH,EAAMwO,cACvC3xC,EACAmjC,EAAMsZ,cAAgB,WAActZ,EAAMuZ,kBAAoB,eAAiB,SAEnF,IAAI70C,EACJ,MAAM80C,GAASxlB,EAAAA,GAAAA,IAAa/3B,EAASi4B,GACrC,OAAQuS,GACN,IAAK,SACH/hC,EAAUzI,EAAQ,4BAA6Bu9C,GAC/C,MACF,IAAK,WACH90C,EAAUzI,EAAQ,oBAAqBu9C,GACvC,MACF,IAAK,eACH90C,EAAUzI,EAAQ,wBAAyBu9C,GAC3C,MACF,QACE,OAEJzX,EAAiB,CAAEr9B,WAAU,IAGzB2gB,IAAoB/W,EAAAA,EAAAA,IAAgB,KACpCsyB,GACFmB,EAAiB,CACfr9B,QAASzI,EAAQ,mCAKrBylB,GAAShW,QAAS4Z,OAAS5D,GAAShW,QAAS4Z,MAC7CwtB,EAAoB,CAAEh0B,SAAUA,IAAU,IAGtC26B,IAAyBnrC,EAAAA,EAAAA,IAAgB,KAC7C,GAAImzB,EAAYiY,cAAetX,EAAAA,GAAAA,MAAkBX,EAAYiY,YAA7D,CACE,MAAMC,EAAOlY,EAAYiY,aAActX,EAAAA,GAAAA,MACvCL,EAAiB,CACf3+B,MAAOnH,EAAQ,iBACfyI,QAASzI,EAAQ,oCAAoC2gB,EAAAA,GAAAA,IAAoB+8B,IACzE1/B,SA1amC,KA6avC,MAEA4nB,EAAmB,CAAEx/B,QAAQ,GAAO,IAGhCu3C,IAAiBtrC,EAAAA,EAAAA,IAAgB,KAChCgzB,KACL9sB,EAAAA,GAAAA,GAAS8sB,GAAoB,SAAQ1zB,KAAUy1B,KAAW35B,GAAU,MAAQ,QAAQ,KAGtFjN,EAAAA,EAAAA,KAAU,KACH2jC,IAEL2B,EAAiB,CACfr9B,QAASzI,EAAQ,kBACjB,GACD,CAACA,EAASmkC,KAEb,MAAMzsB,IAA8D/W,EAAAA,EAAAA,KAAQ,IACnE,EAAGgX,YAAWvR,YAEjBrE,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLuM,QAASlf,GACTvB,KAAK,OACL0P,MAAM,oBACNrT,QAAS4X,EACTjY,WAAWuC,EAAAA,GAAAA,GAAeC,GAAekE,GAAU,UACnDyR,UAAW7X,EAAQ,sBAEnB+B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAIhB,CAACW,GAAUjF,IAoMR49C,GAAmBjI,EACrBz1C,GAAK,+BAAgC,CACrC2D,QAAQg6C,EAAAA,GAAAA,GAAkB39C,GAAMy1C,EAAmB,CAAEmI,QAAQ,EAAMp+C,UAAW,2BAC7E,CACDq+C,WAAW,IAEX/9C,EAAQ64C,GAAc,oBAAsB,kBAEhD,OACE92C,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAmB,wBAC7C8sC,YAAakM,GACbC,UAAWC,GACXC,aAAcC,GACdC,aAAcC,GACdC,WAAYC,IAEZ35C,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GnBpxB0S,WmBoxBvQm4C,KAjNnDr4C,EAAAA,GAAAC,cAAA,OAAKtC,UnBnkBypB,amBokB1pBivC,EAAgB,CAACvH,GAAW2O,GAAc,IAAI5zC,KAAKsD,GACnD1D,EAAAA,GAAAC,cAACg8C,GAAa,CACZj7C,IAAM,YAAW0C,IACjBhG,SAAUgG,IAAOs+B,GAAOt+B,GACxBgI,QAASA,GACT8lC,SAAUxiC,QAAQgzB,GAAOt+B,KAAQgxC,GAAoBD,EAAqB/wC,EAAKs+B,GAAOt+B,GAAKA,EAAKs+B,GAAOt+B,KACvG+tC,UAAWmE,GACX35B,SAAUA,GACVy1B,gBAAiBiJ,QA6GvB36C,EAAAA,GAAAC,cAAA,OAAKtC,UnBzrB6qB,YmB0rBhrBqC,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CAACC,UAAW1X,OAAO/X,GAASrN,KAAMk2B,GAAiB96B,UnB1rBopB,YmBsoBptBqC,EAAAA,GAAAC,cAAA,OAAKtC,UnBtoBuuB,YmBuoB1uBqC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLC,KAAMA,EACNv0B,KAAK,OACL3D,QAASu8C,KAEXv6C,EAAAA,GAAAC,cAAA,OAAKtC,UnB5oB6vB,YmB6oBhwBqC,EAAAA,GAAAC,cAAA,QAAMjC,QAASu8C,GAAgB58C,UnB7oByvB,amB8oBrxBqE,EAAAA,GAAAA,IAAWg0B,EAAAA,GAAAA,IAAa/3B,EAASi4B,IAAS,KAE7Cl2B,EAAAA,GAAAC,cAAA,OAAKtC,UnBhpB6yB,YmBipB/yBw5C,IACCn3C,EAAAA,GAAAC,cAAA,QACEtC,WAAWuC,EAAAA,GAAAA,GACTC,GnBppBu3C,WmBopB/0CqzC,GnBppBs2C,YmBspBh5Cx1C,QAASw1C,EAAgBgH,QAAyB37C,GAElDmB,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,SACXvC,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,KACd6B,EAAAA,GAAAA,GAAWm1C,MAIjBzD,GACC1zC,EAAAA,GAAAC,cAAA,QACEtC,WAAWuC,EAAAA,GAAAA,GACTC,GnBjqBs9C,YmBmqBx9CnC,QAASy8C,IAETz6C,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACC,KAAMwd,EAAU/xC,KAAK,UAC7B3B,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,KACd6B,EAAAA,GAAAA,IAAWg0B,EAAAA,GAAAA,IAAa/3B,EAASy1C,IAAa,MAIpD1R,GAAS,SAAUA,GAClBhiC,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,KAAmB+7C,EAAAA,GAAAA,IAAuBj+C,EAASkmC,EAAYnC,EAAM5M,OAEvF+M,IAAiBH,EAAMma,UACtBn8C,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,IAAmBlC,EAAQ,2BAelD+B,EAAAA,GAAAC,cAAA,OAAKtC,UnB9rBo3B,YmBmlB/3B,WACE,IAAKk5C,GAAa,OAElB,IAAIuF,EAAwB,iBAC5B,MAAMC,EAA6C,CACjD,iBAAkB,CAAC,UAAW,WAC9B,cAAe,CAAC,UAAW,WAC3B,kBAAmB,CAAC,UAAW,WAC/B,eAAgB,CAAC,UAAW,YAG9B,GAAItM,GAAO,CACT,MAAM,WAAEtH,GAAgBzG,GAAS,eAAgBA,GAASA,EAAMyG,YAAe,CAAC,EAEhF,OAAQA,GACN,IAAK,YACH2T,EAAc,iBACd,MACF,IAAK,WACHA,EAAc,cACd,MACF,IAAK,eACHA,EAAc,kBACd,MACF,IAAK,SACHA,EAAc,eAEpB,KAAO,CACL,IAAKpa,KAAW,YAAaA,IAAUA,EAAMwO,SAC3C,OAGF4L,EAAcpa,EAAMuZ,kBAChB,kBACCvZ,EAAMsZ,cAAgB,cAAgB,cAC7C,CAEA,OACEt7C,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GnB1nBg6B,WmB0nBx3B6vC,InB1nB05B,YmB2nB78B/xC,QAAS+xC,GAAQqL,GAAwBC,GACzCpxC,MAAQ,iBAAgBoyC,EAASD,GAAa,mBAAmBC,EAASD,GAAa,MAEvFp8C,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAM65C,IACXrM,IAAS/vC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,SAG3B,CA6DS+5C,GACA5wC,IACC1L,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAWwC,GACX0V,OAAK,EACLuM,QAASlf,GACTvB,KAAK,OACL0P,MAAM,oBACNwR,UAAWogB,GACXjlC,QAASqpB,GACTvR,UAAW7X,EAAQ,WAEnB+B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAOue,GAAW8hB,GAAW,sBAAwB,mBAG/D5iC,EAAAA,GAAAC,cAACyW,GAAAA,EAAY,CACX/Y,UnB/sBq/B,WmBgtBr/BgZ,QAAShB,GACTiB,UAAU,QACV2lC,OAAQtD,GACRp0C,QAASq0C,IAER9B,IAAep3C,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,OAAOnH,QAASg9C,IAAsB/8C,EAAQ,aAC5E+4C,IACCh3C,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,aAAanH,QAASi9C,IAClCh9C,EAAQ44C,GAAc,YAAc,gBAGxCI,IACCj3C,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,SAASnH,QAASk9C,IAC9Bj9C,EAAQ44C,GAAc,eAAiB,oBAG3C1T,IACCnjC,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,WAAW0d,UAAWygB,GAAmBtlC,QAAS49C,IAC9D39C,EAAQ,wBAGX8xC,IAAS8G,IACT72C,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,sBAAsBnH,QAASy9C,IAC3Cx9C,EAAQ,iBAGX8xC,IAAS/vC,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,OAAOnH,QAASm9C,IAAyBl9C,EAAQ,qBAC1E8xC,IACC/vC,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,SACLsR,aAAW,EACXzY,QAASonC,IACTnnC,EAAQ,YAId+B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GAAeC,GnBrvBs0B,YmBsvBh2B0V,OAAK,EACLlU,KAAK,OACL0P,MAAM,oBACNyE,UAAW7X,EAAQ,SACnBD,QAAS6G,GAET7E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,cA6BjBvC,EAAAA,GAAAC,cAAA,OACEtC,UnB1xB0mB,WmB2xB1mBsM,MAAQ,UAASsF,EAAW5B,oBAAoB4B,EAAWvB,YAE3DhO,EAAAA,GAAAC,cAAA,UAAQmX,IAAKygC,GAAUl6C,UAAWwC,KACjCwM,IACC3M,EAAAA,GAAAC,cAAA,OACEe,IAAM,WAAUqkC,IAChBr9B,IAAK2E,GACL9E,WAAW,EACXijB,IAAI,GACJntB,WAAWuC,EAAAA,GAAAA,GAAeC,GnBpyB+Y,WmBoyB5W43C,MAGhEL,IACC13C,EAAAA,GAAAC,cAACu8C,GAAAA,EAAQ,CAAC7+C,WAAWuC,EAAAA,GAAAA,GAAey3C,GAA8Bx3C,OAElEuL,IAAWo3B,IACX9iC,EAAAA,GAAAC,cAAA,OACE+H,IAAK86B,GACLhY,IAAI,GACJntB,WAAWuC,EAAAA,GAAAA,GAAeC,GAAcy3C,IACxC/vC,WAAW,IAGd6D,IAAWo3B,IACV9iC,EAAAA,GAAAC,cAACw8C,GAAAA,EAAc,CACbrlC,IAAKsM,GACL1iB,IAAM,SAAQqkC,IACd1nC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAcy3C,IACxC8E,QAASjH,GACTnuB,MAAOxG,EACPnT,MjBtzBoB,IiBuzBpBK,OjBtzBqB,KiBuzBrBnG,WAAW,EACX4gB,aAAW,EACX5D,yBAAuB,EACvB83B,YAAU,EACV7zB,QAASgtB,GACTntB,UAAWmtB,GACX8G,uBAAqB,EACrB7zB,aAAc6xB,IAEd56C,EAAAA,GAAAC,cAAA,UAAQ+H,IAAK86B,GAAephC,KAAMg3C,GAAAA,EAAoB/qC,MAAM,QAC3Dq1B,IAAgBhjC,EAAAA,GAAAC,cAAA,UAAQ+H,IAAKg7B,GAActhC,KAAMm7C,GAAAA,EAAsBlvC,MAAM,UAIhF4oC,KAAwBjB,IACxBt1C,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,UACEyB,KAAK,SACL/D,WAAWuC,EAAAA,GAAAA,GAAeC,GnB70B2sC,YmB80BruCnC,QAAS08C,GACT,aAAYz8C,EAAQ,cAEtB+B,EAAAA,GAAAC,cAAA,UACEyB,KAAK,SACL/D,WAAWuC,EAAAA,GAAAA,GAAeC,GnBn1B6tC,YmBo1BvvCnC,QAAS28C,GACT,aAAY18C,EAAQ,WAIzBkkC,IAAiBW,IAChB9iC,EAAAA,GAAAC,cAAC68C,GAAAA,EAAgB,CACf97C,IAAM,gBAAeqkC,KAAWz1B,IAChCoyB,MAAOA,EACPtkC,UAAQ,EACRk4C,eAAgB1T,MAGlBh/B,IACAlD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLC,KAAMA,EACN6mB,WAAS,EACTC,gBAAgB,aAElBh9C,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KAAc6B,EAAAA,GAAAA,IAAWg0B,EAAAA,GAAAA,IAAa/3B,EAASi4B,IAAS,QAM/EuhB,IACCz3C,EAAAA,GAAAC,cAAC0vC,GAAW,CAAC3N,MAAOA,EAAOrkC,UAAW06C,KAEvCF,IACCn4C,EAAAA,GAAAC,cAAA,OACE+qC,SAAU,EACVC,KAAK,SACLttC,WAAWuC,EAAAA,GAAAA,GnBt3B2E,WmBs3BpCk4C,IAClDp6C,QAASA,IAAMo4C,KACf,aAAYn4C,EAAQ,WAGvBokC,IAAWriC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GnB33BsW,WmB23B/Tq4C,MAClED,IACCt4C,EAAAA,GAAAC,cAACg9C,GAAY,CACXj8C,IAAM,WAAUqkC,KAAWz1B,IAC3BoyB,MAAOA,EACPwL,WAAY0I,GACZzI,SAAU0I,GACVzI,OAAQ0I,GACRz4C,UAAW46C,KAGdN,IACCj4C,EAAAA,GAAAC,cAACi9C,GAAAA,EAAQ,CACPx7C,KAAK,QACL6O,OAAQX,EACRkD,SAAUqqC,EAAAA,GACV9X,QAASA,EACTlpB,SAAU4zB,GACVn8B,gBAAgB,SAChB1Q,UAAUk6C,EAAAA,EAAAA,MACVC,yBAA0BC,EAAAA,IAC1BC,gBAAiBC,EAAAA,IACjBC,QAAQ,mBACR9/C,WAAWuC,EAAAA,GAAAA,GnBl5BiU,WmBk5BjSg4C,IAC3C2D,iBAAkBA,GAClB1nC,UAAWmjC,GAAWvG,QAAqBlyC,EAC3C6+C,QAASnI,GACToI,OAAQnI,KAKlB,KC5zBA,IAAeh4C,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAqB,CAACC,GAAUgkB,WAClD,MACEqN,aAAa,oBACXqa,EAAmB,OACnBr2C,EAAM,UACNirC,KAEAlgC,EAAAA,EAAAA,KAAeJ,GAEnB,MAAO,CACL2rC,aAAc3nB,GAAMxyB,GAAKk6C,IAAsB1nB,EAAKxyB,SAAM7E,EAC1D0I,SACAu2C,kBAAmB5nB,GAAMxyB,GAAK8uC,GAAWyB,iBAAiB/d,EAAKxyB,SAAM7E,EACtE,GAbiBoT,EAhEpB,UAAsB,KACpBikB,EAAI,YAAE6nB,EAAW,aAAEF,EAAY,kBAAEC,EAAiB,OAAEv2C,IAEpD,MAAM,gBAAE8kC,EAAe,uBAAE2I,IAA2BjlC,EAAAA,EAAAA,MAC9C5R,GAAOD,EAAAA,EAAAA,KAEP8jC,GAAQpjC,EAAAA,EAAAA,KAAkC,KAC9C,IAAKm/C,EACH,OAGF,MAAM,WACJ/J,EAAU,WAAEgK,EAAU,KAAErV,GACtBoV,EACEE,EAAmBjK,EAAWA,EAAWj0C,OAAS,KAAOi+C,EACzDE,EAAiBL,GAAgBC,GAAmB3rB,SAAS0rB,GAC/DA,IAAiBI,EAAoBD,IAAe,GAAM,IACzD,EAGL,OAAOrV,EAFUA,EAAKuV,IAAiBx6C,IAAMo6C,IAAoB,IAAM9J,EAAW,GAE7D,GACpB,CAAC6J,EAAcE,EAAaD,IAEzBK,EAAWnc,GAAS,YAAaA,GAEvCvjC,EAAAA,EAAAA,KAAU,KACJujC,IAAUmc,GACZnJ,EAAuB,CAAEplC,OAAQoyB,EAAMpyB,QACzC,GACC,CAACoyB,EAAOmc,IAEX,MAAM73C,EAAQ63C,EAAWnc,EAAM3rB,QAAQ/P,WAAQzH,EACzCu/C,EAAYD,GAAWxb,EAAAA,EAAAA,IAAkBX,QAASnjC,EAElDw/C,GADa9xC,EAAAA,EAAAA,GAAS6xC,IACG93C,GAAOm8B,WAAWp1B,QAEjD,GAAK6oB,GAAS8L,KAAS,cAAeA,GAItC,OACEhiC,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,GACXnC,QAASA,KAAQquC,EAAgB,CAAEz8B,OAAQoyB,EAAMpyB,OAAQy1B,QAASrD,EAAMt+B,GAAI6D,UAAS,GAEpF82C,GACCr+C,EAAAA,GAAAC,cAAA,OAAK+H,IAAKq2C,EAAUvzB,IAAI,GAAGntB,UAAWwC,GAAc0H,WAAW,IAEhEs2C,GAAYn+C,EAAAA,GAAAC,cAAC68C,GAAAA,EAAgB,CAAC9a,MAAOA,IAEtChiC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLC,KAAMA,EACN6mB,WAAS,EACTC,gBAAgB,aAElBh9C,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KAAc6B,EAAAA,GAAAA,IAAWg0B,EAAAA,GAAAA,IAAa73B,EAAM+3B,IAAS,OAK/E,KC9BkC,IAE7B7K,GAAc,SAAdA,GAAc,OAAdA,EAAAA,EAAc,2BAAdA,EAAAA,EAAc,uBAAdA,CAAc,EAAdA,IAAc,IAmZnB,UAAe7tB,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACxC,MACEqxB,aACE3zB,OAAQ0uC,EAAejZ,QAASkZ,EAAc,aAAEC,EAAY,cAAE5R,EAAa,UAAE6R,EAAS,UAAEC,EAAS,UAAElM,KAEnGlgC,EAAAA,EAAAA,KAAeJ,IACb,SAAEysC,EAAUC,gBAAgB,OAAE79C,IAAamR,EAAOwxB,QAExD,MAAO,CACLib,WACAE,QAASrM,GAAWqM,SAAW99C,EAC/Bu9C,gBACAC,iBACAC,eACA5R,gBACA6R,YACAC,YACD,IACCxsC,IAAW4sC,EAAAA,EAAAA,KAAwB5sC,IAlBnBD,EA9YpB,UAAqB,QACnB4sC,EAAO,cACPP,EAAa,eACbC,EAAc,OACdl6C,EAAM,aACNm6C,EAAY,cACZ5R,EAAa,UACb6R,EAAS,UACTC,EAAS,SACTC,EAAQ,kBACRvqC,EAAiB,SACjBwgC,EAAQ,QACR/vC,EAAO,SACPmP,IAEA,MAAM,mBAAE+qC,IAAuBhvC,EAAAA,EAAAA,MAEzB6b,GAAere,EAAAA,EAAAA,IAAuB,OACrCyxC,EAAiBC,IAAsB/uC,EAAAA,EAAAA,IAASouC,IAChDY,EAAkBC,IAAuBjvC,EAAAA,EAAAA,IAASquC,GACnDa,GAAa5mB,EAAAA,EAAAA,GAAsB8lB,GACnCe,GAAqBtR,EAAAA,GAAAA,GAAiB2Q,GAAW,GACjDY,GAAqBvR,EAAAA,GAAAA,GAAiB0Q,GAAW,GACjDc,GAAwBxR,EAAAA,GAAAA,GAAiByQ,GAAc,GACvDgB,GAAyBzR,EAAAA,GAAAA,GAAiBnB,GAAe,GACzD6S,EAAaze,MACXhzB,OAAQmf,EAAcxf,MAAOyf,IAAgBE,EAAAA,GAAAA,KAC/ClB,GAAoB7e,EAAAA,EAAAA,SAAmC1O,GACvDytB,GAAgB/e,EAAAA,EAAAA,KAAO,IACvB,SAAErK,IAAaC,EAAAA,EAAAA,MAEfu8C,GAAanyC,EAAAA,EAAAA,IAA2D,CAAC,IACxEonC,EAAgBgL,IAAkB3iC,EAAAA,EAAAA,KAAU,GAQnD,SAAS4iC,EAAOxoC,EAA4BxH,GACrCwH,IAGAsoC,EAAWhyC,QAAQkC,GAGtB8vC,EAAWhyC,QAAQkC,GAAQlC,QAAU0J,EAFrCsoC,EAAWhyC,QAAQkC,GAAU,CAAElC,QAAS0J,GAI5C,EAfAmW,EAAAA,GAAAA,GAAe,CACb7vB,SAAU2G,EACVmpB,OAAQ3oB,EACR4oB,kBAAkB,IAcpB,MAAMoyB,GAAmBjhD,EAAAA,EAAAA,KAAQ,KAC/B,GAAIogD,IAAoBO,GAAyBC,GAC/C,MAAO,CAACR,GAGV,MAAMx/C,EAAQw/C,EAAkBH,EAAQpgB,QAAQugB,IAAoB,EACpE,IAAKA,IAA8B,IAAXx/C,EACtB,MAAO,GAGT,MAAM4gB,EAAQxgB,KAAKZ,IAAIQ,EAAQ,EAAG,GAC5B6gB,EAAMzgB,KAAKC,IAAIL,EAAQ,EAAGq/C,EAAQ9+C,QAExC,OAAO8+C,EAAQiB,MAAM1/B,EAAOC,EAAI,GAC/B,CAACm/B,EAAwBD,EAAuBP,EAAiBH,IAE9DkB,GAAwBnhD,EAAAA,EAAAA,KAAQ,IAC/BihD,EAAiB9/C,QAAWi/C,EAI1Ba,EAAiBphB,QAAQugB,IAHtB,GAIT,CAACA,EAAiBa,IAEfG,GAAsBphD,EAAAA,EAAAA,KAAQ,IAC7BihD,EAAiB9/C,QAAWu+C,EAG1BuB,EAAiBphB,QAAQ6f,IAFtB,GAGT,CAACA,EAAeuB,KAEnBphD,EAAAA,EAAAA,KAAU,KACHyE,GAGL+7C,EAAmBX,EAAc,GAChC,CAACA,EAAep7C,KAGnBzE,EAAAA,EAAAA,KAAU,KACJugD,IAAoBV,GAAiBC,IAAmBW,GAC1DC,EAAoBZ,EACtB,GACC,CAACD,EAAeC,EAAgBS,EAAiBE,KAEpDzgD,EAAAA,EAAAA,KAAU,KACR,IAAIyE,EAKJ,OAJIk8C,GAAcA,IAAed,GAC/BqB,GAAe,GAGV,KACLA,GAAe,EAAM,CACtB,GACA,CAACP,EAAYd,EAAeqB,EAAgBz8C,KAE/CzE,EAAAA,EAAAA,KAAU,IACD,KACA8/C,GAAmBD,GACxBS,EAAmB,CACjBtO,aAAaC,EAAAA,EAAAA,IAAY4N,EAAeC,IACxC,GAEH,CAACA,EAAgBD,IAEpB,MAAM9d,EAAcwf,EAAsBD,EACpCpf,EAAaof,EAAwBC,EAErCC,GAAsB3vC,EAAAA,EAAAA,IAAgB,IACnCuuC,EAAQ9/C,QAA+B,CAACmhD,EAAYtwC,EAAQpQ,KACjE,GAAIoQ,IAAWovC,EACbkB,EAAWtwC,GAAU2wB,GAAiB,CACpCpU,MAAOszB,EAAWtzB,MAClBqU,cACAG,aACAF,kBAAmBE,QAEhB,CACL,IAAID,GAA2B,GAC1BC,GAAcnhC,EAAQ,GAAKq/C,EAAQr/C,EAAQ,KAAOw/C,IACrDte,GAA2B,GAEzBC,GAAcnhC,EAAQq/C,EAAQ9+C,OAAS,GAAK8+C,EAAQr/C,EAAQ,KAAOw/C,IACrEte,GAA2B,GAG7Bwf,EAAWtwC,GAAU2wB,GAAiB,CACpCpU,MAAOszB,EAAWtzB,MAClBqU,cACAG,aACAF,kBAAmB6d,IAAkB1uC,IAAW+wB,EAChDD,4BAEJ,CAEA,OAAOwf,CAAU,GAChB,CAAC,MAGNzhD,EAAAA,EAAAA,KAAU,KACR,IAAKmtB,EAAale,UAAYrJ,EAC5B,OAGF,IAAIyuB,EAAU,EAEd,MAAMqtB,EAAqBA,IAClBnB,EAAkBU,EAAWhyC,QAAQsxC,IAAkBtxC,aAAU7O,EAGpEkhB,EAAaqR,IAGjB,GAAI9E,EAAc5e,QAEhB,YADA4e,EAAc5e,SAAU,GAG1B,MAAMA,EAAUyyC,IAChB,GAAKzyC,EAEL,GAAIolB,GAnLgB,GAmLpB,CACE,MAAMstB,EAAWh6C,SAASi2B,eAAemhB,EAAAA,KACrC4C,IACFjlC,EAAAA,EAAAA,KAAgB,MACdklC,EAAAA,GAAAA,GAAqBD,EAAS,GAIpC,MAEIttB,EA7LgB,IA8LlBjuB,IACmB,UAAfusB,EAAM1vB,QACR4+C,EAAAA,GAAAA,MACAxxC,WAAWyxC,GAAAA,GAhMQ,SAmMrBplC,EAAAA,EAAAA,KAAgB,KACdzN,EAAQzD,MAAM4kC,YAAY,sBAAuB,MAAM,GAE3D,EAGF,OAAOjvB,EAAAA,GAAAA,IAAcgM,EAAale,QAAS,CACzCkjB,cAAc,EACdC,gBAAgB,EAChBK,eAAe,EACfJ,wBAAyB,YACzB9Q,OAAQA,CAACoR,EAAOC,GACdC,cAAaC,kBAEb,GAAIjF,EAAc5e,QAAS,OAE3B,GAAIiM,EAAAA,IAAgC,eAAtB0X,EAAa3vB,KAAuB,CAChD,MAAM,MAAEwd,GAAWmS,EAAgCjS,QAAQ,GAC3D,GAAIF,GAASuS,GAAAA,IAA6BvS,GAASkO,EAAcqE,GAAAA,GAC/D,MAEJ,CACA,GAAmB,cAAfL,EAAM1vB,KAAsB,OAChC,MAAMgwB,EAAa9xB,KAAKswB,IAAIoB,GACtBK,EAAa/xB,KAAKswB,IAAIqB,GACtB7jB,EAAUyyC,IAChB,GAAKzyC,IAED0e,EAAkB1e,UAAY2d,GAAeuG,UAC5ChyB,KAAKswB,IAAIyB,GAAcG,GAAAA,IAA6BH,EAAaD,EAAaK,GAAAA,IAA2B,CAC5G3F,EAAkB1e,QAAU2d,GAAeuG,SAC3C,MAAMI,EAAQ7E,EACd2F,GAAUxT,EAAAA,GAAAA,IAAMiS,GAAcS,EAAOA,GACjCc,EAAU,IACZ3X,EAAAA,EAAAA,KAAgB,KACdzN,EAAQzD,MAAM4kC,YAAY,sBAA0B/b,GAAW5vB,EAAW,GAAK,GAA7B,KAAoC,IAGvE,UAAfkuB,EAAM1vB,MAAoB9B,KAAKswB,IAAI4C,GAAWZ,MAChDnS,EAAUqR,GACV9E,EAAc5e,SAAU,EAE5B,GAEFqS,aACA,GACD,CAAC1b,EAAQQ,EAASuoB,EAAaD,EAAcjqB,EAAU87C,KAE1DvgC,EAAAA,EAAAA,KAAgB,KACd,GAAIvb,EAAU,OACd,MAAMg9C,EAAaD,IAEnBO,OAAOC,QAAQf,EAAWhyC,SAASnO,SAAQ,EAAEqQ,GAAUlC,eACrD,IAAKA,EAAS,OAEd,IAAKinC,IAOH,OANAjnC,EAAQjG,UAAUsa,OAAO5hB,GAAuBA,GAA+BA,IAC/EuN,EAAQzD,MAAM4kC,YAAY,sBAAuB,OACjDnhC,EAAQzD,MAAM4kC,YAAY,sBAAuB,OACjDnhC,EAAQzD,MAAM4kC,YAAY,0BAA2B,UACrDnhC,EAAQzD,MAAM4kC,YAAY,wBAAyB6R,OAAOjB,EAAW7d,gBAevE,IAAI9O,EAAU,EACVljB,IAAWovC,IACblsB,GAlRqC,KAkRa2sB,EAAW5d,gBAC7Dn0B,EAAQjG,UAAUC,IAAIvH,KAEpByP,IAAW0uC,IACbxrB,EAtRqC,KAuRrCplB,EAAQjG,UAAUC,IAAIvH,KAGxBuN,EAAQjG,UAAUC,IAAIvH,IACtBuN,EAAQzD,MAAM4kC,YAAY,sBAAwB,GAAEqR,EAAWtwC,IAAW,OAC1ElC,EAAQzD,MAAM4kC,YAAY,sBAAwB,GAAE/b,QACpDplB,EAAQzD,MAAM4kC,YAAY,0BAtBpByP,IAAkB1uC,EACb8wC,OAAOjB,EAAW7d,eAEvBhyB,IAAWovC,EACN0B,OAAOjB,EAAW5d,iBAEpB,IAgBuD,GAChE,GACD,CAACyc,EAAe3J,EAAgBqK,EAAiBS,EAAYv8C,IAEhE,MAAMy9C,GAAsBrwC,EAAAA,EAAAA,IAAiB8gB,IAE3C,MAAMvgB,EAASugB,EAAMvgB,OAEhBA,GAAWA,EAAOpJ,UAAUw0B,SAAS97B,MAEtC6+C,IAAoBV,GACtBW,EAAmBX,GACnBa,EAAoBZ,IACXA,IAAmBW,GAC5BC,EAAoBZ,GAEtBoB,GAAe,GAAM,IAGvB,OAAIz8C,EAEAlD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAgBiX,IAAKwU,GACnC5rB,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,GACXiX,IAAMA,GAAQwoC,EAAOxoC,EAAK4nC,IAE1Bh/C,EAAAA,GAAAC,cAAC2gD,GAAK,CACJhxC,OAAQovC,EACR3Z,QAAS6Z,EACTtK,SAAUA,EACVrlC,WAAYkwC,EAAW/d,YACvBgT,iBAAkB4K,EAClB7K,kBAAmB4K,EACnBjrC,kBAAmBA,EACnBw4B,cAAeA,EACf+H,eAAgBA,EAChB9vC,QAASA,EACTmP,SAAUA,MAgElBhU,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,GACXiX,IAAKwU,EACL3hB,MAAQ,yBAAwBw1C,EAAWtzB,QAC3C00B,gBAAiBF,GAEjB3gD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAiBnC,QAAS6G,IACzCg7C,EAAiB9/C,OAAS,GACzBC,EAAAA,GAAAC,cAAA,OAAKtC,UrBvcuH,WqBuc7EsM,MAAQ,WAAUw1C,EAAW9d,MAAM3zB,aAEnF6xC,EAAiBz/C,KAAI,CAACwP,EAAQpQ,IACzBoQ,IAAWovC,EA1CrB,SAAqBpvC,GACnB,MAAM3F,EAAQ/G,OAAWrE,GAAYiiD,EAAAA,GAAAA,GAClC,UAASrB,EAAW/d,YAAY/zB,UAChC,yBAAwB8xC,EAAW/d,YAAY1zB,YAGlD,OACEhO,EAAAA,GAAAC,cAAA,OACEe,IAAK4O,EACLwH,IAAMA,GAAQwoC,EAAOxoC,EAAKxH,GAC1BjS,WAAWuC,EAAAA,GAAAA,GAAeC,GAAcA,IACxC8J,MAAOA,GAEPjK,EAAAA,GAAAC,cAAC2gD,GAAK,CACJhxC,OAAQA,EACRy1B,QAAS6Z,EACTtK,SAAUA,EACVrlC,WAAYkwC,EAAW/d,YACvBgT,iBAAkB4K,EAClB7K,kBAAmB4K,EACnBjrC,kBAAmBA,EACnBw4B,cAAeA,EACf+H,eAAgBA,EAChB9vC,QAASA,EACTmP,SAAUA,IAIlB,CAee+sC,CAAY/B,GArE3B,SAA4BpvC,EAAgBpQ,EAAeyiB,GACzD,MAAMhY,GAAQ62C,EAAAA,GAAAA,GACX,UAASrB,EAAW9d,MAAMh0B,UAC1B,WAAU8xC,EAAW9d,MAAM3zB,YAExBrQ,GAAYuC,EAAAA,GAAAA,GAChBC,GrB5YiiB,WqB8YhiB,SAAQ8hB,KAGX,OACEjiB,EAAAA,GAAAC,cAAA,OACEe,IAAK4O,EACLwH,IAAMA,GAAQwoC,EAAOxoC,EAAKxH,GAC1BjS,UAAWA,EACXsM,MAAOA,GAEPjK,EAAAA,GAAAC,cAAC+gD,GAAY,CACX9qB,MAAMQ,EAAAA,EAAAA,MAAWka,EAAAA,EAAAA,MAAahhC,GAC9BmuC,YAAaY,IAAW/uC,KAIhC,CAgDaqxC,CAAmBrxC,EAAQpQ,EAAOA,EAAQugD,KAIzD,KC7ce,SAASmB,GAAiBC,EAFvB,GAGhB,MAAOC,EAAeC,IAAoBnxC,EAAAA,EAAAA,KAAS,IAC5CoxC,EAASC,IAAcrxC,EAAAA,EAAAA,KAAS,GASvC,MAAO,CAAEkxC,gBAAeE,UAASE,cAPZlxC,EAAAA,EAAAA,IAAiBM,IACpC,MAAM,aAAE6wC,EAAY,UAAE7kB,EAAS,aAAE/jB,GAAiBjI,EAAEC,OAEpDwwC,EAAiBzkB,EAAYukB,GAC7BI,EAAWE,EAAe7kB,EAAY/jB,EAAesoC,EAAU,IAInE,C,0ECjBA,UAAgB,aAAa,WAAW,UAAY,WAAW,qBAAqB,WAAW,iBAAmB,WAAW,KAAO,WAAW,aAAe,WAAW,gBAAgB,WAAW,aAAe,WAAW,OAAS,WAAW,QAAU,WAAW,aAAa,WAAW,UAAY,WAAW,iBAAiB,WAAW,cAAgB,WAAW,SAAW,WAAW,KAAO,WAAW,cAAc,WAAW,WAAa,WAAW,YAAY,WAAW,SAAW,WAAW,YAAY,WAAW,SAAW,WAAW,OAAS,WAAW,cAAc,WAAW,WAAa,WAAW,SAAW,WAAW,OAAS,WAAW,YAAc,WAAW,kBAAkB,WAAW,cAAgB,WAAW,OAAS,WAAW,QAAU,WAAW,MAAQ,WAAW,WAAa,WAAW,sBAAsB,WAAW,kBAAoB,YCiCn2BO,GAAwB,IAAM5oC,EAAAA,EAoKpC,IAAetb,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAqB,CAACC,GAAUyvC,gBAG3C,CACLzrB,MAHWQ,EAAAA,EAAAA,KAAWxkB,EAAQyvC,EAAU/xC,QAIxCgyC,mBAAoB1vC,EAAO2vC,UAAUD,sBALrB3vC,EAjKF6vC,EAChBH,YACAzrB,OACA0rB,yBAEA,MAAM,SACJrV,EAAQ,iBACRwV,EAAgB,YAChBC,EAAW,UACXC,EAAS,cACTC,EAAa,gBACbC,EAAe,aACfxtB,EAAY,gBACZ0X,EAAe,oBACf+V,IACEryC,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,KAEP0oB,GAActW,EAAAA,EAAAA,IAAgB,KAClC,MAAM,KAAE5O,GAASigD,EAEjB,GAAa,WAATjgD,EAMF,OALA0gD,SACA/V,EAAgB,CACdz8B,OAAQ+xC,EAAU/xC,OAClBy1B,QAASsc,EAAUtc,UAKvB0c,IAEAjzC,YAAW,KACI,SAATpN,EACF6qC,EAAS,CAAE7oC,GAAIi+C,EAAU/xC,SACP,YAATlO,GACTizB,EAAa,CAAEpkB,OAAQoxC,EAAU/xC,OAAQ4L,UAAWmmC,EAAUnmC,WAChE,GA1C2B,IA2CD,IAGxB6mC,GAAiBzjD,EAAAA,EAAAA,KAAQ,KAC7B,KAAKoT,EAAAA,EAAAA,IAAS2vC,EAAU/xC,QAAS,OACjC,MAAM,OAAEA,EAAM,kBAAE0yC,EAAiB,cAAEC,GAAkBZ,EAC/C1P,EAAO/b,GACP,UAAEssB,GAAcvQ,GAAQ,CAAC,EACzBwQ,GAAWnX,EAAAA,EAAAA,IAAgB2G,GAE3B3J,EAAmC,GAkDzC,OAhDKia,IACED,EAUHha,EAAQ5oC,KAAK,CACXgjD,QAASA,KACPV,EAAY,CAAEhiB,OAAQpwB,EAAQ+yC,eAAe,IAC7CR,EAAgB,CAAEniB,OAAQpwB,EAAQ0yC,mBAAmB,GAAQ,EAE/Dl9C,MAAOjH,EAAK,kBAAmBskD,GAC/Bt9C,KAAM,eAfRmjC,EAAQ5oC,KAAK,CACXgjD,QAASA,KACPT,EAAU,CAAEjiB,OAAQpwB,EAAQ+yC,eAAe,IAC3CR,EAAgB,CAAEniB,OAAQpwB,EAAQ0yC,mBAAmB,GAAO,EAE9Dl9C,MAAOjH,EAAK,gBAAiBskD,GAC7Bt9C,KAAM,eAcRq9C,EACFla,EAAQ5oC,KAAK,CACXgjD,QAASA,KACPR,EAAc,CAAEliB,OAAQpwB,GAAS,EAEnCxK,MAAOjH,EAAK,iBACZgH,KAAM,cACNsR,aAAa,IAGf6xB,EAAQ5oC,KAAK,CACXgjD,QAASA,KACHH,GACFP,EAAY,CAAEhiB,OAAQpwB,IACtBuyC,EAAgB,CAAEniB,OAAQpwB,EAAQ2yC,eAAe,MAEjDN,EAAU,CAAEjiB,OAAQpwB,IACpBuyC,EAAgB,CAAEniB,OAAQpwB,EAAQ2yC,eAAe,IACnD,EAEFn9C,MAAOjH,EAAKokD,EAAgB,UAAY,aACxCp9C,KAAMo9C,EAAgB,OAAS,cAC/B9rC,aAAc8rC,IAIXja,CAAO,GACb,CAACnqC,EAAMwjD,EAAWzrB,IAEf0sB,EAA0C,SAAnBjB,EAAUjgD,KAAkB,eAClC,YAAnBigD,EAAUjgD,KAAqB,UAAY,OACzCmhD,EAAuC,YAAnBlB,EAAUjgD,MAAyC,WAAnBigD,EAAUjgD,KAE9DohD,GAASlkD,EAAAA,EAAAA,KAAQ,KACrB,MAAMmkD,EAAgC,WAAnBpB,EAAUjgD,MAAqBigD,EAAU3f,MAAMQ,aAAaugB,WACzErtB,EAAQ,EAACstB,EAAAA,GAAAA,GAAiB7kD,EAAuB,IAAjBwjD,EAAUvsB,OAKhD,OAJI2tB,GACFrtB,EAAMh2B,KAAKvB,EAAK,eAGXu3B,EAAM1M,KAAM,MAAa,GAC/B,CAAC7qB,EAAMwjD,IAEV,OACE3hD,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK2gD,EAAU/xC,OACfjS,WAAWuC,EAAAA,GAAAA,GACT,iCACAC,GAAO8iD,eACNtB,EAAUY,eAAiBZ,EAAUW,oBAAsBniD,GAAO+iD,SAErEllD,QAAS4oB,EACTu8B,aAAiC,SAAnBxB,EAAUjgD,MAAmBigD,EAAU1Q,SACnDjxC,EAAAA,GAAAC,cAACmjD,GAAAA,EAAmB,CAClBnS,SAAU0Q,EAAU1Q,SACpBtzC,UAAWwC,GAAOkjD,aAClB1hD,KAAM+/C,GACNE,mBAAoBA,EACpB0B,eAAa,SAEbzkD,EACJwjD,eAAgBA,EAChBkB,mBAAiB,EACjBC,oBAAqBrjD,GAAOsjD,aAE3BzxC,EAAAA,EAAAA,IAAS2vC,EAAU/xC,QAClB5P,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd/lD,WAAWuC,EAAAA,GAAAA,GAAe2iD,GAAqB1iD,GAAOwjD,mBACtD3jB,OAAQ2hB,EAAU/xC,OAClBg0C,kBAAgB,EAChBd,OAAQA,EACRF,WAAYA,EACZ7F,WAAS,EACThW,eAAa,IAGf/mC,EAAAA,GAAAC,cAAC4jD,GAAAA,EAAa,CACZlmD,WAAWuC,EAAAA,GAAAA,GAAe2iD,GAAqB1iD,GAAOwjD,mBACtDpzC,OAAQoxC,EAAU/xC,OAClBkzC,OAAQA,EACRF,WAAYA,EACZ7F,WAAS,IAGJ,KC4Ef,IAAev/C,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAYC,IAC9B,MAAM,UAAE8/B,GAAc9/B,GACdqxB,aAAa,UAAE+O,KAAgBhgC,EAAAA,EAAAA,KAAeJ,IAChD,QACJmzB,EAAO,MAAEyK,EAAK,WAAEgU,EAAU,UAAEjtB,GAC1Byb,GAAa,CAAC,EACZtQ,EAAQqD,GAAUmD,EAAAA,EAAAA,KAAgBt2B,EAAQA,EAAOqkB,cAAgB8O,QAAWxmC,EAElF,MAAO,CACLwmC,UACAyK,QACAqE,oBAAqBnC,EAAWoC,kBAAoBpC,EAAWqC,yBAC/DrS,MAAOA,GAAS,YAAaA,EAAQA,OAAQnjC,EAC7CilD,aACAjtB,YACA+qB,mBAAoB1vC,EAAO2vC,UAAUD,mBACrC3f,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GAClD,GAjBiBD,EA1NpB,UAAwB,MACtB+vB,EAAK,oBACLmS,EAAmB,MACnBrE,EAAK,WACLgU,EAAU,UACVjtB,EAAS,qBACToL,IAEA,MAAM,kBACJ8hB,EAAiB,oBAAE3B,EAAmB,gBAAE4B,IACtCj0C,EAAAA,EAAAA,OAEGk0C,EAAiBC,EAAkBC,IAAsB3lD,EAAAA,EAAAA,IAAQ,IACjE4lD,EAAmBC,EAAoBC,IAAwB9lD,EAAAA,EAAAA,IAAQ,IACvE6nC,EAAOke,IAAYr0C,EAAAA,EAAAA,IAAS,IAE7B/R,GAAOD,EAAAA,EAAAA,KAEPmG,EAAS2K,QAAQgzB,GACjBwiB,EAAYx1C,QAAQgzB,GAAO5M,OAAU4M,EAAO5M,KAAO+e,GAAuB/P,EAAAA,GAAAA,OAC1E,WAAE6L,EAAa,EAAC,eAAEE,EAAiB,GAAMnO,GAAO8N,OAAS,CAAC,EAE1D2U,EAAyBziB,GAAOwO,UAAYP,EAAayU,EAAAA,IACzDC,EAA4BxU,EAAiByU,EAAAA,IAC7CC,EAAmB5U,EAAa6U,EAAAA,IAChCC,EAAYN,GAA0BE,GAA6BE,GAEzEpmD,EAAAA,EAAAA,KAAU,KACH4F,IACHkgD,EAAS,IACTJ,IACAE,IACF,GACC,CAAChgD,IAEJ,MAAM2gD,GAAer3B,EAAAA,GAAAA,IAAqB,KACxCq2B,EAAgB,CAAEntB,WAAW,GAAO,GACnC,GAvCoB,KAuCE,IAEzBp4B,EAAAA,EAAAA,KAAU,KACRumD,GAAc,GACb,CAACf,EAAiBG,EAAmB/d,EAAO2e,IAE/C,MAAMC,GAAcrmD,EAAAA,EAAAA,KAAQ,IACnBkxC,GAAOoV,KA6JlB,SAA2Bd,GACzB,MAAO,CAACe,EAAqBC,KAC3B,GAAIhB,EAAmB,CACrB,MAAMiB,EAAuB,SAAXF,EAAEzjD,MAAmByjD,EAAElU,SACnCqU,EAAuB,SAAXF,EAAE1jD,MAAmB0jD,EAAEnU,SACzC,GAAIoU,IAAcC,EAChB,OAAQ,EAEV,IAAKD,GAAaC,EAChB,OAAO,CAEX,CAEA,OAAOF,EAAEhwB,KAAO+vB,EAAE/vB,IAAI,CAE1B,CA5KuBmwB,CAAkBnB,KACpC,CAACA,EAAmBtU,IAEjB0V,EAAoBP,GAAallD,OAAmC,EAA1BH,KAAKC,IAAIowC,EAAY,GAE/DwV,EAAkBz2C,QAAQi2C,GAAallD,SAAWklD,EAAallD,OAASkwC,GAAcuU,EAEtFkB,GAAiBp1C,EAAAA,EAAAA,IAAgB,KAChC0xB,GAAOt+B,SAAqB7E,IAAfilD,GAClBC,EAAkB,CAChBn0C,OAAQoyB,EAAMpyB,OACdy1B,QAASrD,EAAMt+B,GACfsb,OAAQ8kC,EACRM,kBAAmBA,QAAqBvlD,EACxColD,gBAAiBA,QAAmBplD,EACpCwnC,SACA,KAGE,aAAEmb,EAAY,cAAEJ,GAAkBF,KAElC7jB,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClC8xC,GAAqB,IAGjBuD,GAAkE/mD,EAAAA,EAAAA,KAAQ,IACvE,EAAGgX,YAAWvR,OAAQuhD,KAC3B5lD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4jD,OAAK,EACLlkD,KAAK,OACL0P,MAAM,cACN1T,WAAWuC,EAAAA,GAAAA,IAAgB0lD,GAAc,SAAUzlD,GAAO2lD,WAAY3lD,GAAO4lD,WAC7EC,MAAOJ,EACP5nD,QAAS4X,EACTE,UAAW3X,EAAK,WAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAM6hD,EAAoB,gBAAkB,SAAUzmD,UAAWwC,GAAO8lD,WAC9EjmD,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,OAAO5E,UAAWwC,GAAOmC,aAGvC,CAAC8hD,EAAmBjmD,IAEvB,OACE6B,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRQ,QAASw4B,EACT1/B,UAAU,uBACVoH,iBAAkB5E,GAAO+lD,UACzBzhB,QAAM,GAELsgB,GACC/kD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOqE,QACpBigD,GACCzkD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOgmD,eACrBnmD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,IAAgB+jD,GAAmB9jD,GAAOgR,SAAUhR,GAAO4lD,WACtEpkD,KAAK,OACL0P,MAAM,oBACNw0C,OAAK,EACL7nD,QAASmmD,GAERhmD,EAAK,eAER6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GAAe+jD,GAAmB9jD,GAAOgR,SAAUhR,GAAO4lD,WACrEpkD,KAAK,OACL0P,MAAM,oBACNw0C,OAAK,EACL7nD,QAASkmD,GAER/lD,EAAK,cAIXwmD,GACC3kD,EAAAA,GAAAC,cAACyW,GAAAA,EAAY,CACX/Y,UAAWwC,GAAO+kD,KAClBvuC,QAASgvC,EACT/uC,UAAU,SAEV5W,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,gBAAgBnH,QAASqmD,GACrClmD,EAAK,mBACLimD,GACCpkD,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,QAAQ5E,UAAWwC,GAAOimD,SAGzCpmD,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,SAASnH,QAASsmD,GAC9BnmD,EAAK,eACJimD,GACApkD,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,QAAQ5E,UAAWwC,GAAOimD,UAK5CvB,GACC7kD,EAAAA,GAAAC,cAAComD,GAAAA,EAAW,CAAC1oD,UAAWwC,GAAOmmD,OAAQ51C,MAAO21B,EAAOn1B,SAAUqzC,KAIrEvkD,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOkW,SAAU+qC,GAAiBjhD,GAAOomD,YAAa,iBAChFC,SAAUhF,GAETgD,IAAc3tB,IAAcwP,GAASr3B,SAASi2C,GAAallD,SAC1DC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO64B,KAAM74B,GAAOsmD,gBAChDzkD,EAAAA,GAAAA,GACC7D,EAAK8jC,EAAuB,qBAAuB,oBACnD,CAAC,kBAAmB,YAIxBpL,GAAa7nB,QAAQq3B,EAAMtmC,UAAYklD,GAAallD,QACpDC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO64B,MACpB76B,EAAK,mCAGV6B,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACbC,MAAO1B,EACP2B,WAAYlB,GAEXT,GAAa7kD,KAAKymD,IACjB,MAAMC,EAAgC,YAAdD,EAAKnlD,KAAqBmlD,EAAKrrC,UACrC,WAAdqrC,EAAKnlD,KAAoBmlD,EAAKxhB,QAAU,OAC5C,OACErlC,EAAAA,GAAAC,cAAC6hD,GAAS,CAAC9gD,IAAM,GAAE6lD,EAAKj3C,UAAUi3C,EAAKzxB,QAAQ0xB,IAAmBnF,UAAWkF,GAAQ,IAGxFhwB,GAAav1B,MAAMC,KAAK,CAAExB,OAAQylD,IAAoBplD,KAAI,CAAC2mD,EAAGC,IAC7DhnD,EAAAA,GAAAC,cAACqF,GAAAA,EACC,CACAtE,IAAM,eAAcgmD,IACpBrpD,UAAU,+DACVklB,UAAQ,GAER7iB,EAAAA,GAAAC,cAACgnD,GAAAA,EAAmB,SAGvBxB,GACCzlD,EAAAA,GAAAC,cAAA,OAAKe,IAAI,oBAAoBrD,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO64B,KAAM74B,GAAO+mD,aACxE/oD,EAAK,sCAKd6B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOsE,OAAQ,mBAC5CzE,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GAAe,wBAAyBC,GAAO+a,OAC1D/Y,QAAM,EACNnE,QAASq/B,GAERl/B,EAAK,WAKhB,KCpEA,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAYC,IAC9B,MAAM,4BACJikB,EAA6BoN,aAAa,QACxC8B,EAAO,OAAEz1B,EAAM,mBAAE2iC,EAAkB,OAAEhrC,KAErC+K,EAAAA,EAAAA,KAAeJ,GACb8vB,EAAQpyB,GAAUy1B,GAAUmD,EAAAA,EAAAA,KAAgBt2B,EAAQtC,EAAQy1B,QAAWxmC,EACvEyqB,GAAgBgN,EAAAA,EAAAA,KAA+BpkB,EAAQ,yBAE7D,MAAO,CACL7N,QAAQy6C,EAAAA,EAAAA,KAAwB5sC,GAChCikB,8BACAvmB,OAAQA,EACRy1B,UACArD,QACAz6B,SACA+hB,gBACAipB,qBACD,GAlBiBtgC,EAnIpB,UAAqB,OACnB5N,EAAM,OACNuL,EAAM,QACNy1B,EAAO,MACPrD,EAAK,OACLz6B,EAAM,4BACN4uB,EAA2B,cAC3B7M,EAAa,mBACbipB,IAEA,MAAM,iBAAEwP,EAAgB,wBAAEoF,EAAuB,YAAEC,IAAgBr3C,EAAAA,EAAAA,MAE7D5R,GAAOD,EAAAA,EAAAA,MACNmpD,EAAeC,IAAoBp3C,EAAAA,EAAAA,SAAmCrR,IACtEuV,EAAmBC,EAAiBC,IAAoB9V,EAAAA,EAAAA,IAAQ,IAEjE,cAAE2O,EAAa,UAAEs1B,GAAcV,GAAcC,GAC7Cyd,EAAaze,KACbumB,GAAa/uB,EAAAA,EAAAA,GAAsBn0B,GACnC41B,GAAoBzB,EAAAA,EAAAA,GAAsBrrB,GAC1CiyC,GAAa5mB,EAAAA,EAAAA,GAAsB5oB,GACnCoqB,GAAaxB,EAAAA,EAAAA,GAAsBjxB,GACnCmxB,EAAmB1pB,QAAQsa,IAAkB6M,IAEnD13B,EAAAA,EAAAA,KAAU,KACH4F,IACHijD,OAAiBzoD,GACjByV,IACF,GACC,CAACjQ,KAEJ5F,EAAAA,EAAAA,KAAU,KACR,IAAK4F,EACH,QAGF+0B,EAAAA,EAAAA,MACA,MAAMC,GAAuBC,EAAAA,EAAAA,MAE7B,MAAO,MACLC,EAAAA,EAAAA,MACAF,GAAsB,CACvB,GACA,CAACh1B,IAEJ,MAAMg5B,GAAc55B,EAAAA,EAAAA,KAAY,KAC9Bs+C,GAAkB,GACjB,CAACA,IAEEyF,GAAwBl3C,EAAAA,EAAAA,IAAiBm3C,IAC7CH,EAAiBG,GACjBpzC,GAAiB,IAGbqzC,GAAyBp3C,EAAAA,EAAAA,IAAgB,KAC7CgE,IACAgzC,OAAiBzoD,EAAU,IAGvB8oD,GAAoBr3C,EAAAA,EAAAA,IAAgB,KACnC+0B,GACL+hB,EAAY,CAAE/hB,UAASz1B,UAAS,IA8BlC,OA3BAnR,EAAAA,EAAAA,KAAU,IAAO4F,GAASw5B,EAAAA,EAAAA,IAAsB,KAC9CR,GAAa,SACVx+B,GAAY,CAACw+B,EAAah5B,KAE/B5F,EAAAA,EAAAA,KAAU,KACJi6B,IAAqB6uB,GAAcljD,GAAUuL,GAAU6yB,QAAwB5jC,IAAX0I,KACtE4yB,EAAAA,EAAAA,IAnFqB,IAmFoBC,EAAAA,KzBrGxC,SACL4F,EACAz4B,EACAqgD,EACAz6C,EACAoC,GAEA,MAAQzF,QAASuwB,GAAc3xB,GAASnB,EAAQy4B,GAChD,IAAK3F,EACH,OAEF,MAAQ1sB,MAAOyf,EAAapf,OAAQmf,GAAiBmN,EAAAA,EAAWlsB,MAChE,IAAMT,MAAO+sB,EAAS1sB,OAAQ2sB,GAAaprB,EAE3C,MAAMrM,EAAWkqB,GAhBE,IAkBnB,GAAIlqB,EAAU,CACZw3B,EAAUtN,EAAc,EAAIoS,GAC5B7E,EAAWxN,EAAeoS,GAAgB,EAAIC,GAE9C,MAAMqoB,EAAiBC,iBAAiB1hD,SAAS2hD,iBAAiBC,iBAAiB,sBAC/EH,IACFltB,GAAYstB,WAAWJ,GAE3B,CAEA,MAAMhtB,EAAS33B,EAAWs8B,IAAiBpS,EAAcsN,GAAW,EAC9DI,EAAQ53B,EAAWs8B,IAAiBrS,GAAgBwN,EAAW4E,KAAkB,GAGrF1Z,IAAKoV,EAASvc,KAAMwc,EAAUvtB,MAAOwtB,EAAWntB,OAAQotB,GACtDf,EAAUtb,wBAER4c,EAAkBT,EAAWC,EAAY,GAAMN,EAASH,EAAU,GAClEkB,EAAkBX,EAAUG,EAAa,GAAMN,EAAQH,EAAW,GAClEkB,EAAaV,EAAYT,EACzBoB,EAAaV,EAAaT,GAEhCxf,EAAAA,EAAAA,KAAgB,KACd,MAAM3T,EAAQH,GAAY8F,GAAiBy6C,GAAQz6C,IACnD4uB,EAAAA,EAAAA,IAAYv0B,EAAO,CACjBqe,IAAM,GAAEiV,MACRpc,KAAO,GAAEmc,MACTltB,MAAQ,GAAE+sB,MACV1sB,OAAS,GAAE2sB,MACXxM,UAAY,eAAcwN,QAAqBC,iBAA8BC,MAAeC,OAG9F,MAAMnyB,EAAYvD,SAASi2B,eAAe,eAC1C1yB,EAAUxB,YAAYX,GACtBpB,SAAS0b,KAAKra,UAAUC,IAAI,oBAE5ByT,EAAAA,EAAAA,KAAgB,MACd4gB,EAAAA,EAAAA,IAAYv0B,EAAO,CACjB2mB,UAAW,KAGbrf,YAAW,MACTqM,EAAAA,EAAAA,KAAgB,KACVxR,EAAUsyB,SAASz0B,IACrBmC,EAAUuyB,YAAY10B,GAExBpB,SAAS0b,KAAKra,UAAUsa,OAAO,kBAAkB,GACjD,GApEiB,IAqEGqY,EAAAA,IAAoB,GAC5C,GAEN,CyBmCM+B,CAAevsB,EAAQrI,EAAQk7B,EAAWt1B,EAAesyC,EAAW/d,cAElEhJ,GAAoB6uB,IAAeljD,GAAU+6C,GAAcnlB,QAAoCp7B,IAAfm7B,KAClFG,EAAAA,EAAAA,IAvFqB,IAuFoBC,EAAAA,KzBpCxC,SACL4F,EACAz4B,EACA4F,GAEA,MAAQrD,QAASsyB,GAAY1zB,GAASnB,EAAQy4B,GAExC3F,EAAYj0B,SAASi2B,eAAe,eAAgB7zB,cACvD,IAAGrI,OAAuBA,QAAkBA,OAAuBA,MAEtE,IAAKk6B,IAAc+B,EACjB,OAEF,MACEvW,IAAKoV,EAASvc,KAAMwc,EAAUvtB,MAAOwtB,EAAWntB,OAAQotB,GACtDf,EAAUtb,yBAEZ8G,IAAKiV,EAAOpc,KAAMmc,EAAQltB,MAAO+sB,EAAS1sB,OAAQ2sB,GAChDyB,EAAQrd,wBAENmpC,EAAgBrtB,EAASH,EAAU,GAAMQ,EAAWC,EAAY,GAChEgtB,EAAgBrtB,EAAQH,EAAW,GAAMM,EAAUG,EAAa,GAChEgtB,EAAW1tB,EAAUS,EACrBktB,EAAW1tB,EAAWS,GAE5BjgB,EAAAA,EAAAA,KAAgB,KACd,MAAM3T,EAAQH,GAAY8F,IAC1B4uB,EAAAA,EAAAA,IAAYv0B,EAAO,CACjBqe,IAAM,GAAEoV,MACRvc,KAAO,GAAEwc,MACTvtB,MAAQ,GAAEwtB,MACVntB,OAAS,GAAEotB,QAGb,MAAMktB,EAASjhD,GAAY+0B,EAAQp0B,SAAKnJ,GAAW,GAC7C0pD,EAAattB,EAAUG,EAAa,EAAKD,EAAY,GAC3DY,EAAAA,EAAAA,IAAYusB,EAAQ,CAClBziC,IAAM,GAAE0iC,MACR7pC,KAAO,GAAEwc,MACTvtB,MAAQ,GAAEwtB,MACVntB,OAAS,GAAEmtB,QAGb,MAAMxxB,EAAYvD,SAASi2B,eAAe,eAC1C1yB,EAAUxB,YAAYX,GACtBpB,SAAS0b,KAAK3Z,YAAYmgD,GAC1BliD,SAAS0b,KAAKra,UAAUC,IAAI,oBAE5ByT,EAAAA,EAAAA,KAAgB,MACd4gB,EAAAA,EAAAA,IAAYv0B,EAAO,CACjB2mB,UAAY,eAAc+5B,QAAmBC,iBAA4BC,MAAaC,QAGxFtsB,EAAAA,EAAAA,IAAYusB,EAAQ,CAClBn6B,UAAY,eAAc+5B,QAAmBC,iBAA4BC,KACzEjrB,QAAS,MAGXruB,YAAW,MACTqM,EAAAA,EAAAA,KAAgB,KACVxR,EAAUsyB,SAASz0B,IACrBmC,EAAUuyB,YAAY10B,GAGpBpB,SAAS0b,KAAKma,SAASqsB,IACzBliD,SAAS0b,KAAKoa,YAAYosB,GAG5BliD,SAAS0b,KAAKra,UAAUsa,OAAO,kBAAkB,GACjD,GA/IiB,IAgJGqY,EAAAA,IAAoB,GAC5C,GAEN,CyBpCMgD,CAAegiB,EAAYplB,EAAYC,GACzC,GACC,CACDvB,EACAvrB,EACA8sB,EACA51B,EACAkjD,EACA9H,EAAW/d,YACXe,EACA7yB,EACAwvC,EACA73C,EACAyyB,IAIAh6B,EAAAA,GAAAC,cAACkgB,GAAAA,EAAc,CACbzc,GAAG,cACH/F,U1BjJiB,W0BkJjB0G,OAAQA,EACR66B,0BAAwB,EACxBC,kBAAmBhJ,GAEnBn2B,EAAAA,GAAAC,cAAA,OAAKtC,U1BtJwD,W0BsJ5BK,QAASq/B,IAC1Cr9B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,U1BxJ+I,W0ByJ/IkY,OAAK,EACLlU,KAAK,UACL0P,MAAM,oBACNyE,UAAW3X,EAAK,SAChBH,QAASq/B,GAETr9B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGbvC,EAAAA,GAAAC,cAACuoD,GAAW,CACVnkD,OAAQA,EACR+P,kBAAmBA,EACnBJ,SAAU2zC,EACV9iD,QAASw4B,EACTuX,SAAU4S,IAGZxnD,EAAAA,GAAAC,cAACwoD,GAAuB,CACtBpkD,OAAQ+P,EACR4tB,MAAOqlB,EACPxiD,QAAS6iD,IAEX1nD,EAAAA,GAAAC,cAACyoD,GAAc,MACf1oD,EAAAA,GAAAC,cAAC2jC,GAAgB,MACjB5jC,EAAAA,GAAAC,cAAC0oD,GAAa,CAACtkD,OAAQkuC,EAAoB1tC,QAASsiD,IAG1D,K,gHC7HA,MAEMyB,GAAkB,KAAO9vC,EAAAA,EACzB+vC,GAAkB,wBAuRxB,IAAerrD,EAAAA,EAAAA,KApRwBsrD,EACrCzkD,SACAkyB,gBACAwyB,gBACAzC,SACA0C,oBACArrD,YACAsrD,WACAC,iBACAC,qBACAtkD,UACAgL,sBACAu5C,yBAEA,MAAM,WAAEC,IAAet5C,EAAAA,EAAAA,MAEjB5R,GAAOD,EAAAA,EAAAA,KAEP0tB,GAAere,EAAAA,EAAAA,IAAuB,MAEtC+7C,GAAoB/7C,EAAAA,EAAAA,IAAuB,MAE3Cg8C,GAAYh8C,EAAAA,EAAAA,IAAyB,MAErCi8C,GAAiBj8C,EAAAA,EAAAA,IAAyB,OACzCk8C,EAAaC,IAAWC,EAAAA,GAAAA,GAAkBV,EAAUF,EAAe/5C,QAAQs3C,KAC3EsD,EAASC,IAAc35C,EAAAA,EAAAA,SAA6BrR,IACpDirD,EAAaC,IAAkB75C,EAAAA,EAAAA,IAAiB,IACjDmvB,EAAYuqB,EAjCK,EADD,EAmChBI,EAAiBjB,EAAetqB,QAAQgrB,EAAa,IAErDQ,GAAc35C,EAAAA,EAAAA,IAAgB,KAClC44C,EAAe,GAAG,KAEpBgB,EAAAA,GAAAA,GAAoBX,EAAWllD,GAxCT,IAwCmBg7B,EAA+B4qB,IACxEC,EAAAA,GAAAA,GAAoBV,EAAgBnlD,GAxCb,IAwCuBg7B,GAE9C,MAAM8qB,GAAmB75C,EAAAA,EAAAA,IAAiB4B,IACxC,GAAK03C,EAIL,OAAOQ,EAAAA,EAAAA,KAAal4C,EAAQ03C,EAAQ,IAGhCS,GAAkBC,EAAAA,GAAAA,GAAYH,IAE7BI,EAAUC,IAAU5rD,EAAAA,EAAAA,KAAQ,KACjC,MAAMsT,GAAS0+B,EAAAA,EAAAA,MACT6Z,EAAYv4C,EAAOw4C,MAAM/hB,KACzBgiB,EAAmBz4C,EAAOw4C,MAAME,aAEhCl4C,EAAO+3C,EAAUb,GAEvB,IAAKl3C,IAAS23C,EACZ,MAAO,MAACxrD,OAAWA,GAGrB,MAAMgsD,EAAcf,EAAYgB,cAE1B1rD,EAASirD,EACX7J,OAAOuK,OAAOV,GAAiBtrD,QAAO,CAACisD,EAAKC,OAE1CC,EAAAA,EAAAA,IAAiBx4C,EAAMu4C,OAAOpsD,EAAW8rD,EAAiBf,KACrDiB,IAAeI,EAAM7lD,MAAM0lD,cAAc34B,SAAS04B,KAEvDG,EAAIC,EAAMvnD,IAAMunD,GAGXD,IACN,CAAC,GACFX,EAEJ,MAAO,CAAC7J,OAAO2K,KAAK/rD,GAAQgB,IAAIunB,QAASvoB,EAAO,GAC/C,CAACwqD,EAASE,EAAaO,IAEpBe,GAAwB96C,EAAAA,EAAAA,IAAgB,KAC5Cu5C,OAAWhrD,GACXkrD,EAAe,GAAG,IAGdsB,GAAqB/6C,EAAAA,EAAAA,IAAiBM,IAC1Cs4C,EAAet4C,EAAEmW,cAAcrW,MAAM,IAGjC46C,GAA0Bh7C,EAAAA,EAAAA,IAAiBM,IAC/Cm5C,EAAen5C,EAAEmW,cAAcrW,MAAM,IAGjCmX,GAAgB0jC,EAAAA,GAAAA,GAA0B3/B,EAAcvnB,GAAS7E,IACrE,GAAIiqD,GAAeA,EAAY1pD,OAAS,EAAG,CACzC,MAAM0qD,GAAY7Z,EAAAA,EAAAA,MAAY8Z,MAAM/hB,KAE9Bp4B,EAASk5C,GAAuB,IAAXjqD,EAAe,EAAIA,GACxCkT,EAAO+3C,EAAUl6C,GACnBmC,GAAM84C,SACHnB,GAAiBhB,EAAW,CAAE94C,WACnCs5C,EAAWt5C,IAEX44C,EAAmB54C,EAEvB,IACE,IAAGs4C,MAAmB,GAEpB4C,GAAqBF,EAAAA,GAAAA,GAA0BjC,EAAmBjlD,GAAS7E,IAC3E+qD,GAAUxqD,QACZopD,EAAmBS,EAAUW,GAAoB,IAAX/qD,EAAe,EAAIA,GAC3D,GACE,IAAGqpD,MAAmB,GAEpBjiC,GAActW,EAAAA,EAAAA,IAAiBC,IACnC,MAAMk6C,GAAY7Z,EAAAA,EAAAA,MAAY8Z,MAAM/hB,KAC9Bj2B,EAAO+3C,IAAYl6C,GACrBmC,GAAM84C,SACHnB,GAAiBhB,EAAW,CAAE94C,WACnCs5C,EAAWt5C,GACX05C,KAEAd,EAAmB54C,EACrB,IAGIm7C,GAAiBjoD,EAAAA,EAAAA,KAAY,CAACC,EAAYlE,KAC9C,MAAM0S,GAAS0+B,EAAAA,EAAAA,MACT1a,GAAOQ,EAAAA,EAAAA,KAAWxkB,EAAQxO,GAChC,IAAKwyB,EACH,OAGF,MAAMy1B,EAASz1B,KAAS01B,EAAAA,GAAAA,IAAc11B,GAAQA,EAAKy1B,YAAS9sD,GAgBrDwG,EAAUwmD,GAdjB,WACE,IAAK31B,EAAM,OACX,GAAIA,EAAKxyB,KAAO6yB,EAAe,MAAO,CAACp4B,EAAK,sBAC5C,IAAIytD,EAAAA,GAAAA,IAAc11B,GAChB,MAAO,EAAC41B,EAAAA,EAAAA,IAAe3tD,EAAM+3B,IAG/B,MAAM61B,GAAaC,EAAAA,EAAAA,KAAiB95C,EAAQgkB,EAAKxyB,IACjD,MAAO,EACLuoD,EAAAA,EAAAA,IAAc9tD,EAAM+3B,EAAM61B,IAC1B7rD,EAAAA,GAAAA,IAAegsD,EAAAA,EAAAA,IAAah2B,EAAM61B,GAAY,IAAS,UAE3D,CAEsCI,IAAiB,GAEvD,OACEnsD,EAAAA,GAAAC,cAACmsD,GAAAA,EAAU,CACTprD,IAAK0C,EACL/F,UAAWkrD,GACXzjD,MAAOpF,EAAAA,GAAAC,cAACosD,GAAAA,EAAa,CAACn2B,KAAMA,EAAMo2B,gBAAiBX,IACnDY,cACEvsD,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLC,KAAMA,EACNo2B,gBAAiBX,EACjBhqD,KAAK,WAGT0D,SAAUA,EACVwmD,kBAAmBA,EACnBzpC,QAAM,EACNnY,MAAQ,SAAQ+/C,EAAiBxqD,GAASgtD,EAAAA,SAE1CxuD,QAASA,IAAM4oB,EAAYljB,IAC3B,GAEH,CAAC6yB,EAAep4B,EAAM6rD,IA4FzB,OACEhqD,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACR1G,WAAWuC,EAAAA,GAAAA,GAAe,mBAAoBvC,GAC9CkH,QAASA,EACTgL,oBAAqBA,EACrBu5C,mBAAoBA,GAEpBppD,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CAACC,UAAWA,EAAW98B,KAAK,YAAY0pC,eAAe,2BAC/D,IAjRgB,IAkRR5M,EAlGXr/B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eAAeyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACtDmB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAAC4T,OAAK,EAACxE,MAAM,cAAc1P,KAAK,UAAUmU,UAAW3X,EAAK,QAASH,QAASotD,GACjFprD,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAEbvC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRgG,IAAKoyC,EACL94C,MAAOo5C,EACP54C,SAAUo6C,EACVmB,UAAWhB,EACXiB,YAAa1D,KAGjBhpD,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACbtvC,IAAKkyC,EACL3rD,UAAU,4BACVgpD,MAAO4D,EACPoC,yBAAuB,EACvBC,UA/LmB,IA+LPrC,GAAUxqD,QAAU,GAChC0sD,UAAWhB,IAETlB,GAAYvqD,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MACrBtC,GAAUnqD,KAAI,CAAC0sD,EAAS9F,IACvBhnD,EAAAA,GAAAC,cAACmsD,GAAAA,EAAU,CACTprD,IAAM,GAAE4oD,KAAWkD,IACnBnvD,UAAWkrD,GAEX7qD,QAASA,IAAMmrD,EAAmBS,EAAUkD,GAC5C7iD,MAAQ,QAzMO,IAyMC+/C,EAAiBhD,QACjCuF,cACEvsD,EAAAA,GAAAC,cAAC8sD,GAAAA,EAAS,CACRprD,KAAMinD,GACNqC,MAAOT,EAAOsC,GACdnvD,UAAU,aACVqvD,gBAAgB,sBAGpB5nD,OAAOpD,EAAAA,GAAAA,GAAWwoD,EAAOsC,GAAS1nD,aAU1CpF,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eAAeyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACtDmB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACLmU,UAAW3X,EAAK,SAChBH,QAAS6G,GAET7E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRgG,IAAKmyC,EACL74C,MAAO41C,EACPp1C,SAAUm6C,EACVoB,UAAW5kC,EACX6kC,YAAa1D,KAGhBS,GAAa1pD,OACZC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACbtvC,IAAKwU,EACLjuB,UAAU,4BACVgpD,MAAO8C,EACPwD,aAAe,IAAGpE,KAClBjC,WAAY8C,EACZiD,yBAAuB,EACvBC,UAAW7D,EAAehpD,OAASysD,EAAAA,IACnCC,UAAW5kC,GAEV4hC,EAAYrpD,IAAIsrD,IAEjBjC,IAAgBA,EAAY1pD,OAC9BC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,cAAcQ,EAAK,+BAEhC6B,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,SAmBN,ICrNZ,IAAervD,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MACEw4C,OAAO,QACLwC,EAAO,iBACPC,GACD,cACD52B,GACErkB,EAEJ,MAAO,CACLk7C,cAAeF,EAAQnsD,OACvBssD,gBAAiBH,EAAQI,SACzBC,UAAWJ,EAAiBpsD,OAC5BklC,WAAY/zB,EAAOw2B,aAAaT,QAChC1R,gBACD,GAhBetkB,EA9E+Bu7C,EACjDnpD,SACAkyB,gBACA62B,gBACAC,kBACAE,YACAtnB,aACAnG,SAAS2tB,EAAAA,IACT9vD,YACAqrD,oBACAC,WACAyE,oBACA7oD,UACAgL,sBACAu5C,yBAEA,MAAO9C,EAAQqH,IAAaz9C,EAAAA,EAAAA,IAAS,IAC/Bk2B,GAAMxnC,EAAAA,EAAAA,KAAQ,KAClB,IAAKyF,EAAQ,OAEb,IAAIupD,EAAcL,GAAa,GAC3Bh3B,IACFq3B,GAAc1nB,EAAAA,GAAAA,IAAO,CAAC3P,KAAkBq3B,KAI1C,MAAM17C,GAAS0+B,EAAAA,EAAAA,MAETiO,EAAU,IACVuO,GAAiB,MAChB9G,GAAU+G,GAAoB,IACnCvtB,QAAQp8B,IACR,MAAMgP,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQxO,GAC1BuuC,GAAOC,EAAAA,EAAAA,KAAWhgC,EAAQxO,GAChC,GAAIuuC,KAAS4b,EAAAA,EAAAA,IAAc5b,GAAO,OAAO,EAEzC,MAAM6b,GAAeC,EAAAA,EAAAA,KAAmB77C,EAAQxO,GAEhD,OAAOgP,KAAUo7C,IAAgB5C,EAAAA,EAAAA,IAAiBx4C,OAAM7T,OAAWA,EAAWivD,GAAc,IAGxFE,GAASC,EAAAA,GAAAA,IACb9nB,EAAAA,GAAAA,IAAmB,CACjBC,KAAKF,EAAAA,GAAAA,IAAO,IACN3P,EAAgB,CAACA,GAAiB,MACnCsoB,KACC5Y,GAAc,KAEpBI,MAAOigB,SAETznD,EACA+uD,EACAr3B,GAGF,OAAO23B,EAAAA,EAAAA,KAAoBh8C,EAAQ87C,EAAQluB,EAAO,GACjD,CAACytB,EAAWh3B,EAAe62B,EAAe9G,EAAQ+G,EAAiBpnB,EAAYnG,EAAQz7B,IAEpF8pD,GAAepgB,EAAAA,GAAAA,GAAiB3H,GAAK,GAE3C,OACEpmC,EAAAA,GAAAC,cAAC6oD,GAAgB,CACfzkD,OAAQA,EACR1G,UAAWA,EACXorD,cAAeoF,EACf53B,cAAeA,EACfyyB,kBAAmBA,EACnB1C,OAAQA,EACR4C,eAAgByE,EAChB1E,SAAUA,EACVE,mBAAoBuE,EACpB7oD,QAASA,EACTgL,oBAAqBA,EACrBu5C,mBAAoBA,GACpB,KCMN,IAAe5rD,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACxC,MAAM,WAAE+D,EAAU,QAAEovB,IAAY/yB,EAAAA,EAAAA,KAAeJ,GAAQugC,gBACjD2b,EAAgBn4C,GAAcA,EAAWlW,OAAS,EACxD,MAAO,CACLw2B,cAAerkB,EAAOqkB,cACtB83B,gBAAiBp4C,GAAYlW,QAAU,GAAK,EAC5CuuD,QAASt/C,QAAQq2B,GACjB+oB,eACD,GARiBn8C,EA3FsCs8C,EACxDlqD,SACAkyB,gBACA83B,iBACAC,UACAF,mBAEA,MAAM,gCACJI,EAA+B,sBAC/BC,EAAqB,gBACrBC,EAAe,uBACfC,EAAsB,aACtBC,EAAY,iBACZ7qB,IACEh0B,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,KAEP2wD,GAAmBr2B,EAAAA,EAAAA,GAAsB81B,GAAS,IACjDlmB,EAAS0mB,EAAaC,IAAiBvwD,EAAAA,EAAAA,MAC9CC,EAAAA,EAAAA,KAAU,KACJ4F,GACFyqD,GACF,GACC,CAACzqD,EAAQyqD,IAEZ,MAAME,GAAwBvrD,EAAAA,EAAAA,KAAY,CAACwrD,EAAqBn8C,KAC9D,MAAM64C,EAASsD,IAAgB14B,EAC/B,GAAI+3B,EAAJ,CACEM,EAAa,CAAEM,SAAUD,IACzB,MAAM/8C,GAAS0+B,EAAAA,EAAAA,MACf,IAAI5+B,EAAAA,EAAAA,IAASi9C,GACXlrB,EAAiB,CACfr9B,QAASilD,EACLxtD,EAAK,sDACLA,EACA,iBACAgxD,EAAAA,EAAAA,KAAuBjd,EAAAA,EAAAA,KAAWhgC,EAAQ+8C,WAG3C,CACL,MAAMv8C,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ+8C,GAChC,IAAKv8C,EAAM,OAEXqxB,EAAiB,CACfr9B,QAASvI,EAAK,iBAAiBixD,EAAAA,EAAAA,IAAajxD,EAAMuU,KAEtD,CAEF,MAEA,GAAIi5C,EAAQ,CACV,MAAMjlD,EAAUvI,EACdkwD,EACI,iDACA,iDAGNM,IACA5qB,EAAiB,CAAEr9B,WACrB,KAAO,CACL,MAAM6J,EAAS0+C,EACTnC,EAAUh6C,EAAW6U,OAAO7U,QAAYjU,EAC1CuvD,EACFK,EAAsB,CAAEl+C,SAAQu8C,YAEhC0B,EAAgC,CAAEj+C,SAAQu8C,WAE9C,IACC,CAACv2B,EAAe83B,EAAgBC,EAASnwD,EAAMiwD,IAE5C/wB,GAAc55B,EAAAA,EAAAA,KAAY,KAC9BirD,GAAiB,GAChB,CAACA,IAEJ,GAAKrqD,GAAW+jC,EAIhB,OACEpoC,EAAAA,GAAAC,cAACutD,GAAe,CACdnpD,OAAQA,EACR1G,UAAWkxD,EAAmB,4BAAyBhwD,EACvDmqD,kBAAmB7qD,EAAKiwD,EAAe,YAAc,iBACrDV,kBAAmBsB,EACnBnqD,QAASw4B,EACTxtB,oBAAqBk/C,GACrB,KCtDN,IAAevxD,EAAAA,EAAAA,KA/C4B6xD,EACzCC,qBAEA,MAAMjrD,EAAS2K,QAAQsgD,IAAmBA,EAAe/+C,SACnD,kBACJg/C,EAAiB,uBACjBC,IACEz/C,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,MAENkqC,EAAS0mB,EAAaC,IAAiBvwD,EAAAA,EAAAA,MAC9CC,EAAAA,EAAAA,KAAU,KACJ4F,GACFyqD,GACF,GACC,CAACzqD,EAAQyqD,IAEZ,MAAME,GAAwBvrD,EAAAA,EAAAA,KAAY,CAACwrD,EAAqBn8C,KAC9Dy8C,EAAkB,CAChBh/C,OAAQ0+C,EACRn8C,WACAmF,KAAMq3C,EAAgBr3C,KACtBw3C,MAAOH,EAAgBG,OACvB,GACD,CAACF,EAAmBD,IAEjBjyB,GAAc55B,EAAAA,EAAAA,KAAY,KAC9B+rD,GAAwB,GACvB,CAACA,IAEJ,GAAKnrD,GAAW+jC,EAIhB,OACEpoC,EAAAA,GAAAC,cAACutD,GAAe,CACdnpD,OAAQA,EACR2kD,kBAAmB7qD,EAAK,aACxB2hC,OAAQwvB,GAAgBxvB,OACxB4tB,kBAAmBsB,EACnBnqD,QAASw4B,EACTxtB,oBAAqBk/C,GACrB,ICTN,IAAevxD,EAAAA,EAAAA,KArCgCkyD,EAC7CC,+BAEA,MAAM,sBAAEC,EAAqB,cAAEC,IAAkB9/C,EAAAA,EAAAA,MAC3C5R,GAAOD,EAAAA,EAAAA,KAEPmG,EAAS2K,QAAQ2gD,IAChBvnB,EAAS0mB,EAAaC,IAAiBvwD,EAAAA,EAAAA,MAC9CC,EAAAA,EAAAA,KAAU,KACJ4F,GACFyqD,GACF,GACC,CAACzqD,EAAQyqD,IAEZ,MAAM,IAAEgB,EAAG,OAAEhwB,EAAM,WAAEiwB,GAAeJ,GAA4B,CAAC,EAE3DK,GAAsBvsD,EAAAA,EAAAA,KAAawrD,IACvCY,EAAc,CAAEC,IAAKA,EAAMv/C,OAAQ0+C,EAAac,eAChDH,GAAuB,GACtB,CAACE,EAAKD,EAAeD,EAAuBG,IAE/C,GAAK1rD,GAAW+jC,EAIhB,OACEpoC,EAAAA,GAAAC,cAACutD,GAAe,CACdnpD,OAAQA,EACR2kD,kBAAmB7qD,EAAK,UACxB2hC,OAAQA,EACR4tB,kBAAmBsC,EACnBnrD,QAAS+qD,EACT//C,oBAAqBk/C,GACrB,I,gBC6DN,SAASkB,GAAeC,GACtB,OAAIA,EAAMC,WACD,mBAGJD,EAAME,YAIJ,uBAHE,UAIX,CAEA,UAAe5yD,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ,CACLm+C,SAAS/9C,EAAAA,EAAAA,KAAeJ,GAAQm+C,QAChCz9C,oBAAoBC,EAAAA,EAAAA,KAAyBX,MAJ/BD,EAjGYq+C,EAAGD,UAASz9C,yBAC1C,MAAM,cACJ29C,EAAa,YACbC,IACEzgD,EAAAA,EAAAA,OACG0gD,EAAa1nB,EAAWC,IAAcxqC,EAAAA,EAAAA,KAEvCL,GAAOD,EAAAA,EAAAA,KAmESwyD,MAvDQC,EAqCTT,EAzCrB,IANAzxD,EAAAA,EAAAA,KAAU,KACJ4xD,EAAQtwD,OAAS,GACnBgpC,GACF,GACC,CAACsnB,EAAStnB,IAERsnB,EAAQtwD,OAmEb,OAAOiP,QAAQqhD,EAAQtwD,UAPjB,gBADgB2wD,EAQyBL,EAAQA,EAAQtwD,OAAS,KA/D1C4wD,EAyDED,EA3C5B1wD,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQosD,EACR5rD,QAASmkC,EACTrrC,UAAU,UACVyH,MAAOjH,EAAK,4BACZ0R,oBAAqB0gD,GAEpBpyD,EAAK,mCACN6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACVwE,QAAM,EAENnE,QA1Bc4yD,KACfh+C,IAIL49C,EAAY,CACVK,QAASF,EACTG,YAAal+C,IAEfo2B,IAAY,GAmBL7qC,EAAK,OAER6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAASgrC,GAAa7qC,EAAK,eAM/D+xD,EAuBAQ,EArBjB1wD,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQosD,EACR5rD,QAASmkC,EACTn5B,oBAAqB0gD,EACrB5yD,UAAU,QACVyH,MAAO6qD,GAAeC,IAErBA,EAAME,aAAcW,EAAAA,GAAAA,IAAqBb,IACtCluD,EAAAA,GAAAA,GAAWkuD,EAAMxpD,QAAU,CAAC,kBAAmB,QAAS,OAC5D1G,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACE,QAAM,EAACnE,QAASgrC,GAAa7qC,EAAK,UAcyB,K,gBC3F7E,MAcA,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IAAuB8+C,EAAAA,GAAAA,KAAK1+C,EAAAA,EAAAA,KAAeJ,GAAS,CAAC,mBADpCD,EAdkBg/C,EAAGC,oBACvC,GAAKA,EAAcnxD,OAInB,OACEC,EAAAA,GAAAC,cAAA,OAAKyD,GAAG,iBACLwtD,EAAc9wD,KAAK+wD,GAClBnxD,EAAAA,GAAAC,cAACmxD,GAAAA,EAAY,CAACpwD,IAAKmwD,EAAaE,QAASF,aAAcA,MAErD,K,gBCTV,MAgCA,IAAe3zD,EAAAA,EAAAA,KAhCqB8zD,EAAGl3C,UACrC,MAAM,oBAAEm3C,IAAwBxhD,EAAAA,EAAAA,MAE1B5R,GAAOC,EAAAA,GAAAA,KAEPozD,GAAa/tD,EAAAA,EAAAA,KAAY,KACxB2W,IAILvL,OAAO4iD,MAAKC,EAAAA,GAAAA,IAAet3C,GAAM,SAAU,uBAC3Cm3C,EAAoB,CAAEn3C,SAAKvb,IAAY,GACtC,CAAC0yD,EAAqBn3C,IAEnBu3C,GAAgBluD,EAAAA,EAAAA,KAAY,KAChC8tD,EAAoB,CAAEn3C,SAAKvb,GAAY,GACtC,CAAC0yD,IAEEK,GAAe7jB,EAAAA,GAAAA,GAAiB3zB,GAEtC,OACEpa,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ2K,QAAQoL,GAChBvV,QAAS8sD,EACTvsD,MAAOjH,EAAK,gBACZksB,WAAWroB,EAAAA,GAAAA,GAAW7D,EAAK,cAAe,CAAEic,IAAKw3C,GAAgB,CAAE5V,WAAW,EAAM6V,cAAc,KAClGtsB,aAAcpnC,EAAK,kBACnBqnC,eAAgBgsB,GAChB,I,gBC3CN,MCmGA,IAAeh0D,EAAAA,EAAAA,KAhFMs0D,EAAGlmB,YACtB,MAAM,cAAEmmB,IAAkBhiD,EAAAA,EAAAA,OAElBiiD,MAAOC,EAAQ,KAAE5/B,GAASuZ,GAAS,CAAC,EAEtCztC,GAAOD,EAAAA,EAAAA,KAEPmG,EAAS2K,QAAQijD,GAEjB50B,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClCyhD,GAAe,KAGVG,EAAWC,EAASC,EAAUC,IAAUzzD,EAAAA,EAAAA,KAAQ,KACrD,IAAKqzD,EACH,MAAO,GAGT,MAAMK,GAASC,EAAAA,GAAAA,IAAc,SAAUN,EAAU5/B,GAC3CmgC,GAAOD,EAAAA,GAAAA,IAAc,OAAQN,EAAU5/B,GACvCogC,GAAMF,EAAAA,GAAAA,IAAc,MAAON,EAAU5/B,GAG3C,MAAO,CAACigC,EAAQE,GAFFD,EAAAA,GAAAA,IAAc,QAASN,EAAU5/B,GAElBogC,EAAI,GAChC,CAACR,EAAU5/B,IAER+F,GAAU9nB,EAAAA,EAAAA,IAAiB8J,IAC/B23C,IACAljD,OAAO4iD,KAAKr3C,EAAK,SAAU,WAAW,IAGlCs4C,GAAoBpiD,EAAAA,EAAAA,IAAgB,KACxC8nB,EAAQ85B,EAAW,IAGfS,GAAkBriD,EAAAA,EAAAA,IAAgB,KACtC8nB,EAAQ+5B,EAAS,IAGbS,GAAmBtiD,EAAAA,EAAAA,IAAgB,KACvC8nB,EAAQg6B,EAAU,IAGdS,GAAiBviD,EAAAA,EAAAA,IAAgB,KACrC8nB,EAAQi6B,EAAQ,IAGlB,OACEryD,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJD,iBDpEiB,WCqEjBK,MAAOjH,EAAK,eACZkG,OAAQA,EACRQ,QAASw4B,EACToH,QAAM,GAENzkC,EAAAA,GAAAC,cAAA,OAAKtC,UD1EiC,aC2ElCgc,EAAAA,IAAUm5C,EAAAA,KACV9yD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAAC4jD,OAAK,EAAClkD,KAAK,UAAU3D,QAAS40D,GAAkB,cAI1D5yD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAAC4jD,OAAK,EAAClkD,KAAK,UAAU3D,QAAS00D,GAAmB,eAGzD1yD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAAC4jD,OAAK,EAAClkD,KAAK,UAAU3D,QAAS20D,GAAiB,aAGvD3yD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAAC4jD,OAAK,EAAClkD,KAAK,UAAU3D,QAAS60D,GAAgB,kBAIxD7yD,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAASq/B,GACvDl/B,EAAK,YAGJ,I,gBCpEZ,MAsFA,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IAEQ,CACL6gD,aAFkB7gB,EAAAA,EAAAA,KAAWhgC,EAAQA,EAAOqkB,kBAF9BtkB,EAtF4B+gD,EAC9CpnB,QAAOmnB,kBAEP,MAAM,kBAAEE,EAAiB,iBAAEC,EAAgB,kBAAEC,IAAsBpjD,EAAAA,EAAAA,OAC5DqjD,EAAgBC,IAAmBnjD,EAAAA,EAAAA,KAAS,IAC5CojD,EAAsBC,IAAyBrjD,EAAAA,EAAAA,KAAS,GACzDsjD,GAAczlB,EAAAA,GAAAA,GAAiBnC,GAAO,IACtC,OAAE6nB,EAAM,MAAEC,EAAK,yBAAEC,GAA6BH,GAAah5C,SAAW,CAAC,EACvEs1C,EAAM4D,GAAQ9iB,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAAK+qB,QAAS70D,EAE9CV,GAAOD,EAAAA,EAAAA,KAEPszD,GAAa/tD,EAAAA,EAAAA,KAAY,KACzBmoC,GAAOxxB,KAAOg5C,GACKxnB,EAAM+C,OAASukB,EAAmBC,GAC1C,CACXS,eAAgBN,IAETE,GAAap5C,KACtBvL,OAAO4iD,MAAKC,EAAAA,GAAAA,IAAe8B,EAAYp5C,KAAM,SAAU,YAEzD64C,GAAmB,GAClB,CACDrnB,EAAOwnB,EAAgBH,EAAmBC,EAAkBC,EAAmBG,EAAsBE,IAGjG7B,GAAgBluD,EAAAA,EAAAA,KAAY,KAChCwvD,GAAmB,GAClB,CAACA,IAEEY,GAAqBpwD,EAAAA,EAAAA,KAAaiN,IACtC2iD,EAAgB3iD,GAChB6iD,EAAsB7iD,EAAM,GAC3B,CAAC2iD,IAUJ,OAPA50D,EAAAA,EAAAA,KAAU,KACJg1D,IACFJ,GAAgB,GAChBE,EAAsBvkD,QAAQ2kD,IAChC,GACC,CAACA,EAA0BF,IAG5BzzD,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ2K,QAAQ48B,GAAOxxB,KACvBvV,QAAS8sD,EACTvsD,MAAOjH,EAAK,gBACZonC,aAAcpnC,EAAK,gBACnBqnC,eAAgBgsB,IAEfxvD,EAAAA,GAAAA,GAAW7D,EAAK,gBAAiBq1D,GAAap5C,KAAM,CAAC,UACrDq5C,GACCzzD,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPn2D,UAAU,kBACV8sC,QAAS2oB,EACTriD,MACE/Q,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,MACGlmC,EAAAA,GAAAA,GACC7D,EAAK,gCAAiC,CAACs1D,GAAQnoB,EAAAA,EAAAA,IAAgBynB,KAC/D,CAAC,qBAIPgB,QAASF,IAGZF,GACC3zD,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPn2D,UAAU,kBACV8sC,QAAS6oB,EACTviD,MACE/Q,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,MACGlmC,EAAAA,GAAAA,GACC7D,EAAK,yCAAyCmtC,EAAAA,EAAAA,IAAgBwkB,IAC9D,CAAC,qBAIPiE,QAASR,EACT1wC,UAAWuwC,IAGD,KC1FdY,GAA6B,IAAbC,EAAAA,IAkBhBC,GAAkB,CACtB,eACA,eACA,eACA,eACA,eACA,eACA,gBAgVF,SAASC,GAAcC,EAAcC,EAAeC,EAAaC,EAAgBC,GAC/E,MAAMC,EAAc,IAAI/lC,KAAK0lC,EAAMC,EAAOC,GACpCI,EAAeH,IAAWI,EAAAA,GAAAA,IAAYJ,GACtCK,EAAeJ,IAAWG,EAAAA,GAAAA,IAAYH,GAE5C,SAAII,GAAgBH,EAAcG,OAEvBF,GAAgBD,EAAcC,EAK3C,CAEA,SAASG,GAAgBnkD,GACvB,OAAOgwC,OAAOhwC,GAAOokD,SAAS,EAAG,IACnC,CAEA,SAASC,GAAUX,EAAcC,EAAeC,GAC9C,MAAQ,GAAEF,KAAQC,EAAQ,KAAKC,GACjC,CAaA,UAAe92D,EAAAA,EAAAA,KA9WqBw3D,EAClCC,aACAC,QACAC,QACAC,eACAC,aACAhxD,SACAixD,iBACAC,oBACAC,oBACA3wD,UACA4wD,WACAC,0BAEA,MAAMv3D,GAAOD,EAAAA,EAAAA,KACPywB,EAAM,IAAID,KAEV6lC,GAAU31D,EAAAA,EAAAA,KAAQ,IAClBw2D,IAAiBF,EAAc,IAAIxmC,KAChC,IAAIA,KAAK9uB,KAAKZ,IAAIk2D,GA9CP,OA+CjB,CAACE,EAAcF,IACZV,GAAU51D,EAAAA,EAAAA,KAAQ,IAClBy2D,IAAeF,EAAc,IAAIzmC,KAC9B,IAAIA,KAAK9uB,KAAKC,IAAIs1D,GAASnB,GAAeA,MAChD,CAACqB,EAAYF,IAEVQ,GAAqB/2D,EAAAA,EAAAA,KAAQ,IAAOq2D,EAAa,IAAIvmC,KAAKumC,GAAc,IAAIvmC,MAAS,CAACumC,IACtFW,GAAap9B,EAAAA,EAAAA,GAAsBn0B,IAClCwxD,EAAoBC,IAA0Bt3D,EAAAA,EAAAA,IAAQ,IAEtDu3D,EAAcC,IAAmB9lD,EAAAA,EAAAA,IAAeylD,IAChDM,EAAqBC,IAA0BhmD,EAAAA,EAAAA,IACpD,IAAIwe,KAAKqnC,EAAaI,cAAeJ,EAAaK,WAAY,KAEzDC,EAAeC,IAAoBpmD,EAAAA,EAAAA,IACxC2kD,GAAgBc,EAAmBtrB,cAE9BksB,EAAiBC,IAAsBtmD,EAAAA,EAAAA,IAC5C2kD,GAAgBc,EAAmBc,eAG/BhC,EAAcM,GAAUgB,EAAaI,cAAeJ,EAAaK,WAAYL,EAAaW,WAC1FC,EAAcV,EAAoBE,cAClCS,EAAeX,EAAoBG,WAEnCjoD,EAAcinD,GAAgBW,EAAac,UAAYtC,EAAQsC,WAC/DxB,GAAcU,EAAac,UAAYrC,EAAQqC,WAErDp4D,EAAAA,EAAAA,KAAU,MACHm3D,GAAcvxD,IACjB2xD,EAAgBL,GAChBO,EAAuB,IAAIxnC,KAAKinC,EAAmBQ,cAAeR,EAAmBS,WAAY,IAC7Fd,IACFgB,EAAiBzB,GAAgBc,EAAmBtrB,aACpDmsB,EAAmB3B,GAAgBc,EAAmBc,gBAE1D,GACC,CAACd,EAAoBtxD,EAAQuxD,EAAYN,KAE5C72D,EAAAA,EAAAA,KAAU,KACJ22D,IAAiBS,GAAsBE,EAAac,UAAYtC,EAAQsC,YAC1Eb,EAAgBzB,GAChB+B,EAAiBzB,GAAgBN,EAAQlqB,aACzCmsB,EAAmB3B,GAAgBN,EAAQkC,eAC7C,GACC,CAACrB,EAAcS,EAAoBtB,EAASwB,KAE/Ct3D,EAAAA,EAAAA,KAAU,KACJ42D,IAAeQ,GAAsBE,EAAac,UAAYrC,EAAQqC,YACxEb,EAAgBxB,GAChB8B,EAAiBzB,GAAgBL,EAAQnqB,aACzCmsB,EAAmB3B,GAAgBL,EAAQiC,eAC7C,GACC,CAACrB,EAAcC,EAAYQ,EAAoBrB,EAASD,EAASwB,KAEpEt3D,EAAAA,EAAAA,KAAU,KACR,GAAIw2D,EAAY,CACd,MAAM6B,EAAkB,IAAIpoC,KAAKumC,GACjCe,EAAgBc,GAChBR,EAAiBzB,GAAgBiC,EAAgBzsB,aACjDmsB,EAAmB3B,GAAgBiC,EAAgBL,cACrD,IACC,CAACxB,IAEJ,MAAM8B,EAA0B1B,GAAcsB,GAAehoC,EAAIwnC,eAAiBS,GAAgBjoC,EAAIynC,YAChG5B,GAAWmC,GAAenC,EAAQ2B,eAAiBS,GAAgBpC,EAAQ4B,WAC3EY,EAAyB5B,GAAgBuB,GAAehoC,EAAIwnC,eAAiBS,GAAgBjoC,EAAIynC,YAEjG,cAAEa,EAAa,iBAAEC,EAAgB,cAAEC,IAAkBv4D,EAAAA,EAAAA,KAAQ,IAqNrE,SAA2Bw1D,EAAcC,GACvC,MAAM4C,EAA0B,GAC1BC,EAA6B,GAC7BC,EAA0B,GAE1B/hC,EAAO,IAAI1G,KACjB0G,EAAKgiC,QAAQ,GACbhiC,EAAKiiC,SAAShD,GACdj/B,EAAKkiC,YAAYlD,GACjB,MAAMmD,EAAWniC,EAAKoiC,UAAY,EAC5BC,EAAuB,IAAI/oC,KAAK0lC,EAAMC,EAAO,GAAGqC,UAEtD,IAAK,IAAI1P,EAAI,EAAGA,EAAIuQ,EAAUvQ,IAC5BiQ,EAAcv3D,KAAK+3D,EAAuBF,EAAWvQ,EAAI,GAG3D,KAAO5xB,EAAKghC,aAAe/B,GAAO,CAChC,MAAMqD,EAAWtiC,EAAKshC,UACtBQ,EAAiBx3D,KAAKg4D,GACtBtiC,EAAKgiC,QAAQM,EAAW,EAC1B,CAEA,MAAMC,GAAoBT,EAAiBn3D,OAASk3D,EAAcl3D,QAAU,EAC5E,GAAI43D,EAAmB,EACrB,IAAK,IAAI3Q,EAAI,EAAGA,GAAK,EAAI2Q,EAAkB3Q,IACzCmQ,EAAcz3D,KAAKsnD,GAIvB,MAAO,CAAEiQ,gBAAeC,mBAAkBC,gBAC5C,CAlPIS,CAAkBjB,EAAaC,IAC9B,CAACA,EAAcD,IAEZkB,GAAcj5D,EAAAA,EAAAA,KAAQ,IACnB22D,GAsQX,SAA2Bp3D,EAAiBi3B,GAC1C,MAAMk/B,GAAMwD,EAAAA,GAAAA,GAAmB1iC,EAAMj3B,EAAK45D,MAG1C,OAAIzD,KAFUwD,EAAAA,GAAAA,GAAmB,IAAIppC,KAAQvwB,EAAK45D,MAGzC55D,EAAK,0CAA0C65D,EAAAA,GAAAA,IAAW75D,EAAMi3B,IAGlEj3B,EAAK,sCAAuC,CAACm2D,GAAK0D,EAAAA,GAAAA,IAAW75D,EAAMi3B,IAC5E,CA/QgC6iC,CAAkB95D,EAAM43D,IACnD,CAAC53D,EAAM43D,EAAcR,IA+BlBvtB,GAAevkC,EAAAA,EAAAA,KAAY,KAE7BgyD,EADEL,GAAgBW,EAAexB,EACxBA,EACAc,GAAcU,EAAevB,EAC7BA,EAEAuB,EACX,GACC,CAACX,EAAcC,EAAYd,EAASC,EAASiB,EAAUM,IAEpDmC,GAAoBz0D,EAAAA,EAAAA,KAAamN,IACrC,MAAMF,EAAQE,EAAEC,OAAOH,MAAMynD,QAAQ,UAAW,IAChD,IAAKznD,EAAM3Q,OAGT,OAFAu2D,EAAiB,SACjB1lD,EAAEC,OAAOH,MAAQ,IAInB,MAAM0nD,EAAQx4D,KAAKZ,IAAI,EAAGY,KAAKC,IAAI8nB,OAAOjX,GAAQ,KAE5C0kB,EAAO,IAAI1G,KAAKqnC,EAAac,WACnCzhC,EAAKijC,SAASD,GACdpC,EAAgB5gC,GAEhB,MAAMkjC,EAAWzD,GAAgBuD,GACjC9B,EAAiBgC,GACjB1nD,EAAEC,OAAOH,MAAQ4nD,CAAQ,GACxB,CAACvC,IAEEwC,GAAsB90D,EAAAA,EAAAA,KAAamN,IACvC,MAAMF,EAAQE,EAAEC,OAAOH,MAAMynD,QAAQ,UAAW,IAChD,IAAKznD,EAAM3Q,OAGT,OAFAy2D,EAAmB,SACnB5lD,EAAEC,OAAOH,MAAQ,IAInB,MAAM8nD,EAAU54D,KAAKZ,IAAI,EAAGY,KAAKC,IAAI8nB,OAAOjX,GAAQ,KAE9C0kB,EAAO,IAAI1G,KAAKqnC,EAAac,WACnCzhC,EAAKqjC,WAAWD,GAChBxC,EAAgB5gC,GAEhB,MAAMsjC,EAAa7D,GAAgB2D,GACnChC,EAAmBkC,GACnB9nD,EAAEC,OAAOH,MAAQgoD,CAAU,GAC1B,CAAC3C,IA0BJ,OACE/1D,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRQ,QAASA,EACTlH,UAAU,gBACVqT,QAASg3B,GAEThoC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,aACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACNrT,QAAS6G,GAET7E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGbvC,EAAAA,GAAAC,cAAA,UACG9B,EAAM,YAAWy4D,EAAe,KAChC,IACAD,GAGH32D,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACNwR,SAAUm0C,EACVh5D,QAAUg5D,OAA2Cn4D,EAlI/D,WACEq3D,GAAwByC,IACtB,MAAMC,EAAW,IAAIlqC,KAAKiqC,GAG1B,OAFAC,EAASvB,SAASuB,EAASxC,WAAa,GAEjCwC,CAAQ,GAEnB,GA6HU54D,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,cAGbvC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACNwR,SAAUk0C,EACV/4D,QAAU+4D,OAA2Cl4D,EAnI/D,WACEq3D,GAAwByC,IACtB,MAAMC,EAAW,IAAIlqC,KAAKiqC,GAG1B,OAFAC,EAASvB,SAASuB,EAASxC,WAAa,GAEjCwC,CAAQ,GAEnB,GA8HU54D,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,YAKjBvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,oBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACZu2D,GAAgB9zD,KAAKk0D,GACpBt0D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,4BACbqC,EAAAA,GAAAC,cAAA,YAAO9B,EAAKm2D,OAGf2C,EAAc72D,KAAKs3D,GAClB13D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBAAsBqC,EAAAA,GAAAC,cAAA,YAAOy3D,MAE7CR,EAAiB92D,KAAKs3D,GACrB13D,EAAAA,GAAAC,cAAA,OACEgrC,KAAK,SACLD,SAAU,EACVhtC,QAASA,KAAM66D,OA/IDzjC,EA+IkBsiC,OA9I1C1B,GAAiB2C,IACf,MAAMC,EAAW,IAAIlqC,KAAKiqC,GAK1B,OAJAC,EAASxB,QAAQhiC,GACjBwjC,EAASvB,SAAST,GAClBgC,EAAStB,YAAYX,GAEdiC,CAAQ,IAPnB,IAA0BxjC,CA+I4B,EAC1Cz3B,WAAWuC,EAAAA,GAAAA,GACT,aACA,aACAi0D,GACEwC,EAAaC,EAAcc,EAAUnD,EAASC,GAE5C,WACGkD,EAAW,YAAc,GAChCjD,IAAgBM,GAAU4B,EAAaC,EAAcc,IAAa,aAGnE1oD,QAAQ0oD,IACP13D,EAAAA,GAAAC,cAAA,YAAOy3D,MAIZP,EAAc/2D,KAAKs3D,GAClB13D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBAAsBqC,EAAAA,GAAAC,cAAA,YAAOy3D,QAKjDpC,GAzGDt1D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,SACEyB,KAAK,OACL/D,UAAU,eACVm7D,UAAU,UACVpoD,MAAO2lD,EACPnlD,SAAUgnD,EACVxa,QAASoY,IACT,IAEF91D,EAAAA,GAAAC,cAAA,SACEyB,KAAK,OACL/D,UAAU,eACVm7D,UAAU,UACVpoD,MAAO6lD,EACPrlD,SAAUqnD,EACV7a,QAASoY,KA2Fb91D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLjE,QAASgqC,EACTnlB,SAAU1U,GAET0pD,GAEFrC,GACCx1D,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACjE,QAAS03D,EAAqBvzD,QAAM,GACzCqzD,KAKH,IChTZ,IAAeh4D,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ,CAAE+iD,YAAY3iD,EAAAA,EAAAA,KAAeJ,GAAQ6mD,6BAF5B9mD,EAxB+B+mD,EACjD30D,SAAQ4wD,iBAER,MAAM,qBAAEgE,EAAoB,qBAAEC,IAAyBnpD,EAAAA,EAAAA,MAEjDopD,GAAmB11D,EAAAA,EAAAA,KAAa2xB,IACpC6jC,EAAqB,CAAE51C,UAAW+R,EAAKyhC,UAAY,MACnDqC,GAAsB,GACrB,CAACA,EAAsBD,IAEpB96D,GAAOD,EAAAA,EAAAA,KAEb,OACE8B,EAAAA,GAAAC,cAAC+0D,GAAa,CACZ3wD,OAAQA,EACR4wD,WAAYA,EACZI,YAAU,EACVE,kBAAmBp3D,EAAK,cACxB0G,QAASq0D,EACTzD,SAAU0D,GACV,K,gBCZN,MA+MA,IAAe37D,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU8tB,aAEF,CACLiS,KAFWjS,GAASkS,EAAAA,EAAAA,KAAWhgC,EAAQ8tB,QAAUnhC,EAGjDktD,WAAY/rB,GAASgsB,EAAAA,EAAAA,KAAiB95C,EAAQ8tB,QAAUnhC,EACxDu6D,cAAelnD,EAAOmnD,YAAYC,cANpBrnD,EAjM+BsnD,EACjDl1D,SACA27B,SACAw5B,kBACAvnB,OACA8Z,aACAqN,oBAEA,MAAM,cAAEK,EAAa,cAAEC,EAAa,sBAAEC,IAA0B5pD,EAAAA,EAAAA,MAE1D5R,GAAOD,EAAAA,EAAAA,KACP07D,GAAgB7rB,EAAAA,GAAAA,GAAiBkE,GACjC4nB,GAA2B9rB,EAAAA,GAAAA,GAAiByrB,GAE5CM,GAAWvsD,EAAAA,EAAAA,IAAyB,OAEnC66B,EAAS0mB,EAAaC,IAAiBvwD,EAAAA,EAAAA,MACvCu7D,EAAWC,IAAgB9pD,EAAAA,EAAAA,IAAiB0pD,GAAeG,WAAa,KACxEE,EAAUC,IAAehqD,EAAAA,EAAAA,IAAiB0pD,GAAeK,UAAY,KACrEE,EAAOC,IAAYlqD,EAAAA,EAAAA,IAAiB0pD,GAAeS,aAAe,KAClEC,EAAwBC,IAA6BrqD,EAAAA,EAAAA,KAAkB,GACxEsqD,EAAiBxrD,QAAQ+qD,KAAeP,GAAmBW,KAEjE17D,EAAAA,EAAAA,KAAU,KACJ4F,IACFyqD,IACAkL,EAAaJ,GAAeG,WAAa,IACzCG,EAAYN,GAAeK,UAAY,IACvCG,EAASR,GAAeS,aAAe,IACvCE,GAA0B,GAC5B,GACC,CAACl2D,EAAQyqD,EAAa8K,GAAeG,UAAWH,GAAeK,SAAUL,GAAeS,eAE3F57D,EAAAA,EAAAA,KAAU,MACHia,EAAAA,IAAgB0vB,GACnBt5B,YAAW,KAAQgrD,EAASpsD,SAAS+sD,OAAO,GAjDvB,IAkDvB,GACC,CAACryB,IAEJ,MAAMsyB,GAAwBj3D,EAAAA,EAAAA,KAAamN,IACzCopD,EAAappD,EAAEC,OAAOH,MAAM,GAC3B,IAEGiqD,GAAoBl3D,EAAAA,EAAAA,KAAamN,IACrCwpD,GAASQ,EAAAA,GAAAA,IAA0BxB,EAAexoD,EAAEC,OAAOH,OAAO,GACjE,CAAC0oD,IAEEyB,GAAuBp3D,EAAAA,EAAAA,KAAamN,IACxCspD,EAAYtpD,EAAEC,OAAOH,MAAM,GAC1B,IAEG2sB,GAAc55B,EAAAA,EAAAA,KAAY,KAC9Bk2D,IACAK,EAAa,IACbE,EAAY,IACZE,EAAS,GAAG,GACX,CAACT,IAEE3xB,GAAevkC,EAAAA,EAAAA,KAAY,KAC3B+1D,IAAoBx5B,EACtB05B,EAAc,CACZK,YACAE,WACAI,YAAaF,IAGfV,EAAc,CACZz5B,SACA+5B,YACAE,WACAK,0BAEJ,GACC,CAACP,EAAWL,EAAeF,EAAiBS,EAAUE,EAAOG,EAAwBb,EAAez5B,IAEvG,GAAK37B,GAAW+jC,EAuFhB,OACEpoC,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,UAAU,kBACVyH,MAAOjH,EAAK,cACZkG,OAAQA,EACRQ,QAASw4B,EACTxtB,oBAAqBk/C,GAEpB6K,GAzFD55D,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BAA2ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAClEmB,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt0B,KAAK,QACLu0B,KAAM0jC,EACN3hD,KAAO,GAAE8hD,KAAaE,MAExBj6D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iCACbqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCACVi8D,GAAeS,aACZO,EAAAA,GAAAA,IAA0BxB,EAAeQ,EAAcS,aACvDl8D,EAAK,iBAEX6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,+BAA+ByD,IAAI,SAChD6qD,EAAAA,EAAAA,IAAc9tD,EAAMy7D,EAAgB7N,MAI3C/rD,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRgG,IAAK0iD,EACLppD,MAAOqpD,EACPhpD,MAAO5S,EAAK,aACZ6sC,SAAU,EACV95B,SAAUwpD,IAEZ16D,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRV,MAAOupD,EACPlpD,MAAO5S,EAAK,YACZ6sC,SAAU,EACV95B,SAAU2pD,IAEZ76D,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,+BACVqE,EAAAA,GAAAA,GACC7D,EAAK,+BAAgCy7D,GAAeG,WAAa,IACjE,CAAC,QAAS,qBAGd/5D,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPn2D,UAAU,kBACV8sC,QAAS6vB,EACTtvB,SAAU,EACV+oB,QAASwG,EACTxpD,MAAO5S,EAAK,2BAEd6B,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,oEACVqE,EAAAA,GAAAA,GAAW7D,EAAK,wCAAyCy7D,GAAeG,cA6C5EF,GArCD75D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BAA+ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACtEmB,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACt0B,KAAK,QAAQsW,KAAO,GAAE8hD,KAAaE,MAC3Cj6D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yCACbqC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRgG,IAAK0iD,EACLppD,MAAOypD,EACPrB,UAAU,MACV/nD,MAAO5S,EAAK,qBACZ6sC,SAAU,EACV95B,SAAUypD,IAEZ36D,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRV,MAAOqpD,EACPhpD,MAAO5S,EAAK,aACZ6sC,SAAU,EACV95B,SAAUwpD,IAEZ16D,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRV,MAAOupD,EACPlpD,MAAO5S,EAAK,YACZ6sC,SAAU,EACV95B,SAAU2pD,MAiBhB76D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLE,QAAM,EACNxE,UAAU,wBACVklB,UAAW23C,EACXx8D,QAASgqC,GAER7pC,EAAK,SAER6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLE,QAAM,EACNxE,UAAU,wBACVK,QAASq/B,GAERl/B,EAAK,YAGJ,K,4ECxNL,IAAK28D,GAAgB,SAAhBA,GAAgB,OAAhBA,EAAAA,EAAgB,aAAhBA,EAAAA,EAAgB,mBAAhBA,EAAAA,EAAgB,eAAhBA,EAAAA,EAAgB,iBAAhBA,EAAAA,EAAgB,qBAAhBA,EAAAA,EAAgB,uBAAhBA,EAAAA,EAAgB,2BAAhBA,EAAAA,EAAgB,6BAAhBA,CAAgB,MAc5B,MAAMC,GAA+E,CACnFl1C,IAAKi1C,GAAiBE,IACtBl1C,OAAQg1C,GAAiBG,OACzBv8C,KAAMo8C,GAAiBI,KACvBv1C,MAAOm1C,GAAiBK,MACxBC,QAASN,GAAiBO,QAC1BC,SAAUR,GAAiBS,SAC3BC,WAAYV,GAAiBW,WAC7BC,YAAaZ,GAAiBa,aAG1BC,GAAwBpb,OAAO2K,KAAK4P,IAE1C,IAAIc,GACJ,MAAMC,GAAsB,CAAE7vC,EAAG,EAAGC,EAAG,G,gBCxCvC,MC0HA,IAAe1uB,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MACM6pD,GADWzpD,EAAAA,EAAAA,KAAeJ,GACP6pD,SAEnB,MAAErI,IAAUsI,EAAAA,EAAAA,KAAmB9pD,IAAW,CAAC,GAC3C,WAAE+pD,EAAU,cAAEC,GAAkBH,GAAW,CAAC,EAC5CI,EAAkC,cAAfF,EAGzB,MAAO,CACLG,aAHmB1I,GAAQxhB,EAAAA,EAAAA,KAAWhgC,EAAQwhD,QAAS70D,EAIvDs9D,mBACAD,gBACD,GAdejqD,EA9FSoqD,EAC3BD,eAAcD,mBAAkBD,oBAEhC,MAAM,uBACJI,EAAsB,iBACtBC,IACExsD,EAAAA,EAAAA,MAEE9R,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KAEPgZ,GAAM7J,EAAAA,EAAAA,IAAuB,MAE7BivD,GAAsB59D,EAAAA,EAAAA,KAAQ,IAC3Bs9D,GAAiB1b,OAAOuK,OAAOmR,IACrC,CAACA,IAEEO,EAAkBD,GAAqBz8D,OAEvCoxC,GAAQvyC,EAAAA,EAAAA,KAAQ,KACpB,IAAK69D,EAAiB,MAAO,GAE7B,MAAMvqD,GAAS0+B,EAAAA,EAAAA,MACT8rB,EAAiBN,GAAc14D,GAGrC,OAFmBwiC,EAAAA,GAAAA,IAAO,CAACw2B,KAAmBF,EAAoBp8D,KAAKu8D,GAAQA,EAAIjJ,UAC3DtzD,KAAKsD,GAAOA,IAAMwuC,EAAAA,EAAAA,KAAWhgC,EAAQxO,KAAKo8B,OAAO9wB,SAAS8wC,MAAM,EAAG,EAChF,GACV,CAAC2c,EAAiBL,EAAcI,IAE7BI,GAAmBtsD,EAAAA,EAAAA,IAAgB,KACvCisD,GAAkB,IAGdM,GAAoBvsD,EAAAA,EAAAA,IAAgB,KACxCgsD,EAAuB,CAAEQ,MAAO,aAAc,IAGhD,GAAKX,EAsBL,OACEn8D,EAAAA,GAAAC,cAAA,OACEmX,IAAKA,EACLzZ,WAAWuC,EAAAA,GAAAA,GD1FM,aC8FjBF,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UD/FmG,WCgGnGkY,OAAK,EACLxE,MAAM,cACN1P,KAAK,OACLmU,UAAW7X,EAAQ,SACnBD,QAAS4+D,GAET58D,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UDtGmL,WCsG3J4E,KAAK,WAErCvC,EAAAA,GAAAC,cAACixC,GAAAA,EAAU,CAACvzC,UDxG8G,WCwGnFgE,KAAK,OAAOwvC,MAAOA,IArC9D,WACE,MAAM4rB,EAAgB5rB,EAAMpxC,OAAS,GAAKoxC,EAAM,IAAI4oB,UAC9C30D,EAAQq3D,GAAmBM,GAAiBN,EAAkB,EAC/D,GAAEt+D,EAAK,mBACR,CACE6+D,QAASD,EACTxnC,MAAOknC,EAAkB,GAE3B,CACEQ,YAAaR,EAAkB,MAEjCM,EAEJ,OACE/8D,EAAAA,GAAAC,cAAA,OAAKtC,UDjFyM,YCkF3MyH,EAGP,CAoBK83D,GACDl9D,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GD3GoE,WC6G7E,WAEF2V,OAAK,EACLxE,MAAM,cACN1P,KAAK,OACL3D,QAAS6+D,GAET78D,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UDpHiK,WCoHpI4E,KAAK,kBAEtC,K,4BCtHV,UAAgB,UAAY,WAAW,mBAAmB,WAAW,eAAiB,WAAW,kBAAkB,WAAW,cAAgB,WAAW,KAAO,YCgFhK,IAAe/E,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aAGF,CACL0hC,MAHWC,EAAAA,EAAAA,KAAWhgC,EAAQ3B,MAFhB0B,EAlDpB,UAAwB,KAAEggC,EAAI,aAAEkrB,IAC9B,MAAM,mBACJC,IACErtD,EAAAA,EAAAA,MAEE5R,GAAOC,EAAAA,GAAAA,KAEPwoB,GAActW,EAAAA,EAAAA,IAAgB,KAClC,IAAK2hC,EACH,OAEF,MAAMyhB,EAAQzhB,GAAMvuC,GACpB,IAAKgwD,EACH,OAEF,MAAM2J,GAAQC,EAAAA,GAAAA,KACdF,EAAmB,CACjB1J,QACA9jD,OAAQ8jD,EACR2J,SACA,IAGJ,IAAKprB,EAAM,OAIX,MAAM7sC,EAAQ6sC,GAAM8nB,UACdwD,EAAkBtrB,GAAMurB,eACxBC,EAAYF,GAAmBJ,GAAeO,EAAAA,GAAAA,IAAqBv/D,EAAMo/D,QAAmB1+D,EAElG,OACEmB,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,GAAOwJ,UAClB3L,QAAS4oB,GAET5mB,EAAAA,GAAAC,cAAC09D,GAAAA,EAAS,CACRhgE,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOy9D,gBAAiBT,GAAgB,sBAClEU,cAAe19D,GAAOoC,KACtBu7D,eAAgB39D,GAAO49D,eACvBC,mBAAoB79D,GAAO89D,cAC3B/nC,KAAM+b,EACNh6B,KAAM7S,EACNq4D,UAAWA,EACXS,UAAU,gBAIlB,KC9EA,IAAgB,KAAO,WAAW,OAAS,WAAW,gBAAgB,WAAW,aAAe,WAAW,kBAAkB,WAAW,eAAiB,WAAW,aAAe,YCoC7KC,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAK,GA+FjD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACxC,MAAMmsD,GAAe/rD,EAAAA,EAAAA,KAAeJ,GAAQmsD,aACtC5mC,EAAW4mC,EAAaC,gBAAgBzf,QAE9C,MAAO,CACLhoB,WAAYY,GAAY4mC,EAAaE,gBAAgBC,QACrD/mC,WACAgnC,aAAcvsD,EAAOwsD,WAAWz2B,QACjC,GARiBh2B,EA7FkC0sD,EACpDlnC,WACAgnC,mBAEA,MAAMxgE,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MACNwgE,EAAoBC,IAAyB3uD,EAAAA,EAAAA,KAAkB,IAChE,qBACJ4uD,IACE/uD,EAAAA,EAAAA,MAEEgvD,GAA2BzuD,EAAAA,EAAAA,IAAgB,KAC/CuuD,GAAuBG,IAAUA,GAAK,KAGjCl5B,EAAaC,IAAkB71B,EAAAA,EAAAA,IAAS,IAEzC+uD,GAAmBrgE,EAAAA,EAAAA,KAAQ,IAC1B64B,GAEE0O,EAAAA,GAAAA,IAAmB,CAAEC,IAAK3O,EAAU4O,MAAOP,EAAapkC,KAAM,SAF/C,IAGrB,CAAC+1B,EAAUqO,IAER4f,GAAiBjiD,EAAAA,EAAAA,KAAY,EAAGsrB,gBAChCA,IAAcmwC,EAAAA,GAAkBC,WAClChB,IAAa,KACXW,GAAsB,GAE1B,GACC,IAEGM,GAAyB37D,EAAAA,EAAAA,KAAY,KACzCsiC,EAAe,GAAG,GACjB,IAEH,OACE/lC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACb/oD,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOkgC,KAAM,iBACvCsmB,MAAOsY,EACPrY,WAAYlB,EACZuH,aAAa,sBACboS,YAAU,EACVC,iBAvDqB,IAyDrBt/D,EAAAA,GAAAC,cAAComD,GAAAA,EAAW,CACV1oD,UAAWwC,GAAOmmD,OAClB51C,MAAOo1B,EACP50B,SAAU60B,EACVw5B,QAASH,EACT1S,YAAavuD,EAAK,gBAEnBsgE,IAAiB34B,GAChB9lC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOoqC,SACrBvqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOq/D,cACrBx/D,EAAAA,GAAAC,cAAA,YAAOhC,EAAQ,mBACf+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,GAAOs/D,aAAczhE,QAAS+gE,GAC5C9gE,EAAQ2gE,EAAqB,2BAA6B,8BAG/D5+D,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOu/D,gBACpBjB,EAAar+D,KAAI,CAACsD,EAAIlE,KACrB,GAAKo/D,KAAsBp/D,GAhEV,GAoEjB,OACEQ,EAAAA,GAAAC,cAAC0/D,GAAc,CACbpvD,OAAQ7M,GACR,MAMZ1D,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOoqC,SACrBvqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOq/D,cACNrhE,EAAd2nC,EAAmB,OAAe,gBAErC9lC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOu/D,gBACpBT,GAAoBA,EAAiB7+D,KAAKsD,GAEvC1D,EAAAA,GAAAC,cAAC0/D,GAAc,CACbpvD,OAAQ7M,EACRy5D,cAAer3B,QAMV,KC9Ff85B,GAAiC,MAAQ9mD,EAAAA,ECjC/C,GAAoG,WAApG,GAAmO,WAAnO,GAAqP,WAArP,GAA6U,WAA7U,GAA8c,WAA9c,GAAk/B,WAAl/B,GAAiwC,WAAjwC,GAA0zC,WC+FpzC+mD,GAA6B,IAM7BC,GAAqB,CACzB,gBACA,oBACA,eACA,cACA,eACA,2CACA92C,KAAK,KAED+2C,GAA8C,CAClDC,GAAI,KACJC,OAAQ,SACR/kD,MAAO,SA0jCT,IAAe1d,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU05B,YACT,MAAMs0B,EAAet0B,GAAOu0B,iBAAkBC,EAAAA,EAAAA,KAAaluD,EAAQ05B,EAAMu0B,sBAAmBthE,GACpF60D,MAAO2M,GAAgBH,GAAgB,CAAC,EAC1CjE,EAAarwB,GAAOqwB,WAEpBqE,EAAYD,EAAcnuD,EAAOquD,WAAWC,KAAKH,QAAexhE,EAChEixD,EAAMuQ,GAAcnuB,EAAAA,EAAAA,KAAWhgC,EAAQmuD,QAAexhE,EACtDuzC,EAAeiuB,GAAchuB,EAAAA,EAAAA,KAAmBngC,EAAQmuD,QAAexhE,EACvE4hE,EAAiBruB,GAAcsuB,SAASC,YACxC5N,EAAc7gD,EAAOqkB,eAAgB2b,EAAAA,EAAAA,KAAWhgC,EAAQA,EAAOqkB,oBAAiB13B,EAChFw+D,GAAQuD,EAAAA,EAAAA,KAAY1uD,IACpB,mBAAE2uD,EAAoB/d,OAAQge,IAAyBxuD,EAAAA,EAAAA,KAAeJ,GAAQ6uD,SAC5Eje,OAAQke,EAAoBC,aAAcC,IAAsB5uD,EAAAA,EAAAA,KAAeJ,GAAQivD,aACzFC,EAAoBtR,GAAMuR,EAAAA,EAAAA,KAAwBnvD,EAAQ49C,EAAIpsD,SAAM7E,EAEpEyiE,EAAgBN,GAAsBF,EAE5C,MAAO,CACLR,YACAxQ,MACAiD,cACAsK,QACAwD,mBAAoBA,GAAsB7xD,QAAQkyD,GAClDI,gBACArF,aACAmF,oBACAX,iBACD,GA5BexuD,EAvjCqCsvD,EACvD31B,QACA41B,SACA1R,MACAuN,QACAwD,qBACAS,gBACAG,4BACAC,8BACAC,iBACA1F,aACA2F,sBACAC,2BACAT,oBACAX,iBACAqB,kBAEA,MAAM,kBACJC,EAAiB,gBACjBC,EAAe,gBACfC,EAAe,iBACfC,EAAgB,qBAChBC,EAAoB,gBACpBC,EAAe,kBACfC,EAAiB,aACjBC,EAAY,mBACZC,EAAkB,iBAClBC,EAAgB,iBAChBz+B,EAAgB,2BAChB0+B,EAA0B,wBAC1BC,EAAuB,uBACvBpG,EAAsB,iBACtBC,EAAgB,+BAChBoG,IACE5yD,EAAAA,EAAAA,OACG6yD,EAAYC,IAAiB3yD,EAAAA,EAAAA,OAC7B4yD,EAAiBC,IAAsB7yD,EAAAA,EAAAA,OAEvCiuC,EAAU6kB,EAAYC,IAAgBzkE,EAAAA,EAAAA,IAAQ,IAE9C0kE,EAAiBC,IAAsBjzD,EAAAA,EAAAA,OACvCkzD,EAAmBC,KAAwBnzD,EAAAA,EAAAA,KAAS,IACpDozD,GAAyBC,KAA8BrzD,EAAAA,EAAAA,KAAS,IAChEszD,GAAuBC,KAA4BvzD,EAAAA,EAAAA,OACnDwzD,GAAgBC,KAAqBzzD,EAAAA,EAAAA,OACtC,eACJ0zD,GAAc,kBAAEC,GAAiB,kBAAEC,IC/JxB,WACb,MAAOF,EAAgBG,IAAqB7zD,EAAAA,EAAAA,IAAS,GAC/C8zD,GAAkBz2D,EAAAA,EAAAA,IAAO,GACzB02D,GAAiB12D,EAAAA,EAAAA,IAAO,GAExBs2D,GAAoBvzD,EAAAA,EAAAA,IAAgB,KACxC,MAAMqe,EAAMD,KAAKC,MAEbA,EAAMs1C,EAAev2D,QDwFH,MCvFpBs2D,EAAgBt2D,QAAU,GAG5Bs2D,EAAgBt2D,SAAW,EAEvBs2D,EAAgBt2D,SDiFO,GChFzBq2D,EAAkBp1C,EDiFE,IChFtB,IAGIm1C,GAAoBxzD,EAAAA,EAAAA,IAAgB,KACpCszD,EAAiBl1C,KAAKC,QACxBs1C,EAAev2D,QAAUghB,KAAKC,MAChC,IAGF,MAAO,CACLi1C,iBACAC,oBACAC,oBAEJ,CDkIMI,GAGEt4C,IAAere,EAAAA,EAAAA,IAAuB,MAGtC42D,IAAkB52D,EAAAA,EAAAA,IAAuB,MAGzC62D,IAAyB72D,EAAAA,EAAAA,IAAuB,MAEhDoT,GAA8B,eAAfs7C,EACfE,GAAkC,cAAfF,EAEnBoI,IAAyB/zD,EAAAA,EAAAA,IAAgB,KAC7CxB,YAAW,KAAQwtD,EAAuB,CAAEQ,MAAO,aAAc,GAjF7C,IAiFkE,IAIlFwH,IAAuB/2D,EAAAA,EAAAA,IAA2B,OAExD9O,EAAAA,EAAAA,KAAU,KACR6lE,GAAqB52D,QAAUtH,SAASoC,cAAc,WAA0B,GAC/E,IAEH,MAAO,CAAEob,GAAeC,KAAkBC,EAAAA,GAAAA,IAAcwgD,GAAsBD,IAExEnE,GAAet0B,GAAOu0B,gBAAkBv0B,EAAMswB,cAActwB,EAAMu0B,sBAAmBthE,EACrF0lE,GAAmBrE,IAAcsE,SACjC,IACJpqD,GAAG,WAAE1V,GAAU,oBAAE+/D,IACfjD,GAAU,CAAC,GAET,gBACJkD,IACEjE,GAAkB,CAAC,EAEjBkE,GAAmB31D,QAAQwyD,GAAQmD,kBACnCC,GAAoB51D,QAAQwyD,GAAQoD,mBAEpCC,GAAYrD,IAAUsD,EAAAA,GAAAA,IAAatD,GACnCrB,GAAkBD,KAAgB4E,EAAAA,GAAAA,IAAa5E,IAE/CxiE,GAAYwiE,IAAgBsB,GAAWrB,KAAoB0E,GAE3DE,GAAcC,EAAAA,GACdC,QAAuDpmE,IAAnCuiE,GAAmB8D,YACvCC,GAAkBn2D,QAAQoyD,GAAmB8D,aAE7CE,IAAsB90D,EAAAA,EAAAA,IAAiB+0D,IACtCR,IACLvC,EAAa,CAAEthE,IAAK6jE,GAAWS,OAAQD,GAAuB,IAG1DE,IAAc3mE,EAAAA,EAAAA,KAAQ,KACnB0+D,EAAAA,GAAAA,MAEN,CAACD,KAEJ5+D,EAAAA,EAAAA,KAAU,KACRklE,GAAkB4B,GAAYC,mBAAmB,GAChD,CAACD,KAEJ,MAAME,GAAuBF,GAAYG,UAClCC,GAA0BC,KAA+B11D,EAAAA,EAAAA,MAC1D21D,GAAwC,UAAVxI,EAAoBoD,GAAgBqF,gBACpErF,GAAgBsF,qBAEpBtnE,EAAAA,EAAAA,KAAU,KAGR2mE,GAAoB,CAAEU,gBAFRH,IAA4BE,IAA+BJ,IAE1B,GAC9C,CAACA,GAAsBE,GAA0BE,KAEpD,MAAMG,GAAmBT,GAAYG,UAC9BO,GAAsBC,KAA2Bh2D,EAAAA,EAAAA,MAClDi2D,GAAoC,UAAV9I,EAAoBoD,GAAgB2F,YAChE3F,GAAgB4F,iBAEpB5nE,EAAAA,EAAAA,KAAU,KAGR2mE,GAAoB,CAAEgB,YAFRH,IAAwBE,IAA2BH,IAEtB,GAC1C,CAACA,GAAkBC,GAAsBE,KAG5C,MAAMG,IAAW/4D,EAAAA,EAAAA,IAA0B,MAErCtP,IAAUC,EAAAA,EAAAA,KACVC,IAAOC,EAAAA,GAAAA,KACPiG,GAASunC,GAAO6kB,cAAe,EAC/B8V,GAAWv3D,QAAQtK,KAEnB,YACJ8hE,GAAW,UAAEC,GAAS,sBAAEC,GAAqB,aAAEC,GAAY,aAAEC,GAAY,UAAEC,IF9NxDC,EACrB1vD,EACA/S,EACAsc,EACAomD,EACAC,EACAxF,EACAt9D,KAEA,MAAM,iBACJ6/B,EAAgB,qBAChBo+B,EAAoB,YACpB8E,EAAW,YACXC,EAAW,yBACXC,EAAwB,aACxB7E,IACEvyD,EAAAA,EAAAA,MAEEq3D,GAAoB75D,EAAAA,EAAAA,KAAgB,GACpC85D,GAAgB95D,EAAAA,EAAAA,MAChB+5D,GAAkB/5D,EAAAA,EAAAA,KAAgB,GAClCg6D,GAAmBh6D,EAAAA,EAAAA,MACnB+sB,GAAahN,EAAAA,GAAAA,MAEnB7uB,EAAAA,EAAAA,KAAU,KACR,IAAK2Y,EAAI1J,UAAYrJ,EAAQ,OAE7B,MAAMmjE,EAAaA,KACjBtjE,KAAU,EAGN2W,EAAQzD,EAAI1J,QAElB,OADAmN,EAAM5B,iBAAiB,OAAQuuD,GACxB,KACL3sD,EAAM3B,oBAAoB,OAAQsuD,EAAW,CAC9C,GACA,CAACtjE,EAAQkT,EAAK/S,IAEjB,MAAMoiE,GAAYhjE,EAAAA,EAAAA,KAAa2tB,IACxBha,EAAI1J,SAAS+5D,eAClBrwD,EAAI1J,QAAQ+5D,cAAc3rD,YAAY4rD,KAAKC,UAAUv2C,GAAQ,IAAI,GAChE,CAACha,IAEEsvD,GAAwBjjE,EAAAA,EAAAA,KAAaiN,IACzC+1D,EAAU,CACRmB,UAAW,qBACXC,UAAW,CACTC,cAAep3D,IAEjB,GACD,CAAC+1D,IAEEsB,GAAmBz3D,EAAAA,EAAAA,IAAiB8J,IACxC,IAAKhD,EAAI1J,QAAS,OAClB,MAAMmN,EAAQzD,EAAI1J,QAClBmN,EAAM7S,IAAM,cACZ6S,EAAM5B,iBAAiB,QAAQ,KAC7B4B,EAAM7S,IAAMoS,CAAG,GACd,CAAE4tD,MAAM,GAAO,IAGdxB,GAAc/iE,EAAAA,EAAAA,KAAa2W,IAC/B,GAAIgtD,EAAkB15D,QAOpB,OANA+4D,EAAU,CACRmB,UAAW,uBAEbP,EAAc35D,QAAUoB,YAAW,KACjCi5D,EAAiB3tD,EAAI,GAtEN,MA2EnB2tD,EAAiB3tD,EAAI,GACpB,CAACqsD,IAEEE,GAAeljE,EAAAA,EAAAA,KAAawkE,IAChC,IAAK7wD,EAAI1J,QACP,OAEF,MAAM,MAAEC,EAAK,OAAEK,GAAWoJ,EAAI1J,QAAQqR,wBACtC0nD,EAAU,CACRmB,UAAW,mBACXC,UAAW,CACTl6D,QACAK,SACAk6D,aAAa,EACbC,iBAAkBF,IAEpB,GACD,CAACxB,EAAWrvD,IAETwvD,GAAenjE,EAAAA,EAAAA,KAAY,KAC1B2T,EAAI1J,UAGT+4D,EAAU,CACRmB,UAAW,oBACXC,UAAW,CACTnpD,KAAM,EACNiH,MAAO,EACPE,IAAK,EACLC,OAAQ,KAIZ2gD,EAAU,CACRmB,UAAW,4BACXC,UAAW,CACTnpD,KAAM,EACNiH,MAAO,EACPE,IAAKlF,EAAei/C,GAAiC,EACrD95C,OAAQ,KAEV,GACD,CAAC2gD,EAAW9lD,EAAcvJ,IAEvByvD,GAAYpjE,EAAAA,EAAAA,KAAY,KAC5BgjE,EAAU,CACRmB,UAAW,gBACXC,UAAW,CACTO,cAAc9K,EAAAA,GAAAA,OAEhB,GACD,CAACmJ,IAEE4B,GAAkB5kE,EAAAA,EAAAA,KAAawG,IACnCw8D,EAAU,CACRmB,UAAW,mBACXC,UAAW59D,GACX,GACD,CAACw8D,IAEE6B,GAAgB7kE,EAAAA,EAAAA,KAAa2tB,IACjC,GAAIk2C,EAAgB55D,QAClB,OAEF,MAAM+5D,EAAgBrwD,EAAI1J,SAAS+5D,cAGnC,GAAIA,IAFiBr2C,EAAM9pB,OAM3B,IACE,MAAMmU,EAAOisD,KAAKa,MAAMn3C,EAAM3V,OACxB,UAAEmsD,EAAS,UAAEC,GAAcpsD,EAMjC,GAJkB,kBAAdmsD,GACF1jE,MAGgB,kBAAd0jE,GACEpG,EAAQ,CACV,MAAMxgE,GAAM8jE,EAAAA,EAAAA,IAAatD,GACzB0F,EAAY,CAAElmE,MAAKwnE,yBAAyB,GAC9C,CAmBF,GAhBkB,6BAAdZ,GACFjB,EAAarsC,EAAWjN,YAGR,8BAAdu6C,GACFhB,IAGgB,sCAAdgB,GACFhB,IAGgB,0BAAdgB,GACFf,IAGgB,iBAAde,EAA8B,CAChC,MAAMa,EAAiB3gB,iBAAiB1hD,SAAS0b,MAAMkmC,iBAAiB,qBACxEqgB,EAvMiB,4VAuMelQ,QAAQ,qBAAsBsQ,IAC9DrB,EAAkB15D,QAAUsB,QAAQ64D,EAAUa,iBAChD,CAMA,GAJkB,uBAAdd,GACFp5D,aAAa64D,EAAc35D,SAGX,sBAAdk6D,EAAmC,CACrC,IAAKb,EAAc,OACnBO,EAAgB55D,SAAU,CAC5B,CA8BA,GA3BkB,qCAAdk6D,GACFnB,EAAU,CACRmB,UAAW,0BACXC,UAAW,CACTc,OAAQd,EAAUc,OAElBltD,KAAM,QAKM,+BAAdmsD,GACF7jC,EAAiB,CACfr9B,QAAS,yDAIK,yBAAdkhE,IACFzF,EAAqB,CACnByG,KAAMf,EAAUe,OAElB3B,EAAY,CACVvlE,KAAM,OACNknE,KAAMf,EAAUe,QAIF,sBAAdhB,EAAmC,CACrC,MAAMiB,EAAUhB,EAAUztD,IAC1BvL,OAAO4iD,KAAKoX,EAAS,SAAU,aACjC,CAWA,GATkB,8BAAdjB,GACFnB,EAAU,CACRmB,UAAW,yBACXC,UAAW,CACTiB,WAAW,KAKC,iCAAdlB,GACe,mCAAdA,GACc,oCAAdA,EAAiD,CACpD,MAAM,OAAEe,GAAWd,EACnBpB,EAAU,CACRmB,UAAW,wBACXC,UAAW,CACTc,SACAzY,MAAO,gBAGb,CAEA,GAAkB,iCAAd0X,GACe,mCAAdA,GACc,uCAAdA,GACc,oCAAdA,EAAiD,CACpD,MAAM,OAAEe,GAAWd,EACnBpB,EAAU,CACRmB,UAAW,wBACXC,UAAW,CACTc,SACAzY,MAAO,gBAGb,CA+CA,GA7CkB,gCAAd0X,GACFnB,EAAU,CACRmB,UAAW,uBACXC,UAAW,CACT3X,MAAO,iBAKK,4BAAd0X,GACFnB,EAAU,CACRmB,UAAW,mBACXC,UAAW,CACT3X,MAAO,iBAKK,qCAAd0X,GACFnB,EAAU,CACRmB,UAAW,4BACXC,UAAW,CACT3X,MAAO,iBAKK,+BAAd0X,GACFnB,EAAU,CACRmB,UAAW,qBACXC,UAAW,CACT3X,MAAO,iBAKK,8BAAd0X,GACFnB,EAAU,CACRmB,UAAW,sBACXC,UAAW,CACT/kB,OAAQ,iBAKI,6BAAd8kB,EAA0C,CAC5C,MAAM,gBAAEmB,EAAe,SAAE9sD,GAAa4rD,EAEtC,IAAKkB,GAA8C,iBAApBA,EAO7B,YANAtC,EAAU,CACRmB,UAAW,sBACXC,UAAW,CACT3X,MAAO,6BAMb,GAAIj0C,EACF,IACE+sD,OAAO/sD,EACT,CAAE,MAAOrL,GAOP,YANA61D,EAAU,CACRmB,UAAW,sBACXC,UAAW,CACT3X,MAAO,qBAIb,CAGF,IAAKsR,EAOH,YANAiF,EAAU,CACRmB,UAAW,sBACXC,UAAW,CACT3X,MAAO,mBAMbiX,EAAyB,CACvBtC,WAAWC,EAAAA,EAAAA,IAAatD,GACxByH,cAAeF,EACf9sD,SAAU0L,OAAO1L,GACjBy3C,MAAO8N,EAAO9N,OAElB,CAEAsT,EAAQvrD,EACV,CAAE,MAAO5Q,GACP,IAED,CACDk8D,EAAcN,EAAWO,EAASqB,EAAiB7G,EACnDqF,EAAWF,EAAcC,EAAc1iE,EAAQo2B,EAAWjN,WAC1DjW,IAyCF,OAtCA3Y,EAAAA,EAAAA,KAAU,KACR,MAAM,MAAEkP,EAAK,OAAEK,EAAM,WAAEqf,GAAeiN,EAClCitC,EAAiB75D,SAAW65D,EAAiB75D,QAAQC,QAAUA,GAC9D45D,EAAiB75D,QAAQM,SAAWA,IAAWu5D,EAAiB75D,QAAQ2f,aAC7Ek6C,EAAiB75D,QAAU,CAAEC,QAAOK,SAAQqf,cAC5Cs5C,EAAat5C,GAAW,GACvB,CAACs5C,EAAcC,EAActsC,KAEhC77B,EAAAA,EAAAA,KAAU,KACH+iE,GAAQ0H,eAAenpE,SACbyhE,EAAO0H,cACf3pE,SAAS6xB,IACdq1C,EAAUr1C,EAAM,IAGlBkxC,EAAa,CACXthE,KAAK8jE,EAAAA,EAAAA,IAAatD,GAClB8D,OAAQ,CACN4D,cAAe,MAEjB,GACD,CAACzC,EAAWjF,KAEf/iE,EAAAA,EAAAA,KAAU,KACRoQ,OAAOoK,iBAAiB,UAAWqvD,GAC5B,IAAMz5D,OAAOqK,oBAAoB,UAAWovD,KAClD,CAACA,EAAelxD,KAEnB3Y,EAAAA,EAAAA,KAAU,KACJ4F,GAAU+S,EAAI1J,SAAS+5D,eACzBd,IACAC,IACAU,EAAgB55D,SAAU,GAE1B65D,EAAiB75D,aAAU7O,CAC7B,GACC,CAACwF,EAAQsc,EAAcgmD,EAAcC,EAAcxvD,IAE/C,CACLqvD,YAAWC,wBAAuBF,cAAaG,eAAcC,eAAcC,YAC5E,EE/KGC,CAAeR,GAAUjiE,GAAQsc,GAAc4lD,IAwSnD,SAAqBn1C,GACnB,MAAM,UAAEw2C,EAAS,UAAEC,GAAcz2C,EAmBjC,GAjBkB,+BAAdw2C,KACEuB,EAAAA,EAAAA,MACF7M,EAAuB,CAAEQ,MAAO,eAEhC2J,GAAU,CACRmB,UAAW,oBACXC,UAAW,CACT3X,MAAO,kBAMG,4BAAd0X,GACFwB,KAGgB,yBAAdxB,EAAsC,CACxC,MAAMiB,EAAUQ,EAAAA,IAAkBxB,EAAUyB,UAC5CpH,EAAiB,CAAE9nD,IAAKyuD,EAASU,kBAAmB1B,EAAU2B,gBAC9DzH,GACF,CAcA,GAZkB,8BAAd6F,GACFxC,GAAoB,CAAEX,oBAAqBoD,EAAU4B,aAGrC,kCAAd7B,GACFxC,GAAoB,CAAEsE,wBAAyB7B,EAAU4B,aAGzC,iCAAd7B,GACFhC,IAA4B+D,EAAAA,GAAAA,IAAiB9B,EAAUx2D,OAASw2D,EAAUx2D,WAAQxS,GAGlE,6BAAd+oE,EAA0C,CAC5C,MAAM5mE,EAAM6mE,EAAU+B,UACtB1D,GAAwB2B,EAAUx2D,QAAUrQ,EAAMukE,GAAYvkE,QAAOnC,GACvE,CAeA,GAbkB,iCAAd+oE,GACFjE,GAAkBkE,EAAUx2D,OAGZ,sBAAdu2D,IACF7F,IACAC,EAAgB,CACdlS,IAAKA,EACLprD,WAAYA,GACZ+W,KAAMosD,EAAUpsD,QAIF,8BAAdmsD,EAA2C,CAC7C,MAAMv2D,EAAQw2D,EAAUx2D,MAClBw4D,EAAYhC,EAAUiC,WAC5BjH,EAAc,CACZjhD,UAAWimD,EAAU4B,YAAcz6D,QAAQ64D,EAAU5vD,MAAM8xD,OAAOhqE,QAClErC,SAAUmqE,EAAUmC,UACpB/xD,KAAM4vD,EAAU5vD,KAChB5G,QACAw4D,YACAI,kBAAmBpC,EAAUqC,qBAEjC,CAEA,GAAkB,mCAAdtC,EAAgD,CAClD,MAAMv2D,EAAQw2D,EAAUx2D,MAClBw4D,EAAYhC,EAAUiC,WAC5B/G,EAAmB,CACjBnhD,UAAWimD,EAAU4B,YAAcz6D,QAAQ64D,EAAU5vD,MAAM8xD,OAAOhqE,QAClErC,SAAUmqE,EAAUmC,UACpB/xD,KAAM4vD,EAAU5vD,KAChB5G,QACAw4D,YACAI,kBAAmBpC,EAAUqC,oBAC7BjoD,SAAU4lD,EAAU5lD,UAExB,CAMA,GAJkB,mCAAd2lD,GACFxC,GAAoB,CAAE+E,sBAAsB,IAG5B,uBAAdvC,EAAoC,CACtC,GAAI1E,IAAoB2E,EAAUnhE,QAAQqjE,OAAOhqE,SAAW8nE,EAAUuC,SAASrqE,QAC1E8nE,EAAUuC,QAAQrqE,OAAS,GAAKqjE,GAAqBE,IACrDM,GAAiBl1C,KAAKC,MAEzB,YADA07C,QAAoBxrE,GAItBskE,EAAmB0E,GACnBhE,IACF,CAEA,GAAkB,gCAAd+D,EAA6C,CAC/C,MAAM9nC,EAAS+nC,EAAUyC,YAAYlqE,IAAImqE,EAAAA,IAAsBzqC,OAAO9wB,SAChEw7D,GAAc1qC,GAAQ//B,OAE5BqiE,EAAgB,CACd1O,MAAO5D,EAAKpsD,GACZ2iC,MAAOwhC,EAAUxhC,MACjBvG,SACA0qC,eAGFzI,GACF,CAEA,GAAkB,0BAAd6F,EAAuC,CACzC,GAAI1E,GAAmBI,IAA2BM,GAAiBl1C,KAAKC,MAEtE,YADA87C,KAIFpH,IAAqB,GACrBQ,IACF,CAEA,GAAkB,iCAAd+D,EAA8C,CAChD,GAAI1E,GAAmBE,GAAqBQ,GAAiBl1C,KAAKC,MAEhE,YADA+7C,MAvNNnvD,iBACE,IAAKu0C,EAAK,OACV,MAAMlX,QAAiBl9B,EAAAA,GAAAA,IAAQ,yBAA0B,CACvDo0C,QAGElX,GACF6tB,GAAU,CACRmB,UAAW,yBACXC,UAAW,CACT/kB,OAAQ,aAIdygB,IAA4B3qB,EAC9B,CA4MI+xB,GACA9G,IACF,CAEA,GAAkB,iCAAd+D,EAA8C,CAChD,MAAM,OAAEgD,EAAM,OAAEhlE,EAAQ+iE,OAAQkC,GAAchD,GA5KlDtsD,eAAwCsvD,EAAmBD,EAAgBE,GACzE,MAAM1rE,QAAesc,EAAAA,GAAAA,IAAQ,4BAA6B,CACxDo0C,IAAKA,EACLib,aAAcH,EACdE,eAGFrE,GAAU,CACRmB,UAAW,wBACXC,UAAW,CACTc,OAAQkC,KACLzrE,IAGT,CA+JI4rE,CAAyBH,EAAWD,EAAQlD,KAAKC,UAAU/hE,GAC7D,CAEA,GAAkB,kCAAdgiE,EAA+C,CACjD,GAAIpE,IAAyBI,GAAiBl1C,KAAKC,MAEjD,YADAs8C,MArNN1vD,eAAuC2vD,EAAiBp2D,SAC5B4G,EAAAA,GAAAA,IAAQ,6BAA8B,CAC9Do0C,IAAKA,EACL11C,IAAK8wD,EACLp2D,cAaF2uD,GAAyB,CAAErpD,IAAK8wD,EAASp2D,aACzC+uD,MAVE4C,GAAU,CACRmB,UAAW,0BACXC,UAAW,CACT/kB,OAAQ,cAQhB,CAqMIqoB,CAAwBtD,EAAUztD,IAAKytD,EAAUuD,UACnD,CAEA,GAAkB,kCAAdxD,EAA+C,CACjD,IAAK9X,IAAQ+U,GAAW,OACxB,MAAM,GAAEnhE,GAAOmkE,EACflF,EAA+B,CAAEjP,MAAO5D,EAAIpsD,GAAI8X,UAAW9X,EAAImhE,cACjE,CAEA,GAAkB,wCAAd+C,EAAqD,CACvD,IAAK9X,EAAK,OACV2S,EAA2B,CAAE3S,MAAK+U,cACpC,CAEkB,2BAAd+C,GAEAnB,GAAU,CACRmB,UAAW,mBACXC,UAAW,CACTiB,UAAW/D,GACXsG,iBAAkBpG,GAClBqG,eAAgBnG,MAQN,6BAAdyC,GAC4BrsD,WAC5B,MAAMgwD,QAAwBC,EAAAA,EAAAA,OACxB,gBAAEC,EAAe,cAAEC,EAAa,YAAExG,GAAgBqG,EAExD,IAAKG,IAAkBD,EASrB,OARAhF,GAAU,CACRmB,UAAW,qBACXC,UAAW,CACTiB,WAAW,KAGf/kC,EAAiB,CAAEr9B,QAASzI,GAAQ,uCACpCosE,QAAoBxrE,GAIlBkmE,GACEE,GACFwB,GAAU,CACRmB,UAAW,qBACXC,UAAW,CACTiB,UAAW1H,GAAmB8D,YAC9ByG,SAAUzG,GAAayG,SACvBC,UAAW1G,GAAa0G,UACxBC,SAAU3G,GAAa2G,SACvBC,OAAQ5G,GAAa6G,QACrBC,MAAO9G,GAAa8G,MACpBC,oBAAqB/G,GAAagH,SAClCC,kBAAmBjH,GAAakH,oBAIpC1J,EAAwB,CAAE5S,MAAK+U,gBAGjC9gC,EAAiB,CAAEr9B,QAASzI,GAAQ,kCACpCosE,QAAoBxrE,GACtB,EAGFwtE,GAGgB,mCAAdzE,GACFrtB,IAEJ,GAngB0EinB,EAAQwB,IAElFvkE,EAAAA,EAAAA,KAAU,KACJf,IAAU+jE,EAA0BgF,GAAU,GACjD,CAACA,GAAWhF,EAA2B/jE,MAE1Ce,EAAAA,EAAAA,KAAU,KACJf,IAAUgkE,EAA4B8E,GAAY,GACrD,CAACA,GAAa9E,EAA6BhkE,KAE9C,MAAM4uE,GAAsBnuB,GAAYykB,GAAYhhD,WAAaghD,EAAW3qD,KAAK8xD,OAAOhqE,OAAS,EAC3FwsE,GAA2BpuB,GAAY2kB,GAAiBlhD,WAAakhD,EAAgB7qD,KAAK8xD,OAAOhqE,OAAS,EAE1GysE,IAAuBl8D,EAAAA,EAAAA,IAAgB,KAC3C80D,GAAoB,CAAET,kBAAkB,GAAQ,IAE5C8H,IAA0Bn8D,EAAAA,EAAAA,IAAgB,KAC9C80D,GAAoB,CAAE+E,sBAAsB,EAAOxF,kBAAkB,IACrE71D,YAAW,KACTizD,GAAmB,GArLF,IAsLD,IAGd2K,IAAwBp8D,EAAAA,EAAAA,IAAgB,KAC5C80D,GAAoB,CAAER,mBAAmB,GAAQ,IAG7C+H,IAAwBr8D,EAAAA,EAAAA,IAAgB,KAC5Cm2D,GAAU,CACRmB,UAAW,uBACX,IAGEgF,IAA6Bt8D,EAAAA,EAAAA,IAAgB,KACjDm2D,GAAU,CACRmB,UAAW,4BACX,IAGEyC,IAAsB/5D,EAAAA,EAAAA,IAAiBu8D,IAC3C1J,OAAmBtkE,GACnBilE,KACA2C,GAAU,CACRmB,UAAW,eACXC,UAAW,CACTiF,UAAWD,IAEb,IAGEE,IAA2Bz8D,EAAAA,EAAAA,IAAgB,KAC/C+5D,IAAqB,IAGjB2C,IAAoB18D,EAAAA,EAAAA,IAAgB,KACxCu2D,IAAW,KAIbp5D,EAAAA,EAAAA,IAAc,KACZqB,YAAW,KACTk+D,IAAmB,GA/NF,IAgOD,GACjB,CAAC3P,IAEJ,MAAM4P,IAAwB38D,EAAAA,EAAAA,IAAgB,OACvC48D,EAAAA,GAAAA,OAAuBxvE,IAC1BkmB,MACF,IAGIwlD,IAA2B94D,EAAAA,EAAAA,IAAgB,MAC3C48D,EAAAA,GAAAA,OAAuBxvE,IACzBmmB,MACF,IAGIspD,IAAgC78D,EAAAA,EAAAA,IACnCI,IAAyBhT,IAAUgpE,GAAsBh2D,EAAM,KAGlEjS,EAAAA,EAAAA,KAAU,KACJkiB,IACFssD,KACAE,IAA8B,KAE9B/D,KACA+D,IAA8B,GAChC,GACC,CAACxsD,KAEJ,MAAMysD,IAA4B98D,EAAAA,EAAAA,IAAiBm4B,IACjDg+B,GAAU,CACRmB,UAAW,qBACXC,UAAW,CACT4B,WAAYhhC,IAEd,KAGJhqC,EAAAA,EAAAA,KAAU,KACJ0/C,GACFivB,GAA0Bp+D,QAAQtR,IACpC,GACC,CAACA,GAAUygD,KAEdtW,EAAAA,GAAAA,IAAsB,EAAEwlC,MACH,cAAfpR,GACFmR,IAA0B,GAExBnR,GAAiC,cAAnBoR,GAChBD,IAA0B,EAC5B,GACC,CAACnR,KAEJxuD,EAAAA,EAAAA,IAAc,EAAE6/D,MACVzM,IAAuByM,GACvB9L,GAAQoH,OAAS/H,GAAsBS,IACzCmF,GAAU,CACRmB,UAAW,iBACXC,UAAW,CACTe,KAAMpH,EAAOoH,KACb9lB,OAAQwe,KAGZa,EAAqB,CACnByG,UAAM/pE,IAER0jE,IACF,GACC,CAAC1B,EAAoBS,EAAemF,GAAWjF,GAAQoH,OAE1D,MAAM2E,IAAwBj9D,EAAAA,EAAAA,IAAgB,KAC5C2xD,EAAgB,CACdvO,MAAO5D,EAAKpsD,GACZ8pE,WAAW,IAEbzL,GAAmB,IAGf0I,IAAoBn6D,EAAAA,EAAAA,IAAgB,KACxC+yD,IAAqB,GACrBS,KACA2C,GAAU,CACRmB,UAAW,kBACXC,UAAW,CACT/kB,OAAQ,cAEV,IAGE2qB,IAAoBn9D,EAAAA,EAAAA,IAAgB,KACxC+xD,EAAkB,CAAE3O,MAAO5D,EAAKpsD,KAChC2/D,IAAqB,GACrBS,KACA2C,GAAU,CACRmB,UAAW,kBACXC,UAAW,CACT/kB,OAAQ,SAEV,IAGEmoB,IAA2B36D,EAAAA,EAAAA,IAAiBo9D,IAC5CA,IACFjK,QAAyB5kE,GACzBilE,MAGF2C,GAAU,CACRmB,UAAW,0BACXC,UAAW,CACT/kB,OAAQ,cAEV,IAGE4nB,IAA0Bp6D,EAAAA,EAAAA,IAAgB,KAC9Cm2D,GAAU,CACRmB,UAAW,yBACXC,UAAW,CACT/kB,OAAQ,eAGZygB,IAA2B,GAC3BO,IAAmB,IAGf6J,IAA0Br9D,EAAAA,EAAAA,IAAgBiL,UACzCu0C,UACgBp0C,EAAAA,GAAAA,IAAQ,uBAAwB,CAAEo0C,SAMvD2W,GAAU,CACRmB,UAAW,yBACXC,UAAW,CACT/kB,OAAQ,aAGZygB,IAA2B,GAC3BO,MAXE4G,KAWiB,IAyCfkD,IAAqBt9D,EAAAA,EAAAA,IAAgB,KACpCkzD,KACLC,QAAyB5kE,GACzBilE,MAEAttD,EAAAA,GAAAA,GAASgtD,GAAsBppD,IAAKopD,GAAsB1uD,UAC1D2xD,GAAU,CACRmB,UAAW,0BACXC,UAAW,CACT/kB,OAAQ,iBAEV,KAmBJrkD,EAAAA,EAAAA,KAAU,KACH4F,KACH8+D,OAAmBtkE,GACnBwkE,IAAqB,GACrBE,IAA2B,GAC3BV,OAAchkE,GACdkkE,OAAmBlkE,GACnBumE,GAAoB,CAClBsE,yBAAyB,EACzBS,sBAAsB,EACtB1F,qBAAqB,EACrBE,kBAAkB,EAClBC,mBAAmB,IAErB3B,IACF,GACC,CAAC5+D,KAEJ,MAAMk2C,IAAiBjqC,EAAAA,EAAAA,IAAgB,KACrCkyD,EAAiB,CAAE9+D,GAAIosD,EAAKpsD,IAAK,IAgO7BmqE,IAAyB9/B,EAAAA,GAAAA,GAAiB60B,GAAYvxD,OAAO,GAC7Dy8D,IAA6B//B,EAAAA,GAAAA,GAAiB60B,GAAYiH,WAAW,GACrEkE,IAA4BhgC,EAAAA,GAAAA,GAAiB60B,GAAc5zD,QAAQ4zD,EAAWllE,WAAW,GACzFswE,IAAwBjgC,EAAAA,GAAAA,GAAiB60B,GAAY3qD,MAAM,GAE3Dg2D,IAAiClgC,EAAAA,GAAAA,GAAiB+0B,GAAiB7gD,UAAU,GAC7EisD,IAA8BngC,EAAAA,GAAAA,GAAiB+0B,GAAiBzxD,OAAO,GACvE88D,IAAkCpgC,EAAAA,GAAAA,GAAiB+0B,GAAiB+G,WAAW,GAC/EuE,IAAiCrgC,EAAAA,GAAAA,GAAiB+0B,GAAmB9zD,QAAQ8zD,EAAgBplE,WAAW,GACxG2wE,IAA6BtgC,EAAAA,GAAAA,GAAiB+0B,GAAiB7qD,MAAM,IAEpEq2D,GAA4BC,KAAiCr+D,EAAAA,EAAAA,KAAS,IACtEs+D,GAAsBC,KAA2Bv+D,EAAAA,EAAAA,KAAS,IAC1Dw+D,GAA2BC,KAAgCz+D,EAAAA,EAAAA,KAAS,IACpE0+D,GAAsBC,KAA2B3+D,EAAAA,EAAAA,KAAS,IAC1D4+D,GAA2BC,KAAgC7+D,EAAAA,EAAAA,KAAS,IAEpE8+D,GAA+BC,KAAoC/+D,EAAAA,EAAAA,KAAS,IAE5Eg/D,GAAqBC,KAA0Bj/D,EAAAA,EAAAA,IAAS,IAG/DzC,EAAAA,EAAAA,IAAc,KACZqB,YAAW,KACT63D,KACAC,IAAc,GACbjF,EAAiB,EAjsBD,IAisBoB,GACtC,CAACmN,GAA2BJ,GAC7BE,GAAsBA,GACtB9L,GAAiB7gD,SAAU0kD,GAAchF,EAAgBG,EACzD8E,KAEF,MAAMwI,GAAsD,QAAnCnB,IAA+E,WAAnCA,GAG/DoB,GAAaD,IAAoBR,IAAwBE,GAA6B,EACxFF,IAAwBE,GAA4B,EAAI,EAEtDQ,GALsBF,IAMrBZ,IAAyBE,GAA6C,WAAf,aAExDa,IAA0BhiE,EAAAA,EAAAA,MAC1BiiE,IAAwBjiE,EAAAA,EAAAA,MACxBkiE,IAA+BliE,EAAAA,EAAAA,MAC/BmiE,IAA6BniE,EAAAA,EAAAA,MAC7BoiE,IAAwBpiE,EAAAA,EAAAA,OAE9B9O,EAAAA,EAAAA,KAAU,KACJkiB,IAAgBtc,IAAU2K,QAAQu1D,KACpC0K,IAAiC,GAE7BU,GAAsBjiE,SACxBc,aAAamhE,GAAsBjiE,SAGrCiiE,GAAsBjiE,QAAUoB,YAAW,KACzCmgE,IAAiC,GACjCU,GAAsBjiE,aAAU7O,CAAS,GA5tBf,QA+tB5BowE,IAAiC,GAE7BU,GAAsBjiE,UACxBc,aAAamhE,GAAsBjiE,SACnCiiE,GAAsBjiE,aAAU7O,IAI7B,KACD8wE,GAAsBjiE,SACxBc,aAAamhE,GAAsBjiE,QACrC,IAED,CAACiT,GAActc,GAAQkgE,MAE1B9lE,EAAAA,EAAAA,KAAU,KACJ8wE,GAAwB7hE,SAASc,aAAa+gE,GAAwB7hE,SACtE8hE,GAAsB9hE,SAASc,aAAaghE,GAAsB9hE,SAElE4+D,KACFkD,GAAsB9hE,QAAUoB,YAAW,KACzC+/D,IAAwB,EAAK,GAC5B,IACHJ,IAAwB,GACxBc,GAAwB7hE,QAAUoB,YAAW,KAC3Cy/D,IAA8B,EAAK,GAClC1O,KAGAyM,KACHuC,IAAwB,GACxBU,GAAwB7hE,QAAUoB,YAAW,KAC3C2/D,IAAwB,EAAK,GAC5B5O,IACL,GACC,CAACyM,MAEJ7tE,EAAAA,EAAAA,KAAU,KACJgxE,GAA6B/hE,SAASc,aAAaihE,GAA6B/hE,SAChFgiE,GAA2BhiE,SAASc,aAAakhE,GAA2BhiE,SAE5E6+D,KACFmD,GAA2BhiE,QAAUoB,YAAW,KAC9CigE,IAA6B,EAAK,GACjC,IACHJ,IAA6B,GAC7Bc,GAA6B/hE,QAAUoB,YAAW,KAChDy/D,IAA8B,EAAK,GAClC1O,KAGA0M,KACHwC,IAA6B,GAC7BU,GAA6B/hE,QAAUoB,YAAW,KAChD6/D,IAA6B,EAAK,GACjC9O,IACL,GACC,CAAC0M,MAEJ9tE,EAAAA,EAAAA,KAAU,KACHqwE,IAA8BF,IACjCL,IAA8B,EAChC,GACC,CAACA,GAA+BO,GAA2BF,KAE9D,MAAMgB,GAAajO,EAAiB,wBAA0B,GAExDkO,IAAkBv/D,EAAAA,EAAAA,IAAgB,KAClCm0D,GACFgC,GAAU,CACRmB,UAAW,yBAGbwB,KACA1C,IAAsB,GACtBpK,EAAuB,CAAEQ,MAAO,cAChCP,IACF,IAGIuT,IAAsBx/D,EAAAA,EAAAA,IAAgB,KAC1C84D,IAA0B,IAGtB2G,IAAwBz/D,EAAAA,EAAAA,IAAiBM,IAC7CixD,EAAyBjxD,EAAE,IAGvBo/D,IAAgB9vE,EAAAA,GAAAA,GD35B0lC,WC65B9mCukE,ID75B6pC,YC+5BzpCwL,GAAoBjB,GAAgCzK,GACtDtmE,GAAQwmE,GAAsB,OAAS,SAErCyL,GAAmB9L,IAAwB12D,QA8GjD,OA5GAjP,EAAAA,EAAAA,KAAU,KAER0wE,GADc/K,IAAwB12D,SAAS8R,aAAe,EACjC,GAC5B,CAACywD,GAAmBC,KA0GrBlwE,EAAAA,GAAAC,cAAA,OACEmX,IAAKwU,GACLjuB,WAAWuC,EAAAA,GAAAA,GDnhCM,YCqhCdxC,IAAYyC,GACbyhE,GDthC4D,aCyhC7DjhD,KAAgBwoD,EAAAA,EAAAA,OAlFjBnpE,EAAAA,GAAAC,cAAA,OAAKtC,UDv8BouC,YCw8BvuCqC,EAAAA,GAAAC,cAAA,OAAKmX,IAAK+sD,GAAiBxmE,UAAWwC,GAAqBnC,QAAS6xE,IAClE7vE,EAAAA,GAAAC,cAAA,OAAKtC,UDz8BirC,YC08BprCqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWqyE,MA1BtBhwE,EAAAA,GAAAC,cAAA,QACEtC,UDj7B23C,WCk7B33CsM,MACG,UAASilE,SAGZlvE,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACTC,UAbF2vC,GAAsC,EACnCvK,GAAsB,EAAI,EAa3BliE,KAAK,aAELvC,EAAAA,GAAAC,cAAA,OACEmX,IAAKgtD,GACLzmE,UD57Bs5C,YC87Br5CsyE,OAgBLjwE,EAAAA,GAAAC,cAAA,OAAKtC,UD98BmxC,YC+8BtxCqC,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACTC,GDj9B8zC,YCo9Bh0C6qC,SAAU,EACVC,KAAK,SACL,aAAY9sC,GAAK,kBACjBH,QAAS8xE,IAET9vE,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CACHE,KAAK,OACL5E,UAAWwC,MAGfH,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACTC,GDh+Bi1C,YCm+Bn1C6qC,SAAU,EACVC,KAAK,SACL,gBAAc,OACd,aAAY9sC,GAAK,kBACjBH,QAAS+xE,IAET/vE,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CACHE,KAAK,OACL5E,WAAWuC,EAAAA,GAAAA,GACTC,GD5+BssC,kBC0hC9sCg8D,KAvBCuI,GAIH1kE,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAA2Bg+C,GAAYh+C,IACjEgwE,QAAQ,eAERnwE,EAAAA,GAAAC,cAAA,QAAMtC,UD3gCmH,WC2gChFg7D,EAAG+L,MArBlD,WACE,MAAM/mE,GAAYuC,EAAAA,GAAAA,GAAeC,GDv/B+J,WCu/BrGg+C,GAAYh+C,IACvG,OACEH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWA,GACdqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KAChBH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KAChBH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KAChBH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KAGtB,CAIWiwE,IAuBPpwE,EAAAA,GAAAC,cAAA,UACEtC,WAAWuC,EAAAA,GAAAA,GD5hCqP,WC8hC9PouE,ID9hC+S,YC+hC9SnwB,GAAYh+C,IAEf8J,MAAO2lE,GACP5nE,IAAKoS,GACLhV,MAAQ,GAAE0qD,GAAKiK,oBACfsW,QAASvQ,GACTwQ,MAAM,oDACNC,iBAAe,EACfn5D,IAAKkvD,MAELnK,IACAn8D,EAAAA,GAAAC,cAAA,OACEgK,MAAQ,qBAAoBy5D,MAC5B/lE,WAAWuC,EAAAA,GAAAA,GD5iCsf,WC8iC5d,SAAnC+tE,ID9iCuoB,WC+iCpmB,UAAnCA,ID/iC2rB,WCgjCxpB,QAAnCA,IDhjC+uB,WCijC5sB,WAAnCA,IDjjCmyB,WCkjCjxB,eAAlBqB,IDljC41B,WCmjC90B,IAAdD,IDnjCwiB,WCojC1hB,IAAdA,IDpjCmlB,aCujCrlBrvE,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GDxjCiX,WC0jC1X4uE,KAA8BJ,IAA6BvuE,GAC3DuuE,IAA6BvuE,IAE/B0lD,OAAK,EACL57C,MAAQ,qBAAoBikE,cAAuCC,KACnEtrD,UAAWurD,KAAmCtL,GAAiBmH,kBAC/D74B,eAAgB0xB,GAAiBmH,kBACjCjsE,QAAS4uE,GACTjrE,KAAK,YAEHmhE,GAAiBmH,mBAAqBoE,GACvCvL,GAAiBmH,mBACbjqE,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACltB,UAAWwC,GAA0BkR,MAAM,UAE3DrR,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GDzkCka,WC2kC3a0uE,KAAyBJ,IAAwBruE,GACjDquE,IAAwBruE,IAE1B0lD,OAAK,EACL57C,MAAQ,qBAAoB4jE,cAAkCC,KAC9DjrD,UAAWkrD,KAA8BnL,GAAYqH,kBACrD74B,eAAgBwxB,GAAYqH,kBAC5BjsE,QAAS2uE,GACThrE,KAAK,YAEHihE,GAAYqH,mBAAqB+D,GAClCpL,GAAYqH,mBAAqBjqE,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACltB,UAAWwC,GAA0BkR,MAAM,YAI3F6xD,GACCljE,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQ2K,QAAQk0D,GAChB99D,MAAO89D,EAAgB99D,OAhgCpB,IAigCHP,QAASkoE,GACTyD,gBAAc,EACd7yE,WACEuC,EAAAA,GAAAA,GDjmC0hC,YCimCt/BgjE,EAAgB99D,OAAO2kE,OAAOhqE,QDjmC6gC,aComChlCmjE,EAAgBx8D,QACjB1G,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACZulE,EAAgBkH,QAAQhqE,KAAKuuC,GAC5B3uC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLjB,IAAK2tC,EAAOjrC,IAAMirC,EAAOjtC,KACzB/D,UAAU,wBACV0T,MAAuB,gBAAhBs9B,EAAOjtC,KAAyB,SAAW,UAClDS,QAAM,EACNR,KAAK,UAEL3D,QAASA,IAAMqsE,GAAoB17B,EAAOjrC,KAEzCirC,EAAO12B,MAAQha,GAAQ8hE,GAAoBpxB,EAAOjtC,YAO7D1B,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ++D,EACRv+D,QAAS4lE,GACTrlE,MAAOnH,GAAQ,4BACfga,KAAMha,GAAQ,mCACdunC,eAAgBioC,GAChBloC,aAActnC,GAAQ,kBAExB+B,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQi/D,GACRz+D,QAAS6lE,GACTtlE,MAAOnH,GAAQ,6BACfga,KAAMha,GAAQ,uBACdunC,eAAgBmoC,GAChBpoC,aAActnC,GAAQ,iCAExB+B,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ2K,QAAQw0D,IAChBp+D,MAAOnH,GAAQ,wBACfosB,UAAWlsB,GAAK,6BAA8B,CAC5C2xD,IAAKA,GAAKiK,UACV0W,SAAUjN,IAAuB1uD,UAChC,CACDknC,WAAW,EACX6V,cAAc,IAEhBtsB,aAActnC,GAAQ,yBACtB4G,QAASomE,GACTzlC,eAAgBooC,KAGlB5tE,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQsgE,GACR9/D,QAAS2nE,GACTpnE,MAAOnH,GAAQ,+BACfga,KAAMha,GAAQ,yBACdunC,eAAgBinC,GAChBhnC,sBAAoB,EACpBF,aAActnC,GAAQ,gCAExB+B,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQugE,GACR//D,QAAS6nE,GACTtnE,MAAOnH,GAAQ,0BACfosB,WAAWroB,EAAAA,GAAAA,GAAW/D,GAAQ,oBAAqB6xD,GAAKiK,WAAY,CAAC,oBACrEv0B,eAAgB+nC,GAChB9nC,sBAAoB,IAElB,KEvqCV,GAA6R,WAA7R,GAA4U,WAA5U,GAAkY,WAAlY,GAA4b,WAA5b,GAAkkB,WAAlkB,GAAuoB,WAAvoB,GAAi0B,WAAj0B,GAAoiC,WAApiC,GAA6qC,WAA7qC,GAA4tC,WAA5tC,GAA8uC,WCsExuCirC,GAAuB,CAAE/iE,MAAO,IAAKK,OAAQ,IAC7C2iE,GAA+B,CAAEhjE,MAAO,IAAKK,OAAQ,KACrD4iE,GAA+B,CAAEjjE,MAAO,IAAKK,OAAQ,KAyoB3D,IAAexQ,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU05B,YACT,MAAMs0B,EAAet0B,GAAOu0B,iBAAkBC,EAAAA,EAAAA,KAAaluD,EAAQ05B,EAAMu0B,sBAAmBthE,GACpF60D,MAAO2M,GAAgBH,GAAgB,CAAC,EAE1CI,EAAYD,EAAcnuD,EAAOquD,WAAWC,KAAKH,QAAexhE,EAChEixD,EAAMuQ,GAAcnuB,EAAAA,EAAAA,KAAWhgC,EAAQmuD,QAAexhE,EACtD6T,GAAOC,EAAAA,EAAAA,KAAkBT,GACzBmrD,GAAQuD,EAAAA,EAAAA,KAAY1uD,IACpB,uBAAE2+D,EAAsB,mBAAEC,IAAuBC,EAAAA,GAAAA,GAAqB7+D,GAE5E,MAAO,CACLouD,YACAxQ,MACAp9C,OACA2qD,QACA2T,eAAgBH,EAChBI,WAAYH,EACb,GAlBe7+D,EAvoB2Bi/D,EAC7CtlC,QACAl5B,OACAo9C,MACAwQ,YACAjD,QACA4T,aACAD,qBAEA,MAAM,kBACJjP,EAAiB,iBACjBxF,EAAgB,eAChB4U,EAAc,gBACdlP,EAAe,SACf11B,EAAQ,uBACR+vB,EAAsB,cACtB8U,EAAa,aACb9O,EAAY,gBACZ+O,EAAe,iBACfC,EAAgB,4BAChBC,EAA2B,wBAC3BC,IACEzhE,EAAAA,EAAAA,OAEG0hE,EAAuBC,IAAyB10D,EAAAA,EAAAA,IAAUi0D,GAAcN,IAE/E,SAASgB,IACP,MAA0B,eAAtB/lC,GAAOqwB,WAAoC3hC,EAAAA,EAAWlsB,MAChC,cAAtBw9B,GAAOqwB,WAAmCwV,IACvCf,EACT,CAMA,MAAM,cACJxU,EAAa,gBAAEiE,EAAe,kBAAEyR,EAAiB,YAAEC,EAAW,oBAAEC,GAC9DlmC,GAAS,CAAC,EACRs0B,EAAeC,EAAkBjE,IAAgBiE,QAAmBthE,GACpE,oBACJ4lE,EAAmB,YAAE2B,EAAW,gBAAEN,EAAe,wBAAE4D,GACjDxJ,GAAgB,CAAC,EAEf6R,GAAOnzE,EAAAA,EAAAA,KAAQ,IACZgzE,GAAmBxxE,KAAKY,IAC7B,MAAMwgE,EAAStF,EAAel7D,GAC9B,MAAO,CACL8uD,KAAKlf,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAAK64B,EAAO9N,OACnC8N,SACAn9D,OAAQ2K,QAAQkxD,GAAiBl/D,KAAQ8jE,EAAAA,GAAAA,IAAa5E,IACvD,KAEF,CAAC0R,EAAmB1V,EAAegE,KAEhC,SAAEh9D,IAAaC,EAAAA,EAAAA,MACfkB,EAASunC,GAAO6kB,cAAe,EAC/BuhB,EAAyC,cAAtBpmC,GAAOqwB,WAC1BE,EAAyC,cAAtBvwB,GAAOqwB,WAC1BgW,EAAqC,eAAtBrmC,GAAOqwB,WAEtBiW,GAAuBhvE,EAEvBkU,GAAM7J,EAAAA,EAAAA,IAAuB,MAE7BksB,GAAYlsB,EAAAA,EAAAA,IAAuB,MAEnC4kE,GAAU5kE,EAAAA,EAAAA,IAAuB,MAEjC6kE,GAAoB9hE,EAAAA,EAAAA,IAAgB,IAAM8G,EAAI1J,UAE9C2kE,IAAiB/hE,EAAAA,EAAAA,IACrB,IAAM8G,EAAI1J,UAGN4kE,IAAiBhiE,EAAAA,EAAAA,IACrB,IAAM6hE,EAAQzkE,WAGV,kBACJ6kE,GAAiB,kBACjBC,GAAiB,kBACjBC,GAAiB,uBACjBC,GAAsB,sBACtBC,KACEC,EAAAA,GAAAA,GAAuBx7D,IAEpBy7D,GAAmBC,KAAwB5iE,EAAAA,EAAAA,KAAS,GAErD6iE,GAAgBt5C,EAAU/rB,QAC1BslE,GAAmB57D,EAAI1J,SAE7BjP,EAAAA,EAAAA,KAAU,KACRq0E,GAAqB9jE,QAAQkjE,GAAuBa,IAAiBC,KAAqBf,GAAc,GACvG,CAACC,EAAqBa,GAAeC,GAAkBf,KAE1DxzE,EAAAA,EAAAA,KAAU,KACR69D,EAAuB,CAAEQ,MAAO,aAAc,GAC7C,CAACoV,IAEJ,MAAM,WACJe,GAAU,WACV5lD,GACApjB,MAAOipE,GAAc,KACrBvxE,GAAI,SACJsgB,IZzIW,SACb7K,EACA+7D,EACAC,GAAyB,EACzBC,EACA1yD,GAAwB,EACxB2yD,EAAoB,CAAE3lE,MAAO,EAAGK,OAAQ,GACxCgjE,GAEA,MAAOuC,EAAwBC,IAA6BtjE,EAAAA,EAAAA,IAA4B8gE,IACjFyC,EAAoBC,IAAyBxjE,EAAAA,EAAAA,SAA2BrR,IAExE80E,EAAoCC,IAAsC52D,EAAAA,EAAAA,IAAU,CAAEiP,EAAG,EAAGC,EAAG,KAC/F2nD,EAAgCC,IAAkC92D,EAAAA,EAAAA,IAAU,CAAErP,MAAO,EAAGK,OAAQ,KAChG+lE,EAAwBC,IAA0Bh3D,EAAAA,EAAAA,IAAU,CAAEiP,EAAG,EAAGC,EAAG,IAExE+nD,EAAkCN,IAClCO,EAAsBH,IAEtB5/C,EAAU/c,EAAI1J,QACdymE,EAAoBhB,EAAqBzlE,SAExC0mE,EAAaC,IAAkB71E,EAAAA,EAAAA,IAAQ,IACvC81E,EAAiBC,IAAsB/1E,EAAAA,EAAAA,IAAQ,IAC/Cy0E,EAAYuB,EAAeC,IAAgBj2E,EAAAA,EAAAA,IAAQ,IACnD6uB,EAAYqnD,EAAeC,IAAgBn2E,EAAAA,EAAAA,IAAQ,IACnDo2E,EAAmBC,EAAqBC,IAAsBt2E,EAAAA,EAAAA,IAAQ,IAEtEu2E,EAAiBC,IAAsB9kE,EAAAA,EAAAA,SAAuCrR,GAErF,SAASo2E,IACP,MAAO,CACLtnE,MAAOkB,OAAOqmE,WACdlnE,OAAQa,OAAOsmE,YAEnB,CAEA,MAAMC,GAAwB9kE,EAAAA,EAAAA,IAAiB2R,IACxCtB,GAAc6yD,EAA0B,CAAEvnD,EAAGhK,EAASgK,EAAGC,EAAGjK,EAASiK,GAAI,IAG1EmpD,GAAoB/kE,EAAAA,EAAAA,IAAgB,IACjCqQ,EAAem7C,GAAsByX,IAGxC+B,GAAsBhlE,EAAAA,EAAAA,IAAgB,KAC1C,IAAKmjE,EAAoB,OACzB,MAAM,MAAE9lE,EAAK,OAAEK,GAAWylE,EAEpB8B,EAAcN,IAOpB,MAAO,CAAEhpD,GANaspD,EAAY5nE,MAGCA,GAAS,EAGrBue,GALAqpD,EAAYvnE,OAGCA,GAAU,EAET,KAGvCvP,EAAAA,EAAAA,KAAU,KACJ01B,GAASogD,GAAoB,GAChC,CAACpgD,KAEJ11B,EAAAA,EAAAA,KAAU,KACR,IAAK21E,GAAeX,EAAoB,CACtC,MAAM+B,EAAmBF,IACzB,IAAKE,EAAkB,OAEvBJ,EAAsBI,GACtBnB,GACF,IACC,CAACZ,EAAoBW,EAAajgD,IAErC,MAAMshD,GAAkBnlE,EAAAA,EAAAA,IAAiB8gB,IACvC,GAAIA,aAAiBjS,YAA+B,IAAjBiS,EAAMud,OACvC,OAIF,GADsBvd,EAAMvgB,OACVue,QAAQ,cAAgB+E,EACxC,OAEF,MAAM,MAAEjV,EAAK,MAAEgP,GAAW,YAAakD,EAASA,EAAMhS,QAAQ,GAAKgS,GAE7D,KAAE1S,EAAI,IAAEmH,GAAQsO,EAAQpV,wBAC9B60D,EAAmC,CAAE3nD,EAAGvN,EAAMwN,EAAGrG,IACjDmuD,EAAuB,CAAE/nD,EAAG/M,EAAOgN,EAAGgC,IAEtCsmD,GAAe,IAaXkB,GAAoBplE,EAAAA,EAAAA,IAAiB8gB,IACzC,GAAIA,aAAiBjS,YAA+B,IAAjBiS,EAAMud,OACvC,OAGF,MAAMgnC,EAAgBvkD,EAAMvgB,OAC5B,IAAKsjB,IAAYwhD,EACf,OAEF,MAAMC,EAnBR,SAAmCD,GACjC,MAAMvmD,EAAWgF,GAAqBuhD,EAAcvmD,QAAQgF,GAE5D,GAAKhF,EAAQymD,EAAAA,KACb,IAAK,MAAMzhD,KAAYwnC,GACrB,GAAIxsC,EAAS,IAAGgF,KAAe,OAAO2mC,GAAyB3mC,EAGnE,CAWuB0hD,CAA0BH,GAE/C,QAAqB92E,IAAjB+2E,EAA4B,OAChCZ,EAAmBY,GAEnB,MAAM,MAAE12D,EAAK,MAAEgP,GAAW,YAAakD,EAASA,EAAMhS,QAAQ,GAAKgS,GAE7D,KACJ1S,EAAI,MAAEiH,EAAK,IAAEE,EAAG,OAAEC,GAChBqO,EAAQpV,wBACZ60D,EAAmC,CAAE3nD,EAAGvN,EAAMwN,EAAGrG,IACjDiuD,EAA+B,CAAEnmE,MAAOgY,EAAQjH,EAAM1Q,OAAQ8X,EAASD,IACvEmuD,EAAuB,CAAE/nD,EAAG/M,EAAOgN,EAAGgC,IAEtCwmD,GAAe,IAGXqB,GAAoBzlE,EAAAA,EAAAA,IAAgB,KACxCmkE,GAAc,IAGVuB,GAAsB1lE,EAAAA,EAAAA,IAAgB,KAC1CqkE,GAAc,KAGhBl2E,EAAAA,EAAAA,KAAU,KACH20E,GACHqB,GACF,GACC,CAACrB,IAEJ,MAAM6C,EAA8BA,CAAChqD,EAAWC,KAC9C,MAAMqpD,EAAcN,IAEdiB,EAAmBX,EAAY5nE,MAC/BwoE,EAAoBZ,EAAYvnE,OAEhCooE,EAAiB3C,EAAoB9lE,MACrC0oE,EAAkB5C,EAAoBzlE,OAE5C,IAAIsoE,EAAOrqD,EACPsqD,EAAOrqD,EAOX,OALIoqD,EAAO,IAAGA,EAAO,GACjBC,EAAO,IAAGA,EAAO,GACjBD,EAAOF,EAAiBF,IAAkBI,EAAOJ,EAAmBE,GACpEG,EAAOF,EAAkBF,IAAmBI,EAAOJ,EAAoBE,GAEpE,CAAEpqD,EAAGqqD,EAAMpqD,EAAGqqD,EAAM,EAGvBC,GAA6BlmE,EAAAA,EAAAA,IAAgB,KACjD,GAAIqQ,EAAc,OAClB,MAAMsB,EAAYqyD,GAAoBtD,EAAyCuC,EAAxB+B,IACvD,IAAK7B,IAAuBxxD,EAAU,OACtC,MAAMw0D,EAAcR,EAA4Bh0D,EAASgK,EAAGhK,EAASiK,GACrEkpD,EAAsBqB,EAAY,IAG9BC,GAA0BpmE,EAAAA,EAAAA,IAAiBqmE,IAC/C,MAAMC,EAAUD,EAEVpB,EAAcN,IAEd4B,EAAgBxD,EAAa1lE,MAC7BmpE,EAAiBzD,EAAarlE,OAIpC,OAHA4oE,EAAQjpE,MAAQ/N,KAAKC,IAAI01E,EAAY5nE,MAAO/N,KAAKZ,IAAI63E,EAAeD,EAAQjpE,QAC5EipE,EAAQ5oE,OAASpO,KAAKC,IAAI01E,EAAYvnE,OAAQpO,KAAKZ,IAAI83E,EAAgBF,EAAQ5oE,SAExE4oE,CAAO,KAGhBn4E,EAAAA,EAAAA,KAAU,KACR,GAAI4uB,EAAY,OAChB,MAAMupD,EAAUF,EAAwB,CAAE/oE,MAAO0lE,EAAa1lE,MAAOK,OAAQqlE,EAAarlE,SACtF4oE,GAASlD,EAAsBkD,EAAQ,GAC1C,CAACvD,EAAchmD,IAElB,MAAM0pD,GAAyBzmE,EAAAA,EAAAA,IAAgB,KAC7C,IAAKmjE,GAAsBpmD,EAAY,OACvC,MAAMupD,EAAUF,EAAwBjD,GACpCmD,GAASlD,EAAsBkD,EAAQ,KAG7Cn4E,EAAAA,EAAAA,KAAU,KACJ4uB,GACJmpD,GAA4B,GAC3B,CAAC/C,EAAoBpmD,KAExB5uB,EAAAA,EAAAA,KAAU,KACR,MAAMu4E,EAAqBA,KACzBnC,IACAkC,IACAP,IACI3a,KACFrtD,aAAaqtD,IACbA,QAAgBh9D,GAElBg9D,GAAgBhtD,OAAOC,YAAW,KAChC+sD,QAAgBh9D,EAChBi2E,GAAoB,GACnB,IAAI,EAKT,OAFAjmE,OAAOoK,iBAAiB,SAAU+9D,GAE3B,KACLxoE,aAAaqtD,IACbA,QAAgBh9D,EAChBgQ,OAAOqK,oBAAoB,SAAU89D,EAAmB,CACzD,GACA,CAACR,IAEJ,MAAMS,GAAa3mE,EAAAA,EAAAA,IAAiB8gB,IAClC,IAAK6hD,IAAe9+C,EAAS,OAC7B,MAAM,MAAEjV,EAAK,MAAEgP,GAAW,YAAakD,EAASA,EAAMhS,QAAQ,GAAKgS,EAE7DyB,EAAU3T,EAAQg1D,EAAoBjoD,EACtC6G,EAAU5E,EAAQgmD,EAAoBhoD,EAEtCoqD,EAAOrC,EAAgChoD,EAAI4G,EAC3C0jD,EAAOtC,EAAgC/nD,EAAI4G,EAE7C2gD,GAAoBD,EAA0ByC,EAA4BK,EAAMC,GAAM,IAGtFx9D,GAAezI,EAAAA,EAAAA,IAAiB8gB,IACpC,IAAK/D,IAAe8G,QAA+Bt1B,IAApBk2E,EAA+B,OAC9D,MAAM,MAAE71D,EAAK,MAAEgP,GAAW,YAAakD,EAASA,EAAMhS,QAAQ,GAAKgS,EAC7D8lD,EAAuBrD,IAEvBsD,EAAev3E,KAAKC,IAAID,KAAKZ,IAAI,EAAGkgB,GAAQ+1D,IAAiBtnE,OAC7DypE,EAAex3E,KAAKC,IAAID,KAAKZ,IAAI,EAAGkvB,GAAQ+mD,IAAiBjnE,QAE7D6kB,EAAUskD,EAAejD,EAAoBjoD,EAC7C6G,EAAUskD,EAAelD,EAAoBhoD,EAE7CmrD,EAAOpD,EAAgChoD,EAAIirD,EAAqBvpE,MAAQ2lE,EAAY3lE,MACpF2pE,EAAOrD,EAAgC/nD,EAAIgrD,EAAqBlpE,OAASslE,EAAYtlE,OASrFupE,EAAY,CANhBtrD,EAAGgoD,EAAgChoD,EACnCC,EAAG+nD,EAAgC/nD,EACnCve,MAAOupE,EAAqBvpE,MAC5BK,OAAQkpE,EAAqBlpE,QAK3B+mE,IAAoBja,GAAiBI,MACtC6Z,IAAoBja,GAAiBO,SACrC0Z,IAAoBja,GAAiBW,aAEtC8b,EAAU5pE,MAAQ/N,KAAKZ,IAAIk4E,EAAqBvpE,MAAQklB,EAASygD,EAAY3lE,OAC7E4pE,EAAUtrD,EAAIrsB,KAAKC,IAAI03E,EAAUtrD,EAAI4G,EAASwkD,IAG5CtC,IAAoBja,GAAiBK,OACtC4Z,IAAoBja,GAAiBS,UACrCwZ,IAAoBja,GAAiBa,cAEtC4b,EAAU5pE,MAAQ/N,KAAKZ,IAAIk4E,EAAqBvpE,MAAQklB,EAASygD,EAAY3lE,QAG3EonE,IAAoBja,GAAiBE,KACtC+Z,IAAoBja,GAAiBO,SACrC0Z,IAAoBja,GAAiBS,WAEtCgc,EAAUvpE,OAASpO,KAAKZ,IAAIk4E,EAAqBlpE,OAAS8kB,EAASwgD,EAAYtlE,QAC/EupE,EAAUrrD,EAAItsB,KAAKC,IAAI03E,EAAUrrD,EAAI4G,EAASwkD,IAG5CvC,IAAoBja,GAAiBG,QACtC8Z,IAAoBja,GAAiBW,YACrCsZ,IAAoBja,GAAiBa,cAEtC4b,EAAUvpE,OAASpO,KAAKZ,IAAIk4E,EAAqBlpE,OAAS8kB,EAASwgD,EAAYtlE,SAGjF0lE,EAAsB,CAAE/lE,MAAO4pE,EAAU5pE,MAAOK,OAAQupE,EAAUvpE,SAClEwlE,EAA0B,CAAEvnD,EAAGsrD,EAAUtrD,EAAGC,EAAGqrD,EAAUrrD,GAAI,KAG/DztB,EAAAA,EAAAA,KAAU,KACR,IAAIkhB,EAUJ,OATIw0D,GAAqBf,IACvBzzD,GAAUC,EAAAA,GAAAA,IAAcu0D,EAAmB,CACzCt0D,UAAW41D,EACXz1D,OAAQi3D,EACRl3D,UAAWg2D,EACX/3E,QAAS+3E,EACT1tD,cAAe0tD,KAGZp2D,CAAO,GACb,CAACyzD,EAAee,KAEnB11E,EAAAA,EAAAA,KAAU,KACR,MAAM+4E,EAAiC,GACvC,GAAIrjD,GAAWi/C,EACb,IAAK,MAAMh/C,KAAYwnC,GAAuB,CAC5C,MAAM6b,EAAgBtjD,EAAQ3rB,cAAe,iBAAgB4rB,KAE7D,GAAIqjD,EAAe,CACjB,MAAM93D,GAAUC,EAAAA,GAAAA,IAAc63D,EAAe,CAC3C53D,UAAW61D,EACX11D,OAAQjH,EACRgH,UAAWi2D,EACXh4E,QAASg4E,EACT3tD,cAAe2tD,IAGbr2D,GACF63D,EAAS93E,KAAKigB,EAElB,CACF,CAGF,MAAO,KACL63D,EAASj4E,SAASogB,GAAYA,KAAU,CACzC,GACA,CAACyzD,EAAej/C,IAEnB,MAAMujD,GAAczE,EAAa,gCAAkC,GAE7D0E,GAAiBtC,IAEvB,IAAKjB,IAAgBX,IAAuBkE,GAC1C,MAAO,CACL1E,YAAY,EACZhpE,MAAOytE,IAIX,MAAMztE,IAAQ62C,EAAAA,GAAAA,GACX,SAAQ62B,GAAe1rD,OACvB,QAAO0rD,GAAezrD,QACtBvL,GAAiB,cAAa8yD,EAAmB9lE,YACjDgT,GAAiB,eAAc8yD,EAAmBzlE,YACnD,oBACCilE,GAAc5lD,GAAcunD,IAAsB,+BACnD8C,IAGF,MAAO,CACLz1D,SAAUsxD,EACV5xE,KAAM8xE,EACNR,aACA5lD,aACApjB,SAEJ,CYhOM2tE,CACFxgE,EACAqiB,EACAo5C,GACAlB,IACAM,EAhFF,WACE,GAA0B,cAAtBrmC,GAAOqwB,WAA4B,OAAO2U,EAEhD,CA8EEiH,GACA7G,GAGI/kD,GAAIhK,IAAUgK,EACdC,GAAIjK,IAAUiK,GACpBztB,EAAAA,EAAAA,KAAU,KACHw0E,SAAoBp0E,IAANotB,SAAyBptB,IAANqtB,IACpCqlD,EAA4B,CAAEtvD,SAAU,CAAEgK,KAAGC,OAC/C,GACC,CAAC+mD,GAAYhnD,GAAGC,MAEnBztB,EAAAA,EAAAA,KAAU,MACHw0E,IAActxE,IAAQqwE,GAAoBR,EAAwB,CAAE7vE,SAAS,GACjF,CAACsxE,GAAYjB,EAAkBrwE,KAElC,MAAMm2E,GAAcn2E,IAAQgwE,IAEtBoG,GAAeD,GAAYnqE,MAC3BqqE,GAAgBF,GAAY9pE,QAElCvP,EAAAA,EAAAA,KAAU,KACJ4uB,IACFqkD,EAAsB,CAAE/jE,MAAOoqE,GAAc/pE,OAAQgqE,IACvD,GACC,CAACA,GAAeD,GAAc1qD,GAAYqkD,IAE7C,MAAMzzE,IAAUC,EAAAA,EAAAA,KACVC,IAAOC,EAAAA,GAAAA,MACP,QACJ65E,IACE/X,GAAgB,CAAC,EAEfgY,GAAgBhc,EAAgB1b,OAAOuK,OAAOmR,GAAen8D,OAAS,GAE5Eo4E,EAAAA,GAAAA,IAAY,KACLjc,GACL1b,OAAO2K,KAAK+Q,GAAe38D,SAASyB,IAClC,MAAMwgE,EAAStF,EAAcl7D,GACzBwgE,EAAOyW,SACT9G,EAAe,CACbzd,MAAO8N,EAAO9N,MACdukB,QAASzW,EAAOyW,QAChBroE,OAAQ4xD,EAAO5xD,QAAU8C,EAAMhP,GAC/B00E,UAAW5W,EAAO4W,WAEtB,GACA,GACDH,GAvKoB,UAuKSp5E,GAAW,GAG3C,MAAMw5E,IAAoB9qE,EAAAA,EAAAA,IAAsD,MAE1E+qE,IAAsB/qE,EAAAA,EAAAA,IAAuC,MAE7Dk0D,IAA4BnxD,EAAAA,EAAAA,IAAiBioE,IACjDF,GAAkB3qE,QAAU6qE,CAAQ,IAGhC9R,IAAYn2D,EAAAA,EAAAA,IAAiB8gB,IAC7BinD,GAAkB3qE,SACpB2qE,GAAkB3qE,QAAQ0jB,EAC5B,IAGIswC,IAA8BpxD,EAAAA,EAAAA,IAAiBioE,IACnDD,GAAoB5qE,QAAU6qE,CAAQ,IAGlC/R,IAAcl2D,EAAAA,EAAAA,IAAiB8J,IAC/Bk+D,GAAoB5qE,SACtB4qE,GAAoB5qE,QAAQ0M,EAC9B,IAGIo+D,IAA4BloE,EAAAA,EAAAA,IAAgB,KAChDm2D,GAAU,CACRmB,UAAW,2BACX,IAGE6Q,IAAqBnoE,EAAAA,EAAAA,IAAgB,KACzCk2D,GAAYtG,EAAc9lD,IAAI,IAG1Bs+D,IAAmBpoE,EAAAA,EAAAA,IAAgB,KACvCisD,GAAkB,IAGdoc,IAAyBroE,EAAAA,EAAAA,IAAgB,KAC7CghE,GAAkB,IAGdsH,IAAiBtoE,EAAAA,EAAAA,IAAgB,KACjC4nE,GAAgB,EAClBnW,IAEAxF,GACF,IAGIsc,IAAoBvoE,EAAAA,EAAAA,IAAgB,KACxC,GAAIgwD,EAAJ,CACE,MAAMt/D,GAAM8jE,EAAAA,GAAAA,IAAa5E,GACzBoC,EAAa,CACXthE,MACAskE,OAAQ,CACNV,mBAAmB,IAIzB,MAEA3C,EAAgB,CACdvO,MAAO5D,EAAKpsD,GACZ8pE,WAAW,GACX,IAGEqC,IAAkBv/D,EAAAA,EAAAA,IAAgB,KAClCm0D,EACFgC,GAAU,CACRmB,UAAW,wBAGb8Q,IACF,IAGI5I,IAAsBx/D,EAAAA,EAAAA,IAAgB,KAC1CgsD,EAAuB,CAAEQ,MAAO,aAAc,IAG1Cgc,IAAwBxoE,EAAAA,EAAAA,IAAgB,KAC5CgsD,EAAuB,CAAEQ,MAAO,cAAe,IAG3Cic,IAA6BzoE,EAAAA,EAAAA,IAAgB,KACjD+gE,GAAiB,IAGb2H,IAAiB1oE,EAAAA,EAAAA,IAAiB2oE,IACtC7H,EAAc,CAAE5P,OAAQyX,EAAIzX,QAAS,IAGjC0X,IAAc5oE,EAAAA,EAAAA,IAAgB,KAClCi8B,EAAS,CACP7oC,GAAIosD,EAAKpsD,IACT,IAGEiiD,IAC6F/mD,EAAAA,EAAAA,KAAQ,IAClG,EAAGgX,YAAWvR,OAAQuhD,KAC3B5lD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WACEuC,EAAAA,GAAAA,GACEgyE,EDvV85B,WAAxD,WCwVt2BtsB,GAAc,UAGlB/vC,OAAK,EACLuM,QAASlf,EACTvB,KAAMuwE,EAAsB,OAAS,UACrC7gE,MAAM,cACNrT,QAAS4X,EACTE,UAAU,gBAEV9V,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGd,CAACW,EAAUgvE,IAEd,SAASiH,KACP,OACEn5E,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACGx1B,GAAQo9C,GAAOp9C,EAAKhP,KAAOosD,EAAIpsD,IAC9B1D,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,OAAOnH,QAASk7E,IAAcj7E,GAAQ,sBAEvD+B,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,SAASnH,QAASy6E,IAAqBx6E,GAAQ,sBAC7DyrE,GACC1pE,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,WAAWnH,QAASw6E,IAChCv6E,GAAQ,aAGZ6xD,GAAKspB,aACJp5E,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAMm7D,EAAY,OAAS,UAC3BtiE,QAAS66E,GACTpiE,YAAazH,QAAQsxD,IAEpBriE,GAAQqiE,EAAY,mBAAqB,8BAKpD,CAEA,SAAS+Y,KACP,OACEr5E,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI,CACHpe,OAAQkuE,GACR+G,OAAQ9G,GACRp7D,IAAK+6D,EACLx0E,WAAWuC,EAAAA,GAAAA,GACTgyE,EAAsB/xE,GAA2B,oBACjD,yBAEFiyE,kBAAmBA,EACnBE,eAAgBA,GAChBD,eAAgBA,GAChB1vD,WAAS,EACT9d,QAAS6tE,GACT7iE,oBAAqB8iE,IAEpBwG,KAGP,CAiBA,MAAMI,IAAsBr5E,EAAAA,GAAAA,GDraqF,WCua/GukE,GDvaw0C,YC0ap0C+U,IAAgB56E,EAAAA,EAAAA,KAAQ,KAC5B,GAAIkzE,EAAqB,MAAO,aAChC,IAAK1L,EAAa,OAClB,MAAM,EAAEqT,EAAC,EAAEC,EAAC,EAAEt0B,IAAMu0B,EAAAA,GAAAA,IAASvT,GACvBwT,GAAOC,EAAAA,GAAAA,IAAa,CAACJ,EAAGC,EAAGt0B,IAEjC,OAD8B,SAAViY,EAAmB,IAAMuc,EAAOA,GA3WjC,IA4WmB,aAAe,kBAAkB,GACtE,CAACxT,EAAa/I,EAAOyU,IAExB,SAASgI,GAAqBn8E,GAC5B,OACEqC,EAAAA,GAAAC,cAAA,OACEtC,UAAWA,EACXgQ,MAAM,KACNK,OAAO,KACPmiE,QAAQ,YACR4J,KAAK,QAEL/5E,EAAAA,GAAAC,cAAA,QACEtC,UD7bqf,WC8brf,YAAU,UACV,YAAU,UACVg7D,EAAE,kCAIV,CAyFA,MAAM/sC,IAAere,EAAAA,EAAAA,IAAuB,MA2H5C,SAASysE,GAAuBC,GAC9B,OAAO/5E,EAAAA,GAAAA,GAAeg6E,EAAAA,IAA0BD,EAClD,CAiBA,OA7IAE,EAAAA,GAAAA,GAAoBvuD,IAAevnB,GAAU83D,IAAsBvwC,GAAale,SA8I9E1N,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJo1E,UAAWhjE,EACXzZ,WAAWuC,EAAAA,GAAAA,GD9qBM,WCgrBfgyE,GDhrB4D,WCirB5D/V,GDjrBkI,WCkrBlI8V,GDlrB0J,YCorB5JoI,YAAanI,EAAsBgB,QAAiBr0E,EACpDy7E,cAAezH,KAAsB1W,EAvBrCn8D,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWq8E,GAAuB,SACvCh6E,EAAAA,GAAAC,cAAA,OAAKtC,UAAWq8E,GAAuB,YACvCh6E,EAAAA,GAAAC,cAAA,OAAKtC,UAAWq8E,GAAuB,UACvCh6E,EAAAA,GAAAC,cAAA,OAAKtC,UAAWq8E,GAAuB,WACvCh6E,EAAAA,GAAAC,cAAA,OAAKtC,UAAWq8E,GAAuB,aACvCh6E,EAAAA,GAAAC,cAAA,OAAKtC,UAAWq8E,GAAuB,cACvCh6E,EAAAA,GAAAC,cAAA,OAAKtC,UAAWq8E,GAAuB,gBACvCh6E,EAAAA,GAAAC,cAAA,OAAKtC,UAAWq8E,GAAuB,uBAeuCn7E,EAChFwF,OAAQA,EACR+kD,oBAAkB,EAClBvkD,QAAS6zE,GACTl0E,OA/HAxE,EAAAA,GAAAC,cAAA,OACEmX,IAAKqiB,GAEHy4C,EAEGF,EAOPhyE,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACT,eACA,YAEF+J,OAAO62C,EAAAA,GAAAA,GACL04B,IAAkB,8BAA6BA,QAGjDx5E,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UDhlB+kC,WCilB/kCkY,OAAK,EACLxE,MAAM,cACN1P,KAAK,OACLmU,UAAW7X,GAAQwmE,EAAsB,OAAS,SAClDzmE,QAAS6xE,IAET7vE,EAAAA,GAAAC,cAAA,OAAKtC,UAAW47E,MArDpBv5E,EAAAA,GAAAC,cAAA,OACEtC,UDniB4K,WCoiB5KyZ,IAAKwU,IAEJmmD,GAAM3xE,KAAK64E,GACVA,EAAI50E,OAjGZ,WACE,MAAM4F,GAAQ62C,EAAAA,GAAAA,GACZ04B,IAAkB,8BAA6BA,MAC/CpT,GAAgB,4BAA2BA,KAE7C,OACEpmE,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,GACX8J,MAAOA,GAEN6vE,GAAqB35E,IACtBH,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,IAEXH,EAAAA,GAAAC,cAAA,OAAKtC,UDpdgvB,YCqdnvBqC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt0B,KAAK,OACLu0B,KAAM45B,IAER9vD,EAAAA,GAAAC,cAAC0lD,GAAc,CAAC/vC,UAAW68D,GAAmBpuE,OAAQkuE,MAEvDjS,GAAWia,WAAazqB,GAAKiK,UAC9B/5D,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KAChBH,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAWwC,GACX0V,OAAK,EACLxE,MAAM,cACN1P,KAAK,OACLmU,UAAW7X,GAAQ,SACnBD,QAAS46E,IAET54E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UAAWwC,GAAqBoC,KAAK,YAG9Cu3E,GAAqB35E,IAG5B,CA6DUq6E,GAEAx6E,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt4B,UD3iB+wC,WC4iB/wCgE,KAAK,OACLu0B,KAAM+iD,EAAInpB,IAEV9xD,QAASA,IAAMg7E,GAAeC,OAInCnH,GApEH9xE,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,IAEV25E,GAAqB35E,IACtBH,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,IAEXH,EAAAA,GAAAC,cAAA,OAAKtC,UDtfqrB,YCufxrBqC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UAAWwC,GAAaoC,KAAK,SAEpCpE,GAAK,WACN6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KAChBH,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAWwC,GACX0V,OAAK,EACLxE,MAAM,cACN1P,KAAK,OACLmU,UAAW7X,GAAQ,SACnBD,QAAS26E,IAET34E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UAAWwC,GAAqBoC,KAAK,YAG9Cu3E,GAAqB35E,MAoFrBk5E,KAEDr5E,EAAAA,GAAAC,cAAA,OAAKtC,UD5lBkN,aC6lBnNm0E,GAhFN9xE,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GD9gBi9B,WCghB19B,WAEF2V,OAAK,EACLxE,MAAM,cACN1P,KAAK,OACL3D,QAAS+6E,IAET/4E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UAAWwC,GAAaoC,KAAK,UAwE/BuvE,GACA9xE,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GACTC,GDlmBumC,WComBvmC,WAEF0V,OAAK,EACLxE,MAAM,cACN1P,KAAK,OACL3D,QAAS86E,IAET94E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UAAWwC,GAAkBoC,KAAK,kBAI5CvC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GACTC,GACA,WAEF0V,OAAK,EACLxE,MAAM,cACN1P,KAAK,OACL3D,QAAS8xE,IAET9vE,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UAAWwC,GAAkBoC,KAAK,sBA1DKvC,EAAAA,GAAAC,cAACo8D,GAAoB,MAmExEr8D,EAAAA,GAAAC,cAAA,OACEtC,UAAU,eACVsM,OAAO62C,EAAAA,GAAAA,GACLslB,GAAgB,qBAAoBA,IACpCoT,IAAkB,8BAA6BA,QAGjDx5E,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACLmU,UAAW7X,GAAQwmE,EAAsB,OAAS,SAClDzmE,QAAS6xE,IAET7vE,EAAAA,GAAAC,cAAA,OAAKtC,UAAW47E,MAElBv5E,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eAAe2iE,GAAWia,WAAazqB,GAAKiK,YACzD+X,GA3PJ9xE,EAAAA,GAAAC,cAACyW,GAAAA,EAAY,CACX/Y,WAAWuC,EAAAA,GAAAA,GACTgyE,EAAsB/xE,GAA2B,oBACjD,yBAEFwW,QAASgvC,GACT/uC,UAAWs7D,EAAsB,OAAS,SAEzCiH,QA0RHlvE,MAAQ,qBAAoB67D,GAAmB,4BAC/Cj6B,YAAU,EACV4uC,iBAAe,GAEdxI,GAAgBoH,KAChBnd,GAAiB2V,GAAazxE,KAAKY,GAClChB,EAAAA,GAAAC,cAACshE,GAAqB,CACpBvgE,IAAKA,EACL4qC,MAAOA,EACP61B,0BAA2BA,GAC3BC,4BAA6BA,GAC7BF,OAAQtF,EAAcl7D,GACtB2gE,eAAgBsR,IAAc5lD,GAC9Bw0C,yBAA0B4Q,GAC1B7Q,oBAAqBsQ,EACrBpQ,YAAakW,OAGflG,GAAwB9xE,EAAAA,GAAAC,cAAC0+D,GAAkB,MACvC,KCroBZ,IAAenhE,EAAAA,EAAAA,KAnDqBk9E,EAAG5qB,MAAKpuD,OAAMiyD,+BAChD,MAAM,sBAAEgnB,EAAqB,eAAEC,IAAmB7qE,EAAAA,EAAAA,OAE3C6jD,EAAgBinB,IAAqB3qE,EAAAA,EAAAA,IAASyjD,IAA4B,GAE3Ex1D,GAAOD,EAAAA,EAAAA,KAEP48E,GAAuBr3E,EAAAA,EAAAA,KAAY,KACvCm3E,EAAe,CAAElnB,MAAO5D,EAAKpsD,GAAIkwD,kBAAiB,GACjD,CAACgnB,EAAgBhnB,EAAgB9D,IAE9BirB,GAAwBt3E,EAAAA,EAAAA,KAAY,KACxCk3E,GAAuB,GACtB,IAEGv1E,EAA0BjH,EAAT,SAATuD,EAAuB,UAAkB,oBACjDuW,GAAOrZ,EAAAA,EAAAA,KAAQ,KACnB,OAAQ8C,GACN,IAAK,OACH,OAAOvD,EAAK,0BAA0BmtC,EAAAA,EAAAA,IAAgBwkB,IACxD,IAAK,SACH,OAAO3xD,EAAK,sBAAsBmtC,EAAAA,EAAAA,IAAgBwkB,IAEpD,QACE,OAAO3xD,EAAK,6BAChB,GACC,CAAC2xD,EAAKpuD,EAAMvD,IAEf,OACE6B,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ2K,QAAQ8gD,GAChBjrD,QAASk2E,EACT31E,MAAOA,EACPogC,eAAgBs1C,IAEf94E,EAAAA,GAAAA,GAAWiW,EAAM,CAAC,oBAClB07C,GACC3zD,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPn2D,UAAU,kBACV8sC,QAASmpB,EACT7iD,OAAO/O,EAAAA,GAAAA,GACL7D,EAAK,sCAAuC2xD,GAAKiK,WACjD,CAAC,oBAEHhG,QAAS8mB,IAGC,ICKpB,IAAer9E,EAAAA,EAAAA,KAtD6Bw9E,EAC1CpvC,YAEA,MAAM,wBAAEqvC,EAAuB,uBAAEC,IAA2BnrE,EAAAA,EAAAA,MACtD+/C,EAAMlkB,GAAOkkB,KAEZqrB,EAAeC,IAAoBlrE,EAAAA,EAAAA,KAAS,GAE7C/R,GAAOD,EAAAA,EAAAA,KAEP0yD,GAAgBntD,EAAAA,EAAAA,KAAY,KAChCw3E,EAAwB,CACtBrnB,eAAgB5kD,QAAQ8gD,GAAK6D,2BAC7B,GACD,CAACsnB,EAAyBnrB,KAG7BrxD,EAAAA,EAAAA,KAAU,KACJqxD,GACFsrB,GAAiB,EACnB,GACC,CAACtrB,IAEJ,MAAMurB,GAAWz8E,EAAAA,EAAAA,KAAQ,KACvB,MACM08E,EADOn9E,EAAK,mCACCm9E,MAAM,UACnBC,EAAWp9E,EAAK,iCACtB,MAAO,CACLm9E,EAAM,GACNt7E,EAAAA,GAAAC,cAAA,KAAGsW,KAAMilE,EAAAA,IAAkB3qE,OAAO,SAAS4qE,IAAI,uBAAuBF,GACtED,EAAM,GACP,GACA,CAACn9E,IAEJ,OACE6B,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ2K,QAAQ8gD,GAChBjrD,QAASq2E,EACT91E,MAAOjH,EAAK,kCACZqnC,eAAgBorB,EAChB8qB,mBAAoBP,IAEnBn5E,EAAAA,GAAAA,GAAW7D,EAAK,gCAAiC2xD,GAAKyqB,WAAY,CAAC,oBACpEv6E,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPn2D,UAAU,kBACV8sC,QAAS0wC,EACTpqE,MAAOsqE,EACPtnB,QAASqnB,KAEVp5E,EAAAA,GAAAA,GAAW7D,EAAK,iCAAkC2xD,GAAKyqB,WAAY,CAAC,oBACvD,ICvBpB,IAAe/8E,EAAAA,EAAAA,KAhC0Bm+E,EACvCC,aAEA,MAAM,2BAAEC,EAA0B,iBAAEC,EAAgB,0BAAEC,IAA8BhsE,EAAAA,EAAAA,MAC9E5R,GAAOD,EAAAA,EAAAA,KAEPmG,EAAS2K,QAAQ4sE,GAEjBI,GAAkBxjD,EAAAA,EAAAA,GAAsBojD,IAAWA,EACnDK,EAAeD,GAAiBE,aAEhCC,GAA4B14E,EAAAA,EAAAA,KAAY,KAC5Co4E,IACII,EACFF,EAA0B,CAAEK,SAAUJ,EAAiBt4E,GAAI24E,wBAAwB,IAEnFP,EAAiB,CAAEp4E,GAAIs4E,EAAiBt4E,IAC1C,GACC,CAACu4E,EAAcD,IAElB,OACEh8E,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQA,EACRQ,QAASg3E,EACT5jE,KAAqB9Z,EAAf89E,EAAoB,yBAAiC,qBAC3D12C,aAAcpnC,EAAK,UACnBqnC,eAAgB22C,EAChB12C,sBAAoB,GACpB,I,wCC1CN,UAAgB,KAAO,WAAW,KAAO,WAAW,OAAS,WAAW,YAAc,WAAW,KAAO,WAAW,YAAY,WAAW,SAAW,YC4B/I62C,GAAS,CACb,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WACvDl8E,IAAIu5E,GAAAA,IAqCN,IAAen8E,EAAAA,EAAAA,KAlCY++E,EACzBp3E,OACAq3E,aACAp3E,QACA6S,OACAzY,QACA+1B,QACAgV,UACAvsC,cAEA,MAAMy+E,EAAYj9E,EAAQ+1B,EAAS+mD,GAAOv8E,OACpC28E,EAASJ,GAAO18E,KAAKse,MAAMu+D,IAC3BE,EAASL,GAAO18E,KAAKg9E,KAAKH,KAAcC,GACxC,EAAEjD,EAAC,EAAEC,EAAC,EAAEt0B,IAAMy3B,EAAAA,GAAAA,IAAQH,EAAQC,EAAQ,IAEtC/1D,GAActW,EAAAA,EAAAA,IAAgB,KAClCtS,IAAUusC,EAAQ,IAGpB,OACEvqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACw3E,gBAAiB38E,GAAOkgC,KAAMriC,QAAS4oB,EAAa8d,UAAW1mC,GACtEw+E,EACCx8E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAM4C,EAAMxH,UAAWwC,GAAO48E,SAAU9yE,MAAQ,qBAAoBwvE,KAAKC,KAAKt0B,OAEpFplD,EAAAA,GAAAC,cAAA,OAAK+H,IAAK7C,EAAMxH,UAAWwC,GAAOgF,KAAM2lB,IAAI,GAAG7gB,MAAQ,qBAAoBwvE,KAAKC,KAAKt0B,KAAMv9C,WAAW,IAExG7H,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO8X,MACrBjY,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOiF,QAAQpD,EAAAA,GAAAA,GAAWoD,EAAO,CAAC,QAClDpF,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOgQ,aAAc8H,IAE9B,I,gBChEf,SAA0C,WAA1C,GAAgH,WC0FhH,IAAeza,EAAAA,EAAAA,KA1EkBw/E,EAC/Bj9E,SACAgB,SACAk8E,oBAEA,MAAMC,EAAYt9E,KAAKZ,IAAI,EAAGY,KAAKC,IAAIE,EAAS,EAAGgB,EAAS,IACtDo8E,EAAiBD,IAAcn9E,EAAS,EAAI,EAC5Cq9E,EAAcF,IAAcn9E,EAAS,EACrCs9E,EAA6B,IAAdH,EACfI,EAAgC,IAAdJ,EAClBK,EAAiB39E,KAAKC,IAAIE,EAAQ,GAElCy9E,GAAkB/5E,EAAAA,EAAAA,KAAY,KAClCw5E,EAAcl8E,EAAS,EAAE,GACxB,CAACA,EAAQk8E,IAENQ,GAAeh6E,EAAAA,EAAAA,KAAY,KAC/Bw5E,EAAcl8E,EAAS,EAAE,GACxB,CAACA,EAAQk8E,IAEN1nD,EAAQ31B,KAAKC,IAAI,EAAGE,GAE1B,OACEC,EAAAA,GAAAC,cAAA,YACIyY,EAAAA,IACA1Y,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GAAeC,GAAyB,IAAXY,GAAgBZ,IACxDkR,MAAM,cACNwR,SAAqB,IAAX9hB,EACV8U,OAAK,EACL7X,QAASy/E,GAETz9E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,cAGfvC,EAAAA,GAAAC,cAAA,OAAKtC,UDnDY,WCmDYsM,MAAQ,iBAAgBizE,gBAAwBn9E,eAAoBw1B,MAC9Fj0B,MAAMvB,GAAQg6E,UAAKl7E,GAAWuB,KAAI,CAAC2mD,EAAGC,KACrC,MAAMxnD,EAAQwnD,EACR02B,EAAU12B,IAAMk2B,EAAYK,EAAiB,IAAMH,IAAgBD,EACnEQ,EAAa32B,IAAMk2B,EAAYK,EAAiB,IAAMJ,IAAmBC,GACzEp2B,IAAMk2B,EAAYK,EAAiB,GAAKJ,EACxCS,EAAW52B,IAAMk2B,IAAeG,IAAiBC,EACjDO,EAAe72B,IAAMk2B,EAAY,IAAOG,IAAiBC,GACzDt2B,IAAMk2B,GAAaI,EACnBQ,EAAc92B,EAAIk2B,GAAal2B,GAAKk2B,EAAYK,EACtD,OACEv9E,EAAAA,GAAAC,cAAA,OACEjC,QAASA,IAAMi/E,EAAcj2B,GAC7BrpD,WAAWuC,EAAAA,GAAAA,GDhEwG,WCkEjHV,IAAUuB,GDlEyL,YCmElM48E,GAAaE,IDnEuH,YCoEpIH,GAAUE,GAAWE,IDpEkI,WCqExJA,GDrE+K,aCuEjL,MAINplE,EAAAA,IACA1Y,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GAAeC,GAAcY,IAAWhB,EAAS,GAAKI,GD7Ed,YC8EnDkR,MAAM,cACNwE,OAAK,EACLgN,SAAU9hB,IAAWhB,EAAS,EAC9B/B,QAASw/E,GAETx9E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UAGX,ICtFV,GAAsnB,WCsDtnB,IAAe/E,EAAAA,EAAAA,KAlC4BugF,EACzCC,YACAC,aACAtgF,YACAugF,oBACAC,iBAEA,MAAMhgF,GAAOD,EAAAA,EAAAA,KAEb,OACE8B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GD9BG,WC8ByBvC,IACzCugF,GACCl+E,EAAAA,GAAAC,cAAA,OAAKtC,UDhCiE,YCiCpEqC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAM27E,EAAmBvgF,UDjC6K,aCkC5MqC,EAAAA,GAAAC,cAAA,OAAKtC,UDlC2R,WCkCrPyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYm/E,GACjFh+E,EAAAA,GAAAC,cAAA,OAAKtC,UDnCuI,YCoC1IqC,EAAAA,GAAAC,cAAA,OAAK0N,MAAM,KAAKK,OAAO,IAAImiE,QAAQ,WAAW4J,KAAK,QACjD/5E,EAAAA,GAAAC,cAAA,QAAM04D,EAAE,oLAAoLohB,KAAK,eAKzM/5E,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GD1CmmB,aC2ChoBH,EAAAA,GAAAC,cAAA,OAAKtC,UD3C4V,6BC2ChUyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYV,EAAK,eAC1E+/E,GAAqBl+E,EAAAA,GAAAC,cAAA,OAAKtC,UD5CujB,qBC4CzhBqgF,IAE5Dh+E,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GD9CsnB,YC8C1lB8J,MAAOk0E,GAChEn+E,EAAAA,GAAAC,cAAA,OAAKtC,UD/C+a,6BC+ClZyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYV,EAAK,iBAC7E6B,EAAAA,GAAAC,cAAA,OAAKtC,UDhDogB,8BCgDresgF,IAElC,IClCJG,GAAc,CAAC,GAAI,IAAK,KACxBC,GAAY,CAAC,IAAK,IAAK,KA0B7B,IAAe7gF,EAAAA,EAAAA,KAxB2B8gF,EACxCl5E,QACA+K,cACA6tE,YACAC,aACAM,wBAEA,MAAMltE,GAAQzS,EAAAA,EAAAA,KAAQ,IACbw/E,GAAYh+E,KAAI,CAACggB,EAAO4mC,KAAMw3B,EAAAA,GAAAA,IAAKp+D,EAAOi+D,GAAUr3B,GAAIu3B,MAC9D,CAACA,IAEJ,OACEv+E,EAAAA,GAAAC,cAAA,OAAKtC,UC/Bc,YDgCjBqC,EAAAA,GAAAC,cAAA,OAAKtC,UChC+B,YDgCLyH,GAC/BpF,EAAAA,GAAAC,cAAA,OAAKtC,UCjCwD,YDiCxBwS,GACrCnQ,EAAAA,GAAAC,cAAC89E,GAAoB,CACnBC,UAAWA,EACXC,WAAYA,EACZE,WAAa,mBAAkB9sE,EAAM2X,KAAK,UAExC,I,4BEvCV,MC+BMy1D,GASDA,EACH98E,OAAM+8E,YAAWhiC,UACjBiiC,UAASn/E,QAAOo/E,YAAW5gF,UAAS6qB,cAEpC,MAAMjc,GAAYL,EAAAA,EAAAA,GAAU,UAASoyE,EAAQj7E,MACvCm7E,GAAkBtyE,EAAAA,EAAAA,GAAU,UAASoyE,EAAQj7E,aAE7Co7E,EAAwB,IAAVt/E,GACbu/E,EAAYC,EAASC,IAAazgF,EAAAA,EAAAA,GAAQsgF,GAE3CI,EAAav9E,EAxBS,GAwBFA,EACpBgM,EAAqB,EAAbuxE,EACRlxE,EAAsB,IAAbkxE,EAITC,EAFI3/E,EAAQo/E,GAEW,EAAVh/E,KAAKw/E,IAClBjzD,EAAQ2yD,EAAc,EAAI,IAE1B7yD,EAAIrsB,KAAKy/E,IAAIF,GAASxxE,EAAqB,IAAbuxE,EAC9BhzD,EAAItsB,KAAK0/E,IAAIH,GAASnxE,EAEtB4Y,GAActW,EAAAA,EAAAA,IAAgB,KAClCtS,EAAQ0gF,EAAU,IAGdz3D,GAAc3W,EAAAA,EAAAA,IAAgB,KAClC2uE,IACAp2D,EAAQ61D,EAAU,IASpB,OANAjgF,EAAAA,EAAAA,KAAU,KACJqgF,GACFE,GACF,GACC,CAACF,EAAaE,IAGfh/E,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACG42C,GACC9+E,EAAAA,GAAAC,cAAC0D,GAAAA,EAAe,CACdhG,UDjFkG,oBCkFlGkG,OAAQg7E,EACRU,KAAM7iC,EACN8iC,eAAa,EACbv7E,QAAM,EACNtC,KA3DqB,GA2DUA,EAC/BsI,MAAQ,aAAYgiB,oBAAoBC,SAG5ClsB,EAAAA,GAAAC,cAAC0D,GAAAA,EAAe,CACdhG,UD3FoC,WC4FpCkG,OAAQ+I,EACR2yE,KAAM7iC,GAAWqiC,EACjB96E,QAAM,EACNtC,KArEsB,GAqEQA,EAC9BsI,MAAQ,QAAOgiB,aAAaC,mBAAmBC,IAC/CnuB,QAAS4oB,EACTiC,QAAS5B,IAEV,EA2DP,IAAezpB,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ,CACLutE,SAAUvtE,EAAOutE,SAASC,QAAQD,YAHpBxtE,EAvD6C0tE,EAC/DF,WAAU/hF,eAGV,MAAMkuB,GAAere,EAAAA,EAAAA,IAAuB,OACrCyR,EAAQ4gE,IAAa1vE,EAAAA,EAAAA,IAAS,IAC9BvO,EAAMk+E,IAAW3vE,EAAAA,EAAAA,IAAS,GAE3B4vE,EAAmBL,GAAU3/B,MAAM,EApFxB,IAsFXl5B,GAActW,EAAAA,EAAAA,IAAiB02C,IACnC44B,GAAW54B,EAAE,IAGT//B,GAAc3W,EAAAA,EAAAA,IAAiB02C,IAEd,KADA+4B,EAAAA,GAAAA,GAAcD,EAAiB//E,OAAQinD,EAAIhoC,IAGhElQ,YAAW,KACT8wE,GAAWlyE,IACFqyE,EAAAA,GAAAA,GAAcD,EAAiB//E,OAAQ2N,EAAU,IACxD,GAhGY,IAiGD,IAUjB,OAPAjP,EAAAA,EAAAA,KAAU,KACR,MAAMkL,EAAYiiB,EAAale,QAC1B/D,GAELk2E,EAAQl2E,EAAUylB,QAAQ,iBAAkB5P,YAAY,GACvD,IAGDxf,EAAAA,GAAAC,cAAA,OACEtC,UD1IiB,WC2IjByZ,IAAKwU,GAEJ5c,QAAQrN,IAASm+E,GAAkB1/E,KAAI,CAACu+E,EAAS33B,IAE9ChnD,EAAAA,GAAAC,cAACw+E,GAAqB,CACpB98E,KAAMA,EACNg9E,QAASA,EACTD,UAAW13B,EACXxnD,OAAQwnD,EAAIhoC,EAAS8gE,EAAiB//E,QAAU+/E,EAAiB//E,OACjE6+E,UAAWkB,EAAiB//E,OAC5B/B,QAAS4oB,EACTiC,QAAS5B,EACTy1B,QAASh/C,MAIX,K,4BC3JV,MCuBMsiF,GAAuB,CAC3BC,cAAe,yBACfC,gBAAiB,wBACjBC,cAAe,sBACfC,cAAe,0CACfC,aAAc,8BACdC,gBAAiB,uCACjBC,aAAc,sCAGVC,GAA6B,CACjCP,cAAe,oCACfC,gBAAiB,mCACjBC,cAAe,iCACfC,cAAe,sCACfC,aAAc,yCACdC,gBAAiB,mCACjBC,aAAc,uCAGVE,GAAgD,CACpDR,cAAe,iBACfC,gBAAiB,sBACjBC,cAAe,cACfC,cAAe,QACfC,aAAc,oBACdC,gBAAiB,gBACjBC,aAAc,cAGVG,GAAsBlgC,OAAO2K,KAAK60B,IAElCW,GAAcC,GAAAA,EAAaC,MAAQ,IAAO/nE,EAAAA,EAiEhD,IAAetb,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ,CACL6gD,aAAa7gB,EAAAA,EAAAA,KAAWhgC,EAAQA,EAAOqkB,kBAHzBtkB,EA7De6uE,EACjC/tB,kBAGA,MAAMguB,GAAYxzE,EAAAA,EAAAA,IAA0B,MAEtCpP,GAAOD,EAAAA,EAAAA,KAEP8iF,GAAMC,EAAAA,GAAAA,MAEZxiE,EAAAA,EAAAA,KAAgB,KACTsiE,EAAUrzE,UAIfwzE,EAAAA,GAAAA,GAAmB,CACjBtzE,OAAQmzE,EAAUrzE,QAClB/L,KAAMg/E,GAAcK,EACpBG,cArBkB,EAsBlB9vE,MAAO,SACP+vE,kBAtBuB,EAuBvBC,iBAAkB,cAClBL,OACA,GACD,CAACA,IAEJ,MAAM,aAAEx/B,EAAY,cAAEJ,GAAkBF,KAElCogC,EAAUX,GAEhB,OACE3gF,EAAAA,GAAAC,cAAA,OAAKtC,UD1Fc,YC2FjBqC,EAAAA,GAAAC,cAAA,OAAKtC,UD3FgC,YC4FnCqC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACsrD,iBAAe,EAACrrD,KAAM68B,EAAapxD,KAAK,UAChD3B,EAAAA,GAAAC,cAAA,UAAQtC,UD7F+C,WC6FrByZ,IAAK2pE,EAAW92E,MAAQ,cAAaq3E,oBAA0BA,SAEnGthF,EAAAA,GAAAC,cAAA,OAAKtC,UD/FuE,YC+F7CQ,EAAK,oBACpC6B,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GDjGqF,YCiGpDkhD,GDjG8F,WCiG5D,iBAC9EoF,SAAUhF,GAETk/B,GAAoBtgF,KAAI,CAACmqC,EAAS/qC,IAE/BQ,EAAAA,GAAAC,cAACs8E,GAAkB,CACjBv7E,IAAKupC,EACLnlC,MAAOjH,EAAK6hF,GAAqBz1C,IACjCtyB,KAAM9Z,EAAKqiF,GAA2Bj2C,IACtCplC,KAAMs7E,GAAoBl2C,GAC1BiyC,YAAU,EACVh9E,MAAOA,EACP+1B,MAAOmrD,GAAoB3gF,OAC3BwqC,QAASA,MAIfvqC,EAAAA,GAAAC,cAAA,OAAKtC,UDlH+G,YCkHpFQ,EAAK,sCAEnC,KCpHV,IAAgB,KAAO,WAAW,QAAU,WAAW,KAAO,WAAW,MAAQ,WAAW,MAAQ,Y,8CC+DpG,IAAeX,EAAAA,EAAAA,KAtCkCsjF,EAC/CU,UACAC,qBACAC,SACAC,iBACAniF,QACA9B,eAEA,MAAMkP,GAAYL,EAAAA,EAAAA,GAAU,WAAUi1E,KAChCI,GAAe9pC,EAAAA,GAAAA,GAAc6pC,EAAet0E,SAC5CgZ,GAAuB2xB,EAAAA,GAAAA,GAA6BprC,GAE1D,OACE5M,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOkgC,MACrBrgC,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACTC,GAAO0hF,QACPJ,GAAsBthF,GAAO2hF,QAC7BJ,GAAUvhF,GAAO4hF,MAEnBr+E,GAAK,iCAAgClE,KAErCQ,EAAAA,GAAAC,cAAA,OAAK+H,IAAKg6E,GAAal3D,IAAI,GAAGntB,UAAWwC,GAAO0a,MAAOhT,WAAW,IAClE7H,EAAAA,GAAAC,cAAA,UAAQmX,IAAKwqE,EAAcjkF,UAAWwC,GAAOmG,QAC7CtG,EAAAA,GAAAC,cAACw8C,GAAAA,EAAc,CACbC,QAASh/C,EACTC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOmG,MAAO+f,GACxCre,IAAK4E,EACLiY,yBAAuB,EACvB4D,aAAW,EACXnB,OAAK,EACLoB,MAAI,KAGJ,IC3DV,GAAuP,WAAvP,GAA0Q,WAA1Q,GAAge,WAAhe,GAAyf,WCoC5eu5D,GAA4D,CACvEC,cAAe,uBACfC,mBAAoB,2BACpBC,iBAAkB,yBAClBC,eAAgB,sBAChBC,OAAQ,sBACRC,cAAe,4BACfC,cAAe,6BACfC,gBAAiB,8BACjBC,YAAa,wBACbC,yBAA0B,uCAC1BC,kBAAmB,iCACnBC,aAAc,4BACdC,aAAc,6BACdp/C,QAAS,wBACTq/C,WAAY,sBACZC,UAAW,yBACXC,gBAAiB,+BACjBC,QAAS,0BAGEC,GAAkE,CAC7EjB,cAAe,kCACfC,mBAAoB,sCACpBC,iBAAkB,oCAClBE,OAAQ,iCACRD,eAAgB,iCAChBE,cAAe,uCACfC,cAAe,wCACfC,gBAAiB,yCACjBC,YAAa,mCACbC,yBAA0B,kDAC1BC,kBAAmB,4CACnBC,aAAc,uCACdC,aAAc,wCACdp/C,QAAS,mCACTq/C,WAAY,iCACZC,UAAW,oCACXC,gBAAiB,0CACjBC,QAAS,8BAGLE,GAAsD,CAC1DC,SAAU,8BACVC,mBAAoB,qBACpBC,eAAgB,wBAChBC,UAAW,sBACXC,cAAe,6BACfC,YAAa,gBACbC,cAAe,qBACfC,cAAe,oBACfC,mBAAoB,0BACpBC,oBAAqB,4BACrBC,aAAc,+BAGVC,GAA4D,CAChEX,SAAU,iCACVC,mBAAoB,wBACpBC,eAAgB,2BAChBC,UAAW,yBACXC,cAAe,gCACfC,YAAa,mBACbC,cAAe,wBACfC,cAAe,uBACfC,mBAAoB,6BACpBC,oBAAqB,+BACrBC,aAAc,kCA8OhB,IAAevmF,EAAAA,EAAAA,KA9N2BymF,EACxCC,QACA1/C,iBACA2/C,YACAC,SACAC,oBACAC,qBACA92D,SACA+2D,uBAEA,MAAMtmF,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KAEPomF,GAAqBj3E,EAAAA,EAAAA,IAAuB,OAC3Ck3E,EAAmBC,IAAwBx0E,EAAAA,EAAAA,IAASy0E,EAAAA,IAAyBlmD,QAAQ+F,KACrFogD,EAA4BC,IAAiC30E,EAAAA,EAAAA,IAAS,IACtE40E,EAAaC,EAAgBC,IAAiBxmF,EAAAA,EAAAA,MAE9CymF,EAAiBC,IAAsBh1E,EAAAA,EAAAA,KAAS,IAChDi1E,EAAoBC,IAAyBl1E,EAAAA,EAAAA,KAAS,GAEvDm1E,GAAqB7sD,EAAAA,EAAAA,GAAsBgM,GAE3C8gD,GAAmB1mF,EAAAA,EAAAA,KAAQ,IAC1BylF,EACEA,EAAkBvkD,QAAQyK,GAAYo6C,EAAAA,IAAyBxyD,SAASoY,KADhDo6C,EAAAA,KAE9B,CAACN,IAEEkB,GAAyB3mF,EAAAA,EAAAA,KAAQ,KACrC,IAAK0lF,EAAoB,OAEzB,MAAM,OAAExiF,EAAM,OAAE0jF,EAAM,SAAEzjF,GAAauiF,EAC/BmB,EAAgB7lF,KAAKse,MAAMpc,EAAS0jF,GAE1C,OAAOrB,EACHhmF,EAAK,MACLA,EAAK,qBAAsB,CAAEunF,OAAO7jF,EAAAA,GAAAA,GAAe1D,EAAMsnF,EAAe1jF,IAAa,CAAEi6C,WAAW,GAAO,GAC5G,CAACmoC,EAAWhmF,EAAMmmF,IAEf19D,GAActW,EAAAA,EAAAA,IAAgB,KAClCi0E,EAAiB//C,EAAe,IAgClC,SAASmhD,EAAmB/0E,GAC1B,MAAM,UAAEgsB,EAAS,aAAE/jB,EAAY,aAAE4oC,GAAiB7wC,EAAEmW,cACpDm+D,EAAmBtoD,GAvFE,IAwFrBwoD,EAAsBxoD,GAAa6kB,EAAe5oC,EAxF7B,GAyFvB,EAEApa,EAAAA,EAAAA,KAAU,KACR,MAAMmnF,EAAkBpB,EAAmB92E,QAC3C,IAAKk4E,GAAoBP,IAAuB7gD,EAAiB,OAEjE,MAAMhlC,EAAQ8lF,EAAiB7mD,QAAQ+F,GACvCkgD,EAAqBllF,GACrBulF,KACAc,EAAAA,GAAAA,GAAwBD,EAAiBA,EAAgBpmE,YAAchgB,EAAO,GAC3EsmF,KAAKd,EAAc,GACrB,CAACP,EAAmBa,EAAkB9gD,EAAgB6gD,IAEzD,MAAMU,GAAoBz1E,EAAAA,EAAAA,IAAgBiL,UACxC,MAAMqqE,EAAkBpB,EAAmB92E,QACtCk4E,IAELlB,EAAqBllF,GAErBulF,UACMc,EAAAA,GAAAA,GAAwBD,EAAiBA,EAAgBpmE,YAAchgB,EAAO,KACpFwlF,IAAe,IAGXgB,EAAiBV,EAAiBb,GAClCwB,EAAuC,kBAAnBD,GAAyD,YAAnBA,EAEhE,OACEhmF,EAAAA,GAAAC,cAAA,OAAKtC,UD/Nc,YCgOjBqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACLhE,WAAWuC,EAAAA,GAAAA,GDnOgI,WCmO9F+lF,GDnO0J,YCoOvM50E,MAAO40E,EAAoB,oBAAsB,cACjDjoF,QAASwvB,EACT1X,UAAW7X,EAAQ,SAEnB+B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAGbvC,EAAAA,GAAAC,cAAA,OAAKtC,UD3Okc,aC6OvcqC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GD7O8M,WC6O/K,gBAAiBsmD,SA3EpE,SAAsB51C,GACpB,MAAMC,EAASD,EAAEmW,eACX,YAAEvH,EAAa0mE,WAAYC,GAAuBt1E,EAElDq1E,EAAatmF,KAAKiW,MAAMswE,GAGxBpvE,EADOmvE,EAAc1mE,EACFA,EAEnB4mE,EAAexmF,KAAKg9E,MAAMsJ,EAAa,GAAK1mE,GAElDqlE,EAA8BuB,GAE9B,MAAMC,EAAcx1E,EAAOrI,cAA+B,mCAAiC49E,EAAe,IACpGE,EAAiBz1E,EAAOrI,cAA+B,kCAAiC49E,KAU9F,IARAjrE,EAAAA,EAAAA,KAAgB,KACdtK,EAAO5G,MAAM4kC,YAAY,oBAAqB93B,EAASwvE,YACvD11E,EAAO5G,MAAM4kC,YAAY,wBAAyBjvC,KAAKswB,IAAInZ,GAAUwvE,YAEjEF,IAAaG,EAAAA,GAAAA,IAAiBH,EAAa,WAAW,GACtDC,IAAgBE,EAAAA,GAAAA,IAAiBF,EAAgB,WAAW,EAAK,IAGnExB,EAAa,OACjB,MAAMnjD,EAAQ/hC,KAAKiW,MAAMqwE,EAAa1mE,GACtCklE,EAAqB/iD,EACvB,EAgD4FvqB,IAAKotE,GAE1Fc,EAAiBllF,KAAI,CAACmqC,EAAS/qC,KAC9B,GAAgB,kBAAZ+qC,EACF,OACEvqC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GDlPiP,aCmP9QH,EAAAA,GAAAC,cAAA,MAAItC,WAAWuC,EAAAA,GAAAA,GDnP+V,WCmPjU+kF,GDnP2X,aCoPrahnF,EAAQgkF,GAAuBC,gBAElCliF,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GDtP0U,WCsPrS,iBAAkBsmD,SAAUm/B,GAC9Ec,EAAAA,IAAqBrmF,KAAI,CAAC4xB,EAAOg1B,KAChC,MAAM0/B,EAAetC,IAASpyD,GAAO,GAAGu0D,WAClCI,EAAevC,IAASpyD,GAAO,GAAGu0D,WACxC,OACEvmF,EAAAA,GAAAC,cAACq+E,GAAmB,CAClBl5E,MAAOnH,EAAQmlF,GAAcpxD,IAC7B7hB,YAAalS,EAAQ+lF,GAAoBhyD,GAAQ20D,GACjD3I,UAAW0I,EACXzI,WAAY0I,EACZpI,kBAAmBv3B,GAAKy/B,EAAAA,IAAqB1mF,OAAS,IACtD,MAQd,GAAgB,qBAAZwqC,EACF,OACEvqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAC0/E,GAA6B,CAACjiF,SAAU+mF,IAAsBjlF,KAEjEQ,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZlC,EAAQgkF,GAAuBG,mBAElCpiF,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KACb6B,EAAAA,GAAAA,GAAW/D,EAAQklF,GAA6Bf,kBAAmB,CAAC,SAM7E,GAAgB,YAAZ73C,EACF,OACEvqC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GD3RsQ,aC4RnSH,EAAAA,GAAAC,cAAC2mF,GAA4B,OAKnC,MAAM5/B,EAAIk9B,EAAM2C,cAAcpoD,QAAQ8L,GACtC,OAAW,IAAPyc,EAEFhnD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAC6gF,GAA0B,CACzBpjF,SAAU+mF,IAAsBjlF,EAChCgiF,QAAS0C,EAAM4C,OAAO9/B,GAAGtjD,GACzBi+E,eAAgBuC,EAAM4C,OAAO9/B,GAAGvkB,UAChCi/C,OAAQqF,EAAAA,IAAsB50D,SAASoY,GACvC/qC,MAAOA,EACPiiF,mBAAoBjiF,IAAUolF,KAGlC5kF,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZlC,EAAQgkF,GAAuBiC,EAAM2C,cAAc7/B,MAEtDhnD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KACb6B,EAAAA,GAAAA,GAAW/D,EAAQklF,GAA6Be,EAAM2C,cAAc7/B,KAAO,CAAC,cAjBnF,CAmBQ,KAMZhnD,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GD5T0f,YC8TlgBilF,GAA4C,IAAtBV,ID9TsiB,aCiU/jBzkF,EAAAA,GAAAC,cAAC+8E,GAAU,CACTj9E,OAAQ4kF,EAAAA,IAAyB5kF,OACjCgB,OAAQ0jF,EACRxH,cAAe8I,IAEhBR,GACCvlF,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GDxUoB,YCyU/B0kC,SAAUu/C,EACVt/C,qBAAsBs/C,EACtBnmF,QAASmmF,EAAY32D,EAAS5G,GAE7B2+D,IAIH,IC3PV,IAAe/nF,EAAAA,EAAAA,KAjEiCwpF,EAC9C/nF,SAAQwrC,UAASw8C,oBACjB/1E,WAAUvT,YAAWupF,iBAErB,MAAMjpF,GAAUC,EAAAA,EAAAA,MAEV,OACJsnF,EAAM,OAAE1jF,EAAM,SAAEC,GACd9C,EACE2B,EAAQ,UAAW3B,EAASA,EAAO2B,WAAQ/B,EAC3CsoF,EAAWvnF,KAAKse,MAAMpc,EAAS0jF,GAC/B4B,EAAoBxmF,EAAQA,EAAQ,OAAI/B,EAExCwoF,GAAWzoF,EAAAA,EAAAA,KAAQ,IAChBqoF,GAAqBA,EAAoBE,EAC5CvnF,KAAKg9E,KAAK,IAAMuK,GAAYF,EAAoB,WAChDpoF,GACH,CAACooF,EAAmBE,IAEjBG,GAAe7jF,EAAAA,EAAAA,KAAamN,IAC5BA,EAAEC,OAAO45B,SACXv5B,EAASs0E,EACX,GACC,CAACA,EAAQt0E,IAEZ,OACElR,EAAAA,GAAAC,cAAA,SACEtC,WAAWuC,EAAAA,GAAAA,GACTgnF,ECjD+C,WAA7B,WDkDjBz8C,IAAYy8C,GClDsD,WDmDnEvpF,GAEFyD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAE7BmB,EAAAA,GAAAC,cAAA,SACEtC,UCxDsF,WDyDtF+D,KAAK,QACLa,KAAK,sBACLmO,MAAO80E,EACP/6C,QAASA,EACTv5B,SAAUo2E,IAEZtnF,EAAAA,GAAAC,cAAA,OAAKtC,UC/DwG,YDgE3GqC,EAAAA,GAAAC,cAAA,OAAKtC,UChEyH,YDiE3HqR,QAAQq4E,IACPrnF,EAAAA,GAAAC,cAAA,QACEtC,WAAWuC,EAAAA,GAAAA,GCnE2M,WAA9B,YDoExLkF,MAAOnH,EAAQ,iBAChB,KAASopF,EAAS,KAGpBppF,EAAQ,SAAUunF,IAErBxlF,EAAAA,GAAAC,cAAA,OAAKtC,UC1E+I,YD2EhJupF,GAAcE,EAAsB,IAAEG,EAAAA,GAAAA,GAAuBzlF,EAAQC,EAAU9D,EAAQ85D,WAAWn3D,IAChG3C,EAAQ,iBAAiBspF,EAAAA,GAAAA,GAAuBJ,EAAUplF,EAAU9D,EAAQ85D,QAElF/3D,EAAAA,GAAAC,cAAA,OAAKtC,UC9EmK,aD+ErK4pF,EAAAA,GAAAA,GAAuBzlF,EAAQC,EAAU9D,EAAQ85D,QAGhD,IElFZ,GAAghB,W,o2BC8D1gByvB,GAAoB,EAAI1uE,EAAAA,EAExB2uE,GAAiE,CACrE/jD,QAASgkD,GACTxF,cAAeyF,GACfxF,mBAAoByF,GACpBxF,iBAAkByF,GAClBxF,eAAgByF,GAChBxF,OAAQyF,GACRxF,cAAeyF,GACfxF,cAAeyF,GACfxF,gBAAiByF,GACjBxF,YAAayF,GACbxF,yBAA0ByF,GAC1BxF,kBAAmByF,GACnBxF,aAAc6E,GACd5E,aAAcwF,GACdvF,WAAYwF,GACZvF,UAAWwF,GACXvF,gBAAiBwF,GACjBvF,QAASwF,IAqXX,IAAelrF,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACxC,MAAM,aACJygC,IACErgC,EAAAA,EAAAA,KAAeJ,GAEby2E,EAAWh2C,GAAci2C,YAAa12C,EAAAA,EAAAA,KAAWhgC,EAAQygC,EAAai2C,iBAAc/pF,EACpFgqF,EAAsBF,GAAUG,YAAc52E,EAAO62E,aAAapgD,KAAKggD,EAASG,YAAYE,iBAC9FnqF,EACEoqF,EAAoBJ,GAAsBK,EAAAA,EAAAA,KAAiBh3E,EAAQ22E,EAAoBM,qBACzFtqF,EAEJ,MAAO,CACL03B,cAAerkB,EAAOqkB,cACtB2tD,MAAOvxC,GAAcuxC,MACrBkF,UAAWz2C,GAAcy2C,UACzBC,OAAQ12C,GAAc02C,OACtBC,aAAc32C,GAAc22C,aAC5BX,WACAE,sBACAI,oBACAM,OAAQ52C,GAAc62C,UAAWt3C,EAAAA,EAAAA,KAAWhgC,EAAQygC,EAAa62C,eAAY3qF,EAC7E2lC,eAAgBmO,GAAcnO,eAC9B2/C,WAAWxgD,EAAAA,EAAAA,KAA2BzxB,GACtCu3E,eAAeC,EAAAA,GAAAA,GAAmBx3E,EAAQ,YAC1Cy3E,cAAcD,EAAAA,GAAAA,GAAmBx3E,EAAQ,iBACzC03E,WAAWF,EAAAA,GAAAA,GAAmBx3E,EAAQ,sBACtC23E,YAAYH,EAAAA,GAAAA,GAAmBx3E,EAAQ,kBACvCkyE,OAAQlyE,EAAO8/B,WAAWoyC,OAC1B0F,YAAa53E,EAAO8/B,WAAW+3C,mBAC/BC,mBAAoB93E,EAAO8/B,WAAWg4C,mBACtC3F,kBAAmBnyE,EAAO8/B,WAAWqyC,kBACtC,GA/BiBpyE,EAxVgCg4E,EAClD5lF,SACAkyB,gBACAoyD,WACAE,sBACAI,oBACA/E,QACA1/C,iBACA2/C,YACAsF,gBACAI,aACAF,eACAC,YACAxF,SACA0F,cACAE,qBACAZ,YACAC,SACAE,SACAD,eACAjF,wBAGA,MAAMjK,GAAY7sE,EAAAA,EAAAA,IAAuB,OACnC,kBACJ28E,EAAiB,YAAEjjB,EAAW,gBAAEkjB,EAAe,iBAAEjoB,EAAgB,aAAEkoB,EAAY,eAAEC,IAC/Et6E,EAAAA,EAAAA,MAEE9R,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MACNksF,EAAgBC,IAAmBr6E,EAAAA,EAAAA,KAAS,IAC5C81E,EAAgBwE,IAAqBt6E,EAAAA,EAAAA,IAAwCs0B,IAC7EimD,EAA4BC,IAAyBx6E,EAAAA,EAAAA,OAE5DzR,EAAAA,EAAAA,KAAU,KACH4F,IACHkmF,GAAgB,GAChBC,OAAkB3rF,GACpB,GACC,CAACwF,IAEJ,MAAMsmF,GAAoBr6E,EAAAA,EAAAA,IAAiBi6B,IACzCigD,EAAkBjgD,EAAQ,IAGtBqgD,GAAqBt6E,EAAAA,EAAAA,IAAgB,KACzCk6E,OAAkB3rF,EAAU,IASxBgsF,GAA4Bv6E,EAAAA,EAAAA,IAAiBy/C,IAClCqqB,EAAU1sE,UAGrBo8E,EACF7iB,EAAY,CACVvlE,KAAM,OACNknE,KAAMkhB,IAECE,IACT9nB,EAAiB,CACf9nD,IAAM,GAAEivD,EAAAA,MAAkB2gB,WAA4Bj6B,GAAc,YAEtEm6B,KACF,IAGItjE,GAActW,EAAAA,EAAAA,IAAgB,KAC9Bm6E,EACFI,EAA0BnqC,OAAO+pC,EAA2BjF,SAE5DqF,GACF,IAGIC,GAAiCx6E,EAAAA,EAAAA,IAAiBk1E,IACtD,MAAMuF,EAAc7G,GAAOtmF,QAAQ8C,MAAMzB,GAAWA,EAAOumF,SAAWA,IACtEkF,EAAsBK,EAAY,IAG9BC,GAAe16E,EAAAA,EAAAA,IAAgB,KACnC,MAAMogD,EAAS0pB,EAAU1sE,QACzB,GAAKgjD,GACDrsD,EAAQ,CACV,MAAM,IACJwhB,EAAG,KAAEnH,EAAI,MAAE/Q,EAAK,OAAEK,GAChB0iD,EAAOloD,cAAc,kBAAmBuW,wBAC5CorE,EAAgB,CACdtkE,MACAnH,OACA/Q,QACAK,SACAi9E,WAAW,GAEf,MAGFxsF,EAAAA,EAAAA,KAAU,KACJ2qF,GACF4B,GACF,GACC,CAAC5B,EAAW4B,KAEfv9E,EAAAA,EAAAA,IAAc,EAAEy9E,MACVA,IAAkB/G,GAEtB6G,GAAc,GACb,CAAC7G,EAAW6G,IAEf,MAAM1F,GAAmB1mF,EAAAA,EAAAA,KAAQ,IAC1BylF,EACEA,EAAkBvkD,QAAQyK,GAAYo6C,EAAAA,IAAyBxyD,SAASoY,KADhDo6C,EAAAA,KAE9B,CAACN,KAEJ5lF,EAAAA,EAAAA,KAAU,KACHoqF,IAAuBI,GAC5BmB,EAAa,CACXjB,eAAgBN,EAAoBM,gBACpC,GACD,CAACiB,EAAcvB,EAAqBI,KAEvCxqF,EAAAA,EAAAA,KAAU,KACR,MAAO0sF,GAAiBjH,GAAOtmF,SAAW,GAC1C8sF,EAAsBS,EAAc,GACnC,CAACjH,IAEJ,MAAMkH,GAAsB96E,EAAAA,EAAAA,IAAgB,KACrC24E,GAELoB,EAAe,CACblB,eAAgBF,GAChB,IAGEhC,GAAoBroF,EAAAA,EAAAA,KAAQ,KAChC,MAAMysF,EAAcnH,GAAOtmF,QAAQ8C,MAAMzB,GAA6B,IAAlBA,EAAOumF,SAC3D,GAAK6F,EAGL,OAAO1jE,OAAO0jE,EAAYvpF,OAAO,GAChC,CAACoiF,IAEEoH,IAAsB1sF,EAAAA,EAAAA,KAAQ,KAClC,IAAK6rF,EACH,OAEF,MAAM,OAAE3oF,EAAM,OAAE0jF,EAAM,SAAEzjF,GAAa0oF,EAC/BhF,EAAgB7lF,KAAKse,MAAMpc,EAAS0jF,GAC1C,OAAO3jF,EAAAA,GAAAA,GACL1D,EACAsnF,EACA1jF,EACD,GACA,CAAC0oF,EAA4BtsF,IAEhC,GAAK+lF,KAAU2E,GAAwBI,GAoFvC,OACEjpF,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,UDrWiB,WCsWjBkH,QAASqlF,EACT7lF,OAAQA,EACR+1E,UAAWA,GAEXp6E,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CAAC78B,KAAK,QAAQ88B,UAAW2mD,EAAiB,EAAI,EAAGroF,UD1WnB,YC2WrCqoF,EA4EAhmF,EAAAA,GAAAC,cAACgkF,GAAmB,CAClBz/C,eAAgBwhD,EAChBx4D,OAAQo9D,EACR1G,MAAOA,EACPK,iBAAkBsG,EAClB1G,UAAWA,EACXC,OAAQA,EACRC,kBAAmBA,EACnBC,mBAAoBmG,IAnFtBzqF,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GD5W2D,WC4W/B,iBAAkBsmD,SA5MtE,SAAsB51C,GACpB,MAAM,UAAEgsB,GAAchsB,EAAEmW,cAExBwjE,EAAgB3tD,GAAa,IAC/B,GAyMU58B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACLhE,UDhXiZ,WCiXjZ0T,MAAM,cAENrT,QAASA,IAAMksF,IACfp0E,UAAW7X,EAAQ,UAEnB+B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEXsmF,IAAwBQ,EACxBrpF,EAAAA,GAAAC,cAACsrF,GAAAA,EAAW,CACV5tF,UD1X0I,WC2X1IK,QAASotF,EACTpC,WAAYH,EAAoBnlF,GAChCb,OAAK,EACLlB,KAAM6lF,KAGRxnF,EAAAA,GAAAC,cAAA,OAAKtC,UDjYoF,WCiY5DqK,IAAKwjF,GAAa1gE,IAAI,GAAGjjB,WAAW,IAEnE7H,EAAAA,GAAAC,cAAA,MAAItC,WAAWuC,EAAAA,GAAAA,GDnYgL,WCmY9I+oF,GDnYmkB,aCiR9nB,WACE,GAAII,EACF,OAAOrnF,EAAAA,GAAAA,GACL2mF,GAAUjlF,KAAO6yB,EACbt4B,EAAQ,sDAAuD,EAACqtC,EAAAA,EAAAA,IAAgBi+C,GAASD,IACzFrrF,EAAQ,8CAA+C,EAACqtC,EAAAA,EAAAA,IAAgBq9C,GAAWW,IACvF,CAAC,kBAAmB,UAIxB,GAAIL,GAAqBN,EAAU,CACjC,MAAM8C,EAAWxtF,EAAQ,kCAAkCk6D,QAAQ,UAAU7sB,EAAAA,EAAAA,IAAgBq9C,KACtF+C,EAAOC,GAAUF,EAASnQ,MAAM,UAEjCsQ,EAAQ3C,EAAkB4C,mBAC9B7rF,EAAAA,GAAAC,cAACsrF,GAAAA,EAAW,CAAC5tF,UDhSuqB,WCgSjoBqrF,WAAYC,EAAkB4C,0BAC/EhtF,EACEitF,EACJ9rF,EAAAA,GAAAC,cAAA,QAAMtC,UDnS8oB,WCmS5mBK,QAASotF,GAC9CQ,GAAO5pF,EAAAA,GAAAA,GAAWinF,EAAkB7jF,QAGzC,MAAO,EAACpD,EAAAA,GAAAA,GAAW0pF,GAAQI,GAAM9pF,EAAAA,GAAAA,GAAW2pF,GAC9C,CAEA,OAAO3pF,EAAAA,GAAAA,GACL2mF,EACI1qF,EAAQ,kCAAkCqtC,EAAAA,EAAAA,IAAgBq9C,IAC1D1qF,EAAQkmF,EAAY,iCAAmC,mBAC3D,CAAC,kBAAmB,SAExB,CAoFa4H,IAEH/rF,EAAAA,GAAAC,cAAA,OAAKtC,UDtYmN,aCuYrNqE,EAAAA,GAAAA,GApFPqnF,EACKV,GAAUjlF,KAAO6yB,EACpBt4B,EAAQ,0DAA0DqtC,EAAAA,EAAAA,IAAgBi+C,IAClFtrF,EAAQ,kDAILA,EADLgrF,EACa,0CAGVN,EACK,oCACAxE,EAAY,oCAAsC,2BAwEhB,CAAC,kBAAmB,YAExDA,IAAckF,GAtDtBrpF,EAAAA,GAAAC,cAAA,OAAKtC,UDnVktB,YCoVptBumF,GAAOtmF,QACLwC,KAAKnB,GACJe,EAAAA,GAAAC,cAAC+mF,GAAyB,CACxBrpF,UDvV+uB,WCwV/uBqD,IAAK/B,EAAO6C,OACZ7C,OAAQA,EACRiS,SAAU45E,EACV7D,kBAAmBA,EACnBx8C,QAASggD,GAA4BjF,SAAWvmF,EAAOumF,YA8CzDxlF,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GD1Y2R,WC0Y7PoqF,GD1YkT,aC2Y9VtqF,EAAAA,GAAAC,cAAA,MAAItC,UD3Y6c,YC4Y9cM,EAAQ,qBAGb+B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GD/Y0N,WC+Y9LikF,GD/Y2O,aCgZpRmB,EAAiBllF,KAAI,CAACmqC,EAAS/qC,IAE5BQ,EAAAA,GAAAC,cAACs8E,GAAkB,CACjBv7E,IAAKupC,EACLnlC,MAAOnH,EAAQgkF,GAAuB13C,IACtCtyB,KAAkB,kBAAZsyB,EACFtsC,EAAQklF,GAA6B54C,GACrC,CAACk/C,EAAeE,EAAcC,EAAWC,EA1V1C,IA2VC5rF,EAAQklF,GAA6B54C,IACzCplC,KAAMsiF,GAA4Bl9C,GAClC/qC,MAAOA,EACP+1B,MAAO+vD,EAAiBvlF,OACxBwqC,QAASA,EACTvsC,QAAS2sF,MAIf3qF,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAeC,GDlasiB,YCmahkBiB,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAE7BmB,EAAAA,GAAAC,cAAA,UACG+B,EAAAA,GAAAA,GAAW/D,EAAQ,2BAA4B,CAAC,qBAEnD+B,EAAAA,GAAAC,cAAA,UACG+B,EAAAA,GAAAA,GAAW/D,EAAQ,4BAA6B,CAAC,sBAvGlE,WACE,GAAKimF,KAAUmF,GAAUV,GAAUjlF,KAAO6yB,GAI1C,OACEv2B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAmBiB,IAAKnD,EAAQoD,MAAQ,WAAQxC,IAC7DwuC,EAAAA,GAAAA,IAAuB,CACtBp1B,KAAMisE,EAAM8H,WACZC,SAAU/H,EAAMgI,iBAIxB,CA6FaC,KAEDhI,GAAasG,GACbzqF,EAAAA,GAAAC,cAAA,OAAKtC,UD/ailB,YCgbplBqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UDhb2C,WCgbjBinC,SAAO,EAACC,qBAAmB,EAAC7mC,QAAS4oB,GACpE3oB,EAAQ,qBAAsBqtF,QAkBrC,K,4BC7XZ,MAEMziC,GAAkB,iBAiLxB,IAAerrD,EAAAA,EAAAA,KA/KI4uF,EACjBzuF,YACAkpC,eACAD,gBACA+f,QACAjgB,cACA2lD,eACAx1D,YACAy1D,kBACA3lD,oBACA4lD,aACAnlD,gBACAolD,gBACA1lD,qBACA2lD,sBACAxlD,iBACAylD,kBACA9lC,gBACG+lC,MAEH,MAAMxuF,GAAOD,EAAAA,EAAAA,KAEP47D,GAAWvsD,EAAAA,EAAAA,IAAyB,MAEpC25B,EAAgBylD,EAAczlD,cAC9B0lD,EAAuB1lD,EAAgBylD,EAAcC,0BAAuB/tF,EAC5EguF,EAAyB3lD,EAAgBylD,EAAcE,4BAAyBhuF,GAEtFJ,EAAAA,EAAAA,KAAU,KACR,IAAKooC,EAAc,OACnB,MAAMimD,EAAYj+E,OAAOC,YAAW,MAClC4/B,EAAAA,EAAAA,KAAe,KACborB,EAASpsD,SAAS+sD,OAAO,GACzB,GArCe,KAwCnB,MAAO,KACL5rD,OAAOL,aAAas+E,EAAU,CAC/B,GACA,CAACjmD,IAEJ,MAAMkmD,GAAiBnuF,EAAAA,EAAAA,KAAQ,IACzBsoC,EACKylD,EAAcI,eAGhBJ,EAAcK,cAAgB,CAACL,EAAcK,eAAiBxmD,GAAAA,GACpE,CAACU,EAAeylD,EAAcK,cAAeL,EAAcI,iBAExDE,GAA0BruF,EAAAA,EAAAA,KAAQ,IAAM,IAAIsuF,IAAIN,IAAuB,CAACA,IACxEO,GAA4BvuF,EAAAA,EAAAA,KAAQ,IAAM,IAAIsuF,IAAIL,IAAyB,CAACA,IAE5EO,GAAuBxuF,EAAAA,EAAAA,KAAQ,KACnC,GAAI8nC,EACF,OAAOigB,EAAMvmD,KAAK+R,GAASA,EAAKzB,QAGlC,MAAM28E,EAA2C,GAC3CC,EAAqC,GACrCC,EAA+C,GAYrD,OAVA5mC,EAAMpnD,SAAS4S,IACT86E,EAAwBO,IAAIr7E,EAAKzB,OACnC28E,EAAqB3tF,KAAKyS,GACjBg7E,EAA0BK,IAAIr7E,EAAKzB,OAC5C68E,EAAyB7tF,KAAKyS,GAE9Bm7E,EAAe5tF,KAAKyS,EACtB,IAGKk7E,EAAqBI,OAAOH,EAAgBC,GAA0BntF,KAAK+R,GAASA,EAAKzB,OAAM,GACrG,CAACg2B,EAAaigB,EAAOsmC,EAAyBE,IAE3CO,GAAkBp9E,EAAAA,EAAAA,IAAiBI,IACvC,GAAIw2B,EAAe,CACjB,MAAMymD,EAAoBZ,EAAejtC,QACnCtgD,EAAQmuF,EAAkBlvD,QAAQ/tB,GAQxC,OAPIlR,GAAS,EACXmuF,EAAkBC,OAAOpuF,EAAO,GAEhCmuF,EAAkBjuF,KAAKgR,QAGzBi8E,EAAckB,yBAAyBF,EAEzC,CAEAhB,EAAcmB,wBAAwBp9E,EAAM,KAGvCq9E,EAAoBrkC,IAAWC,EAAAA,GAAAA,GACpC/C,EAAYwmC,EAAsBp+E,QAAQy9E,GAAuB/lD,IAG7DsnD,GAAqB19E,EAAAA,EAAAA,IAAiBM,IAC1C,MAAM,MAAEF,GAAUE,EAAEmW,cACpBkgB,IAAiBv2B,EAAM,IAGnBu9E,GAAaxqF,EAAAA,EAAAA,KAAaiN,IAC9B,MAAMyB,EAAOw0C,EAAMjmD,MAAMwtF,GAAeA,EAAWx9E,QAAUA,IAC7D,IAAKyB,EAAM,OAEX,MAAM,MAAEpB,EAAK,SAAEo9E,EAAUt3D,UAAWu3D,GAAkBj8E,EAChDk8E,EAAqBlB,EAA0BK,IAAI98E,GACnD49E,EAAmBrB,EAAwBO,IAAI98E,GAC/C69E,EAAWF,GAAsBC,EACjCE,EAAYzB,EAAe56D,SAASzhB,GAa1C,OACE1Q,EAAAA,GAAAC,cAACmsD,GAAAA,EAAU,CACTprD,IAAK0P,EACL/S,WAAWuC,EAAAA,GAAAA,GAAe2oD,GAAiB2jC,GAC3CpnF,MAAO2L,EACP1L,SAAU8oF,EACVtrE,SAAU0rE,EACV7pD,SAAU6nD,EACVnqE,QAAM,EACNqsE,aAnBEF,EAAiBvuF,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,eACV,UAAlB6kC,EACKpnC,EAAAA,GAAAC,cAACyuF,GAAAA,EAAK,CAACjkD,QAAS+jD,EAAW3rE,SAAU0rE,EAAU13D,UAAWu3D,EAAeO,WAAS,IAErE,aAAlBvnD,EACKpnC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CAACrpB,QAAS+jD,EAAW3rE,SAAU0rE,EAAU13D,UAAWu3D,EAAeO,WAAS,SAD9F,EAiBE3wF,QAASA,IAAM0vF,EAAgBh9E,GAE/Bg8E,gBAAiBA,GAAmB,KAAOA,EAAgBh8E,EAAO49E,KAClE,GAEH,CACD3nC,EAAOwmC,EAA2BF,EAAyBF,EAAgBR,EAAYG,EACvFtlD,EAAeolD,IAGjB,OACExsF,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAAA,EAAOwJ,UAAWhM,IAC9CkpC,GACC7mC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAAA,EAAOqE,OAAQ,iBAAkBpD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACxFmB,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACR1N,GAAIkjC,EACJxvB,IAAK0iD,EACLppD,MAAOg2B,EACPx1B,SAAU88E,EACVthC,YAAa/lB,GAAqBxoC,EAAK,aAK5C4vF,GAAoBhuF,OACnBC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACb/oD,WAAWuC,EAAAA,GAAAA,GAAeC,GAAAA,EAAOyuF,WAAY9nD,GAAsB3mC,GAAAA,EAAO0uF,OAAQ,iBAClFloC,MAAOonC,EACP9gC,aAAe,IAAGpE,KAClBjC,WAAY8C,EACZ4iC,gBAAiBA,GAEhByB,EAAmB3tF,KAAKsQ,GAAUu9E,EAAWv9E,MAE7CmmB,IAAak3D,GAAuBA,EAAmBhuF,OAG1DC,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAFR7sD,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,GAAAA,EAAO2uF,WAAYzC,GAAgBluF,EAAK,yBAIpD,ICrPV,IAAgB,KAAO,WAAW,eAAiB,WAAW,YAAc,WAAW,OAAS,WAAW,OAAS,YCwHpH,IAAeX,EAAAA,EAAAA,KA5F0BuxF,EACvC1qF,SACAQ,UACA4wD,WACA4D,cACA21B,qBAEA,MAAM,iBAAEjrD,IAAqBh0B,EAAAA,EAAAA,MAEvB5R,GAAOD,EAAAA,EAAAA,MAEN+wF,EAAoBC,IAAyBh/E,EAAAA,EAAAA,IAAmB,IAEjEi/E,GADyB32D,EAAAA,EAAAA,GAAsBy2D,KACIA,EAEnDjpD,GAAepnC,EAAAA,EAAAA,KAAQ,IACtBy6D,EAIEA,EAAYv5B,QAAQsvD,IAAaA,EAAQ52E,UAA6B,OAAjB42E,EAAQC,OACjEjvF,KAAI,EACHivF,OAAMC,kBACF,CACJ5+E,MAAO2+E,EACPt+E,MAAOu+E,MARF,IAUR,CAACj2B,IAEEk2B,GAA0Bj/E,EAAAA,EAAAA,IAAiBk/E,IAC3CR,GAAkBQ,EAAezvF,OAASivF,EAC5CjrD,EAAiB,CACfr9B,QAASvI,EAAK,qCAAsC6wF,KAIxDE,EAAsBM,EAAe,IAGjCxnD,GAAe13B,EAAAA,EAAAA,IAAgB,KACnCmlD,EAASw5B,GACTpqF,GAAS,IAGX,OACE7E,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,UAAWwC,GAAOkgC,KAClBh8B,OAAQA,EACRQ,QAASA,EACTmM,QAASg3B,GAEThoC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOwJ,WACrB3J,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOsvF,gBACrBzvF,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACNrT,QAAS6G,GAET7E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGbvC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,GAAOuvF,aACnBvxF,EAAK,4BAKZ6B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOwvF,KAAM,kBAC1C3vF,EAAAA,GAAAC,cAACmsF,GAAU,CACTzuF,UAAWwC,GAAOyvF,OAClBjpC,MAAO3gB,EACP+mD,eAAgBkC,EAChBpB,uBAAwB0B,EACxBjD,gBAAiB6C,EACjBjoD,eAAa,EACbE,cAAc,cAIlBpnC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOsE,QACrBzE,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLN,KAAK,UACL3D,QAASgqC,GAER7pC,EAAK,wBAGJ,I,mDCxFZ,MAkHA,IAAeX,EAAAA,EAAAA,KAlHoBqyF,EACjCxrF,SACAyrF,iBACAd,iBACAe,qBACAC,yBACAnrF,cAEA,MAAM,iBAAEk/B,IAAqBh0B,EAAAA,EAAAA,MACvB5R,GAAOD,EAAAA,EAAAA,MAEN+xF,EAAkBC,IAAuBhgF,EAAAA,EAAAA,SAA6BrR,IACtEinC,EAAaC,IAAkB71B,EAAAA,EAAAA,IAAiB,KAChDigF,EAAoBC,EAAkBC,IAAqB7xF,EAAAA,EAAAA,MAC3DmnC,EAAa2qD,IAAkBpgF,EAAAA,EAAAA,IAAmB6/E,IAEzDtxF,EAAAA,EAAAA,KAAU,KACR6xF,EAAeP,EAAmB,GACjC,CAACA,IAEJ,MAAMQ,GAAa3xF,EAAAA,EAAAA,KAAQ,KACzB,MAAMsT,GAAS0+B,EAAAA,EAAAA,MACT6Z,EAAYv4C,EAAOw4C,MAAM/hB,MACzB,OAAE5nC,EAAM,SAAEusD,GAAap7C,EAAOw4C,MAAMwC,QACpC9mB,GAAOrlC,GAAU,IAAI0sF,OAAOngC,GAAY,IAE9C,OAAOpnB,EAAAA,GAAAA,IAAOE,GAAKhmC,KAAKsD,GAAO+mD,EAAU/mD,KACtCo8B,QAAQptB,GACPA,KACEkjB,EAAAA,EAAAA,IAAcljB,KAAS89E,EAAAA,EAAAA,IAAiB99E,KACrCA,EAAKhP,KAAOosF,IAChB1vF,KAAKsS,GAASA,EAAKhP,IAAG,GAC1B,CAACosF,IAEEW,GAAsB7xF,EAAAA,EAAAA,KAAQ,KAClC,MAAM8xF,EAAkBH,GAAapqD,EAAAA,GAAAA,IAAmB,CAAEC,IAAKmqD,EAAYlqD,MAAOP,EAAapkC,KAAM,SAAY,GAEjH,OAAOusD,EAAAA,GAAAA,GAAYyiC,GACjB,EACA/qD,EAAY,GACb,CAAC4qD,EAAYzqD,EAAaH,IAEvBgrD,GAAiCrgF,EAAAA,EAAAA,IAAiBk/E,IACtD,MAAM/kC,GAAY7Z,EAAAA,EAAAA,MAAY8Z,MAAM/hB,KAE9BioD,EADgBpB,EAAe1vD,QAAQp8B,IAAQiiC,EAAYxT,SAASzuB,KAC/BhD,MAAMgD,IAC/C,MAAMgP,EAAO+3C,EAAU/mD,GACvB,OAAOgP,KAASm+E,EAAAA,EAAAA,IAAan+E,EAAK,IAGhCizB,GAAa5lC,QAAUivF,EACzBjrD,EAAiB,CACfr9B,QAASvI,EAAK,0CAA2C6wF,KAKzD4B,GACFV,EAAoBU,GACpBR,KAEAE,EAAed,EACjB,IAGIsB,GAAqCxgF,EAAAA,EAAAA,IAAgB,KACrD2/E,GACFK,GAAepqD,EAAAA,GAAAA,IAAO,IAAIP,EAAasqD,KAEzCI,GAAmB,IAGfU,GAAqBzgF,EAAAA,EAAAA,IAAgB,KACzC0/E,EAAuBrqD,GACvB9gC,GAAS,IAGX,OACE7E,EAAAA,GAAAC,cAAC+wF,GAAAA,EAAW,CACV3sF,OAAQA,EACRQ,QAASA,EACTO,MAAOjH,EAAK,kCACZqyE,gBAAc,EACdygB,qBAAmB,EACnBC,iBAAe,EACfC,kBAAmBhzF,EAAK,QACxByT,UAAWm/E,EACX//E,QAAS+/E,GAET/wF,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACTC,QAASkqD,EACT9qD,YAAaA,EACbe,YAAaZ,EACba,kBAAmBxoC,EAAK,UACxB6oC,oBAAqB2pD,EACrB1pD,eAAgBlB,EAChBc,cAAY,EACZC,oBAAkB,EAClBK,YAAU,EACVD,eAAa,EACbE,cAAc,aAEhBpnC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZlgC,MAAOjH,EAAK,kCACZ8Z,KAAM9Z,EAAK,yCACXonC,aAAcpnC,EAAK,OACnBkG,OAAQ8rF,EACRtrF,QAASwrF,EACT7qD,eAAgBsrD,IAEN,ICnDlB,IAAetzF,EAAAA,EAAAA,KA3D0B4zF,EACvCnyF,SAAQwrC,UACRloC,OAAM0V,OAAMtQ,MACZ0pF,SAAQngF,WAAUogF,gBAAe3zF,YACjC4zF,YAAWC,wBAEX,MAAMrzF,GAAOD,EAAAA,EAAAA,KAEb,IAAIuzF,EAAkCtzF,EAAK8Z,GACvCo5E,GAAUG,GAAmBzxF,SAC/B0xF,EAAcD,EAAkBzxF,OAAS,EAAK,GAAEyxF,EAAkBzxF,SAAWwxF,GAG/E,MAAMjK,GAAeh3E,EAAAA,EAAAA,IAAiBM,IAChCA,EAAEC,OAAO45B,SACXv5B,EAASjS,EACX,IAGI2nB,GAActW,EAAAA,EAAAA,IAAgB,KAClCghF,KAAiB,IAGnB,OACEtxF,EAAAA,GAAAC,cAAA,SACEtC,WAAWuC,EAAAA,GAAAA,GCrDS,WDqDsBvC,GAC1CyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,EAC1BosC,KAAK,SACLD,SAAU,GAEVhrC,EAAAA,GAAAC,cAAA,SACEtC,UC3DqC,WD4DrC+D,KAAK,QACLa,KAAK,kBACLmO,MAAOzR,EACPwrC,QAASA,EACTv5B,SAAUo2E,EACVtpF,QAAU4S,GAAMA,EAAEwI,oBAEpBpZ,EAAAA,GAAAC,cAAA,OAAKtC,UCnEuD,YDoE1DqC,EAAAA,GAAAC,cAAA,OAAKtC,UCpE+J,WDoElIqK,IAAKL,EAAKmjB,IAAI,GAAGjjB,WAAW,IAC9D7H,EAAAA,GAAAC,cAAA,OAAKtC,UCrEmG,YDsEtGqC,EAAAA,GAAAC,cAAA,MAAItC,UCtEqH,YDuEtHQ,EAAM,GAAEoE,MAEV8uF,EACCrxF,EAAAA,GAAAC,cAAA,OAAKtC,UC1EoI,WD0E5GK,QAAS4oB,GACpC5mB,EAAAA,GAAAC,cAAA,YAAOwxF,GACPzxF,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UAGbvC,EAAAA,GAAAC,cAAA,QAAMtC,UC/EmL,YD+EnJ8zF,KAItC,IEiDZ,IAAej0F,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAqB,CAACC,GAAU49E,qBAClD,MAAMhiC,EAAegiC,GAAiB/hC,EAAAA,EAAAA,KAAmB77C,EAAQ49E,QAAkBjxF,EACnF,OAAKivD,EAIE,CACL4jC,QAAS5jC,EAAa4jC,QACtBC,iBAAkB7jC,EAAa6jC,kBALxB,CAAC,CAMT,GATiB1/E,EAhGY2/E,EAC9BvtF,SACA2qF,iBACA0C,UACAC,mBACA5B,qBACAC,yBACAnrF,cAEA,MAAM,iBAAEk/B,IAAqBh0B,EAAAA,EAAAA,MACvB5R,GAAOD,EAAAA,EAAAA,MAEN4nC,EAAaC,IAAkB71B,EAAAA,EAAAA,IAAiB,KAChDy1B,EAAa2qD,IAAkBpgF,EAAAA,EAAAA,IAAmB6/E,IAEzDtxF,EAAAA,EAAAA,KAAU,KACR6xF,EAAeP,EAAmB,GACjC,CAACA,IAEJ,MAAM8B,GAAYjzF,EAAAA,EAAAA,KAAQ,KACxB,MAAMsT,GAAS0+B,EAAAA,EAAAA,OACT,KAAEjI,EAAI,aAAEmpD,GAAiB5/E,EAAOtR,MACtC,IAAK8wF,GAAS3xF,OACZ,MAAO,GAGT,MAAMgyF,EAAcJ,GAAoB,IAAIzE,IAAI1sC,OAAO2K,KAAKwmC,IAEtD1pD,GAAU+pD,EAAAA,EAAAA,IACdN,EAAQtxF,KAAI,EAAG4/B,YAAaA,IAC5B2I,EACAmpD,GAGF,OAAOC,EAAc9pD,EAAQnI,QAAQE,IAAY+xD,EAAYvE,IAAIxtD,KAAWiI,CAAO,GAClF,CAAC0pD,EAAkBD,IAEhBO,GAAqBrzF,EAAAA,EAAAA,KAAQ,KACjC,MAAMyoC,GAAYuJ,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAC9BupD,EAAkBL,GACpB1rD,EAAAA,GAAAA,IAAmB,CAAEC,IAAKyrD,EAAWxrD,MAAOP,EAAapkC,KAAM,SAAY,GAE/E,OAAOusD,EAAAA,GAAAA,IAAY/nB,EAAAA,GAAAA,IAAOgsD,GAAiBpyD,QAAQE,IACjD,MAAMiS,EAAO5K,EAAUrH,GACvB,OAAKiS,KAIGkgD,EAAAA,EAAAA,IAAUlgD,EAAK,IACtB,GACF,CAAC4/C,EAAW/rD,IAETssD,GAAgC9hF,EAAAA,EAAAA,IAAiBk/E,IACjDA,EAAezvF,OAASivF,EAC1BjrD,EAAiB,CACfr9B,QAASvI,EAAK,iCAAkC6wF,KAIpDsB,EAAed,EAAe,IAG1BuB,GAAqBzgF,EAAAA,EAAAA,IAAgB,KACzC0/E,EAAuBrqD,GACvB9gC,GAAS,IAGX,OACE7E,EAAAA,GAAAC,cAAC+wF,GAAAA,EAAW,CACV3sF,OAAQA,EACRQ,QAASA,EACTO,MAAOjH,EAAK,8BACZqyE,gBAAc,EACdygB,qBAAmB,EACnBC,iBAAe,EACfC,kBAAmBhzF,EAAK,QACxByT,UAAWm/E,EACX//E,QAAS+/E,GAET/wF,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACTC,QAAS0rD,EACTtsD,YAAaA,EACbe,YAAaZ,EACba,kBAAmBxoC,EAAK,UACxB6oC,oBAAqBorD,EACrBnrD,eAAgBlB,EAChBc,cAAY,EACZC,oBAAkB,EAClBK,YAAU,EACVD,eAAa,EACbE,cAAc,aAEJ,KChIlB,GAA0a,WAA1a,GAAse,WAAte,GAAigB,WAAjgB,GAA2hB,WAA3hB,GAA+rB,WAA/rB,GAA0tB,WAA1tB,GAA0vB,WAA1vB,GAA+zB,WAA/zB,GAA+1B,WAA/1B,GAA+3B,WAA/3B,GAAu8B,WAAv8B,GAAo+B,WAAp+B,GAA+kC,W,oDCoG/kC,MAIMirD,GAA+C,CACnD,EAAGC,GACH,EAAGC,GACH,GAAIC,IA4xBN,IAAeh1F,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACxC,MAAM,cACJugF,IACEngF,EAAAA,EAAAA,KAAeJ,GACb3B,EAASkiF,GAAeliF,OACxBmC,EAAOnC,GAAS4hC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,QAAU1R,EAC7C82B,EAAYjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,GAExC,MAAO,CACLnC,SACAmiF,MAAOD,GAAeC,MACtBC,mBAAoBF,GAAejB,kBACnCoB,oBAAqBH,GAAeI,mBACpCC,6BAA8B5gF,EAAO8/B,WAAW+gD,yBAChDC,mBAAoB9gF,EAAO8/B,WAAWghD,mBACtCC,mBAAoB/gF,EAAO8/B,WAAWkhD,oBACtCC,sBAAuBjhF,EAAO8/B,WAAWohD,qBACzC/5B,YAAannD,EAAOmnD,YAAYg6B,QAChCC,gBAAiBb,GAAea,gBAChC39D,YACA49D,iBAAkBd,GAAee,YAClC,GArBiBvhF,EAzxB6BwhF,EAC/CljF,SACAmiF,QACAruF,SACAsxB,YACAg9D,qBACAC,sBACAE,+BAA+BY,EAAAA,IAC/Br6B,cACAi6B,kBACAH,wBAAwBQ,EAAAA,IACxBV,qBAAqBW,EAAAA,IACrBZ,qBACAO,uBAGA,MAAMnZ,GAAY7sE,EAAAA,EAAAA,IAAuB,OACnC,mBACJsmF,EAAkB,YAAE5sB,EAAW,iBAAEjjC,EAAgB,sBACjD8vD,EAAqB,2BAAEC,IACrBhkF,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,MACN81F,EAAkBC,EAAcC,IAAiB11F,EAAAA,EAAAA,MACjD21F,EAA0BC,EAAwBC,IAA2B71F,EAAAA,EAAAA,MAC7E2xF,EAAoBC,EAAkBC,IAAqB7xF,EAAAA,EAAAA,MAC3D81F,EAAuBC,EAAqBC,IAAwBh2F,EAAAA,EAAAA,MACpEi2F,EAA0BC,EAAwBC,IAA2Bn2F,EAAAA,EAAAA,KAE9Eo2F,EAA6B,CAAC,CAClCryF,KAAM,gBACN0V,KAAM,0BACNvH,MAAO,mBACP/I,IAAK4qF,GACLjqD,QAAS,wBACT+oD,QAAQ,EACRC,cAAeA,KACbiD,GAAqB,IAIrBvB,GACF4B,EAAal1F,KAAK,CAChB6C,KAAM,gBACN0V,KAAM,0BACNvH,MAAO,iBACP/I,IAAKktF,GACLvsD,QAAS,sBACT+oD,QAAQ,IAIZ,MAAOyD,EAAkBC,IAAuB7kF,EAAAA,EAAAA,IAAiBwe,KAAKC,MA9DrC,SA+D1B27D,EAAgBC,IAAmBr6E,EAAAA,EAAAA,KAAS,IAC5C8kF,EAAyBC,IAA8B/kF,EAAAA,EAAAA,IA9DpC,IA+DnBglF,GAAwBC,KAAqBjlF,EAAAA,EAAAA,IAA0B0kF,EAAa,GAAGlkF,QACvF7S,GAAoBu3F,KAAyBllF,EAAAA,EAAAA,OAC7CmlF,GAA0BC,KAA+BplF,EAAAA,EAAAA,IAA0B,QACnFqlF,GAAqBC,KAA0BtlF,EAAAA,EAAAA,OAC/CulF,GAAiBC,KAAsBxlF,EAAAA,EAAAA,IAAmB,KAC1D2iF,GAAoB8C,KAAyBzlF,EAAAA,EAAAA,IAAmB,KAChE++E,GAAoBC,KAAyBh/E,EAAAA,EAAAA,IAA+B,KAC5E0lF,GAAmBC,KAAwB3lF,EAAAA,EAAAA,KAAkB,IAC7D4lF,GAAkBC,KAAuB7lF,EAAAA,EAAAA,KAAkB,IAC3D8lF,GAAkBC,KAAuB/lF,EAAAA,EAAAA,SAA6BrR,IACtEq3F,GAAqBC,KAA0BjmF,EAAAA,EAAAA,SAAyCrR,IAE7Fu3F,GAA0BC,KACxBnmF,EAAAA,EAAAA,SAA8CrR,GAE5Cy3F,GAA+C,qBAA3BpB,GACpBqB,GAA6C,mBAA3BrB,GAClBsB,GAAoBF,KACtBb,GAAgB11F,OAASi1F,EAA0BS,GAAgB11F,OACjE02F,GAAgBD,GAAoB1D,EACpC4D,GAAqB74F,IAAoB84F,aAEzCC,IAAqBh4F,EAAAA,EAAAA,KAAQ,IAAM,CACvC,CACE8R,MAAO,MACPK,MAAO5S,EAAKw3B,EAAY,yBAA2B,sBACnDw4D,SAAUc,IAAsBA,GAAmBlvF,OAAS,EACxD5B,EAAK,kCAAmC8wF,GAAmBlvF,QAC3D5B,EAAK,6BAEX,CACEuS,MAAO,MACPK,MAAO5S,EAAKw3B,EAAY,yBAA2B,sBACnDw4D,SAAUc,IAAsBA,GAAmBlvF,OAAS,EACxD5B,EAAK,kCAAmC8wF,GAAmBlvF,QAC3D5B,EAAK,+BAEV,CAACw3B,EAAWx3B,EAAM8wF,KAEf4H,GAAgB14F,EAAK,SAAUo3F,IAC/BuB,GAAmD,kBAA1BxD,GAAiB5xF,KAC1Cq1F,GAAqD,aAA1BzD,GAAiB5xF,KAE5Cs1F,IAAep4F,EAAAA,EAAAA,KAAQ,IACpB8zF,GAAOhyF,MAAMu2F,GAASA,EAAKzR,SAAW+P,IAAuB0B,EAAKr2F,QAAU41F,MAClF,CAAC9D,EAAO6C,GAAqBiB,KAE1BU,IAAoBt4F,EAAAA,EAAAA,KAAQ,IACzB20F,GAAkB7yF,MAAMu2F,GACtBH,IAA0BG,EAAK/3F,QAAWk3F,IAA0Bl3F,SAE5E,CAACk3F,GAA0B7C,EAAkBuD,KAE1CK,IAAgBv4F,EAAAA,EAAAA,KAAQ,IACrB8zF,GAAO5yD,QAAQm3D,GAASA,EAAKr2F,QAAU41F,IAAqBS,EAAKl1F,WAAaq1F,EAAAA,OACpF,CAAC1E,EAAO8D,KAELvP,IAAoBroF,EAAAA,EAAAA,KAAQ,KAChC,MAAMy4F,EAAYF,IAAep4F,QAAO,CAACisD,EAAKisC,IACrCA,EAAKn1F,OAASkpD,EAAIlpD,OAASm1F,EAAOjsC,GACxCmsC,GAAc,IAEjB,OAAOE,GAAaz3F,KAAKse,MAAMm5E,EAAUv1F,OAASu1F,EAAU7R,OAAO,GAClE,CAAC2R,KAEEG,IAAmB14F,EAAAA,EAAAA,KAAQ,KACxBsnC,EAAAA,GAAAA,IAAQwsD,GAAO5yD,QAAQm3D,GAASA,EAAKl1F,WAAaq1F,EAAAA,OACrDh3F,KAAKI,GAAWA,EAAOI,SAAU,IAAKskD,MAAK,CAACC,EAAGC,IAAMD,EAAIC,KAC5D,CAACstC,IAEE6E,IAAqB34F,EAAAA,EAAAA,KAAQ,KAC1BsnC,EAAAA,GAAAA,IAAQroC,IAAoB4C,SAASL,KAAKI,GAAWA,EAAOI,SAAU,IAAKskD,MAAK,CAACC,EAAGC,IAAMD,EAAIC,KACpG,CAACvnD,MAEJY,EAAAA,EAAAA,KAAU,KACJ4F,GAAUquF,GAAO3yF,SAAW+2F,IAC9BtB,GAAuB9C,IAAQ,GAAGlN,OACpC,GACC,CAACnhF,EAAQquF,EAAOoE,MAEnBr4F,EAAAA,EAAAA,KAAU,KACJ4F,GAAUkvF,GAAkBxzF,SAAWg3F,IACzC3B,GAAsB7B,IAAmB,GAC3C,GACC,CAAClvF,EAAQkvF,EAAkBwD,MAE9Bt4F,EAAAA,EAAAA,KAAU,KACJ4F,GAAUyyF,KACZ7B,EAA2B3B,EAAgBkE,UAC3CnB,GAA4B/C,GAC9B,GACC,CAACjvF,EAAQyyF,GAAwBxD,KAEpC70F,EAAAA,EAAAA,KAAU,KACJ4F,GAAU0yF,KACZ9B,EAA2B3B,EAAgBkE,UAC3CrB,GAAuB7C,GACvBkC,GAAuBlC,EAAgB9N,QACzC,GACC,CAACnhF,EAAQ0yF,GAA0BzD,KAEtC70F,EAAAA,EAAAA,KAAU,KACJk0F,GACF+C,GAAmB/C,EACrB,GACC,CAACA,KAEJl0F,EAAAA,EAAAA,KAAU,KACJm0F,GACF+C,GAAsB/C,EACxB,GACC,CAACA,IAEJ,MAAM6E,IAAqBnnF,EAAAA,EAAAA,IAAgB,KACzC0zB,GAAkB,IAGd3G,IAAc/sB,EAAAA,EAAAA,IAAgB,KAClC+lF,QAA4Bx3F,GAC5Bs3F,QAAuBt3F,GACvBu2F,QAAsBv2F,GACtB22F,QAAuB32F,GACvBo2F,EAzLwB,GA0LxBpB,GAAoB,IAGhBjtE,IAActW,EAAAA,EAAAA,IAAgB,KAG9B22D,EAFAqvB,GACEb,IAAiB11F,OACP,CACV2B,KAAM,WACNg2F,eAAgBnnF,EAChB03B,QAASwtD,GACT1zF,SAAUi1F,GAAcj1F,SACxBD,OAAQk1F,GAAcl1F,OACtB7C,OAAQ+3F,IAGE,CACVt1F,KAAM,WACN6O,OAAQA,EACRonF,qBAAsB9E,GACtB+E,wBAAsD,QAA7BvC,GACzBwC,UAAW5I,GACX6I,kBAAmBlC,GACnBI,oBACA+B,UAAWjD,EAAmB,IAC9B/yF,SAAUi1F,GAAcj1F,SACxBD,OAAQk1F,GAAcl1F,OACtB7C,OAAQ+3F,IAIA,CACVt1F,KAAM,gBACN6O,OAAQA,EACRonF,qBAAsB9E,GACtB+E,wBAAsD,QAA7BvC,GACzBwC,UAAW5I,GACX6I,kBAAmBlC,GACnBI,oBACA+B,UAAWjD,EAAmB,IAC9B/yF,SAAUlE,GAAoBkE,SAC9BD,OAAQjE,GAAoBiE,OAC5B5C,MAAOrB,GAAoBqB,MAC3B0B,MAAOo0F,IAIX33D,IAAa,IAGT26D,IAA+B1nF,EAAAA,EAAAA,IAAgB,KAC/CwmF,GACF/C,EAA2B,CACzBxjF,OAAQA,EACR0nF,WAAY7B,GAA0B1yF,GACtCw0F,eAAgB,CACdP,qBAAsB9E,GACtBgF,UAAW5I,GACX+G,oBACA8B,kBAAmBlC,GACnBmC,UAAWjD,EAAmB,IAC9B51F,MAAOk3F,GAA0Bl3F,MACjC6C,SAAUm1F,GAAmBn1F,SAC7BD,OAAQo1F,GAAmBp1F,OAC3BlB,MAAOw1F,GAA0BoB,YAIrC1D,EAAsB,CACpBvjF,OAAQA,EACR0nF,WAAY/B,GAAqBxyF,GACjCw0F,eAAgB,CACdP,qBAAsB9E,GACtBgF,UAAW5I,GACX+G,oBACA8B,kBAAmBlC,GACnBmC,UAAWjD,EAAmB,IAC9B/yF,SAAUi1F,GAAcj1F,SACxBD,OAAQk1F,GAAcl1F,UAK5BuuF,IACAhzD,IAAa,IAGT86D,IAA8B7nF,EAAAA,EAAAA,IAAiB8nF,IACnDnD,EAA2BmD,EAAS,IAGhCC,IAA0B/nF,EAAAA,EAAAA,IAAiB8nF,IAC/CnD,EAA2BmD,EAAS,IAGhCE,IAA+BhoF,EAAAA,EAAAA,IAAiBM,IACpDqlF,GAAoBrlF,EAAEC,OAAOH,MAAM,IAG/B6gF,IAAY3yF,EAAAA,EAAAA,KAAQ,KACxB,MAAMyoC,GAAYuJ,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KACpC,OAAO8sD,IAAiBr1F,KAAK4/B,IAAWsL,EAAAA,EAAAA,IAAgBjE,EAAUrH,MAAUhX,KAAK,KAAK,GACrF,CAACysE,KAQE8C,IAA+BjoF,EAAAA,EAAAA,IAAiBI,IACpD4kF,GAA4B5kF,EAAM,IAG9B8nF,IAAyBloF,EAAAA,EAAAA,IAAiBI,IAC9CykF,GAAkBzkF,GAClBglF,GAAmB,IACnBT,EA9SwB,EA8SuB,IAG3CwD,IAAyBnoF,EAAAA,EAAAA,IAAiB8kB,IAC9C2/D,EAAoB3/D,EAAKyhC,WACzBq9B,GAAe,IAGXwE,IAA+BpoF,EAAAA,EAAAA,IAAiBI,IACpDw+E,GAAsBx+E,EAAM,IAGxBioF,IAA8BroF,EAAAA,EAAAA,IAAiBk/E,IACnDkG,GAAmBlG,GACdA,EAAezvF,QAClBo1F,GAAkB,mBACpB,IAGIxE,IAAiCrgF,EAAAA,EAAAA,IAAiBk/E,IACtDmG,GAAsBnG,EAAe,IAGjCoJ,IAAgCtoF,EAAAA,EAAAA,IAAiBM,IACrDilF,GAAqBjlF,EAAEC,OAAO45B,QAAQ,IAGlCouD,IAA+BvoF,EAAAA,EAAAA,IAAiBM,IACpDmlF,GAAoBnlF,EAAEC,OAAO45B,QAAQ,IAGjCquD,IAAuBxoF,EAAAA,EAAAA,IAAgB,KAC3C8jF,GAAwB,IAGpB2E,IAAkBzoF,EAAAA,EAAAA,IAAiBrR,IACvCm2F,GAAsBn2F,EAAO,IA8F/B,SAAS+5F,KACP,OACEh5F,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZhC,EAAK,2CAGR6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPo/B,UAAQ,EACR/mC,UAAU,yCAEVqC,EAAAA,GAAAC,cAAC4jD,GAAAA,EAAa,CACZtzC,OAAQA,EACRuyC,OAAQ3kD,EAAKw3B,EAAY,kCACrB,gCAAiC8gE,IAAiBC,GAAoB,QAI7E7D,IAAoBzyF,KAAKmzC,GAEtBvzC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP8c,QAAM,EACNphB,IAAKuyC,EACL51C,UAAU,wCAEVK,QAASA,IA3CvB,SAAmC0F,GACjC,MAAMu1F,EAAqBpG,GAAmB/yD,QAAQyT,GAAcA,IAAc7vC,IAClFiyF,GAAsBsD,EACxB,CAwC6BC,CAA0B3lD,GACzC4P,aAAenjD,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,QAAQ5E,UDjjBumC,cCmjBzoCqC,EAAAA,GAAAC,cAAC4jD,GAAAA,EAAa,CACZtzC,OAAQgjC,EAAUgzC,gBAMzBsM,GAAmB9yF,OArdE,GAsdpBC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,MACLid,QAAM,EACNpkB,QAAS02F,EACT/2F,UD/jBwlC,WCgkBxlC8H,cDhkBgnC,YCkkB/mCtH,EAAK,+BAKZ6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZhC,EAAK,0BApHZ6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,cACL3E,QAASg5F,GACTzlF,SAAUkkF,GACVnkF,SAAUqnF,GACVjH,cAAewH,GACfK,kBD5d6iC,WC6d7iC9H,QAAM,MAkHRrxF,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KACb6B,EAAAA,GAAAA,GAAW7D,EAAKw3B,EAAY,iCAAmC,oCAGlE31B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZhC,EAAK,qCAGR6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACPx6B,MAAO5S,EAAK,oCACZssC,QAASqrD,GACT5kF,SAAU2nF,MAIb/C,IACC91F,EAAAA,GAAAC,cAAA,OAAKtC,UDjmB8+B,YCkmBj/BqC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZ60F,GAEHh1F,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRzT,UDtmBwgC,WCumBxgC+S,MAAOslF,GACP9kF,SAAUonF,GACVvnF,MAAO5S,EAAK,sCAMnB23F,GACES,IAAoBO,QAcjBj4F,EAbFmB,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACb61F,IAAkBj2F,QAASiC,EAAAA,GAAAA,GAAW7D,EAAK,6CAC1C+3F,GACI,CAACA,GAAoBsB,SAAUxB,GAAkBa,IACjD,CAACL,GAAmBR,GAAkBa,SAC1Ch4F,EACA02F,IAAsB,CAAC,qBAAsBvzF,EAAAA,GAAAA,GAAW7D,EAAK,yCAC7D+3F,GACI,CAACA,GAAoBsB,SAAUX,IAC/B,CAACL,GAAmBK,SACxBh4F,EACA02F,IAAsB,CAAC,qBAI7Bv1F,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KACb6B,EAAAA,GAAAA,GAAW7D,EAAK,uCAIrB6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZhC,EAAK,gCAGR6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACPx6B,MAAO5S,EAAK,oCACZssC,QAASmrD,GACT1kF,SAAU0nF,OAKhB54F,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KACb6B,EAAAA,GAAAA,GAAW7D,EAAK,qCAGnB6B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,IAC5B+1F,IAAuBE,IAA4BG,KAAoBp2F,KAExEH,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZhC,EAAK,iCAGR6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL6T,UAAW3X,EAAK,sBAChBR,WAAWuC,EAAAA,GAAAA,GDhqB65B,WCgqB33B,gBAC7CiC,QAAM,EACNnE,QAASi2F,GAETj0F,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZhC,EAAK,wBAEPi7F,EAAAA,GAAAA,IAAuBtE,EAAkB32F,EAAK45D,QAKzD,CAEA,OACE/3D,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,UDhrBiB,WCirBjBkH,QAASw4B,GACTh5B,OAAQA,EACR+1E,UAAWA,EACXppE,QAAUklF,IAAuBE,GAA4BhG,EAAmBxpE,IAEhF5mB,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GDtrBuC,WCsrBX,iBAAkBsmD,SA/SlE,SAAsB51C,GACpB,MAAM,UAAEgsB,GAAchsB,EAAEmW,cAExBwjE,EAAgB3tD,GAAa,IAC/B,GA4SM58B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACLhE,UD1rB2Q,WC2rB3Q0T,MAAM,cACNrT,QAASq/B,GACTvnB,UAAW3X,EAAK,UAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UDjsBkE,WCisB1CqK,IAAKwjF,GAAa1gE,IAAI,GAAGjjB,WAAW,IACjE7H,EAAAA,GAAAC,cAAA,MAAItC,UDlsBoH,aCmsBrHqE,EAAAA,GAAAA,GAAW7D,EAAK,4BAEnB6B,EAAAA,GAAAC,cAAA,OAAKtC,UDrsB4I,aCssB9IqE,EAAAA,GAAAA,GAAW7D,EAAKw3B,EAAY,uBAAyB,gCAExD31B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GDxsBqJ,WCwsBvHoqF,GDxsB4K,aCysBxNtqF,EAAAA,GAAAC,cAAA,MAAItC,UDzsBuU,YC0sBxUQ,EAAK,4BAGR+3F,IAAuBE,GACvBp2F,EAAAA,GAAAC,cAAA,OAAKtC,UD9sB8lB,YC+sBjmBqC,EAAAA,GAAAC,cAAA,WACGm2F,GACCp2F,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAmB6H,IAAK6sF,GAAU/pE,IAAI,KAEtD9qB,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAmB6H,IAAKqqF,GAAkB6D,GAAqB1Q,QAAS16D,IAAI,MAGhG9qB,EAAAA,GAAAC,cAAA,OAAKtC,UDttB8mB,YCutBjnBqC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZi2F,GAA2Bj4F,EAAK,+BAAgCi4F,IAA0Bl3F,OACvFf,EAAK,qCAAsC+3F,GAAqBsB,WAEtEx3F,EAAAA,GAAAC,cAAA,KAAGtC,UD3tBwpB,YC4tBxpBy4F,GAA2Bj4F,EAAK,8BAA+Bi4F,IAA0BoB,UACtFr5F,EAAK,wBAAyB+3F,IAAqB1Q,UAG3DxlF,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAsBA,KACnDH,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,QAAQ5E,UAAWwC,KAC9BH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAA2BiB,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAClEu3F,GAA2BA,IAA0BiD,OAClDnD,GAAqBsB,UAAY1E,GAAgCY,EAAAA,SAM7E1zF,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GD3uBoZ,aC6bvbH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACby0F,EAAax0F,KAAKnB,GAEfe,EAAAA,GAAAC,cAACmxF,GAAkB,CACjBpwF,IAAK/B,EAAOsD,KACZA,KAAMtD,EAAOsD,KACb0V,KAAMhZ,EAAOgZ,KACbhZ,OAAQA,EAAOyR,MACf/I,IAAK1I,EAAO0I,IACZuJ,SAAUsnF,GACV/tD,QAASyqD,KAA2Bj2F,EAAOyR,MAC3C2gF,OAAQpyF,EAAOoyF,OACfE,UAAWA,GACXC,kBAAmBiE,GACnBnE,cAAeryF,EAAOqyF,oBAqS3BgF,KAAsBb,IAAiB11F,QACtCC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,MACIguD,KAAwBE,IACxBp2F,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZhC,EAAK,2BAER6B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAsBA,KACnDH,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,QAAQ5E,UAAWwC,KAC9BH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAA2BiB,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAClE43F,MAKPz2F,EAAAA,GAAAC,cAACq5F,GAAAA,EAAoB,CACnBC,WAAY/C,GACZgD,MAAOlC,GACPpmF,SAAUinF,MAIdn4F,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KACb6B,EAAAA,GAAAA,GAAW7D,EAAK,4BAKtB66F,MAIJzC,IACCv2F,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,MACIkuD,KAA6BF,IAC7Bl2F,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZhC,EAAK,yBAER6B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAsBA,KACnDH,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,QAAQ5E,UAAWwC,KAC9BH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAA2BiB,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAClE63F,MAlRnB12F,EAAAA,GAAAC,cAACxC,GAAAA,EAAmB,CAClBE,UD7gB0qC,WC8gB1qCC,QAAS21F,EACTz1F,kBAAmBk3F,EACnBn3F,mBAAoBA,GACpBG,QAAS+6F,MAqRD/4F,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GDtyB0gB,cCuyBtiB6B,EAAAA,GAAAA,GAAW7D,EAAK,0BAGnB6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZhC,EAAK,gCAGR6B,EAAAA,GAAAC,cAACq5F,GAAAA,EAAoB,CACnBC,WAAYvE,EACZwE,MAAOjC,GACPrmF,SAAUmnF,KAGZr4F,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KACb6B,EAAAA,GAAAA,GAAW7D,EAAK,uCAMxB66F,OAIH9C,KAAwBE,IAA4BE,IACpDt2F,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZhC,EAAK,8BA/VhB6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACbg3F,IAAe/2F,KAAK62F,GACnBj3F,EAAAA,GAAAC,cAAC+mF,GAAyB,CACxBE,YAAU,EACVlmF,IAAKi2F,EAAKzR,OACVvmF,OAAQg4F,EACRhQ,kBAAmBA,GACnBx8C,QAASwsD,EAAKzR,SAAW+P,GACzBrkF,SAAUskF,SA6VVx1F,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAqBA,KAtV9D,WACE,MACMu1B,EADOv3B,EAAK,mCACCs7F,MAAM,0BAEzB,GAAK/jE,KAASA,EAAM31B,OAAS,GAI7B,OACEC,EAAAA,GAAAC,cAAA,KAAGtC,UD7fm5B,YC8fn5B+3B,EAAM,GACP11B,EAAAA,GAAAC,cAACy5F,GAAAA,EAAI,CAACC,WAAS,EAAC37F,QAASy5F,IAAqB/hE,EAAM,IACnDA,EAAM,GAGb,CAwUakkE,KAKN1E,IACCl1F,EAAAA,GAAAC,cAAA,OAAKtC,UDj1Bkc,YCk1BrcqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UDn1B6B,WCo1B7BK,QAAUk4F,IAAuBE,GAA4BhG,EAAmBxpE,IAE/EzoB,EAAK,4BAKd6B,EAAAA,GAAAC,cAAC+0D,GAAa,CACZ3wD,OAAQ2vF,EACR5+B,cAAY,EACZE,gBAAc,EACdzwD,QAASqvF,EACTz+B,SAAUgjC,GACVxjC,WAAY6/B,EACZv/B,kBAAmBp3D,EAAK,UAE1B6B,EAAAA,GAAAC,cAAC8uF,GAAkB,CACjB1qF,OAAQ8vF,EACRtvF,QAASwvF,EACTh7B,YAAaA,EACb5D,SAAUijC,GACV1J,eAAgBmE,IAElBnzF,EAAAA,GAAAC,cAAC2xF,GAAuB,CACtBvtF,OAAQiwF,EACRzvF,QAAS2vF,EACTxE,uBAAwB2I,GACxB5I,mBAAoB0F,GACpBzG,eAAgBiE,EAChBnD,eAAgBv/E,IAElBvQ,EAAAA,GAAAC,cAAC4vF,GAA0B,CACzBxrF,OAAQowF,EACR5vF,QAAS8vF,EACT5E,mBAAoB8C,GACpB7C,uBAAwBW,GACxB3B,eAAgB6K,EAAAA,IAChB/J,eAAgBv/E,IAElBvQ,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZlgC,MAAOjH,EAAK,qCACZ8Z,KAAM9Z,EAAK,oCACXonC,aAAcpnC,EAAK,SACnBkG,OAAQ8rF,EACRtrF,QAASwrF,EACT7qD,eAAgBwyD,KAEZ,KC52BN8B,GAA2D,CAC/DjW,mBAAoB,4BACpBkW,mBAAoB,uBACpBnW,cAAe,sBACfN,mBAAoB,yBACpBC,eAAgB,0BAChBF,SAAU,0BACV2W,gBAAiB,0BACjBC,eAAgB,4BAChBC,mBAAoB,+BAGhBC,GAAmE,CACvEtW,mBAAoB,kCACpBkW,mBAAoB,6BACpBnW,cAAe,4BACfN,mBAAoB,+BACpBC,eAAgB,gCAChBF,SAAU,gCACV2W,gBAAiB,gCACjBC,eAAgB,kCAChBC,mBAAoB,qCAGhBE,GAAmE,CACvEvW,mBAAoB,mCACpBkW,mBAAoB,8BACpBnW,cAAe,6BACfN,mBAAoB,gCACpBC,eAAgB,iCAChBF,SAAU,iCACV2W,gBAAiB,iCACjBC,eAAgB,mCAChBC,mBAAoB,sCAGhBG,GAAsD,CAC1DxW,mBAAoB,aACpBkW,mBAAoB,aACpBnW,cAAe,eACfN,mBAAoB,YACpBC,eAAgB,aAChBF,SAAU,cACV2W,gBAAiB,aACjBC,eAAgB,eAChBC,mBAAoB,aAGhBI,GAA4F,CAChGP,mBAAoBA,CAAC57F,EAAiBuS,IAEtB,MAAVA,EAAuBvS,EAAK,cAAe,KACjC,MAAVuS,EAAuBvS,EAAK,cAAe,MACxCqkB,EAAAA,GAAAA,IAAerkB,EAAMuS,EAAQ6pF,EAAAA,MA6IxC,IAAe/8F,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU8f,YACT,MAAM,OAAEoyD,GAAWlyE,EAAO8/B,WAAa,CAAC,EAClCmyC,GAAYxgD,EAAAA,EAAAA,KAA2BzxB,GAE7C,MAAO,CACLsoF,aAAcxoE,EAAQoyD,IAASpyD,GAAO,QAAKnzB,EAC3C47F,aAAczoE,EAAQoyD,IAASpyD,GAAO,QAAKnzB,EAC3C67F,gBAAgBC,EAAAA,EAAAA,KAA+BzoF,GAC/CiyE,YACD,GAVelyE,EA5FwC2oF,EAC1DJ,eACAC,eACAzoE,QACAmyD,YACAuW,oBAEA,MAAM,uBAAEG,EAAsB,iBAAE72D,IAAqBj0B,EAAAA,EAAAA,MAC/C5R,GAAOD,EAAAA,EAAAA,MAEN48F,EAAWC,EAAcC,IAAex8F,EAAAA,EAAAA,KAEzCooB,GAAcnjB,EAAAA,EAAAA,KAAY,KAC9BugC,IACA+2D,GAAc,GACb,CAAC/2D,EAAkB+2D,KAEtBt8F,EAAAA,EAAAA,KAAU,MACHuzB,GAAS8oE,GAAWE,GAAa,GACrC,CAACF,EAAW9oE,EAAOgpE,IAEtB,MAAM51F,EAAQjH,EAAK,gBACb88F,EAAiBjpE,GAASsoE,GAAsBtoE,GAChD7hB,EApER,UAA+B,KAC7BhS,EAAI,UACJ+8F,EAAS,UACT/W,EAAS,cACTuW,EAAa,aACbF,EAAY,aACZC,EAAY,eACZQ,IAUA,IAAKC,EACH,OAGF,MAAMC,EAAwBF,EAAiBA,EAAe98F,EAAMq8F,GAAgBA,EAC9EY,EAAwBH,EAAiBA,EAAe98F,EAAMs8F,GAAgBA,EAEpF,OAAItW,EACKhmF,EAAKi8F,GAA0Bc,GAAYE,GAG7CV,EACHv8F,EAAK27F,GAAkBoB,GACT,mBAAdA,EAAiCE,EAAwB,CAACD,EAAuBC,IACjFj9F,EAAKg8F,GAA0Be,GAAYC,EACjD,CAoCsBE,CAAsB,CACxCl9F,OACA+8F,UAAWlpE,EACXmyD,YACAuW,gBACAF,eACAC,eACAQ,mBAEI91F,EAAO6sB,GAASqoE,GAAWroE,GAC3BspE,EAAaZ,IAAkBvW,EAErC,OACEnkF,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJH,QAASk2F,EACTlrF,oBAAqBgrF,EACrBx2F,OAAQ2K,QAAQgjB,KAAW8oE,EAC3B11F,MAAOA,EACPzH,UCtKiB,aDwKf29F,GACAt7F,EAAAA,GAAAC,cAAA,OAAKtC,UCzKgH,YD0KnHqC,EAAAA,GAAAC,cAAA,KAAGtC,WAAWuC,EAAAA,GAAAA,GC1KqM,WD0KpKiF,EAAM,UACrDnF,EAAAA,GAAAC,cAAA,OAAKtC,UC3K+J,YD2KhIs9F,IAClC98F,EAAMgmF,EAAYsW,EAAeD,KAC7BrW,EAAYsW,EAAeD,KAKpCc,GACCt7F,EAAAA,GAAAC,cAAC89E,GAAoB,CACnBpgF,UCpLkE,WDqLlEqgF,UAAWid,IAAiB98F,EAAMq8F,IAAiBA,GAAcjU,WACjEtI,WAAYgd,IAAiB98F,EAAMs8F,IAAiBA,GAAclU,WAClErI,kBAAmB/4E,IAIvBnF,EAAAA,GAAAC,cAAA,YACG+B,EAAAA,GAAAA,GAAWmO,GAAe,GAAI,CAAC,kBAAmB,QAGrDnQ,EAAAA,GAAAC,cAAA,OAAKtC,UC/LyQ,YDgM5QqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACVwE,QAAM,EACNnE,QAAS+8F,EACT1pF,MAAM,WAELlT,EAAKm9F,EAAa,SAAW,OAE/BA,GAEDt7F,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACVwE,QAAM,EACNnE,QAAS4oB,EACTvV,MAAM,WAELlT,EAAK,iBACN6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,eAAe5E,UCjNgQ,eDqNxR,K,uCE3MZ,MAEM49F,GAA4B,IAAMnhE,EAAAA,IAGlCohE,GAAe,GAAM1iF,EAAAA,EAEpB,SAAS2iF,GACd7vE,EACA6N,EACAiiE,EACAljF,GAEA,MAAMmjF,GAA6BpuF,EAAAA,EAAAA,IAAkB,KAE9CquF,EAAgBC,IAAqB3rF,EAAAA,EAAAA,IAAiB,IAG3D4rF,QAASC,EACTC,OAAQC,EACRC,SAAUC,IACRC,EAAAA,GAAAA,IAAwB,CAC1BC,QAASzwE,IACP60B,IACF,MAAM67C,EAA0BX,EAA2BjuF,QAE3D+yC,EAAQlhD,SAASg9F,IACf,MAAM/8F,EAAQmoB,OAAO40E,EAAM1rF,OAAOnN,GAAGy0D,QAAS,GAAEujC,KAAa,KAC7DY,EAAwB98F,GAAS+8F,EAAMC,cAAc,IAGvD,MAAMC,EAAuBH,EAAwBv9F,QAAO,CAAC29F,EAAaF,EAAgBh9F,IACjFg9F,GAAkBh9F,EAAQk9F,EAAcl9F,EAAQk9F,GACtDC,KAECF,IAAyBE,KAI7Bd,EAAkBY,EAAqB,KAIvCX,QAASc,EACTZ,OAAQa,EACRX,SAAUY,IACRV,EAAAA,GAAAA,IAAwB,CAC1BC,QAASzwE,EACTmxE,WAhDkC,IAiDlCC,OAhDgC,OAoDhClB,QAASmB,IACPb,EAAAA,GAAAA,IAAwB,CAC1BC,QAASzwE,EACTmxE,WAxDkC,IAyDlCC,OAxDgC,OA4DhClB,QAASoB,IACPd,EAAAA,GAAAA,IAAwB,CAC1BC,QAAS5iE,IAgCX,OA7BAhsB,EAAAA,EAAAA,IAAc,KACR+K,GACFyjF,IACAY,KAEA/tF,YAAW,KACTguF,IACAX,GAAgB,GACfZ,GACL,GACC,CAACU,EAAcY,EAAuBrkF,EAAU2jF,EAAgBW,IAmB5D,CACLlB,iBACAG,4BACAa,qCACAK,qCACAC,+BACAhU,kBAvBuB54E,EAAAA,EAAAA,IAAiB9Q,IACxCq8F,GAAmBrmE,IACjB,MAAM2nE,EAAe/2F,SAASi2B,eAAgB,GAAEq/D,KAAYl8F,KACtD49F,EAA6C,IAAnCx9F,KAAKswB,IAAIsF,EAAeh2B,GAUxC,OARA69F,EAAAA,GAAAA,IAAc,CACZ1zF,UAAWiiB,EAAale,QACxBymB,QAASgpE,EACTl7E,SAAU,QACV+6E,OAAQxB,GACR8B,YAAaF,EArFkB,IACF,KAuFxB59F,CAAK,GACZ,IAWN,C,oDCjHA,MCoIA,IAAehC,EAAAA,EAAAA,KAhGuB+/F,EACpCC,aACA77F,OAAO87F,EAAAA,IACPx6E,SACAsH,gBACAmzE,sBACAC,sBAEA,MAAM,aAAEvT,IAAiBr6E,EAAAA,EAAAA,MAEnB6b,GAAere,EAAAA,EAAAA,IAAuB,OAEtC,aACJqwF,EAAY,cAAEC,EAAa,iBAAEC,EAAgB,eAAEC,EAAc,mBAAElS,GAC7D2R,GAEE,YAAEQ,IAAgBC,EAAAA,GAAAA,GAAepS,GACjCqS,EAAiBF,GAAaG,mBAC9BC,GAAcC,EAAAA,GAAAA,GAAwBzyE,OAAc/sB,GAAYq/F,GAChEI,GAAcC,EAAAA,GAAAA,GAAeH,GAE7B5B,GAAiBgC,EAAAA,GAAAA,IAAkB5yE,EAAc8xE,GACjDe,EAAajC,IAAmBv5E,EAEhCy7E,GAA2Bd,GAC3BC,IAAkBc,EAAAA,KAAsBb,IAAqBC,EAC7Da,EAAmBF,GAA2BlB,EAAW/d,WAAW,KACrEof,EAAAA,EAAAA,IAAoBrB,EAAW/d,SAAS,GAAI,WAC3Cqf,GAAwBvyF,EAAAA,EAAAA,GAASqyF,GAAmBpC,GAEpDuC,GAAcnB,IAAiBgB,GAAqBd,IAAsB,aAAYN,EAAW95F,KACjGkJ,GAAYL,EAAAA,EAAAA,GAASwyF,GAAYvC,GACjCrgF,EAAU0vE,GAAsBj/E,GAAakyF,EAC7Cz4E,GAAuB2xB,EAAAA,GAAAA,GAA6B77B,GAEpD6iF,GAASC,EAAAA,GAAAA,GAAwBrzE,EAAc+xE,GAUrD,OARAl/F,EAAAA,EAAAA,KAAU,KACJ+9F,IAAmBgB,EAAW/d,UAAU1/E,QAC1CqqF,EAAa,CACXjB,eAAgBqU,GAEpB,GACC,CAAChB,EAAgBpS,EAAcoT,IAGhCx9F,EAAAA,GAAAC,cAAA,OACEmX,IAAKwU,EACLjuB,WAAWuC,EAAAA,GAAAA,GDpFM,WCoFsB,qBACvC+J,MAAQ,YAAWtI,OAElBwa,EACC0vE,EACE7rF,EAAAA,GAAAC,cAACsrF,GAAAA,EAAW,CACVvC,WAAY6C,EACZlqF,KAAMA,EACNu9F,8BAA+BxB,EAC/Bz6E,OAAQA,IAER66E,EACF99F,EAAAA,GAAAC,cAAC0D,GAAAA,EAAe,CACdhG,UAAW0oB,EACXxiB,OAAQ+I,EACRjL,KAAMA,EACN49E,KAAMkf,EACNjf,gBAAgB2f,EAAAA,EAAAA,MAAgCvuD,EAAAA,EAAAA,MAAa4sD,GAC7D4B,aAAczB,GAAiBjwF,cAAW7O,EAC1CwgG,mBAAoBL,EACpBM,YAAa/0E,IAEZszE,IAAkBa,EACrB1+F,EAAAA,GAAAC,cAACw8C,GAAAA,EAAc,CACb9+C,WAAWuC,EAAAA,GAAAA,GD5GmB,WC4GUmmB,GACxCre,IAAK4E,EACL8vC,QAAS+hD,EACTx0F,MAAOq0F,EACP3hD,WAAYpyB,EACZ7B,MAAI,EACJ7D,yBAAuB,IAGzB7kB,EAAAA,GAAAC,cAAA,OACE+H,IAAK4E,GAAakyF,EAClB70F,MAAOq0F,EACP3gG,WAAWuC,EAAAA,GAAAA,GDxHsC,WCwHTmmB,GACxCyE,IAAI,GACJjjB,WAAW,KAIf03F,EAAAA,GAAAA,IAAgB/B,EAAWp4F,MAAO,GAEhC,I,wCCrEV,MAAMo6F,GAA8B,CAClC,CAAEp6F,MAAO,sBAAuBsL,MAAO,EAAG+uF,IAAK,MAC/C,CAAEr6F,MAAO,sBAAuBsL,MAAO,EAAG+uF,IAAK,MAC/C,CAAEr6F,MAAO,sBAAuBsL,MAAO,EAAG+uF,IAAK,OAC/C,CAAEr6F,MAAO,qBAAsBsL,MAAO,EAAG+uF,IAAK,OAC9C,CAAEr6F,MAAO,qBAAsBsL,MAAO,EAAG+uF,IAAK,SAoShD,IAAejiG,EAAAA,EAAAA,KAjSOkiG,EACpB/gB,UACAh9E,OACAshB,SACA7d,QACAzH,YACAgiG,gBACArzC,kBACAszC,iBACAC,aACAnC,sBACAoC,gCACAC,aACA99D,uBACA+9D,sBACAC,gBACAtC,kBACAuC,uBACA31E,gBACAvsB,UACAmiG,WACAC,cACAC,gBACAC,sBACAC,oBACAC,qBACAC,qBACAC,gBACAC,mBAEA,MAAM,eAAEtW,EAAc,iBAAErmD,EAAgB,eAAE48D,IAAmB7wF,EAAAA,EAAAA,MAEvDqH,GAAM7J,EAAAA,EAAAA,IAAuB,MAE7B4kE,GAAU5kE,EAAAA,EAAAA,IAAuB,MACjCpP,GAAOD,EAAAA,EAAAA,KACPggG,EAAiBvf,EAAQwf,mBACzBC,GAAcC,EAAAA,GAAAA,GAAwBjnF,OAAKvY,GAAYq/F,IAEvD,GACJx6F,EAAE,eAAEylF,GACFxK,EAEEwF,GAAcxF,EAAQkiB,QAAUH,GAAkB/hB,EAAQmiB,UAC1DC,EAAgBpiB,EAAQoiB,eAAiBL,EACzCnS,GAAYtsD,GAAwBkiD,IAAc6b,EAElDxD,GAAiBgC,EAAAA,GAAAA,IAAkBpnF,EAAKsmF,GACxCsD,EAAaxE,EACbiC,EAAajC,IAAmBv5E,EAEhCg+E,GAA0BzC,EAAAA,GAAAA,IAAkBpnF,EAAK0oF,IAEjD,kBACJvtB,EAAiB,kBAAEC,EAAiB,wBACpC0uB,GAAuB,kBAAEzuB,GAAiB,uBAC1CC,GAAsB,sBAAEC,KACtBC,EAAAA,GAAAA,GAAuBx7D,GACrB+pF,GAA0BnyF,SAAS2wF,GAAiBntB,GAEpDJ,IAAoB9hE,EAAAA,EAAAA,IAAgB,IAAM8G,EAAI1J,UAC9C2kE,IAAiB/hE,EAAAA,EAAAA,IAAgB,IAAM8G,EAAI1J,QAAS0hB,QAAQ,mCAC5DkjD,IAAiBhiE,EAAAA,EAAAA,IAAgB,IAC9BsvF,EAAiBztB,EAAQzkE,QAAU0J,EAAI1J,QAASlF,cAAc,mCAEjE44F,IAAY9wF,EAAAA,EAAAA,IAAgB,KAAM,CAAG+wF,WAAYzB,EAAgB0B,6BAA6B,OAEpG7iG,EAAAA,EAAAA,KAAU,KACJ8zE,EACFguB,MAEAC,KACF,GACC,CAACjuB,EAAmBiuB,EAAoBD,KAE3C9hG,EAAAA,EAAAA,KAAU,KACH+9F,GAAgB9pB,IAAwB,GAC5C,CAACA,GAAwB8pB,IAE5B,MAkBM+E,IAAoBjxF,EAAAA,EAAAA,IAAiBM,IACzCA,EAAEwI,kBACFxI,EAAEkX,iBAEFw4E,EAAqB3hB,EAAQ,IAGzB6iB,IAA4BlxF,EAAAA,EAAAA,IAAgB,KAChDgwF,EAAqB3hB,EAAQ,IAGzB8iB,IAAsBnxF,EAAAA,EAAAA,IAAgB,KAC1C+vF,EAAe1hB,EAAQ,IAGnB+iB,IAAoBpxF,EAAAA,EAAAA,IAAgB,KACxC8vF,EAAazhB,EAAQ,IAGjBgjB,IAAkBrxF,EAAAA,EAAAA,IAAgB,KACtCtS,IAAUmiG,GAAU,EAAK,IAGrByB,IAAsBtxF,EAAAA,EAAAA,IAAgB,KAC1CtS,IAAUmiG,OAAUthG,GAAW,EAAK,IAGhCgjG,IAAgBvxF,EAAAA,EAAAA,IAAgB,KACpC+5E,EAAe,CAAElB,kBAAiB,IAG9B2Y,IAAgCxxF,EAAAA,EAAAA,IAAgB,CAACM,EAAyBqL,EAAW,KACzFrL,EAAEkX,iBACFlX,EAAEwI,kBAEFs5D,KACA+tB,MACAG,EAAe,CACb9X,YAAa,CAAEpnF,KAAM,UAAWsnF,WAAYrK,EAAQj7E,GAAIq+F,OAAO39D,EAAAA,GAAAA,MAAkBnoB,IACjF,IAGE+lF,IAAyBtpF,EAAAA,IAAgB4nF,EAEzC/wD,IAAgBrvC,EAAAA,GAAAA,GACpB,gBACAlC,GAAW,cACX+hG,GAAc,WACdgB,GAAiB,eACjBL,GAAiB,eACjB/iG,GAGIskG,IAAmBrjG,EAAAA,EAAAA,KAAQ,KAC/B,IAAKuiG,IAA2BxB,GAAkBoB,IAAkBnB,EAAiB,MAAO,GAE5F,MAAMj5C,EAAqB,GAE3B,OAAIo6C,GACFvB,GAA4BjgG,SAAS4S,IACnCw0C,EAAMjnD,KACJM,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC7Y,QAAS8jG,GAA+B3B,SAAUhuF,EAAKstF,KAC9DthG,EAAKgU,EAAK/M,MAAO+M,EAAKzB,MAAO,MAEjC,IAGIi2C,IAGL05C,GACF15C,EAAMjnD,KACJM,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,WAAWnH,QAASyjG,IAChCtjG,EAAK,kCAKRiiG,GACFz5C,EAAMjnD,KACJM,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,WAAWnH,QAAS0jG,IAChCvjG,EAAK,8BAKPowF,GAAYvwF,IACVsuD,GACH3F,EAAMjnD,KAAKM,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC7Y,QAAS2jG,GAAiBx8F,KAAK,SAAShH,EAAK,sBAEpEwoD,EAAMjnD,KACJM,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC7Y,QAAS4jG,GAAqBz8F,KAAK,YAC1ChH,EAAKmuD,EAAkB,cAAgB,sBAK1CuzC,GACFl5C,EAAMjnD,KACJM,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC7Y,QAAS6jG,GAAe18F,KAAK,YACpChH,EAAK,qBAIRmiG,GACF35C,EAAMjnD,KACJM,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,SAASnH,QAASwjG,IAC9BrjG,EAAK,sBAILwoD,EAAK,GACX,CACDw6C,GAAyBxB,EAAeoB,EAAenB,EAAgBS,EAAeD,EAAa7R,EACnGvwF,EAAS6hG,EAAYS,EAAqBwB,GAA+B3jG,EAAMsjG,GAC/EC,GAAmBp1C,EAAiBs1C,GAAqBD,GAAiBE,GAAeL,KAG3F,OACExhG,EAAAA,GAAAC,cAAA,OACEmX,IAAKA,EACLzZ,UAAW4xC,GACXnqC,MAAOA,GAAUu5E,GAASiN,MAC1B,kBAAiBloF,EACjBupC,YAjIqBr8B,KACvBsxF,EAAAA,GAAAA,GAAoCtxF,GACpCswF,GAAwBtwF,EAAE,EAgIxB5S,QA/IgB4oB,KACd2rD,IACAgc,EAEAvqD,EADE08D,EACe,CAAEl8D,eAAgB,WAElB,CAAEA,eAAgB,qBAIvCxmC,IAAUmiG,GAAS,EAsIjB/3E,cAAeqqD,IAEdkuB,GAAgB3gG,EAAAA,GAAAC,cAACkiG,GAAAA,EAAQ,CAACC,OAAO,WACjCnB,GACCjhG,EAAAA,GAAAC,cAACoiG,GAAAA,EAAW,CACVz2E,aAAcxU,EACdunE,QAASA,EACT2jB,SAAO,EACP3gG,KAAMA,EACN4gG,YAAU,EACVC,sBAAoB,EACpBC,QAASzB,EACT/9E,QAASw7E,EACTiE,iBAAe,EACfC,qBAAmB,EACnBhF,gBAAiBA,EACjBuC,qBAAsBA,EACtB9B,YAAaA,EACbkB,YAAa/0E,KAGf01E,GAAiB1R,GACjBvuF,EAAAA,GAAAC,cAAA,OACEtC,UAAU,kBAEVqC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,iBAGb09F,GAAiB9b,IAAcoK,GAC/BvuF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBACbqC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UAGdy/F,IACChiG,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACV0T,MAAM,OACNwE,OAAK,EACL+sF,aAAW,EACX5kG,QAASujG,IAETvhG,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGdyM,QAAQizF,GAAiBliG,SACxBC,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI,CACHrL,IAAK+6D,EACL9tE,OAAQkuE,EACR+G,OAAQ9G,EACRJ,kBAAmBA,GACnBC,eAAgBA,GAChBC,eAAgBA,GAChB8uB,UAAWA,GACXzjG,UAAU,uBACVglB,WAAS,EACT0+E,WAAYzB,EACZ/6F,QAAS6tE,GACT7iE,oBAAqB8iE,IAEpBsvB,IAGD,I,wCChWV,MCoIA,IAAezkG,EAAAA,EAAAA,KA/FqBqlG,EAClC5xD,WACA2Q,qBACAm+C,aACA+C,cACApF,sBACAC,kBACAoF,oBACAx4E,gBACAvsB,UACAoqB,oBAGA,MAAMhR,GAAM7J,EAAAA,EAAAA,IAAuB,MAC7By1F,EAA6B,WAAlB/xD,EAASvvC,KACpBuhG,GAAoBrkG,EAAAA,EAAAA,KAAQ,IAChCgjD,GAAoBlhD,MAAMooE,IAAcz4B,EAAAA,EAAAA,IAAey4B,EAAU73B,SAAUA,MAC1E,CAAC2Q,EAAoB3Q,IAClB7jC,EAAe61F,GAAmBC,YAAYzgE,WAAWp1B,QACzD81F,EAAcF,GAAmBG,iBAAiB1/F,GAClDs7F,GAASC,EAAAA,GAAAA,GAAwB7nF,EAAKumF,GACtC/wF,GAAYL,EAAAA,EAAAA,GAChB02F,GAAmBG,iBAAkBC,EAAAA,EAAAA,IAAqBJ,EAAkBG,gBAAiB,aAAUvkG,GACtGskG,IAGG,kBACJ5wB,EAAiB,wBACjB2uB,EAAuB,kBACvBzuB,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,GAAAA,GAAuBx7D,EAAuB,SAAlB65B,EAASvvC,UAAiB7C,OAAWA,OAAWA,GAAW,IAE3FJ,EAAAA,EAAAA,KAAU,KACJ8zE,IACFnqD,IAAgB6oB,GAEhByhC,IACAC,IACF,GACC,CAACD,EAAwBtqD,EAAeuqD,EAAuBJ,EAAmBthC,IAErF,MAAMptC,EAA2B,SAAlBotC,EAASvvC,KAAkBoC,GAAAA,EAAew/F,aAAe12F,EAClEga,GAActW,EAAAA,EAAAA,IAAgB,KAClCtS,EAAQizC,EAAS,IAGb5qB,GAAuB2xB,EAAAA,GAAAA,GAA6BprC,GACpD2iC,GAAgBrvC,EAAAA,GAAAA,GDtFD,WCwFnB6/F,GDxFyC,YCyFxCiD,GAAY,oBAGf,OACEhjG,EAAAA,GAAAC,cAAA,OACEmX,IAAKA,EACLzZ,UAAW4xC,EACXvxC,QAAS4oB,EACTxhB,MAAO69F,GAAmB79F,MAC1B,kBAAiB49F,EAAW/xD,EAAS+3C,gBAAanqF,EAClDouC,YAAai0D,EACb94E,cAAeqqD,GAEduwB,EACChjG,EAAAA,GAAAC,cAACsrF,GAAAA,EAAW,CACVn0E,IAAKA,EACL4xE,WAAY/3C,EAAS+3C,WACrBrnF,KAAM4hG,EAAAA,IACNtgF,QAAS6/E,EACT5D,8BAA+BxB,EAC/BC,gBAAiBA,EACjBoF,kBAAmBA,EACnB7C,sBAAoB,EACpBZ,YAAa/0E,IAGfvqB,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQA,EACRuJ,aAAcA,EACdmyE,KAAMujB,EACN7+F,QAAQ,EACRtC,KAAM4hG,EAAAA,IACN/jB,eAAa,EACb7hF,UAAW0oB,EACX+4E,aAAczB,EAAiBjwF,cAAW7O,EAC1CwgG,mBAAoBL,EACpBM,YAAa/0E,IAGb,I,gBC7CV,MA2WA,IAAe/sB,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAMuxF,EAAsBvxF,EAAOwxF,0BAA0BC,SAE7D,MAAO,CAAEF,sBAAqB,GAJdxxF,EArW0B2xF,EAC5CpG,aACAsF,cACAtjG,QACAk8F,WACAmI,eACAC,mBACAliD,qBACA0K,kBACAszC,iBACAmE,mBACA9hE,uBACA+hE,mBACAC,uBACAC,sBACAC,wBACAC,iBACAC,mBACAC,gBACAC,iBACAh6E,gBACAmzE,sBACAT,qCACAL,qCACA4H,mBACAC,oBACAC,kBACAC,kBACAC,gBACAC,wBACAtE,oBACAC,qBACAC,qBACAgD,0BAEA,MAAM,oBACJqB,EAAmB,uBACnBC,EAAsB,qBACtBC,EAAoB,iBACpBhhE,EAAgB,iBAChBihE,EAAgB,aAChB7a,IACEr6E,EAAAA,EAAAA,MAGEqH,GAAM7J,EAAAA,EAAAA,IAAuB,MAG7BowF,GAAkBpwF,EAAAA,EAAAA,IAA0B,MAE5Cw1F,GAAoBx1F,EAAAA,EAAAA,IAA0B,MAE9CpP,GAAOD,EAAAA,EAAAA,MACLyP,MAAOyf,KAAgBE,EAAAA,GAAAA,MACxB6iE,GAAoBC,GAAkBC,KAAqB7xF,EAAAA,EAAAA,MAC5D,SAAE0E,KAAaC,EAAAA,EAAAA,OAEd+hG,GAAaC,KAAkBj1F,EAAAA,EAAAA,IAASk1F,GAAuBh4E,KAEhEovE,IAAiBgC,EAAAA,GAAAA,IAAkBpnF,EAAKsmF,GAAuBd,GAC/Dv2E,IAAuB2xB,EAAAA,GAAAA,GAA6BwkD,IAGpDr2E,GAAe09E,GAAgBrH,GAE/B6I,GAAkBniG,GAAW,EAAI,EACjCoiG,GAAgBpiG,GAAW,EAAI,GAC/BqiG,GAAwBriG,GAAW,EAAI,EACvCsiG,GAAWhI,EAAW95F,KAAO+hG,EAAAA,IAC7BC,GAAsBlI,EAAW95F,KAAOiiG,EAAAA,IACxCC,GAAapI,EAAW95F,KAAOmiG,EAAAA,IAC/BC,GAAYtI,EAAW95F,KAAOqiG,EAAAA,IAC9BC,GAAUxI,EAAWwI,QACrBC,IAAgBT,KAAYU,EAAAA,EAAAA,KAAmB1I,GAE/C2I,IAAoB71F,EAAAA,EAAAA,IAAgB,KACpCyzF,EACFiB,IACSgB,GACTjB,IAEAD,IAEFzU,IAAmB,IAGf+V,IAAiB91F,EAAAA,EAAAA,IAAgB,KACjC21F,KAAiBhkE,EACnB+B,EAAiB,CACfQ,eAAgB,mBAGlBygE,EAAiB,CACfoB,aAAc7I,EAAW95F,IAE7B,IAGI4iG,IAA8Bh2F,EAAAA,EAAAA,IAAgB,KAClDo0F,IAAkB,CAChBj5F,UAAW,UACX/H,GAAI6iG,EAAAA,IACJC,UAAU,EACV96F,SAAS,EACTy9E,eAAgB,CACd5O,UAAW,UAEQ,IAGnBksB,IAA+Bn2F,EAAAA,EAAAA,IAAgB,KACnDo0F,IAAkB,CAChBj5F,UAAW,UACX/H,GAAIgjG,EAAAA,IACJF,UAAU,EACV96F,SAAS,EACTy9E,eAAgB,CACd5O,UAAW,UAEQ,IAGnBosB,GAAWX,GAAUzC,EAAAA,IAAoBqD,EAAAA,IACzC5J,GAASgJ,GAAUV,GAAgBD,GACnCwB,GAAiBb,GAAUT,GAAwBF,GAEnDyB,IAAuBx2F,EAAAA,EAAAA,IAAiB3C,GACvCA,EAIE/N,KAAKse,OAAOvQ,EAAQqvF,KAAW2J,GAAW3J,KAHxCoI,GAAuBh4E,MAM5BrU,IAAezI,EAAAA,EAAAA,IAAiBisF,IACpC4I,GAAe2B,GAAqBvK,EAAMwK,YAAYp5F,OAAO,KAG/Dq5F,EAAAA,GAAAA,GAAkB5vF,EAAK2B,KAEvBta,EAAAA,EAAAA,KAAU,KACH2Y,EAAI1J,SACTy3F,GAAe2B,GAAqB1vF,EAAI1J,QAAQ8R,aAAa,GAC5D,CAACsnF,MAEJroG,EAAAA,EAAAA,KAAU,KACJ0nB,KAAiBq3E,EAAW/d,UAAU1/E,SAAWy9F,EAAW37C,WAAW9hD,QAAUy9F,EAAWyJ,YAC9F7c,EAAa,CACXjB,eAAgB,CACdzlF,GAAI85F,EAAW95F,GACfujG,WAAYzJ,EAAWyJ,aAG7B,GACC,CAAC9gF,GAAcikE,EAAcoT,IAEhC,MAAMjP,IAAYjiC,IAAoBrqB,GAAwBgkE,KAAiB7B,EAEzE8C,GAAc1J,EAAW2J,gBAAkB3J,EAAW4J,WAEtDC,IAAUH,IAAe1J,EAAW95F,KAAO+hG,EAAAA,KAC5CjI,EAAW95F,KAAOqiG,EAAAA,KAAyBvI,EAAW95F,KAAO4jG,EAAAA,KAC7D9J,EAAW95F,KAAO6jG,EAAAA,MAA2BnD,IAAmBC,GAE9DmD,GAAM,CAAGC,KAAUjpG,EAAAA,EAAAA,GAAQ6oG,IAC5BK,GAAkC,EAAdxC,GAAkB,EACtCyC,GAAmB1D,GAAwBE,EAAyB3G,EAAWjoE,MAAQ,EAAIioE,EAAWjoE,MAEtGqyE,GAAajB,GAAWE,GACxBgB,GAAgBjoG,KAAKg9E,KAAKh9E,KAAKC,IAAI6nG,GAAmBC,IAAmBzC,IAC3E0C,GAAaf,GACX74F,GAASw5F,GAAQK,GAAgBjoG,KAAKg9E,KAAK+qB,GAAkBzC,IAAe0C,GAAaf,GAEzFiB,IAAwBlpG,EAAAA,EAAAA,KAAQ,IACpCklG,EAAmB,IAAI5W,IAAI4W,EAAiB1jG,KAAI,EAAGsD,QAASA,UAAO7E,GAClE,CAACilG,IACEiE,IAAyBnpG,EAAAA,EAAAA,KAAQ,IACrC6kG,EAAsB,IAAIvW,IAAIuW,EAAoBrjG,KAAI,EAAG4oF,gBAAiBA,UAAenqF,GACxF,CAAC4kG,IACEuE,IAAoBhE,IAAqBwB,KAAaE,IACxDM,KAAYF,KAAc1B,KACvB8C,KAAiBjlE,IAAyBqqB,GAC3C27C,IAAmBrpG,EAAAA,EAAAA,KAAQ,IAELT,EADtBowF,GACE2Y,GAAyB,4BACjB,SAGF,QACX,CAAC3Y,GAAUpwF,EAAM+oG,KAEpB,OACElnG,EAAAA,GAAAC,cAAA,OACEmX,IAAKA,EACLpW,IAAKw8F,EAAW95F,GAChBA,GAAK,GAAEg4F,KAAYl8F,IACnB7B,WACEuC,EAAAA,GAAAA,GAAe,aAAcquF,IAAY,uBAGzCyV,GACAhkG,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qBACbqC,EAAAA,GAAAC,cAAA,KAAGtC,WAAWuC,EAAAA,GAAAA,GAAe,mBAAoB8nG,IAAoB,8BAClEzZ,IAAYvuF,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,aAAa5E,UAAU,2BAC/CqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,mBAAmB6/F,EAAWp4F,QAC5Cg/F,GAAkBC,IAClBrkG,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,mBAAmBQ,EAAKimG,EAAiB,aAAe,kBAEzE4D,IAAoBh5F,QAAQwuF,EAAW/d,WACtCz/E,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,qBACbQ,EAAK6nG,GAAU,aAAe,WAAYxI,EAAW/d,SAAS1/E,OAAQ,OAI5EylG,IACCxlG,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UAAU,oBAAoB4E,KAAK,QAAQvE,QAASoyF,KAE3D4X,IACChoG,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACVknC,oBAAqBohE,KAAiBhkE,EACtCjkC,QAASooG,GACT8B,MAAI,EACJvmG,KAAK,OACLkkD,OAAK,GAEJoiD,KAKTjoG,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACT,+CACAmmB,GACAm3E,EAAW95F,KAAO4jG,EAAAA,KAAwB,iBAE5Cr9F,MAAQ,WAAU+D,SAElBhO,EAAAA,GAAAC,cAAA,UACEmX,IAAKumF,EACLhgG,UAAU,gBACVsM,MAAOo9F,GAAU,WAAUQ,aAAqBhpG,KAEhD2mG,IAAYI,IAAcyB,KAAWrnG,EAAAA,GAAAC,cAAA,UAAQmX,IAAK2rF,EAAmBplG,UAAU,kBAChFsmG,GACCjkG,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,6BACV0T,MAAM,cACNrT,QAASsoG,GACTtlG,IAAI,sBAEJhB,EAAAA,GAAAC,cAAA,OAAK+H,IAAKmgG,GAAMr9E,IAAI,QAAQntB,UAAU,gBAAgBkK,WAAW,KAGpEs8F,GACCnkG,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,4CACV0T,MAAM,cACNrT,QAASyoG,GACTzlG,IAAI,uBAEJhB,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UAGd4jB,IAAgBq3E,EAAW37C,WAAWzhD,KAAK6wC,IAC1C,MAAMm3D,GAAa92D,EAAAA,EAAAA,IAAeL,GAC5B8uD,EAAaqI,EAAalE,GAAqB/xE,SAASi2E,QAAcvpG,EAE5E,OACEmB,EAAAA,GAAAC,cAAC4iG,GAAa,CACZ7hG,IAAM,GAAEw8F,EAAW95F,MAAM0kG,IACzBn3D,SAAUA,EACV8uD,WAAYA,EACZ+C,YAAaA,EACblhD,mBAAoBA,EACpB87C,oBAAqBT,EACrBj/F,QAASwmG,EACTp8E,cAAeq8E,EACf9G,gBAAiBA,EACjBoF,kBAAmBA,EACnBx4E,cAAeA,GACf,IAGLpE,IAAgBq3E,EAAW/d,UAAU3/B,MAAM,EAAG0nD,GAAQE,GAAoBlK,EAAW/d,SAAS1/E,QAC5FK,KAAI,CAACu+E,EAAS33B,KACb,MAAMqhD,GAAa7C,IAAYI,MAC1BzG,EAAAA,EAAAA,MAAgCvuD,EAAAA,EAAAA,MAAa+tC,EAAQwK,gBACpDmf,EAAajB,IAAUrgD,GAAK0gD,IAAsBW,EACpDtF,EACApF,EACEyK,EAAazpB,EAAQoiB,cAAgBpiB,EAAQj7E,GAAKi7E,EAAQiN,MAC1DmU,EAAaqI,EAAalE,GAAqB/xE,SAASi2E,QAAcvpG,EAEtE8hG,EAAehiB,EAAQj7E,KAAOiiG,EAAAA,KACjCoC,IAAwBva,IAAI7O,EAAQj7E,IAEvC,OACE1D,EAAAA,GAAAC,cAACy/F,GAAa,CACZ1+F,IAAK29E,EAAQj7E,GACbi7E,QAASA,EACTh9E,KAAMglG,GACNjJ,oBAAqBT,EACrB6C,8BAA+BlD,EAC/B35E,QAAS6/E,EACTx2C,gBAAiBA,EACjBszC,eAAgBA,EAChBC,YAAU,EACVF,cAAe4E,EACftiE,qBAAsBA,EACtB+9D,oBAAqBoE,EACrBzG,gBAAiB2K,EACjBpI,qBAAsBoE,EACtBtmG,QAAS0mG,EACTvE,SAAUxhB,EACVohB,WAAYA,EACZM,cAAeuF,IAAckC,IAAuBta,IAAI7O,EAAQj7E,IAAMihG,OAAkB9lG,EACxFuhG,YAAc0H,IAAuBta,IAAI7O,EAAQj7E,SAAsB7E,EAAhB+lG,EACvDtE,oBAAqBkF,GAAWX,OAAwBhmG,EACxD0hG,kBAAmBA,EACnBC,mBAAoBA,EACpBC,mBAAoBA,EACpBl2E,cAAeA,EACfm2E,cAAelD,EAAW95F,KAAO4jG,EAAAA,IACjCrH,cAAeh+D,IACTu7D,EAAW95F,KAAO6jG,EAAAA,KAA0B/J,EAAW95F,KAAO4jG,EAAAA,KACpE3G,aAAcA,GACd,IAGP6G,IAASG,GAAkBD,IAC1B1nG,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wCACVkY,OAAK,EACLxE,MAAM,cACNrT,QAASypG,GACTzmG,IAAI,QACL,IACG2mG,GAAkBD,KAKzBlC,IACCxlG,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZrtB,KAAM9Z,EAAK4lG,EAAmB,mCAAqC,mCACnE1/F,OAAQ8rF,GACRtrF,QAASwrF,GACT7qD,eAAgB2gE,GAChB1gE,sBAAoB,IAGpB,KAYV,SAAS2/D,GAAuBh4E,GAC9B,OAAOA,EAjXyB,IAHH,EAsXxBA,EAlXgC,IAFI,EADL,CAwXtC,CC5cA,SAAyC,WAAzC,GAAgE,WAAhE,GAA+I,WAA/I,GAA6K,WAA7K,GAAuM,WAAvM,GAA0P,WCiGpPm7E,GAAsB,IAAMzvF,EAAAA,EAM5B0vF,GAAuB,IAAItb,IAAI,CAACuY,EAAAA,IAAsBI,EAAAA,IAAwBE,EAAAA,MAC9E0C,GAA6B,IAAIvb,IAAI,CACzCuY,EAAAA,IACAI,EAAAA,IACAE,EAAAA,MA4XF,IAAevoG,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,SAAQqvF,iBAAgBmE,uBACjC,MACEtkB,UACEipB,SAAUC,GAEZ5f,cACEpgD,KAAMigE,EACNC,YAAaC,EACbC,cACEC,OAAQC,IAGZC,mBAAoBC,EACpBtnD,WAAW,mBACTD,EAAkB,gBAClBwnD,EAAe,aACfC,EAAY,YACZC,IAEAp3F,EAEEo6C,EAAkBt9C,QAAQuB,IAAUkmB,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,IACjEu9C,EAAev9C,GAASw9C,EAAAA,EAAAA,KAAmB77C,EAAQ3B,QAAU1R,EAC7D4kG,EAAsBvxF,EAAOwxF,0BAA0BC,SAE7D,MAAO,CACLiF,mBACAO,qBAAuBvJ,OAAwC/gG,EAAvBsqG,EACxCF,mBAAoBrJ,EAAiBqJ,OAAqBpqG,EAC1D4kG,oBAAqB7D,EAAiB6D,OAAsB5kG,EAC5D8pG,kBACAY,oBAAqBr3F,EAAO62E,aAAaygB,MAAMC,OAC/CC,YAAYC,EAAAA,EAAAA,KAA4Bz3F,GACxCo6C,kBACArqB,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GACjD42F,yBACAc,oBAAqB13F,EAAO03F,oBAC5BC,qBAAsB33F,EAAO23F,qBAC7BR,aAActF,EAAmBsF,OAAexqG,EAChDuqG,gBAAiBrF,EAAmBqF,OAAkBvqG,EACtDirG,eAAgBh8C,GAAci8C,UAAUrmG,GACxCsmG,mBAAoBjG,GAAoBj2C,GAAcm8C,wBACtDroD,mBAAoBmiD,EAAmBniD,OAAqB/iD,EAC5DqrG,oBAAqBnG,EAAmBuF,OAAczqG,EACvD,GA7CeoT,EAzXiCk4F,EACnDxsG,YACAysG,sBACA5xF,WACAsqF,cACAyG,sBACAX,mBACAO,uBACAjF,sBACA+E,qBACAxF,sBACAkF,kBACAmB,iBACAT,eACAD,kBACAxnD,qBACA85C,WA3BwB,mBA4BxBoN,yBACAY,aACA3F,mBACAnE,iBACA0E,gBACAh4C,kBACArqB,uBACAooE,wBACAT,sBACAC,uBACAK,sBACAF,qBACAM,sBACA9F,mBACAC,oBACAlE,oBACAC,qBACAC,yBAGA,MAAM70E,GAAere,EAAAA,EAAAA,IAAuB,MAEtCksB,GAAYlsB,EAAAA,EAAAA,IAAuB,MAEnCowF,GAAkBpwF,EAAAA,EAAAA,IAA0B,MAE5Cw1F,GAAoBx1F,EAAAA,EAAAA,IAA0B,OAE9C,SAAErK,IAAaC,EAAAA,EAAAA,OAEnBq+C,aAAc+oD,EACdnpD,cAAeopD,GACbtpD,KAEEgoD,GAAqBtqG,EAAAA,EAAAA,KAAQ,IAC1BghG,EACHqJ,EACAzoD,OAAOuK,QAAO0/C,EAAAA,GAAAA,IAAW7B,EAAmBO,KAC/C,CAACP,EAAkBhJ,EAAgBuJ,EAAsBF,IAEtDyB,GAA0B9rG,EAAAA,EAAAA,KAAQ,KACtC,MAAM+rG,EAA4BlH,GAAqBrjG,KAAK0iD,GAAWA,EAAOkmC,aAC9E,OAAO4f,GAAoB+B,GAA2BvqG,KAAKsD,GAAOklG,EAAiBllG,KAAKo8B,OAAO9wB,QAAQ,GACtG,CAAC45F,EAAkBnF,IAEhBmH,GAAU,GAAElP,kBACZ,eACJE,GAAc,0BACdG,GAAyB,mCACzBkB,GAAkC,mCAClCL,GAAkC,6BAClCM,GAA4B,iBAC5BhU,IACEuS,GAA0B7vE,EAAc6N,EAAWmxE,GAAQpyF,GAEzDqyF,IAAiBz8D,EAAAA,GAAAA,GAAuB00D,QAAejkG,EAAW08F,EAAAA,KAElEt9F,IAAUC,EAAAA,EAAAA,KACVC,IAAOC,EAAAA,GAAAA,KAEP0sG,GAAiB97F,QAAQu6F,GAEzBwB,IAAUnsG,EAAAA,EAAAA,KAAQ,KACtB,MAAMosG,EAAkD,GAexD,GAbIjH,GAAoBz3C,GAClB49C,GAAqBnqG,QACvBirG,EAAYtrG,KAAK,CACfgE,GAAIunG,EAAAA,IACJhE,WAAY,GACZ7hG,MAAOnH,GAAQ,sBACf4jD,UAAWqoD,EACX30E,MAAO20E,EAAoBnqG,OAC3BimG,SAAS,IAKXjC,IAAqBz3C,EAAiB,CACxC,MAAM4+C,EAA2C7B,GAAcvpD,MAAM,EA1G/C,KA0G0E,GAC5FkqD,GACFkB,EAAkBC,QAAQ,CAAEzpG,KAAM,SAEhCwpG,GAAmBnrG,QACrBirG,EAAYtrG,KAAK,CACfgE,GAAIunG,EAAAA,IACJhE,WAAY,GACZ7hG,MAAOnH,GAAQ,aACf4jD,UAAWqpD,EACX31E,MAAO21E,EAAkBnrG,OACzBimG,SAAS,IAIb,MAAMoF,GAAwBhC,GAAmB,IAC9CtpE,QAAQmR,IAAci6D,EAAkBG,MAAMC,IAAgBj7D,EAAAA,EAAAA,IAAei7D,EAAar6D,OAC1F6O,MAAM,EA1HgB,IA2HnByrD,GAA2B3pD,GAAsB,IACpD9hB,QAAO,EAAG0rE,iBAAkBA,IAC5BprG,KAAI,EAAG6wC,cAAeA,IACtBnR,QAAQmR,IACCi6D,EAAkBG,MAAMC,IAAgBj7D,EAAAA,EAAAA,IAAei7D,EAAar6D,OACtEm6D,EAAqBC,MAAMC,IAAgBj7D,EAAAA,EAAAA,IAAei7D,EAAar6D,OAEjF,GAAIs6D,GAAyBxrG,QAAUqrG,GAAsBrrG,OAAQ,CACnE,MAAM+lG,GAAasF,GAAsBrrG,OACnC0rG,EAAqBL,EAAqB3d,OAAO8d,GACvDP,EAAYtrG,KAAK,CACfgE,GAAIoiG,EAAYC,EAAAA,IAAwBN,EAAAA,IACxCwB,WAAY,GACZ7hG,MAAOnH,GAAQ6nG,EAAY,mBAAqB,kBAChDjkD,UAAW4pD,EACXl2E,MAAOk2E,EAAmB1rG,OAC1BimG,SAAS,GAEb,CACF,MAAO,GAAIpG,EAAgB,CACzB,MAAM8L,EAAyB/C,EAAgBkB,GAC/C,GAAI6B,GAAwBjsB,UAAU1/E,OAAQ,CAC5C,MAAM0/E,GAAWksB,EAAAA,GAAAA,IAAcD,EAAuBjsB,SACnD3/B,MAAM,EAjJmB,GAkJzB2tC,OAAOyb,GAAsB,IAAK,MACrC8B,EAAYtrG,KAAK,IACZgsG,EACHjsB,WACAlqD,MAAOkqD,EAAS1/E,OAChB2D,GAAI+hG,EAAAA,IACJrgG,MAAOnH,GAAQ,kBACf+nG,SAAS,GAEb,CACI0E,GAAyB3qG,QAC3BirG,EAAYtrG,KAAK,CACfgE,GAAIiiG,EAAAA,IACJsB,WAAY,GACZ1xE,MAAOm1E,EAAwB3qG,OAC/B0/E,SAAUirB,EACVtlG,MAAOjH,GAAK,+BACZ6nG,SAAS,GAGf,MAAO,GAAIqE,EAAuB,CAChC,MAAMuB,EAAwBjD,EAAgBiB,GAC1CgC,EAAsBnsB,UAAU1/E,QAClCirG,EAAYtrG,KAAK,IACZksG,EACHloG,GAAI+hG,EAAAA,IACJrgG,MAAOnH,GAAQ,mBAGrB,MAAWirG,GAAoBnpG,QAC7BirG,EAAYtrG,KAAK,CACfgE,GAAI+hG,EAAAA,IACJwB,WAAY,IACZ7hG,MAAOnH,GAAQ,kBACfwhF,SAAUypB,EACV3zE,MAAO2zE,EAAmBnpG,OAC1BimG,SAAS,IAIb,MAAM6F,EAAa,IAAKtC,GAAuB,IAC3CO,GACF+B,EAAWV,QAAQrB,GAGrB,MAAMgC,GAAkB5lE,EAAAA,GAAAA,IAAO2lE,EAAWpe,OAAOqb,GAA0B,KAErEiD,EAAgBvrD,OAAOuK,QAAO0/C,EAAAA,GAAAA,IAAW9B,EAAiBmD,IAEhE,MAAO,IACFd,KACAe,EACJ,GACA,CACDxC,EAAqBxF,EAAkBnE,EAAgByK,EAAuBnB,EAC9EJ,EAAwBH,EAAiBU,EAAcznD,EAAoB3jD,GAASmrG,EACpFS,EAAsBD,EAAqBt9C,EAAiB49C,EAAqBJ,EACjFE,EAAoBU,EAAyBvsG,KAGzC6tG,IAAkBptG,EAAAA,EAAAA,KAAQ,IAC9BksG,IAC4D,IAAzDC,GAAQjrE,QAAQlxB,GAAQA,EAAI6wE,UAAU1/E,SAAQA,QAChD,CAACgrG,GAASD,KAEPmB,IAAmBC,EAAAA,GAAAA,GAAkB,GAAI3Q,EAAAA,KACzC4Q,GAAsBrB,IAAkBmB,KAAqBD,IAEnE7xB,EAAAA,GAAAA,GAAoB1gD,EAAWv2B,IAAaipG,KAG5C1tG,EAAAA,EAAAA,KAAU,KACR,IAAKqsG,GACH,OAGF,MAAMtmG,EAASi1B,EAAU/rB,QACzB,IAAKlJ,EACH,OAGF,MAAM4nG,EAAUxQ,GAAiB2M,IAAuB/jG,EAAOoqC,YAAc,EAAI25D,GAAsB,IAEvG1iB,EAAAA,GAAAA,GAAwBrhF,EAAQ4nG,EAAQ,GACvC,CAACtB,GAAgBlP,KAEpB,MAAMyQ,IAAoB/7F,EAAAA,EAAAA,IAAiBs7E,IACzC0e,EAAoB1e,EAAM,IAkEtBr8C,IAAgBrvC,EAAAA,GAAAA,GAAe,gBCjZhB,WDiZ8CvC,GAEnE,IAAKwuG,GACH,OACEnsG,EAAAA,GAAAC,cAAA,OAAKtC,UAAW4xC,IACby8D,GACChsG,EAAAA,GAAAC,cAAA,OAAKtC,UAAW2uG,IAA8BruG,GAAQ,eAEtD+B,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,OAMhB,MAAM0/C,IAAkBrsG,EAAAA,GAAAA,GACtBosG,GACA,gBACC9B,GAAuB8B,IAEpBE,IAAgBtsG,EAAAA,GAAAA,GACpBosG,GDra0F,WCua1F5zF,EAAAA,GAAe,eAAiB,gBAChC0xF,EACAkC,IAGF,OACEtsG,EAAAA,GAAAC,cAAA,OAAKtC,UAAW4xC,IACdvvC,EAAAA,GAAAC,cAAA,OACEmX,IAAKqiB,EACL97B,UAAW4uG,IAEXvsG,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BACbqC,EAAAA,GAAAC,cAAA,UAAQmX,IAAKumF,EAAiBhgG,UAAU,kBACxCqC,EAAAA,GAAAC,cAAA,UAAQmX,IAAK2rF,EAAmBplG,UAAU,kBACzCotG,GAAQ3qG,KAnGjB,SAAqBo9F,EAA8Ch+F,GACjE,MAAMitG,EAAejP,EAAW/d,WAAW,GACrC3C,GAAkB58E,EAAAA,GAAAA,GACtBosG,GACA9sG,IAAUo8F,ICtV8B,YDyVpC8Q,EAAmBltG,EAAQmtG,EAAAA,IAC3BC,GAAOzN,EAAAA,EAAAA,MAAgCvuD,EAAAA,EAAAA,MAAa4sD,GAE1D,GAAIA,EAAW95F,KAAOunG,EAAAA,IAAtB,CAIA,GAAIxC,GAA2Bjb,IAAIgQ,EAAW95F,KAAO85F,EAAWI,eAAiB6O,EAAc,CAC7F,MAAMjH,EAAWhI,EAAW95F,KAAO+hG,EAAAA,KAAwBjI,EAAW95F,KAAOqiG,EAAAA,IACvE8G,EAAUrE,GAAqBhb,IAAIgQ,EAAW95F,IACpD,OACE1D,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLjB,IAAKw8F,EAAW95F,GAChB/F,UAAWm/E,EACXhnE,UAAW0nF,EAAWp4F,MACtByQ,OAAK,EACLmwC,MAAO6mD,EACPx7F,MAAM,cAENrT,QAASA,IAAMkrF,GAAiBsc,EAAW,EAAIhmG,IAE9CgmG,EACCxlG,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEXvC,EAAAA,GAAAC,cAACs9F,GAAe,CACdC,WAAYA,EACZv6E,QAASymF,IAAemB,GACxBtgF,eAAa,EACbmzE,oBAAqBR,GACrBS,gBAAiB+O,EAAoBE,EAAO7J,EAAoBpF,OAAmB9+F,IAK7F,CAEA,OACEmB,EAAAA,GAAAC,cAACy/F,GAAa,CACZ1+F,IAAKw8F,EAAW95F,GAChBi7E,QAAS8tB,EACT9qG,KAAM87F,EAAAA,IACNr4F,MAAOo4F,EAAWp4F,MAClBzH,UAAWm/E,EACX75D,QAASymF,IAAemB,GACxBnN,oBAAqBR,GACrByC,eAAa,EACb19D,sBAAoB,EACpB07D,gBAAiB+O,EAAoBE,EAAO7J,EAAoBpF,OAAmB9+F,EACnFqhG,qBAAsBoE,EACtBtmG,QAASkrF,GACTiX,SAAU3gG,EACV+qB,eAAa,GA9CjB,CAiDF,MAyCIvqB,EAAAA,GAAAC,cAAA,OACEmX,IAAKwU,EACL46B,SAAU+jD,EACV5sG,UAAW6uG,IAEVzB,GAAQ3qG,KAAI,CAACo9F,EAAYx2C,KACxB,MAAMg9C,EAAmBxG,EAAW95F,KAAOunG,EAAAA,KACrCzN,EAAW95F,KAAO+hG,EAAAA,MAAyB4E,GAAyBzK,GACpEwE,EAAiB5G,EAAW95F,KAAOomG,EAEzC,OACE9pG,EAAAA,GAAAC,cAAC2jG,GAAU,CACT5iG,IAAKw8F,EAAW95F,GAChB85F,WAAYA,EACZsF,YAAa9zF,QAAQ06F,GAAcmB,IACnCrrG,MAAOwnD,EACP00C,SAAUkP,GACVlN,oBAAqB3B,GACrBkB,mCAAoCA,GACpCL,mCAAoCA,GACpCiH,aAAcjI,IAAkB50C,EAAI,GAAK40C,IAAkB50C,EAAI,EAC/DsF,gBAAiBA,EACjBszC,eAAgBA,EAChBmE,iBAAkBA,EAClBC,iBAAkBA,EAClBC,qBAAsBoG,GAAyB7M,EAAW95F,KAAO+hG,EAAAA,IACjEtB,sBAAuBvE,GAAkBpC,EAAW95F,KAAO+hG,EAAAA,IAC3DrB,eAAgBA,EAChBniE,qBAAsBA,EACtBiiE,oBAAqBA,EACrBtiD,mBAAoBA,EACpB0iD,cAAeA,EACfE,iBAAkBA,EAClBC,kBAAmBA,EACnBC,gBAAiB2H,GACjB9L,kBAAmBA,EACnBC,mBAAoBA,EACpBC,mBAAoBA,EACpBl2E,eAAa,GACb,KAIJ,K,eEneV,MCoFA,IAAe/sB,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACjC,CACL46F,0BAA2B99F,QAAQkD,EAAO62E,aAAa8f,aAAa9oG,QACpEukG,eAAeyI,EAAAA,EAAAA,KAA+B76F,MAH9BD,EAtDgC+6F,EAClD3oG,SACA4oG,kBACAH,4BACAxI,gBACA4I,sBACAroG,cAEA,MAAM,0BAAEsoG,IAA8Bp9F,EAAAA,EAAAA,MAEhCq9F,GAAmB7/F,EAAAA,EAAAA,OAClB8/F,EAAoBC,EAAsBC,IAA0B/uG,EAAAA,EAAAA,MAC3EC,EAAAA,EAAAA,KAAU,KACR2uG,EAAiB1/F,QAAUu/F,EAAgBv/F,QAASqR,wBAAwB4G,KAAK,GAChF,CAACthB,EAAQ4oG,KAEZxuG,EAAAA,EAAAA,KAAU,KACJ4F,IAAWyoG,GACbK,GACF,GACC,CAACL,EAA2BzoG,EAAQ8oG,IAEvC,MAAMd,GAAoB5oG,EAAAA,EAAAA,KAAak7E,IACrCuuB,EAAoBvuB,GACpB95E,GAAS,GACR,CAACA,EAASqoG,IAEb,OACEltG,EAAAA,GAAAC,cAACutG,GAAAA,EAAM,KACLxtG,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI,CACHpe,OAAQA,EACRopG,WAAS,EACT72F,UAAU,QACV82F,gBD/DsB,WCgEtB7oG,QAASA,EACTuoG,iBAAkBA,EAAiB1/F,QACnCigG,kBAAmBN,GAEnBrtG,EAAAA,GAAAC,cAACkqG,GAAiB,CAChBzO,SAAS,oBACToH,YAAaz+F,EACbmU,UAAWnU,EACXu7F,gBAAc,EACd0E,cAAeA,EACf/D,kBAAmB+M,EACnB9M,mBAAoB+M,EACpBjD,oBAAqB+B,EACrB5L,mBAAoB57F,KAGjB,K,gBChFb,MC+BM+oG,GAAoB,EAAI90F,EAAAA,EAuG9B,IAAetb,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU05B,YAIF,CACLmnB,aAJkB7gB,EAAAA,EAAAA,KAAWhgC,EAAQA,EAAOqkB,eAK5Cu5B,IAJUlkB,GAAO8nB,OAAQxhB,EAAAA,EAAAA,KAAWhgC,EAAQ05B,EAAM8nB,YAAS70D,KAH7CoT,EArGS47F,EAAGjiE,QAAOmnB,cAAajD,UAClD,MAAM,eAAE8wC,EAAc,0BAAEkN,EAAyB,gBAAEC,IAAoBh+F,EAAAA,EAAAA,MAEjE5R,GAAOC,EAAAA,GAAAA,KAEPiG,EAAS2K,QAAQ48B,GACjBoiE,GAAiBjgE,EAAAA,GAAAA,GAAiBnC,GAElCqiE,GAAqBrvG,EAAAA,EAAAA,KAAQ,KACjC,GAAKm0D,GAAgBi7C,EACrB,MAAO,IACFj7C,EACH+1B,YAAa,CACXpnF,KAAM,UACNsnF,WAAYglB,EAAe/kC,eAE9B,GACA,CAAClW,EAAai7C,IAEX79F,GAAcvR,EAAAA,EAAAA,KAAQ,KAC1B,IAAKovG,IAAmBl+C,EAAK,OAE7B,MAAMkN,GAAU1xB,EAAAA,EAAAA,IAAgBwkB,GAEhC,OAAIk+C,EAAe/xF,SACV9d,EAAK,wBAAyB,CACnC2xD,IAAKkN,EACL/gD,UAAUiyF,EAAAA,GAAAA,IAAoB/vG,EAAM6vG,EAAe/xF,WAClD,CACD+/B,WAAW,EACX6V,cAAc,IAIX1zD,EAAK,qBAAsB,CAAE2xD,IAAKkN,GAAW,CAAEhhB,WAAW,EAAM6V,cAAc,GAAO,GAC3F,CAAC/B,EAAK3xD,EAAM6vG,IAET3wE,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClC,MAAMu0D,EAAYmpC,GAAgBnpC,UAE9BA,GACFkpC,EAAgB,CACdlpC,YACAzzC,MAAO,CACLw2C,UAAW,sBACXC,UAAW,CACT3X,MAAO,oBAMf49C,GAA2B,IAGvBK,GAAkB79F,EAAAA,EAAAA,IAAgB,KACtC,IAAK09F,EAAgB,OAErB,MAAMI,EAAUJ,EAAe/xF,UAAWmoB,EAAAA,GAAAA,MAAkB4pE,EAAe/xF,cAAWpd,EAEtF+hG,EAAe,CACbyN,kBAAmBL,EAAenpC,UAClCikB,YAAa,CAAEpnF,KAAM,UAAWsnF,WAAYglB,EAAe/kC,cAAe84B,MAAOqM,KAEnFN,GAA2B,IAG7B,OACE9tG,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRU,iBDvGoB,WCwGpBE,wBAAsB,EACtBw/B,QAAM,EACN5/B,QAASw4B,GAER2wE,GACChuG,EAAAA,GAAAC,cAACsrF,GAAAA,EAAW,CACV5tF,UD9GsC,WC+GtCqrF,WAAYglB,EAAe/kC,cAC3BtnE,KAAMisG,GACNU,UAAW,EACXhP,aAAW,IAGft/F,EAAAA,GAAAC,cAAA,WACED,EAAAA,GAAAC,cAAA,MAAItC,UDtHgF,YCsHtDQ,EAAK,4BACnC6B,EAAAA,GAAAC,cAAA,KAAGtC,UDvH8D,YCuH9BwS,IAEpC89F,GACCjuG,EAAAA,GAAAC,cAACsuG,GAAAA,EAAQ,CACPC,SAAUP,EACVQ,iBAAe,IAGnBzuG,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACN,KAAK,UAAU3D,QAASmwG,GAC7BhwG,EAAK,mBAEF,K,4BClIZ,SAA2F,WCgV3F,SAASuwG,GAAuBC,EAAwBp+F,GACtD,OAAOo+F,EAASjuG,MAAMkuG,IAAWA,EAAMr+F,UAClCo+F,EAAS7uE,QAAQslB,GAAM70C,GAAU60C,EAAE70C,SAAWA,IAC9C20C,MAAK,CAACC,EAAGC,IAAMD,EAAE/vB,KAAOgwB,EAAEhwB,OAAM,EACvC,CAMA,UAAe53B,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU05B,YACT,MAAMl5B,EAAOk5B,IAASuG,EAAAA,EAAAA,KAAWjgC,EAAQ05B,GAAOr7B,QAC1Cu9C,EAAep7C,IAAQq7C,EAAAA,EAAAA,KAAmB77C,EAAQQ,EAAKhP,IACvDmrG,EAAajjE,GAAO+iE,UAAYD,GAAuB9iE,EAAM+iE,SAAU/iE,EAAMr7B,QAGnF,MAAO,CACLmC,OACAo7C,eACAghD,gBALkBD,GAAYt+F,QAAS4hC,EAAAA,EAAAA,KAAWjgC,EAAQ28F,GAAYt+F,aAAU1R,EAMhFojC,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GAClD,GAZeD,EAhSD88F,EACjBnjE,QACAl5B,OACAo7C,eACAghD,kBACA7sE,2BAEA,MAAM,WACJ+sE,EAAU,gBACVC,EAAe,gBACf9kB,EAAe,iBACfnmD,EAAgB,aAChBkrE,IACEn/F,EAAAA,EAAAA,OAEGo/F,EAAoBC,EAAkBC,IAAqB7wG,EAAAA,EAAAA,MAC3D8wG,EAAkBC,EAAgBC,IAAmBhxG,EAAAA,EAAAA,MACrDixG,EAAqBC,EAAmBC,IAAsBnxG,EAAAA,EAAAA,KAE/Dm3B,EAAYjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,GAElCrO,EAAS2K,QAAQ48B,GAEjB3tC,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MAEbK,EAAAA,EAAAA,KAAU,KACJiU,IAASo7C,GACXohD,EAAa,CAAE3+F,OAAQmC,EAAKhP,IAC9B,GACC,CAACgP,EAAMo7C,IAEV,MAAM8hD,GAAYhxG,EAAAA,EAAAA,KAAQ,KACxB,GAAK8T,EAIL,OAAO08C,EAAAA,EAAAA,IAAanxD,EAASyU,EAAK,GACjC,CAACA,EAAMzU,IAEJ4xG,GAAmBjxG,EAAAA,EAAAA,KAAQ,KAC/B,GAAKkwG,EAIL,OAAO1/C,EAAAA,EAAAA,IAAanxD,EAAS6wG,EAAgB,GAC5C,CAACA,EAAiB7wG,KAEf,eACJ6xG,EAAc,UACdC,EAAS,MACTnB,EAAK,MACLxpG,EAAK,SACL4qG,EAAQ,UACRC,EAAS,MACTv/F,EAAK,SACLqG,EAAQ,gBACRm5F,EAAe,aACfC,IACavxG,EAAAA,EAAAA,KAAQ,KACrB,IAAKgtC,GAAOwkE,cAAgB19F,EAC1B,MAAO,CACLo9F,gBAAgB,EAChB1qG,MAAOnH,EAAQ,YAInB,MAAM,WACJoyG,GACEzkE,EAAMwkE,YAEJvB,EAAajjE,GAAO+iE,UAAYD,GAAuB9iE,EAAM+iE,SAAUj8F,EAAKhP,IAC5E4sG,EAA+B1kE,GAAO+iE,WAoNjBA,EApNoD/iE,EAAM+iE,SAoNlCp+F,EApN4CmC,EAAKhP,IAqN/FirG,EAAS4B,OAAO3B,GAAUA,EAAMr+F,SAAWA,KADpD,IAA+Bo+F,EAAwBp+F,EAlNnD,MAAM,OACJ8oF,EAAM,aACNmX,EAAY,aACZC,EAAY,cACZC,EAAa,gBACbC,EAAe,WACfC,IACEC,EAAAA,GAAAA,GAAqBjlE,EAAMwkE,aAAa,GAEtCU,EAAWT,EAEX3xF,EAAOzgB,EAAQ,cAAeuyG,GAC9B7qF,EAAQ8qF,EAAexyG,EAAQ,cAAeuyG,EAAe,QAAK3xG,EAElEkyG,EAAa9yG,EAAQ,0BAA2B0yG,GAEhDK,EAAyB/yG,EAAZ03B,EAAoB,eAA0B,cAE3Ds7E,GAA0BnjD,GAAcojD,oBAAsB,IAAMpjD,GAAcqjD,eAAiB,GAEzG,IAAIhhG,EACJ,GAAIygG,EACFzgG,EAAclS,EAAQ,8BACjB,GAAIgzG,EAAyB,KAAMt6E,EAAAA,EAAAA,IAAYjkB,GAAO,CAC3D,MAAM0+F,EAAanzG,EAAQ,qCAAsCgzG,GACjE9gG,EAAclS,EAAQ,+BAAgC,CAACmzG,EAAYxB,GACrE,MACEz/F,EAAclS,EAAQ,qCAAsC,CAAC2xG,EAAWmB,IAG1E,MAAO,CACLjB,gBAAgB,EAChB1qG,MAAO4rG,EACPhB,SAAUtxF,EACVuxF,UAAWtqF,EACXjV,MAAO2oF,EAAO9S,WACdxvE,SAAU25F,EACVC,kBACAT,gBAAiB//F,EACjBy+F,MAAOC,EACPkB,UAAWe,EACXX,aAAcG,IAAiCM,EAChD,GACA,CAACl+F,EAAMk9F,EAAWhkE,EAAO3tC,EAAS6vD,EAAcn4B,IAE7C07E,GAAmBzlE,GAAO+iE,UAAU5uG,QAAUkiC,EAC9CqvE,EAAmB1C,GAAOr+F,QAAUq+F,EAAMr+F,SAAWq7B,GAAOr7B,OAE5DghG,GAAmBjhG,EAAAA,EAAAA,IAAgB,KACvC++F,IACAL,EAAW,CAAEz+F,OAAQmC,EAAMhP,GAAI8tG,MAAO,CAAC5C,EAAO6C,QAC9CtnB,EAAgB,CAAC,EAAE,IAGfunB,GAAuBphG,EAAAA,EAAAA,IAAgB,KAC3C0zB,IACA2rE,IACAV,GAAiB,IAGb0C,GAAoBrhG,EAAAA,EAAAA,IAAgB,KACxC,IAAKs+F,EACH,OAAK3sE,OAKLgtE,SAJES,IAQCS,EAKDvB,EAAMvqE,cACRkrE,IAIE+B,EACFlC,IAIFmC,IAdEtC,GAcgB,IAGdryC,GAAmBtsD,EAAAA,EAAAA,IAAgB,KACvC2+F,GAAiB,IA0CnB,OACEjvG,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRe,MAAOA,EACPzH,UD5QuC,WC6QvCoH,iBD7QoB,WC8QpBF,QAASoqG,GA5CNa,EAKH9vG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAC2xG,GAAAA,EAAe,CACd5B,SAAUA,EACVC,UAAWA,EACXl5F,SAAUA,EACV86F,kBAAmBnhG,EACnBwtE,kBAAkB,UAEnB6xB,GACC/vG,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GDhPoE,aCiPhGlC,EAAQ,qCAAsC2xG,IAGnD5vG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KACb6B,EAAAA,GAAAA,GAAWkuG,EAAiB,CAAC,kBAAmB,WAEnDlwG,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACE,QAAM,EAACxE,UAAU,wBAAwBklB,SAAUwuF,EAAiBrzG,QAAS2zG,GAClFxB,EACCnwG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UACVtE,EAAQ03B,EAAY,4BAA8B,0BAEnD13B,EAAQ,OAEd+B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACE,QAAM,EAACxE,UAAU,wBAAwBK,QAAS4+D,GACvD3+D,EAAQ,aA9BR+B,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,CAAClvD,UDnO4C,aCiR3D2zG,GAAoBzB,GACnB7vG,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQ8qG,EACRxxG,UDpR+I,WCqR/IoH,iBDrRgL,WCsRhLF,QAASwqG,GAETrvG,EAAAA,GAAAC,cAAA,OAAKtC,UDxRwM,YCyR3MqC,EAAAA,GAAAC,cAAA,OAAKtC,UDzRqP,YC0RxPqC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACC,KAAM44E,EAAiBntG,KAAK,UACpC3B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,cAAc5E,UD3RwP,cC6RnRqC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,OAAO5E,UD7R4M,aC8R9NqC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACC,KAAMxjB,EAAM/Q,KAAK,WAE3B3B,EAAAA,GAAAC,cAAA,YACG+B,EAAAA,GAAAA,GACC/D,EAAQ,4BAA6B,CAAC4xG,EAAkBD,IAAa,CAAC,kBAAmB,WAG7F5vG,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACE,QAAM,EAACxE,UAAU,wBAAwBK,QAASuzG,GACvDtzG,EAAQ,YAEX+B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACE,QAAM,EAACxE,UAAU,wBAAwBK,QAASqxG,GACvDpxG,EAAQ,aAKhB+Q,QAAQ4/F,GAAOvqE,gBACdrkC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQirG,EACRwC,eAAa,EACbvsE,aAActnC,EAAQ,MACtBmH,MAAOnH,EAAQ,yCACf4G,QAAS2qG,EACThqE,eAAgBgqE,IAEfxtG,EAAAA,GAAAA,GACC/D,EACE,wCACAiwG,EAAAA,GAAAA,IAAoB/vG,EAAMywG,EAAOvqE,eAAgBD,EAAAA,GAAAA,QAEnD,CAAC,kBAAmB,YAIxBnC,GACAjiC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQorG,EACRlqE,aAActnC,EAAQ,cACtBmH,MAAOnH,EAAQ,iBACf4G,QAAS8qG,EACTnqE,eAAgBksE,IAEf1vG,EAAAA,GAAAA,GAAW/D,EAAQ,4BAA6B,CAAC,kBAAmB,WAGnE,K,4BC5UZ,SAAkD,WC0HlD,IAAeT,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU05B,YACT,MAAM,QAAEllC,GAAYklC,GAAS,CAAC,EACxBmmE,EAAcrrG,IAAWswB,EAAAA,EAAAA,KAAkB9kB,EAAQxL,EAAQ6J,OAAQ7J,EAAQ8U,WAC3E0wB,EAAS6lE,IAAex9E,EAAAA,EAAAA,KAAariB,EAAQ6/F,GAEnD,MAAO,CACLx7E,cAAerkB,EAAOqkB,cACtBjC,cAAe4X,EAChB,GATej6B,EA1FE+/F,EACpBz7E,gBACAqV,QACAtX,oBAEA,MAAM,mBACJ29E,EAAkB,cAAEC,EAAa,aAAEv9E,IACjC5kB,EAAAA,EAAAA,MACE5R,GAAOD,EAAAA,EAAAA,KACPmG,EAAS2K,QAAQ48B,GAEjBumE,IAAWvmE,GAAO5S,KAAKo5E,MAAQxmE,GAAO5S,KAAKo5E,OAAS77E,GAAmBqV,GAAO5S,KAAKq5E,QAEnFC,GAAqBhiG,EAAAA,EAAAA,IAAgB,KACpCs7B,GAAUA,EAAM5S,KAAKu5E,oBAC1B59E,EAAa,CACXpkB,OAAQq7B,EAAM5S,KAAK2a,OACnBn4B,UAAWowB,EAAM5S,KAAKu5E,oBAExBN,IAAoB,IAGhBN,GAAoBrhG,EAAAA,EAAAA,IAAgB,KACpC6hG,EACFD,EAAc,CAAEtpC,KAAMh9B,EAAOg9B,OAG/BqpC,GAAoB,IAGhBO,GAAY5zG,EAAAA,EAAAA,KAAQ,KACxB,IAAKgtC,EAAO,OACZ,MAAM,KAAEg9B,EAAI,KAAE5vC,GAAS4S,EAEjB+H,EAAS3a,EAAK2a,QAAUrf,GAAe5wB,GAiC7C,MAAO,CACLc,OA/BAxE,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAK+H,IAAKwjF,GAAa1gE,IAAI,GAAGntB,UDtE8B,aCuE5DqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,KAAkB6B,EAAAA,GAAAA,GAAW7D,EAAK,uBAAwB,CAAC,qBACzE6B,EAAAA,GAAAC,cAACwyG,GAAAA,EAAS,CAACrtG,MAAM,mBAAmB0mF,KAAO,GAAEziB,EAAAA,gBAAoCT,OA6BnF8pC,UAzBgB,CAChB,CAACv0G,EAAK,gBAAiBw1C,EAAS,CAAEpjC,OAAQojC,GAAWx1C,EAAK,wBAC1D,CAACA,EAAK,cAAe66B,EAAKo5E,KAAO,CAAE7hG,OAAQyoB,EAAKo5E,MAASj0G,EAAK,wBAC9D,CAACA,EAAK,gBAAiBA,EAAK,6BAA8BA,EAAK,SAAU66B,EAAKwsD,OAAQ,OACtF,CAACrnF,EAAK,kBACJ6B,EAAAA,GAAAC,cAAA,QAAMtC,WAAWuC,EAAAA,GAAAA,GAAe84B,EAAKu5E,mBDjFjB,YCiFyDv0G,QAASs0G,GACnFt5E,EAAK25E,iBAAmB35E,EAAKo5E,KAAOj0G,EAAK,8BACtCA,EAAK66B,EAAK25E,eAAiB,mBAAqB,6BAGxD,CAACx0G,EAAK,iBAAiBi7F,EAAAA,GAAAA,IAAmC,IAAZpgE,EAAK5D,KAAaj3B,EAAK45D,MAAM,KAgB3EtzD,OAZAzE,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,KACd6B,EAAAA,GAAAA,GACCg3B,EAAKq5E,OAASl0G,EAAK,wBAAwBi7F,EAAAA,GAAAA,IAAqC,IAAdpgE,EAAKq5E,OAAel0G,EAAK45D,MAAM,IAC7F55D,EAAK,4BACT,CAAC,qBASN,GACA,CAACA,EAAMm2B,GAAe5wB,GAAIkoC,IAE7B,GAAK4mE,EAEL,OACExyG,EAAAA,GAAAC,cAAC2yG,GAAAA,EAAc,CACbvuG,OAAQA,EACRe,MAAOjH,EAAK,uBACZu0G,UAAWF,EAAUE,UACrBluG,OAAQguG,EAAUhuG,OAClBC,OAAQ+tG,EAAU/tG,OAClBC,WAAqBvG,EAATg0G,EAAc,kBAA0B,SACpDrtG,cAAe6sG,EACf9sG,QAASotG,GACT,K,4BCtHN,UAAgB,YAAc,WAAW,iBAAiB,WAAW,cAAgB,WAAW,gBAAgB,WAAW,aAAe,WAAW,qBAAqB,WAAW,iBAAmB,WAAW,mBAAmB,WAAW,gBAAkB,WAAW,eAAiB,WAAW,QAAU,WAAW,OAAS,WAAW,cAAc,WAAW,WAAa,WAAW,eAAe,WAAW,YAAc,YCiI5a,IAAez0G,EAAAA,EAAAA,KA1GuBq1G,EAAGC,SAAQl3B,aAC/C,MAAM,mBAAEm3B,EAAkB,mBAAEC,IAAuBjjG,EAAAA,EAAAA,MAE7C5R,GAAOC,EAAAA,GAAAA,KACPH,GAAUC,EAAAA,EAAAA,MAET+0G,EAAiBC,IAAsBhjG,EAAAA,EAAAA,IAAmB4iG,EAAOK,gBAElEC,EAAgBpkG,QAAQ8jG,EAAOK,eAAepzG,QAC9CszG,EAAyC,IAAjCP,EAAOQ,eAAevzG,OAC9BwzG,EAAgBH,EAAgBN,EAAOK,eAAepzG,OAAS,EAC/D09D,EAAYw1C,EAAgBlzG,OAASkzG,EAAgBlzG,OAAOwmF,gBAAa1nF,EAEzEqxG,EAAkBmD,EAAQl1G,EAAK,yBACjCo1G,EAAgBp1G,EAAK,wBAAyB,CAC9CusD,MAAOvsD,EAAK,6BAA8B,CAAEo3B,MAAOg+E,GAAiB,CAAEt2C,YAAas2C,IACnFnuG,OAAOioC,EAAAA,GAAAA,IAAuB,CAC5Bp1B,KAAM2jE,EAAOx2E,MAAM6S,KACnBg0E,SAAUrQ,EAAOx2E,MAAM6mF,SACvBunB,sBAAuB53B,EAAO63B,qBAE/B,CACDz3D,WAAW,EACX6V,cAAc,IACX1zD,EAAK,6BAENwzG,GAAoBluG,EAAAA,EAAAA,KAAY,KACpCsvG,IAEKE,EAAgBlzG,QAErBizG,EAAmB,CACjBF,SACAj0D,QAASo0D,GACT,GACD,CAACH,EAAQG,IAENS,GAAwBjwG,EAAAA,EAAAA,KAAY,KACxC,MAAMkwG,EAAiBV,EAAgBlzG,SAAW+yG,EAAOK,eAAepzG,OACxEmzG,EAAmBS,EAAiB,GAAKb,EAAOK,eAAe,GAC9D,CAACL,EAAOK,eAAgBF,EAAgBlzG,SAE3C,OACEC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOkW,SACrBrW,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOgQ,cACpBnO,EAAAA,GAAAA,GAAWkuG,EAAiB,CAAC,kBAAmB,WAEnDlwG,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOyzG,cAAe,kBAClD5kG,QAAQ8jG,EAAOK,eAAepzG,SAC7BC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO0zG,cACrB7zG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO2zG,kBACpB71G,EAAQ,4BAA6Bg1G,EAAgBlzG,OAAQ,MAEhEC,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,GAAO4zG,gBAClB9oE,KAAK,SACLD,SAAU,EACVhtC,QAAS01G,GAERT,EAAgBlzG,SAAW+yG,EAAOK,eAAepzG,OAC9C9B,EAAQ,eAAiBA,EAAQ,eAGzC+B,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACTC,QAASusE,EAAOK,eAChBnsE,oBAAqBksE,EACrBvtE,YAAastE,EACb/rE,eAAa,EACbC,YAAU,EACVC,cAAc,cAIpBpnC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO0zG,cACrB7zG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO2zG,kBACpB71G,EAAQ,6BAGb+B,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACTC,QAASusE,EAAOQ,eAChB7sE,kBAAmBqsE,EAAOQ,eAC1B3tE,YAAamtE,EAAOQ,eACpBpsE,eAAa,EACbC,YAAU,EACVC,cAAc,cAGlBpnC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLN,KAAK,UACL3D,QAAS2zG,GAET3xG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOuE,aACnBuuG,EAAgBlzG,QAAU9B,EAAQ,MACnC+Q,QAAQikG,EAAgBlzG,SACvBC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACGjqC,EAAQ,6BAA8Bg1G,EAAgBlzG,OAAQ,KAC/DC,EAAAA,GAAAC,cAAC+zG,GAAAA,EAAK,CAACr2G,UAAWwC,GAAO8zG,YAAah8F,KAAMwlD,EAAWy2C,kBAAgB,OAK3E,IC/BV,IAAe12G,EAAAA,EAAAA,KAxEsB22G,EACnCv4B,SACAw4B,mBAAmB5tE,GAAAA,MAEnB,MAAM,mBAAEusE,EAAkB,cAAEsB,IAAkBtkG,EAAAA,EAAAA,MAExC5R,GAAOD,EAAAA,EAAAA,MAEN+0G,EAAiBC,IAAsBhjG,EAAAA,EAAAA,IAAmB,IAE3DutD,EAAYw1C,EAAgBlzG,OAASkzG,EAAgBlzG,OAAOwmF,gBAAa1nF,EAEzE60G,GAAwBjwG,EAAAA,EAAAA,KAAY,KACxC,MAAMkwG,EAAiBV,EAAgBlzG,SAAWq0G,EAAiBr0G,OACnEmzG,EAAmBS,EAAiB,GAAKS,EAAiB,GACzD,CAACA,EAAkBnB,EAAgBlzG,SAEhC4xG,GAAoBluG,EAAAA,EAAAA,KAAY,KACpCsvG,IACAsB,EAAc,CAAEj4B,SAAUR,EAAOl4E,GAAIm7C,QAASo0D,GAAkB,GAC/D,CAACr3B,EAAOl4E,GAAIuvG,IAEf,OACEjzG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOkW,SACpBrH,QAAQolG,GAAkBr0G,SACzBC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOgQ,cACpBnO,EAAAA,GAAAA,GAAW7D,EAAK,4BAA6B,CAAC,kBAAmB,WAEpE6B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOyzG,cAAe,kBACnD5zG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO0zG,cACrB7zG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO2zG,kBACpB31G,EAAK,4BAA6B80G,EAAgBlzG,OAAQ,MAE7DC,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,GAAO4zG,gBAClB9oE,KAAK,SACLD,SAAU,EACVhtC,QAAS01G,GAERT,EAAgBlzG,SAAWq0G,EAAiBr0G,OAAS5B,EAAK,eAAiBA,EAAK,eAGrF6B,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACTC,QAAS6tE,EACTptE,oBAAqBksE,EACrBvtE,YAAastE,EACb/rE,eAAa,EACbC,YAAU,EACVC,cAAc,eAKtBpnC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLN,KAAK,UACL3D,QAAS2zG,GAET3xG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOuE,aACnBuuG,EAAgBlzG,QAAU5B,EAAK,0BAChC6Q,QAAQikG,EAAgBlzG,SACvBC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACG/pC,EAAK,+BACN6B,EAAAA,GAAAC,cAAC+zG,GAAAA,EAAK,CAACr2G,UAAWwC,GAAO8zG,YAAah8F,KAAMwlD,EAAWy2C,kBAAgB,OAK3E,ICKV,IAAe12G,EAAAA,EAAAA,KAzEmB82G,EAAGxB,aACnC,MAAM,mBAAEC,EAAkB,mBAAEC,IAAuBjjG,EAAAA,EAAAA,MAE7C5R,GAAOC,EAAAA,GAAAA,KACPH,GAAUC,EAAAA,EAAAA,MACT+0G,EAAiBC,IAAsBhjG,EAAAA,EAAAA,IAAmB4iG,EAAOj0D,SAElE01D,GAAY31G,EAAAA,EAAAA,KAAQ,KACxB,MAAM6rD,GAAY7Z,EAAAA,EAAAA,MAAY8Z,MAAM/hB,KACpC,OAAOmqE,EAAOj0D,QAAQ/e,QAAQp8B,IAAQ+mD,EAAU/mD,GAAI8wG,aAAY,GAC/D,CAAC1B,EAAOj0D,UAEL41D,EAAgBxB,EAAgBlzG,OAASw0G,EAAUx0G,OAEnD09D,EAAYg3C,EAAgBA,EAAcluB,gBAAa1nF,EAEvD8yG,GAAoBluG,EAAAA,EAAAA,KAAY,KACpCsvG,IAEAC,EAAmB,CACjBF,SACAj0D,QAASo0D,GACT,GACD,CAACH,EAAQG,IAENS,GAAwBjwG,EAAAA,EAAAA,KAAY,KACxC,MAAMkwG,EAAiBV,EAAgBlzG,SAAW+yG,EAAOj0D,QAAQ9+C,OACjEmzG,EAAmBS,EAAiBY,EAAYzB,EAAOj0D,QAAQ,GAC9D,CAACi0D,EAAOj0D,QAAS01D,EAAWtB,EAAgBlzG,SAE/C,OACEC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOkW,SACrBrW,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOgQ,aACpBhS,EAAK,0BAER6B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOyzG,cAAe,kBACnD5zG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO0zG,cACrB7zG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO2zG,kBACpB71G,EAAQ,4BAA6Bw2G,EAAe,MAEvDz0G,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,GAAO4zG,gBAClB9oE,KAAK,SACLD,SAAU,EACVhtC,QAAS01G,GAERT,EAAgBlzG,SAAW+yG,EAAOj0D,QAAQ9+C,OAAS9B,EAAQ,eAAiBA,EAAQ,eAGzF+B,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACTC,QAASusE,EAAOj0D,QAChBpY,kBAAmB8tE,EACnBvtE,oBAAqBksE,EACrBvtE,YAAastE,EACb/rE,eAAa,EACbC,YAAU,EACVC,cAAc,cAGlBpnC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLjE,QAAS2zG,EACThwG,KAAK,UACLkhB,UAAWowF,EAAgBlzG,QAE3BC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOuE,YACpBvG,EAAK,uBACN6B,EAAAA,GAAAC,cAAC+zG,GAAAA,EAAK,CAACr2G,UAAWwC,GAAO8zG,YAAah8F,KAAMwlD,EAAWy2C,kBAAgB,MAGvE,ICuCV,IAAe12G,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU05B,YACT,MAAM,OAAEknE,EAAM,QAAE4B,GAAY9oE,GAAS,CAAC,EAChCwwC,EAAWs4B,GAASt4B,WAAa02B,GAAU,aAAcA,EAASA,EAAO12B,cAAWv9E,GAG1F,MAAO,CACL+8E,OAHaQ,GAAWu4B,EAAAA,EAAAA,KAAiBziG,EAAQkqE,QAAYv9E,EAI9D,GAReoT,EAtGmC2iG,EACrDhpE,QACAgwC,aAEA,MAAM,mBAAEm3B,IAAuBhjG,EAAAA,EAAAA,MAEzB5R,GAAOD,EAAAA,EAAAA,KAEPmG,EAAS2K,QAAQ48B,GACjBipE,GAAgBr8E,EAAAA,EAAAA,GAAsBoT,IAAUA,EAChDowC,GAAkBxjD,EAAAA,EAAAA,GAAsBojD,IAAWA,EAEnDx2E,GAAQxG,EAAAA,EAAAA,KAAQ,KACpB,GAAKi2G,EAAL,CACA,GAAIA,EAAc/B,OAAQ,CACxB,MAAMA,EAAS+B,EAAc/B,OAC7B,MAAI,mBAAoBA,EACfA,EAAOK,eAAepzG,OAAS5B,EAAK,2BAA6BA,EAAK,0BAExEA,EAAK,qBACd,CACA,OAAI02G,EAAcH,QACTv2G,EAAK,8BADd,CARoC,CAYpB,GACf,CAACA,EAAM02G,IAEJC,GAAuBl2G,EAAAA,EAAAA,KAAQ,IAC/Bo9E,GACK3uC,EAAAA,GAAAA,IAAuB,CAC5Bp1B,KAAM+jE,EAAgB52E,MAAM6S,KAC5Bg0E,SAAUjQ,EAAgB52E,MAAM6mF,SAChCunB,sBAAuBx3B,EAAgBy3B,oBAGvCoB,GAAe/B,QAAU,UAAW+B,EAAc/B,QAC7CzlE,EAAAA,GAAAA,IAAuB,CAC5Bp1B,KAAM48F,EAAc/B,OAAO1tG,MAAM6S,KACjCg0E,SAAU4oB,EAAc/B,OAAO1tG,MAAM6mF,SACrCunB,sBAAuBqB,EAAc/B,OAAOW,yBAJhD,GAQC,CAACz3B,EAAiB64B,IAEfE,GAAkBn2G,EAAAA,EAAAA,KAAQ,KAC9B,GAAKi2G,GAAe/B,OACpB,MAAI,mBAAoB+B,EAAc/B,OAAe+B,EAAc/B,OAAOK,eAAepzG,YAAzF,CACgB,GACf,CAAC80G,IAoBE1qE,GAAgB1mC,EAAAA,EAAAA,KAAY,KAChC,GAAKoxG,EAAL,CACA,GAAIA,EAAc/B,OAAQ,CACxB,MAAMA,EAAS+B,EAAc/B,OAC7B,MAAI,mBAAoBA,EACf9yG,EAAAA,GAAAC,cAAC4yG,GAAe,CAACC,OAAQA,EAAQl3B,OAAQI,IAG3Ch8E,EAAAA,GAAAC,cAACq0G,GAAW,CAACxB,OAAQA,GAC9B,CAEA,OAAI+B,EAAcH,QACT10G,EAAAA,GAAAC,cAACk0G,GAAc,CAACv4B,OAAQI,EAAkBo4B,iBAAkBS,EAAcH,QAAQN,wBAD3F,CAVoC,CAcpB,GACf,CAACp4B,EAAiB64B,IAErB,OACE70G,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRe,MAAOA,EACPP,QAASkuG,EACTtuE,QAAM,EACN+rC,gBAAc,GAEbskC,IA5CkBE,EA4CoBF,EA1CvC90G,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO80G,gBACrBj1G,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO+0G,SACrBl1G,EAAAA,GAAAC,cAACk1G,GAAAA,EAAG,CAACx3G,UAAWwC,GAAOy7E,OAAQx2E,MAAOjH,EAAK,2BAC3C6B,EAAAA,GAAAC,cAACk1G,GAAAA,EAAG,CACFx3G,UAAWwC,GAAOy7E,OAClBl+E,UAAQ,EACR03G,WAAYL,EACZM,eAAa,EACbjwG,MAAO4vG,IAETh1G,EAAAA,GAAAC,cAACk1G,GAAAA,EAAG,CAACx3G,UAAWwC,GAAOy7E,OAAQx2E,MAAOjH,EAAK,+BAiC9CgsC,KA7CL,IAAuB6qE,CA8Cb,K,gBC9HZ,UAAgB,QAAU,WAAW,MAAQ,WAAW,iBAAmB,WAAW,aAAe,WAAW,YAAc,WAAW,QAAU,YC0GnJ,IAAex3G,EAAAA,EAAAA,KAjFS83G,EAAG1pE,YACzB,MAAM,iBAAE2pE,EAAgB,qBAAEC,EAAoB,iBAAEzxE,IAAqBh0B,EAAAA,EAAAA,MAE/D0lG,GAAkBloG,EAAAA,EAAAA,IAAuB,MAEzCpP,GAAOD,EAAAA,EAAAA,KAEPw3G,GAAYC,EAAAA,GAAAA,GAAY/pE,IACxB,KAAEgqE,EAAI,WAAEC,GAAejqE,GAAS8pE,GAAa,CAAC,GAC9C,MACJI,EAAK,YAAEC,EAAW,eAAEC,EAAc,kBAAEC,EAAiB,MAAE5vG,EAAK,gBAAE6vG,GAC5DL,GAAc,CAAC,EAEbx4E,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClCklG,GAAsB,IAGlBW,GAAe7lG,EAAAA,EAAAA,IAAgB,KACnCilG,EAAiB,CAAEK,KAAMA,IAEzB7xE,EAAiB,CACfr9B,QAAuBvI,EAAd43G,EAAmB,sCAA8C,uCAG5E14E,GAAa,IAGT+4E,EAAgBL,EAAc,qBAAuB,YACrDM,EAAuBN,EAAc,sCACvC,oCAEEO,GAAa13G,EAAAA,EAAAA,KAAQ,KACzB,GAAKi3G,EAEL,OAAOU,EAAAA,EAAAA,IAAwBV,EAAW,GACzC,CAACA,IAEEW,GAAe53G,EAAAA,EAAAA,KAAQ,KAC3B,IAAKo3G,EACH,OAGF,MAAM9jG,GAAS0+B,EAAAA,EAAAA,MACf,OAAOolE,EAAe51G,KAAKsD,IAAOwuC,EAAAA,EAAAA,KAAWhgC,EAAQxO,KAAKo8B,OAAO9wB,QAAQ,GACxE,CAACgnG,IAIJ,OAFA77B,EAAAA,GAAAA,GAAoBs7B,GAAkB7pE,IAAU4qE,GAG9Cx2G,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQ2K,QAAQ48B,GAChB7mC,iBAAkB5E,GAAOkW,QACzBouB,QAAM,EACN5/B,QAASw4B,EACTrsB,QAASmlG,GAERG,GAAct2G,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACt0B,KAAK,QAAQ0E,MAAOA,EAAO6vB,KAAMogF,EAAYG,WAAS,IAC5EH,GAAct2G,EAAAA,GAAAC,cAACosD,GAAAA,EAAa,CAAC1uD,UAAWwC,GAAOiF,MAAO8wB,KAAMogF,IAC5DR,GAAS91G,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,GAAO21G,OAAQA,GACvC91G,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,GAAOu2G,kBAClBv4G,EAAK43G,EAAc,cAAgB,UAAWE,EAAmB,MAEnEO,GACCx2G,EAAAA,GAAAC,cAAA,OAAKmX,IAAKq+F,EAAiB93G,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOq2G,aAAc,iBACvEA,EAAap2G,KAAKu2G,GACjB32G,EAAAA,GAAAC,cAAC09D,GAAAA,EAAS,CAAChgE,UAAWwC,GAAOw2G,YAAazgF,KAAMygF,EAAa1+F,MAAMqzB,EAAAA,EAAAA,IAAgBqrE,QAIzF32G,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,iBAAkBC,GAAOiqE,UACtDpqE,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACE,QAAM,EAACxE,UAAU,wBAAwBK,QAASm4G,GACvDh4G,EAAK+3G,EAAkBG,EAAuBD,IAEjDp2G,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACE,QAAM,EAACxE,UAAU,wBAAwBK,QAASq/B,GACvDl/B,EAAK,YAGJ,I,uCCtGZ,SAA0C,WAA1C,GAAmE,WCkLnE,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM0kG,EAAwB1kG,EAAO8/B,WAAW6kE,2BAEhD,MAAO,CACLD,wBACD,GANe3kG,EAnJE6kG,EAAGlrE,QAAOgrE,4BAC9B,MAAM,mBAAEG,IAAuBhnG,EAAAA,EAAAA,MAGzBinG,GAAczpG,EAAAA,EAAAA,IAA0B,MAExClJ,EAAS2K,QAAQ48B,GACjBoiE,GAAiBjgE,EAAAA,GAAAA,GAAiBnC,IAClC,UACJqrE,EAAS,SAAEv5E,EAAQ,eAAEw5E,EAAc,YAAEC,GACnCnJ,GAAkB,CAAC,EACjBoJ,EAAwBH,EAExBI,GAAuBtpE,EAAAA,GAAAA,GAAiBqpE,GAExCn5G,GAAUC,EAAAA,EAAAA,KAEVo5G,GAAmB14G,EAAAA,EAAAA,KAAQ,IAE7BoB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,qCACb+B,EAAAA,GAAAC,cAAA,UAAI+B,EAAAA,GAAAA,GAAW/D,EAAQ,oCAAqC,CAAC,QAC7D+B,EAAAA,GAAAC,cAAA,UAAI+B,EAAAA,GAAAA,GAAW/D,EAAQ,oCAAqC,CAAC,QAC7D+B,EAAAA,GAAAC,cAAA,UAAI+B,EAAAA,GAAAA,GAAW/D,EAAQ,oCAAqC,CAAC,QAC7D+B,EAAAA,GAAAC,cAAA,SACED,EAAAA,GAAAC,cAACs3G,GAAAA,EAAQ,CACPn9F,IAAKnc,EAAQ,qCACbga,KAAMha,EAAQ,wCAGlB+B,EAAAA,GAAAC,cAAA,UAAI+B,EAAAA,GAAAA,GAAW/D,EAAQ,oCAAqC,CAAC,UAGhE,CAACA,KAEE,kBACJs0E,EAAiB,kBAAEC,EAAiB,kBACpCC,EAAiB,uBAAEC,EAAsB,sBAAEC,IACzCC,EAAAA,GAAAA,GAAuBokC,GAAcK,GAEnCh6E,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClCymG,IACArkC,IACAC,GAAuB,IAGnB6/B,GAAY5zG,EAAAA,EAAAA,KAAQ,KACxB,GAAKyF,EA2CL,MAAO,CACLG,OAzCAxE,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IAAelC,EAAQ,2BACtC+B,EAAAA,GAAAC,cAAA,KAAGtC,WAAWuC,EAAAA,GAAAA,GAAeC,GDnF6E,aCoFvGlC,EAAQ,mCAEX+B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLmV,IAAK4/F,EACLnhG,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACN1T,UD3FiF,WC4FjFK,QAASy0E,GAETzyE,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WA6Bf+B,aAxBmB,CACnB,CAAC,OAAQrG,EAAQ,gCACf+D,EAAAA,GAAAA,GAAW/D,EAAQ,kCAAmC,CAAC,qBACzD,CAAC,gBAAiBA,EAAQ,gCACxB+D,EAAAA,GAAAA,GAAW/D,EAAQ,kCAAmC,CAAC,qBACzD,CAAC,YAAaA,EAAQ,gCACpB+D,EAAAA,GAAAA,GAAW/D,EAAQ,iCAAkC24G,GAAwB,CAAC,sBAmBhFnyG,OAfAzE,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,KAAe6B,EAAAA,GAAAA,GAAW/D,EAAQ,+BAAgC,CAAC,qBAClF+B,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,KACX6B,EAAAA,GAAAA,GAAW/D,EAAQ,kCAAmC,IAAK,CAAC,oBAC7D+B,EAAAA,GAAAC,cAACs3G,GAAAA,EAAQ,CACPn9F,IAAKnc,EAAQ,cACbga,KAAMha,EAAQ,sBAUrB,GACA,CAACoG,EAAQpG,EAASw0E,EAAmBmkC,IAExC,OAAIS,EAEAr3G,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACmE,GAAAA,EAAe,CACdC,OAAQA,EACRC,aAAckuG,GAAWluG,aACzBC,eAAe,UACfK,eAAa,EACbJ,OAAQguG,GAAWhuG,OACnBC,OAAQ+tG,GAAW/tG,OACnBC,WAAYzG,EAAQ,+BACpB4G,QAASw4B,IAEVm1C,GAAqB90C,GACpB19B,EAAAA,GAAAC,cAACu3G,GAAAA,EAAoC,CACnCnzG,OAAQkuE,EACR+G,OAAQ9G,EACRilC,WAAYT,EACZt5E,SAAUA,EACVw5E,eAAgBA,EAChBD,UAAWA,EACXE,YAAaA,EACbO,iBAAe,EACfC,YAAat6E,EACbx4B,QAAS6tE,EACT7iE,oBAAqB8iE,KAQ7B3yE,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACR1G,UDnKiB,WCoKjBoH,iBDpKiI,WCqKjIF,QAASw4B,GAERi6E,EACDt3G,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLN,KAAK,UACL3D,QAASq/B,GAERp/B,EAAQ,gCAEL,KC9KZ,GAAwB,WCwGxB,IAAeT,EAAAA,EAAAA,KApF8Bo6G,EAC3CvzG,SACAQ,cAEA,MAAM5G,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KAEPy5G,GAAiBj5G,EAAAA,EAAAA,KAAQ,KAC7B,MAAM28E,EAAWt9E,EAAQ,aACzB,OAAOE,EACL,4BACA,CACE2tF,KACE9rF,EAAAA,GAAAC,cAACs3G,GAAAA,EAAQ,CAACn9F,IAAKnc,EAAQ,2BAA4Bga,KAAMsjE,GACtDA,EACDv7E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAIjB,CACEy5C,WAAW,GAEd,GACA,CAAC79C,EAAMF,IAEJ65G,GAAoBl5G,EAAAA,EAAAA,KAAQ,IACzBT,EACL,gCACAU,EACA,CACEm9C,WAAW,EACX+7D,mBAAoB,CAAE,KAAM/3G,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UDnD4B,WCmDD4E,KAAK,gBAGrE,CAACpE,IAEEq0G,GAAY5zG,EAAAA,EAAAA,KAAQ,KACxB,GAAKyF,EAsBL,MAAO,CACLG,OApBAxE,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IAAelC,EAAQ,iCAqBtCqG,aAlBmB,CACnB,CAAC,UAAWrG,EAAQ,uCAClB+D,EAAAA,GAAAA,GAAW/D,EAAQ,mCAAoC,CAAC,qBAC1D,CAAC,gBAAiBA,EAAQ,0CACxB+D,EAAAA,GAAAA,GAAW/D,EAAQ,iCAAkC,CAAC,qBACxD,CAAC,cAAeA,EAAQ,wCACtB+D,EAAAA,GAAAA,GAAW/D,EAAQ,oCAAqC,CAAC,sBAa3DwG,OATAzE,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IAAe23G,GAC9B93G,EAAAA,GAAAC,cAAA,KAAGtC,UD3EsC,YC2ENk6G,IAQtC,GACA,CAACxzG,EAAQpG,EAAS65G,EAAmBD,IAExC,GAAKrF,EAIL,OACExyG,EAAAA,GAAAC,cAACmE,GAAAA,EAAe,CACdC,OAAQA,EACRC,aAAckuG,EAAUluG,aACxBC,eAAe,cACfK,eAAa,EACbJ,OAAQguG,EAAUhuG,OAClBC,OAAQ+tG,EAAU/tG,OAClBC,WAAYzG,EAAQ,+BACpB4G,QAASA,GACT,I,gBCpGN,SAA4C,WCwF5C,IAAerH,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MACE8lG,eACEC,KAAMC,IAENhmG,EAEJ,MAAO,CACLgmG,eACD,GAVejmG,EA9DkBkmG,EACpCvsE,QACAssE,mBAEA,MAAM,mCACJE,EAAkC,mCAAEC,EAAkC,wCAAEC,IACtEvoG,EAAAA,EAAAA,MAEE1L,EAAS2K,QAAQ48B,GAEjBoiE,GAAiBjgE,EAAAA,GAAAA,GAAiBnC,GAElCztC,GAAOC,EAAAA,GAAAA,MAENm6G,EAAoBC,IAAyBtoG,EAAAA,EAAAA,KAAS,GAEvD83B,GAAe13B,EAAAA,EAAAA,IAAiBmoG,IAC/BzK,GACLsK,EAAwC,CACtC1oG,OAAQo+F,EAAez9F,OACvBmoG,gBAAiBD,GACjB,IAGEE,GAAmBroG,EAAAA,EAAAA,IAAgB,KACvC+nG,GAAoC,IAGhCh7E,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClC8nG,GAAoC,IAGtC,OACEp4G,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRmsE,gBAAc,EACdprE,MAAOjH,EAAK,sBACZR,UD/DiB,WCgEjBoH,iBAAkB5E,GAClB0E,QAASw4B,GAETr9B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAgB,iDAC7CH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBACbqC,EAAAA,GAAAC,cAAC24G,GAAAA,EAAY,CACXC,kBAAgB,EAChBnsD,YAAavuD,EAAK,4BAClB+xD,MAAO89C,GAAgB8K,UAAY36G,EAAK46G,YAAY/K,EAAe8K,UACnE3oG,YAAahS,EAAK,4BAClB66G,WAAYL,EACZ9hF,UAAWm3E,GAAgBn3E,UAC3BohF,KAAMC,EACNt1G,kBAAmB21G,EACnBU,iBAAkB50G,EAClB60G,2BAA4BV,EAC5B/iD,SAAUztB,MAIV,KCpFZ,IAAgB,QAAU,WAAW,SAAW,YCmMhD,IAAexqC,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM6gD,GAAc7gB,EAAAA,EAAAA,KAAWhgC,EAAQA,EAAOqkB,eACxC4tD,GAAYxgD,EAAAA,EAAAA,KAA2BzxB,GAI7C,MAAO,CACL6gD,cACAyqC,WALiBtrF,EAAO23F,sBAAuB3gB,EAAAA,EAAAA,KAAiBh3E,EAAQA,EAAO23F,2BAAwBhrG,EAMvGslF,YACArwC,iBANsBC,EAAAA,EAAAA,KAA0B7hC,GAOjD,GAZeD,EA5JsCknG,EACxDvtE,QACAmnB,cACAyqC,aACArZ,YACArwC,sBAEA,MAAM,4BACJslE,EAA2B,gCAC3BC,EAA+B,gBAC/BtL,EAAe,iBACf/pE,EAAgB,uBAChBs1E,IACEvpG,EAAAA,EAAAA,MAEE1L,EAAS2K,QAAQ48B,GAEjB3tC,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KAGPwtB,GAAere,EAAAA,EAAAA,IAAuB,OAErCgsG,EAAoBC,IAAyBtpG,EAAAA,EAAAA,IAAiB,IAErEzR,EAAAA,EAAAA,KAAU,MACJ4F,GAAWm5F,GAAY/d,UAAa3rC,GACtCwlE,GACF,GACC,CAACj1G,EAAQm5F,EAAY1pD,IAExB,MAAMm6D,GAAqBrvG,EAAAA,EAAAA,KAAQ,KACjC,GAAKm0D,GAAgByqC,GAAY/d,SACjC,MAAO,IACF1sB,EACH+1B,YAAa,CACXpnF,KAAM,UACNsnF,WAAYwU,EAAW/d,SAAS85B,GAAoB71G,IAEvD,GACA,CAACqvD,EAAayqC,EAAY+b,IAEvBE,EAAajc,GAAY/d,UAAU1/E,QACzCo4E,EAAAA,GAAAA,IACE,KACOshC,GACLD,GAAuBE,IAAeA,EAAY,GAAKD,GAAW,GAEpEA,EAlDa,UAkDW56G,GAG1B,MAAM86G,GAAmBrpG,EAAAA,EAAAA,IAAgB,IAErCtQ,EAAAA,GAAAC,cAACsuG,GAAAA,EAAQ,CACPE,iBAAe,EACf9wG,UAAWwC,GAAOy5G,SAClBptB,cAAersF,GAAO05G,SACtBrL,SAAUP,MAKVzoE,GAAiBl1B,EAAAA,EAAAA,IAAgB,KAChCs7B,GAAOkkB,KAAKpsD,KACjB01G,IACIxtE,GAAOi5B,YACLsf,GACF4pB,EAAgB,CACdlpC,UAAWj5B,EAAMi5B,UACjBzzC,MAAO,CACLw2C,UAAW,gCACXC,UAAW,CACT/kB,OAAQ,cAIdu2D,EAAgC,CAAE3lD,MAAO9nB,EAAMkkB,IAAIpsD,GAAI8pE,WAAW,EAAMssC,yBAAyB,MAEjG91E,IACA+pE,EAAgB,CACdlpC,UAAWj5B,EAAMi5B,UACjBzzC,MAAO,CACLw2C,UAAW,gCACXC,UAAW,CACT/kB,OAAQ,kBAKlB,IAGIi3D,GAAiBzpG,EAAAA,EAAAA,IAAgB,KAChCs7B,GAAOkkB,KAAKpsD,KACjB01G,IACIxtE,GAAOi5B,WACTkpC,EAAgB,CACdlpC,UAAWj5B,EAAMi5B,UACjBzzC,MAAO,CACLw2C,UAAW,gCACXC,UAAW,CACT/kB,OAAQ,gBAKZqhC,GACFk1B,EAAgC,CAAE3lD,MAAO9nB,EAAMkkB,IAAIpsD,GAAI8pE,WAAW,IACpE,IAGIwsC,GAAmB1pG,EAAAA,EAAAA,IAAgB,KACvC,GAAKs7B,GAAOkkB,IACZ,OAAO3xD,EAAK,wBAAyB,CACnCoE,MAAM+oC,EAAAA,EAAAA,IAAgBM,GAAOkkB,MAC5B,CACD9T,WAAW,EACX6V,cAAc,GACd,IAGJ,OACE7xD,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,WAAWuC,EAAAA,GAAAA,GAAe,WAC1B6E,iBAAkB5E,GAAOkW,QACzBhS,OAAQA,EACRQ,QAASk1G,GAERJ,IACD35G,EAAAA,GAAAC,cAAA,WACG+5G,IACDh6G,EAAAA,GAAAC,cAAA,OACEtC,UAAU,sBACVyZ,IAAKwU,GAEL5rB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACVwE,QAAM,EACNnE,QAASwnC,EACTn0B,MAAM,WAELpT,EAAQ,gCAEX+B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACVwE,QAAM,EACNnE,QAAS+7G,GAER57G,EAAK,aAIN,KCjCZ,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IAGQ,CACL6gD,aAHkB7gB,EAAAA,EAAAA,KAAWhgC,EAAQA,EAAOqkB,kBAF9BtkB,EA9HmCgoG,EACrDruE,QACAmnB,kBAEA,MAAM,yBACJmnD,EAAwB,6BAAEC,EAA4B,gBAAEpM,IACtDh+F,EAAAA,EAAAA,MAEE1L,EAAS2K,QAAQ48B,GAEjB3tC,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KAGPwtB,GAAere,EAAAA,EAAAA,IAAuB,MAEtCi4B,GAAiBl1B,EAAAA,EAAAA,IAAgBiL,UACrC,MAAMgwD,QAAwBC,EAAAA,EAAAA,OACxB,YAAEtG,GAAgBqG,EACnB3/B,GAAOkkB,KAAKpsD,KACjBw2G,IACItuE,GAAOi5B,YACTs1C,EAA6B,CAC3BzmD,MAAO9nB,EAAMkkB,IAAIpsD,GACjByhE,iBAAiB,IAEnB4oC,EAAgB,CACdlpC,UAAWj5B,EAAMi5B,UACjBzzC,MAAO,CACLw2C,UAAW,qBACXC,UAAW,CACTiB,WAAW,EACX6C,SAAUzG,GAAayG,SACvBC,UAAW1G,GAAa0G,UACxBC,SAAU3G,GAAa2G,SACvBC,OAAQ5G,GAAa6G,QACrBC,MAAO9G,GAAa8G,MACpBC,oBAAqB/G,GAAagH,SAClCC,kBAAmBjH,GAAagH,cAIxC,IAGI6tC,GAAiBzpG,EAAAA,EAAAA,IAAgB,KAChCs7B,GAAOkkB,KAAKpsD,KACjBw2G,IACItuE,GAAOi5B,YACTs1C,EAA6B,CAC3BzmD,MAAO9nB,EAAMkkB,IAAIpsD,GACjByhE,iBAAiB,IAEnB4oC,EAAgB,CACdlpC,UAAWj5B,EAAMi5B,UACjBzzC,MAAO,CACLw2C,UAAW,qBACXC,UAAW,CACTiB,WAAW,OAInB,IAGIsxC,GAAa9pG,EAAAA,EAAAA,IAAgB,KACjC,GAAKs7B,GAAOkkB,IACZ,OACE9vD,EAAAA,GAAAC,cAAA,OAAKtC,UCpGe,YDqGlBqC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt0B,KAAK,QACLu0B,KAAM68B,IAER/yD,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,OAAO5E,UCzGmB,aD0GrCqC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt0B,KAAK,QACLu0B,KAAM0V,EAAMkkB,MAEV,IAIJkqD,GAAmB1pG,EAAAA,EAAAA,IAAgB,KACvC,GAAKs7B,GAAOkkB,IACZ,OAAO3xD,EAAK,yBAA0B,CACpCoE,MAAM+oC,EAAAA,EAAAA,IAAgBM,GAAOkkB,MAC5B,CACD9T,WAAW,EACX6V,cAAc,GACd,IAGJ,OACE7xD,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,WAAWuC,EAAAA,GAAAA,GAAe,WAC1BmE,OAAQA,EACRQ,QAASk1G,GAERK,IACDp6G,EAAAA,GAAAC,cAAA,WACG+5G,IACDh6G,EAAAA,GAAAC,cAAA,OACEtC,UAAU,sBACVyZ,IAAKwU,GAEL5rB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACVwE,QAAM,EACNnE,QAASwnC,EACTn0B,MAAM,WAELpT,EAAQ,gCAEX+B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACVwE,QAAM,EACNnE,QAAS+7G,GAER57G,EAAK,aAIN,KE1JZ,GAAwB,WC+JxB,IAAeX,EAAAA,EAAAA,KApIO68G,EACpBzuE,YAEA,MAAM,gBACJ0uE,EAAe,mBAAEC,EAAkB,0BAAEC,IACnCzqG,EAAAA,EAAAA,MACE5R,GAAOD,EAAAA,EAAAA,KACPmG,EAAS2K,QAAQ48B,GAGjB6uE,GAAgBltG,EAAAA,EAAAA,IAAuB,MAEvCmtG,GAAoBpqG,EAAAA,EAAAA,IAAgB,CAACM,EAAG3R,KAC5C,MAAM,OAAEsR,EAAM,SAAEmtB,GAAakO,EAC7B0uE,EAAgB,CAAE1qG,OAAQW,EAAQmtB,WAAUz+B,UAAS,KAGhD07G,EAAkBC,IAAkBh8G,EAAAA,EAAAA,KAAQ,KACjD,IAAKgtC,EAAO,MAAO,MAAC/sC,EAAW,GAC/B,MAAMg8G,EAAejvE,EAAMkvE,SAAS/6G,OAAS,EAC7C,MAAO,CAAC6rC,EAAMkvE,SAASD,GAAeA,EAAa,GAClD,CAACjvE,IAEEikC,GAAkBv/D,EAAAA,EAAAA,IAAgB,KACjCsqG,EAKLJ,IAJED,GAIyB,IAGvBQ,GAAan8G,EAAAA,EAAAA,KAAQ,KACzB,IAAKgtC,EAAO,OACZ,MACMlW,EADWv3B,EAAK,uCACCm9E,MAAM,UAC7B,MAAO,CACL5lD,EAAM,GACN11B,EAAAA,GAAAC,cAACs3G,GAAAA,EAAQ,CACPt/F,KAAM9Z,EAAK,sCACXic,IAAKjc,EAAK,uBAEZu3B,EAAM,GACP,GACA,CAACv3B,EAAMytC,IAEJpnC,GAAS5F,EAAAA,EAAAA,KAAQ,KACrB,IAAKgtC,EACH,OAGF,MAAMovE,EAAchsG,QAAQ2rG,GAAkBt1G,UAE9C,OACErF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,0BACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACLmU,UAAW3X,EAAKy8G,EAAiB,OAAS,SAC1C58G,QAAS6xE,GAET7vE,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAMq4G,EAAiB,aAAe,WAE9C56G,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,cD3F2B,WC2FO86G,GD3FiK,aC4FhOh7G,EAAAA,GAAAC,cAAA,MAAItC,UD5FgM,YC4FtKQ,EAAK,aAClC68G,GACCh7G,EAAAA,GAAAC,cAAA,QAAMtC,UD9F8O,YC8FjNg9G,EAAiBt1G,WAGpD,GAEP,CAAClH,EAAMytC,EAAOgvE,EAAgBD,GAAkBt1G,YAEnD5G,EAAAA,EAAAA,KAAU,KACR,IAAKmtC,EAAO,OACZ,MAAMjK,EAAQv7B,SAASoC,cAA4B,IAAGyyG,GAAAA,SAA8B96G,MACpF,IAAKwhC,EAAO,OAEZ,MAAM3zB,EAAS2zB,EAAM8f,cACrBtmC,EAAAA,EAAAA,KAAgB,KACds/F,EAAc/sG,QAASzD,MAAM+D,OAAU,GAAEA,EAvFzB,MAuFmD,GACnE,GACD,CAAC49B,IAEJ,MAAMsvE,GAAuB5qG,EAAAA,EAAAA,IAAgB,KAC3C,MAAMqxB,EAAQv7B,SAASoC,cAA4B,IAAG2yG,GAAAA,SAA0Bh7G,OAEhFuuC,EAAAA,EAAAA,KAAe,KACb,MAAM1gC,EAAS2zB,EAAM8f,cACrBtmC,EAAAA,EAAAA,KAAgB,KACds/F,EAAc/sG,QAASzD,MAAM+D,OAAU,GAAEA,EAjG3B,MAiGqD,GACnE,GACF,IAGJ,OACEhO,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRmsE,gBAAc,EACd7yE,UD/HoC,WCgIpC6G,OAAQA,EACRK,QAAS01G,GAETv6G,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACT78B,KAAK,QACL5E,UDrIgR,WCsIhRyZ,IAAKqjG,EACLp7E,UAAWu7E,EACX/gE,QAASqhE,GAETl7G,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,MAAItC,UD3IoJ,YC2InHg9G,GAAkBv1G,OACtDu1G,GAAkB/8G,QAAQwC,KAAKnB,GAC9Be,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNC,cAAc,OACd19G,UDhJgG,WCiJhGm/E,gBDjJ0H,WCkJ1HqjB,SAAUlhG,EAAOA,OACjBjB,QAAS08G,GAET16G,EAAAA,GAAAC,cAAA,OAAKtC,UDrJuE,YCqJxCsB,EAAOgZ,UAIjDjY,EAAAA,GAAAC,cAAA,KAAGtC,UDzJgL,YCyJhJo9G,IAE/B,I,gBC3JZ,SAAwB,WC0OxB,IAAev9G,EAAAA,EAAAA,KA3MK89G,EAClB1vE,YAEA,MAAM,eACJ2vE,EAAc,YAAEn0D,EAAW,iBAAEo0D,EAAgB,wBAAEC,IAC7C1rG,EAAAA,EAAAA,MACE5R,GAAOD,EAAAA,EAAAA,KACPmG,EAAS2K,QAAQ48B,GAGjB6uE,GAAgBltG,EAAAA,EAAAA,IAAuB,OAEtC0K,EAAMyjG,IAAWxrG,EAAAA,EAAAA,IAAS,IAE3BwqG,GAAoBpqG,EAAAA,EAAAA,IAAgB,CAACM,EAAG3R,KAC5C,MAAM,WACJgX,EAAU,QAAE0lG,EAAO,OAAE/rG,EAAM,OAAEW,GAC3Bq7B,EACJ,GAAK31B,EACL,OAAQ0lG,GACN,IAAK,UACHJ,EAAe,CAAEhrG,OAAQA,EAAS0F,aAAYhX,WAC9C,MACF,IAAK,QACHmoD,EAAY,CACV/hB,QAASpvB,EAAW,GAAIrG,OAAQA,EAAS3Q,WAG/C,KAGK07G,EAAkBC,IAAkBh8G,EAAAA,EAAAA,KAAQ,KACjD,IAAKgtC,EAAO,MAAO,MAAC/sC,EAAW,GAC/B,MAAMg8G,EAAejvE,EAAMkvE,SAAS/6G,OAAS,EAC7C,MAAO,CAAC6rC,GAAOkvE,SAASD,GAAeA,EAAa,GACnD,CAACjvE,IAEEikC,GAAkBv/D,EAAAA,EAAAA,IAAgB,KACtCmrG,GAAyB,IAGrB7+C,GAAmBtsD,EAAAA,EAAAA,IAAgB,KACvCkrG,GAAkB,IAGdh3G,GAAS5F,EAAAA,EAAAA,KAAQ,KACrB,IAAKgtC,EACH,OAGF,MAAMovE,EAAchsG,QAAQ2rG,GAAkBt1G,UAE9C,OACErF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,0BACZi9G,EACC56G,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACLmU,UAAW3X,EAAK,QAChBH,QAAS6xE,GAET7vE,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAGbvC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACLmU,UAAW3X,EAAK,SAChBH,QAAS4+D,GAET58D,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGfvC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,cD1GgD,WC0Gd86G,GD1GgO,aC2G/Rh7G,EAAAA,GAAAC,cAAA,MAAItC,WAAWuC,EAAAA,GAAAA,GD3G8N,WC2GjM06G,GD3GuN,aC4GhQD,GAAkB/8G,QACfO,EAAwB,UAAnBytC,GAAO+vE,QAAsB,cAAgB,UAAYhB,GAAkBv1G,OAErF41G,GACCh7G,EAAAA,GAAAC,cAAA,QAAMtC,UDhH6S,YCgHhRg9G,EAAiBt1G,WAGpD,GAEP,CAAClH,EAAMytC,EAAOgvE,EAAgBD,GAAkB/8G,QAAS+8G,GAAkBt1G,SAAUs1G,GAAkBv1G,QAEpGw2G,GAAmBtrG,EAAAA,EAAAA,IAAiBM,IACxC8qG,EAAQ9qG,EAAEC,OAAOH,MAAM,KAGzBjS,EAAAA,EAAAA,KAAU,KACR,IAAKmtC,EAAO,OACZ,MAAMjK,EAAQv7B,SAASoC,cAA4B,IAAGyyG,GAAAA,SAA8B96G,MACpF,IAAKwhC,EAAO,OAEZ,MAAM3zB,EAAS2zB,EAAM8f,cACrBtmC,EAAAA,EAAAA,KAAgB,KACds/F,EAAc/sG,QAASzD,MAAM+D,OAAU,GAAEA,KAAU,GACnD,GACD,CAAC49B,IAEJ,MAAMsvE,GAAuB5qG,EAAAA,EAAAA,IAAgB,KAC3C,MAAMqxB,EAAQv7B,SAASoC,cAA4B,IAAG2yG,GAAAA,SAA0Bh7G,OAEhFuuC,EAAAA,EAAAA,KAAe,KACb,MAAM1gC,EAAS2zB,EAAM8f,cACrBtmC,EAAAA,EAAAA,KAAgB,KACds/F,EAAc/sG,QAASzD,MAAM+D,OAAU,GAAEA,EAnH3B,MAmHqD,GACnE,GACF,IAGE6tG,GAAiCvrG,EAAAA,EAAAA,IAAgB,KACrDorG,EAAQ,IACRF,GAAkB,IAGdM,GAA2BxrG,EAAAA,EAAAA,IAAgB,KAC/C,MAAM,WACJ2F,EAAU,QAAE0lG,EAAO,OAAE/rG,EAAM,OAAEW,GAC3Bq7B,EACJ,OAAQ+vE,GACN,IAAK,UACHJ,EAAe,CACbhrG,OAAQA,EAAS0F,aAAYhX,OAAQ07G,GAAkB17G,OAAQkR,YAAa8H,IAE9E,MACF,IAAK,QACHmvC,EAAY,CACV/hB,QAASpvB,IAAa,GAAIrG,OAAQA,EAAS3Q,OAAQ07G,GAAkB17G,OAAQkR,YAAa8H,IAIhG4jG,GAAgC,IAGlC,OACE77G,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRG,OAAQA,EACRK,QAASg3G,EACT92G,iBD9KyD,WC+KzDpH,WAAWuC,EAAAA,GAAAA,GD/KyB,WC+KsB,UAAnB0rC,GAAO+vE,SAAuB,yBAErE37G,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACT78B,KAAK,QACL5E,UDnL+U,WCoL/UyZ,IAAKqjG,EACLp7E,UAAWu7E,EACX/gE,QAASqhE,GAETl7G,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACbw6G,GAAkB/8G,QACfoC,EAAAA,GAAAC,cAAA,MAAItC,UD1LyL,YC0LxJg9G,GAAkBv1G,YAAcvG,EACxE87G,GAAkB/8G,SAASwC,KAAKnB,GAC/Be,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNhqE,gBAAc,EACdiqE,cAAc,OACd19G,UDhMyI,WCiMzIm/E,gBDjMmK,WCkMnKqjB,SAAUlhG,EAAOA,OACjBjB,QAAS08G,GAET16G,EAAAA,GAAAC,cAAA,OAAKtC,UDrMgH,YCqMjFsB,EAAOgZ,SAG9C0iG,GAAkB17G,OACjBe,EAAAA,GAAAC,cAAA,OAAKtC,UDzMyV,YC0M5VqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQC,GAAAA,EAAei4G,OACvBp6G,KAAM,IACNhE,UD7M0Y,WC8M1YyzC,gBAAc,EACdkuD,aAAW,EACXr7F,QAAQ,IAEVjE,EAAAA,GAAAC,cAAC+7G,GAAAA,EAAQ,CACPt4G,GAAG,SACH/F,UDpNkX,WCqNlXoT,MAAO4pG,EAAiBsB,WAAa99G,EAAK,0BAA4BA,EAAK,kBAC3E+S,SAAU0qG,EACVlrG,MAAOuH,EACP2mE,UAhMQ,IAiMRs9B,oBAjMQ,IAiM+BjkG,EAAKlY,QAAQwmF,WACpD41B,mBAAiB,IAEnBn8G,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLN,KAAK,UACL3D,QAAS89G,EACTj5F,SAAW83F,EAAiBsB,gBAA4Bp9G,GAAdoZ,EAAKlY,QAC/C5B,EAAK,qBAGPU,IAGF,I,4BCtOZ,MC+KA,IAAerB,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU05B,YACT,MAAMyxB,GAAQuD,EAAAA,EAAAA,KAAY1uD,IAExBkqG,UAAWC,EAAmB,aAC9BC,EACAC,WAAYC,EAAgB,gBAC5B12C,IACE22C,EAAAA,EAAAA,KAAkBvqG,EAAQmrD,IAAU,CAAC,EAGzC,MAAO,CACLA,QACAg/C,sBACAC,eACAE,mBACA12C,kBACAhW,IARUlkB,GAAQsG,EAAAA,EAAAA,KAAWhgC,EAAQ05B,GAAO8nB,YAAS70D,EASrD03B,cAAerkB,EAAOqkB,cACvB,GAnBetkB,EAxIoCyqG,EACtD9wE,QACAyxB,QACAg/C,sBACAC,eACAE,mBACA12C,kBACAhW,UAEA,MAAM,gCACJ6sD,EAA+B,gBAAE5O,EAAe,8BAAE6O,IAChD7sG,EAAAA,EAAAA,MACE5R,GAAOC,EAAAA,GAAAA,KACPiG,EAAS2K,QAAQ48B,IAEjB,UAAEi5B,EAAS,QAAEn+D,EAAO,MAAEgtD,GAAU9nB,GAAS,CAAC,EAG1ChgB,GAAere,EAAAA,EAAAA,IAAuB,MAEtCsvG,GAAwBC,EAAAA,GAAAA,GAAoBz/C,EAAOm/C,GAEnDO,GAAkBzsG,EAAAA,EAAAA,IAAgB,KAClCu0D,GAAanR,GAAShtD,IACxBk2G,EAA8B,CAC5B/3C,YACAn+D,YAEFi2G,IACF,IAGI//C,GAAmBtsD,EAAAA,EAAAA,IAAgB,KACvCqsG,IACI93C,GACFkpC,EAAgB,CACdlpC,YACAzzC,MAAO,CACLw2C,UAAW,0BACXC,UAAW,CAAE3X,MAAO,mBAG1B,IAGI1rD,GAAS5F,EAAAA,EAAAA,KAAQ,KACrB,GAAKgtC,EAIL,OACE5rC,EAAAA,GAAAC,cAAA,OAAKtC,UD1FoG,YC2FvGqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACLmU,UAAW3X,EAAK,SAChBH,QAAS4+D,GAET58D,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAAA,MAAItC,WAAWuC,EAAAA,GAAAA,GAAe,cDpG8B,aCqGzD/B,EAAK,oBAEJ,GAEP,CAACA,EAAMytC,IAEJoxE,GAAep+G,EAAAA,EAAAA,KAAQ,KAC3B,GAAK80D,GAAUhtD,GAAYm+D,EAC3B,OAAOo4C,EAAAA,EAAAA,IAAiCvpD,EAAOhtD,EAAQ,GACtD,CAACgtD,EAAOhtD,EAASm+D,IAEdq4C,GAAch9G,EAAAA,GAAAA,GDhHkK,WAAkF,WCmHtQs8G,GDnH+M,WCoH/M12C,GDpH0O,WCqH1O02C,GAAoBH,GDrHuQ,YCwH7R,OACEr8G,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJo1E,UAAWxuD,EACXvnB,OAAQA,EACRG,OAAQA,EACRK,QAAS+3D,EACTj/D,UD9HiB,WC+HjBoH,iBD/HsC,YCiItC/E,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GDlI2H,WCkIlF,eAEpDi9G,OAAK,EACLlzG,OAAO62C,EAAAA,GAAAA,GACJ,oBAAmBw7D,IACpBx2C,GAAoB,6BAA4BA,MAGlD9lE,EAAAA,GAAAC,cAAA,OACEtC,UAAWu/G,EACXjzG,MAAO4yG,EAAyB,wBAAuBA,SAA0Bh+G,IAElFm+G,GACCh9G,EAAAA,GAAAC,cAACm9G,GAAAA,EAAO,CACNp8G,IAAK0yD,EACLhtD,QAASs2G,EACTlqG,SAAUqqC,EAAAA,GACVvpC,gBAAgB,SAChBypG,YAAU,EACVC,WAAS,EACTC,gBAAiB,EACjBC,aAAa,EACbC,gBAAc,EACdC,eAAa,EACbC,cAAc,EACdC,wBAAwB,EACxBC,uBAAuB,KAI7B79G,EAAAA,GAAAC,cAAA,OAAKtC,UDhKgF,YCiKnFqC,EAAAA,GAAAC,cAAA,KAAGtC,UDjKqJ,YCkKrJQ,EAAK,yBAA0B,CAAE8zC,MAAM3G,EAAAA,EAAAA,IAAgBwkB,MAE1D9vD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLN,KAAK,UACL3D,QAAS++G,GAER5+G,EAAK,0BAGJ,K,4BClIZ,MAkIA,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAMG,GAAWC,EAAAA,EAAAA,KAAeJ,IAC1B,kCAAE8gC,GAAsC3gC,EAG9C,MAAO,CACL2gC,oCACA8qE,aAJmB5rG,EAAOhT,OAAO6+G,QAAQj8G,QAAU,EAKnDk8G,wBAJ8BhvG,QAAQqD,EAAS4rG,mBAKhD,GAVehsG,EAlIyCisG,EAC3DtyE,QAAOoH,oCAAmCgrE,0BAAyBF,mBAEnE,MAAM,+BACJK,EAA8B,oBAC9BC,EAAmB,gBACnBrQ,EAAe,iBACfhqE,EAAgB,wCAChBs6E,IACEtuG,EAAAA,EAAAA,MACE5R,GAAOD,EAAAA,EAAAA,KACPmG,EAAS2K,QAAQ48B,IAEhBxD,EAAS0mB,EAAaC,IAAiBvwD,EAAAA,EAAAA,MAE9CC,EAAAA,EAAAA,KAAU,KACJ4F,GACFyqD,GACF,GACC,CAACzqD,EAAQyqD,IAEZ,MAAM,QACJpoD,EAAO,OAAEo5B,EAAM,UAAE+kC,EAAS,gBAAEy5C,GAC1B1yE,GAAS,CAAC,GAER,oBACJ2yE,GACED,GAAmB,CAAC,GAGtBE,mBAAoBC,EACpBC,cAAeC,EACfC,kBAAmBC,EACnBC,eAAgBC,EAChBC,uBAAwBC,IACtBC,EAAAA,GAAAA,GAA2BX,GAAuB,EAAGP,EAAyBF,GAE5EzgF,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClC6tG,IACIt5C,GACFkpC,EAAgB,CACdlpC,YACAzzC,MAAO,CACLw2C,UAAW,0BACXC,UAAW,CAAE3X,MAAO,mBAG1B,IAGIivD,GAAa7uG,EAAAA,EAAAA,IAAgB,CAAC5M,EAAYoP,KAC9C,GAAIpM,GAAWm+D,EAAW,CACxB,MAAM3yD,GAAS0+B,EAAAA,EAAAA,MACT1a,GAAOQ,EAAAA,EAAAA,KAAWxkB,EAAQxO,GAChC06G,EAAoB,CAClB7tG,OAAQ7M,EACRoP,SAAUA,GAAYqqC,EAAAA,GACtBz5C,GAAIgD,EAAQtH,OAAOsE,GACnBu0E,QAASvxE,EAAQtH,OAAO64E,UAErBsmC,GACHx6E,EAAiB,CACfr9B,QAASvI,EAAK,kBAAkB63B,EAAAA,GAAAA,IAAa73B,EAAM+3B,MAGvD63E,EAAgB,CACdlpC,YACAzzC,MAAO,CACLw2C,UAAW,2BAGfu2C,IACAE,EAAwC,CAAE5jG,UAAM5b,GAClD,KAGImwD,GAAwB1+C,EAAAA,EAAAA,IAAgB,CAAC5M,EAAYoP,KACzDurG,EAAwC,CAAE5jG,KAAM,CAAE7K,OAAQlM,EAAIoP,aAAa,IAGvEssG,GAAoC9uG,EAAAA,EAAAA,IAAgB,KACpDguG,GACFW,EAAoCE,EAAYb,EAAgB1uG,OAAQ0uG,EAAgBxrG,SAC1F,IAGIusG,GAAyC/uG,EAAAA,EAAAA,IAAgB,KAC7DmuG,IACAJ,EAAwC,CAAE5jG,UAAM5b,GAAY,KAG9DJ,EAAAA,EAAAA,KAAU,KACJ6/G,GACFc,GACF,GACC,CAACd,IAEJ,MAAMpsG,GAAS0+B,EAAAA,EAAAA,MACT1a,EAAOooF,GAAkB5nF,EAAAA,EAAAA,KAAWxkB,EAAQosG,EAAgB1uG,aAAU/Q,EACtEygH,EAAWppF,GAAOF,EAAAA,GAAAA,IAAa73B,EAAM+3B,QAAQr3B,EAEnD,GAAKwF,GAAW+jC,EAIhB,OACEpoC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACutD,GAAe,CACdnpD,OAAQA,EACR2kD,kBAAmB7qD,EAAK,UACxB2hC,OAAQA,EACR4tB,kBAAmBsB,EACnBnqD,QAASw4B,EACTxtB,oBAAqBk/C,EACrB3F,oBAAkB,IAEpBppD,EAAAA,GAAAC,cAACs/G,GAAAA,EAA2B,CAC1Bl7G,OAAQ2uC,EACRnuC,QAASw6G,EACTG,SAAUF,EACVG,oBAAqBlB,GAAuB,EAC5CmB,cAAe,EACfd,kBAAmBC,EACnBC,eAAgBC,EAChBv5E,eAAgBm5E,IAEjB,KClKDgB,GAAsD,CAC1D,aACA,YACA,aACA,aACA,kBACA,aACA,aACA,WACA,eACA,YAEIC,GAAgD,IAAID,GAAmB,aAE9D,SAASE,GAAqBC,GAC3C,MAAOC,EAAaC,IAAkB9vG,EAAAA,EAAAA,IAA8B,CAAC,IAC9D+vG,EAAuBC,IAA4BhwG,EAAAA,EAAAA,KAAS,IAC5D2mB,EAAWspF,IAAgBjwG,EAAAA,EAAAA,KAAS,IAE3CzR,EAAAA,EAAAA,KAAU,KACRuhH,EAAeF,GAAsB,CAAC,GACtCI,GAAyB,GACzBpxG,YAAW,KACTqxG,GAAa,EAAM,GAxBoB,IAyBD,GACvC,CAACL,IAEJ,MAAMM,GAAyB38G,EAAAA,EAAAA,KAAamN,IAC1C,MAAQrO,KAAM89G,GAAezvG,EAAEC,OAEzBtO,EAAO89G,EAEb,SAASC,EAA0B5vG,GACjC,OAAOA,QAAQ7R,CACjB,CAEA,MAAM0hH,EAAiBR,EAEvB,IAAIS,EAAsC,IACrCD,EACH,CAACh+G,GAAO+9G,EAA0BC,EAAeh+G,OACpC,iBAATA,GAA2B,CAC7Bk+G,SAAUH,EAA0BC,EAAeh+G,MAIvD,MAAMm+G,EAAaA,KACjB,MAAMC,EAAmBhB,GAAkBv/G,KAAKY,GAAQw/G,EAAex/G,KACnE2/G,EAAiBtV,MAAMuV,IAAOA,IAChCJ,EAAiB,IACZA,EACHK,eAAWhiH,GAEJ8hH,EAAiBpQ,MAAMvhG,WAChCwxG,EAAiB,IACZA,EACHK,WAAW,GAEf,EAGW,cAATt+G,EACFm+G,IAEAF,EAAiB,IACZA,KACCb,GAAkB5gH,QAAO,CAACisD,EAAKhqD,IACjCw/C,OAAOsgE,OAAO91D,EAAK,CAAE,CAAChqD,GAAMw/G,EAAeK,aAC1C,CAAC,IAKK,eAATt+G,IAA0Bi+G,EAAeO,YAAcP,EAAeQ,YACxER,EAAiB,IACZA,EACHO,YAAY,IAIH,cAATx+G,IAAyBi+G,EAAeO,YAAcP,EAAeQ,YACvER,EAAiB,IACZA,EACHQ,eAAWniH,IAIF,cAAT0D,GACFm+G,IAGF,MAAMO,EAAerB,GAAoBrP,OAAOvvG,GAAQw/G,EAAex/G,KACvEw/G,EAAiB,IACZA,EACHS,eAAcA,QAAsBpiH,GAGtCmhH,EAAeQ,GAEfN,GAA0BJ,GAAsBt/D,OAAO2K,KAAKq1D,GAAgBnV,MAAM76E,IAChF,MAAMxvB,EAAMwvB,EACZ,OAAOxhB,QAAQ8wG,EAAmB9+G,MAAUgO,QAAQwxG,EAAex/G,GAAK,IACvE,GACF,CAAC8+G,EAAoBC,IAElBmB,GAAmBz9G,EAAAA,EAAAA,KAAY,KACnCu8G,EAAeF,GAAsB,CAAC,GACtCI,GAAyB,EAAM,GAC9B,CAACJ,IAEJ,MAAO,CACLC,cACAlpF,YACAopF,wBACAG,yBACAD,eACAe,mBAEJ,CCvFA,MAAMC,GAAmD,CACvD,aAAc,aAAc,eAC5B,aAAc,WAAY,aAAc,kBAAmB,aAAc,aAsP3E,IAAe3jH,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,EAAOnC,GAAS4hC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,QAAU1R,EAC7CuiH,EAAW1uG,IAAQq7C,EAAAA,EAAAA,KAAmB77C,EAAQQ,EAAKhP,IAGzD,MAAO,CACLgP,OACA2uG,cAJoBryG,QAAQoyG,GAAUE,cAKvC,GATervG,EAnPsCsvG,EACxD7uG,OACA8uG,sBACAC,yBACAJ,gBACAtB,cACAK,yBACAziH,YACA+jH,mBACAC,oBACAC,eACAC,uBACAC,sBAEA,MAAM,iBACJ/9E,IACEh0B,EAAAA,EAAAA,OAEE,QAAEy7C,GAAY94C,GAAQ,CAAC,EAEvBvU,GAAOD,EAAAA,EAAAA,KAEPsyC,GAAW5xC,EAAAA,EAAAA,KAAQ,IAAM8T,IAAQm+E,EAAAA,EAAAA,IAAan+E,IAAO,CAACA,IACtDqvG,EAAwCV,GAAiB7wE,EAEzDwxE,GAA0BpjH,EAAAA,EAAAA,KAAQ,IAC/BuiH,GAAkBpiH,QAAO,CAACw2B,EAAOv0B,KACjC++G,EAAY/+G,KACfu0B,GAAS,GAEJA,IACN,IACF,CAACwqF,IAEEkC,GAA0B3xG,EAAAA,EAAAA,IAAiBM,KAC/C7I,EAAAA,EAAAA,GAAU6I,GACV6wG,GAAwBD,EAAoB,IAGxCU,GAAsB5xG,EAAAA,EAAAA,IAAgB,KAC1CyzB,EAAiB,CAAEr9B,QAASvI,EAAK,sCAAuC,IAG1E,OACE6B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,YACLkoC,SAAUs1E,EAAYiB,UACtBjwG,MAAO5S,EAAK,wBACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,gBAG3D7hH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,YACLkoC,SAAUs1E,EAAYc,UACtB9vG,MAAO5S,EAAK,6BACZikH,UAAY,GAAEJ,KAA2Bb,GAAkBphH,SAC3DoiH,UAAQ,EACRL,gBAAiBA,EACjBO,UAAWb,EAAsB,KAAO,OACxCtwG,SAAUkvG,EACVkC,aAAcL,EACdp/F,SAAUg/F,GAAwBA,EAAqB,gBAG3D7hH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWgkH,GACd3hH,EAAAA,GAAAC,cAAA,OACEtC,UAAWA,GAEXqC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,aACLkoC,SAAUs1E,EAAYwC,WACtBxxG,MAAO5S,EAAK,8BACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,iBAI3D7hH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,aACLkoC,SAAUs1E,EAAYyC,WACtBzxG,MAAO5S,EAAK,8BACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,iBAI3D7hH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,eACLkoC,SAAUs1E,EAAY0C,eAAiB1C,EAAYU,SACnD1vG,MAAO5S,EAAK,gCACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,mBAI3D7hH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,aACLkoC,SAAUs1E,EAAY2C,WACtB3xG,MAAO5S,EAAK,6BACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,iBAI3D7hH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,WACLkoC,SAAUs1E,EAAY4C,SACtB5xG,MAAO5S,EAAK,6BACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,eAI3D7hH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,aACLkoC,SAAUs1E,EAAY6C,WACtB7xG,MAAO5S,EAAK,8BACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,iBAI3D7hH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,kBACLkoC,SAAUs1E,EAAY8C,gBACtB9xG,MAAO5S,EAAK,6BACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,sBAI3D7hH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,aACLkoC,SAAUs1E,EAAYgB,WACtBhwG,MAAO5S,EAAK,8BACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,iBAI3D7hH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,YACLkoC,SAAUs1E,EAAY+C,UACtB/xG,MAAO5S,EAAK,6BACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,kBAK/D7hH,EAAAA,GAAAC,cAAA,OAAKtC,UAAW+jH,GACd1hH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,cACLkoC,SAAUs1E,EAAYgD,YACtBhyG,MAAO5S,EAAK,+BACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,kBAG3D7hH,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,iBACtD5jH,QAAS+jH,EAAwCG,OAAsBrjH,GAEvEmB,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,cACLkoC,SAAUs1E,EAAYiD,YACtBjyG,MAAO5S,EAAK,+BACZ0kB,SAAUg/F,EAAuBA,EAAqB,eAClDE,EACJI,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,KAGdpgH,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,iBACtD5jH,QAAS+jH,EAAwCG,OAAsBrjH,GAEvEmB,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,aACLkoC,SAAUs1E,EAAYkD,WACtBlyG,MAAO5S,EAAK,8BACZgkH,UAAQ,EACRL,gBAAiBA,EACjBj/F,SAAUg/F,EAAuBA,EAAqB,cAClDE,EACJ7wG,SAAUkvG,KAGb50D,GACCxrD,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY0hH,GAAgB,kBACzD5hH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,eACLkoC,SAAUs1E,EAAYmD,aACtBnyG,MAAO5S,EAAK,0BACZgkH,UAAQ,EACRL,gBAAiBA,EACjB5wG,SAAUkvG,EACVv9F,SAAUg/F,GAAwBA,EAAqB,oBAK9D,K,gBCxRP,SAAqI,WAArI,GAAuL,WC+dvL,IAAerkH,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,mBACJixG,IACE7wG,EAAAA,EAAAA,KAAeJ,GACb+D,EAAaktG,GAAoBltG,WACjC1F,EAAS4yG,GAAoB5yG,QAC7B,gBAAE6yG,IAAoBC,EAAAA,EAAAA,KAAgCnxG,EAAQ+D,GAC9DvD,EAAOnC,GAAS4hC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,QAAU1R,EAC7CivD,EAAep7C,IAAQq7C,EAAAA,EAAAA,KAAmB77C,EAAQQ,EAAKhP,IACvD49G,EAAexzD,GAAcwzD,aAC7B3rF,EAAY3mB,QAAQ0D,KAASkjB,EAAAA,EAAAA,IAAcljB,GAC3C4wG,EAAet0G,QAAQ0D,KAAS89E,EAAAA,EAAAA,IAAiB99E,GACjDwD,EAAaitG,GAAoBjtG,WACjCtE,EAAYuxG,GAAoBvxG,UAChC2xG,EAAc7wG,IAAQV,EAAAA,EAAAA,IAASU,EAAKhP,KACtCyrD,EAAAA,EAAAA,KAAuBjd,EAAAA,EAAAA,KAAWhgC,GAAQsxG,EAAAA,EAAAA,IAAqB9wG,UAC/D7T,EACE4kH,EAAUz0G,QAAQ0D,KAASgxG,EAAAA,EAAAA,IAAYhxG,EAAKhP,MAAOigH,EAAAA,EAAAA,KAAUzxG,EAAQQ,EAAKhP,KAC1EiuF,EAAmB7jC,GAAc6jC,iBACjCiyB,EAAclxG,IAAQmxG,EAAAA,EAAAA,IAAiBnxG,EAAM,YAC7CoxG,EAAYpxG,GAAMoxG,UAClBC,EAAgBrxG,GAAOsxG,EAAAA,EAAAA,KAAoB9xG,EAAQQ,QAAQ7T,EAC3DolH,EAAgCvxG,IAAQwxG,EAAAA,EAAAA,IAAiBxxG,KAAU0wG,GAAoBW,EACvFI,EAAmBzxG,KAAS89E,EAAAA,EAAAA,IAAiB99E,IAASijB,GAE5D,MAAO,CACLjjB,OACAijB,YACA2tF,eACArtG,aACAsgB,cAAerkB,EAAOqkB,cACtB6sF,iBAAkBltG,GAAcktG,EAChCG,cACAU,+BACAE,mBACAxyB,mBACA8xB,UACAG,cACAtC,eACAprG,aACA4tG,YACAlyG,YACD,GA3CeK,EAjZkCmyG,EACpD//G,SACAqO,OACAijB,YACA2tF,eACAptG,aACAqgB,gBACAtgB,aACA6tG,YACAV,kBACAG,cACAU,+BACAE,mBACAvyG,YACA6xG,UACA9xB,mBACAiyB,cACAtC,mBAEA,MAAM,wBACJ+C,EAAuB,eACvBC,EAAc,kBACdC,EAAiB,iBACjBC,EAAgB,wBAChBC,EAAuB,sBACvBC,EAAqB,6BACrBC,EAA4B,yBAC5BC,IACE70G,EAAAA,EAAAA,MAEE6lD,GAAap9B,EAAAA,EAAAA,GAAsBn0B,GAEnCpG,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MAEP,YACJ2hH,EAAW,sBAAEE,EAAqB,uBAAEG,EAAsB,iBAAEc,GAC1DrB,GAAqBntG,GAAMmyG,sBAExBC,EAAoBC,IAAyB70G,EAAAA,EAAAA,SAA+BrR,IAC5EmmH,EAAcC,IAAmB/0G,EAAAA,EAAAA,SAA+BrR,IAChEqmH,EAAqBC,IAA0Bj1G,EAAAA,EAAAA,SAA+BrR,IAC9E2iH,EAAqBC,IAA0BvxG,EAAAA,EAAAA,KAAS,IACxDk1G,EAA4BC,IAAiCn1G,EAAAA,EAAAA,KAAS,IACtEo1G,EAAoBC,IAAyBr1G,EAAAA,EAAAA,KAAS,GAEvDs1G,GAAW5mH,EAAAA,EAAAA,KAAQ,KACvB,GAAI+2B,IAAc1f,IAAevD,EAC/B,OAAO8zB,GAAAA,EAET,MAAMt0B,GAAS0+B,EAAAA,EAAAA,MACT60E,GAAcC,EAAAA,EAAAA,KAA+BxzG,EAAQQ,EAAKhP,GAAIuS,GACpE,OAAOwvG,GAAcv/E,EAAAA,GAAAA,IAAOu/E,GACzB3lF,QAAQ5J,GAASA,GAAMxyB,KAAOgP,GAAMhP,IAAMwyB,GAAMxyB,KAAO49G,IAAgB96E,GAAAA,CAAgB,GACzF,CAAC9zB,EAAMijB,EAAW2rF,EAAcrrG,IAE7B0vG,IAAmCr1G,EAAAA,EAAAA,IAAgB,IAChDk1G,EAASplH,KAAKwlH,IACZ,CACLl1G,MAAQ,GAAEk1G,EAAOliH,KACjBqN,OAAOilB,EAAAA,GAAAA,IAAa73B,EAAMynH,IAAW,GACrCjhF,YAAa3kC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACt0B,KAAK,QAAQu0B,KAAM0vF,UAKxCC,IAAsBjnH,EAAAA,EAAAA,KAAQ,IAC3B4mH,EAAS1lF,QAAQ5J,GAASA,EAAKxyB,KAAO49G,GAAgBprF,EAAKxyB,KAAO6yB,KACxE,CAACivF,EAAUjvF,EAAe+qF,IAEvBwE,IAAuBlnH,EAAAA,EAAAA,KAAQ,IAC5B4mH,EAAS1lF,QAAQ5J,GAASA,EAAKxyB,KAAO6yB,GAAiBL,EAAKxyB,KAAO49G,KACzE,CAACkE,EAAUjvF,EAAe+qF,IAEvByE,IAAgBnnH,EAAAA,EAAAA,KAAQ,KAC5B,MAAMonH,EAAsBR,EAASna,MAAMn1E,GAASA,EAAKxyB,KAAO6yB,IAGhE,OAF2BqtF,GAAeoC,EAGjCx/E,GAAAA,EAGFg/E,EAAS1lF,QAAQ5J,IACtB,MAAM+vF,EAAUt0B,IAAmBz7D,EAAKxyB,IACxC,OAAOogH,IAAcmC,CAAO,GAC5B,GACD,CAACT,EAAU1B,EAAWvtF,EAAeqtF,EAAajyB,IAM/Cu0B,IAJ8BtnH,EAAAA,EAAAA,KAAQ,IACnCoQ,QAAQ62G,GAAoB9lH,QAAU+lH,GAAqB/lH,QAAUgmH,GAAchmH,SACzF,CAAC8lH,GAAqBC,GAAsBC,OAGzC3C,IAAoBltG,GAAcotG,EAElC6C,IAAYvnH,EAAAA,EAAAA,KAAQ,KACnB4mH,GAAYtvG,EAAmB,CAAC,GAC9BkwG,EAAAA,GAAAA,IAA0BZ,GAAWtvF,GAAS,CAACA,EAAKxyB,IAAIsyB,EAAAA,GAAAA,IAAa73B,EAAM+3B,OACjF,CAAChgB,EAAY/X,EAAMqnH,IAEhBa,IAAqCznH,EAAAA,EAAAA,KAAQ,IAC1C,CACL,CACE8R,MAAOuF,GAAcuvG,EAASzlH,QAAU,EAAI,OAASylH,IAAW,IAAI9hH,GACpEqN,MAAO9S,EAAQ,mBACfqoH,cAAerwG,GAAcuvG,EAASzlH,QAAU,EAAI,IAC/C4lH,KAAmC7lF,QAAQn/B,GAAQA,EAAI+P,QAAU4wG,GAC/D3gH,EAAI+P,QAAU6lB,UACjB13B,KAGP,CAACoX,EAAYuvG,EAAUvnH,EAASqjH,EAAc/qF,IAE3CgwF,IAAuC3nH,EAAAA,EAAAA,KAAQ,IAC5C,CACL,CACE8R,MAAOuF,GAAcuvG,EAASzlH,QAAU,EAAI,aAAeylH,IAAW,IAAI9hH,GAC1EqN,MAAOkF,GAAcuvG,EAASzlH,QAAU,EACpC9B,EAAQ,sBACRA,EAAQ,gBAAiBuiD,OAAOuK,OAAOo7D,IAAW,IACtDG,cAAerwG,GAAcuvG,EAASzlH,QAAU,EAAI,IAC/C4lH,KAAmC7lF,QAAQn/B,GAAQA,EAAI+P,QAAU4wG,GAC/D3gH,EAAI+P,QAAU6lB,UACjB13B,KAGP,CAACoX,EAAYuvG,EAAUvnH,EAASkoH,GAAW7E,EAAc/qF,IAEtDiwF,IAAoC5nH,EAAAA,EAAAA,KAAQ,IACzC,CACL,CACE8R,MAAOuF,GAAcuvG,EAASzlH,QAAU,EAAI,MAAQylH,IAAW,IAAI9hH,GACnEqN,MAAOkF,GAAcuvG,EAASzlH,QAAU,EACN9B,EAA7BmnH,EAAqC,sBAAiC,kBACtEA,EAA6BnnH,EAAQ,sBACpCA,EAAQ,YAAauiD,OAAOuK,OAAOo7D,IAAW,IACpDG,cAAerwG,GAAcuvG,EAASzlH,QAAU,EAAI,IAC/C4lH,WACD9mH,KAGP,CAACumH,EAA4BnnH,EAASgY,EAAYuvG,EAAUW,KAEzDM,IAA0Bn2G,EAAAA,EAAAA,IAAgB,KAC9C+0G,GAA+BrmD,IAAUA,GAAK,IAG1C0nD,IAA0Bp2G,EAAAA,EAAAA,IAAgB,CAACuuC,EAAmB8nE,KAClE,IAAKj0G,EAAM,OAAO8zB,GAAAA,EAClB,MAAMt0B,GAAS0+B,EAAAA,EAAAA,MACf,OAAO+1E,EAAsB7mF,QAAQ8mF,IACnC,MAAM16E,GAAS26E,EAAAA,EAAAA,KAAwB30G,EAAQQ,EAAKhP,GAAIkjH,GACxD,OAAO16E,GAAU2S,EAAQ1sB,SAAS+Z,EAAOxoC,GAAG,GAC5C,IAGEojH,IAAmBx2G,EAAAA,EAAAA,IAAiBy2G,IACxCvmE,OAAOC,QAAQsmE,GAAiBxnH,SAAQ,EAAEygC,EAAQgnF,MAC5CA,EAAcjnH,QAChBwkH,EAAkB,CAChB0C,cAAejnF,EACfzvB,OAAQmC,EAAMhP,GACduS,WAAY+wG,GAEhB,GACA,IAGEE,IAAuB52G,EAAAA,EAAAA,IAAiB62G,IAC5C7C,EAAe,CAAEruG,WAAYkxG,EAAuB7B,oBAAoB,GAAO,IAG3E8B,IAA8B92G,EAAAA,EAAAA,IAAiB+2G,IAC9C30G,GACL20G,EAAW9nH,SAASqQ,IAClBg1G,EAAyB,CAAEh1G,SAAQW,OAAQmC,EAAKhP,IAAK,GACrD,IAGE4jH,IAAqBh3G,EAAAA,EAAAA,IAAiBi3G,IAC1CA,EAAmBhoH,SAASygC,IAC1BwkF,EAAiB,CAAEj0G,OAAQmC,EAAMhP,GAAIs8B,UAAS,GAC9C,IAGEwnF,IAAqCl3G,EAAAA,EAAAA,IAAiBi3G,IAC1DA,EAAmBhoH,SAASygC,IAC1B2kF,EAA6B,CAC3Bp0G,OAAQmC,EAAMhP,GACds8B,SACAynF,aAAc1H,GACd,GACF,IAGE2H,IAA0Bp3G,EAAAA,EAAAA,IAAgB,KAC9C,GAAKoC,GAASuD,EAAd,CAGA,GADArE,MACIsE,EACFuuG,EAAwB,CAAExuG,oBACrB,GAAIiwG,GAAkB,CAC3B,GAAIhB,EAAqB,CACvB,MAAMhzG,GAAS0+B,EAAAA,EAAAA,MACTy2E,EAAanC,EAAoBplF,QAAQ7gC,IAAY0oB,OAAOggG,MAAMhgG,OAAO1oB,MACzE6xD,EAAc76C,EAAYlX,QAAiC,CAACisD,EAAK47D,KACrE,MAAM1wF,GAAO2wF,EAAAA,EAAAA,KAAwB30G,EAAQQ,EAAKhP,GAAIkjH,GAOtD,OANI1wF,GAAQmxF,EAAWl1F,SAAS+D,EAAKxyB,MAC9BsnD,EAAI90B,EAAKxyB,MACZsnD,EAAI90B,EAAKxyB,IAAM,IAEjBsnD,EAAI90B,EAAKxyB,IAAIhE,KAAKioB,OAAOi/F,KAEpB57D,CAAG,GACT,CAAC,GAEJ87D,GAAiBh2D,EACnB,CAEA,GAAIg0D,EAAoB,CACtB,MAAMuC,EAAavC,EAAmBhlF,QAAQ7gC,IAAY0oB,OAAOggG,MAAMhgG,OAAO1oB,MAC9EmoH,GAA4BC,EAC9B,CAEA,GAAIrC,IAAiB/E,EAAuB,CAC1C,MAAMoH,EAAarC,EAAallF,QAAQ7gC,IAAY0oB,OAAOggG,MAAMhgG,OAAO1oB,MACxEqoH,GAAmBD,GACnB,MAAMF,EAAwBT,GAAwBW,EAAYpxG,GAClEixG,GAAqBC,EACvB,CAEA,GAAInC,GAAgB/E,EAAuB,CACzC,MAAMoH,EAAarC,EAAallF,QAAQ7gC,IAAY0oB,OAAOggG,MAAMhgG,OAAO1oB,MACxEuoH,GAAmCH,EACrC,CAEKnC,GAAwBJ,GAAuBE,GAClDV,EAAe,CAAEruG,aAAYqvG,sBAEjC,MACEhB,EAAe,CAAEruG,aAAYqvG,uBAG/BjB,IACAK,GAhDgC,CAgDT,IAGnB3K,IAAiBzpG,EAAAA,EAAAA,IAAgB,KACrC+zG,GAAyB,IAuF3B,OApFA5lH,EAAAA,EAAAA,KAAU,MACH4F,GAAUuxD,IACbuvD,OAAuBtmH,GACvBkmH,OAAsBlmH,GACtBomH,OAAgBpmH,GAChB0mH,GAAsB,GACtB9D,GAAuB,GACvB4D,GAA8B,GAC9BnE,IACF,GACC,CAAC78G,EAAQuxD,EAAYsrD,IA2EtBlhH,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRQ,QAASk1G,GACT/oG,QAASoyG,OAAkBvkH,EAAY6oH,GACvC/pH,UDlamC,YCoanCqC,EAAAA,GAAAC,cAAA,OAAKtC,UDpaY,YCuVjBqC,EAAAA,GAAAC,cAAA,OACEtC,UAAWuoH,IDxV6C,WCyVxD9kH,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAE5BqnH,IACClmH,EAAAA,GAAAC,cAACixC,GAAAA,EAAU,CACTvvC,KAAK,QACLwvC,MAAOq0E,IAGXxlH,EAAAA,GAAAC,cAAA,MAAItC,WAAWuC,EAAAA,GAAAA,GAAegmH,GDjW6C,WAAyB,aCkWjGjoH,EAAQ,kCAAmCgY,GAAYlW,UAoEzDmmH,IACClmH,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,IAAqBlC,EAAQ,4BA9DjD+B,EAAAA,GAAAC,cAAA,OAAKtC,UD1WiM,YC2WpMqC,EAAAA,GAAAC,cAAC2nH,GAAAA,EAAa,CACZhqH,QAASyoH,GACTn1G,SAAUi0G,EACVh0G,SAAU+zG,EACV2C,eAAgB5xG,GAAcuvG,EAASzlH,QAAU,IAElD8lH,IAAqB9lH,OAAS,GAC7BC,EAAAA,GAAAC,cAAC2nH,GAAAA,EAAa,CACZhqH,QAAS2oH,GACTr1G,SAAU6zG,EACV5zG,SAAU2zG,EACV+C,eAAgB5xG,GAAcuvG,EAASzlH,QAAU,IAGpDgmH,IAAehmH,OAAS,GACvBC,EAAAA,GAAAC,cAAC2nH,GAAAA,EAAa,CACZhqH,QAAS4oH,GACTt1G,SAAU+zG,EACV9zG,SAAU6zG,EACV6C,eAAgB5xG,GAAcuvG,EAASzlH,QAAU,KASvDC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GDvYyS,WCwYvTklH,GDxY6V,aC0Y7VplH,EAAAA,GAAAC,cAAA,MAAItC,WAAWuC,EAAAA,GAAAA,GAAeC,GD1Y6H,aC2YxJlC,EAAQ,6BAA8BunH,EAASzlH,SAElDC,EAAAA,GAAAC,cAACshH,GAAsB,CACrBK,cAAY,EACZrxG,OAAQmC,GAAMhP,GACd89G,oBAAqBA,EACrBC,uBAAwBA,EACxBrB,uBAAwBA,EACxBL,YAAaA,EACbpiH,WAAWuC,EAAAA,GAAAA,GDpZiN,WCsZ1NshH,GDtZuX,eC4arXwD,GAAgBpB,EACd5jH,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNt+B,gBAAiB38E,GACjBnC,QAASyoH,IAERxoH,EAAQmnH,EAA6B,uBAAyB,6BAC/DplH,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CACHE,KAAM6iH,EAA6B,KAAO,OAC1CznH,WAAWuC,EAAAA,GAAAA,GAAeC,GAAe,WAG3CklH,GAA8B,KAItCjC,GAAmBK,IAAYyC,KAC/BlmH,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,SAAIgW,GAAcA,EAAWlW,OAAS,EAClC5B,EAAK,+BAAiCA,EAAK,kCAE9C8lH,GACCjkH,EAAAA,GAAAC,cAAA,SAAIhC,EAAQ,8BAA+B,EAAG,MAE/CkmH,GACCnkH,EAAAA,GAAAC,cAAA,SAAIhC,EAAQ,+BAAgC,EAAG,OAIpDmlH,GACCpjH,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPn2D,UAAU,kBACVoT,MAAOwyG,GAAcvhH,EAAAA,GAAAA,GAAW/D,EAAQ,2BAA4BslH,IAChEtlH,EAAQ,0CACZwsC,QAAS66E,EACTvxD,QAASwxD,IAGbvlH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,iBAC7BshH,EDnduP,WAA4B,aCqdnRxhH,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACoP,MAAM,SAAS1T,UAAU,wBAAwBwE,QAAM,EAACnE,QAAS0pH,IACtExB,GAAmBjoH,EAAQ,oBAAsBE,EAAK,WAEzD6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAAS+7G,IAAiB97G,EAAQ,aAGjF,KCrXZ,IAAeT,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMu3G,GAAgB91G,EAAAA,EAAAA,IAASzB,GACzBimB,GAAiBC,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,GAC9CmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAC1BolB,EAAY3mB,QAAQ0D,KAASkjB,EAAAA,EAAAA,IAAcljB,GAC3CmjB,EAAU7mB,QAAQ0D,KAASwxG,EAAAA,EAAAA,IAAiBxxG,GAC5C4wG,EAAet0G,QAAQ0D,KAAS89E,EAAAA,EAAAA,IAAiB99E,GAMvD,MAAO,CACLo1G,gBACAtxF,iBACAb,YACAE,UACAytF,eACAyE,aAXoBD,IAAkBtxF,GAAmB8sF,GAAgBztF,EAYzE0tF,YAXkB7wG,IAAQV,EAAAA,EAAAA,IAASU,EAAKhP,KACtCyrD,EAAAA,EAAAA,KAAuBjd,EAAAA,EAAAA,KAAWhgC,GAAQsxG,EAAAA,EAAAA,IAAqB9wG,UAC/D7T,EAUH,GArBeoT,EAlE+B+1G,EACjD3jH,SACAkM,SACAiL,YACAma,YACAE,UACAytF,eACAyE,eACAxE,cACA1+G,cAEA,MAAM,WAAEojH,IAAel4G,EAAAA,EAAAA,MAEjBm4G,GAAyBzkH,EAAAA,EAAAA,KAAY,KACzCwkH,EAAW,CACT13G,SAAQiL,YAAW2sG,SAAS,IAE9BtjH,GAAS,GACR,CAAC0L,EAAQiL,EAAW3W,IAEjBujH,GAAmB3kH,EAAAA,EAAAA,KAAY,KACnCwkH,EAAW,CACT13G,SAAQiL,YAAW2sG,SAAS,EAAOE,WAAW,EAAMC,UAAU,IAEhEzjH,GAAS,GACR,CAAC0L,EAAQiL,EAAW3W,IAEjB1G,GAAOD,EAAAA,EAAAA,KAcb,OACE8B,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRQ,QAASA,EACTlH,UAAU,MACVyH,MAAOjH,EAAK,yBAEZ6B,EAAAA,GAAAC,cAAA,SAjBO9B,EADLw3B,EACU,yBAGVE,GAAWytF,EACD,kBAGF,wBAWVtjH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAASoqH,GACvDjqH,EAAK,cAEP4pH,GACC/nH,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAASkqH,GACvD3E,GACGvhH,EAAAA,GAAAA,GAAW7D,EAAK,8BAA+BolH,IAC/CplH,EAAK,qDAGb6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAAS6G,GAAU1G,EAAK,YAErE,KCzDZ,IAAeX,EAAAA,EAAAA,KA1B6B+qH,EAC1ClkH,SACAmkH,sBAAsB,EACtB3jH,UACA4jH,cAEA,MAAMtqH,GAAOD,EAAAA,EAAAA,KAEb,OACE8B,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRQ,QAASA,EACTlH,UAAU,YACVyH,MAAOjH,EAAK,+BAEZ6B,EAAAA,GAAAC,cAAA,SAAI9B,EAAK,oCAAqCqqH,EAAqB,MACnExoH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAASyqH,GACvDtqH,EAAK,gBAER6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAAS6G,GAAU1G,EAAK,YAErE,I,eCjCZ,MCyOA,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAMG,GAAWC,EAAAA,EAAAA,KAAeJ,IAC1B,mBAAEw2G,IAAuB33C,EAAAA,GAAAA,GAAqB7+D,GAC9CQ,GAAOC,EAAAA,EAAAA,KAAkBT,IAEvBxQ,KAAMkS,EAAe,OAAErD,IAAWsC,EAAAA,EAAAA,KAAyBX,IAAW,CAAC,EACzEgE,EAAiC,cAApBtC,GACb,UAAEP,IAAcgwG,EAAAA,EAAAA,KAAgCnxG,GAChD+kG,EAAYjoG,SAASkH,IAAcyyG,EAAAA,EAAAA,KAAgCz2G,IACnEixB,GAAcylF,EAAAA,EAAAA,KAAkC12G,IAC9C+D,WAAY4yG,GAAuBx2G,EAASy2G,kBAAoB,CAAC,EACnEC,IAAsBx4G,IAASy4G,EAAAA,EAAAA,KAA0B92G,EAAQ3B,EAAQs4G,GACzEt4E,IAAcr6B,IAAc3F,KAAS04G,EAAAA,EAAAA,KAAyB/2G,EAAQ3B,EAAQs4G,GAC9EK,EAA0B72G,EAAS82G,yBACnCC,EAAiBp6G,QAAQk6G,GAA2B72G,EAASi9C,gBAC9Dj9C,EAASs9C,0BAA4Bt9C,EAASg3G,2BAA6Bh3G,EAASygC,aACpFzgC,EAAS8wG,oBAEd,MAAO,CACLzwG,OACAwD,aACAozG,uBAAuBC,EAAAA,EAAAA,KAA4Br3G,GACnDs3G,kBAAmBn2G,EACnBo2G,kBAAmBxS,EACnByS,oBAAqBvmF,EACrBwmF,mBAAoBp5E,EACpBs4E,qBACAE,sBACAK,iBACAV,qBACD,GA/Bez2G,EAxLoC23G,EACtDl3G,OACAm3G,UACAnsH,WACAkW,kBACAsC,aACAozG,wBACAE,oBACAC,oBACAC,sBACAC,qBACAZ,sBACAK,iBACAP,qBACAH,yBAEA,MAAM,sBACJhE,EAAqB,mCACrBoF,EAAkC,yBAClCC,EAAwB,qBACxBC,EAAoB,iBACpBjmF,EAAgB,eAChBw3E,EAAc,uBACd3mG,EAAsB,uBACtBq1G,IACEl6G,EAAAA,EAAAA,MACE5R,GAAOD,EAAAA,EAAAA,KD3EkBR,KAC/B,SAASwsH,EAAWt5G,GAClBA,EAAEkX,kBACF/X,EAAAA,EAAAA,MAAai6G,sBACf,EAEAG,EAAAA,GAAAA,IAAWvrH,EAAAA,EAAAA,KAAQ,IAAOlB,EAAW,CACnC,QAASwsH,QACPrrH,GAAY,CAACnB,IAAW,ECqE5B0sH,CAAwB1sH,GAExB,MAAO2sH,EAAiBC,EAAeC,IAAkB/rH,EAAAA,EAAAA,MAClDgsH,EAAuBC,IAA4Bv6G,EAAAA,EAAAA,KAAS,GAE7Dw6G,GAA8Bp6G,EAAAA,EAAAA,IAAgB,KAClDo0G,GAAuB,IAGnBiG,GAAer6G,EAAAA,EAAAA,IAAgB,KAC9Bu4G,GAAuBn2G,GAC5BkC,EAAuB,CACrBrE,OAAQmC,EAAKhP,GACbuS,WAAY4yG,EACZ3yG,cACA,KAGJzX,EAAAA,EAAAA,KAAU,IACDf,IAAa0rH,GAChBvuE,EAAAA,GAAAA,GAAyB,CACzB+vE,YAAapB,EAAoBmB,OAAe9rH,EAChD+1C,SAAU40E,EAAoBmB,OAAe9rH,EAC7CgsH,MAAOH,SAEP7rH,GACH,CACDnB,EAAUitH,EAAcD,EAA6BtB,EACrDI,IAGF,MAAMU,GAAa55G,EAAAA,EAAAA,IAAgB,KACjC05G,IACAjmF,EAAiB,CACfr9B,QAASvI,EAAK,uBAEhBumH,GAAuB,IAGnB9oE,GAAiBtrC,EAAAA,EAAAA,IAAgB,KACrCy5G,IACArF,GAAuB,IAGnBoG,GAAwBx6G,EAAAA,EAAAA,IAAgB,KACxCo4G,EACF4B,IAIF1uE,GAAgB,IAGZmvE,GAAmBz6G,EAAAA,EAAAA,IAAgB,KACvC25G,EAAuB,CAAEvB,oBAAoB,IAC7C6B,IACA3uE,GAAgB,IAGZovE,GAA4BxyF,EAAAA,EAAAA,GAAsB8wF,QAAyBzqH,GAAW,GAGtFosH,EAAyB9sH,EAAK,kCAFGT,EAAW4rH,EAAwB0B,EAE6B,KAEjGrjE,GAAoBr3C,EAAAA,EAAAA,IAAgB,KACnCu4G,GAAuBn2G,IAC5B6oG,EAAe,CACbhrG,OAAQmC,EAAKhP,GACbuS,WAAY4yG,IAEdnE,IAAuB,IAGnB/mH,GAAYuC,EAAAA,GAAAA,GAChB,uBACA2pH,GAAW,gBACXnsH,GAAY,SAGRwtH,EAAeA,CACnB/lH,EAAgB4L,EAAe/S,EAA4ByY,IAGzDzW,EAAAA,GAAAC,cAAA,OACEgrC,KAAK,SACLD,SAAU,EACVrtC,WAAWuC,EAAAA,GAAAA,GACT,aACA,OACAuW,GAAe,eAEjBzY,QAASA,EACToH,MAAO2L,EACP,aAAYA,GAEZ/Q,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAM4C,KAKlB,OACEnF,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWA,GACdqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,8BACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,cACNwE,OAAK,EACL7X,QAAS0sH,EACT50G,UAAU,oBAEV9V,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,6BAA6ByH,MAAO6lH,GACjDA,GAGFj8G,QAAQs6G,IACPtpH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gCACQ,cAApBiW,GAAmC+1G,GAClCuB,EACE,UAAW/sH,EAAK,4BAA6B2rH,GAGhDL,GACCyB,EAAa,OAAQ/sH,EAAK,+BAAgCwpD,GAE3D+hE,IAAwBX,GACvBmC,EAAa,WAAY/sH,EAAK,sBAAuB2sH,IAErD/B,GACAmC,EAAa,OAAQ/sH,EAAK,mCAAoC+rH,GAE/DV,GACC0B,EAAa,SAAU/sH,EAAK,gCAAiCwsH,GAAc,MAMrF3qH,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQgmH,EACRxlH,QAAS0lH,EACT/kF,eAAgBulF,GAEf5sH,EAAK,0BACN6B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPn2D,UAAU,kBACV8sC,QAAS+/E,EACTz5G,MAAO5S,EAAK,2BACZ41D,QAAS02D,KAGZ,KCtIP,IAAejtH,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAE3B,EAAM,UAAEiL,IAAclJ,EAAAA,EAAAA,KAAeJ,GAAQi5G,aAAe,CAAC,EACrE,OAAK56G,GAAWiL,EAIT,CACL4vG,aAAap0F,EAAAA,EAAAA,KAAkB9kB,EAAQ3B,EAAQiL,IAAY4vG,aAJpD,CAAC,CAKT,GATen5G,EAxEpB,UAAqB,OACnB5N,EAAM,YACN+mH,IAEA,MAAM,SACJ7+E,EAAQ,iBACR8+E,IACEt7G,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,KAEPotH,GAAuBv9E,EAAAA,GAAAA,GAAiBq9E,GAAa,GACrDv5B,GAAYjzF,EAAAA,EAAAA,KAAQ,KACxB,IAAK0sH,EACH,OAGF,MAAMlsH,EAASohD,OAAO2K,KAAKmgE,GAG3B,OAFAlsH,EAAO8lD,MAAK,CAACqmE,EAAQC,IAAYF,EAAqBE,GAAWF,EAAqBC,KAE/EnsH,CAAM,GACZ,CAACksH,IAEE1kG,GAActW,EAAAA,EAAAA,IAAiB0vB,IACnCqrF,IAEAv8G,YAAW,KACTy9B,EAAS,CAAE7oC,GAAIs8B,GAAS,GA7BG,IA8BD,IAGxByrF,GAAyBn7G,EAAAA,EAAAA,IAAgB,KAC7C+6G,GAAkB,IAGpB,OACErrH,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRQ,QAASwmH,EACT1tH,WAAWuC,EAAAA,GAAAA,GClEO,WDkEsB,UACxCkF,MAAQ,WAAUysF,GAAW9xF,gBAE7BC,EAAAA,GAAAC,cAAA,OAAKmB,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5BgzF,GAAaA,EAAUzxF,KAAK4/B,GAC3BhgC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAKg/B,EACLriC,UAAU,6CAEVK,QAASA,IAAM4oB,EAAYoZ,IAE3BhgC,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQA,EACR4jB,kBAAgB,EAChBd,QAAQE,EAAAA,GAAAA,GAAiB7kD,EAAsC,IAAhCmtH,EAAsBtrF,IACrD4iB,WAAW,qBAKnB5iD,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACVwE,QAAM,EACNnE,QAASytH,GAERttH,EAAK,WAKhB,K,gBEjGA,SAAkE,WAAlE,GAAoF,WAApF,GAA+H,WC8BzHutH,GAA2BvgG,EAAAA,EAAqBiP,EAAAA,IA4GtD,IAAe58B,EAAAA,EAAAA,KACbyU,EAAAA,EAAAA,KAAsBC,IACpB,MAAM,OAAE3B,EAAM,WAAEo7G,IAAer5G,EAAAA,EAAAA,KAAeJ,GAAQ05G,4BAA8B,CAAC,EAGrF,MAAO,CAAE35E,KAFI1hC,GAAS2hC,EAAAA,EAAAA,KAAWhgC,EAAQ3B,QAAU1R,EAEpC8sH,aAAY,GAJ7B15G,EA3GiC45G,EAAGxnH,SAAQsnH,aAAY15E,WACxD,MAAM9zC,GAAOD,EAAAA,EAAAA,MACP,4BACJ4tH,EAA2B,iBAC3B9nF,EAAgB,gCAChB+nF,EAA+B,iBAC/BhoF,EAAgB,qBAChBioF,EAAoB,SACpBC,IACEl8G,EAAAA,EAAAA,MACEyvG,GAAWrwD,EAAAA,EAAAA,IAAuBld,GAElCi6E,GAAqB57G,EAAAA,EAAAA,IAAgB,KACzCw7G,EAA4B,CAAEK,qBAAqB,IACnDJ,IAEAj9G,YAAW,KACTi1B,EAAiB,CAAEr9B,QAASvI,EAAK,mBAAoB,GACpDutH,GAAyB,IAGxBU,GAAqB97G,EAAAA,EAAAA,IAAgB,KACzC07G,EAAqB,CACnBK,WAAY,WACZ5jF,WAAY,YACZ6jF,UAAWA,IAAML,EAAS,CAAEjsF,OAAQiS,EAAMvuC,OAE5CqoH,IAEAj9G,YAAW,KACTi1B,EAAiB,CAAEr9B,QAASvI,EAAK,uBAAwB,GACxDutH,GAAyB,IAGxBa,GAAoBj8G,EAAAA,EAAAA,IAAgB,KACxCy7G,IAEAj9G,YAAW,KACTk1B,EAAiB,CAAEQ,eAAgB,aAAc,GAChDknF,GAAyB,IAGxBruF,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClCy7G,GAAiC,IAGnC,OACE/rH,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CAACy/B,QAAM,EAACpgC,OAAQA,EAAQQ,QAASw4B,GACrCr9B,EAAAA,GAAAC,cAAA,OAAKtC,UDhFiB,WCgFYyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC1DmB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UDlF8I,WCmF9I0T,MAAM,cACNwE,OAAK,EACLlU,KAAK,UACL3D,QAASq/B,EACTvnB,UAAU,SAEV9V,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQ8nH,EAAa7nH,GAAAA,EAAe0oH,SAAW1oH,GAAAA,EAAe2oH,SAC9D9qH,KAAM,GACNhE,UD9FoC,WC+FpCyzC,gBAAc,EACdntC,QAAM,IAERjE,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACZhC,EAAKwtH,EAAa,qBAAuB,2BAE5C3rH,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,KACX6B,EAAAA,GAAAA,GACC7D,EACEwtH,EAAa,mBAAqB,6BAClCnM,GAEF,CAAC,qBAGLx/G,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLN,KAAK,UACL3D,QAAS2tH,EAAaO,EAAqBE,EAC3CzuH,UAAWwC,IAEVhC,EAAKwtH,EAAa,qBAAuB,2BAE5C3rH,EAAAA,GAAAC,cAACyF,GAAAA,EAAS,CAAC/H,UDrHwF,YCqH1DQ,EAAK,cAC9C6B,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IAAgBhC,EAAK,uBACpC6B,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,KACX6B,EAAAA,GAAAA,GACC7D,EAAKwtH,EAAa,mBAAqB,uBAAwBnM,GAC/D,CAAC,qBAGLx/G,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4iC,qBAAmB,EACnBljC,KAAK,UACL3D,QAASuuH,EACT5uH,UAAWwC,IAEVhC,EAAK,4BAGJ,KCkIZ,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAE3B,EAAM,UAAEiL,IAAclJ,EAAAA,EAAAA,KAAeJ,GAAQw6G,cAAgB,CAAC,EAChEhmH,EAAU6J,GAAUiL,GAAYwb,EAAAA,EAAAA,KAAkB9kB,EAAQ3B,EAAQiL,QAAa3c,EAErF,MAAO,CACL0R,SACAiL,YACAqmC,UAAWn7C,GAASm7C,UACpB8qE,SAAUjmH,GAASimH,SACnBvB,YAAa1kH,GAAS0kH,YACtBxpE,mBAAoB1vC,EAAO2vC,UAAUD,mBACtC,GAZe3vC,EAtNgC26G,EAClDvoH,SACAsoH,WACA9qE,YACAtxC,SACAiL,YACA4vG,cACAxpE,yBAEA,MAAM,aACJirE,EAAY,sBACZC,EAAqB,SACrBvgF,IACEx8B,EAAAA,EAAAA,MAGE06C,GAAY7Z,EAAAA,EAAAA,MAAY8Z,MAAM/hB,KAC9BtB,GAAYuJ,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAE9B1qC,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MACN08F,EAAWC,EAAcC,IAAex8F,EAAAA,EAAAA,IAAQ,IAChDuuH,EAAWC,IAAgB98G,EAAAA,EAAAA,SAAkCrR,GAC9DouH,EAAiBN,GAAY9qE,GAAa8qE,EAASp3F,OAnCnB,IAoCjCssB,EAAUqrE,QAAQntH,OAAS,EAC1BotH,GAAY5/G,EAAAA,EAAAA,OAElB9O,EAAAA,EAAAA,KAAU,KACJ4F,IAAWy2F,IACbqyB,EAAUz/G,aAAU7O,GAGlBi8F,IAAcz2F,IAChB22F,IACAgyB,OAAanuH,GACf,GACC,CAACi8F,EAAWz2F,EAAQ22F,IAEvB,MAAMoyB,GAA0B98G,EAAAA,EAAAA,IAAgB,KAC1C68G,EAAUz/G,SACZ6+B,EAAS,CAAE7oC,GAAIypH,EAAUz/G,UAE3Bo/G,GAAuB,IAGnBzvF,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClCyqF,GAAc,IAGVn0E,GAActW,EAAAA,EAAAA,IAAiB0vB,IACnCmtF,EAAUz/G,QAAUsyB,EACpB3C,GAAa,IAGTqoB,GAAiBp1C,EAAAA,EAAAA,IAAgB,KACrCu8G,EAAa,CACXt8G,OAAQA,EACRiL,UAAWA,GACX,IAGE6xG,GAAezuH,EAAAA,EAAAA,KAAQ,KAC3B,MAAM0uH,EAAiC,GAMvC,OALAX,GAAU9qE,WAAWtiD,SAAQ,EAAG0xC,eACzBq8E,EAAgBjiB,MAAM5xB,IAAMppC,EAAAA,EAAAA,IAAeopC,EAAGxoC,MACjDq8E,EAAgB5tH,KAAKuxC,EACvB,IAEKq8E,CAAe,GACrB,CAACX,IAEE9tE,GAAUjgD,EAAAA,EAAAA,KAAQ,KACtB,GAAImuH,EACF,OAAOJ,GAAU9qE,UACd/hB,QAAO,EAAGmR,eAAeZ,EAAAA,EAAAA,IAAeY,EAAU87E,KAClD3sH,KAAI,EAAGwP,YAAaA,IAGzB,MAAM29G,EAAgB/sE,OAAO2K,KAAKigE,GAAe,CAAC,GAElD,OAAOllF,EAAAA,GAAAA,IAAOymF,GAAU9qE,UAAUzhD,KAAI,EAAGwP,YAAaA,IAAQ69E,OAAO8/B,GAAiB,KAAO,GAAG,GAC/F,CAACR,EAAWJ,EAAUvB,KAElB3hE,EAAaC,IAAWC,EAAAA,GAAAA,GAC7BjE,EAAgB7G,EAAS8tE,QAAoC9tH,IAAxB8tH,EAAS7oE,YAOhD,OAJArlD,EAAAA,EAAAA,KAAU,KACRirD,IAAU,CAAE36B,UAAWmwC,EAAAA,GAAkBC,WAAY,GACpD,CAACzV,IAGF1pD,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,IAAWy2F,EACnBj2F,QAASw4B,EACT1/B,UAAU,0BACVyH,MAAOnH,EAAQ,aACf4R,oBAAqBu9G,GAEpBH,GACCjtH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YAAYyD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GACtDmB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,IAAgB6sH,GAAa,UACxCprH,KAAK,OACLygB,QAAM,EAENpkB,QAASA,IAAMgvH,OAAanuH,IAE5BmB,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UACVyM,QAAQ29G,GAAUp3F,SAAUmoC,EAAAA,GAAAA,IAAqBv/D,EAAMwuH,EAASp3F,QAElE83F,EAAajtH,KAAK6wC,IACjB,MAAM1b,EAAQssB,GAAWqrE,QACtBxsH,MAAMyvC,IAAmBE,EAAAA,EAAAA,IAAeF,EAAec,SAAUA,MAAY1b,MAChF,OACEv1B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLjB,KAAKswC,EAAAA,EAAAA,IAAeL,GACpBtzC,WAAWuC,EAAAA,GAAAA,IAAemwC,EAAAA,EAAAA,IAAe08E,EAAW97E,IAAa,UACjEtvC,KAAK,OACLygB,QAAM,EAENpkB,QAASA,IAAMgvH,EAAa/7E,IAE5BjxC,EAAAA,GAAAC,cAACmjD,GAAAA,EAAmB,CAClBnS,SAAUA,EACVtzC,UAAU,wBACVikD,mBAAoBA,IAErB5yC,QAAQumB,KAAUmoC,EAAAA,GAAAA,IAAqBv/D,EAAMo3B,GACvC,KAMjBv1B,EAAAA,GAAAC,cAAA,OAAKmB,IAAKnD,EAAQoD,MAAQ,WAAQxC,EAAWlB,UAAU,wBACpD8rD,GAAa1pD,OACZC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACb/oD,UAAU,6BACVgpD,MAAO8C,EACP7C,WAAY8C,GAEXD,GAAa+jE,SACX59G,IACC,MAAMsmB,EAAOmR,EAAUz3B,IAAW66C,EAAU76C,GAEtC69G,EAAgBd,GAAU9qE,UAAU/hB,QAAQ4tF,GAAYA,EAAQ99G,SAAWA,IAC3E+2C,EAA2B,GAC3BgnE,EAAavC,IAAcx7G,GAiDjC,OA/CA69G,GAAeluH,SAASk6E,IAClBszC,KAAc18E,EAAAA,EAAAA,IAAeopC,EAAExoC,SAAU87E,IAE7CpmE,EAAMjnD,KACJM,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAM,GAAE4O,MAAU0hC,EAAAA,EAAAA,IAAemoC,EAAExoC,YACnCtzC,UAAU,yCAEVK,QAASA,IAAM4oB,EAAYhX,IAE3B5P,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACC,KAAMA,EAAMv0B,KAAK,WACzB3B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,QACbqC,EAAAA,GAAAC,cAACosD,GAAAA,EAAa,CAACn2B,KAAMA,EAAMu4E,iBAAe,IAC1CzuG,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASyD,IAAI,QAC3BpB,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAAgB5E,UAAU,iBACpCqlD,EAAAA,GAAAA,GAAiB/kD,EAAuB,IAAdw7E,EAAEm0C,aAGhCn0C,EAAExoC,UACDjxC,EAAAA,GAAAC,cAACmjD,GAAAA,EAAmB,CAClBzlD,UAAU,sBACVszC,SAAUwoC,EAAExoC,SACZ2Q,mBAAoBA,KAI3B,IAGEmrE,GAAcU,GAAe1tH,QAChC4mD,EAAMjnD,KACJM,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAM,GAAE4O,YACRjS,UAAU,6CAEVK,QAASA,IAAM4oB,EAAYhX,IAE3B5P,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQpwB,EACRg0C,kBAAgB,EAChBiqE,WAAW,SACX/qE,OAAQ6qE,GAAa3qE,EAAAA,GAAAA,GAAiB/kD,EAAsB,IAAb0vH,QAAqB9uH,EACpE+jD,WAAW,mBAKZ+D,CAAK,KAIhB3mD,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,OAEd7sD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACVwE,QAAM,EACNnE,QAASq/B,GAERp/B,EAAQ,UAEL,KChJZ,IAAeT,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU47G,6BACT,MAAMC,OAA2DlvH,IAA1CivH,EAAuBC,iBACzCC,EAAAA,EAAAA,KAA0B97G,EAAQ47G,EAAuBC,gBAC9D,MAAO,CACLE,kBAAmBF,EAAiBA,EAAerqH,QAAK7E,EACzD,GANeoT,EAlFyCi8G,EAC3DD,oBACAH,6BAEA,MAAM,2BAAEK,IAA+Bp+G,EAAAA,EAAAA,OAEhCq+G,EAAUC,IAAe7vH,EAAAA,EAAAA,IAAQ,IACjC8d,EAAWgyG,IAAgB9vH,EAAAA,EAAAA,IAAQ,GACpC6P,GAAad,EAAAA,EAAAA,MAEbghH,GAAOj+G,EAAAA,EAAAA,IAAgB,KAC3B+9G,IACIhgH,EAAWX,SACbc,aAAaH,EAAWX,SAE1BoB,YAAW,KACTq/G,EAA2B,CAAEzqH,GAAIoqH,EAAuBpqH,IAAK,GApBnC,IAqBD,IAGvB8qH,GAAwBl+G,EAAAA,EAAAA,IAAiBM,IACvCA,EAAEC,QAAwBue,QAAQ,mBACtCm/F,GACF,KAGF9vH,EAAAA,EAAAA,KAAU,KACR2H,SAAS6S,iBAAiB,aAAcu1G,GACxCpoH,SAAS6S,iBAAiB,YAAau1G,GACvCpoH,SAAS6S,iBAAiB,YAAau1G,GACvCpoH,SAAS6S,iBAAiB,QAASu1G,GAE5B,KACLpoH,SAAS8S,oBAAoB,aAAcs1G,GAC3CpoH,SAAS8S,oBAAoB,YAAas1G,GAC1CpoH,SAAS8S,oBAAoB,YAAas1G,GAC1CpoH,SAAS8S,oBAAoB,QAASs1G,EAAsB,IAE7D,CAACA,KAEJ/vG,EAAAA,EAAAA,KAAgB,KACd,MAAMgwG,GAAoBt0F,EAAAA,EAAAA,MAE1B9rB,EAAWX,QAAUoB,YAAW,KAC9By/G,IACAE,GAAmB,GAhDA,IAiDD,GACnB,CAACF,IAEJ,MAAMG,EAAaT,GAAsB,UAASA,IAC5CU,GAAepiH,EAAAA,EAAAA,GAASmiH,GAAaT,GAE3C,IAAKH,EAAuBc,UAC1B,OAGF,MAAMziG,GAAS2hG,EAAuBc,WAAa,GA1DjC,IA4DlB,OACE5uH,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACT,4BACAkuH,GAAY,SACZ9xG,GAAa,UACbwxG,EAAuBe,YAAc,YAEvC5kH,MAAQ,YAAWkiB,iBAAqB2hG,EAAuB7hG,mBAAmB6hG,EAAuB5hG,QAEzGlsB,EAAAA,GAAAC,cAAC0D,GAAAA,EAAe,CACd3C,IAAM,UAASitH,IACftsH,KAxEY,IAyEZkC,OAAQ8qH,EACRpvC,MAAI,EACJuvC,QAASp1G,EAAAA,GAAa,QAAM7a,EAC5BygG,aAAW,EACXr7F,QAAM,EACNC,OAAQoqH,IAEN,K,gBCvEV,MAyGA,IAAe9wH,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAE3B,EAAM,UAAEiL,IAAclJ,EAAAA,EAAAA,KAAeJ,GAAQ68G,mBAAqB,CAAC,EAErEC,GAAsBC,EAAAA,EAAAA,KAAmB/8G,GAO/C,MAAO,CACL3B,SACAiL,YACA0zG,0BATgC3+G,EAC9BiL,GACE2zG,EAAAA,EAAAA,KAA0Cj9G,EAAQ3B,EAAQiL,IAC1D4zG,EAAAA,EAAAA,KAAuCl9G,EAAQ3B,QACjD1R,EAMFmwH,sBACD,GAhBe/8G,EAzGiCo9G,EACnDhrH,SACAkM,SACAiL,YACA0zG,4BACAF,0BAEA,MAAM,0BACJM,EAAyB,uBACzBC,EAAsB,iBACtBC,EAAgB,uBAChBC,IACE1/G,EAAAA,EAAAA,OAEGu2C,EAAQqH,IAAaz9C,EAAAA,EAAAA,IAAS,IAC/B/R,GAAOD,EAAAA,EAAAA,KAEPwxH,GAAep/G,EAAAA,EAAAA,IAAiBq/G,IAC/Bp/G,IAEDiL,EACF8zG,EAA0B,CAAE/+G,SAAQ7M,GAAI8X,EAAWo0G,eAAgBD,KAEnEH,EAAiB,CAAEK,oBAAqBF,IACxCF,EAAuB,CAAEl/G,SAAQq/G,eAAgBD,KAGnDJ,IAAwB,IAGpBO,GAAex/G,EAAAA,EAAAA,IAAiBM,IACpC+8C,EAAU/8C,EAAEC,OAAOH,MAAM,IAGrBq/G,GAAqBnxH,EAAAA,EAAAA,KAAQ,IAAMoxH,EAAAA,IAAgC5vH,KAAKuvH,IAOrE,CACLA,WACAM,eARsB,IAAIC,KAAKC,aAAa,CAACnB,GAAsB,CAAEttH,KAAM,aACtC0uH,GAAGT,GAQxCU,aANoB,IAAIH,KAAKC,aAAa,CAACR,GAAW,CAAEjuH,KAAM,aAC7B0uH,GAAGT,QAOpC,CAACX,KAELvwH,EAAAA,EAAAA,KAAU,KACH4F,GAAQspD,EAAU,GAAG,GACzB,CAACtpD,IAEJ,MAAMisH,GAA6B1xH,EAAAA,EAAAA,KAAQ,IACpC0nD,EAAOyjB,OAILgmD,EAAmBjwF,QAAO,EAAG6vF,WAAUM,iBAAgBI,kBAC5DJ,EAAenlE,cAAc34B,SAASm0B,EAAOwE,gBAC1CulE,EAAavlE,cAAc34B,SAASm0B,EAAOwE,gBAC3C6kE,EAAS7kE,cAAc34B,SAASm0B,EAAOwE,iBANnCilE,GAQR,CAACA,EAAoBzpE,IAExB,OACEtmD,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,UAAWwC,GAAAA,EAAOkgC,KAClBoE,QAAM,EACNpgC,OAAQA,EACRmsE,gBAAc,EACdprE,MAAOjH,EAAK,YACZ0G,QAAS0qH,GAETvvH,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRpQ,IAAI,SACJ0P,MAAO41C,EACPp1C,SAAU4+G,EACVpjE,YAAavuD,EAAK,UAClB0sC,2BAAyB,IAE3B7qC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAAA,EAAOowH,UAAW,kBAC9CD,EAA2BlwH,KAAI,EAAGuvH,WAAUU,eAAcJ,oBACzDjwH,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK2uH,EACLhyH,WAAWuC,EAAAA,GAAAA,GAAeC,GAAAA,EAAOqwH,SAAU,WAC3CnV,cAAe6T,IAA8BS,EAAW,aAAU9wH,EAClEgkB,SAAUqsG,IAA8BS,EACxCnqH,WAAS,EACT41G,QAAM,EAENp9G,QAASA,IAAM0xH,EAAaC,IAE5B3vH,EAAAA,GAAAC,cAAA,QAAMtC,WAAWuC,EAAAA,GAAAA,GAAe,QAASC,GAAAA,EAAOiF,SAC7CpD,EAAAA,GAAAA,GAAWquH,EAAc,CAAC,aAAc,CAAEI,UAAWnqE,KAExDtmD,EAAAA,GAAAC,cAAA,QAAMtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAYC,GAAAA,EAAOkF,YAChDrD,EAAAA,GAAAA,GAAWiuH,EAAgB,CAAC,aAAc,CAAEQ,UAAWnqE,SAK1D,K,4BC9IZ,UAAgB,QAAU,WAAW,YAAc,WAAW,KAAO,WAAW,MAAQ,WAAW,YAAc,YCkJjH,IAAe9oD,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,YAAEmnD,GAAgBnnD,EAExB,MAAO,CACLknD,cAAeC,EAAYC,WAC5B,GANernD,EA5GoCy+G,EACtD9kF,QACAwtB,oBAEA,MAAM,0BACJu3D,EAAyB,SACzBpkF,EAAQ,QACRnU,EAAO,iBACP2L,IACEh0B,EAAAA,EAAAA,MACE5R,GAAOD,EAAAA,EAAAA,KAEP0yH,EAA6B,aAAhBhlF,GAAOlqC,KAEpB27B,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClCqgH,GAA2B,IAGvBp2E,GAAiBjqC,EAAAA,EAAAA,IAAgB,KACrCi8B,EAAS,CAAE7oC,GAAIkoC,EAAOh8B,SACtBytB,GAAa,IAGTwzF,GAAgBvgH,EAAAA,EAAAA,IAAgB,KACpC8nB,EAAQ,CACNhe,IAAKwxB,EAAOxxB,IACZ02G,iBAAiB,IAEnBzzF,GAAa,IAGT6sF,GAAa55G,EAAAA,EAAAA,IAAgB,KACjC,MAAM2H,EAAO24G,GAAaG,EAAAA,GAAAA,GAAenlF,EAAOolF,cAC5Cp2D,EAAAA,GAAAA,IAA0BxB,EAAextB,EAAOolF,cACpDC,EAAAA,GAAAA,IAAoBh5G,GACpB8rB,EAAiB,CACfr9B,QAASvI,EAAKyyH,EAAa,iBAAmB,iBAEhDvzF,GAAa,IAGTj4B,GAAQxG,EAAAA,EAAAA,KAAQ,KACpB,IAAKgtC,EAAO,OACZ,MAAM5qC,EAAM4vH,EAAa,wBAA0B,qBAC7CM,EAAuBN,GACzBG,EAAAA,GAAAA,GAAenlF,EAAMolF,cACrBp2D,EAAAA,GAAAA,IAA0BxB,EAAextB,EAAMolF,aACnD,OAAO7yH,EAAK6C,EAAKkwH,EAAqB,GACrC,CAACtlF,EAAOglF,EAAYx3D,EAAej7D,IAEhCgS,GAAcvR,EAAAA,EAAAA,KAAQ,KAC1B,IAAKgtC,EAAO,OACZ,MAAM5qC,EAAM4vH,EAAa,0BAA4B,uBAC/Cx7F,GAAO4tB,EAAAA,GAAAA,GAAiB7kD,EAA2B,IAArBytC,EAAMulF,cACpCpvH,GAAWwlF,EAAAA,GAAAA,GAAuB37C,EAAM9pC,OAAQ8pC,EAAM7pC,SAAU5D,EAAK45D,MACrEq5D,GAAiB7pC,EAAAA,GAAAA,GAAuB37C,EAAMylF,aAAczlF,EAAMwlF,eAAgBjzH,EAAK45D,MAE7F,OAAO55D,EAAK6C,EAAK,CAACo0B,EADJ,GAAEg8F,MAAmBrvH,MACL,GAC7B,CAAC6pC,EAAOglF,EAAYzyH,IAEvB,OACE6B,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQ2K,QAAQ48B,GAChBnH,QAAM,EACN1/B,iBAAkB5E,GAAOkW,QACzBxR,QAAS8rH,GAET3wH,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACLhE,UAAWwC,GAAO2rC,YAClBh2B,UAAW3X,EAAK,SAChBH,QAASq/B,GAETr9B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOgF,MACrBnF,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQ+sH,EAAa9sH,GAAAA,EAAewtH,QAAUxtH,GAAAA,EAAeokC,SAC7DvmC,KAlFY,MAqFhB3B,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,GAAOiF,OACnBA,IAASpD,EAAAA,GAAAA,GAAWoD,EAAO,CAAC,qBAE/BpF,EAAAA,GAAAC,cAACsuG,GAAAA,EAAQ,CACP5wG,UAAWwC,GAAOoxH,KAClB3hH,OAAQg8B,GAAOh8B,OACfm3B,eAAa,EACbo5D,SAAUv0D,GAAOh8B,OACjB5R,QAASu8C,IAEXv6C,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,GAAOgQ,aAClBA,IAAenO,EAAAA,GAAAA,GAAWmO,EAAa,CAAC,qBAE3CnQ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,0CACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBK,QAAS6yH,GAChD1yH,EAAK,yBAER6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACE,QAAM,EAACxE,UAAU,wBAAwBK,QAASksH,GACvD/rH,EAAKyyH,EAAa,uBAAyB,uBAG1C,K,qOClHZ,SAASY,IAAoB,OAC3B1uE,EAAM,KACNyrE,EAAI,YACJkD,EAAW,aACX3B,EAAY,UACZnyH,IAQA,MAAM+zH,GAAcnkH,EAAAA,GAAAA,QAA4B,OAC1C,MAAEI,IAAU2f,EAAAA,GAAAA,OAElB7uB,EAAAA,GAAAA,YAAU,KACJizH,EAAYhkH,SACdikH,GACF,GACC,IAEH,MAAMA,EAAeA,KACfD,EAAYhkH,UACdgkH,EAAYhkH,QAAQzD,MAAM+D,OAAS,OACnC0jH,EAAYhkH,QAAQzD,MAAM+D,OAAU,GAAE0jH,EAAYhkH,QAAQ+zC,aAAe,MAC3E,GAUKmwE,EAAmBC,IAAwBC,EAAAA,GAAAA,IAChD,QACA,KAGKC,EAAYC,IAAiB9hH,EAAAA,GAAAA,UAAS,KAE7CzR,EAAAA,GAAAA,YAAU,KACR,GAAIizH,EAAYhkH,QAAS,CACvB,MAAMukH,EAAWP,EAAYhkH,QAAQgD,MAIrCshH,EAFmBC,GAAYL,GAAqB,IAGpDD,GACF,IAGC,KAEHlzH,EAAAA,GAAAA,YAAU,KACRozH,EAAqBE,EAAW,GAC/B,CAACA,EAAYF,IAEhB,MAKMK,GAAazuH,EAAAA,GAAAA,cAAY,KACxBsuH,IAGLjC,EAAaiC,GACbC,EAAc,IACdH,EAAqB,IAzCjBH,EAAYhkH,UACdgkH,EAAYhkH,QAAQzD,MAAM+D,OAAS,OACnC0jH,EAAYhkH,QAAQzD,MAAM+D,OAAS,QA0CjCL,GAASA,EAAQ,KACnB+jH,EAAYhkH,SAAS+sD,QACvB,GACC,CAACq1D,EAAciC,EAAYF,EAAsBlkH,IAEpD,OACE3N,GAAAA,cAAA,OAAKrC,UAAU,iDACbqC,GAAAA,cAACmyH,GAAAA,EAAQ,CACP/6G,IAAKs6G,EACLhlE,YAAY,oBACZh8C,MAAOqhH,EACP7gH,SAzBekgB,IACnB4gG,EAAc5gG,EAAMvgB,OAAOH,OAC3BihH,GAAc,EAwBVh0H,UAAWy0H,KACT,+HACAz0H,GAEF00H,KAAM,EACNC,WAAS,EACT7lE,UAAYr7B,IACQ,UAAdA,EAAMpwB,KAAoBowB,EAAMmhG,WAClCnhG,EAAMtJ,iBAES,UAAXg7B,EACF0vE,GAAAA,GAAMtiE,MAAM,qDAEZgiE,IAEJ,IAIJlyH,GAAAA,cAAA,OAAKrC,UAAU,iEACD,cAAXmlD,EACC9iD,GAAAA,cAACyyH,GAAU,CAAClE,KAAMA,EAAMkD,YAAaA,IAErCzxH,GAAAA,cAAC0yH,GAAU,CACThoF,MAAOqnF,EACPG,WAAYA,KAMxB,CAEO,MAAMS,IAAgBn1H,EAAAA,GAAAA,MAC3Bg0H,IACA,CAACoB,EAAWC,IACND,EAAU9vE,SAAW+vE,EAAU/vE,SAMvC,SAASgwE,IAAe,KACtBvE,EAAI,YACJkD,IAKA,OACEzxH,GAAAA,cAACiC,GAAAA,EAAM,CACLtE,UAAU,uDACVK,QAAUozB,IACRA,EAAMtJ,iBACNymG,IACAkD,GAAasB,IAAaC,EAAAA,GAAAA,IAAmBD,IAAU,GAGzD/yH,GAAAA,cAACizH,GAAAA,GAAQ,CAACtxH,KAAM,KAGtB,CAEA,MAAM8wH,IAAaj1H,EAAAA,GAAAA,MAAKs1H,IAExB,SAASI,IAAe,WACtBhB,EAAU,MACVxnF,IAKA,OACE1qC,GAAAA,cAACiC,GAAAA,EAAM,CACLtE,UAAU,mDACVK,QAAUozB,IACRA,EAAMtJ,iBACNoqG,GAAY,EAEdrvG,SAA2B,IAAjB6nB,EAAM3qC,QAGhBC,GAAAA,cAAA,KAAGrC,UAAU,8CAGnB,CAEA,MAAM+0H,IAAal1H,EAAAA,GAAAA,MAAK01H,IAAgB,CAACN,EAAWC,IAC9CD,EAAUloF,QAAUmoF,EAAUnoF,Q,eCtMpC,MAAMyoF,GAAc,CAClB,6DACA,uCACA,sDACA,sCACA,oDAoBF,GAlB6BC,IAC3B,MAAM,aAAEtD,GAAiBsD,EACzB,OACEpzH,GAAAA,cAAA,OAAKrC,UAAU,2BACbqC,GAAAA,cAAA,OAAKrC,UAAU,iCAAiCqK,IAAKqrH,GAAYvoG,IAAI,KACrE9qB,GAAAA,cAAA,QAAMrC,UAAU,yBAAwB,aACxCqC,GAAAA,cAAA,QAAMrC,UAAU,yBAAwB,uCACvCw1H,GAAY/yH,KAAK+R,GAEdnS,GAAAA,cAAA,OAAKrC,UAAU,qEAAqEK,QAASA,IAAM8xH,EAAa39G,IAC7GA,KAIH,ECDJmhH,GAAuB,SCnBvBC,IAAkBC,EAAAA,GAAAA,IDqBAC,KACtB,MAAMvhH,GAAS0+B,EAAAA,EAAAA,MACT8iF,GAAiBnmH,EAAAA,GAAAA,QAAiC,OACjDomH,EAAaC,IAAkB1jH,EAAAA,GAAAA,UAA4B,KAC3D2jH,EAAUC,IAAe5jH,EAAAA,GAAAA,UAA6D,CAAE6jH,cAAUl1H,EAAWm1H,SAAS,KACvH,SACJjB,EAAQ,YAAEtB,EAAW,OAAEwC,EAAM,OAAEnxE,EAAM,MAAEpY,EAAK,SAAEwpF,EAAQ,KAAE3F,EAAI,aAAEvmF,IAC5DmsF,EAAAA,GAAAA,IAAQ,CACVzwH,GAAI4vH,GACJc,IAAK,wCACLC,wBAAwB,KAG1B51H,EAAAA,GAAAA,YAAU,KACR61H,GAAAA,GAAa5tH,SAAS6tH,YAAYjB,QAAsBz0H,EAAW,KAAKinF,MAAM0uC,IAC5E,GAAIA,EAAIzB,SAAU,CAChB,MAAM0B,GAAsBC,EAAAA,GAAAA,IAA0BF,EAAIzB,UAC1DtB,GAAazyD,GAAS,IAAIy1D,KAAwBz1D,IACpD,CACA80D,EAAY,CACVC,SAAUS,EAAIT,SACdC,QAASQ,EAAIR,SACb,GACF,GAED,KACHv1H,EAAAA,GAAAA,YAAU,KACR,GAAIs0H,EAAShzH,OAAS,GAAgB,UAAX+iD,EAAoB,CAC7C,MAAM6xE,GAAgBC,EAAAA,GAAAA,IAA0BtB,GAAsBP,GACtEuB,GAAAA,GAAa5tH,SAASmuH,cAAc,IAAIF,GAC1C,IACC,CAAC7xE,EAAQiwE,IAEZ,MAAMrtE,GAAiBjiD,EAAAA,GAAAA,cAAY,IAC1B,IAAIqxH,SAAeC,IACxBT,GAAAA,GAAa5tH,SAAS6tH,YAAYjB,GAAsBO,GAAUE,SAAU,KAAKjuC,MAAM0uC,IACrF,GAAIA,EAAIzB,SAAU,CAChB,MAAM0B,GAAsBC,EAAAA,GAAAA,IAA0BF,EAAIzB,UAC1DtB,GAAazyD,GAAS,IAAIy1D,KAAwBz1D,IACpD,CACA80D,EAAY,CACVC,SAAUS,EAAIT,SACdC,QAASQ,EAAIR,UAEfe,GAAS,GACT,KAEH,CAAClB,GAAUE,SAAUtC,IASlBuD,GAAcvxH,EAAAA,GAAAA,cAAY8X,UAC9B,MAWM05G,SAX4BC,GAAAA,GAAsBC,iBAAiB,CACvE9uF,QACA7V,EAAG,IACH4kG,cAAe,CACbC,QAAS,CACPC,SAAU,CACRC,SAAU,cAKuBN,aACzC,IAAIO,EAAe,KACnB,GAAIP,EAAal1H,OAAS,EAAG,CAC3B,MAAM01H,EAAUn0H,MAAMC,KAAK,IAAI2rF,IAAI+nC,EAAa70H,KAAK+R,IACnD,GAAIA,EAAKujH,MAAQ,GACf,OAAQvjH,GAAMmjH,UAAiC/kH,MAEjC,IACfuvB,OAAO9wB,WACNymH,EAAQ11H,OAAS,IACnBy1H,EAAe9tD,KAAKC,UAAU8tD,GAElC,CACA,GAAID,EAAc,CAChB,MAAM9uH,EAAqB,CACzBhD,IAAIiyH,EAAAA,GAAAA,KACJ1qF,KAAM,YACN50B,QAASm/G,EACTI,UAAW,IAAIlnG,KACfgH,MAAO,GACPmgG,YAAa,CAAC,CACZn0H,KAAM,kBAGV+vH,GAAazyD,GAAS,IAAIA,EAAMt4D,IAClC,KAAO,CACL,MAAMA,EAAqB,CACzBhD,IAAIiyH,EAAAA,GAAAA,KACJ1qF,KAAM,YACN50B,QAAS,8BACTu/G,UAAW,IAAIlnG,KACfgH,MAAO,IAET+7F,GAAazyD,GAAS,IAAIA,EAAMt4D,IAClC,IACC,CAAC+qH,IAEEqE,GAAaryH,EAAAA,GAAAA,cAAY8X,UAC7B,MAWM05G,SAX4BC,GAAAA,GAAsBC,iBAAiB,CACvE9uF,QACA7V,EAAG,IACH4kG,cAAe,CACbC,QAAS,CACPC,SAAU,CACRC,SAAU,gBAKuBN,aACzC,IAAIO,EAAe,KACnB,GAAIP,EAAal1H,OAAS,EAAG,CAC3B,MAAMg2H,EAAYz0H,MAAMC,KAAK,IAAI2rF,IAAI+nC,EAAa70H,KAAK+R,IACrD,GAAIA,EAAKujH,MAAQ,GACf,OAAQvjH,GAAMmjH,UAAmCh9F,QAEnC,IACfwH,OAAO9wB,WACN+mH,EAAUh2H,OAAS,IACrBy1H,EAAe9tD,KAAKC,UAAUouD,GAElC,CACA,GAAIP,EAAc,CAChB,MAAM9uH,EAAqB,CACzBhD,IAAIiyH,EAAAA,GAAAA,KACJ1qF,KAAM,YACN50B,QAASm/G,EACTI,UAAW,IAAIlnG,KACfgH,MAAO,GACPmgG,YAAa,CAAC,CACZn0H,KAAM,iBAGV+vH,GAAazyD,GAAS,IAAIA,EAAMt4D,IAClC,KAAO,CACL,MAAMA,EAAqB,CACzBhD,IAAIiyH,EAAAA,GAAAA,KACJ1qF,KAAM,YACN50B,QAAS,8BACTu/G,UAAW,IAAIlnG,KACfgH,MAAO,IAET+7F,GAAazyD,GAAS,IAAIA,EAAMt4D,IAClC,IACC,CAAC+qH,IACEuE,GAAgBvyH,EAAAA,GAAAA,cAAY8X,UAChC,MAIM05G,SAJ4BC,GAAAA,GAAsBC,iBAAiB,CACvE9uF,QACA7V,EAAG,OAEoCykG,aACzC,GAAIA,EAAal1H,OAAS,EAAG,CAC3B,MAAM+wD,EAAcmkE,EAAa70H,KAAK+R,IACpC,MAAM,OAAE5B,EAAM,SAAE+nB,GAAanmB,EAAKmjH,SAC5B5iH,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAChC,GAAImC,EAAM,CACR,MAAMwjB,EAAOoC,GAAW4Z,EAAAA,EAAAA,KAAWhgC,EAAQomB,QAAYz5B,EACvD,MAAO,CACL0R,SACAq/F,UAAWl9F,GAAMtN,OAAS,UAC1B6wH,WAAY//F,EAAQ,GAAEA,EAAK6jC,WAAa,MAAM7jC,EAAK+jC,UAAY,KAAO,GACtE5jD,QAASlE,EAAK8F,KAElB,CACA,OAAO,IAAI,IAEbg8G,EAAO,CACLhpF,KAAM,OACN50B,QAAU,2BAA0BgwB,qRAQhCqhC,KAAKC,UAAU7W,iBAEnBptD,GAAI9D,KAAKs2H,SAAS3vC,WAClBsvC,YAAa,CAAC,CACZM,aAAa,KAGnB,IACC,CAAClC,EAAQ/hH,IAENkkH,GAAgB3yH,EAAAA,GAAAA,cAAasuH,IACjCsE,MAAM,8CAA+C,CACnDzrD,OAAQ,OACR0rD,QAAS,CACP,eAAgB,oBAElBx0G,KAAM4lD,KAAKC,UAAU,CACnBorD,SAAU,CAAC,CACTrvH,IAAIiyH,EAAAA,GAAAA,KACJt/G,QAAS07G,EACT9mF,KAAM,aAGT66C,MAAM0uC,GAAQA,EAAI+B,SAClBzwC,MAAM0wC,IACDA,GAAeA,EAAYz2H,OAAS,GACtCy2H,EAAYj3H,SAASk3H,IACO,uBAAtBA,EAASC,SACX1B,EAAYyB,EAASr3H,OAAOu3H,SACG,sBAAtBF,EAASC,SAClBZ,EAAWW,EAASr3H,OAAOu3H,SACI,aAAtBF,EAASC,WAElB3rH,QAAQC,IAAI,UACZgrH,EAAcjE,GAChB,GAEJ,GACA,GACH,CAACiD,EAAagB,EAAeF,IAE1BhG,GAAersH,EAAAA,GAAAA,cAAa4iC,IAChCorF,GAAasB,GACJ,IAAIA,EAAU,CACnB9nF,KAAM,OACN50B,QAASgwB,EACT3iC,GAAI9D,KAAKs2H,SAAS3vC,WAClBqvC,UAAW,IAAIlnG,SAGnB0nG,EAAc/vF,GACdqtF,EAAehmH,SAASkpH,kBACxBC,EAAAA,GAAAA,GAAY,YAAY,GACvB,CAACpF,EAAa2E,IAEjB,OACEp2H,GAAAA,cAAA,OAAKrC,UAAU,mEACbqC,GAAAA,cAAC0mD,GAAAA,EAAc,CACb/oD,UAAU,gCACVsrD,SAAUvD,EACVsuE,QAASH,EAASG,QAClB58G,IAAKs8G,IAEHG,EAASG,SACTh0H,GAAAA,cAAC82H,GAAmB,CAAChH,aAAcA,IAErC9vH,GAAAA,cAAC+2H,GAAAA,EAAQ,CACPj0E,OAAQA,EACRiwE,SAAUA,KAGd/yH,GAAAA,cAAA,QAAMrC,UAAU,6BACdqC,GAAAA,cAAC2yH,GAAa,CACZ7vE,OAAQA,EACRyrE,KAAMA,EACNkD,YAAaA,EACb3B,aAAcA,KAGd,IC3RGkH,GAAkBA,KAC7B,MAAMprG,GAAere,EAAAA,EAAAA,IAA8B,MAQnD,OAPA9O,EAAAA,EAAAA,KAAU,KACJmtB,EAAale,SACf6lH,GAAgB3nG,EAAale,QAC/B,GAEC,IAGD1N,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBAAsByZ,IAAKwU,GAAgB,E,gBCMvD,SAASqrG,GAAsBv1H,GACpC,MAAO,CAACwQ,EAAqBkhH,KAC3B,MAAM/gH,GAAWC,EAAAA,EAAAA,KAAeJ,IACxBy2B,KAAM8hB,GAAcv4C,EAAOw4C,OAC3B/hB,KAAMtB,GAAcn1B,EAAOtR,OAC7B,eACJ29D,EAAc,cAAE3mC,EAAa,OAAErnB,GAC7B8B,EAASgsD,cAEP,mBAAEqqD,IAAuB33C,EAAAA,GAAAA,GAAqB7+D,GAK9CglH,EAAuB,UAATx1H,EAAmBA,EAAQ0xH,GAAO+D,QAAU,QAAU,SAElEC,SAAUC,GAA2BnlH,EAAO6gH,SAC9Ct7F,EAAWG,IAAgBs/F,IAAcz/F,SAEzCxkB,EAAkBZ,EAASY,gBAEjC,MAAO,CACLoqD,OAAOuD,EAAAA,EAAAA,KAAY1uD,GACnB2kB,eAAwBh4B,IAAb44B,KACL8mC,GAAiBvvD,QAAQuvD,EAAe7T,OAAS6T,EAAew0D,UACtEtoE,YACApjB,YACAgwF,yBACA5/F,WACA6/F,aAAc/mH,EACd0C,kBACAE,gBAAiB5C,GAAS4hC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,IAASwC,iBAAclU,EACpE6pH,qBACD,CAEL,C,wCC5BA,MAAMvqD,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAK,GAoHjD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,IAClBglH,GAAsB,SADJhlH,EAlH4BslH,EAC9Cl6D,QACA85D,UACArxF,cACAjP,YACA4zB,YACApjB,YACAgwF,yBACA5/F,WACAxkB,sBAEA,MAAM,qBACJukH,EAAoB,aACpB7iG,EAAY,gBACZ8iG,IACE1nH,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,KACPg5H,EAAcC,EAAU,QAAU,QAClCzxE,GAAiBjiD,EAAAA,EAAAA,KAAY,EAAGsrB,gBAChCA,IAAcmwC,EAAAA,GAAkBC,WAClChB,IAAa,KACXq5D,EAAqB,CACnB91H,KAAMw1H,GACN,GAEN,GAEC,CAACA,EAAaM,EAAsB1xF,IAEjC4xF,GAAgB94H,EAAAA,EAAAA,KAAQ,IACvB64B,GAAa4/F,EAIX5/F,EAASr3B,KAAKsD,IACnB,MAAO6M,EAAQiL,IAAam8G,EAAAA,GAAAA,GAAqBj0H,GAEjD,OAAO2zH,EAAuB9mH,IAASo4B,KAAKntB,EAAU,IACrDskB,OAAO9wB,SAPDw3B,GAAAA,GAQR,CAAC6wF,EAAwB5/F,IAEtBmgG,GAAqBn0H,EAAAA,EAAAA,KAAaiD,IACtCiuB,EAAa,CAAEpkB,OAAQ7J,EAAQ6J,OAAQiL,UAAW9U,EAAQhD,IAAK,GAC9D,CAACixB,IAEEkjG,GAAkBp0H,EAAAA,EAAAA,KAAY,CAAC+X,EAAmBjL,KACtDknH,EAAgB,CAAElnH,SAAQiL,aAAY,GACrC,CAACi8G,IA2CEK,GAAoB5rB,EAAAA,GAAAA,GAAkB,CAACpmE,GAAcy1D,EAAAA,OAA+B1kE,EAE1F,OACE72B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACb/oD,UAAU,8CACVgpD,MAAOmxE,EAAoBJ,OAAgB74H,EAC3C+nD,WAAYlB,EACZ2Z,YAAU,IAERy4D,GAAqB93H,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAC9BirE,KAAuBrgG,GAAgC,IAApBA,EAAS13B,SAC3CC,EAAAA,GAAAC,cAAC83H,GAAAA,EAAY,CACX9/G,KAAM9Z,EAAK,6BACXgS,YAAahS,EAAK,0CAGrB25H,GAAqBrgG,GAAYA,EAAS13B,OAAS,GAzDjD23H,EAAct3H,KAAI,CAACsG,EAASlH,KACjC,MACMw4H,EADoB,IAAVx4H,IAEXy4H,EAAAA,GAAAA,IAAYvxH,EAAQ0uB,SAAU6iG,EAAAA,GAAAA,IAAYP,EAAcl4H,EAAQ,GAAG41B,MAElEvvB,GAAQqyH,EAAAA,EAAAA,IAA4BxxH,GAC1C,OACE1G,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACG8vF,GACCh4H,EAAAA,GAAAC,cAAA,KACEtC,UAAU,kBACVqD,IAAK0F,EAAQ0uB,KACbh0B,IAAKjD,EAAKkD,MAAQ,WAAQxC,IAEzBs5H,EAAAA,GAAAA,IAAmBh6H,EAAM,IAAIuwB,KAAoB,IAAfhoB,EAAQ0uB,QAG/Cp1B,EAAAA,GAAAC,cAAA,OACEtC,UAAU,sBACVqD,IAAK0F,EAAQhD,IAEb1D,EAAAA,GAAAC,cAACm4H,GAAAA,GAAK,CACJp3H,IAAK0F,EAAQhD,GACb25D,MAAOA,EACP32D,QAASA,EACTa,OAAQ8wH,EAAAA,GAAYC,OACpBviG,aAAawiG,EAAAA,GAAAA,GAAcp6H,EAAMuI,EAAS+jD,EAAWpjB,GACrDjS,KAAM1uB,EAAQ0uB,KACdz3B,UAAU,cACVirB,OAAQivG,EACRW,YAAaZ,EACbz0F,aAAcsnB,EAAU/jD,EAAQ6J,SAASwC,cAAgBrM,EAAQqM,YACjEiC,eAAeC,EAAAA,EAAAA,IAAiBhC,EAAiBpN,MAGpD,KAwBD,K,4BC5IV,MAwBA,GAvBEggC,IAGA,MAAM4yF,GAAYlrH,EAAAA,EAAAA,IAAuB,MAEnCsa,GAAgBpkB,EAAAA,EAAAA,KAAamN,IACnB,UAAVA,EAAE5P,KACYy3H,EAAU/qH,UAAYtH,SAASsyH,eAG/C7yF,GACF,GACC,CAACA,IAQJ,OANApnC,EAAAA,EAAAA,KAAU,KACRoQ,OAAOoK,iBAAiB,UAAW4O,GAAe,GAE3C,IAAMhZ,OAAOqK,oBAAoB,UAAW2O,GAAe,KACjE,CAACA,IAEG4wG,CAAS,E,4BCmBlB,MA+GA,IAAej7H,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAKhC,MAAO,CACLmC,OACAu/B,MANWC,EAAAA,EAAAA,KAAWhgC,EAAQ3B,GAO9B44B,UANewvF,EAAAA,EAAAA,KAAmBzmH,EAAQ3B,GAO1CuQ,QANcpO,IAAQkmH,EAAAA,GAAAA,IAAelmH,GAAMmmH,EAAAA,EAAAA,KAAqB3mH,IAAS4mH,EAAAA,EAAAA,KAAsB5mH,EAAQQ,EAAKhP,KAO5Gq1H,gBAAiB/pH,QAAQkD,EAAO8mH,YAAYhlF,YAAYj0C,QACzD,GAbekS,EA/GoCgnH,EACtD1oH,SACA2oH,eACAxmH,OACAu/B,OACA9I,WACAroB,UACAi4G,kBACAI,oBACAn7H,cAEA,MAAM,mBAAEo/D,IAAuBrtD,EAAAA,EAAAA,MACzB9R,GAAUC,EAAAA,EAAAA,MAETk7H,EAAiBC,EAAeC,IAAkB96H,EAAAA,EAAAA,MAClD+6H,EAAuBC,EAAqBC,IAAwBj7H,EAAAA,EAAAA,MACpEk7H,EAA6BC,EAA2BC,IAA+Bp7H,EAAAA,EAAAA,MACvFq7H,EAAuBC,EAAqBC,IAAyBv7H,EAAAA,EAAAA,KAEtEw7H,GAAyBv2H,EAAAA,EAAAA,KAAY,KACzCk2H,IACAH,GAAqB,GACpB,CAACG,EAA2BH,IAEzBS,GAAax2H,EAAAA,EAAAA,KAAY,KAC7Bq2H,IACAT,GAAe,GACd,CAACS,EAAqBT,IAEnBh3E,GAAiB63E,EAAAA,GAAAA,GAAsB,CAC3CxnH,OACAu/B,OACA9I,WACAroB,UACAi4G,kBACAkB,aACAD,2BACC,GAEGpzG,GAActW,EAAAA,EAAAA,IAAgB,KAClCtS,EAAQuS,EAAO,IAGX4pH,GAAgB7pH,EAAAA,EAAAA,IAAiBM,IACrCA,EAAEwI,kBAEF,MAAMikD,GAAQC,EAAAA,GAAAA,KACdF,EAAmB,CACjB1J,MAAOnjD,EACPX,OAAQW,EACR8sD,SACA,IAGEo7D,EAAY2B,GAAmBxzG,GAErC,OACE5mB,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,oCACVK,QAAS4oB,EACTy7B,eAAgBA,EAChBo2E,UAAWA,IAEVzmH,EAAAA,EAAAA,IAASzB,GACRvQ,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQzvB,EACR2oH,aAAcA,EACdn8E,WAAS,EACT8wE,WAAW,SACXwM,kBAAmBn6F,EAAAA,GAAkBh3B,eAGvClJ,EAAAA,GAAAC,cAAC4jD,GAAAA,EAAa,CACZtzC,OAAQA,EACR2oH,aAAcA,EACdrL,WAAW,SACX9wE,WAAS,EACTs9E,kBAAmBn6F,EAAAA,GAAkBh3B,eAGxCiwH,GAAqBlnF,GAAMqoF,gBAC1Bt6H,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,oBACVuqG,MAAI,EACJriD,OAAK,EACLlkD,KAAK,OACL3D,QAASm8H,GAERl8H,EAAQ,YAGZ47H,GACC75H,EAAAA,GAAAC,cAACs6H,GAAAA,EAAa,CACZl2H,OAAQ+0H,EACRv0H,QAASy0H,EACTzpH,oBAAqBkqH,EACrBxpH,OAAQA,IAGXmpH,GACC15H,EAAAA,GAAAC,cAACu6H,GAAAA,EAAe,CACdn2H,OAAQk1H,EACR10H,QAAS40H,EACT5pH,oBAAqB+pH,EACrBrpH,OAAQA,IAGH,KClHT4tD,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAK,GAyGjD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACxC,MAAMmsD,GAAe/rD,EAAAA,EAAAA,KAAeJ,GAAQmsD,aACtC5mC,EAAW4mC,EAAaC,gBAAgBzf,QAE9C,MAAO,CACLhoB,WAAYY,GAAY4mC,EAAaE,gBAAgBC,QACrD/mC,WACAgnC,aAAcvsD,EAAOwsD,WAAWz2B,QACjC,GARiBh2B,EAvG6BwoH,EAC/C30F,cACAjP,YACAY,WACAgnC,mBAEA,MAAM,qBACJK,EAAoB,iBACpB0D,IACEzyD,EAAAA,EAAAA,MAGE6b,GAAere,EAAAA,EAAAA,IAAuB,MAEtCpP,GAAOD,EAAAA,EAAAA,MAEN0gE,EAAoBC,IAAyB3uD,EAAAA,EAAAA,KAAkB,GAEhE+uD,GAAmBrgE,EAAAA,EAAAA,KAAQ,KAC/B,IAAK64B,EAAU,MAAO,GACtB,MAAMijG,EAAY,IAAIxtC,IAAIzuB,GACpBk8D,EAAgBljG,EAASqI,QAAQp8B,IAAQg3H,EAAUltC,IAAI9pF,KAE7D,OAAOyiC,EAAAA,GAAAA,IAAmB,CAAEC,IAAKu0F,EAAet0F,MAAOP,EAAapkC,KAAM,QAAS,GAClF,CAAC+1B,EAAUgnC,EAAc34B,IAEtB80F,GAAkBtqH,EAAAA,EAAAA,IAAiB5M,IACvC8+D,EAAiB,CAAE9+D,KAAIm3H,sBAAsB,GAAO,IAGhDn1E,GAAiBjiD,EAAAA,EAAAA,KAAY,EAAGsrB,gBAChCA,IAAcmwC,EAAAA,GAAkBC,WAClChB,IAAa,KACXW,GAAsB,GAE1B,GACC,IAEGC,GAA2BzuD,EAAAA,EAAAA,IAAgB,KAC/CuuD,GAAuBG,IAAUA,GAAK,IAGlC84D,GAAoB5rB,EAAAA,GAAAA,GAAkB,CAACpmE,GAAcy1D,EAAAA,OAA+B1kE,EAE1F,OACE72B,EAAAA,GAAAC,cAAA,OAAKmX,IAAKwU,EAAcjuB,UAAU,uBAChCqC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACb/oD,UAAU,+BACVgpD,MAAOmxE,EAAoB74D,OAAmBpgE,EAC9C+nD,WAAYlB,EACZ2Z,YAAU,IAERy4D,GAAqB93H,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAC9BirE,IAAsB74D,GAAkBl/D,QACvCC,EAAAA,GAAAC,cAAC83H,GAAAA,EAAY,CACX9/G,KAAM9Z,EAAK,6BACXgS,YAAahS,EAAK,0CAGrB25H,IAAsBhyF,GAAe92B,QAAQyvD,GAAc1+D,SAC1DC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,mBACX8gE,EAAa1+D,OAjEG,GAkEfC,EAAAA,GAAAC,cAACy5F,GAAAA,EAAI,CAAC/7F,UAAU,OAAOK,QAAS+gE,GAC7B5gE,EAAKygE,EAAqB,2BAA6B,6BAG3DzgE,EAAK,mBAEPsgE,EAAar+D,KAAI,CAACsD,EAAIlE,KACrB,GAAKo/D,KAAsBp/D,GAzEV,GA6EjB,OACEQ,EAAAA,GAAAC,cAACg5H,GAAoB,CACnB1oH,OAAQ7M,EACR1F,QAAS48H,EACTzB,mBAAiB,GACjB,KAKTrB,GAAqB74D,GAAkBl/D,QACtCC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,mBAAmBQ,EAAK,sBACrC8gE,EAAiB7+D,KAAKsD,GAEnB1D,EAAAA,GAAAC,cAACg5H,GAAoB,CACnB1oH,OAAQ7M,EACR1F,QAAS48H,EACTzB,mBAAiB,QAOzB,KCEV,IAAe37H,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAChC,IAAKmC,EACH,MAAO,CAAC,EAGV,MAAMooH,GAAoBtX,EAAAA,EAAAA,IAAqB9wG,GACzCqoH,EAAkBD,GAAoB5oF,EAAAA,EAAAA,KAAWhgC,EAAQ4oH,QAAqBj8H,EAEpF,MAAO,CACL6T,UACIooH,GAAqB,CAAEC,mBAC5B,GAbe9oH,EAxF2B+oH,EAC7Ct0H,UACAo/B,cACAv1B,SACAmC,OACAqoH,sBAEA,MAAM,aAAEpmG,IAAiB5kB,EAAAA,EAAAA,OAEnB,SAAE7M,IAAaC,EAAAA,EAAAA,MACf83H,GAAkBC,EAAAA,EAAAA,IAAkBx0H,QAAkD7H,GAAvCs8H,EAAAA,EAAAA,IAA4Bz0H,GAC3E00H,GAAe7uH,EAAAA,EAAAA,IAAS8uH,EAAAA,EAAAA,IAAoB30H,EAAS,UACrD40H,EAAetsH,SAAQusH,EAAAA,EAAAA,IAAqB70H,IAE5CkgB,GAActW,EAAAA,EAAAA,IAAgB,KAClCqkB,EAAa,CAAEpkB,SAAQiL,UAAW9U,EAAQhD,GAAIm3H,sBAAsB,GAAO,IAGvE18H,GAAOD,EAAAA,EAAAA,KAEPu6H,EAAY2B,GAAmBxzG,GAErC,IAAKlU,EACH,OAGF,MAAMwjB,EAAO6kG,GAAmBroH,EAEhC,OACE1S,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,kCACVykB,QAASlf,EACTlF,QAAS4oB,EACT6xG,UAAWA,GAEXz4H,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLC,KAAMA,EACNo2B,gBAAiByuE,GAAiBpvE,SAEpC3rD,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,QACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAACosD,GAAAA,EAAa,CACZn2B,KAAMA,EACNu4E,iBAAe,EACfniD,gBAAiB/7C,IAAWwqH,GAAiBr3H,IAAMq3H,GAAiBpvE,SAEtE3rD,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gBACbqC,EAAAA,GAAAC,cAACy5F,GAAAA,EAAI,CAAC/7F,UAAU,SACb69H,EAAAA,GAAAA,IAAoBr9H,EAAqB,IAAfuI,EAAQ0uB,SAKzCp1B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UAAUyD,IAAI,QASvC,SACEjD,EAAiBuI,EAAqBwG,EAAkB44B,EAAsBw1F,GAE9E,IAAKpuH,EACH,OAAOuuH,EAAAA,EAAAA,GAAqBt9H,EAAMuI,OAAS7H,EAAWinC,GAGxD,MAAM41F,GAAYC,EAAAA,EAAAA,IAAoBj1H,GAEtC,OACE1G,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,iBACdqC,EAAAA,GAAAC,cAAA,OACE+H,IAAKkF,EACL4d,IAAI,GACJntB,WACEuC,EAAAA,GAAAA,GAAe,uBAAwBo7H,GAAgB,QAASI,GAAa,yBAE/E7zH,WAAW,KAEZ+zH,EAAAA,EAAAA,IAAgBl1H,IAAY1G,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UACvCk5H,EAAAA,EAAAA,GAAqBt9H,EAAMuI,GAAS,EAAMo/B,GAGjD,CA/Ba+1F,CAAc19H,EAAMuI,EAAS00H,GAAgBH,EAAgBn1F,EAAaw1F,MAIxE,KCjDf,IAAe99H,EAAAA,EAAAA,KA5CmBs+H,EAChCC,aAAYl2F,eAEZ,MAAMstF,GAAcv0H,EAAAA,EAAAA,KAAQ,IAmB9B,SAAgCm9H,GAE9B,GADgBA,EAAWtiC,MAAM,0BACpB,CACX,MAAMrkE,EAAO,IAAI1G,KAAKqtG,GACtB,MAAO,CAAC,CAAE3mG,OAAMnd,MAAM6/C,EAAAA,GAAAA,GAAmB1iC,IAC3C,CAEA,MAAM4mG,EAAa,GACbC,EAAc,IAAIvtG,KAClBioC,EAAcslE,EAAY9lE,cAC1B+lE,EAAaD,EAAYplE,UAAa,IAAInoC,KAAM,GAAEioC,KAAeolE,KAAellE,UAClFF,EACAA,EAAc,EAElB,IAAK,IAAI3P,EAAI,EAAGA,EA3CO,EA2CeA,IAAK,CACzC,MAAM5xB,EAAO,IAAI1G,KAAM,GAAEwtG,EAAal1E,KAAK+0E,KAC3CC,EAAWt8H,KAAK,CAAE01B,OAAMnd,MAAM6/C,EAAAA,GAAAA,GAAmB1iC,IACnD,CAEA,OAAO4mG,CACT,CAvCoCG,CAAuBJ,IAAa,CAACA,IACvE,OACE/7H,EAAAA,GAAAC,cAAA,WAAStC,UAAU,6CAChBw1H,EAAY/yH,KAAI,EAAGg1B,OAAMnd,UAEtBjY,EAAAA,GAAAC,cAAA,OACEjC,QAASA,IAAM6nC,EAASzQ,GACxBz3B,UAAU,YACVqD,IAAKiX,GAELjY,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,aACXvC,EAAAA,GAAAC,cAAA,YAAOgY,MAIL,ICTR2wC,GAAkB,EAAI9vC,EAAAA,EAmC5B,IAAetb,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,SAAQu8C,cAGV,CACL7B,OAHYmxE,EAAAA,EAAAA,KAAYlqH,EAAQ3B,EAAQu8C,MAF1B76C,EAjCqCoqH,EACvDvvE,UACA7B,QACAjtD,cAEA,MAAM4oB,GAAcnjB,EAAAA,EAAAA,KAAY,KAC9BzF,EAAQ8uD,EAAQ,GACf,CAACA,EAAS9uD,IAEPy6H,EAAY2B,GAAmBxzG,GAErC,GAAKqkC,EAIL,OACEjrD,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,oCACVK,QAAS4oB,EACTk2D,gBAAgB,aAChB27C,UAAWA,GAEXz4H,EAAAA,GAAAC,cAAC8sD,GAAAA,EAAS,CACRprD,KAAMinD,GACNqC,MAAOA,EACPttD,UAAU,aACVqvD,gBAAgB,sBAElBhtD,EAAAA,GAAAC,cAAA,OAAKmB,IAAI,OAAOzD,UAAU,aAAYqE,EAAAA,GAAAA,GAAWipD,EAAM7lD,QAC9C,KCjBT+4D,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAK,GAgIjD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAQy2B,KAAM8hB,GAAcv4C,EAAOw4C,OAC7B,cAAEn0B,EAAew8F,UAAYqE,SAAUC,IAA6BnlH,GACpE,eACJqsD,EAAc,cAAE3mC,EAAa,cAAE0kG,EAAe/rH,OAAQ+mH,IACpDhlH,EAAAA,EAAAA,KAAeJ,GAAQmsD,cAErB,SAAE5mC,GAAcG,GAAe3f,MAAS,CAAC,EAE/C,MAAO,CACLse,gBACAkB,WACA4/F,yBACA5sE,YACA8T,iBACA+9D,gBACAhF,eACD,GAlBerlH,EA9HkCsqH,EACpDz2F,cACA02F,kBACA/kG,WACA4/F,yBACA5sE,YACA8T,iBACA+9D,gBACAhF,eACAmF,qBACAl9D,cAEA,MAAM,qBAAEi4D,EAAoB,WAAEkF,IAAe3sH,EAAAA,EAAAA,MAEvC5R,GAAOD,EAAAA,EAAAA,MACP,SAAEgF,IAAaC,EAAAA,EAAAA,MAEfuiD,GAAiBjiD,EAAAA,EAAAA,KAAY,EAAGsrB,gBAChCA,IAAcmwC,EAAAA,GAAkBC,WAClChB,IAAa,KACXq5D,EAAqB,CACnB91H,KAAM,QACN,GAEN,GAEC,CAACokC,IAEE62F,GAAmBl5H,EAAAA,EAAAA,KACtBC,IACM4zH,IACLoF,EAAW,CAAEnsH,OAAQ+mH,EAAcxkH,SAAUpP,EAAIm3H,sBAAsB,IAElE33H,GACHq8D,IACF,GAEF,CAAC+3D,EAAcp0H,EAAUq8D,IAGrBm4D,GAAgB94H,EAAAA,EAAAA,KAAQ,IACvB64B,GAAgC,IAApBA,EAAS13B,OAInB03B,EACJr3B,KAAKsD,IACJ,MAAO6M,EAAQiL,IAAam8G,EAAAA,GAAAA,GAAqBj0H,GAEjD,OAAO2zH,IAAyB9mH,IAASo4B,KAAKntB,EAAU,IAEzDskB,OAAO9wB,SACPk2C,MAAK,CAACC,EAAGC,IAAMA,EAAEhwB,KAAO+vB,EAAE/vB,OAVpBoR,GAAAA,GAWR,CAAC/O,EAAU4/F,IAmBRuF,EAAer+D,IAAmBA,EAAe7T,QAAU6T,EAAew0D,WAAa2E,EAAc33H,SACrGu8H,GAAev8H,OAErB,OACEC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACb/oD,UAAU,yCACVgpD,MAAO+wE,EACP9wE,WAAYlB,EACZ2Z,YAAU,GAETm9D,GACCx8H,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAC67H,GAAW,CACVC,WAAYS,EACZ32F,SAAU42F,KAIfG,GACC58H,EAAAA,GAAAC,cAAC83H,GAAAA,EAAY,CACX9/G,KAAM9Z,EAAK,6BACXgS,YAAahS,EAAK,0CAGrB6Q,QAAQstH,GAAev8H,SACtBC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,QACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uCAAuCyD,IAAKjD,EAAKkD,MAAQ,YAASxC,GAC7EV,EAAK,WAEPm+H,EAAel8H,KAAKsD,GAEjB1D,EAAAA,GAAAC,cAACo8H,GAAqB,CACpB9rH,OAAQ+mH,EACRxqE,QAASppD,EACT1F,QAAS2+H,OAMlB3tH,QAAQ0oH,EAAc33H,SACrBC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,QACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uCAAuCyD,IAAKjD,EAAKkD,MAAQ,YAASxC,GAC7EV,EAAK,mBAEPu5H,EAAct3H,KA/DzB,SAA4BsG,GAC1B,MAAMuR,GAAOwjH,EAAAA,EAAAA,GAAqBt9H,EAAMuI,GAClCgM,EAAO+3C,EAAU/jD,EAAQ6J,QAE/B,GAAK0H,GAASvF,EAId,OACE1S,EAAAA,GAAAC,cAAC+6H,GAAW,CACVzqH,OAAQ7J,EAAQ6J,OAChB7J,QAASA,EACTo/B,YAAaA,GAGnB,MAoDQ,K,4BCvIV,MAuFA,IAAetoC,EAAAA,EAAAA,KAvFiCq/H,EAC9CC,gBACAp/B,0BAGA,MAAMtmF,GAAM7J,EAAAA,EAAAA,IAAuB,OAC7B,eAAE4qB,EAAc,cAAE4kG,EAAa,SAAExwF,IAAax8B,EAAAA,EAAAA,MAC9C5R,GAAOC,EAAAA,GAAAA,MAEP,OACJwR,EAAM,SAAE8tB,EAAQ,eAAEw5E,EAAc,YAAEC,GAChC2lB,GAEJE,EAAAA,GAAAA,IAAe5lH,EAAKsmF,GAAsBnB,IACR,IAA5BA,EAAM0gC,mBACRF,EAAc,CAAEr/F,YAClB,IAGF,MAAM9W,GAActW,EAAAA,EAAAA,IAAgB,KAClC6nB,EAAe,CAAEuF,aACjB6O,EAAS,CAAE7oC,GAAIkM,GAAS,KAGpB,kBACJ2iE,EAAiB,kBAAEC,EAAiB,wBACpC0uB,EAAuB,kBAAEzuB,EAAiB,uBAC1CC,EAAsB,sBAAEC,IACtBC,EAAAA,GAAAA,GAAuBx7D,IAGzBwP,YAAas2G,EACbrwF,gBAAiBswF,IACfrwF,EAAAA,GAAAA,IAAcl8B,IAChBA,EAAEwI,kBACFq5D,EAAkB7hE,EAAE,IAGhB6nH,EAAY2B,GAAmBxzG,GAErC,OACE5mB,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP8R,IAAKA,EACLzZ,UAAU,oCACVK,QAAS4oB,EACTqmB,YAAai0D,EACb94E,cAAeqqD,EACfgmD,UAAWA,IAEVzmH,EAAAA,EAAAA,IAASpC,GACR5P,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQpwB,EACRspH,cAAY,EACZn8E,WAAS,EACT8wE,WAAW,SACXwM,kBAAmBn6F,EAAAA,GAAkBh3B,eAGvClJ,EAAAA,GAAAC,cAAC4jD,GAAAA,EAAa,CACZtzC,OAAQX,EACRspH,cAAY,EACZrL,WAAW,SACX9wE,WAAS,EACTs9E,kBAAmBn6F,EAAAA,GAAkBh3B,eAGzClJ,EAAAA,GAAAC,cAACm9H,GAAAA,EAAW,CAACz/H,UAAU,yBAAyBsvC,YAAakwF,EAAsBn/H,QAASk/H,GACzF/+H,EAAK,sBACN6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UAEZiwE,GACCxyE,EAAAA,GAAAC,cAACu3G,GAAAA,EAAoC,CACnCnzG,OAAQkuE,EACR+G,OAAQ9G,EACRilC,WAAYrgG,EACZsmB,SAAUA,EACVw5E,eAAgBA,EAChBD,WAAS,EACTE,YAAaA,EACbtyG,QAAS6tE,EACT7iE,oBAAqB8iE,IAGhB,IC1ETxU,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAO,GA+FnD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAQ+1B,QAASo1F,GAAenrH,EAAOorH,SACjCj2F,EAAYn1B,EAAOtR,MAAM+nC,MACzB,qBAAE40F,GAAyBrrH,EAEjC,MAAO,CACLmrH,aACAh2F,YACAk2F,uBACD,GAVetrH,EA7F8BurH,EAChDH,aACAh2F,YACAk2F,uBACAh+D,cAEA,MAAM,aACJk+D,EAAY,SAAElxF,EAAQ,uBACtBmxF,EAAsB,wBAAEC,IACtB5tH,EAAAA,EAAAA,MAGE6tH,GAAcrwH,EAAAA,EAAAA,IAAuB,OAI3C9O,EAAAA,EAAAA,KAAU,KACR0/D,IAAa,KACXs/D,GAAc,GACd,GACD,CAACA,KAEJtjD,EAAAA,GAAAA,GAAoByjD,GAAcP,GAElC,MAAMz2G,GAAcnjB,EAAAA,EAAAA,KAAaC,IAC/B6oC,EAAS,CAAE7oC,KAAIm3H,sBAAsB,IACrCt7D,IACAzwD,YAAW,KACT4uH,EAAuB,CAAEh6H,MAAK,GAjCJ,IAkCD,GAC1B,CAAC6oC,EAAUmxF,EAAwBn+D,IAEhCs+D,GAAgCp6H,EAAAA,EAAAA,KAAY,KAChDk6H,GAAyB,GACxB,CAACA,IAEEx/H,GAAOD,EAAAA,EAAAA,KAEb,OACE8B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gCACZ0/H,GACCr9H,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,oBAAoByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC3DmB,EAAAA,GAAAC,cAAA,OAAKmX,IAAKwmH,EAAajgI,UAAU,aAC9B0/H,EAAWj9H,KAAK4/B,GACfhgC,EAAAA,GAAAC,cAAA,OACEe,IAAKg/B,EACLriC,UAAU,gBACVK,QAASA,IAAM4oB,EAAYoZ,GAC3B5+B,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAE1BmB,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACC,KAAMmR,EAAUrH,KACxBhgC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBAAiBqE,EAAAA,GAAAA,IAAWmtD,EAAAA,EAAAA,IAAuB9nB,EAAUrH,KAvD/E,WA6DNu9F,GACCv9H,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAAA,MACEtC,WAAWuC,EAAAA,GAAAA,GACT,4CACCm9H,GAAc,kBAEjBj8H,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAEzBV,EAAK,UAEN6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,qBACVkY,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACNyE,UAAW3X,EAAK,SAChBH,QAAS6/H,EACTx8H,MAAOlD,EAAKkD,OAEZrB,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,YAGdg7H,EAAqBn9H,KAAKsD,GACzB1D,EAAAA,GAAAC,cAACg5H,GAAoB,CACnB1oH,OAAQ7M,EACRy1H,mBAAiB,EACjBn7H,QAAS4oB,OAKb,KCpDJu3C,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAK,GA0ajD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU4rH,oBACT,MAAQ71F,QAAShC,GAAe/zB,EAAOw2B,aAAe,CAAC,GACjD,cACJnS,EAAa,SAAEw8F,GACb7gH,EAEJ,IAAK+zB,EACH,MAAO,CAAC,EAGV,MAAM,eACJs4B,EAAc,cAAEw/D,EAAa,aAAEC,EAAY,cAAEpmG,EAAa,cAAEklG,IAC1DxqH,EAAAA,EAAAA,KAAeJ,GAAQmsD,cACnBxf,QAASo/E,GAAkBF,GAAiB,CAAC,GAC7Cl/E,QAASq/E,GAAmBF,GAAgB,CAAC,GAC7C5G,SAAUC,GAA2BtE,EACvCt7F,EAAWG,IAAgBkmG,EAAgB,WAAa,SAASrmG,UACjE,kBAAE0mG,IAAsBC,EAAAA,EAAAA,KAAwBlsH,EAAQmsH,EAAAA,MAAiC,CAAC,EAEhG,MAAO,CACL9nG,gBACA0P,aACAi4F,iBACAD,gBACAxmG,WACA4/F,yBACA94D,iBACAu+D,gBACAwB,oBAAqBH,EACtB,GA9BelsH,EAxa2BssH,EAC7CT,gBACAh4F,cACAi2F,aACAS,kBACAjmG,gBACA0P,aACAi4F,iBACAD,gBACAxmG,WACA4/F,yBACA94D,iBACA+/D,sBACAxB,gBACAv9D,UACAk9D,yBAEA,MAAM,SACJlwF,EAAQ,uBAAEmxF,EAAsB,qBAAElG,EAAoB,sBACtDgH,EAAqB,2BAAEC,IACrB1uH,EAAAA,EAAAA,MAGE6b,GAAere,EAAAA,EAAAA,IAAuB,MAEtCmxH,GAAmBnxH,EAAAA,EAAAA,IAAuB,MAE1CtP,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MAEP,SAAE8E,IAAaC,EAAAA,EAAAA,OACdw7H,EAAqBC,IAA0B1uH,EAAAA,EAAAA,KAAkB,IACjE2uH,EAAsBC,IAA2B5uH,EAAAA,EAAAA,KAAkB,IACnE6uH,EAAeC,IAAoB9uH,EAAAA,EAAAA,IAAkC,OAEtEkH,GAAM7J,EAAAA,EAAAA,IAAuB,OAEnC8J,EAAAA,GAAAA,IAAc,KACRymH,GAAeW,EAA2B,CAAC,EAAE,IAGnD,MAAM/4E,GAAiBjiD,EAAAA,EAAAA,KAAY,EAAGsrB,gBAChCA,IAAcmwC,EAAAA,GAAkBC,WAClChB,IAAa,KACXq5D,EAAqB,CACnB91H,KAAMo8H,EAAgB,WAAa,OACnCmB,QAASF,GACT,GAEN,GAEC,CAACj5F,EAAai5F,IAEXnE,GAAkBn3H,EAAAA,EAAAA,KACrBC,IACC6oC,EAAS,CAAE7oC,KAAIm3H,sBAAsB,IAEjCn3H,IAAO6yB,GACTmnG,EAAuB,CAAEh6H,OAGtBR,GACHq8D,GACF,GAEF,CAAChzB,EAAUhW,EAAerzB,EAAUw6H,EAAwBn+D,IAGxD2/D,GAAwBz7H,EAAAA,EAAAA,KAAaC,IACzC86H,EAAsB,CAAE96H,MAAK,GAC5B,CAAC86H,IAEJ,SAASW,EAAwBF,GAC/B,OAAgC9gI,EAAhB,UAAZ8gI,EAAiC,4BACrB,WAAZA,EAAkC,0BACtB,aAAZA,EAAoC,wBAC5B,wBACd,CAEA,MAAM,kBACJ1sD,EAAiB,kBAAEC,EAAiB,kBAAEC,EAAiB,uBACvDC,EAAsB,sBAAEC,IACtBC,EAAAA,GAAAA,GAAuBx7D,GAErBi7D,GAAiB/hE,EAAAA,EAAAA,IAAgB,IAAM8G,EAAI1J,UAC3C4kE,GAAiBhiE,EAAAA,EAAAA,IAAgB,IAAM8G,EAAI1J,QAASlF,cAAc,qCAClE4pE,GAAoB9hE,EAAAA,EAAAA,IAAgB,IAAM8G,EAAI1J,QAASlF,cAAc,kBAErE42H,IAAqB9uH,EAAAA,EAAAA,IAAiBM,IAC1C6hE,EAAkB7hE,EAAE,IAGhByuH,IAAuBn/H,EAAAA,GAAAA,GAAe,OAAQ,mBAqD9C89H,IAAep/H,EAAAA,EAAAA,KAAQ,KAC3B,IAAKk/H,KAAmBh4F,GAAgBA,EAAYw5F,WAAW,MAAQx5F,EAAY/lC,OAAS,GAC1F,OAAOymC,GAAAA,EAIT,MAAMikB,GAAY7Z,EAAAA,EAAAA,MAAY8Z,MAAM/hB,KAG9B42F,IADiBC,EAAAA,GAAAA,IAAcC,EAAAA,MAAkB,IAChB3/F,QAAQp8B,IAC7C,IAAKo6H,EAAe,OAAO,EAC3B,MAAMprH,EAAO+3C,EAAU/mD,GACvB,OAAOgP,IAAQkjB,EAAAA,EAAAA,IAAcljB,EAAK,IAE9BgtH,GAAev5F,EAAAA,GAAAA,IAAmB,CAAEC,IAAKm5F,EAAiBl5F,MAAOP,EAAapkC,KAAM,SAE1F,GAAIo8H,EAAe,OAAO4B,EAE1B,MAAMC,EAAmB,IACnBppG,EAAgB,CAACA,GAAiB,MAClC0P,GAAc,IAOd25F,EAAe,KAJGz5F,EAAAA,GAAAA,IAAmB,CACzCC,IAAKu5F,EAAkBt5F,MAAOP,EAAapkC,KAAM,YAK9Cg+H,GAGL,OAAOx5F,EAAAA,GAAAA,IAAO,KACT+nB,EAAAA,GAAAA,GAAY2xE,OAAc/gI,EAAW03B,EAAgB,CAACA,QAAiB13B,OACvEovD,EAAAA,GAAAA,GAAYiwE,GAAkB,KACjC,GACD,CAACp4F,EAAavP,EAAe0P,EAAYi4F,EAAgBJ,KAE5D3jD,EAAAA,GAAAA,GAAoBukD,GAAmBV,GAAaj+H,QAAU+9H,GAAe,GAE7E,MAAMC,IAAgBn/H,EAAAA,EAAAA,KAAQ,KAC5B,IAAKknC,GAAeA,EAAY/lC,OAhMO,IAgMyCk+H,EAC9E,OAAOz3F,GAAAA,EAIT,MAAMikB,GAAY7Z,EAAAA,EAAAA,MAAY8Z,MAAM/hB,KAE9Bk3F,EAAc5B,EAAcn+F,QAAQp8B,IACxC,IAAKo6H,EAAe,OAAO,EAC3B,MAAMprH,EAAO+3C,EAAU/mD,GACvB,OAAOgP,IAAQkjB,EAAAA,EAAAA,IAAcljB,EAAK,IAGpC,OAAOu7C,EAAAA,GAAAA,GAAY4xE,GAAa,EAAK,GACpC,CAAC5B,EAAeH,EAAeh4F,IAE5B4xF,IAAgB94H,EAAAA,EAAAA,KAAQ,KAC5B,IAAMknC,IAAgBi2F,IAAgBtkG,GAAgC,IAApBA,EAAS13B,OACzD,OAAOymC,GAAAA,EAIT,MAAMikB,GAAY7Z,EAAAA,EAAAA,MAAY8Z,MAAM/hB,KAEpC,OAAOlR,EACJr3B,KAAKsD,IACJ,MAAO6M,EAAQiL,IAAam8G,EAAAA,GAAAA,GAAqBj0H,GAC3CgP,EAAO+3C,EAAUl6C,GACvB,GAAKmC,KACDorH,IAAkBloG,EAAAA,EAAAA,IAAcljB,IAEpC,OAAO2kH,IAAyB9mH,IAASo4B,KAAKntB,EAAU,IAEzDskB,OAAO9wB,QAAQ,GACjB,CAAC82B,EAAai2F,EAAYtkG,EAAUqmG,EAAezG,KAEtD54H,EAAAA,EAAAA,KAAU,KACHqnC,GACL0xF,EAAqB,CACnB91H,KAAMo8H,EAAgB,WAAa,OACnCmB,QAASF,EACTe,0BAA0B,EAC1BC,mCAAmC,GACnC,GAED,CAAChB,IAEJ,MAAMiB,IAA2Bv8H,EAAAA,EAAAA,KAAY,KAC3Cm7H,GAAwBD,EAAoB,GAC3C,CAACA,IAEEsB,IAA4Bx8H,EAAAA,EAAAA,KAAY,KAC5Cq7H,GAAyBD,EAAqB,GAC7C,CAACA,IAqBEqB,GAAiBxI,GAEjBkF,GAAiC,QAAlBmC,GAA2BxgE,IAAmBA,EAAe7T,QAAU6T,EAAew0D,WACrGiL,GAAaj+H,SAAWg+H,GAAch+H,SAAWmgI,GAAengI,OAChEogI,GAAqB5hE,GAAgBw0D,SAErCqN,IAAwBt6F,IAAgBi2F,IAAe+B,GAEvD,QAAEhiC,KAAYM,EAAAA,GAAAA,IAAwB,CAC1CC,QAASzwE,EACTmxE,WAlR0B,IAmR1B5uF,YAAaiyH,KAGf,GAAIA,GACF,OAAOpgI,EAAAA,GAAAC,cAACu9H,GAAc,CAACj+D,QAASA,IAGlC,MAAM8gE,GAAgD,QAAlBtB,GAA0B/vH,QAAQkxH,GAAengI,QAErF,OACEC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACbtvC,IAAKwU,EACLjuB,UAAU,oCACVgpD,MAAOu5E,GACPt5E,WAAYlB,EAEZ46E,sBAAoB,EACpBjhE,YAAU,GAETm9D,GACCx8H,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAC67H,GAAW,CACVC,WAAYS,EACZ32F,SAAU42F,KAIfG,IACC58H,EAAAA,GAAAC,cAAC83H,GAAAA,EAAY,CACX9/G,KAAMha,EAAQ,6BACdkS,YAAalS,EAAQ,0CAGxB+Q,QAAQgvH,GAAaj+H,UAAY+9H,GAChC99H,EAAAA,GAAAC,cAAA,OACEtC,UAAU,8BACVyD,IAAKnD,EAAQoD,MAAQ,WAAQxC,EAC7BuY,IAAKsnH,GAEJV,GAAa59H,KAAKsD,GACjB1D,EAAAA,GAAAC,cAACsuG,GAAAA,EAAQ,CACP3+F,OAAQlM,EACR/F,UAAU,+BACVK,QAASkhI,EACT/+B,SAAUz8F,OAKjBsL,QAAQgvH,GAAaj+H,SACpBC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,kBAAkByD,IAAKnD,EAAQoD,MAAQ,YAASxC,GAC3Dm/H,GAAaj+H,OAxUK,GAyUjBC,EAAAA,GAAAC,cAACy5F,GAAAA,EAAI,CAAC/7F,UAAU,OAAOK,QAASgiI,IAC7B/hI,EAAQ0gI,EAAsB,2BAA6B,6BAG/D1gI,EAAQ6/H,EAAgB,mBAAqB,oCAE/CE,GAAa59H,KAAI,CAACsD,EAAIlE,KACrB,GAAKm/H,KAAuBn/H,GAhVT,GAoVnB,OACEQ,EAAAA,GAAAC,cAACg5H,GAAoB,CACnBE,mBAAiB,EACjB5oH,OAAQ7M,EACR1F,QAAS48H,GACT,KAKT5rH,QAAQ+uH,GAAch+H,SACrBC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,kBAAkByD,IAAKnD,EAAQoD,MAAQ,YAASxC,GAC3Dk/H,GAAch+H,OAjWI,GAkWjBC,EAAAA,GAAAC,cAACy5F,GAAAA,EAAI,CAAC/7F,UAAU,OAAOK,QAASiiI,IAC7BhiI,EAAQ4gI,EAAuB,2BAA6B,6BAGhE5gI,EAAQ,mCAEV6+H,GACC98H,EAAAA,GAAAC,cAAC48H,GAAyB,CAACC,cAAeA,EAAep/B,oBAAqB5B,KAE/EiiC,GAAc39H,KAAI,CAACsD,EAAIlE,KACtB,GAAKq/H,KAAwBr/H,GA5WV,GAgXnB,OACEQ,EAAAA,GAAAC,cAACg5H,GAAoB,CACnB1oH,OAAQ7M,EACRw1H,cAAY,EACZl7H,QAAS48H,GACT,KAKT5rH,QAAQsvH,GAAqBv+H,UAAY+lC,GACxC9lC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,kBAAkByD,IAAKnD,EAAQoD,MAAQ,YAASxC,GAC3DZ,EAAQ,8BAEVqgI,EAAoBl+H,KAAKsD,GAEtB1D,EAAAA,GAAAC,cAACg5H,GAAoB,CACnB1oH,OAAQ7M,EACRw1H,cAAY,EACZl7H,QAAS48H,OAMnB56H,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YAAYyZ,IAAKA,GArShCpX,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI,CACHpe,OAAQkuE,EACR+G,OAAQ9G,EACRJ,kBAAmBA,EACnBC,eAAgBA,EAChBC,eAAgBA,EAChB30E,UAAU,yBACVkH,QAAS6tE,EACT7iE,oBAAqB8iE,EACrBhwD,WAAS,GAET3iB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAwB,QAAlB45H,EAA0B,aAAUlgI,EAC1C0hI,WAA8B,QAAlBxB,EAA0B/+H,EAAAA,GAAAC,cAAA,KAAGtC,UAAW0hI,UAA2BxgI,EAE/Eb,QAASA,IAAMghI,EAAiB,QAE/BG,EAAwB,QAE3Bn/H,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAwB,UAAlB45H,EAA4B,aAAUlgI,EAC5C0hI,WAA8B,UAAlBxB,EAA4B/+H,EAAAA,GAAAC,cAAA,KAAGtC,UAAW0hI,UAA2BxgI,EAEjFb,QAASA,IAAMghI,EAAiB,UAE/BG,EAAwB,UAE3Bn/H,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAwB,WAAlB45H,EAA6B,aAAUlgI,EAC7C0hI,WAA8B,WAAlBxB,EAA6B/+H,EAAAA,GAAAC,cAAA,KAAGtC,UAAW0hI,UAA2BxgI,EAElFb,QAASA,IAAMghI,EAAiB,WAE/BG,EAAwB,WAE3Bn/H,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAwB,aAAlB45H,EAA+B,aAAUlgI,EAC/C0hI,WAA8B,aAAlBxB,EAA+B/+H,EAAAA,GAAAC,cAAA,KAAGtC,UAAW0hI,UAA2BxgI,EAEpFb,QAASA,IAAMghI,EAAiB,aAE/BG,EAAwB,eA6P5BkB,IACCrgI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,kBAAkByD,IAAKnD,EAAQoD,MAAQ,YAASxC,IAC1Di/H,GACA99H,EAAAA,GAAAC,cAACy5F,GAAAA,EAAI,CAAC/7F,UAAU,gCAAgCK,QAASohI,IACtDjhI,EAAK,uBAAwB,CAC5BuD,KAAMy9H,EAAwBJ,IAC7B,CACD/iF,WAAW,IAGbh8C,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACT78B,KAAK,OACLi+H,eAAa,EACbnhG,UAAW1X,OAAOw4G,IAClBxiI,UAAU,gBACVsuC,eAAe,sBAEdk0F,IAAuBngI,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,OAC9BszE,IAAsBngI,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAIxCtE,EAAQ,mBAEViiI,GAAe9/H,KA/K1B,SAA4BsG,GAC1B,MAAM+jD,GAAY7Z,EAAAA,EAAAA,MAAY8Z,MAAM/hB,KAE9B1wB,GAAOwjH,EAAAA,EAAAA,GAAqBx9H,EAASyI,GACrCgM,EAAO+3C,EAAU/jD,EAAQ6J,QAE/B,GAAK0H,GAASvF,EAId,OACE1S,EAAAA,GAAAC,cAAC+6H,GAAW,CACVzqH,OAAQ7J,EAAQ6J,OAChB7J,QAASA,EACTo/B,YAAaA,GAGnB,MAkKmB,K,gBCldrB,MAAM26F,GAAe,YAGftiE,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAK,GAqHjD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,IAClBglH,GAAsBwJ,IADJxuH,EAnH2ByuH,EAC7C56F,cACAjP,YACA4zB,YACApjB,YACAgwF,yBACA5/F,WACAxkB,kBACAy1G,yBAEA,MAAM,qBACJ8O,EAAoB,aACpB7iG,IACE5kB,EAAAA,EAAAA,MAGE6b,GAAere,EAAAA,EAAAA,IAAuB,MAEtCpP,GAAOD,EAAAA,EAAAA,MAEL49F,QAAS6kC,IAAgCvkC,EAAAA,GAAAA,IAAwB,CACvEC,QAASzwE,EACTmxE,WA1B0B,MA6BtBr3C,GAAiBjiD,EAAAA,EAAAA,KAAY,EAAGsrB,gBAChCA,IAAcmwC,EAAAA,GAAkBC,WAClChB,IAAa,KACXq5D,EAAqB,CACnB91H,KAAM++H,IACN,GAEN,GAEC,CAAC36F,IAEE4xF,GAAgB94H,EAAAA,EAAAA,KAAQ,IACvB64B,GAAa4/F,EAIX5/F,EAASr3B,KAAKsD,IACnB,MAAO6M,EAAQiL,IAAam8G,EAAAA,GAAAA,GAAqBj0H,GAC3CgD,EAAU2wH,EAAuB9mH,IAASo4B,KAAKntB,GAErD,OAAO9U,IAAWk6H,EAAAA,EAAAA,IAAmBl6H,GAAWA,OAAU7H,CAAS,IAClEihC,OAAO9wB,SARDw3B,GAAAA,GASR,CAAC6wF,EAAwB5/F,IAEtBmgG,GAAqBn0H,EAAAA,EAAAA,KAAaiD,IACtCiuB,EAAa,CAAEpkB,OAAQ7J,EAAQ6J,OAAQiL,UAAW9U,EAAQhD,IAAK,GAC9D,CAACixB,IAyCEmjG,GAAoB5rB,EAAAA,GAAAA,GAAkB,CAACpmE,GAAcy1D,EAAAA,OAA+B1kE,EAE1F,OACE72B,EAAAA,GAAAC,cAAA,OAAKmX,IAAKwU,EAAcjuB,UAAU,uBAChCqC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACb/oD,UAAU,8CACVgpD,MAAOmxE,EAAoBJ,OAAgB74H,EAC3C+nD,WAAYlB,EACZ2Z,YAAU,IAERy4D,GAAqB93H,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAC9BirE,KAAuBrgG,GAAgC,IAApBA,EAAS13B,SAC3CC,EAAAA,GAAAC,cAAC83H,GAAAA,EAAY,CACX9/G,KAAM9Z,EAAK,6BACXgS,YAAahS,EAAK,0CAGrB25H,GAAqBrgG,GAAYA,EAAS13B,OAAS,GAvDjD23H,EAAct3H,KAAI,CAACsG,EAASlH,KACjC,MACMw4H,EADoB,IAAVx4H,IAEXy4H,EAAAA,GAAAA,IAAYvxH,EAAQ0uB,SAAU6iG,EAAAA,GAAAA,IAAYP,EAAcl4H,EAAQ,GAAG41B,MACxE,OACEp1B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACG8vF,GACCh4H,EAAAA,GAAAC,cAAA,KACEtC,UAAU,kBACVyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,EAC1BmC,IAAK0F,EAAQ0uB,OAEZ+iG,EAAAA,GAAAA,IAAmBh6H,EAAM,IAAIuwB,KAAoB,IAAfhoB,EAAQ0uB,QAG/Cp1B,EAAAA,GAAAC,cAAA,OACEtC,UAAU,sBACVqD,IAAK0F,EAAQhD,IAEb1D,EAAAA,GAAAC,cAAC4gI,GAAAA,EAAQ,CACPz6H,UAAUw6H,EAAAA,EAAAA,IAAmBl6H,GAC7BA,QAASA,EACTo6H,UAAQ,EACRC,SAAUr6H,EAAQ0uB,KAClB4rG,SAAO,EACP90F,QAAQqsF,EAAAA,GAAAA,GAAcp6H,EAAMuI,EAAS+jD,EAAWpjB,GAChD1pC,UAAU,cACVqX,eAAeC,EAAAA,EAAAA,IAAiBhC,EAAiBvM,EAAQ2P,QAAQjQ,UACjEsiH,mBAAoBA,EACpBhrB,oBAAqBijC,EACrBnI,YAAaZ,KAGhB,KAwBD,K,gBCrHV,MAAM6I,GAAe,QAGftiE,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAK,GA+GjD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,IAClBglH,GAAsBwJ,IADJxuH,EA7G2BgvH,EAC7Cn7F,cACAjP,YACA4zB,YACApjB,YACAgwF,yBACA5/F,WACAtkB,sBAEA,MAAM,qBACJqkH,EAAoB,aACpB7iG,IACE5kB,EAAAA,EAAAA,MAGE6b,GAAere,EAAAA,EAAAA,IAAuB,MAEtCpP,GAAOD,EAAAA,EAAAA,MAEL49F,QAAS6kC,IAAgCvkC,EAAAA,GAAAA,IAAwB,CACvEC,QAASzwE,EACTmxE,WAzB0B,MA4BtBr3C,GAAiBjiD,EAAAA,EAAAA,KAAY,EAAGsrB,gBAChCA,IAAcmwC,EAAAA,GAAkBC,WAClChB,IAAa,KACXq5D,EAAqB,CACnB91H,KAAM++H,IACN,GAEN,GAEC,CAAC36F,IAEE4xF,GAAgB94H,EAAAA,EAAAA,KAAQ,IACvB64B,GAAa4/F,EAIX5/F,EAASr3B,KAAKsD,IACnB,MAAO6M,EAAQiL,IAAam8G,EAAAA,GAAAA,GAAqBj0H,GAEjD,OAAO2zH,EAAuB9mH,IAASo4B,KAAKntB,EAAU,IACrDskB,OAAO9wB,SAPDw3B,GAAAA,GAQR,CAAC6wF,EAAwB5/F,IAEtBmgG,GAAqBn0H,EAAAA,EAAAA,KAAaiD,IACtCiuB,EAAa,CAAEpkB,OAAQ7J,EAAQ6J,OAAQiL,UAAW9U,EAAQhD,IAAK,GAC9D,CAACixB,IAqCEmjG,GAAoB5rB,EAAAA,GAAAA,GAAkB,CAACpmE,GAAcy1D,EAAAA,OAA+B1kE,EAE1F,OACE72B,EAAAA,GAAAC,cAAA,OAAKmX,IAAKwU,EAAcjuB,UAAU,uBAChCqC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACb/oD,UAAU,8CACVgpD,MAAOmxE,EAAoBJ,OAAgB74H,EAC3C+nD,WAAYlB,EACZ2Z,YAAU,IAERy4D,GAAqB93H,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAC9BirE,KAAuBrgG,GAAgC,IAApBA,EAAS13B,SAC3CC,EAAAA,GAAAC,cAAC83H,GAAAA,EAAY,CACX9/G,KAAM9Z,EAAK,6BACXgS,YAAahS,EAAK,0CAGrB25H,GAAqBrgG,GAAYA,EAAS13B,OAAS,GAnDjD23H,EAAct3H,KAAI,CAACsG,EAASlH,KACjC,MACMw4H,EADoB,IAAVx4H,IAEXy4H,EAAAA,GAAAA,IAAYvxH,EAAQ0uB,SAAU6iG,EAAAA,GAAAA,IAAYP,EAAcl4H,EAAQ,GAAG41B,MACxE,OACEp1B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACG8vF,GACCh4H,EAAAA,GAAAC,cAAA,KACEtC,UAAU,kBACVqD,IAAK0F,EAAQ0uB,KACbh0B,IAAKjD,EAAKkD,MAAQ,WAAQxC,IAEzBs5H,EAAAA,GAAAA,IAAmBh6H,EAAM,IAAIuwB,KAAoB,IAAfhoB,EAAQ0uB,QAG/Cp1B,EAAAA,GAAAC,cAAA,OACEtC,UAAU,sBACVyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,EAC1BmC,IAAK0F,EAAQhD,IAEb1D,EAAAA,GAAAC,cAACihI,GAAAA,EAAO,CACNlgI,IAAK0F,EAAQhD,GACbgD,QAASA,EACTqvB,aAAawiG,EAAAA,GAAAA,GAAcp6H,EAAMuI,EAAS+jD,EAAWpjB,GACrDt0B,YAAaI,GAAmBzM,EAAQqM,YACxC2qF,oBAAqBijC,EACrBQ,eAAgBvJ,KAGnB,KAwBD,K,gBC/GV,MAAM6I,GAAe,QAGftiE,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAK,GAkHjD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,IAClBglH,GAAsBwJ,IADJxuH,EAhH4BmvH,EAC9Ct7F,cACAjP,YACAwgG,yBACA5/F,WACAtkB,sBAEA,MAAM,qBACJqkH,EAAoB,gBACpB7iH,IACE5E,EAAAA,EAAAA,MAGE6b,GAAere,EAAAA,EAAAA,IAAuB,MAEtCpP,GAAOD,EAAAA,EAAAA,MAEL49F,QAAS6kC,IAAgCvkC,EAAAA,GAAAA,IAAwB,CACvEC,QAASzwE,EACTmxE,WAvB0B,MA0BtBr3C,GAAiBjiD,EAAAA,EAAAA,KAAY,EAAGsrB,gBAChCA,IAAcmwC,EAAAA,GAAkBC,WAClChB,IAAa,KACXq5D,EAAqB,CACnB91H,KAAM++H,IACN,GAEN,GAEC,CAACjJ,EAAsB1xF,IAEpB4xF,GAAgB94H,EAAAA,EAAAA,KAAQ,IACvB64B,GAAa4/F,EAIX5/F,EAASr3B,KAAKsD,IACnB,MAAO6M,EAAQiL,IAAam8G,EAAAA,GAAAA,GAAqBj0H,GAEjD,OAAO2zH,EAAuB9mH,IAASo4B,KAAKntB,EAAU,IACrDskB,OAAO9wB,SAPDw3B,GAAAA,GAQR,CAAC6wF,EAAwB5/F,IAEtB4pG,GAAoB59H,EAAAA,EAAAA,KAAY,CAACC,EAAY6M,KACjDoE,EAAgB,CACdpE,SACAiL,UAAW9X,EACX6D,OAAQa,EAAAA,GAAkBc,cAC1B,GACD,CAACyL,IA6BEmjH,GAAoB5rB,EAAAA,GAAAA,GAAkB,CAACpmE,GAAcy1D,EAAAA,OAA+B1kE,EACpFyqG,EAAcxJ,GAAqBrgG,GAAYA,EAAS13B,OAAS,IAAM+lC,EACvEy7F,EAAgBzJ,GAAqBrgG,GAAYA,EAAS13B,OAAS,GAAK+lC,EAExE3sB,GAAajZ,EAAAA,GAAAA,GACjB,+BACAqhI,GAAiB,aAGnB,OACEvhI,EAAAA,GAAAC,cAAA,OAAKmX,IAAKwU,EAAcjuB,UAAU,yCAChCqC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACb/oD,UAAWwb,EACXwtC,MAAOmxE,EAAoBJ,OAAgB74H,EAC3CouD,aAAennB,EAAyB,YAAX,SAC7B8gB,WAAYlB,EACZ2Z,YAAU,IAERy4D,GAAqB93H,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAC9BirE,KAAuBrgG,GAAgC,IAApBA,EAAS13B,SAC3CC,EAAAA,GAAAC,cAAC83H,GAAAA,EAAY,CACX9/G,KAAM9Z,EAAK,6BACXgS,YAAahS,EAAK,0CAGrBmjI,GAlDHthI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,aAAayD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACnD64H,EAAct3H,KAAKsG,GAClB1G,EAAAA,GAAAC,cAACuhI,GAAAA,EAAK,CACJxgI,IAAM,GAAE0F,EAAQ6J,UAAU7J,EAAQhD,KAClCg4F,SAAS,eACTh1F,QAASA,EACTqM,YAAaI,GAAmBzM,EAAQqM,YACxC2qF,oBAAqBijC,EACrB3iI,QAASqjI,OA2CZE,GAnCE7J,EAAct3H,KAAKsG,GACxB1G,EAAAA,GAAAC,cAAC+6H,GAAW,CACVh6H,IAAK0F,EAAQhD,GACb6M,OAAQ7J,EAAQ6J,OAChB7J,QAASA,OAiCP,KC7FJ+6H,GAAkB,CACtB,CAAE//H,KAAMggI,EAAAA,GAAoBphG,SAAUt/B,IAAK,kBAC3C,CAAEU,KAAMggI,EAAAA,GAAoBC,GAAI3gI,IAAK,eACrC,CAAEU,KAAMggI,EAAAA,GAAoBE,YAAa5gI,IAAK,qBAC9C,CAAEU,KAAMggI,EAAAA,GAAoBG,QAAS7gI,IAAK,iBAC1C,CAAEU,KAAMggI,EAAAA,GAAoBF,MAAOxgI,IAAK,kBACxC,CAAEU,KAAMggI,EAAAA,GAAoBI,MAAO9gI,IAAK,kBACxC,CAAEU,KAAMggI,EAAAA,GAAoBK,MAAO/gI,IAAK,kBACxC,CAAEU,KAAMggI,EAAAA,GAAoBM,MAAOhhI,IAAK,kBACxC,CAAEU,KAAMggI,EAAAA,GAAoBO,MAAOjhI,IAAK,mBAGpCkhI,GAAuB,CAC3B,CAAExgI,KAAMggI,EAAAA,GAAoBphG,SAAUt/B,IAAK,wBACxCygI,GAAK3hF,MAAM,IAwHhB,IAAetiD,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,eAAEiwH,EAAc,OAAE5xH,IAAW+B,EAAAA,EAAAA,KAAeJ,GAAQmsD,aAE1D,MAAO,CAAE8jE,iBAAgB5xH,SAAQ,GAJjB0B,EArH0BmwH,EAC5Ct8F,cACAi2F,aACAr+H,WACAykI,iBAAiBT,EAAAA,GAAoBphG,SACrC/vB,SACAgvD,cAEA,MAAM,uBACJ8iE,EAAsB,oBACtBC,IACEvyH,EAAAA,EAAAA,MAEE5R,GAAOC,EAAAA,GAAAA,MACNmkI,EAAWC,IAAgBtyH,EAAAA,EAAAA,IAASiyH,GACrC3F,GAAkB59H,EAAAA,EAAAA,KAAQ,KAAM6jI,EAAAA,GAAAA,IAAgB38F,IAAc,CAACA,IAE/DisC,GAAOnzE,EAAAA,EAAAA,KAAQ,KACP2R,EAAS2xH,GAAYT,IACtBrhI,KAAK64E,IAAG,IACdA,EACH7zE,MAAOjH,EAAK86E,EAAIj4E,UAEjB,CAACuP,EAAQpS,IAENukI,GAAkBpyH,EAAAA,EAAAA,IAAiB9Q,IACvC,MAAMy5E,EAAMlH,EAAKvyE,GACjB6iI,EAAuB,CAAEhsH,QAAS4iE,EAAIv3E,OACtC8gI,EAAahjI,EAAM,IAGfmjI,GAAyBryH,EAAAA,EAAAA,IAAiBI,IAC9C4xH,EAAoB,CAAEltG,KAAM1kB,EAAMmmD,UAAY,KAAO,KAGvDtpC,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIV,MAAM3zC,GAAere,EAAAA,EAAAA,IAAuB,MACtCsa,GAAgB0jC,EAAAA,GAAAA,GAA0B3/B,EAAcluB,OAAUmB,EAAW,oBAAoB,GAEvG,OACEmB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,aAAayZ,IAAKwU,EAAc6gC,UAAW5kC,GACxD7nB,EAAAA,GAAAC,cAAC2iI,GAAAA,EAAO,CAACL,UAAWA,EAAWxwD,KAAMA,EAAM8wD,YAAaH,IACxD1iI,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACT78B,KAAMpE,EAAKkD,MAAQ,oBAAsB,iBACzCyhI,YAAa/wD,EAAKhyE,OAClBs/B,UAAW8iG,GAEV,MACC,OAAQA,GACN,KAAKT,EAAAA,GAAoBphG,SACzB,KAAKohG,EAAAA,GAAoBE,YACvB,OAAIrxH,EAEAvQ,EAAAA,GAAAC,cAACs8H,GAAkB,CACjBz2F,YAAaA,EACb02F,gBAAiBA,EACjBj9D,QAASA,EACTk9D,mBAAoBkG,IAKxB3iI,EAAAA,GAAAC,cAACs+H,GAAW,CACVT,cAAeqE,IAAmBT,EAAAA,GAAoBE,YACtD97F,YAAaA,EACbi2F,WAAYA,EACZS,gBAAiBA,EACjBj9D,QAASA,EACTk9D,mBAAoBkG,IAG1B,KAAKjB,EAAAA,GAAoBF,MACvB,OAAOxhI,EAAAA,GAAAC,cAACmhI,GAAY,CAACt7F,YAAaA,IACpC,KAAK47F,EAAAA,GAAoBI,MACvB,OAAO9hI,EAAAA,GAAAC,cAACghI,GAAW,CAACn7F,YAAaA,IACnC,KAAK47F,EAAAA,GAAoBK,MACvB,OAAO/hI,EAAAA,GAAAC,cAACygI,GAAW,CAAC56F,YAAaA,IACnC,KAAK47F,EAAAA,GAAoBM,MACvB,OACEhiI,EAAAA,GAAAC,cAACs3H,GAAY,CACXv2H,IAAI,QACJ8kC,YAAaA,IAGnB,KAAK47F,EAAAA,GAAoBO,MACvB,OACEjiI,EAAAA,GAAAC,cAACs3H,GAAY,CACXv2H,IAAI,QACJm2H,SAAO,EACPrxF,YAAaA,IAGnB,KAAK47F,EAAAA,GAAoBG,QACvB,OACE7hI,EAAAA,GAAAC,cAACw6H,GAAa,CACZz5H,IAAI,UACJ8kC,YAAaA,IAGnB,KAAK47F,EAAAA,GAAoBC,GACvB,OACE3hI,EAAAA,GAAAC,cAAC+2H,GAAe,MAEpB,QACE,OAEL,EA3DA,IA6DC,K,gBCpKV,MAAM+L,GAA4B,CAChCrqB,gBAAiB,GACjBD,SAAU,GACVR,KAAM,GACN+qB,MAAO,IAGHC,GAAuDA,CAC3DnmE,EACA32D,KAEA,OAAQA,EAAOzE,MACb,IAAK,qBACH,MAAO,IACFo7D,EACH47C,gBAAiBvyG,EAAO+8H,SAG5B,IAAK,cACH,MAAO,IACFpmE,EACH27C,SAAUtyG,EAAO+8H,SAGrB,IAAK,UACH,MAAO,IACFpmE,EACHm7C,KAAM9xG,EAAO+8H,SAGjB,IAAK,WACH,MAAO,IACFpmE,EACHkmE,MAAO78H,EAAO+8H,SAGlB,IAAK,QACH,OAAOH,GAET,QACE,OAAOjmE,EACX,E,oDCnBF,MAqIA,IAAet/D,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ,CACLixH,UAAUC,EAAAA,GAAAA,GAAmBlxH,EAAQ,yBAHvBD,EArI0CoxH,EAC5DC,OACAxmE,QACAymE,WACA7lI,WACA6hE,UACAikE,eACAL,eAEA,MAAMhlI,GAAOD,EAAAA,EAAAA,MAEP,sBAAEulI,IAA0B1zH,EAAAA,EAAAA,OAE5B,WAAE2zH,GAAe5mE,GACjB,gBAAE6mE,EAAe,kBAAEC,IAAsBhlI,EAAAA,EAAAA,KAAQ,KAAMilI,EAAAA,GAAAA,GAAkB/mE,EAAOwmE,GAAM,IAAO,CAACA,EAAMxmE,IACpGgnE,EAAqB,aAATR,EAAsBS,GAAAA,GAAkCC,GAAAA,IAEnEC,EAAWC,IAAgBh0H,EAAAA,EAAAA,KAAS,GAErCi0H,GAAsBC,EAAAA,GAAAA,IAA8B3E,EAAAA,KACpD4E,GAA2BD,EAAAA,GAAAA,IAA8BE,EAAAA,KAEzDC,EAAsBznE,EAAM8e,OAAO4oD,YAEzC/lI,EAAAA,EAAAA,KAAU,KACHf,GACHwmI,GAAa,EACf,GACC,CAACxmI,IAEJ,MAAMsoC,GAAepnC,EAAAA,EAAAA,KAAQ,KAC3B,MAAM62H,EAAU,IAAI0O,GAAuB,MAAOE,GAA4B,IAC9E,OAAOn+F,EAAAA,GAAAA,IAAO,KACTC,EAAAA,GAAAA,IAAmB,CAAEC,IAAKqvF,EAASpvF,MAAOq9F,EAAYhiI,KAAM,UAC/D,GACD,CAACyiI,EAAqBE,EAA0BX,IAE7C11C,GAAqB19E,EAAAA,EAAAA,IAAiBm0H,IAC1ClB,EAAS,CACP7hI,KAAM,gBACNwhI,QAASuB,IAEXP,GAAa,EAAK,IAGd30C,GAA0Bj/E,EAAAA,EAAAA,IAAiB81B,IAC/C,GAAa,aAATk9F,EAAqB,CACvB,GAAIl9F,EAAIrmC,QAAUojI,EAIhB,YAHAM,EAAsB,CACpBzxG,MAAO,uBAIXuxG,EAAS,CACP7hI,KAAM,oBACNwhI,QAAS,IAAKpmE,EAAM4nE,eAAgBC,gBAAiBv+F,IAEzD,MACEm9F,EAAS,CACP7hI,KAAM,oBACNwhI,QAAS,IAAKpmE,EAAM8nE,eAAgBC,gBAAiBz+F,KAGzD89F,GAAa,EAAK,IAGdY,GAAgCx0H,EAAAA,EAAAA,IAAiB66C,IACrD,MAAM45E,EAAsC,CAAC,EAC7C55E,EAAK5rD,SAASyB,IACZ+jI,EAAW/jI,IAAO,CAAI,IAItBuiI,EADW,aAATD,EACO,CACP5hI,KAAM,oBACNwhI,QAAS,CACPyB,gBAAiBhB,KACdoB,IAIE,CACPrjI,KAAM,oBACNwhI,QAAS,CACP2B,gBAAiBlB,KACdoB,KAITb,GAAa,EAAK,IAQpB,OALA32G,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGLv5B,EAKHhmC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACT0+F,WAAYT,OAAsB1lI,EAAYilI,EAC9Cv9F,QAASP,EACTL,YAAag+F,EACbsB,mBAAoBrB,EACpBl9F,YAAag9F,EACb/8F,kBAAmBxoC,EAAK,UACxB+mI,uBAAuB,kBACvBt+F,cAAc,0BACdC,cAAY,EACZC,oBAAkB,EAClBq+F,eAAa,EACbj+F,eAAa,EACbE,cAAc,WACdJ,oBAAqBuoD,EACrB61C,2BAA4BN,EAC5B79F,eAAgB+mD,IAGlBhuF,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAAS67F,EACTjmI,QAASwlI,EACT1tH,UAAW3X,EAAK,SAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,YA7BRvC,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,KA+BT,KCzGGw4E,GAAiB,0CACjBC,GAAiB,8BA6U9B,IAAe9nI,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU4qD,YACT,MAAM,QAAE5P,GAAYh7C,EAAOw4C,OACrB,KAAE/hB,EAAI,QAAE48F,GAAYrzH,EAAO8mH,YAC3BwM,EAAgBhlF,OAAOuK,OAAOpiB,GAAM5pC,QAAO,CAACisD,EAAKy6E,IAAOz6E,GAAOy6E,EAAGjB,WAAa,EAAI,IAAI,GAE7F,MAAO,CACLkB,oBAAqBx4E,EAAQnsD,OAC7B4kI,sBAAuBz4E,EAAQI,SAC/Bi4E,QAASzoE,EAAMsf,SAAYmpD,EAAQzoE,EAAMsf,WAAa51C,GAAAA,OAAoB3nC,EAC1E+mI,eAA8B/mI,IAAnBi+D,EAAMsf,WAA2BzzC,EAAKm0B,EAAMsf,UACvDypD,gBAAgBzC,EAAAA,GAAAA,GAAmBlxH,EAAQ,mBAC3C4zH,cAAc1C,EAAAA,GAAAA,GAAmBlxH,EAAQ,kBACzCszH,gBACD,GAdevzH,EA3UmC8zH,EACrDjpE,QACAymE,WACAyC,qBACAC,qBACAC,gBACAC,eACAzoI,WACA6hE,UACAqmE,YACAp4G,SACAk4G,sBACAU,gBACAT,wBACAJ,UACAM,iBACAC,eACAN,gBACAa,mBAEA,MAAM,oBACJC,EAAmB,sBACnB7C,EAAqB,iBACrB1/F,IACEh0B,EAAAA,EAAAA,MAEEw2H,EAA4B,WAAfzpE,EAAMwmE,KACnBkD,EAAoB1pE,EAAM8e,OAAO4oD,YAEhCiC,EAA6BC,IAAkCx2H,EAAAA,EAAAA,KAAS,IACxEy2H,EAA6BC,IAAkC12H,EAAAA,EAAAA,KAAS,IAE/EzR,EAAAA,EAAAA,KAAU,KACJmnI,GACFrmE,GACF,GACC,CAACqmE,EAAWrmE,KAEf9gE,EAAAA,EAAAA,KAAU,KACJf,GAAYo/D,EAAMsf,UAAYtf,EAAM8e,OAAO4oD,YAC7C8B,EAAoB,CAAElqD,SAAUtf,EAAMsf,UACxC,GACC,CAAC1+E,EAAUo/D,EAAM8e,OAAO4oD,WAAY1nE,EAAMsf,WAE7C,MACEunD,gBAAiBgB,EACjBf,kBAAmBiD,IACjBjoI,EAAAA,EAAAA,KAAQ,KAAMilI,EAAAA,GAAAA,GAAkB/mE,EAAO,aAAa,CAACA,KAEvD6mE,gBAAiBkB,EACjBjB,kBAAmBkD,IACjBloI,EAAAA,EAAAA,KAAQ,KAAMilI,EAAAA,GAAAA,GAAkB/mE,EAAO,aAAa,CAACA,KAEzDr+D,EAAAA,EAAAA,KAAU,KACRioI,GAA+B,GAC/BE,GAA+B,EAAM,GACpC,CAAC9pE,EAAMsf,WAEV,MAAO2qD,EAAwBC,IAA0BpoI,EAAAA,EAAAA,KAAQ,KAC/D,MAAMqoI,EAAoB,IAAI/5C,IAAI,IAC5Bw4C,GAAuB,MACvBC,GAAyB,KAGzBuB,GAAwBC,EAAAA,GAAAA,IAAwBxC,EAAiBsC,GACjEG,GAAwBD,EAAAA,GAAAA,IAAwBtC,EAAiBoC,GAEvE,MAAO,CACLR,EACIS,EACAA,EAAsBpnF,MAAM,EA3EV,EA2EmC+mF,EAAkB9mI,QAC3E4mI,EACIS,EACAA,EAAsBtnF,MAAM,EA9EV,EA8EmCgnF,EAAkB/mI,QAC5E,GACA,CACD8kI,EAAiBF,EAAiBkC,EAAmBC,EACrDH,EAA6BF,EAC7Bf,EAAqBC,IAGjBxnI,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,WAGF,MAAM85D,GAAe7jF,EAAAA,EAAAA,KAAa2tB,IAChC,MAAM,cAAErK,GAAkBqK,EAC1BmyG,EAAS,CAAE7hI,KAAM,WAAYwhI,QAASn8G,EAAcrW,MAAMq5D,QAAS,GAClE,CAACw5D,IAEEv7F,GAAevkC,EAAAA,EAAAA,KAAY,KAC/B8/H,EAAS,CAAE7hI,KAAM,eAAgBwhI,SAAS,IAE1CmD,GAAa,KACXv3H,YAAW,KACTywD,GAAS,GAzGM,IA0GC,GAClB,GACD,CAACgkE,EAAU8C,EAAc9mE,IAEtB8nE,GAA0B5jI,EAAAA,EAAAA,KAAY,KACrC8hI,GAQA+B,EAAAA,EAAAA,MAAqB12F,EAAAA,EAAAA,MAAaksB,EAAMsf,UAKzCopD,GAAiBM,IAAiBhpE,EAAM8e,OAAO4oD,WACjDf,EAAsB,CACpBzxG,MAAO,mBAKPuzG,EAAQxlI,OAAS8lI,EACf/oE,EAAMmnE,UACRoC,EAAaH,GAEbA,IAKJzC,EAAsB,CACpBzxG,MAAO,oBArBP+R,EAAiB,CAAEr9B,QAASvI,EAAK,oDAR7BooI,GACFF,EAAaH,EA6Bf,GACD,CACDX,EAASzoE,EAAMsf,SAAUtf,EAAMmnE,UAAWuB,EAAeK,EAAgBU,EAAYF,EACrFH,EAAe/nI,EAAM2nI,EAAchpE,EAAM8e,OAAO4oD,aAG5C+C,GAAwB9jI,EAAAA,EAAAA,KAAY,CAACmN,EAAkCwJ,KACvE0iD,EAAMmnE,UACRoC,GAAa,IAAMF,EAAa/rH,KAEhC+rH,EAAa/rH,EACf,GACC,CAACisH,EAAcF,EAAcrpE,EAAMmnE,YA0BtC,SAASuD,EAAYlE,GACnB,MAAMM,EAA6B,aAATN,EAAsBuD,EAAoBC,EAC9DW,EAA0B,aAATnE,EAAsByD,EAAyBC,EAEhEx5F,EAAsB,aAAT81F,EAAsBmD,EAA8BE,EAEjEe,GADsB,aAATpE,EAAsBqB,EAAkBE,GACzB9kI,OAAS0nI,EAAe1nI,OACpD4nI,EAAwB,aAATrE,EACjB,IAAMoD,GAA+B,GACrC,IAAME,GAA+B,GAEzC,OACE5mI,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACG07F,EAAkBxjI,KAAKY,GArC9B,SAAwBA,EAAasiI,GACnC,MAAM/N,EAAoB,aAAT+N,EACbS,GAAAA,GAAgCrjI,MAAK,EAAGgB,KAAMkmI,KAAcA,IAAY5mI,IACxEgjI,GAAAA,GAAgCtjI,MAAK,EAAGgB,KAAMkmI,KAAcA,IAAY5mI,IAE5E,GAAKu0H,EAIL,OACEv1H,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAKu0H,EAAS7zH,KACd/D,UAAU,kCACVy9G,QAAM,EACN12E,UAAQ,GAER1kC,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACdmqE,WAAW,QACXvX,WAAYif,IAIpB,CAesCsS,CAAe7mI,EAAKsiI,KACnDmE,EAAernI,KAAKsD,GACnB1D,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,kCACVy9G,QAAM,EACN12E,UAAQ,IAEP1yB,EAAAA,EAAAA,IAAStO,GACR1D,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CAACmqE,WAAW,QAAQ7tF,OAAQt8B,IAE5C1D,EAAAA,GAAAC,cAAC4jD,GAAAA,EAAa,CAACgqE,WAAW,QAAQt9G,OAAQ7M,QAI7C8pC,GAAck6F,EAAiB,GAChC1nI,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAI,YACJrD,UAAU,6BACVy9G,QAAM,EAENp9G,QAAS2pI,EACTxiI,KAAK,QAEJhH,EAAK,sBAAuBupI,EAAgB,MAKvD,CAEA,OACE1nI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,wBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,4CACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BACbqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB7hG,KAAMmmI,EAAAA,IACNjkI,OAAQC,GAAAA,EAAeikI,WACvBxoD,KAAM7+B,OAAOoc,EAAMsf,UACnBz+E,UAAU,0BAGX4oI,GACCvmI,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACrEV,EAAK,sBAIV6B,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRzT,UAAU,OACVoT,MAAO5S,EAAK,kBACZuS,MAAOosD,EAAM8e,OAAOx2E,MAAM6S,KAC1B/G,SAAUo2E,EACVp3B,MAAO4M,EAAM5M,OAAS4M,EAAM5M,QAAUm1E,GAAiBA,QAAiBxmI,MAI1EunI,GACApmI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACZm/D,EAAM5M,OAAS4M,EAAM5M,QAAUo1E,IAC9BtlI,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,8CAA8CyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAClFV,EAAK2+D,EAAM5M,QAIhBlwD,EAAAA,GAAAC,cAAA,MAAItC,UAAU,4BAA4ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYV,EAAK,kBAErF6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,2CACVwH,KAAK,MACLi2G,QAAM,EACNp9G,QAASgoI,GAER7nI,EAAK,mBAGPqpI,EAAY,cAIfpB,IAAkBI,GAClBxmI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,4BAA4ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYV,EAAK,kBAErF6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,2CACVwH,KAAK,MACLi2G,QAAM,EACNp9G,QAASioI,GAER9nI,EAAK,mBAGPqpI,EAAY,aAIjBxnI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,4BAA4ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACjEV,EAAK,2BAGR6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,2CACVwH,KAAK,MACLi2G,QAAM,EACNp9G,QAASqpI,GAERlpI,EAAK,iCAGPonI,GAASnlI,KAAK0yG,GACb9yG,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,6BACVwH,KAAK,OACLi2G,QAAM,EACN51G,WAAS,EACTxH,QAASupI,EACTpnC,SAAU2S,EAAO14F,KAEjBpa,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,QAAQyD,IAAI,QAAQ0xG,EAAO1tG,OAAS0tG,EAAO14F,KAC3Dpa,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YACbQ,EAAK,oCAAqC20G,EAAOj0D,QAAQ9+C,OAAQ,WAQ5EC,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAASp5B,QAAQ8tD,EAAMmnE,WACvBphH,SAAUi6C,EAAMjmC,UAChB74B,QAASgqC,EACTlyB,UAA0B,SAAfgnD,EAAMwmE,KAAkB,eAAiB,iBAEnDxmE,EAAMjmC,UACL72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGX,K,4BCnVV,MACMylI,IAAiChvH,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAO,GAwVrE,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MACEy2B,KAAMs/F,EACNC,YAAaC,GACXj2H,EAAO8mH,YAEX,IAAIoP,EAAYl2H,EAAO8mH,YAAYhlF,WACnC,MAAM,cAAEq0F,IAAkBt3D,EAAAA,GAAAA,GAAqB7+D,GAK/C,OAJsB,IAAlBm2H,IACFD,GAAYE,EAAAA,GAAAA,IAAeF,IAGtB,CACLA,YACAH,cACA9jD,WAAWxgD,EAAAA,EAAAA,KAA2BzxB,GACtCi2H,yBACAI,YAAYnF,EAAAA,GAAAA,GAAmBlxH,EAAQ,iBACxC,GAnBeD,EAtVmCu2H,EACrD9qI,WACA+qI,iBACAC,eACAnpE,UACA6oE,YACAH,cACA9jD,YACAgkD,yBACAI,iBAEA,MAAM,2BACJI,EAA0B,cAC1BC,EAAa,sBACbnF,EAAqB,0BACrB1nD,EAAyB,gBACzB8sD,IACE94H,EAAAA,EAAAA,OAEG+sD,EAAOgsE,IAAY54H,EAAAA,EAAAA,IAAoB,CAC5C64H,iBAAkBX,EAClBY,aAAcZ,EACda,kBAAcpqI,IAGVqqI,GAAgB1wG,EAAAA,EAAAA,GAAsB4vG,IAG5C3pI,EAAAA,EAAAA,KAAU,KACJyqI,IAAkBd,GACpBU,EAAS,CACPC,iBAAkBX,EAClBY,aAAcZ,EACda,kBAAcpqI,GAElB,GACC,CAACqqI,EAAed,EAAWtrE,EAAMisE,kBAAkBhpI,UAItDtB,EAAAA,EAAAA,KAAU,KACRupI,IAA+B,KAC7BW,GAA4B,GAC5B,GACD,CAACA,IAEJ,MAAMQ,GAAqB1lI,EAAAA,EAAAA,KAAY,KACjC+8C,OAAO2K,KAAK88E,GAAaloI,QAAUwoI,EAAa,EAClD9E,EAAsB,CACpBzxG,MAAO,kBAMXy2G,GAAgB,GACf,CAACR,EAAaM,EAAYE,EAAgBhF,IAEvCtlI,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAM6pE,GAAuBC,EAAAA,GAAAA,MACvBC,GAAc1qI,EAAAA,EAAAA,KAAQ,KAC1B,GAAKwpI,EAIL,OAAIA,EAAUroI,QAAU,EACfymC,GAAAA,EAGF4hG,EAAUhoI,KAAKsD,IACpB,MAAMk4E,EAASqsD,EAAYvkI,GAE3B,OAAIA,IAAO+7H,EAAAA,IACF,CACL/7H,KACA0B,MAAO,CACL6S,KAAM9Z,EAAK,kBACX8tF,SAAU,KAGLvoF,IAAO6lI,EAAAA,IACT,CACL7lI,KACA0B,MAAO,CACL6S,KAAM,SACNg0E,SAAU,KAGLvoF,IAAO8lI,EAAAA,IACT,CACL9lI,KACA0B,MAAO,CACL6S,KAAM,SACNg0E,SAAU,KAGLvoF,IAAO+lI,EAAAA,IACT,CACL/lI,KACA0B,MAAO,CACL6S,KAAM,KACNg0E,SAAU,KAKT,CACLvoF,GAAIk4E,EAAOl4E,GACX0B,MAAOw2E,EAAOx2E,MACdC,UAAUqkI,EAAAA,EAAAA,IAAyBvrI,EAAMy9E,EAAQwtD,EAAqBxtD,EAAOl4E,KAC7E8gI,WAAY5oD,EAAO4oD,WACnB/wB,kBAAmB73B,EAAO63B,kBAC3B,GACD,GACD,CAAC20B,EAAWH,EAAa9pI,EAAMirI,IAE5BO,GAAoClmI,EAAAA,EAAAA,KAAam4E,IACjDp7B,OAAO2K,KAAK88E,GAAaloI,QAAUwoI,EAAa,EAClD9E,EAAsB,CACpBzxG,MAAO,kBAMX42G,EAAc,CAAEhtD,UAAS,GACxB,CAACqsD,EAAaM,EAAYK,EAAenF,IAEtCxsD,GAAaxzE,EAAAA,EAAAA,KAAY,CAACmmI,EAAuClmI,KACrE,MAAM+vB,EAAQ7zB,KAAKiW,MAAM+zH,EAAY19G,EA1IhB,IA2If1sB,EAAQs9D,EAAMisE,kBAAkBtqG,QAAQ/6B,IAAiB,EACzDslI,EAAelsE,EAAMisE,kBAAkBjpG,QAAQs8C,GAAaA,IAAa14E,IAE1EslI,IAAiBl5G,EAAAA,GAAAA,IAAUtwB,EAAQi0B,EAAO,EAAG20G,GAAWroI,QAAU,KAIvEipI,EAAap7C,OAAOpuF,EAAQi0B,GAAS0wD,EAAY,EAAI,GAAI,EAAGzgF,GAC5DolI,GAAUp7H,IAAO,IACZA,EACHu7H,aAAczpI,EACdwpI,mBACC,GACF,CAACZ,GAAWroI,OAAQokF,EAAWrnB,EAAMisE,mBAElCc,GAAgBpmI,EAAAA,EAAAA,KAAY,KAChCqlI,GAAUp7H,IACRm7H,EAAgB,CAAET,UAAW16H,EAAQs7H,eAE9B,IACFt7H,EACHq7H,iBAAkBr7H,EAAQs7H,aAC1BC,kBAAcpqI,KAEhB,GACD,CAACgqI,IAEEiB,GAAqBlrI,EAAAA,EAAAA,KAAQ,KACzBulF,GAAa3jC,OAAO2K,KAAK88E,GAAaloI,OAASwoI,EAAa,GACnE,CAACN,EAAa9jD,EAAWokD,IAE5B,OACEvoI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,4CACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BACbqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB7hG,KAAMmmI,EAAAA,IACNjkI,OAAQC,GAAAA,EAAeimI,WACvBpsI,UAAU,0BAGZqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAC/CjD,EAAK,wBAGP2rI,GACC9pI,EAAAA,GAAAC,cAACgC,EAAAA,EACD,CACEtE,UAAU,4BACV0T,MAAM,UACN1P,KAAK,UACLumG,MAAI,EACJriD,OAAK,EACL7nD,QAASmrI,EACT9nI,MAAOlD,EAAKkD,OAEZrB,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,QACVpE,EAAK,qBAKZ6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,4BAA4ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYV,EAAK,YAErF6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,8BAA8BsM,MAAQ,WA3MpC,IA2M+Cm+H,GAAWroI,QAAU,QAClFupI,GAAavpI,OAASupI,EAAYlpI,KAAI,CAACw7E,EAAQ50B,KAC9C,MAAMgjF,EAAYhjF,EAAIuhF,EAAa,EAC7B0B,EAAYntE,EAAMmsE,eAAiBjiF,EACnCkjF,EA/MO,IA+MOptE,EAAMisE,kBAAkBtqG,QAAQm9C,EAAOl4E,KAAO,GAC5DmiB,EAhNO,IAgNAi3C,EAAMksE,cAAcvqG,QAAQm9C,EAAOl4E,KAAO,GAEvD,OAAIk4E,EAAOl4E,KAAO+7H,EAAAA,KAAiB7jD,EAAOl4E,KAAO6lI,EAAAA,KAAoB3tD,EAAOl4E,KAAO8lI,EAAAA,KAAoB5tD,EAAOl4E,KAAO+lI,EAAAA,IAEjHzpI,EAAAA,GAAAC,cAACkqI,GAAAA,EAAS,CACRnpI,IAAK46E,EAAOl4E,GACZA,GAAIk4E,EAAOl4E,GACXsc,OAAQi3D,EACRmzD,UAAWP,EACX5/H,MAAQ,QAAOggI,EAAYC,EAAarkH,OACxCwkH,WAAclsI,EAAKkD,MAAQ,OAAS,SAAxB,cACZ8M,YAAag2E,IAAczmF,GAE3BsC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK46E,EAAOl4E,GACZ/F,UAAU,2CACVy9G,QAAM,EACN12E,UAAQ,EACRl/B,WAAS,EACTD,UAAQ,EACR+kI,gBAAc,GAEdtqI,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,UACb0vC,EAAAA,GAAAA,IAAuB,CACtBp1B,KAAM2jE,EAAOx2E,MAAM6S,KACnBg0E,SAAUrQ,EAAOx2E,MAAM6mF,SACvBunB,sBAAuB53B,EAAO63B,qBAGlCzzG,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYQ,EAAK,0BAOvC6B,EAAAA,GAAAC,cAACkqI,GAAAA,EAAS,CACRnpI,IAAK46E,EAAOl4E,GACZA,GAAIk4E,EAAOl4E,GACXsc,OAAQi3D,EACRmzD,UAAWP,EACX5/H,MAAQ,QAAOggI,EAAYC,EAAarkH,OACxCwkH,WAAclsI,EAAKkD,MAAQ,OAAS,SAAxB,UACZ8M,WAAY67H,IAActsI,GAE1BsC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,2CACVy9G,QAAM,EACNC,cAAc,OACd71G,WAAS,EACT68C,eAAgB,CACd,CACEK,QAASA,KACPq5B,EAA0B,CAAEK,SAAUR,EAAOl4E,IAAK,EAEpD+S,aAAa,EACbrR,MAAOjH,EAAK,UACZgH,KAAM,WAIVnH,QAASA,KACHgsI,EACFvG,EAAsB,CACpBzxG,MAAO,kBAGT02G,EAAaT,EAAYrsD,EAAOl4E,IAClC,GAGF1D,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,UACb0vC,EAAAA,GAAAA,IAAuB,CACtBp1B,KAAM2jE,EAAOx2E,MAAM6S,KACnBg0E,SAAUrQ,EAAOx2E,MAAM6mF,SACvBunB,sBAAuB53B,EAAO63B,oBAE/Bu2B,GAAahqI,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,aAAa5E,UAAU,mCAElDqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YACbi+E,EAAO4oD,YAAcxkI,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,OAAO5E,UAAU,SACjDi+E,EAAOv2E,WAGF,IAEXikI,IAAgBA,EAAYvpI,OAC/BC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAAO,4BAGvDpB,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,QAIds7E,GAA0Bn5H,QAAQm5H,EAAuBpoI,SACzDC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,4BAA4ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACjEV,EAAK,sBAGPgqI,EAAuB/nI,KAAKw7E,GAC3B57E,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EAENp9G,QAASA,IAAM2rI,EAAkC/tD,IAEjD57E,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,UACb0vC,EAAAA,GAAAA,IAAuB,CACtBp1B,KAAM2jE,EAAOx2E,MAAM6S,KACnBg0E,SAAUrQ,EAAOx2E,MAAM6mF,SACvBunB,sBAAuB53B,EAAO63B,qBAGlCzzG,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYi+E,EAAOzrE,cAGrCnQ,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,OACV0T,MAAM,UACN1P,KAAK,OACLumG,MAAI,EACJriD,OAAK,EACLxkD,MAAOlD,EAAKkD,OAEXlD,EAAK,aAOd,K,eC7VV,MAsKA,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,SAAEkqE,EAAQ,IAAEhiE,EAAG,UAAEyc,IAAcvkB,EAAAA,EAAAA,KAAeJ,GAAQq4H,mBAAqB,CAAC,EAC5E3uD,EAASQ,GAAWu4B,EAAAA,EAAAA,KAAiBziG,EAAQkqE,QAAYv9E,EACzDi0G,EAAS12B,EAAWlqE,EAAO8mH,YAAYuM,QAAQnpD,IAAW17E,MAAMsmD,GAAMA,EAAE5sC,MAAQA,SAAOvb,EAE7F,MAAO,CACLu9E,WACAR,SACAxhE,MACAyc,YACAgoB,QAASi0D,GAAQj0D,QAClB,GAZe5sC,EAtKqCu4H,EACvD9sI,WACA6hE,UACA6c,WACAR,SACA/8B,UACAzkC,MACAyc,gBAEA,MAAM,qBACJ4zG,EAAoB,qBAAEC,EAAoB,mBAAEC,EAAkB,iBAAE5mG,IAC9Dh0B,EAAAA,EAAAA,MAEE5R,GAAOC,EAAAA,GAAAA,KACPH,GAAUC,EAAAA,EAAAA,MAET+lI,EAAWC,IAAgBh0H,EAAAA,EAAAA,KAAS,IAE3Cqd,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,KAGV9gE,EAAAA,EAAAA,KAAU,KACHo4B,GACHqtG,GAAa,EACf,GACC,CAACrtG,KAEJp4B,EAAAA,EAAAA,KAAU,MACH2b,GAAOgiE,GAAY1+E,GACtB+sI,EAAqB,CAAEruD,YACzB,GACC,CAACA,EAAU1+E,EAAU0c,IAExB,MAAMwwH,GAAet6H,EAAAA,EAAAA,IAAgB,KAC9B8J,GAAQgiE,IAEbsuD,EAAqB,CAAEtuD,WAAUhiE,QACjCmlD,IAAS,IAGLh5B,GAAU3nC,EAAAA,EAAAA,KAAQ,KACdg9E,GAAQ+oD,iBAAmB,IAAIl3C,OAAO7R,GAAQivD,eAAiB,KACtE,CAACjvD,GAAQ+oD,gBAAiB/oD,GAAQivD,iBAE9BC,EAAallG,IAAahnC,EAAAA,EAAAA,KAAQ,KACvC,MAAMsT,GAAS0+B,EAAAA,EAAAA,MACf,OAAOm6F,EAAAA,GAAAA,IAAUxkG,GAAU7iC,IAAOsnI,EAAAA,EAAAA,KAAsB94H,EAAQxO,IAAI,GACnE,CAAC6iC,KAEGZ,EAAa2qD,IAAkBpgF,EAAAA,EAAAA,IAAmB2uC,GAAW,IAE9DosF,GAAmB19H,EAAAA,EAAAA,KAAO,IAChCs6B,EAAAA,GAAAA,IAAsB,EAAEqjG,MAClBA,IAAY9wH,IACd6wH,EAAiBv9H,SAAU,GAExBu9H,EAAiBv9H,UACtBu9H,EAAiBv9H,SAAU,EACtB0M,EAEMykC,GACTyxC,EAAezxC,GAFfyxC,EAAew6C,GAGjB,GACC,CAAC1wH,EAAK0wH,EAAajsF,IAEtB,MAAMssF,GAAsB76H,EAAAA,EAAAA,IAAiB5M,IAC3C,MAAMwO,GAAS0+B,EAAAA,EAAAA,MACTqB,GAAOC,EAAAA,EAAAA,KAAWhgC,EAAQxO,GAC1BgP,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQxO,GAC5BuuC,IAAQkgD,EAAAA,EAAAA,IAAUlgD,GACpBlO,EAAiB,CACfr9B,QAASzI,EAAQ,8CAEVg0C,EACTlO,EAAiB,CACfr9B,QAASzI,EAAQ,+CAEVyU,IAAQkjB,EAAAA,EAAAA,IAAcljB,GAC/BqxB,EAAiB,CACfr9B,QAASzI,EAAQ,wDAGnB8lC,EAAiB,CACfr9B,QAASzI,EAAQ,qDAErB,IAGIsxF,GAA0Bj/E,EAAAA,EAAAA,IAAiB81B,IAC/CkqD,EAAelqD,GACf89F,GAAa,EAAK,IAGdl8F,GAAe13B,EAAAA,EAAAA,IAAgB,KAC9B8rE,GAAahiE,GAAQ6pH,GAC1B0G,EAAmB,CAAEvuD,WAAUv9B,QAASlZ,EAAavrB,OAAM,IAGvDgxH,EAAazlG,EAAY5lC,OACzBoO,GAAci9H,GAAcv0G,EAElC,OACE72B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uEACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BACbqC,EAAAA,GAAAC,cAACorI,GAAAA,EAAY,CACX1pI,KAAMmmI,EAAAA,IACNjkI,OAAQC,GAAAA,EAAewnI,aACvB3tI,UAAU,0BAGXi+E,GACC57E,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAC/CjD,EAAK,6BAA8B,CAClCy9E,QAAQvuC,EAAAA,GAAAA,IAAuB,CAC7Bp1B,KAAM2jE,EAAOx2E,MAAM6S,KACnBg0E,SAAUrQ,EAAOx2E,MAAM6mF,SACvBunB,sBAAuB53B,EAAO63B,oBAEhC/oD,MAAOvsD,EAAK,kCAAmC,CAAEo3B,MAAO61G,GAAc,CAAEnuE,YAAamuE,KACpF,CACDv5E,cAAc,EACd7V,WAAW,MAMnBh8C,EAAAA,GAAAC,cAACwyG,GAAAA,EAAS,CACR90G,UAAU,gBACVmuF,KAAO1xE,GAAMnc,EAAQ,WACrBstI,WAAS,EACTC,SAAUZ,EACVz8H,YAAai9H,GAAcnH,IAG7BjkI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sCACbqC,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACTC,QAASA,EACTklG,oBAAqB7lG,EACrBoB,oBAAqBuoD,EACrB5pD,YAAaA,EACb+mD,gBAAiBy+C,EACjBjkG,eAAa,EACbC,YAAU,EACVC,cAAc,cAIlBpnC,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAASvR,GAAaotG,EACtBphH,SAAU1U,EACVnQ,QAASgqC,EACTlyB,UAAU,gBAET+gB,EACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGX,KCsBV,IAAe/E,EAAAA,EAAAA,KAxMuBkuI,EACpCC,gBACAC,cACA9uE,QACAymE,WACA7lI,WACAmuI,iBACAtsE,cAEA,MAAM,yBACJusE,EAAwB,eACxBC,EAAc,cACdnD,IACE74H,EAAAA,EAAAA,MAEEi8H,GAAcvoI,EAAAA,EAAAA,KAAY,KAE5BkoI,IAAkBM,EAAAA,GAAgBC,qBAC/BP,IAAkBM,EAAAA,GAAgBE,mBAClCR,IAAkBM,EAAAA,GAAgBG,+BAClCT,IAAkBM,EAAAA,GAAgBI,0BAErCv9H,YAAW,KACTy0H,EAAS,CAAE7hI,KAAM,SAAU,GAnCP,KAwCtBiqI,IAAkBM,EAAAA,GAAgBK,sBAC/BX,IAAkBM,EAAAA,GAAgBM,qBAUvChtE,IARqB,WAAfzC,EAAMwmE,KACRuI,EAAeI,EAAAA,GAAgBC,qBAE/BL,EAAeI,EAAAA,GAAgBE,kBAK1B,GACR,CACDrvE,EAAMwmE,KAAMC,EACZoI,EAAepsE,EAASssE,IAGpBtF,EAA4B,WAAfzpE,EAAMwmE,KAEnBkJ,GAAY/oI,EAAAA,EAAAA,KAAagpI,IAC7B,MAAM,MAAErnI,GAAUqnI,EAAS7wD,OAE3B,IAAKx2E,EAEH,OADAm+H,EAAS,CAAE7hI,KAAM,WAAYwhI,QAASmC,MAC/B,EAGT,MACE1B,gBAAiBgB,EACjBf,kBAAmBiD,IACjBhD,EAAAA,GAAAA,GAAkB4I,EAAU,YAEhC,OAAK9H,EAAgB5kI,QAAWygD,OAAO2K,KAAK07E,GAAmB9mI,QAK1DwmI,EAGHqC,EAAc,CAAEhtD,OAAQ6wD,EAAS7wD,SAFjCmwD,EAAe,CAAEroI,GAAI+oI,EAASrwD,SAAWswD,aAAcD,EAAS7wD,SAKlE2nD,EAAS,CAAE7hI,KAAM,WAAYwhI,aAASrkI,IACtC0kI,EAAS,CAAE7hI,KAAM,eAAgBwhI,SAAS,KAEnC,IAbLK,EAAS,CAAE7hI,KAAM,WAAYwhI,QAASoC,MAC/B,EAYE,GACV,CAAC/B,EAAUgD,IAERoG,GAAmBlpI,EAAAA,EAAAA,KAAa26D,IAC/BouE,EAAU1vE,IAGfsB,KAAM,GACL,CAACouE,EAAW1vE,IAET8vE,GAAmBnpI,EAAAA,EAAAA,KAAY,KACnC,MAAMgpI,EAAWlJ,EAAS,CAAE7hI,KAAM,gBAClCsqI,IACAQ,EAAUC,EAAS,GAClB,CAAClJ,EAAUyI,EAAaQ,IAErBrD,GAAqB1lI,EAAAA,EAAAA,KAAY,KACrC8/H,EAAS,CAAE7hI,KAAM,UACjBmqI,EAAeI,EAAAA,GAAgBC,oBAAoB,GAClD,CAACL,EAAgBtI,IAEdsJ,GAAmBppI,EAAAA,EAAAA,KAAam4E,IACpC2nD,EAAS,CAAE7hI,KAAM,aAAcwhI,QAAStnD,IACxCiwD,EAAeI,EAAAA,GAAgBE,kBAAkB,GAChD,CAAC5I,EAAUsI,IAERiB,GAAyBrpI,EAAAA,EAAAA,KAAY,KACzC8/H,EAAS,CAAE7hI,KAAM,uBACjBmqI,EAAeF,IAAkBM,EAAAA,GAAgBG,8BAC7CH,EAAAA,GAAgBc,iCAChBd,EAAAA,GAAgBK,qBAAqB,GACxC,CAACX,EAAepI,EAAUsI,IAEvBmB,GAAyBvpI,EAAAA,EAAAA,KAAY,KACzC8/H,EAAS,CAAE7hI,KAAM,uBACjBmqI,EAAeF,IAAkBM,EAAAA,GAAgBG,8BAC7CH,EAAAA,GAAgBgB,iCAChBhB,EAAAA,GAAgBM,qBAAqB,GACxC,CAACZ,EAAepI,EAAUsI,IAEvBqB,GAAoBzpI,EAAAA,EAAAA,KAAY,KACpCqoI,EAAyB,CAAE1vD,SAAUtf,EAAMsf,SAAW+wD,qBAAqB,IAC3E5J,EAAS,CAAE7hI,KAAM,gBAAiBwhI,SAAS,IAC3C2I,EAAeI,EAAAA,GAAgBX,aAAa,GAC3C,CAAC/H,EAAUsI,EAAgB/uE,EAAMsf,WAE9BgxD,GAAmB3pI,EAAAA,EAAAA,KAAa2W,IACpC0xH,EAAyB,CAAE1vD,SAAUtf,EAAMsf,SAAWhiE,MAAK+yH,qBAAqB,IAChFtB,EAAeI,EAAAA,GAAgBX,aAAa,GAC3C,CAACO,EAAgB/uE,EAAMsf,WAE1B,OAAQuvD,GACN,KAAKM,EAAAA,GAAgBoB,QACnB,OACErtI,EAAAA,GAAAC,cAACuoI,GAAmB,CAClBC,eAAgBU,EAChBT,aAAcmE,EACdnvI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBC,oBAChBD,EAAAA,GAAgBE,kBAChBF,EAAAA,GAAgBK,qBAChBL,EAAAA,GAAgBM,sBAChBp6G,SAASy5G,GACXrsE,QAASA,IAGf,KAAK0sE,EAAAA,GAAgBC,oBACrB,KAAKD,EAAAA,GAAgBE,kBACrB,KAAKF,EAAAA,GAAgBG,8BACrB,KAAKH,EAAAA,GAAgBI,yBACnB,OACErsI,EAAAA,GAAAC,cAAC8lI,GAAmB,CAClBjpE,MAAOA,EACPymE,SAAUA,EACVyC,mBAAoB8G,EACpB7G,mBAAoB+G,EACpB9G,cAAegH,EACf/G,aAAciH,EACd7tE,QAASysE,EACTtuI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBK,qBAChBL,EAAAA,GAAgBM,sBAChBp6G,SAASy5G,GACXxF,cAAeuF,IAAkBM,EAAAA,GAAgBI,yBACjD7+G,OAAQ+xC,EACR8mE,aAAcsG,IAGpB,KAAKV,EAAAA,GAAgBK,qBACrB,KAAKL,EAAAA,GAAgBc,iCACnB,OACE/sI,EAAAA,GAAAC,cAACojI,GAA0B,CACzBC,KAAK,WACLxmE,MAAOA,EACPymE,SAAUA,EACVhkE,QAASysE,EACTxI,aAAcoJ,EACdlvI,SAAUA,IAGhB,KAAKuuI,EAAAA,GAAgBM,qBACrB,KAAKN,EAAAA,GAAgBgB,iCACnB,OACEjtI,EAAAA,GAAAC,cAACojI,GAA0B,CACzBC,KAAK,WACLxmE,MAAOA,EACPymE,SAAUA,EACVhkE,QAASysE,EACTxI,aAAcoJ,EACdlvI,SAAUA,IAIhB,KAAKuuI,EAAAA,GAAgBX,aACnB,OACEtrI,EAAAA,GAAAC,cAACuqI,GAAqB,CACpB9sI,SAAUA,EACV6hE,QAASysE,IAIf,QACE,OACJ,I,2BC3MF,MAiEA,IAAexuI,EAAAA,EAAAA,KA/D4B8vI,EACzC5vI,WACA6hE,UACArP,QACAr5B,YACA02G,+BACAC,mBACA9gF,cAAc,mBACdurD,OACApgD,cACAmhD,aACAvjD,eAEA,MAAOg4E,EAAiBC,IAAsBx9H,EAAAA,EAAAA,IAAiB,KACxDqoG,EAAoBC,IAAyBtoG,EAAAA,EAAAA,KAAS,GAEvD83B,GAAevkC,EAAAA,EAAAA,KAAakqI,IAC5BH,GAAoBG,IAAgBH,EACtCE,EApBuB,6BAsBvBj4E,EAASk4E,EACX,GACC,CAACl4E,EAAU+3E,IAER70B,GAAmBl1G,EAAAA,EAAAA,KAAY,KAC/Bu1G,GACFA,IAEF00B,EAAmB,GAAG,GACrB,CAAC10B,IAEE76G,GAAOD,EAAAA,EAAAA,KAOb,OALAqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gDACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAAC0C,GAAAA,EAAc,CAACE,OAAK,EAACD,kBAAmB21G,KAG3Cv4G,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gCACbqC,EAAAA,GAAAC,cAAC24G,GAAAA,EAAY,CACX1oD,MAAOu9E,GAAmBv9E,EAC1B+nD,KAAMA,EACNvrD,YAAaA,EACb6gF,6BAA8BA,EAC9B11E,YAAaA,GAAe15D,EAAK,QACjC66G,WAAYL,EACZ9hF,UAAWA,EACXj0B,kBAAmB21G,EACnBU,iBAAkBv7G,EAClBw7G,2BAA4BV,EAC5B/iD,SAAUztB,KAGV,IChCV,IAAexqC,EAAAA,EAAAA,KAnCuCowI,EACpDlwI,WAAU6hE,cAEV,MAAMphE,GAAOD,EAAAA,EAAAA,KAEP2vI,GAAYpqI,EAAAA,EAAAA,KAAY,KAC5B87D,GAAQ,EAAK,GACZ,CAACA,IAIJ,OAFAhyC,EAAAA,GAAAA,GAAe,CAAE7vB,WAAU8vB,OAAQ+xC,IAGjCv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iDACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAACorI,GAAAA,EAAY,CACX1pI,KAAMmsI,EAAAA,IACNjqI,OAAQC,GAAAA,EAAeiqI,gBACvBpwI,UAAU,0BAGZqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAAO,oBAGzDpB,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAAO,2EAK3DpB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gCACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACjE,QAAS6vI,GAAY1vI,EAAK,UAEhC,I,gBC3BV,MA0CA,IAAeX,EAAAA,EAAAA,KA1C+BwwI,EAC5CtwI,WAAU6hE,UAASssE,qBAEnB,MAAM1tI,GAAOD,EAAAA,EAAAA,KAIb,OAFAqvB,EAAAA,GAAAA,GAAe,CAAE7vB,WAAU8vB,OAAQ+xC,IAGjCv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iDACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQC,GAAAA,EAAemqI,KACvBC,WAAYC,GACZxsI,KAAM,IACNhE,UAAU,0BAGZqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAAO,+BAK3DpB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,OAELnH,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBmC,gCAE7CjwI,EAAK,oBAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,eAELnH,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBoC,kBAE7ClwI,EAAK,sBAGN,ICNV,IAAeX,EAAAA,EAAAA,KAjC6B8wI,EAC1C5wI,WAAU6hE,UAAS1lB,cAEnB,MAAM17C,GAAOD,EAAAA,EAAAA,KAIb,OAFAqvB,EAAAA,GAAAA,GAAe,CAAE7vB,WAAU8vB,OAAQ+xC,IAGjCv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iDACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQC,GAAAA,EAAemqI,KACvBC,WAAYC,GACZxsI,KAAMmsI,EAAAA,IACNnwI,UAAU,0BAGZqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,4BAA4ByD,IAAI,QAAO,qIAIpDpB,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAAO,wGAK3DpB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gCACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACjE,QAAS67C,GAAU17C,EAAK,oBAE9B,IC8KV,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IAAM,IAAuBA,EAAOq8H,YADnBt8H,EAnMgCu8H,EAClDD,WACA5C,gBACAC,cACA17E,QACAxyD,WACAm5B,YACAg1G,iBACA4C,gBACAlvE,cAEA,MAAM,YACJmvE,EAAW,cACXC,EAAa,iBACbC,EAAgB,mBAChBC,IACE9+H,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,KAEP4wI,GAAoBrrI,EAAAA,EAAAA,KAAY,KACpCgrI,EAAc,IACd5C,EAAeI,EAAAA,GAAgB8C,oBAAoB,GAClD,CAAClD,EAAgB4C,IAEdO,GAAoBvrI,EAAAA,EAAAA,KAAaiN,IACrC+9H,EAAc/9H,GACdm7H,EAAeI,EAAAA,GAAgBgD,2BAA2B,GACzD,CAACpD,EAAgB4C,IAEdS,GAA2BzrI,EAAAA,EAAAA,KAAY,KAC3CirI,EAAY,CAAEH,aACdE,EAAc,IACd5C,EAAeI,EAAAA,GAAgBkD,wBAAwB,GACtD,CAACtD,EAAgB4C,EAAeF,EAAUG,IAEvCU,GAA8B3rI,EAAAA,EAAAA,KAAa4rI,IAC/CZ,EAAc,KACda,EAAAA,GAAAA,IAAeD,GAAiBvpD,MAAK,KACnC+lD,EAAeI,EAAAA,GAAgBsD,0BAA0B,IACxD,KACDX,EAAiB,CACf1+E,MAAO/xD,EAAK,qCACZ,GACF,GACD,CAACA,EAAM0tI,EAAgB4C,EAAeG,IAEnCY,GAA0B/rI,EAAAA,EAAAA,KAAaiN,IAC3C+9H,EAAc/9H,GACdm7H,EAAeI,EAAAA,GAAgBwD,8BAA8B,GAC5D,CAAC5D,EAAgB4C,IAEdiB,GAAgBjsI,EAAAA,EAAAA,KAAa4rI,KACjCC,EAAAA,GAAAA,IAAeD,GAAiBvpD,MAAK,KACnC6oD,IACA9C,EAAeI,EAAAA,GAAgB0D,QAAQ,IACtC,KACDf,EAAiB,CACf1+E,MAAO/xD,EAAK,qCACZ,GACF,GACD,CAACwwI,EAAexwI,EAAM0tI,EAAgB+C,IAEzC,OAAQjD,GACN,KAAKM,EAAAA,GAAgB2D,iBACnB,OACE5vI,EAAAA,GAAAC,cAACquI,GAAqB,CACpBz0F,QAASi1F,EACTpxI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgB8C,oBAChB9C,EAAAA,GAAgBgD,2BAChBhD,EAAAA,GAAgBkD,yBAChBh9G,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgB8C,oBACnB,OACE/uI,EAAAA,GAAAC,cAAC4vI,GAAoB,CACnBtC,8BAA4B,EAC5B7gF,YAAavuD,EAAK,oBAClB05D,YAAa15D,EAAK,YAClBs3D,SAAUu5E,EACVtxI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBgD,2BAChBhD,EAAAA,GAAgBkD,yBAChBh9G,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBgD,2BACnB,OACEjvI,EAAAA,GAAAC,cAAC4vI,GAAoB,CACnBtC,8BAA4B,EAC5BC,iBAAkBe,EAClB7hF,YAAavuD,EAAK,uBAClB05D,YAAa15D,EAAK,YAClB04B,UAAWA,EACX4+B,SAAUy5E,EACVxxI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBkD,yBAChBh9G,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBkD,wBACnB,OACEnvI,EAAAA,GAAAC,cAAC2tI,GAA+B,CAC9BlwI,SAAUA,EACV6hE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgB6D,gBACnB,OACE9vI,EAAAA,GAAAC,cAAC+tI,GAAuB,CACtBnC,eAAgBA,EAChBnuI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBmC,8BAChBnC,EAAAA,GAAgBsD,0BAChBtD,EAAAA,GAAgBwD,8BAChBxD,EAAAA,GAAgBkD,wBAChBlD,EAAAA,GAAgBoC,iBAChBl8G,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBmC,8BACnB,OACEpuI,EAAAA,GAAAC,cAAC4vI,GAAoB,CACnBtC,8BAA4B,EAC5Br9E,MAAOA,EACP8oD,WAAY61B,EACZniF,YAAavuD,EAAK,0CAClBs3D,SAAU25E,EACV1xI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBsD,0BAChBtD,EAAAA,GAAgBwD,8BAChBxD,EAAAA,GAAgBkD,yBAChBh9G,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBsD,0BACnB,OACEvvI,EAAAA,GAAAC,cAAC4vI,GAAoB,CACnBtC,8BAA4B,EAC5B7gF,YAAavuD,EAAK,+BAClBs3D,SAAU+5E,EACV9xI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBwD,8BAChBxD,EAAAA,GAAgBkD,yBAChBh9G,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBwD,8BACnB,OACEzvI,EAAAA,GAAAC,cAAC4vI,GAAoB,CACnBtC,8BAA4B,EAC5BC,iBAAkBe,EAClB7hF,YAAavuD,EAAK,kDAClB04B,UAAWA,EACX4+B,SAAUy5E,EACVxxI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBkD,yBAChBh9G,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBoC,gBACnB,OACEruI,EAAAA,GAAAC,cAAC4vI,GAAoB,CACnBtC,8BAA4B,EAC5Br9E,MAAOA,EAAQ/xD,EAAK+xD,QAASrxD,EAC7Bm6G,WAAY61B,EACZniF,YAAavuD,EAAK,0CAClBs3D,SAAUi6E,EACVhyI,SAAUA,EACV6hE,QAASA,IAIf,QACE,OACJ,KCpMIwwE,GAAiB,CAAC,GAAI,IAAK,IAAK,IAAM,IAAM,IAAM,KAgFxD,SAASC,GAAYC,EAAkBv/H,GACrC,MAAMw/H,EAAaD,EAAOE,WAAWn+E,GAAUthD,GAASshD,IAClDo+E,EAAYH,EAAOC,EAAa,IAAM,EACtCG,EAAYJ,EAAOC,IAAeD,EAAOA,EAAOlwI,OAAS,GAE/D,OAAOmwI,GADWx/H,EAAQ0/H,IAAcC,EAAYD,EAEtD,CAEA,SAASj5H,GAAS84H,EAAkBl5H,GAClC,MAAMm5H,EAAatwI,KAAKse,MAAMnH,GACxBq5H,EAAYH,EAAOC,EAAa,IAAM,EAEtCI,EAAaF,IADDH,EAAOC,IAAeD,EAAOA,EAAOlwI,OAAS,IACnBqwI,IAAcr5H,EAAWm5H,GACrE,OAAOI,EAAa,IAAM1wI,KAAKiW,MAAMy6H,GAA4C,GAA9B1wI,KAAKiW,MAAMy6H,EAAa,GAC7E,CAEA,UAAe9yI,EAAAA,EAAAA,KA9FyB+yI,EACtC1wI,MAAM,EACNb,MACA0R,QACAmS,WACA2tH,WACAluH,OACA3kB,YACA68F,eACAtpF,WACAu/H,iCAEA,MAAMtyI,GAAOC,EAAAA,GAAAA,KAEP6xI,GAASrxI,EAAAA,EAAAA,KAAQ,KACrB,MAAMQ,EAAS,GACf,IAAK,IAAI4nD,EAAI,EAAGA,EAAI+oF,GAAehwI,OAAQinD,IAKzC,GAJI+oF,GAAe/oF,GAAKhoD,GACtBI,EAAOM,KAAKqwI,GAAe/oF,IAGzB+oF,GAAe/oF,IAAMhoD,EAAK,CAC5BI,EAAOM,KAAKV,GACZ,KACF,CAGF,OAAOI,CAAM,GACZ,CAACJ,IAEEsoF,GAAeh3E,EAAAA,EAAAA,IAAiB8gB,IACpC,MAAMgnE,EAAWzwE,OAAOyJ,EAAMrK,cAAcrW,OAC5CQ,EAASiG,GAAS84H,EAAQ73C,GAAU,IAGhCs4C,GAAgBxwI,EAAAA,GAAAA,GACpBvC,EACA,cACAklB,GAAY,WACZ2tH,GAAY,WACZluH,GAAQ,QAgBV,OACEtiB,EAAAA,GAAAC,cAAA,OAAKtC,UAAW+yI,GAZd1wI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBAAiByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACxDmB,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYyD,IAAI,QAAQjD,EAAKwyI,OAAO9wI,IACpDG,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,yBACZ8yI,GAA+BzwI,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAC3CquI,EAAAA,GAAAA,GAAkBzyI,EAAMgZ,GAAS84H,EAAQD,GAAYC,EAAQv/H,MAEhE1Q,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYyD,IAAI,QAAQjD,EAAKwyI,OAAO3xI,KAQtDgB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACbqC,EAAAA,GAAAC,cAAA,OACEtC,UAAU,oBACVsM,MAAQ,UAAU+lI,GAAYC,EAAQv/H,GAASu/H,EAAOlwI,OAAU,SAElEC,EAAAA,GAAAC,cAAA,SACEJ,IAAK,EACLb,IAAKixI,EAAOlwI,OACZy6F,aAAcw1C,GAAYC,EAAQz1C,GAClCq2C,KAAK,MACLnvI,KAAK,QACL/D,UAAU,qBACVuT,SAAUo2E,KAGV,ICAV,IAAe9pF,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM4+H,EAA4B5+H,EAAO8/B,WAAW8+F,0BAC9CC,EAAuBD,EAA4BA,EAA4B,IAAO,EACtFE,EAA2C9+H,EAAO8/B,WAAWi/F,mCAInE,MAAO,CACLA,mCAJyCD,EACvCA,EAA2C,IAAO,IAIpDD,uBACAG,0BAA2Bh/H,EAAO8/B,WAAWk/F,2BAA6BC,EAAAA,IAC3E,GAZel/H,EApEpB,UAA0B,qBACxB8+H,EAAoB,0BACpBG,EAAyB,mCACzBD,EAAkC,2BAClCR,EAA0B,YAC1BW,EAAW,kBACXC,EAAiB,SACjBngI,IAEA,MAAM,iBAAE8yB,IAAqBj0B,EAAAA,EAAAA,MAEvB5R,GAAOC,EAAAA,GAAAA,KAEPkzI,GAAgChhI,EAAAA,EAAAA,IAAiBI,IACrDQ,IAAWR,EAAM,IAGb6gI,GAA0BjhI,EAAAA,EAAAA,IAAgB,KAC9C0zB,EAAiB,CAAEQ,eAAgB,mBAAoB,IAGzD,OACExkC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,oCAER6B,EAAAA,GAAAC,cAACswI,GAAiB,CAChB/1C,aAAc62C,EACdxxI,IAAK2xI,EAAAA,IACLxyI,IAAKkyI,EACLxgI,MAAO2gI,EACPngI,SAAUogI,EACVb,2BAA4BA,EAC5BD,UAAWC,KAEXA,GACAzwI,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,UACNw0C,OAAK,EACLlkD,KAAK,UACLS,mBAAiB,EACjBzE,UAAU,yBACVK,QAASuzI,GAETvxI,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,gCACbQ,EAAK,qBACN6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,aAAa5E,UAAU,kCAIvC8yI,GACCzwI,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,mCAAmCyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACvEV,EAAKizI,EAAc,2BAA6B,wCAAyC,CACxFK,SAASC,EAAAA,GAAAA,IAAmD,IAArCT,GACvBnvI,QAAQylF,EAAAA,GAAAA,GACN8pD,EAAoBN,EAAuBE,EAC3C,MACA9yI,EAAK45D,OAEN,CACD/b,WAAW,KAMvB,K,eC5DA,UAAex+C,EAAAA,EAAAA,KAvBf,UAA2B,eAAEm0I,IAC3B,MAAM,iBAAE3tG,IAAqBj0B,EAAAA,EAAAA,MACvB5R,GAAOD,EAAAA,EAAAA,KACP0zI,GAAyBthI,EAAAA,EAAAA,IAAgB,IAAM0zB,EAAiB,CAAEQ,eAAgBmtG,MAExF,OACE3xI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPq/B,YAAa3kC,EAAAA,GAAAC,cAACuB,GAAAA,EAAQ,CAAC7D,UAAU,0BAA0B+D,KAAK,UAAUC,KAAK,QAC/E3D,QAAS4zI,GAERzzI,EAAK,2BAER6B,EAAAA,GAAAC,cAAA,KACEtC,UAAU,gDACVyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAEzBV,EAAK,uCAId,ICFA,IAAeX,EAAAA,EAAAA,KAlBf,UAA6B,MAAEuT,EAAK,UAAEy9E,IACpC,MAAMrwF,GAAOD,EAAAA,EAAAA,MACP,iBAAE6lC,IAAqBh0B,EAAAA,EAAAA,MAE7B,OACE/P,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GCrBM,WDuBfsuF,GCvBiF,YDyBnFxwF,QAASA,IAAM+lC,EAAiB,CAAEr9B,QAASvI,EAAK,mCAEhD6B,EAAAA,GAAAC,cAAA,YAAO8Q,GACP/Q,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,aAAa5E,UC5BsC,aD+BpE,IEgKA,IAAeH,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACxC,MAAM2/H,GAA2BC,EAAAA,EAAAA,KAA+B5/H,GAE1D6/H,EAA+B7/H,EAAOsiC,SAASvL,QAAQ+oG,gBAAgBroG,aAAa5pC,QAAU,EAEpG,MAAO,CACLkyI,wCAAwCC,EAAAA,EAAAA,KAAuChgI,GAC/EigI,wBAAyBnjI,QAAQ6iI,GACjCA,yBAA0BA,GAA4BO,EAAAA,IACtDnwG,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GACjDmgI,kCAAmCngI,EAAO8/B,WAAWqgG,kCACrDC,qBAAsBpgI,EAAO8/B,WAAWugG,2BACxCR,+BACD,GAbiB9/H,EApJpB,UAAyB,SACvBvU,EAAQ,kCACR20I,EAAiC,qBACjCC,EAAoB,uCACpBL,EAAsC,wBACtCE,EAAuB,yBACvBN,EAAwB,qBACxB5vG,EAAoB,6BACpB8vG,EAA4B,QAC5BxyE,EAAO,eACPssE,IAEA,MAAM,4BAAE/f,IAAgC/7G,EAAAA,EAAAA,MAClC9R,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KAEPo0I,EAAiCvwG,GAAwBowG,EACzD5B,EAA6BxuG,GAAwBqwG,GACpDjB,EAAmBoB,IAAwBviI,EAAAA,EAAAA,IAAiB2hI,GAE7D7kD,GAAgBpuF,EAAAA,EAAAA,KAAQ,IACxBuzI,EAAgC,sBAChCF,EAA+C,uBAC5C,aACN,CAACE,EAAyBF,IAEvBr0I,GAAUgB,EAAAA,EAAAA,KAAQ,IACf,CACL,CAAE8R,MAAO,YAAaK,MAAO9S,EAAQ,iBACrC,CACEyS,MAAO,uBACPK,MAAOyhI,EACLv0I,EAAQ,qCAER+B,EAAAA,GAAAC,cAACyyI,GAAmB,CAClB3hI,MAAO9S,EAAQ,qCACfuwF,UAA6B,yBAAlBxB,IAGf2lD,QAASH,EACTI,wBAAwB,GAE1B,CACEliI,MAAO,sBACPK,MAAO0/H,EACLtyI,EAAK,4BAEL6B,EAAAA,GAAAC,cAACyyI,GAAmB,CAClB3hI,MAAO5S,EAAK,4BACZqwF,UAA6B,wBAAlBxB,IAGf2lD,QAASlC,EACTmC,wBAAwB,KAG3B,CAAC30I,EAASE,EAAMq0I,EAAgC/B,EAA4BzjD,IAEzE1F,GAAeh3E,EAAAA,EAAAA,IAAiB24B,IACpC6iF,EAA4B,CAC1BmmB,uCAAoD,yBAAZhpG,EAExC4oG,yBAAsC,wBAAZ5oG,EAAoCooG,EAAoB,MAClF,IAGEwB,GAA2CllH,EAAAA,GAAAA,IAAsBjd,IACrEo7G,EAA4B,CAC1B+lB,yBAA0BnhI,GAC1B,GACD,CAACo7G,GAA8B,KAAK,GAEjCwlB,GAAgC7tI,EAAAA,EAAAA,KAAaiN,IACjD+hI,EAAqB/hI,GACrBmiI,EAAyCniI,EAAM,GAC9C,CAAC+hI,EAAsBI,KA+B1BtlH,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAMuzE,GAAqBl0I,EAAAA,EAAAA,KAAQ,IACGT,EAAhCg0I,EAAqC,sCAC7B,iDACX,CAACA,EAAyBh0I,IAE7B,OACE6B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAC/DZ,EAAQ,yBAEX+B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,mBACL3E,QAASA,EACTsT,SAAUo2E,EACVn2E,SAAU67E,IAEZhtF,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,mCAAmCyD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAC1Ei0I,IAGc,wBAAlB9lD,GACChtF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iCACbqC,EAAAA,GAAAC,cAAC8yI,GAAgB,CACftC,2BAA4BA,EAC5BY,kBAAmBA,EACnBngI,SAAUogI,KAIfb,GAAgD,wBAAlBzjD,GAhEnC,WACE,MAAMgmD,EAAgBjB,EAClB9zI,EAAQ,QAAS8zI,EAA8B,KADE5zI,EAAK,2BAG1D,OACE6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAC/DV,EAAK,mBAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNj2G,KAAK,cAELnH,QAASA,KACP6tI,EAAeI,EAAAA,GAAgBgH,sBAAsB,GAGvDjzI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,4BACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,2CAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YACdq1I,KAOZ,CAqC8EE,IACxEjxG,GAA0C,wBAAlB+qD,GACvBhtF,EAAAA,GAAAC,cAACkzI,GAAiB,CAACxB,eAAe,oBAG3C,KC3Le,SAASyB,GAAeC,GACrC,MAAMC,EAAWD,EAAQC,SAASxoF,cAC5ByoF,EAASF,EAAQG,YAAY1oF,cAC7B2oF,EAAgBJ,EAAQI,cAAc3oF,cAE5C,OAAIyoF,EAAOphH,SAAS,QACX,OAGLohH,EAAOphH,SAAS,YAAcohH,EAAOphH,SAAS,cACzC,SAELohH,EAAOphH,SAAS,SACX,QAELohH,EAAOphH,SAAS,WACX,UAELohH,EAAOphH,SAAS,UACX,SAELohH,EAAOphH,SAAS,WACX,UAELohH,EAAOphH,SAAS,SACX,QAELohH,EAAOphH,SAAS,kBACX,UAELmhH,EAASnhH,SAAS,WACb,UAGPohH,EAAOphH,SAAS,WACbohH,EAAOphH,SAAS,SAChBmhH,EAASnhH,SAAS,QAClBmhH,EAASnhH,SAAS,UAClBshH,EAActhH,SAAS,SAEnB,QAELmhH,EAASnhH,SAAS,WAAashH,EAActhH,SAAS,UACjD,SAELmhH,EAASnhH,SAAS,UAAYshH,EAActhH,SAAS,SAChD,QAELmhH,EAASnhH,SAAS,YAAcshH,EAActhH,SAAS,WAClD,UAGF,SACT,CCvDA,UAAgB,sBAAwB,WAAW,sBAAwB,WAAW,WAAa,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,kBAAoB,WAAW,gBAAkB,WAAW,kBAAoB,WAAW,gBAAkB,WAAW,mBAAqB,WAAW,iBAAmB,WAAW,iBAAmB,WAAW,eAAiB,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,kBAAoB,WAAW,gBAAkB,WAAW,kBAAoB,WAAW,gBAAkB,WAAW,mBAAqB,WAAW,iBAAmB,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,mBAAqB,WAAW,iBAAmB,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,oBAAsB,WAAW,kBAAoB,WAAW,iBAAmB,WAAW,eAAiB,WAAW,MAAQ,WAAW,KAAO,WAAW,KAAO,WAAW,IAAM,WAAW,aAAe,WAAW,WAAa,WAAW,aAAe,YC0IrpC,IAAe30B,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAqB,CAACC,GAAU0jG,WAC3C,CACLy9B,QAASz9B,EAAO1jG,EAAOwhI,eAAeC,OAAO/9B,QAAQ/2G,KAFrCoT,EA5GqC2hI,EACvDvvI,SAAQgvI,UAASxuI,cAEjB,MAAM,sBAAEgvI,EAAqB,uBAAEC,IAA2B/jI,EAAAA,EAAAA,MACpD5R,GAAOD,EAAAA,EAAAA,KAEP61I,GAAmBhmG,EAAAA,GAAAA,GAAiBslG,GAAS,GAE7CW,GAA+BvwI,EAAAA,EAAAA,KAAY,KAC/CowI,EAAsB,CACpBj+B,KAAMy9B,EAASz9B,KACfq+B,uBAAwBZ,EAASY,uBACjC,GACD,CAACJ,EAAuBR,IAErBa,GAAyBzwI,EAAAA,EAAAA,KAAY,KACzCowI,EAAsB,CACpBj+B,KAAMy9B,EAASz9B,KACfu+B,iBAAkBd,EAASc,iBAC3B,GACD,CAACN,EAAuBR,IAErBe,GAA8B3wI,EAAAA,EAAAA,KAAY,KAC9CqwI,EAAuB,CAAEl+B,KAAMy9B,EAASz9B,OACxC/wG,GAAS,GACR,CAACA,EAASwuI,EAASS,IAEtB,GAAKC,EAqBL,OACE/zI,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJR,OAjBAxE,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yBAAyByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAChEmB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAAC4T,OAAK,EAACxE,MAAM,cAAc1P,KAAK,UAAUmU,UAAW3X,EAAK,SAAUH,QAAS6G,GAClF7E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eAAeQ,EAAK,yBACnC6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,SACNrT,QAASo2I,EACTz2I,WAAWuC,EAAAA,GAAAA,GAAe,sBAAuBC,GAAOk0I,eAEvDl2I,EAAK,qCAQVkG,OAAQA,EACRmsE,gBAAc,EACd3rE,QAASA,EACTlH,UAAWwC,GAAOyzI,uBAElB5zI,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GACdC,GAAOm0I,WACPP,GAAoB5zI,GAAQ,eAAcizI,GAAeW,SAG3D/zI,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,GAAOiF,MAAOhE,IAAI,QAAQ2yI,GAAkBP,aAC3DxzI,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOi1B,KAAM,aAAYj3B,EAAK,8BAC3Ci7F,EAAAA,GAAAA,IAAqD,IAA9B26C,EAAiBQ,WAAmBp2I,EAAK45D,OAGnE/3D,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,GAAOq0I,KACpBx0I,EAAAA,GAAAC,cAAA,UAAK9B,EAAK,uBACV6B,EAAAA,GAAAC,cAAA,UACG8zI,GAAkBvvE,QAAQ,IAAEuvE,GAAkBU,WAAW,IAAE,IAC3DV,GAAkBT,SAAS,IAAES,GAAkBN,eAGlDzzI,EAAAA,GAAAC,cAAA,UAAK9B,EAAK,sBACV6B,EAAAA,GAAAC,cAAA,UAAK8zI,GAAkBW,IAEvB10I,EAAAA,GAAAC,cAAA,UAAK9B,EAAK,4BACV6B,EAAAA,GAAAC,cAAA,UAAK8zI,GA2Bb,SAAqBV,GACnB,MAAO,CAACA,EAAQsB,OAAQtB,EAAQjkD,SAAStvD,OAAO9wB,SAASga,KAAK,KAChE,CA7BiC4rH,CAAYb,KAGvC/zI,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,GAAO00I,MAAO12I,EAAK,0BAEjC6B,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,GAAO20I,cAAe32I,EAAK,kCAE1C6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACtH,QAASg2I,GACjBh0I,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,GAAO40I,YAAa52I,EAAK,iCAC1C6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACP7nC,GAAG,iBACHqN,MAAM,KACN05B,QAASspG,EAAiBE,yBAG9Bj0I,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACtH,QAASk2I,GACjBl0I,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,GAAO40I,YAAa52I,EAAK,gCAC1C6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACP7nC,GAAG,eACHqN,MAAM,KACN05B,QAASspG,EAAiBI,mBAGxB,KCgIZ,SAASS,GAAYvB,GACnB,MAAO,CAACA,EAAQsB,OAAQtB,EAAQjkD,SAAStvD,OAAO9wB,SAASga,KAAK,KAChE,CAEA,UAAexrB,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,GAAuBA,EAAOwhI,gBADbzhI,EArOsC+iI,EACxDt3I,WACA6hE,UACAo0E,SACAsB,gBACAC,cAEA,MAAM,uBACJpB,EAAsB,2BACtBqB,EAA0B,iBAC1BC,IACErlI,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,MACNm3I,EAAiCC,EAA+BC,IAAkC/2I,EAAAA,EAAAA,MAClGg3I,EAAmBC,IAAwBvlI,EAAAA,EAAAA,OAC3CugD,EAAa1nB,EAAWC,IAAcxqC,EAAAA,EAAAA,KAEvCk3I,GAAqB92I,EAAAA,EAAAA,KAAQ,KAGjC,QAAgBC,IAAZq2I,EAIJ,OAAIA,GAAW,EACN,IAGLA,GAAW,GACN,KAGLA,GAAW,GACN,KAGLA,GAAW,IACN,MAGLA,EAAU,IACL,WADT,CAIgB,GACf,CAACA,IAEES,GAAyB/2I,EAAAA,EAAAA,KAAQ,KACrC,MAAMhB,EAAU,CAAC,CACfmT,MAAO5S,EAAK,QAAS,EAAG,KACxBuS,MAAO,KACN,CACDK,MAAO5S,EAAK,SAAU,EAAG,KACzBuS,MAAO,MACN,CACDK,MAAO5S,EAAK,SAAU,EAAG,KACzBuS,MAAO,MACN,CACDK,MAAO5S,EAAK,SAAU,EAAG,KACzBuS,MAAO,QAQT,OANIwkI,GAAWA,GAAW,KACxBt3I,EAAQ8B,KAAK,CACXqR,MAAO5S,EAAK,QAAS,EAAG,KACxBuS,MAAO,QAGJ9S,CAAO,GACb,CAACO,EAAM+2I,IAEJd,GAA8B3wI,EAAAA,EAAAA,KAAamyG,IAC/Ck+B,EAAuB,CAAEl+B,QAAO,GAC/B,CAACk+B,IAEE8B,GAA6BnyI,EAAAA,EAAAA,KAAY,KAC7C8xI,IACAJ,GAA4B,GAC3B,CAACI,EAAgCJ,IAE9BU,GAAyBpyI,EAAAA,EAAAA,KAAamyG,IAC1C6/B,EAAqB7/B,GACrB7sE,GAAW,GACV,CAACA,IAEE+sG,GAA0BryI,EAAAA,EAAAA,KAAY,KAC1CgyI,OAAqB52I,GACrBmqC,GAAY,GACX,CAACA,IAEE+sG,GAAyBtyI,EAAAA,EAAAA,KAAaiN,IAC1C0kI,EAAiB,CAAEY,KAAMruH,OAAOjX,IAAS,GACxC,CAAC0kI,IAEEa,GAAiBr3I,EAAAA,EAAAA,KAAQ,KAC7B,MAAMs3I,EAAqBjB,EAAcv0I,MAAMk1G,GAAS+9B,EAAO/9B,GAAMugC,YAErE,OAAOD,EAAqBvC,EAAOuC,QAAsBr3I,CAAS,GACjE,CAAC80I,EAAQsB,IAENmB,GAAqBx3I,EAAAA,EAAAA,KAAQ,IAC1Bq2I,EAAcn1G,QAAQ81E,IAAU+9B,EAAO/9B,GAAMugC,aACnD,CAACxC,EAAQsB,IACNoB,EAAmBrnI,QAAQonI,EAAmBr2I,QAqGpD,OAnGAwtB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAkGRv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yDACZs4I,IAhGyB5C,EAgGc4C,EA9FxCj2I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,gCAGR6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAAC81G,QAAM,EAAC12E,UAAQ,EAACv/B,KAAO,UAASiuI,GAAeC,KAAY5tI,cAAc,eACjFzF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BAA2ByD,IAAI,QAC5CpB,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,QAAQyD,IAAI,QAAQiyI,EAAQG,aAC5CxzI,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,wBACb01I,EAAQ7uE,QAAQ,IAAE6uE,EAAQoB,WAAW,KAAGpB,EAAQC,SAAS,IAAED,EAAQI,eAEtEzzI,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAY01I,EAAQqB,GAAG,MAAIE,GAAYvB,MAI1DgD,GACCr2I,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,2BACVwH,KAAK,OACLid,QAAM,EACNg5F,QAAM,EACNp9G,QAASs3I,GAERn3I,EAAK,2BAwEXk4I,IAjEwBC,EAiEgBF,EA/DzCp2I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,kBAGPm4I,EAAcl2I,KAuBrB,SAAuBm2I,GACrB,MAAMlD,EAAUM,EAAO4C,GAEvB,OACEv2I,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAKqyI,EAAQz9B,KACbxzF,QAAM,EACNg5F,QAAM,EACN/4D,eAAgB,CAAC,CACfj9C,MAAO,YACPD,KAAM,OACNsR,aAAa,EACbisC,QAASA,KACP0xF,EAA4Bf,EAAQz9B,KAAK,IAG7CzwG,KAAO,UAASiuI,GAAeC,KAC/B5tI,cAAc,cACdzH,QAASA,KAAQ63I,EAAuBxC,EAAQz9B,KAAK,GAErD51G,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BAA2ByD,IAAI,QAC5CpB,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAAQ69H,EAAAA,GAAAA,IAAoBr9H,EAA2B,IAArBk1I,EAAQkB,aAC1Dv0I,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAAS01I,EAAQG,aACjCxzI,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,wBACb01I,EAAQ7uE,QAAQ,IAAE6uE,EAAQoB,WAAW,KAAGpB,EAAQC,SAAS,IAAED,EAAQI,eAEtEzzI,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAY01I,EAAQqB,GAAG,IAAEE,GAAYvB,KAI7D,MA9CIrzI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,8BAGR6B,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,oCAAoCQ,EAAK,kBACtD6B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,cACL3E,QAAS+3I,EACTxkI,SAAUukI,EACVxkI,SAAU6kI,KA2CbM,GACCr2I,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQgxI,EACRxwI,QAAS0wI,EACTt9H,KAAM9Z,EAAK,sBACXonC,aAAcpnC,EAAK,wBACnBqnC,eAAgBowG,EAChBnwG,sBAAoB,EACpB+wG,oBAAkB,IAGtBx2I,EAAAA,GAAAC,cAAC2zI,GAAqB,CAACvvI,OAAQosD,EAAamlD,KAAM4/B,EAAmB3wI,QAASixI,KA9ElF,IAA6BQ,EAhCCjD,CA+GtB,KC9PV,GAAgF,WCsGhF,IAAe71I,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAqB,CAACC,GAAU0jG,WAClD,MAAMy9B,EAAUz9B,EAAO1jG,EAAOukI,kBAAkB9C,OAAO/9B,QAAQ/2G,EAG/D,MAAO,CACLw0I,UACAvjF,IAJUujF,EAAUnhI,EAAOtR,MAAM+nC,KAAK0qG,EAAQ3/E,YAAS70D,EAKxD,GAPiBoT,EAzEqCykI,EACvDryI,SACAgvI,UACAvjF,MACAjrD,cAEA,MAAM,0BAAE8xI,IAA8B5mI,EAAAA,EAAAA,MAChC5R,GAAOD,EAAAA,EAAAA,KAEP61I,GAAmBhmG,EAAAA,GAAAA,GAAiBslG,GAAS,GAC7CuD,GAAe7oG,EAAAA,GAAAA,GAAiB+hB,GAAK,GAErCskF,GAA8B3wI,EAAAA,EAAAA,KAAY,KAC9CkzI,EAA0B,CAAE/gC,KAAMy9B,EAASz9B,OAC3C/wG,GAAS,GACR,CAACA,EAASwuI,EAASsD,IAEtB,GAAK5C,EAqBL,OACE/zI,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJR,OAjBAxE,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yBAAyByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAChEmB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAAC4T,OAAK,EAACxE,MAAM,cAAc1P,KAAK,UAAUmU,UAAW3X,EAAK,SAAUH,QAAS6G,GAClF7E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eAAeQ,EAAK,qBACnC6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,SACNrT,QAASo2I,EACTz2I,WAAWuC,EAAAA,GAAAA,GAAe,sBD5DwN,aC8DjP/B,EAAK,yBAQVkG,OAAQA,EACRmsE,gBAAc,EACd3rE,QAASA,EACTlH,UDzEiB,YC2EjBqC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt4B,UD5EmC,WC6EnCu4B,KAAM0gH,EACNj1I,KAAK,UAENi1I,GAAgB52I,EAAAA,GAAAC,cAACosD,GAAAA,EAAa,CAAC1uD,UDhFwB,WCgFCu4B,KAAM0gH,IAC/D52I,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACb4zI,GAAkBtgF,QAGrBzzD,EAAAA,GAAAC,cAAA,MAAItC,UDrFuF,YCsFzFqC,EAAAA,GAAAC,cAAA,UAAK9B,EAAK,8BACV6B,EAAAA,GAAAC,cAAA,UACG8zI,GAAkB8C,SAGrB72I,EAAAA,GAAAC,cAAA,UAAK9B,EAAK,sBACV6B,EAAAA,GAAAC,cAAA,UAAK8zI,GAAkBW,IAEvB10I,EAAAA,GAAAC,cAAA,UAAK9B,EAAK,4BACV6B,EAAAA,GAAAC,cAAA,UAAK8zI,GAAkBY,SAEzB30I,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,IAAchC,EAAK,mCAC3B,KClGZ,IAAgB,OAAS,WAAW,aAAa,WAAW,UAAY,WAAW,SAAW,YC4J9F,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAEyhI,EAAM,cAAEsB,GAAkB/iI,EAAOukI,kBACzC,MAAO,CACL9C,SACAsB,gBACD,GANehjI,EA5HsC6kI,EACxDp5I,WACAi2I,SACAsB,gBACA11E,cAEA,MAAM,0BACJo3E,EAAyB,8BACzBI,IACEhnI,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,MACNm3I,EAAiCC,EAA+BC,IAAkC/2I,EAAAA,EAAAA,MAClGw4I,EAAmBC,IAAwB/mI,EAAAA,EAAAA,OAC3CugD,EAAa1nB,EAAWC,IAAcxqC,EAAAA,EAAAA,KAEvC04I,GAA2BzzI,EAAAA,EAAAA,KAAamyG,IAC5C+gC,EAA0B,CAAE/gC,QAAO,GAClC,CAAC+gC,IAEEQ,GAAyB1zI,EAAAA,EAAAA,KAAY,KACzC8xI,IACAwB,GAA+B,GAC9B,CAACxB,EAAgCwB,IAE9BlB,GAAyBpyI,EAAAA,EAAAA,KAAamyG,IAC1CqhC,EAAqBrhC,GACrB7sE,GAAW,GACV,CAACA,IAEEquG,GAA0B3zI,EAAAA,EAAAA,KAAY,KAC1CwzI,OAAqBp4I,GACrBmqC,GAAY,GACX,CAACA,IAcJ,IAAwBstG,EA6CxB,IAxDA73I,EAAAA,EAAAA,KAAU,KACHw2I,EAAcl1I,QACjBw/D,GACF,GACC,CAACA,EAAS01E,KAEb1nH,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAgDL01E,EAAcl1I,OAEnB,OACEC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,2BACVwH,KAAK,OACLid,QAAM,EACNg5F,QAAM,EACNp9G,QAASs3I,GAERn3I,EAAK,oCAER6B,EAAAA,GAAAC,cAAA,KAAGtC,WAAWuC,EAAAA,GAAAA,GAAe,4BAA6BC,GAAOk3I,YAC9Dl5I,EAAK,gCA5DUm4I,EA+DJrB,EA7DhBj1I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,qBAGPm4I,EAAcl2I,KAKrB,SAAuBm2I,GACrB,MAAMlD,EAAUM,EAAO4C,GACjBzmF,GAAMlf,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAAK0qG,EAAQ3/E,OAE3C,OACE1zD,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAKqyI,EAAQz9B,KACbxzF,QAAM,EACNg5F,QAAM,EACN/4D,eAAgB,CAAC,CACfj9C,MAAO,YACPD,KAAM,OACNsR,aAAa,EACbisC,QAASA,KACPw0F,EAAyB7D,EAAQz9B,KAAK,IAI1C53G,QAASA,IAAM63I,EAAuBxC,EAAQz9B,OAE9C51G,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACt4B,UAAWwC,GAAO6F,OAAQkwB,KAAM45B,EAAKnuD,KAAK,SAClD3B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BAA2ByD,IAAI,QAC5CpB,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAAQ69H,EAAAA,GAAAA,IAAoBr9H,EAA2B,IAArBk1I,EAAQkB,aACzDzkF,GAAO9vD,EAAAA,GAAAC,cAACosD,GAAAA,EAAa,CAAC1uD,UAAWwC,GAAOiF,MAAO8wB,KAAM45B,IACtD9vD,EAAAA,GAAAC,cAAA,QAAMtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAY,QAAS,QAASC,GAAOmzI,WAClED,EAAQ5/E,OAAO,KAAG4/E,EAAQwD,QAAQ,KAAGxD,EAAQC,UAEhDtzI,EAAAA,GAAAC,cAAA,QAAMtC,WAAWuC,EAAAA,GAAAA,GAAe,WAAYC,GAAOkF,WAAYguI,EAAQqB,GAAG,IAAErB,EAAQsB,SAI5F,MAqBI30I,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQgxI,EACRxwI,QAAS0wI,EACTnwI,MAAOjH,EAAK,mCACZ8Z,KAAM9Z,EAAK,yBACXqnC,eAAgB2xG,EAChB1xG,sBAAoB,IAEtBzlC,EAAAA,GAAAC,cAACy2I,GAAqB,CAACryI,OAAQosD,EAAamlD,KAAMohC,EAAmBnyI,QAASuyI,IAC1E,KC1DV,IAAe55I,EAAAA,EAAAA,KApEsB85I,EACnC95C,aACAv6E,SACAtlB,YACA+/F,sBACA1/F,cAEA,MAAMG,GAAOD,EAAAA,EAAAA,KAEPuuG,EAAejP,GAAY/d,WAAW,GAEtC83D,GAAkBjnI,EAAAA,EAAAA,IAAgB,KAClCm8F,GAAczuG,EAAQyuG,EAAa,IAGzC,GAAKjP,GAAY/d,SAqCjB,OACEz/E,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,WAAWuC,EAAAA,GAAAA,GAAe,iBAAkB,iCAAkCvC,GAC9EsM,MAAQ,WAAUutI,EAAAA,SAClB9yG,UAAW+nE,EACXzuG,QAASu5I,GAtCb,WACE,GAAK/5C,EACL,OAAIA,EAAWI,eAAiB6O,EAE5BzsG,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL6T,UAAW0nF,EAAWp4F,MACtBiM,MAAM,cACNhQ,MAAOlD,EAAKkD,OAEZrB,EAAAA,GAAAC,cAACs9F,GAAe,CACdC,WAAYA,EACZ77F,KAAM81I,EAAAA,IACNx0H,OAAQA,EACRy6E,oBAAqBA,KAMzB19F,EAAAA,GAAAC,cAACy/F,GAAa,CACZ/gB,QAAS8tB,EACT9qG,KAAM81I,EAAAA,IACNryI,MAAOo4F,EAAWp4F,MAClB6d,OAAQA,EACRy6E,oBAAqBA,EACrBiC,eAAa,EACb19D,sBAAoB,EACpBk+D,cAAUthG,GAIlB,CASK64I,GACD13I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,SAAS6/F,EAAWp4F,OACnCpF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YAAYQ,EAAK,2BAA4Bq/F,EAAWjoE,MAAO,OAEvE,ICKf,IAAe/3B,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ,KACF8+C,EAAAA,GAAAA,IAAK9+C,EAAOsiC,SAASmjG,MAAO,CAC7B,6BAEFC,kBAAmB1lI,EAAO62E,aAAaygB,MAAMC,OAC7Cd,gBAAiBz2F,EAAOutE,SAASipB,SACjCmvC,uBAAuBluC,EAAAA,EAAAA,KAA4Bz3F,MARrCD,EA/DmC6lI,EACrDp6I,WACAk6I,oBACAjvC,kBACAovC,2BACAF,wBACAt4E,cAEA,MAAM,eAAE8qB,EAAc,iBAAEmlC,IAAqBz/G,EAAAA,EAAAA,MACvC5R,GAAOD,EAAAA,EAAAA,KAGP85I,GAAqBzqI,EAAAA,EAAAA,IAAuB,OAC1CuuF,QAASoB,IAAiCd,EAAAA,GAAAA,IAAwB,CAAEC,QAAS27C,KAErFzqH,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAM04E,GAAwBx0I,EAAAA,EAAAA,KAAak7E,IACzC0L,EAAe,CACblB,eAAgBxK,EAAQwK,gBACxB,GACD,CAACkB,IAEE6tD,GAAiCz0I,EAAAA,EAAAA,KAAa20F,IAClDo3B,EAAiB,CAAEuoB,yBAA0B3/C,GAAW,GACvD,CAACo3B,IAEE2oB,GAAkBv5I,EAAAA,EAAAA,KAAQ,IAC9Bg5I,GAAqBp3F,OAAOuK,QAAOiG,EAAAA,GAAAA,IAAK23C,EAAiBivC,KACxD,CAACA,EAAmBjvC,IAEvB,OACE3oG,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACZw6I,GACCn4I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,wBACZssC,QAASstG,EACThkF,QAASmkF,IAEXl4I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,OAAOyZ,IAAK4gI,GACxBG,EAAgB/3I,KAAKo9F,GACpBx9F,EAAAA,GAAAC,cAACq3I,GAAc,CACbt2I,IAAKw8F,EAAW95F,GAChB85F,WAAYA,EACZE,oBAAqBR,EACrBl/F,QAASi6I,EACTh1H,QAAS40H,OAIf73I,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,SAC/CY,EAAAA,GAAAA,GAAW7D,EAAK,gBAAiB,CAAC,YAIrC,KCsEV,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ8+C,EAAAA,GAAAA,IAAK9+C,EAAOsiC,SAASmjG,MAAO,CACjC,+BACA,iCACA,2BACA,6BACA,+BACA,iCACA,2BACA,6BACA,8BACA,gCACA,0BACA,4BACA,2BAfc1lI,EA9HmCmmI,EACrD16I,WACA6hE,UACA84E,+BACAC,iCACAC,2BACAC,6BACAC,+BACAC,iCACAC,2BACAC,6BACAC,8BACAC,gCACAC,0BACAC,4BACAC,4BAEA,MAAM,iBAAEzpB,IAAqBz/G,EAAAA,EAAAA,MAEvB5R,GAAOC,EAAAA,GAAAA,MAEbmvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAM25E,GAAyBz1I,EAAAA,EAAAA,KAAaiN,GACnCvS,EAAK,4BAA6B,CACvC6zB,MAAO7zB,EAAK,aAAc,CAAEo3B,MAAO4jH,EAAAA,IAAgCzoI,QAEpE,CAACvS,IAEEi7I,GAAuB31I,EAAAA,EAAAA,KAAaiN,IACxC8+G,EAAiB,CAAEypB,sBAAuBE,EAAAA,IAAgCzoI,IAAS,GAClF,CAAC8+G,IAmBJ,SAAS6pB,EACPj0I,EACApE,EACAs4I,EACAC,EACAC,EACAC,GAEA,OACEz5I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYuG,GAE3EpF,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,gCACZssC,QAAS6uG,EAGTvlF,QAAUy6B,GAAcghC,EAAiB,CAAE,CAAE,cAAaxuH,iBAAoBwtF,MAEhFxuF,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,oCACZssC,QAAS8uG,EAETxlF,QAAUy6B,GAAcghC,EAAiB,CAAE,CAAE,cAAaxuH,mBAAsBwtF,MAElFxuF,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,kCACZssC,QAAS+uG,EAETzlF,QAAUy6B,GAAcghC,EAAiB,CAAE,CAAE,cAAaxuH,aAAgBwtF,MAE5ExuF,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,gCACZssC,QAASgvG,EAET1lF,QAAUy6B,GAAcghC,EAAiB,CAAE,CAAE,cAAaxuH,eAAkBwtF,MAGrE,SAARxtF,GAvDP,WACE,MAAM0P,EAAQyoI,EAAAA,IAAgC16G,QAAQw6G,GAEtD,OACEj5I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,QACbqC,EAAAA,GAAAC,cAACoiB,GAAAA,EAAW,CACVtR,MAAO5S,EAAK,2BACZ0B,IAAK,EACLb,IAAK,EACL0R,OAAkB,IAAXA,EAAeA,EAAQ,EAC9BgpI,YAAaR,EACbhoI,SAAUkoI,IAIlB,CAwCyBO,GAGzB,CAEA,OACE35I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACZ07I,EACCl7I,EAAK,2BACL,QACAk6I,EACAC,EACAC,EACAC,GAEDa,EACCl7I,EAAK,2BACL,QACAs6I,EACAC,EACAC,EACAC,GAEDS,EACCl7I,EAAK,0BACL,OACA06I,EACAC,EACAC,EACAC,GAEE,KC7JV,IAAgB,KAAO,WAAW,KAAO,YCqBnCY,GAAsC,CAC1C,KAAM,MAAO,KAAM,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KACzD,MAAO,KAAM,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MACzD,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,MAAO,KAAM,KAC1D,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,KAAM,KAAM,MACzD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KACvD,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,MACvD,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KACxD,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KACvD,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,MACxD,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,MAAO,KAAM,KAC1D,KAAM,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,MAAO,MAC1D,MAAO,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KACzD,KAAM,MAAO,MAAO,KAAM,MAAO,MAAO,KAAM,KAAM,KAAM,KAC1D,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,MAAO,KAAM,KAC1D,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5D,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAC7D,MAAO,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,MAC5D,KAAM,KAAM,MAAO,MAGfC,GAAsB7pB,EAAAA,IAAgClwF,QAAQ3hC,GAClEy7I,GAAoCznH,SAASh0B,KAyF/C,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,eACJ4nI,GACE5nI,EAAOsiC,SAASmjG,MAEpB,MAAO,CACLmC,iBACD,GARe7nI,EA/EsC8nI,EACxDr8I,WACAo8I,iBACAv6E,cAEA,MAAM,iBAAEiwD,IAAqBz/G,EAAAA,EAAAA,MAGvBiqI,GADO97I,EAAAA,EAAAA,KACS65D,MAAQ,MACvBkiF,EAAkBC,IAAuBhqI,EAAAA,EAAAA,IAAmB,KAC5D41B,EAAaC,IAAkB71B,EAAAA,EAAAA,IAAiB,IAEjDiqI,GAA0Cv7I,EAAAA,EAAAA,KAAQ,KACtD,MAAMhB,EAAUi8I,GAAoBz5I,KAAKuvH,IAOhC,CACLA,WACAM,eARsB,IAAIC,KAAKC,aAAa,CAAC6pB,GAAW,CAAEt4I,KAAM,aAC3B0uH,GAAGT,GAQxCU,aANoB,IAAIH,KAAKC,aAAa,CAACR,GAAW,CAAEjuH,KAAM,aAC7B0uH,GAAGT,OAOrC7vF,OAAO9wB,SAAS5O,KAAI,EAAGuvH,WAAUM,iBAAgBI,mBAAmB,CACrEt/G,MAAOk/G,EACP9hC,SAAUkiC,EACV3/G,MAAOi/G,MAGT,IAAK7pF,EAAYikC,OAAQ,CACvB,MAAMqwE,EAAwBx8I,EAAQ8C,MAAMzB,GAAWA,EAAOyR,QAAUspI,IAClEK,EAAkBz8I,EAAQkiC,QAAQ7gC,GAAWA,EAAOyR,QAAUspI,IACpE,OAAOI,EAAwB,CAACA,KAA0BC,GAAmBz8I,CAC/E,CAEA,OAAOA,GAASkiC,QAAQ7gC,GAAWA,EAAO8R,MAAM+5C,cAAc34B,SAAS2T,EAAYglB,gBAAe,GACjG,CAACkvF,EAAUl0G,KAEd+B,EAAAA,GAAAA,IAAsB,EAAEC,EAAcwyG,MACpC,GAAIxyG,IAAiBpqC,GAAY48I,GAAc55I,MAAMzB,GAAWA,IAAW+6I,IAAW,OACtF,MAAO7oI,IAAY45H,EAAAA,GAAAA,IAAUoP,GAAsBl7I,GAAW66I,EAAe3nH,SAASlzB,EAAOyR,SAC7FwpI,EAAoB,IAAI/oI,EAAS/Q,KAAKnB,GAAWA,EAAOyR,SAAQ,GAC/D,CAAChT,EAAUo8I,EAAgBG,EAAiBl6I,OAAQi6I,EAAUG,IAEjE,MAAM7yD,GAAeh3E,EAAAA,EAAAA,IAAiBk/E,IACpC0qD,EAAoB1qD,GACpBggC,EAAiB,CACfsqB,eAAgBtqD,GAChB,IAQJ,OALAjiE,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOkgC,KAAM,qCAC1CrgC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOgS,OACpCnS,EAAAA,GAAAC,cAACmsF,GAAU,CACTzuF,UAAWwC,GAAOyvF,OAClBjpC,MAAOwzF,EACPptD,eAAgBktD,EAChBpsD,uBAAwBvG,EACxB5gD,YAAaZ,EACbmB,eAAgBlB,EAChBc,cAAY,EACZK,eAAa,EACbJ,oBAAkB,EAClBM,cAAc,WACdR,cAAc,wBAGd,KCwFV,IAAeppC,EAAAA,EAAAA,KAtLuB+8I,EACpChqI,SACA8mC,YACAmjG,qBAEA,MAAM,iBACJz2G,EAAgB,eAChB02G,EAAc,mBACdC,EAAkB,cAClBC,EAAa,kBACbC,IACE7qI,EAAAA,EAAAA,MACE5R,GAAOD,EAAAA,EAAAA,MACN28I,EAAoBC,IAAyB5qI,EAAAA,EAAAA,MAE9C6qI,GAAen8I,EAAAA,EAAAA,KAAQ,IAAMy4C,EAAUj3C,KAAI,EAAG46I,cAAeA,KAAW,CAAC3jG,IACzE4jG,GAAmBziH,EAAAA,EAAAA,GAAsBuiH,IAExCj+E,EAAOgsE,IAAY54H,EAAAA,EAAAA,IAAoB,CAC5CgrI,iBAAkBH,EAClBI,mBAAoBJ,EACpB9R,kBAAcpqI,KAIhBJ,EAAAA,EAAAA,KAAU,KACJw8I,IAAqBF,GACvBjS,EAAS,CACPoS,iBAAkBH,EAClBI,mBAAoBJ,EACpB9R,kBAAcpqI,GAElB,GACC,CAACo8I,EAAkBF,IAEtB,MAAMK,GAAqB33I,EAAAA,EAAAA,KAAaiN,KACtCugH,EAAAA,GAAAA,IAAqB,IAAGvgH,KACxBqzB,EAAiB,CACfr9B,QAASvI,EAAK,mBACd,GACD,CAACA,EAAM4lC,IAEJs3G,GAAsB53I,EAAAA,EAAAA,KAAagY,IACnCA,EAAK6/H,WACPd,EAAe/+H,EAAKu/H,UAEpBF,EAAsBr/H,EACxB,GACC,CAAC++H,IAEEe,GAA6B93I,EAAAA,EAAAA,KAAY,KAC7Cq3I,OAAsBj8I,EAAU,GAC/B,IAEG28I,GAAuB/3I,EAAAA,EAAAA,KAAY,KAClCo3I,IAIDtqI,EACFmqI,EAAmB,CACjBnqI,SACAyqI,SAAUH,EAAmBG,SAC7Bt9I,UAAWm9I,EAAmBn9I,WAGhC+8I,EAAe,CACbO,SAAUH,EAAmBG,SAC7Bt9I,UAAWm9I,EAAmBn9I,WAGlC69I,IAA4B,GAC3B,CAAChrI,EAAQgrI,EAA4Bb,EAAoBD,EAAgBI,IAEtE5jE,GAAaxzE,EAAAA,EAAAA,KAAY,CAACmmI,EAAuClmI,KACrE,MAAM+vB,EAAQ7zB,KAAKiW,MAAM+zH,EAAY19G,EA7Ed,IA8EjB1sB,EAAQs9D,EAAMo+E,kBAAkBz8G,QAAQ/6B,IAAiB,EACzDy3I,EAAqBr+E,EAAMo+E,kBAAkBp7G,QAAQk7G,GAAaA,IAAat3I,IAEhFy3I,IAAuBrrH,EAAAA,GAAAA,IAAUtwB,EAAQi0B,EAAO,EAAGsnH,EAAah7I,UAIrEo7I,EAAmBvtD,OAAOpuF,EAAQi0B,EAAO,EAAG/vB,GAC5ColI,GAAUp7H,IAAO,IACZA,EACHu7H,aAAczpI,EACd27I,yBACC,GACF,CAACr+E,EAAMo+E,iBAAkBH,EAAah7I,SAEnC8pI,GAAgBpmI,EAAAA,EAAAA,KAAY,KAChCqlI,GAAUp7H,IACJ6C,EACFqqI,EAAkB,CAChBrqI,SACA8mC,UAAW3pC,EAAQytI,qBAGrBR,EAAc,CAAEtjG,UAAW3pC,EAAQytI,qBAG9B,IACFztI,EACHwtI,iBAAkBxtI,EAAQytI,mBAC1BlS,kBAAcpqI,KAEhB,GACD,CAAC0R,EAAQqqI,EAAmBD,IAE/B,OACE36I,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UClJiB,YDmJpBqC,EAAAA,GAAAC,cAAA,MAAItC,UCnJoC,WDmJVyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACrDV,EAAK,2BAER6B,EAAAA,GAAAC,cAAA,OAAKtC,UCtJ2F,WDsJtDsM,MAAQ,WAtH/B,GAsH0CotC,EAAUt3C,YACpEs3C,EAAUj3C,KAAI,CAACq7I,EAAcz0F,KAC5B,MAAMijF,EAAYntE,EAAMmsE,eAAiBjiF,EACnCkjF,EAzHS,IAyHKptE,EAAMo+E,kBAAkBz8G,QAAQg9G,EAAaT,WAAa,GACxEn1H,EA1HS,IA0HFi3C,EAAMq+E,oBAAoB18G,QAAQg9G,EAAaT,WAAa,GACnE31I,EAAWo2I,EAAaH,WAC1B,qBACCG,EAAa/9I,SAAW,uBAAyB,2BAEtD,OACEsC,EAAAA,GAAAC,cAACkqI,GAAAA,EAAS,CACRnpI,IAAKy6I,EAAaT,SAClBt3I,GAAI+3I,EAAaT,SACjBh7H,OAAQi3D,EACRmzD,UAAWP,EACX5/H,MAAQ,QAAOggI,EAAYC,EAAarkH,OACxCwkH,WAAclsI,EAAKkD,MAAQ,OAAS,SAAxB,UACZ8M,YAAastI,EAAa/9I,UAE1BsC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAKy6I,EAAaT,SAClBr9I,WAAWuC,EAAAA,GAAAA,GAAe,oBC3K8E,YD4KxGk7G,QAAM,EACNC,cAAc,OACdl2G,KAAMs2I,EAAa/9I,SAAW,OAAS,cACvC8H,WAAS,EACT68C,eAAgB,CACd,CACEK,QAASA,KACP04F,EAAmBK,EAAaT,SAAS,EAE3C51I,MAAOjH,EAAK,QACZgH,KAAM,SAIVnH,QAASA,KACPq9I,EAAoBI,EAAa,GAGnCz7I,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAAQ,IAAE89I,EAAaT,UACvCh7I,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYQ,EAAKkH,KAEzB,KAIlBrF,EAAAA,GAAAC,cAAA,KAAGtC,UCrM8D,WDqM/ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACzDV,EAAK,+BAGV6B,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ2K,QAAQ6rI,GAChBh2I,QAAS02I,EACTn2I,MAAOjH,EAAK08I,GAAoBn9I,SAAW,gCAAkC,+BAC7Eua,KAAM9Z,EAAK08I,GAAoBn9I,SAAW,+BAAiC,8BAC3E6nC,aAAcpnC,EAAK08I,GAAoBn9I,SACnC,+BACA,8BACJ8nC,eAAgBg2G,EAChB/1G,sBAAuBo1G,GAAoBn9I,WAE5C,I,gBE3LP,MAAMg+I,GAAoB,sBAEpBC,IAA+B9sH,EAAAA,GAAAA,KAAUuvC,GAAOA,KAAM,KAAK,GA4FjE,IAAe5gE,EAAAA,EAAAA,KA1FqBo+I,EAClCC,kBACAC,SACAjlH,YACAklH,sBACAC,kBACA9qI,eAEA,MAAM,cAAE+qI,EAAa,gBAAEC,IAAoBnsI,EAAAA,EAAAA,OACpCirI,EAAUmB,IAAejsI,EAAAA,EAAAA,IAAS2rI,GAAmB,IAEtD19I,GAAOD,EAAAA,EAAAA,KACPk+I,EAAaN,EAAS,SAAW,WACjC/qI,EAAiB5S,EAAT29I,EAAc,oBAA4B,YAElDO,GAA8B7jH,EAAAA,EAAAA,GAAsBujH,GACpDO,EAA+BT,IAAoBb,EACpDe,GAAuBM,OAA+Bx9I,EACrD09I,EAAavB,GAAYa,IAAoBb,GAAYgB,IAAoBhB,GAE5EwB,EAAiBC,IAAiB79I,EAAAA,EAAAA,KAAQ,IAC1Co8I,EAASj7I,OAIVi7I,EAASj7I,OAAS28I,GAAAA,GACb,MAAC79I,EAAWV,EAAM,GAAEi+I,kBAEzBpB,EAASj7I,OAAS48I,GAAAA,GACb,MAAC99I,EAAWV,EAAM,GAAEi+I,iBAExBQ,GAAAA,GAAeC,KAAK7B,QAIYn8I,IAAjCy9I,GAA8CC,EACzC,GAIF,CACLD,EAA+Bn+I,EAAM,GAAEi+I,aAAuBrrI,QAASlS,GACtC,IAAjCy9I,EAAyCn+I,EAAM,GAAEi+I,eAAqBv9I,GAV/D,MAACA,EAAWV,EAAM,GAAEi+I,aAVpB,IAsBR,CAACpB,EAAUsB,EAA8BC,EAAYp+I,EAAMi+I,EAAYrrI,KAE1EtS,EAAAA,EAAAA,KAAU,KACR09I,EAAYN,GAAmB,GAAG,GACjC,CAACC,EAAQD,IAEZ,MAAMiB,GAAuBr5I,EAAAA,EAAAA,KAAamN,IACxC,MAAMF,EAAQE,EAAEC,OAAOH,MAAMq5D,OAE7B,GAAI+xE,IAAWprI,EAAM+oF,MAAMiiD,IAKzB,YAJKhrI,EAAM3Q,SACTo8I,EAAY,IACZjrI,IAAW,MAIf,MAAM6rI,EAAcrsI,EAAMynD,QAAQujF,GAAmB,IAErDS,EAAYY,IAEoB,KAAhBA,IAA4BC,EAAAA,GAAAA,IAAgBD,GAAa,MAGzE7rI,IAAW6rI,GAEXpB,IAA6B,KACvBoB,IAAgBlB,IACJC,EAASI,EAAkBD,GACnC,CAAEjB,SAAU+B,GACpB,IACA,GACD,CAACjB,EAAQI,EAAiBD,EAAeJ,EAAiB3qI,IAE7D,OACElR,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRV,MAAQ,GAAEorI,EAASzyE,EAAAA,IAAkB,KAAK2xE,IAC1C9pI,SAAU4rI,EACV/rI,MAAOwrI,EAAap+I,EAAK,YAAc4S,EACvCm/C,MAAOusF,EACPQ,QAAST,EACThM,SAAU35G,EACVgU,2BAAyB,GACzB,I,gBChEN,MAAMszB,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAO,GAE7C8+E,GAA2B,iCAoPjC,IAAe1/I,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,cAAEqkB,GAAkBrkB,GACpB,SACJ6E,EAAQ,oBAAEglI,EAAmB,gBAAEC,EAAiB9rF,MAAOitF,IACrD7qI,EAAAA,EAAAA,KAAeJ,GAAQkrI,aAAe,CAAC,EACrCrqF,EAAcx8B,GAAgB2b,EAAAA,EAAAA,KAAWhgC,EAAQqkB,QAAiB13B,EAElEw+I,GAAeja,EAAAA,GAAAA,GAAmBlxH,EAAQ,eAEhD,IAAK6gD,EACH,MAAO,CACLh8C,WACAilI,kBACAD,sBACAoB,oBACAE,gBAIJ,MACEtjF,UAAWujF,EACXrjF,SAAUsjF,EAAe,UACzBlmG,GACE0b,EACEyqF,EAAsBjnH,GAAgB8b,EAAAA,EAAAA,KAAmBngC,EAAQqkB,QAAiB13B,EAGxF,MAAO,CACL4+I,mBAHwBC,EAAAA,EAAAA,IAAkB3qF,GAI1CuqF,mBACAC,kBACAI,WAAYH,GAAqBI,IACjC7mI,WACAglI,sBACAC,kBACAmB,oBACAE,eACAhmG,YACD,GAvCeplC,EAlPmC4rI,EACrDngJ,WACA+/I,oBACAH,mBACAC,kBACAI,aACA5mI,WACAilI,kBACAmB,oBACApB,sBACAsB,eACAhmG,YACAkoB,cAEA,MAAM,gBACJu+E,EAAe,cACfC,IACEhuI,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,KAEP8/I,GAAwBp/I,EAAAA,EAAAA,KAAQ,IAAMy4C,GAAW32C,MAAK,EAAG46I,gBAAiBA,KAAa,CAACjkG,IACxFwkG,EAAkBmC,GAAuBhD,UAAY,IACpDiD,EAAmBC,IAAwBhuI,EAAAA,EAAAA,KAAS,IACpDiuI,EAAwBC,IAA6BluI,EAAAA,EAAAA,KAAS,IAC9DggD,EAAOmuF,IAAYnuI,EAAAA,EAAAA,OAEnB7J,EAAOi4I,IAAYpuI,EAAAA,EAAAA,OACnB6pD,EAAWC,IAAgB9pD,EAAAA,EAAAA,IAASotI,GAAoB,KACxDrjF,EAAUC,IAAehqD,EAAAA,EAAAA,IAASqtI,GAAmB,KACrDK,EAAKW,IAAUruI,EAAAA,EAAAA,IAASytI,GAAc,KACtCa,EAAkBC,IAAuBvuI,EAAAA,EAAAA,IAAyB2rI,GAEnE6C,GAAuBnyI,EAAAA,EAAAA,GAASkxI,GAAmB,EAAOjxI,EAAAA,GAAeC,SAEzEoqB,EAAY9f,IAAa4nI,EAAAA,GAAoBC,WAC7CC,GAAuC,IAArBL,EAElBnC,GAA8B7jH,EAAAA,EAAAA,GAAsBujH,GACpDO,EAA+BP,GAAuBM,EACtDyC,EAA8BznG,GAAaA,EAAUt3C,OAAS,EAE9Dg/I,GAAoBngJ,EAAAA,EAAAA,KAAQ,KAC5BigJ,IAIG7vI,QAAQ3I,IAAU83I,GAA2BF,IAAsD,IAAjC3B,IACxE,CAACuC,EAAiBx4I,EAAO83I,EAAwBF,EAAmB3B,KAEvE/uH,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,KAKV9gE,EAAAA,EAAAA,KAAU,KACR0/D,IAAa,KACX2/E,GAAiB,GACjB,GACD,CAACA,KAEJr/I,EAAAA,EAAAA,KAAU,KACR6/I,OAASz/I,EAAU,GAClB,CAAC6/I,KAEJjgJ,EAAAA,EAAAA,KAAU,KACRu7D,EAAasjF,GAAoB,IACjCpjF,EAAYqjF,GAAmB,IAC/BgB,EAAOZ,GAAc,GAAG,GACvB,CAACL,EAAkBC,EAAiBI,KAEvCl/I,EAAAA,EAAAA,KAAU,KACRggJ,EAAoB5C,GAAmB,GAAG,GACzC,CAACA,KAEJp9I,EAAAA,EAAAA,KAAU,KACJsY,IAAa4nI,EAAAA,GAAoBK,WACnCZ,GAA0B,GAC1BF,GAAqB,GACrBG,OAASx/I,GACX,GACC,CAACkY,IAEJ,MAAMkoI,GAAoBx7I,EAAAA,EAAAA,KAAay7I,IACrCZ,EAASY,EAAS,GACjB,IAEGxkF,GAAwBj3D,EAAAA,EAAAA,KAAamN,IACzCopD,EAAappD,EAAEC,OAAOH,OACtB0tI,GAA0B,EAAK,GAC9B,IAEGvjF,GAAuBp3D,EAAAA,EAAAA,KAAamN,IACxCspD,EAAYtpD,EAAEC,OAAOH,OACrB0tI,GAA0B,EAAK,GAC9B,IAEGe,GAAkB17I,EAAAA,EAAAA,KAAamN,IACnC2tI,EAAO3tI,EAAEC,OAAOH,OAChB0tI,GAA0B,EAAK,GAC9B,IAEGtB,IAAuBr5I,EAAAA,EAAAA,KAAaiN,IACxC+tI,EAAoB/tI,GACpBwtI,EAAqBrC,IAAoBnrI,EAAM,GAC9C,CAACmrI,IAEEuD,IAAoB37I,EAAAA,EAAAA,KAAY,KACpC,MAAM47I,EAAmBtlF,EAAUgQ,OAC7Bu1E,EAAkBrlF,EAAS8P,OAC3Bw1E,EAAa3B,EAAI7zE,OAElBy0E,IAEAa,EAAiBt/I,OAKtBg+I,EAAc,CACZ13I,WACI83I,GAA0B,CAC5BpkF,UAAWslF,EACXplF,SAAUqlF,EACV1B,IAAK2B,MAEHtB,GAAqB,CACvBjD,SAAUwD,KAZZH,EAASnB,IAcT,GACD,CACD72I,EACA0zD,EAAWE,EAAU2jF,EAAKO,EAC1BK,EAAkBP,EAClBF,IAkBF,OACE/9I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,wBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,4CACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACu/I,GAAAA,EAAc,CACbd,qBAAsBA,EACtBxtI,SAAU+tI,EACV75I,MAAM,0BACNyd,SAAUgU,IAEZ72B,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRV,MAAOqpD,EACP7oD,SAAUwpD,EACV3pD,MAAO5S,EAAK,aACZ0kB,SAAUgU,EACVq5B,MAAOA,IAAUgtF,GAA2BhtF,OAAQrxD,IAEtDmB,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRV,MAAOupD,EACP/oD,SAAU2pD,EACV9pD,MAAO5S,EAAK,YACZ0kB,SAAUgU,IAEZ72B,EAAAA,GAAAC,cAAC+7G,GAAAA,EAAQ,CACPtrG,MAAOktI,EACP1sI,SAAUiuI,EACVpuI,MAAO5S,EAAK,WACZ0kB,SAAUgU,EACV+nD,UAAWy+D,EACXnhC,mBAAoBmhC,GAAgBA,EAAeO,EAAI79I,QAAQwmF,gBAAa1nF,KAIhFmB,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,4BAA4ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,IAChEmD,EAAAA,GAAAA,GAAW7D,EAAK,0BAA2B,CAAC,KAAM,sBAIvD6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYV,EAAK,aAEhF6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAC27I,GAAa,CACZC,gBAAiBA,EACjBhlH,UAAWA,EACXklH,oBAAqBA,EACrBC,gBAAiBA,EACjB9qI,SAAU4rI,MAIbK,IAAsBsC,EAAAA,KAnE/B,WACE,MAAMC,EAAoB,GAAEr2E,EAAAA,MAAkBs2E,EAAAA,MAE9C,OACE3/I,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,4BAA4ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC/DV,EAAK,mCACJg6D,QAAQ,SAAU,mBAClBmjB,MAAM,KACNl7E,KAAKqnD,GACU,kBAANA,EAAwBznD,EAAAA,GAAAC,cAACs3G,GAAAA,EAAQ,CAACn9F,IAAKslI,EAAkBznI,KAAO,IAAG0nI,EAAAA,QAA0Bl4F,IAI/G,CAsD0Dm4F,GAClD5/I,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,4BAA4ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,IAChEmD,EAAAA,GAAAA,GAAW7D,EAAK,gBAAiB,CAAC,KAAM,qBAE1CqgJ,GACCx+I,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,4BAA4ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAChEV,EAAK,qBAAqB6B,EAAAA,GAAAC,cAAA,WAC3BD,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,iBAAiB0rE,EAAAA,IAAiBm1E,KAKvDM,GACC9+I,EAAAA,GAAAC,cAACs6I,GAAe,CACdljG,UAAWA,EACXmjG,eAAgBiE,KAKtBz+I,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAAS22G,EACT/gJ,QAASohJ,GACTv8H,SAAUgU,EACV/gB,UAAW3X,EAAK,SAEf04B,EACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGX,K,4BChQV,MA6IA,IAAe/E,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,yBACJ2tI,EAAwB,yBACxBC,EAAwB,uBACxBC,EAAsB,2BACtBC,IACEjvE,EAAAA,GAAAA,GAAqB7+D,GAEzB,MAAO,CACL2tI,2BACAC,2BACAC,yBACAC,6BACD,GAde/tI,EA7IoCguI,EACtDviJ,WACA6hE,UACAsgF,2BACAC,2BACAC,yBACAC,iCAEA,MAAM,gBAAE71D,EAAe,uBAAE8/B,EAAsB,YAAEi2B,IAAgBnwI,EAAAA,EAAAA,MAG3DowI,GAAgB5yI,EAAAA,EAAAA,IAAuB,OACtC6yI,EAAuBC,IAA4BnwI,EAAAA,EAAAA,KAAS,GAE7D/R,GAAOD,EAAAA,EAAAA,MAENoiJ,EAAqBC,IAA0BrwI,EAAAA,EAAAA,KAAS,IAC/DzR,EAAAA,EAAAA,KAAU,KACRoQ,OAAO2xI,UAAUC,yBAAyB36D,KAAKy6D,EAAuB,GACrE,KAEHhzH,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAMmhF,GAAoBpwI,EAAAA,EAAAA,IAAgB,KACxC,MAAMqwI,EAAO,IAAIC,KAAK,EAACC,EAAAA,GAAAA,OAAiBC,EAAAA,IAAoB,CAAEp/I,KAAM,eAC9D0Y,EAAM2mI,IAAIC,gBAAgBL,IAChCnqI,EAAAA,GAAAA,GAAS4D,EAAK0mI,EAAAA,IAAmB,IAG7BG,GAAkCx9I,EAAAA,EAAAA,KAAa+qF,IACnD3/E,OAAO2xI,UAAUD,uBAAuB/xD,EAAU,GACjD,IAEG0yD,GAAoB5wI,EAAAA,EAAAA,IAAiBM,IACzCsvI,EAAY,CAAEiB,OAAQvwI,EAAE8U,QAAS07H,OAAQxwI,EAAEgV,SAAU,IAGjDy7H,GAAwB/wI,EAAAA,EAAAA,IAAgB,KAC5C65E,EAAgB,CAAEc,WAAW,GAAO,IAGhCq2D,GAAahxI,EAAAA,EAAAA,IAAgB,KACjC,MAAMq+B,EAASwxG,EAAczyI,QACxBihC,IAED4yG,EAAAA,GAAAA,GAAY5yG,KACd0xG,GAAyB,GAEzBvxI,YAAW,KACTuxI,GAAyB,EAAM,GAC9B,MACL,IAGF,OACErgJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQC,GAAAA,EAAe09I,aACvB7/I,KAAM,IACNhE,UAAU,oBACVyzC,gBAAc,EACdntC,QAAQ,IAEVjE,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAAQjD,EAAK,qCAEjE6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtH,QAASqjJ,EACTl8I,KAAK,cAELnF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,SAAQ,0BAEzBqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtH,QAASkjJ,EACT/7I,KAAK,gBACL0d,UAAW4+H,EAAAA,IAEXzhJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,SAAQ,eAEzBqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP8R,IAAK+oI,EACLniJ,QAASsjJ,EACTn8I,KAAK,UACL0d,UAAW6+H,EAAAA,GACXz3I,MAAOm2I,EAAwB,qBAAuB,IAEtDpgJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,SAAQ,yBAGzBqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAM,uBACN05B,QAASz7B,QAAQ8wI,GAEjB/rF,QAASA,IAAMk2D,EAAuB,CAAE61B,0BAA2BA,MAGrE9/I,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAM,uBACN8R,UAAWi9H,EACXr1G,QAASz7B,QAAQ6wI,GAEjB9rF,QAASA,IAAMk2D,EAAuB,CAAE41B,0BAA2BA,MAGrE7/I,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,uBACZssC,QAASz7B,QAAQ+wI,GAEjBhsF,QAASA,IAAMk2D,EAAuB,CAAE81B,wBAAyBA,MAGnE//I,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAM,gCACN05B,QAASz7B,QAAQgxI,GAEjBjsF,QAASA,IAAMk2D,EAAuB,CAAE+1B,4BAA6BA,MAGtE2B,EAAAA,IACC3hJ,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAM,qBACN05B,QAASz7B,QAAQsxI,GACjBvsF,QAASktF,IAIbjhJ,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtH,QAAS0iJ,EACTv7I,KAAK,OAELnF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,SAAQ,kBAGvB,K,0BCtIV,MAiKA,IAAeH,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,MACJmrD,EAAK,qBACLukF,EAAoB,oBACpBC,EAAmB,gBACnBC,EAAe,WACfC,IACEhxE,EAAAA,GAAAA,GAAqB7+D,GAEzB,MAAO,CACL2vI,sBACAC,kBACAC,aACA1kF,QACAukF,uBACD,GAhBe3vI,EAjK+B+vI,EACjDtkJ,WACAokJ,kBACAD,sBACAE,aACA1kF,QACAukF,uBACA/V,iBACAtsE,cAEA,MAAM,uBACJ0qD,IACEl6G,EAAAA,EAAAA,MAEE5R,GAAOC,EAAAA,GAAAA,MAEP,SAAE8E,IAAaC,EAAAA,EAAAA,MACf8+I,EAAiB/+I,IAAayW,EAAAA,IAAUD,EAAAA,IAExCwoI,EAAoC,CAAC,CACzCnxI,MAAO5S,EAAK,wBACZuS,MAAO,OACN,CACDK,MAAO5S,EAAK,wBACZuS,MAAO,QAGHyxI,EAAyC,CAAC,CAC9CpxI,MAAO5S,EAAK,4BACZuS,MAAO,SACN,CACDK,MAAO5S,EAAK,2BACZuS,MAAO,QACN,CACDK,MAAO5S,EAAK,6BACZuS,MAAO,SAGH0xI,EAAuBH,OAOzBpjJ,EAP0C,CAC5C,CAAE6R,MAAO,QAASK,MAAO5S,EAAK,qBAAsBgwF,SAAUhwF,EAAK,iCACnE,CACEuS,MAAO,aACPK,MAAO5S,EAAK20D,EAAAA,IAAan5C,EAAAA,GAAS,uBAAyB,yBAC3Dw0E,SAAUhwF,EAAK,sCAIbkkJ,GAA8B5+I,EAAAA,EAAAA,KAAamzE,IAC/CxwE,SAAS2hD,gBAAgB99C,MAAM4kC,YAC7B,uBAAyB,GAAEjvC,KAAKZ,IAAI43E,EAASj9D,EAAAA,GAAS,GAAK,SAE7DvT,SAAS2hD,gBAAgB99C,MAAM4kC,YAAY,wBAA0B,GAAEjvC,KAAKse,MAAgB,OAAV04D,QAClFxwE,SAAS2hD,gBAAgB99C,MAAM4kC,YAAY,sBAAwB,GAAE+nC,OACrExwE,SAAS2hD,gBAAgBu6F,aAAa,yBAA0B1rE,EAAQ2P,YAExE0jC,EAAuB,CAAE63B,gBAAiBlrE,GAAU,GACnD,IAEG2rE,GAA8B9+I,EAAAA,EAAAA,KAAaiN,IAC/C,MAAM8xI,EAAqB,SAAV9xI,GAAmB+xI,EAAAA,GAAAA,KAAmB/xI,EAEvDu5G,EAAuB,CAAE5sD,MAAOmlF,IAChCv4B,EAAuB,CAAE23B,qBAAgC,SAAVlxI,GAAmB,GACjE,IAEGgyI,GAAyBj/I,EAAAA,EAAAA,KAAak/I,IAC1C14B,EAAuB,CAAE83B,WAAYY,IACrC14B,EAAuB,CAAE24B,0BAA0B,KAEnDC,EAAAA,GAAAA,IAAcF,EAA4B,GACzC,IAEGG,GAA+Br/I,EAAAA,EAAAA,KAAas/I,IAChD94B,EAAuB,CAAE43B,oBAAqBkB,GAAoD,GACjG,KAEIC,EAAmBC,IAAwB/yI,EAAAA,EAAAA,KAAS,IAC3DzR,EAAAA,EAAAA,KAAU,KACRoQ,OAAO2xI,UAAU0C,uBAAuBp9D,KAAKm9D,EAAqB,GACjE,IAEH,MAAME,GAAgC1/I,EAAAA,EAAAA,KAAa+qF,IACjD3/E,OAAO2xI,UAAUyC,qBAAqBz0D,EAAU,GAC/C,IAOH,OALAjhE,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYV,EAAK,aAEhF6B,EAAAA,GAAAC,cAACoiB,GAAAA,EAAW,CACVtR,MAAO5S,EAAK,YACZ0B,IAAK,GACLb,IAAK,GACL0R,MAAOoxI,EACP5wI,SAAUmxI,IAGZriJ,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,QACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBmX,wBAE7CjlJ,EAAK,mBAGPwjJ,EAAAA,IAAe0B,EAAAA,IACdrjJ,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,gBACZssC,QAASz7B,QAAQg0I,GACjBjvF,QAASovF,KAKfnjJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,UAER6B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,QACL3E,QAASukJ,EACThxI,SAAUywI,EAAuB,OAASvkF,EAC1CnsD,SAAUqxI,KAIdviJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,uBAER6B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,aACL3E,QAASskJ,EACT/wI,SAAU4wI,EACV7wI,SAAUwxI,KAIbN,GACCpiJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYV,EAAK,qBAEhF6B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,yBACL3E,QAASwkJ,EACTlxI,SAAU4xI,EACV3xI,SAAU0wI,KAIZ,K,4BCtKV,MAsFA,IAAerkJ,EAAAA,EAAAA,KAtFqB8lJ,EAClCC,YACAlmF,QACA0iC,aACA/hG,cAEA,MAAM,KAAE4qE,EAAI,SAAExiE,GAAam9I,EACrBC,EAAkB,YAAWp9I,EAAS1C,KACtCuJ,EAAe7G,EAASuG,eACxBA,GAAiBJ,EAAAA,EAAAA,GAAU,GAAEi3I,YAC7B3rG,GAAWC,EAAAA,GAAAA,GAAc1xC,EAASq8B,WAAWp1B,QAAS2B,QAAQrC,IAAiB,IAC/E,qBAAE0Z,IAAyBE,EAAAA,GAAAA,GAC/BvX,QAAQrC,GAAkBM,QAC1BpO,OACAA,EACA,QAEI4kJ,GAAel2I,EAAAA,EAAAA,KAAO,IACrBm2I,EAAeC,IAAoBzzI,EAAAA,EAAAA,KAAS,IAEjDtD,UAAWg3I,EAAS,aAAE92I,IACpBC,EAAAA,EAAAA,GAAyBy2I,GAAiBE,GACxCG,GAA2D,KAAzCrrH,EAAAA,EAAAA,GAAsBkrH,IACtCv9H,aAAcC,EAAqBC,qBAAsBC,IAAsBC,EAAAA,GAAAA,GACpFm9H,IAAkBE,GAAch7E,IAASk7E,EAAAA,QAC1CjlJ,EACAglJ,EACA,QAGIE,GAAcx2I,EAAAA,EAAAA,MACpBw2I,EAAYr2I,QAAU2vD,EAEtB,MAAMqyD,GAAejsH,EAAAA,EAAAA,KAAY,KAC/B,WACE,MAAMugJ,QAAaC,EAAAA,EAAAA,IAAUL,SACvBM,GAASC,KAAKC,EAAAA,IAAsBL,EAAYr2I,QAAUs2I,GAChEhmJ,EAAQ4qE,EACT,EAJD,EAII,GACH,CAACg7E,EAAW5lJ,EAAS4qE,KAExBnqE,EAAAA,EAAAA,KAAU,KAEJmlJ,GAAaH,EAAa/1I,UAC5BgiH,IACA+zB,EAAa/1I,SAAU,EACzB,GACC,CAACk2I,EAAWl0B,IAEf,MAAM9oG,GAAcnjB,EAAAA,EAAAA,KAAY,KAC1BmgJ,EACFl0B,KAEA+zB,EAAa/1I,SAAU,EACvBi2I,GAAkBU,IAAeA,IACnC,GACC,CAACT,EAAWl0B,IAET/xH,GAAYuC,EAAAA,GAAAA,GAChB,gBACA6/F,GAAc,YAGhB,OACE//F,EAAAA,GAAAC,cAAA,OAAKtC,UAAWA,EAAWK,QAAS4oB,GAClC5mB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACbqC,EAAAA,GAAAC,cAAA,UACEmX,IAAKygC,EACLl6C,UAAU,cAEZqC,EAAAA,GAAAC,cAAA,OACE+H,IAAK2E,GAAkBM,EACvBtP,WAAWuC,EAAAA,GAAAA,GAAe,aAAcmmB,GACxCyE,IAAI,GACJjjB,WAAW,IAEZue,GACCpmB,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,oBAAqBomB,IAClDtmB,EAAAA,GAAAC,cAAC6W,GAAAA,EAAe,CAACC,SAAUjK,EAAc9O,QAAS4oB,MAIpD,ICxEJu3C,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAO,GAkInD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAMmrD,GAAQuD,EAAAA,EAAAA,KAAY1uD,IACpB,WAAEqqG,EAAU,UAAEH,IAAcK,EAAAA,EAAAA,KAAkBvqG,EAAQmrD,IAAU,CAAC,GACjE,iBAAEinF,GAAqBpyI,EAAOsiC,SAEpC,MAAO,CACL+nE,aACAH,YACAkoC,mBACAjnF,QACD,GAXeprD,EAhIyCsyI,EAC3D7mJ,WACAmuI,iBACAtsE,UACAg9C,aACAH,YACAkoC,mBACAjnF,YAEA,MAAM,eACJmnF,EAAc,gBACdC,EAAe,iBACfC,IACE30I,EAAAA,EAAAA,MAEE40I,GAAWp3I,EAAAA,EAAAA,MACjBo3I,EAASj3I,QAAU2vD,GAGnB5+D,EAAAA,EAAAA,KAAU,KACR0/D,IAAa,KACXqmF,GAAgB,GAChB,GACD,CAACA,IAEJ,MAAMI,GAAmBnhJ,EAAAA,EAAAA,KAAamN,IACpC,MAAM,MAAE6+C,GAAU7+C,EAAEC,OAEdg0I,GAAiBC,EAAAA,EAAAA,IAAcr1F,GACjCo1F,GAAgB9kJ,QAClB0kJ,EAAgBI,EAAe,GACjC,GACC,CAACJ,IAEEM,GAAwBthJ,EAAAA,EAAAA,KAAY,MACxCuhJ,EAAAA,GAAAA,GAvCoB,aAuCmBJ,GAAkB,EAAK,GAC7D,CAACA,IAEEK,GAAiBxhJ,EAAAA,EAAAA,KAAY,KACjCooI,EAAeI,EAAAA,GAAgBiZ,2BAA2B,GACzD,CAACrZ,IAEEsZ,GAAuB1hJ,EAAAA,EAAAA,KAAY,KACvCihJ,EAAiB,CACfrnF,QACAk/C,gBAAY19G,EACZinE,qBAAiBjnE,EACjBu9G,WAAW,EACXE,aAAwB,SAAVj/C,EAAmB+nF,EAAAA,IAA2BC,EAAAA,KAC5D,GACD,CAACX,EAAkBrnF,IAEhBioF,GAAwB7hJ,EAAAA,EAAAA,KAAamlE,IACzC87E,EAAiB,CAAErnF,MAAOsnF,EAASj3I,QAAU6uG,WAAY3zC,IACzD,MAAM28E,EAAmBjB,GAAoBA,EAAiB5jJ,MAAM6iJ,GAAcA,EAAU36E,OAASA,IACjG28E,GAAkBn/I,SAASq8B,YAC7B+iH,EAAAA,GAAAA,IAAgBD,EAAiBn/I,SAASq8B,UAAUp1B,SACjDy4E,MAAMz0E,IACL,MAAMirG,GAAempC,EAAAA,GAAAA,IAAgBp0I,GAC/Bq0I,EAAY,KAAGC,EAAAA,GAAAA,IAAQt0I,KAC7BqzI,EAAiB,CAAErnF,MAAOsnF,EAASj3I,QAAUo4D,gBAAiB4/E,EAAUppC,gBAAe,GAE7F,GACC,CAACgoC,EAAkBI,IAEhBkB,GAA4BniJ,EAAAA,EAAAA,KAAamN,IAC7C8zI,EAAiB,CAAErnF,MAAOsnF,EAASj3I,QAAU0uG,UAAWxrG,EAAEC,OAAO45B,SAAU,GAC1E,CAACi6G,IAEEvmJ,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAMsmF,EAAcvB,IAAmB,IAAMA,EAAiB,GAAG17E,OAASk7E,EAAAA,GAE1E,OACE9jJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,4DACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,aACLxH,UAAU,OACVklB,SAAUgjI,EACV7nJ,QAAS+mJ,GAER5mJ,EAAK,gBAGR6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,WACLxH,UAAU,OACVK,QAASinJ,GAER9mJ,EAAK,aAGR6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,WAAWnH,QAASmnJ,GAChChnJ,EAAK,yBAGR6B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,qBACZssC,QAASz7B,QAAQotG,GACjBlrG,SAAU00I,KAIbtB,EACCtkJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACZ2mJ,EAAiBlkJ,KAAKmjJ,GACrBvjJ,EAAAA,GAAAC,cAACqjJ,GAAa,CACZtiJ,IAAKuiJ,EAAU36E,KACf26E,UAAWA,EACXlmF,MAAOA,EACP0iC,WAAYwc,IAAegnC,EAAU36E,KACrC5qE,QAASsnJ,OAKftlJ,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAEN,KCxHJi5F,IAAcC,EAAAA,GAAAA,KAAQC,EAAAA,GAAAA,IAAQ,WAC9BC,GAAoB,CACxB,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WA4MzD,SAASC,GAAcC,EAA+BC,GACpD,MAAO,CACLC,cAAe,CACbzmJ,KAAKiW,MAAOswI,EAAI,IAAOC,EAAME,UAAU34I,MAAQ,IAC/C/N,KAAKiW,OAAO,EAAIswI,EAAI,KAAOC,EAAME,UAAUt4I,OAAS,KAEtDu4I,YAAa3mJ,KAAKiW,MAAMswI,EAAI,IAAMC,EAAMI,QAAQ74I,MAAQ,IAE5D,CAEA,SAAS84I,IACP,cAAEJ,EAAa,YAAEE,GACjBH,GAEA,MAAO,CACLG,GAAeH,EAAMI,QAAQ74I,MAAQ,GACrC04I,EAAc,IAAMD,EAAME,UAAU34I,MAAQ,GAC5C,EAAI04I,EAAc,IAAMD,EAAME,UAAUt4I,OAAS,GAErD,CA4EA,UAAexQ,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAMmrD,GAAQuD,EAAAA,EAAAA,KAAY1uD,IACpB,gBAAE4zD,IAAoB22C,EAAAA,EAAAA,KAAkBvqG,EAAQmrD,IAAU,CAAC,EACjE,MAAO,CACLyI,kBACAzI,QACD,GAPeprD,EAxSyCsyI,EAC3D7mJ,WACA6hE,UACAlC,QACAyI,sBAEA,MAAM,iBAAE4+E,IAAqB30I,EAAAA,EAAAA,MAEvB40I,GAAWp3I,EAAAA,EAAAA,MACjBo3I,EAASj3I,QAAU2vD,EAEnB,MAAMzxC,GAAere,EAAAA,EAAAA,IAAuB,MAEtCm5I,GAAiBn5I,EAAAA,EAAAA,IAAuB,MAExCo5I,GAAep5I,EAAAA,EAAAA,IAAuB,MACtCq5I,GAAgBr5I,EAAAA,EAAAA,KAAO,IAEtB44I,EAAKU,IAAU32I,EAAAA,EAAAA,IAiLxB,SAAuB41D,GACrB,OAAOA,GAAmBA,EAAgBw5D,WAAW,MACjDymB,EAAAA,GAAAA,KAAQC,EAAAA,GAAAA,IAAQlgF,EAAgB3N,QAAQ,IAAK,MAC7C2tF,EACN,CArLiCgB,CAAchhF,IAEvCihF,GAASx5I,EAAAA,EAAAA,IAAO44I,IACtB1nJ,EAAAA,EAAAA,KAAU,KACRsoJ,EAAOr5I,QAAUy4I,CAAG,GACnB,CAACA,IAEJ,MAAOlzE,EAAY+zE,EAAgBC,IAAoBzoJ,EAAAA,EAAAA,MAChD0oJ,EAAUC,IAAej3I,EAAAA,EAAAA,IAAS,KAClCk3I,EAAUC,IAAen3I,EAAAA,EAAAA,IAAS,IAEnCo3I,GAAW/5I,EAAAA,EAAAA,MACXg6I,GAAch6I,EAAAA,EAAAA,OAGpB9O,EAAAA,EAAAA,KAAU,KAER,MAAM6nJ,EAAY,CAChBkB,WAAYd,EAAeh5I,QAAS85I,eACjCx2F,EAAAA,GAAAA,IAAK01F,EAAeh5I,QAASqR,wBAAyB,CAAC,MAAO,QAAS,YAEtEynI,EAAU,CACdgB,WAAYb,EAAaj5I,QAAS85I,eAC/Bx2F,EAAAA,GAAAA,IAAK21F,EAAaj5I,QAASqR,wBAAyB,CAAC,WAK1D,SAAS0oI,EAAgB72I,GACvB,MAAMy1I,EAAgB,CACpBzmJ,KAAKC,IAAID,KAAKZ,IAAI,EAAG4R,EAAEsO,MAASonI,EAAUkB,YAAalB,EAAU34I,MAAQ,GACzE/N,KAAKC,IAAID,KAAKZ,IAAI,EAAG4R,EAAEsd,MAASo4H,EAAUzgI,IAAM+F,EAAale,QAASkvB,WAAY0pH,EAAUt4I,OAAS,KAGjG,YAAEu4I,GAAgBL,GAAca,EAAOr5I,QAAS45I,EAAS55I,SAK/D,OAHAm5I,EAAOJ,GAAc,CAAEJ,gBAAeE,eAAee,EAAS55I,UAC9Ds5I,KAEO,CACT,CAWA,SAASU,EAAc92I,GACrB,MAAM,cAAEy1I,GAAkBH,GAAca,EAAOr5I,QAAS45I,EAAS55I,SAC3D64I,EAAc3mJ,KAAKC,IAAID,KAAKZ,IAAI,EAAG4R,EAAEsO,MAASsnI,EAAQgB,YAAahB,EAAQ74I,MAAQ,GAKzF,OAHAk5I,EAAOJ,GAAc,CAAEJ,gBAAeE,eAAee,EAAS55I,UAC9Ds5I,KAEO,CACT,CAjCAM,EAAS55I,QAAU,CAAE44I,YAAWE,YAgBhC5mI,EAAAA,GAAAA,IAAc8mI,EAAeh5I,QAAU,CACrCmS,UAAW4nI,EACXznI,OAAQynI,EACR1nI,UAAWknI,EACXjpJ,QAASipJ,EACTU,wBAAyB,kCACzBC,YAAY,KAadhoI,EAAAA,GAAAA,IAAc+mI,EAAaj5I,QAAU,CACnCmS,UAAW6nI,EACX1nI,OAAQ0nI,EACR3nI,UAAWknI,EACXjpJ,QAASipJ,EACTU,wBAAyB,kCACzBC,YAAY,GACZ,GACD,CAACZ,EAAgBC,IAEpB,MAAM,cAAEZ,EAAgB,CAAC,EAAG,GAAE,YAAEE,EAAc,GAAMe,EAAS55I,QAAUw4I,GAAcC,EAAKmB,EAAS55I,SAAW,CAAC,EACzGm6I,GAAMlC,EAAAA,GAAAA,KAAQmC,EAAAA,GAAAA,IAAQ3B,IACtB4B,EAAM5B,EAAI,GACV6B,GAASrC,EAAAA,GAAAA,KAAQmC,EAAAA,GAAAA,IAAQ,CAACC,EAAK,EAAG,MAGxCtpJ,EAAAA,EAAAA,KAAU,KACR,MAAMwpJ,GAAMH,EAAAA,GAAAA,IAAQ3B,GACd90I,EAAS,KAAGs0I,EAAAA,GAAAA,IAAQsC,KAK1B,GAHAd,EAAYc,EAAIj/H,KAAK,OACrBq+H,EAAYh2I,IAEPu1I,EAAcl5I,QAAS,CAC1B,MAAM4uG,GAAempC,EAAAA,GAAAA,IAAgBwC,GACrCvD,EAAiB,CACfrnF,MAAOsnF,EAASj3I,QAChB6uG,gBAAY19G,EACZinE,gBAAiBz0D,EACjBirG,gBAEJ,CACAsqC,EAAcl5I,SAAU,CAAK,GAC5B,CAACy4I,EAAKzB,KAGTjmJ,EAAAA,EAAAA,KAAU,MA2GZ,SACEmP,EACAm6I,EACAR,EACAD,GAEA,IAAIY,EACAC,EACAxoH,EAEC4nH,EAAY75I,SAAY45I,EAAS55I,SAWpCw6I,EAAIZ,EAAS55I,QAAQ44I,UAAU34I,MAC/Bw6I,EAAIb,EAAS55I,QAAQ44I,UAAUt4I,OAC/B2xB,EAAM4nH,EAAY75I,UAXlBw6I,EAAIt6I,EAAOghC,YACXu5G,EAAIv6I,EAAOivB,aACX8C,EAAM/xB,EAAOG,WAAW,MAExBH,EAAOD,MAAQu6I,EACft6I,EAAOI,OAASm6I,EAEhBZ,EAAY75I,QAAUiyB,GAOxB,MAAMyoH,EAAUzoH,EAAK0oH,gBAAgBH,EAAGC,GAClCG,EAASF,EAAQ3sI,KACjB8sI,GAAMT,EAAAA,GAAAA,IAAQ,CAACC,EAAK,EAAG,IAE7B,IAAIvoJ,EAAQ,EAEZ,IAAK,IAAI0sB,EAAI,EAAGA,EAAIi8H,EAAGj8H,IAAK,CAC1B,MAAMs8H,EAAO,EAAIt8H,GAAKi8H,EAAI,GACpBM,EAAK,CAAC,IAAMD,EAAM,IAAMA,EAAM,IAAMA,GACpCE,EAAK,CAACH,EAAI,GAAKC,EAAMD,EAAI,GAAKC,EAAMD,EAAI,GAAKC,GACnD,IAAK,IAAIv8H,EAAI,EAAGA,EAAIi8H,EAAGj8H,IAAK,CAC1B,MAAM08H,EAAO18H,GAAKi8H,EAAI,GACtBI,EAAO9oJ,KAAWipJ,EAAG,IAAMC,EAAG,GAAKD,EAAG,IAAME,EAC5CL,EAAO9oJ,KAAWipJ,EAAG,IAAMC,EAAG,GAAKD,EAAG,IAAME,EAC5CL,EAAO9oJ,KAAWipJ,EAAG,IAAMC,EAAG,GAAKD,EAAG,IAAME,EAC5CL,EAAO9oJ,KAAW,GACpB,CACF,CAEAmgC,EAAKipH,aAAaR,EAAS,EAAG,EAChC,CAxJIS,CAAUnC,EAAeh5I,QAAS1D,WAAiC+9I,EAAKR,EAAaD,EAAS,GAC7F,CAACS,KAGJtpJ,EAAAA,EAAAA,KAAU,MAsJZ,SAAiBmP,GACf,MAAMs6I,EAAIt6I,EAAOghC,YAEjBhhC,EAAOD,MAAQu6I,EACft6I,EAAOI,OAFG,EAGV,MAAM2xB,EAAM/xB,EAAOG,WAAW,MAExBq6I,EAAUzoH,EAAI0oH,gBAAgBH,EAL1B,GAMJI,EAASF,EAAQ3sI,KAEvB,IAAIjc,EAAQ,EAEZ,IAAK,IAAIysB,EAAI,EAAGA,EAAIi8H,EAAGj8H,IAAK,CAC1B,MAAM87H,EAAM97H,GAAKi8H,EAAI,GACfD,GAAMH,EAAAA,GAAAA,IAAQ,CAACC,EAAK,EAAG,IAE7BO,EAAO9oJ,KAAWyoJ,EAAI,GACtBK,EAAO9oJ,KAAWyoJ,EAAI,GACtBK,EAAO9oJ,KAAWyoJ,EAAI,GAEtBK,EAAO9oJ,KAAW,GACpB,CAEAmgC,EAAIipH,aAAaR,EAAS,EAAG,EAC/B,CA7KIU,CAAQnC,EAAaj5I,QAAS1D,WAAgC,GAC7D,IAEH,MAAM++I,GAAkBtlJ,EAAAA,EAAAA,KAAamN,IACnC,MAAMo4I,EAAWp4I,EAAEmW,cAAcrW,MAAMynD,QAAQ,WAAY,IAAIrY,MAAM,EAAG,IAExE,GAAIkpG,EAASvvD,MAAM,mCAAoC,CACrD,MAAMwuD,EAAMe,EAAS1tE,MAAM,KAAKl7E,KAAK6oJ,GAAYthI,OAAOshI,EAAQl/E,UAChE88E,GAAOd,EAAAA,GAAAA,IAAQkC,GACjB,CAEAr3I,EAAEmW,cAAcrW,MAAQs4I,CAAQ,GAC/B,IAEGE,GAAkBzlJ,EAAAA,EAAAA,KAAamN,IACnC,MAAMu4I,EAAWv4I,EAAEmW,cAAcrW,MAAMynD,QAAQ,gBAAiB,IAAIrY,MAAM,EAAG,GAEzEqpG,EAAS1vD,MAAM,uBACjBotD,GAAOd,EAAAA,GAAAA,KAAQC,EAAAA,GAAAA,IAAQmD,EAAShxF,QAAQ,IAAK,OAG/CvnD,EAAEmW,cAAcrW,MAAQy4I,CAAQ,GAC/B,IAEGC,GAA6B3lJ,EAAAA,EAAAA,KAAamN,IAC9Ci2I,GAAOd,EAAAA,GAAAA,KAAQC,EAAAA,GAAAA,IAAQp1I,EAAEmW,cAAcsiI,QAAQh4I,MAAO8mD,QAAQ,IAAK,MAAM,GACxE,IAEGx6D,GAAYuC,EAAAA,GAAAA,GAChB,gEACA+yE,GAAc,eAQhB,OALA1lD,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKmX,IAAKwU,EAAcjuB,UAAWA,GACjCqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBACbqC,EAAAA,GAAAC,cAAA,OAAKmX,IAAKsvI,EAAgB/oJ,UAAU,gBAClCqC,EAAAA,GAAAC,cAAA,eACAD,EAAAA,GAAAC,cAAA,OACEtC,UAAU,SACVsM,MAAQ,wBAAuBo8I,EAAc,SAASA,EAAc,6BAA6BwB,QAGrG7nJ,EAAAA,GAAAC,cAAA,OAAKmX,IAAKuvI,EAAchpJ,UAAU,cAChCqC,EAAAA,GAAAC,cAAA,eACAD,EAAAA,GAAAC,cAAA,OACEtC,UAAU,SACVsM,MAAQ,yBAAwBs8I,4BAAsCyB,QAG1EhoJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,SACbqC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CAACV,MAAO02I,EAAUr2I,MAAM,MAAMG,SAAUg4I,IAClDlpJ,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CAACV,MAAOw2I,EAAUn2I,MAAM,MAAMG,SAAU63I,MAGtD/oJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qBACZsoJ,GAAkB7lJ,KAAKiR,GACtBrR,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAe,mBAAoBmR,IAAW,IAAGw2I,IAAQ,cAAWhpJ,GAC/E,aAAYwS,EACZpH,MAAQ,qBAAoBoH,KAC5BrT,QAASorJ,OAIX,KCoEV,IAAe5rJ,EAAAA,EAAAA,KA/RsB8rJ,EACnC3d,gBACA4d,iBACAhqF,UACAssE,qBAEA,MAAM,QACJ2d,EAAO,0BACPztE,IACEhsE,EAAAA,EAAAA,OAEE,SAAE7M,IAAaC,EAAAA,EAAAA,OACdsmJ,EAAqBC,IAA0Bx5I,EAAAA,EAAAA,KAAS,GAEzDy5I,ECpCO,SAAuB7nJ,EAAgBy2E,GACpD,MAAMqxE,GAAmBr8I,EAAAA,EAAAA,IAAO,GAC1Bc,GAAad,EAAAA,EAAAA,MAkBnB,OAjBoB9J,EAAAA,EAAAA,KAAY,KAE9B,GADAmmJ,EAAiBl8I,UDgCoB,IC/BjCk8I,EAAiBl8I,QAGnB,OAFAk8I,EAAiBl8I,QAAU,OAC3B6qE,IAIElqE,EAAWX,SACbc,aAAaH,EAAWX,SAG1BW,EAAWX,QAAUoB,YAAW,KAC9B86I,EAAiBl8I,QAAU,CAAC,GAlBZ,IAmBD,GAChB,CDkBoC,EClB3B6qE,GAGd,CDe2BsxE,CAAc,GAAG,KACxChe,EAAeI,EAAAA,GAAgBuV,aAAa,IAGxCsI,GAA0BrmJ,EAAAA,EAAAA,KAAY,KAC1CimJ,GAAuB,EAAK,GAC3B,IAEGK,GAA2BtmJ,EAAAA,EAAAA,KAAY,KAC3CimJ,GAAuB,EAAM,GAC5B,IAEGM,GAA+BvmJ,EAAAA,EAAAA,KAAY,KAC1C8lJ,GAELxtE,EAA0B,CAAEK,SAAUmtE,GAAiB,GACtD,CAACA,EAAgBxtE,IAEdkuE,GAAuBxmJ,EAAAA,EAAAA,KAAY,KACvCsmJ,IACAP,EAAQ,CAAEU,cAAc,GAAO,GAC9B,CAACH,EAA0BP,IAExBW,GAAsEvrJ,EAAAA,EAAAA,KAAQ,IAC3E,EAAGgX,YAAWvR,YACnBrE,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLuM,QAASlf,EACTvB,KAAK,UACL0P,MAAM,cACN1T,UAAW0G,EAAS,SAAW,GAC/BrG,QAAS4X,EACTE,UAAU,gBAEV9V,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGd,CAACW,IAEEjF,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KAiNb,OACE4B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACNrT,QAASuhE,EACTzpD,UAAW7X,EAAQ,mBAEnB+B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAxNjB,WACE,OAAQopI,GACN,KAAKM,EAAAA,GAAgBme,YACnB,OAAOpqJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,6BACtB,KAAKguI,EAAAA,GAAgBoe,QACnB,OAAOrqJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,YACtB,KAAKguI,EAAAA,GAAgBqe,cACnB,OAAOtqJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,qBACtB,KAAKguI,EAAAA,GAAgB1gD,YACnB,OAAOvrF,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,UACtB,KAAKguI,EAAAA,GAAgBh7E,cACnB,OAAOjxD,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,kBACtB,KAAKguI,EAAAA,GAAgBse,YACnB,OAAOvqJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,iBACtB,KAAKguI,EAAAA,GAAgB0D,QACnB,OAAO3vI,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,oBACtB,KAAKguI,EAAAA,GAAgBue,SACnB,OAAOxqJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,aACtB,KAAKguI,EAAAA,GAAgBwe,eACnB,OAAOzqJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,mBACtB,KAAKguI,EAAAA,GAAgBye,SACnB,OAAO1qJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,iBACtB,KAAKguI,EAAAA,GAAgBuV,aACnB,OAAOxhJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,8BAEtB,KAAKguI,EAAAA,GAAgBmX,sBACnB,OAAOpjJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,mBACtB,KAAKguI,EAAAA,GAAgBiZ,2BACnB,OAAOllJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,aAEtB,KAAKguI,EAAAA,GAAgB0e,mBACnB,OAAO3qJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,iBACtB,KAAKguI,EAAAA,GAAgB2e,gBACnB,OAAO5qJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,oBACtB,KAAKguI,EAAAA,GAAgB4e,oBACnB,OAAO7qJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,yBACtB,KAAKguI,EAAAA,GAAgB6e,WACnB,OAAO9qJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,eACtB,KAAKguI,EAAAA,GAAgB8e,gBACnB,OAAO/qJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,oBACtB,KAAKguI,EAAAA,GAAgB+e,aACnB,OAAOhrJ,EAAAA,GAAAC,cAAA,UAAK9B,EAAK,iBACnB,KAAK8tI,EAAAA,GAAgBgf,kBACnB,OAAOjrJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,oBACtB,KAAKguI,EAAAA,GAAgBif,qBACnB,OAAOlrJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,yBACtB,KAAKguI,EAAAA,GAAgBkf,gBACnB,OAAOnrJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,oBACtB,KAAKguI,EAAAA,GAAgBmf,kBACnB,OAAOprJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,2BACtB,KAAKguI,EAAAA,GAAgBof,iBACnB,OAAOrrJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,UAEtB,KAAKguI,EAAAA,GAAgBqf,+BACrB,KAAKrf,EAAAA,GAAgBsf,mCACrB,KAAKtf,EAAAA,GAAgBuf,0BACrB,KAAKvf,EAAAA,GAAgBwf,iCACnB,OAAOzrJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,oBAEtB,KAAKguI,EAAAA,GAAgByf,8BACrB,KAAKzf,EAAAA,GAAgB0f,kCACrB,KAAK1f,EAAAA,GAAgB2f,yBACrB,KAAK3f,EAAAA,GAAgB4f,gCACnB,OAAO7rJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,mBAEtB,KAAKguI,EAAAA,GAAgB6f,kCACrB,KAAK7f,EAAAA,GAAgB8f,+BACrB,KAAK9f,EAAAA,GAAgB+f,4BACrB,KAAK/f,EAAAA,GAAgBggB,iCACrB,KAAKhgB,EAAAA,GAAgBigB,oCACrB,KAAKjgB,EAAAA,GAAgBkgB,gCACrB,KAAKlgB,EAAAA,GAAgBmgB,+BACnB,OAAOpsJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,gBAEtB,KAAKguI,EAAAA,GAAgBogB,iCACrB,KAAKpgB,EAAAA,GAAgBqgB,8BACrB,KAAKrgB,EAAAA,GAAgBsgB,2BACrB,KAAKtgB,EAAAA,GAAgBugB,gCACrB,KAAKvgB,EAAAA,GAAgBwgB,mCACrB,KAAKxgB,EAAAA,GAAgBygB,+BACrB,KAAKzgB,EAAAA,GAAgB0gB,8BACnB,OAAO3sJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,eAEtB,KAAKguI,EAAAA,GAAgBgH,sBACnB,OAAOjzI,EAAAA,GAAAC,cAAA,UAAK9B,EAAK,mBAEnB,KAAK8tI,EAAAA,GAAgB2gB,YACnB,OAAO5sJ,EAAAA,GAAAC,cAAA,UAAK9B,EAAK,mBAEnB,KAAK8tI,EAAAA,GAAgB4gB,eACnB,OAAO7sJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,kBACtB,KAAKguI,EAAAA,GAAgB6gB,eACnB,OAAO9sJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,qBACtB,KAAKguI,EAAAA,GAAgB8gB,oBACnB,OAAO/sJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,iBAEtB,KAAKguI,EAAAA,GAAgB+gB,cACrB,KAAK/gB,EAAAA,GAAgBghB,aACnB,OAAOjtJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,wBACtB,KAAKguI,EAAAA,GAAgBihB,iBACrB,KAAKjhB,EAAAA,GAAgBkhB,uBACrB,KAAKlhB,EAAAA,GAAgBmhB,2BACnB,OAAOptJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,+BACtB,KAAKguI,EAAAA,GAAgBohB,wBACnB,OAAOrtJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,0BACtB,KAAKguI,EAAAA,GAAgBqhB,qBACrB,KAAKrhB,EAAAA,GAAgBshB,wBACnB,OAAOvtJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,iBACtB,KAAKguI,EAAAA,GAAgBuhB,sBACrB,KAAKvhB,EAAAA,GAAgBwhB,mBACnB,OAAOztJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,uBACtB,KAAKguI,EAAAA,GAAgByhB,0BACrB,KAAKzhB,EAAAA,GAAgB0hB,uBACnB,OAAO3tJ,EAAAA,GAAAC,cAAA,UAAI,uBACb,KAAKgsI,EAAAA,GAAgB2hB,qBACnB,OAAO5tJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,mCACtB,KAAKguI,EAAAA,GAAgB4hB,2BACrB,KAAK5hB,EAAAA,GAAgB6hB,aACrB,KAAK7hB,EAAAA,GAAgB8hB,kCACnB,OAAO/tJ,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,+BAEtB,KAAKguI,EAAAA,GAAgB2D,iBACrB,KAAK3D,EAAAA,GAAgB6D,gBACrB,KAAK7D,EAAAA,GAAgB8C,oBACrB,KAAK9C,EAAAA,GAAgBgD,2BACrB,KAAKhD,EAAAA,GAAgBkD,wBACnB,OAAOnvI,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,aAEtB,KAAKguI,EAAAA,GAAgBoC,gBACnB,OAAOruI,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,qCAEtB,KAAKguI,EAAAA,GAAgBmC,8BACrB,KAAKnC,EAAAA,GAAgBsD,0BACnB,OAAOvvI,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,oCAEtB,KAAKguI,EAAAA,GAAgBwD,8BACnB,OAAOzvI,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,mDAEtB,KAAKguI,EAAAA,GAAgBoB,QACnB,OAAOrtI,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,YACtB,KAAKguI,EAAAA,GAAgBC,oBACnB,OAAOlsI,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,cACtB,KAAKguI,EAAAA,GAAgBX,aACnB,OAAOtrI,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,2BACtB,KAAKguI,EAAAA,GAAgBE,kBACrB,KAAKF,EAAAA,GAAgBG,8BACrB,KAAKH,EAAAA,GAAgBI,yBACnB,OACErsI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,wBACbqC,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,eACZ+Q,QAAQu6I,IACPvpJ,EAAAA,GAAAC,cAACyW,GAAAA,EAAY,CACX/Y,UAAU,qBACVgZ,QAASwzI,EACTvzI,UAAU,SAEV5W,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,SAASsR,aAAW,EAACzY,QAASgsJ,GAC1C/rJ,EAAQ,aAMrB,KAAKguI,EAAAA,GAAgBK,qBACrB,KAAKL,EAAAA,GAAgBc,iCACrB,KAAKd,EAAAA,GAAgBM,qBACrB,KAAKN,EAAAA,GAAgBgB,iCACnB,OACEjtI,EAAAA,GAAAC,cAAA,UACGhC,EACC0tI,IAAkBM,EAAAA,GAAgBK,sBAC3BX,IAAkBM,EAAAA,GAAgBc,iCACrC,gBAAkB,kBAI9B,QACE,OACE/sI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,wBAEbqC,EAAAA,GAAAC,cAAA,MAAIjC,QAAS2rJ,GACV1rJ,EAAQ,aAGX+B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLuM,QAASlf,EACTvB,KAAK,UACL0P,MAAM,cAENrT,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBme,aAC9Ct0I,UAAW7X,EAAQ,6BAEnB+B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UAEbvC,EAAAA,GAAAC,cAACyW,GAAAA,EAAY,CACX/Y,UAAU,qBACVgZ,QAASwzI,EACTvzI,UAAU,SAEV5W,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,SAASnH,QAAS8rJ,GAA0B7rJ,EAAQ,kBAK/E,CAaK+tC,GACDhsC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQolJ,EACR5kJ,QAASklJ,EACT9xI,KAAMha,EAAQ,mBACdsnC,aAActnC,EAAQ,0BACtBunC,eAAgBykH,EAChBxkH,sBAAoB,IAElB,IE/HV,IAAejoC,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,aACJ87I,EAAY,kBAAEC,EAAiB,eAAEnU,GAC/B5nI,EAAOsiC,SAASmjG,OACd,SAAEqC,EAAQ,UAAEzpB,IAAcx/C,EAAAA,GAAAA,GAAqB7+D,GAIrD,MAAO,CACL+vB,sBAH2B0B,EAAAA,EAAAA,KAA2BzxB,GAItDq+G,YACAypB,WACAgU,eACAC,oBACAnU,iBACD,GAhBe7nI,EAnJgCi8I,EAClDxwJ,WACAukC,uBACAsuF,YACAypB,WACAgU,eACAC,oBACAnU,iBACAjO,iBACAtsE,cAEA,MAAM,cACJ4uF,EAAa,iBACb3+B,EAAgB,uBAChBvF,EAAsB,iBACtBjmF,IACEj0B,EAAAA,EAAAA,OAEGq+I,EAAkBC,IAAuBn+I,EAAAA,EAAAA,IAAiB8pI,IAC1DnjH,EAAWy3H,EAAeC,IAAmB/vJ,EAAAA,EAAAA,KAE9CgwJ,EAA2BvsH,GAAwBgsH,EAEnD9vJ,GAAOD,EAAAA,EAAAA,MAEbO,EAAAA,EAAAA,KAAU,KACH8xH,GAAWxwH,QACdouJ,GACF,GACC,CAAC59B,IAEJ,MAAMjpC,GAAeh3E,EAAAA,EAAAA,IAAiBq/G,IACpC0+B,EAAoB1+B,GACpB2+B,KAEKG,EAAAA,GAAAA,IAAe9+B,GAAsB,KACxC4+B,IAEAtkC,EAAuB,CAAE+vB,SAAUrqB,GAAuB,GAC1D,IAGE/xH,GAAUgB,EAAAA,EAAAA,KAAQ,KACtB,IAAK2xH,EAAW,OAChB,MAAMm+B,GAAmB7/I,OAAO8/I,UAAU3U,UAAY,MAAMlvF,cACtD8jG,EAAgBF,EAAgBG,OAAO,EAAG,GAEhD,OAAOt+B,EAAUnwH,KAAI,EAAGuvH,WAAUm/B,aAAYvsJ,WAAW,CACvDmO,MAAOi/G,EACP5+G,MAAO+9I,EACP3gE,SAAU5rF,EACVs0B,UAAW84F,IAAay+B,GAAoBv3H,MACfquB,MAAMC,IAC5BupG,GAAoBvpG,EAAEz0C,QAAUg+I,GAAmBvpG,EAAEz0C,QAAUk+I,EAAsB,GAAJ,GACxF,GACD,CAAC/3H,EAAW05F,EAAW69B,IAEpBW,GAA8Bz+I,EAAAA,EAAAA,IAAiB8nF,IACnDo3B,EAAiB,CAAEw+B,aAAc51D,GAAW,IAGxC42D,GAAmC1+I,EAAAA,EAAAA,IAAiB8nF,IACxDo3B,EAAiB,CAAEy+B,kBAAmB71D,GAAW,IAG7C62D,GAAkC3+I,EAAAA,EAAAA,IAAgB,KACjD2xB,GACH+B,EAAiB,CACfQ,eAAgB,gBAEpB,IAGI0qH,GAAqBtwJ,EAAAA,EAAAA,KAAQ,KACjC,GAAKuwJ,EAAAA,IAA6BrV,EAAe/5I,OAIjD,OAA8B,IAA1B+5I,EAAe/5I,OACK,IAAImwH,KAAKC,aAAa,CAAC6pB,GAAW,CAAEt4I,KAAM,aAC3C0uH,GAAG0pB,EAAe,IAGlC37I,EAAK,YAAa27I,EAAe/5I,OAAO,GAC9C,CAAC+5I,EAAgB37I,EAAM67I,IAEpBoV,GAAwB9+I,EAAAA,EAAAA,IAAgB,KAC5Cu7H,EAAeI,EAAAA,GAAgBwe,eAAe,IAQhD,OALAl9H,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,oDACZwxJ,EAAAA,IACCnvJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,uBACZssC,QAASujH,EACTj6F,QAASg7F,IAEX/uJ,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,2BACZssC,QAAS+jH,EACT3rI,UAAWof,EACXogF,UAAYpgF,OAAgCpjC,EAAT,OACnCyjH,aAAc2sC,EACdl7F,QAASi7F,KAEThB,GAAgBQ,IAChBxuJ,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNp9G,QAASoxJ,GAERjxJ,EAAK,kBACN6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,gCAAgCuxJ,IAGpDlvJ,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,uCACVQ,EAAK,kCAIZ6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sCACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,wBACXQ,EAAK,mCAEPP,EACCoC,EAAAA,GAAAC,cAACmsF,GAAU,CACTzlC,MAAO/oD,EACPovF,cAAeohE,EACf3hE,qBAAmB,EACnBqB,sBAAuBxG,EACvBlgD,cAAc,QACdzpC,UAAU,oBAGZqC,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,OAGR,K,wCC3IV,MA4MA,IAAervD,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,cAAEqkB,GAAkBrkB,EACpBm9I,GAAsBC,EAAAA,EAAAA,IAAuCp9I,GAC7D4rG,EAAe5rG,EAAOhT,OAAO6+G,QAEnC,MAAO,CACLwxC,aAAcr9I,EAAOwhI,eAAeuB,cAAcl1I,OAClDw2B,gBACAmkE,gBAAgBC,EAAAA,EAAAA,KAA+BzoF,GAC/Cm9I,sBACAvxC,eACD,GAZe7rG,EA5M4Bu9I,EAC9C9xJ,WACA64B,gBACAg5H,eACA70D,gBACA20D,sBACAvxC,eACA+tB,iBACAtsE,cAEA,MAAM,sBACJrnC,EAAqB,iBACrB8L,EAAgB,gBAChByrH,EAAe,QACfr3H,EAAO,wBACPs3H,EAAuB,sBACvBC,IACE5/I,EAAAA,EAAAA,OAEG6/I,EAAqBC,EAAmBC,IAAsBtxJ,EAAAA,EAAAA,IAAQ,GAEvEL,GAAOC,EAAAA,GAAAA,MAEbK,EAAAA,EAAAA,KAAU,KACJ83B,GACF2B,EAAsB,CAAEtoB,OAAQ2mB,EAAew5H,WAAW,GAC5D,GACC,CAACx5H,KAEJhJ,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAMywF,GAAoB1/I,EAAAA,EAAAA,IAAgB,KACxCm/I,IACAK,GAAoB,IAGtB,OACE9vJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mCACZ44B,GACCv2B,EAAAA,GAAAC,cAACgwJ,GAAAA,EAAW,CACVrgJ,OAAQ2mB,EACR25H,aAAclhJ,QAAQtR,GACtBqpC,eAAa,IAGhBxQ,GACCv2B,EAAAA,GAAAC,cAACkwJ,GAAAA,EAAS,CACRC,aAAc75H,EACd85H,cAAY,KAIlBrwJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,WACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBoe,UAE7ClsJ,EAAK,0CAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,aACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB2gB,cAE7CzuJ,EAAK,mBAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,SACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBh7E,gBAE7C9yD,EAAK,kBAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,OACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBse,cAE7CpsJ,EAAK,iBAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,OACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB0D,UAE7CxxI,EAAK,oBAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,SACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBoB,UAE7ClvI,EAAK,YAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,kBACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB4gB,iBAE7C1uJ,EAAK,iBACLoxJ,EAAe,GAAMvvJ,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,gCAAgC4xJ,IAExEvvJ,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,WACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBue,WAE7CrsJ,EAAK,YACN6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,gCAAgCQ,EAAKmyJ,aAAaxB,aAEpE9uJ,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,WACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBye,WAE7CvsJ,EAAK,kBAGV6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBACZ+8F,GACC16F,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPq/B,YAAa3kC,EAAAA,GAAAC,cAACuB,GAAAA,EAAQ,CAAC7D,UAAU,0BAA0B+D,KAAK,UAAUC,KAAK,QAC/Ey5G,QAAM,EAENp9G,QAASA,IAAMgmC,KAEd7lC,EAAK,oBAGV6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPq/B,YAAa3kC,EAAAA,GAAAC,cAACuB,GAAAA,EAAQ,CAAC7D,UAAU,0BAA0B+D,KAAK,OAAOC,KAAK,QAC5Ey5G,QAAM,EAENp9G,QAASA,IAAM2xJ,EAAsB,CAAC,IAErCxxJ,EAAK,aACL6Q,QAAQ8uG,IACP99G,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,iCACb4yJ,EAAAA,GAAAA,IAAkBpyJ,EAAM2/G,KAI9BuxC,GACCrvJ,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,OACLi2G,QAAM,EAENp9G,QAASA,IAAM0xJ,KAEdvxJ,EAAK,kBAIZ6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,cACLi2G,QAAM,EACNp9G,QAAS6xJ,GAER1xJ,EAAK,iBAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,OACLi2G,QAAM,EAENp9G,QAASA,IAAMo6B,EAAQ,CAAEhe,IAAKo2I,EAAAA,OAE7BryJ,EAAK,oBAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,iBACLi2G,QAAM,EAENp9G,QAASA,IAAMo6B,EAAQ,CAAEhe,IAAKq2I,EAAAA,OAE7BtyJ,EAAK,uBAGV6B,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQurJ,EACRrqH,aAAcpnC,EAAK,MACnBiH,MAAOjH,EAAK,gBACZksB,UAAWlsB,EAAK,mBAAeU,EAAW,CAAEm9C,WAAW,EAAM00G,kBAAmB,CAAC,QACjFlrH,eAAgBwqH,EAChBnrJ,QAASirJ,IAEP,K,2BC9MV,MA8MA,IAAetyJ,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ,CACLy+I,8BAA+B3hJ,QAAQkD,EAAOsiC,SAASmjG,MAAMgZ,+BAC7DC,oBAAqB1+I,EAAOsiC,SAASmjG,MAAMiZ,oBAC3CC,qBAAsB3+I,EAAOsiC,SAASmjG,MAAMkZ,qBAC5CC,wBAAyB5+I,EAAOsiC,SAASmjG,MAAMmZ,2BANjC7+I,EA9MqC8+I,EACvDrzJ,WACA6hE,UACAyxF,iBACAL,gCACAE,uBACAD,sBACAE,8BAEA,MAAM,yBACJG,EAAwB,gCACxBC,EAA+B,2BAC/BC,EAA0B,8BAC1BC,IACErhJ,EAAAA,EAAAA,OAEJtR,EAAAA,EAAAA,KAAU,KACRwyJ,GAA0B,GACzB,CAACA,IAEJ,MAAMI,GAAeC,EAAAA,GAAAA,GAAgB,KAAK,GAEpCC,GAA4BC,EAAAA,GAAAA,MAC5BC,EAAmCF,KAA8BG,EAAAA,GAAAA,MAEjEC,GAAuBluJ,EAAAA,EAAAA,KAAY,CACvCmN,EACAghJ,EACAC,KAEA,MAAMC,EAAiB9iJ,QAAQgiJ,IAAiBY,IAAWG,YACrDC,EAA4BhjJ,QAAQgiJ,IAAiBY,IAAWK,oBAEtEd,EAA2B,CACzBS,WACA9wI,QAAqB,SAAZ+wI,GAAsBjhJ,EAAEC,OAAO45B,QAAUqnH,EAClDG,mBAAgC,iBAAZJ,EAA6BjhJ,EAAEC,OAAO45B,QAAUunH,GACpE,GACD,CAAChB,IAEEkB,GAA+BzuJ,EAAAA,EAAAA,KAAamN,IAChD,MAAM48D,EAAY58D,EAAEC,OAAO45B,QAC3B2mH,EAA8B,CAC5BR,oBAAqBpjF,MAChBA,GAAa,CAAEqjF,sBAAsB,IAC1C,GACD,CAACO,IAEEe,GAAgC1uJ,EAAAA,EAAAA,KAAamN,IACjDwgJ,EAA8B,CAC5BP,qBAAsBjgJ,EAAEC,OAAO45B,SAC/B,GACD,CAAC2mH,IAEEgB,GAAwC3uJ,EAAAA,EAAAA,KAAamN,IACzD+gJ,EAAqB/gJ,EAAG,QAAS,OAAO,GACvC,CAAC+gJ,IAEEU,GAAkC5uJ,EAAAA,EAAAA,KAAamN,IACnD+gJ,EAAqB/gJ,EAAG,QAAS,eAAe,GAC/C,CAAC+gJ,IAEEW,GAAkC7uJ,EAAAA,EAAAA,KAAamN,IACnD+gJ,EAAqB/gJ,EAAG,SAAU,OAAO,GACxC,CAAC+gJ,IAEEY,GAA4B9uJ,EAAAA,EAAAA,KAAamN,IAC7C+gJ,EAAqB/gJ,EAAG,SAAU,eAAe,GAChD,CAAC+gJ,IAEEa,GAAoC/uJ,EAAAA,EAAAA,KAAamN,IACrD+gJ,EAAqB/gJ,EAAG,WAAY,OAAO,GAC1C,CAAC+gJ,IAEEc,GAA8BhvJ,EAAAA,EAAAA,KAAamN,IAC/C+gJ,EAAqB/gJ,EAAG,WAAY,eAAe,GAClD,CAAC+gJ,IAEEe,GAAkCjvJ,EAAAA,EAAAA,KAAamN,IACnDsgJ,EAAgC,CAC9B5oC,UAAW13G,EAAEC,OAAO45B,SACpB,GACD,CAACymH,IAEE/pI,GAAqB1jB,EAAAA,EAAAA,KAAaod,IACtCuwI,EAA8B,CAC5BN,wBAAyBjwI,IAE3BwwI,GAAa,KAAMsB,EAAAA,GAAAA,SAAgB9zJ,EAAWgiB,IAAQ,GACrD,CAACwwI,EAAcD,IAEZjzJ,GAAOC,EAAAA,GAAAA,KAOb,OALAmvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,qBAER6B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,oBACZgwF,SAAUhwF,EAAKyyJ,EAAsB,+BAAiC,iCACtEnmH,QAASmmH,EACT/tI,UAAW0uI,EACXrgJ,SAAUghJ,IAEZlyJ,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,wBACZ0kB,UAAW+tI,IAAwBa,EACnCtjE,SACIhwF,EADMszJ,EACDZ,EAAuB,+BAAiC,gCACxD,0CACTpmH,QAASomH,EACT3/I,SAAUihJ,IAEZnyJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,wBACbqC,EAAAA,GAAAC,cAACoiB,GAAAA,EAAW,CACVtR,MAAO5S,EAAK,sBACZ0B,IAAK,EACLb,IAAK,GACL6jB,UAAW0uI,EACX7gJ,MAAOogJ,EACP5/I,SAAUiW,MAIhBnnB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,6BAGR6B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,gCACZgwF,SAAUhwF,EAAK6yJ,GAAgBpwJ,OAAOmxJ,WAClC,+BAAiC,iCACrCtnH,QAASz7B,QAAQgiJ,GAAgBpwJ,OAAOmxJ,YACxC7gJ,SAAUkhJ,IAEZpyJ,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,kBACZ0kB,UAAWmuI,GAAgBpwJ,OAAOmxJ,WAClC5jE,SAAUhwF,EAAK6yJ,GAAgBpwJ,OAAOqxJ,mBAClC,+BAAiC,iCACrCxnH,QAASz7B,QAAQgiJ,GAAgBpwJ,OAAOqxJ,oBACxC/gJ,SAAUmhJ,KAIdryJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYV,EAAK,iBAEhF6B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,0BACZgwF,SAAUhwF,EAAK6yJ,GAAgB4B,QAAQb,WACnC,+BAAiC,iCACrCtnH,QAASz7B,QAAQgiJ,GAAgB4B,QAAQb,YACzC7gJ,SAAUohJ,IAEZtyJ,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,kBACZ0kB,UAAWmuI,GAAgB4B,QAAQb,WACnC5jE,SAAUhwF,EAAK6yJ,GAAgB4B,QAAQX,mBACnC,+BAAiC,iCACrCxnH,QAASz7B,QAAQgiJ,GAAgB4B,QAAQX,oBACzC/gJ,SAAUqhJ,KAIdvyJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYV,EAAK,mBAEhF6B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,4BACZgwF,SAAUhwF,EAAK6yJ,GAAgB3tE,UAAU0uE,WACrC,+BAAiC,iCACrCtnH,QAASz7B,QAAQgiJ,GAAgB3tE,UAAU0uE,YAC3C7gJ,SAAUshJ,IAEZxyJ,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,kBACZ0kB,UAAWmuI,GAAgB3tE,UAAU0uE,WACrC5jE,SAAUhwF,EAAK6yJ,GAAgB3tE,UAAU4uE,mBACrC,+BAAiC,iCACrCxnH,QAASz7B,QAAQgiJ,GAAgB3tE,UAAU4uE,oBAC3C/gJ,SAAUuhJ,KAIdzyJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAAYV,EAAK,eAEhF6B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,iBACZssC,QAASkmH,EACTz/I,SAAUwhJ,KAGV,K,4BCjMV,MAAMG,GAA4C,CAChD,+BACA,kCACA,iCAGIC,GAAmD,CACvD,+BACA,kCACA,iCAGIC,GAA4C,CAChD,CAAC,yCAA0C,CACzC,CAAE/xJ,IAAK,kBAAmB+P,MAAO,sCACjC,CAAE/P,IAAK,2BAA4B+P,MAAO,8BAC1C,CAAE/P,IAAK,wBAAyB+P,MAAO,kCACvC,CAAE/P,IAAK,4BAA6B+P,MAAO,+BAC3C,CAAE/P,IAAK,wBAAyB+P,MAAO,uCACvC,CAAE/P,IAAK,kBAAmB+P,MAAO,iCAAkC8R,UAAWmwI,EAAAA,IAC9E,CAAEhyJ,IAAK,wBAAyB+P,MAAO,kCACvC,CAAE/P,IAAK,aAAc+P,MAAO,+BAE9B,CAAC,8BAA+B,CAC9B,CAAE/P,IAAK,gBAAiB+P,MAAO,oCAC/B,CAAE/P,IAAK,uBAAwB+P,MAAO,mCACtC,CAAE/P,IAAK,kBAAmB+P,MAAO,sCACjC,CAAE/P,IAAK,iBAAkB+P,MAAO,uCAElC,CAAC,mCAAoC,CACnC,CAAE/P,IAAK,eAAgB+P,MAAO,kCAC9B,CAAE/P,IAAK,iBAAkB+P,MAAO,uCA0JpC,IAAevT,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACjC,CACL+gJ,qBAAqBC,EAAAA,EAAAA,KAA0BhhJ,MAF/BD,EAtJpB,UAA6B,SAC3BvU,EAAQ,oBACRu1J,EAAmB,QACnB1zF,IAEA,MAAM,uBACJ0qD,EAAsB,0BACtBkpC,IACEpjJ,EAAAA,EAAAA,OAEJwd,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAMphE,GAAOC,EAAAA,GAAAA,MACNg1J,EAAuBC,IAA4BnjJ,EAAAA,EAAAA,IAAkC,CAAC,GAEvFojJ,GAAuB10J,EAAAA,EAAAA,KAAQ,IAC5Bm0J,GAAoBh0J,QAAO,CAACisD,GAAM,CAAEptD,GAAU4B,KACnDwrD,EAAIxrD,GAAS5B,EAAQ2yG,OAAM,EAAGvvG,SAAUiyJ,EAAoBjyJ,KAErDgqD,IACN,CAAC,IACH,CAACioG,IAEEM,GAAsB30J,EAAAA,EAAAA,KAAQ,KAC9B40J,EAAAA,GAAAA,GAAaP,EAAqBQ,GAAAA,IAC7BC,EAAAA,KAELF,EAAAA,GAAAA,GAAaP,EAAqBU,GAAAA,IAC7BC,EAAAA,KAELJ,EAAAA,GAAAA,GAAaP,EAAqBY,GAAAA,IAC7BC,EAAAA,IAGFC,EAAAA,KACN,CAACd,IAEEe,GAAwBp1J,EAAAA,EAAAA,KAAQ,KACpB20J,IAAwBQ,EAAAA,IACpCjB,GACAD,IAEWzyJ,KAAKnB,GAAWd,EAAKc,MACnC,CAACs0J,EAAqBp1J,IAEnB81J,GAAsBxwJ,EAAAA,EAAAA,KAAY,CAACmN,EAAqBpR,KAC5DoR,EAAEkX,iBACF,MAAMosI,EAAevsI,OAAOnoB,GAE5B6zJ,GAA0Br0F,IAAI,IACzBA,EACH,CAACk1F,IAAgBl1F,EAAKk1F,MACrB,GACF,IAEGC,GAA6B1wJ,EAAAA,EAAAA,KAAa2wJ,IAC9C,MAAMC,EAAcD,IAAaR,EAAAA,IAC7BD,GAAAA,GACCS,IAAaN,EAAAA,IAAsBD,GAAAA,GAAgCJ,GAAAA,GAExExpC,EAAuB,CAAEqqC,eAAgBF,IACzCjB,EAA0BkB,EAAY,GACrC,IAEGE,GAA4B9wJ,EAAAA,EAAAA,KAAamN,IAC7C,MAAM,KAAErO,EAAI,QAAEkoC,GAAY75B,EAAEC,OACtB2jJ,EAAoBzB,GAAoBryJ,MAAK,EAAE+zJ,KAAiBA,IAAgBlyJ,IACtF,IAAKiyJ,EACH,OAGF,MAAME,EAAcF,EAAkB,GAAGz1J,QAAO,CAACisD,GAAOhqD,UACtDgqD,EAAIhqD,GAAOypC,EACJugB,IACN,CAAC,GAEJmoG,EAA0BuB,EAAY,GACrC,IAEGC,GAAuBlxJ,EAAAA,EAAAA,KAAamN,IACxC,MAAM,KAAErO,EAAI,QAAEkoC,GAAY75B,EAAEC,OAE5BsiJ,EAA0B,CAAE,CAAC5wJ,GAA6BkoC,GAAU,GACnE,IAEH,OACEzqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,mCAER6B,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,4BAA4ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAChEV,EAAK,sCAGR6B,EAAAA,GAAAC,cAACoiB,GAAAA,EAAW,CACVzkB,QAASo2J,EACTtjJ,MAAO6iJ,IAAwBQ,EAAAA,IAAyBD,EAAAA,IAAsBP,EAC9EriJ,SAAUijJ,KAIdn0J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,6DACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAI,QAAO,gCAE/C2xJ,GAAoB3yJ,KAAI,EAAEq0J,EAAa72J,GAAU4B,IAE9CQ,EAAAA,GAAAC,cAAA,OACEe,IAAKyzJ,EACL92J,UAAU,6BAEVqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,0BACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAMkyJ,EACN/jJ,MAAOlR,EAAM+mF,WACb97C,QAAS6oH,EAAqB9zJ,GAC9BuR,MAAO5S,EAAKs2J,GACZpyC,UAAW+wC,EAAsB5zJ,GAAS,KAAO,OACjD0R,SAAUqjJ,EACVjyC,aAAc2xC,KAGjBjlJ,QAAQokJ,EAAsB5zJ,KAC7BQ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mCACZC,EAAQwC,KAAI,EAAGY,MAAK+P,QAAO8R,eAC1B,GAAY,eAAR7hB,GAAyB0gJ,EAAAA,GAC7B,OACE1hJ,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP9yD,IAAKA,EACLuB,KAAMvB,EACNypC,QAASwoH,EAAoBjyJ,GAC7B+P,MAAO5S,EAAK4S,GACZ8R,SAAUA,EACV3R,SAAUyjJ,GACV,SAWxB,KCwLA,IAAen3J,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MACEsiC,UACEmjG,OAAO,YACLid,EAAW,mBAAEC,EAAkB,mBAAEC,EAAkB,kCAAEC,EAAiC,uCACtF9iB,EAAsC,yBAAEJ,GACzC,QACD5oG,GACD,QACDia,EACAqrF,UAAU,YACRymB,GACD,UACDhjH,GACE9/B,GAEE,sBAAE+iJ,IAA0BlkF,EAAAA,GAAAA,GAAqB7+D,GACjDigI,EAA0BnjI,QAAQ6iI,GAClCqjB,GAAsBnhH,EAAAA,EAAAA,KAA0B7hC,GAEtD,MAAO,CACL+vB,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GACjD0iJ,cACAI,YAAahmJ,QAAQgmJ,GACrBG,aAAcjyG,EAAQu2D,WACtB27C,aAAcljJ,EAAOukI,kBAAkBxB,cAAcl1I,OACrD80J,qBACAQ,6BAA8BrmJ,QAAQgjC,GAAWqjH,8BACjDN,oCACAD,qBACA7iB,yCACAE,0BACAlpG,UACAgsH,wBACAK,gBAAgBC,EAAAA,EAAAA,KAAqBrjJ,GACrCgjJ,sBACD,GArCejjJ,EA3W+BujJ,EACjD93J,WACAukC,uBACA2yH,cACAI,cACAG,eACAC,eACAP,qBACAC,qBACAO,+BACAN,oCACA9iB,yCACAE,0BACA8iB,wBACAK,iBACArsH,UACA4iG,iBACAtsE,UACA21F,0BAEA,MAAM,oBACJO,EAAmB,iBACnBC,EAAgB,oBAChBC,EAAmB,sBACnBC,EAAqB,0BACrBC,EAAyB,4BACzB/pC,EAA2B,sBAC3BgqC,EAAqB,uBACrB7rC,IACEl6G,EAAAA,EAAAA,OAEJtR,EAAAA,EAAAA,KAAU,KACHy2J,IACHQ,IACAD,IACAE,IACAG,IACF,GACC,CAACZ,KAEJz2J,EAAAA,EAAAA,KAAU,KACJf,IAAaw3J,GACfW,GACF,GACC,CAACn4J,EAAUw3J,EAAqBW,IAEnC,MAAM53J,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MAEbmvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAMw2F,GAA6BtyJ,EAAAA,EAAAA,KAAa+pE,IAC9Cs+C,EAA4B,CAC1BipC,kCAAmCvnF,GACnC,GACD,CAACs+C,IAEEkqC,GAA0BvyJ,EAAAA,EAAAA,KAAa+qF,IAC3Cy7B,EAAuB,CACrBgrC,sBAAuBzmE,GACvB,GACD,IAEGynE,GAA8BxyJ,EAAAA,EAAAA,KAAa+qF,IAC/ConE,EAAsBpnE,EAAU,GAC/B,CAAConE,IAEJ,SAASM,EAAmBrE,GAC1B,IAAKA,EAAS,OAAO5zJ,EAAQ,WAE7B,MAAM,WAAEwqC,EAAU,mBAAE0tH,EAAkB,YAAEC,GAAgBvE,EAGlDwE,EAAuC,cAAf5tH,EACxB6tH,EAF8B,UAAhBF,IAEyBC,EAEvCE,EAAa1E,EAAQ2E,aAAaz2J,OAAS8xJ,EAAQhoH,aAAa9pC,OAChE02J,EAAa5E,EAAQ6E,aAAa32J,OAAS8xJ,EAAQloH,aAAa5pC,OAChE42J,EAAQ,GACVJ,GAAYI,EAAMj3J,KAAM,IAAG62J,KAC3BE,IAAeJ,GAAuBM,EAAMj3J,KAAM,IAAG+2J,KAEzD,MAGMG,EAAkB,CAHCN,EAAuBn4J,EAAK,oBAAsB,GACvDA,EAAK04J,YAAYF,IAEmB72H,OAAO9wB,SAASga,KAAK,KAC7E,GAAIstI,IAAyBD,EAAuB,OAAOO,EAE3D,GAAIT,EACF,OAAOl4J,EAAQ24J,EAAkB,qBAAuB,kBAG1D,OAAQnuH,GACN,IAAK,YACH,MAAQ,GAAExqC,EAAQ,mBAAmB24J,IAEvC,IAAK,WACH,MAAQ,GAAE34J,EAAQ,kBAAkB24J,IAEtC,IAAK,SACH,MAAQ,GAAE34J,EAAQ,gBAAgB24J,IAIxC,CAEA,OACE52J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,cACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB8gB,sBAE7C9uJ,EAAQ,gBACT+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,gCAAgCw3J,GAAgB,KAEjEG,GACCt1J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,MACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EACbmpB,EAAc/oB,EAAAA,GAAgB6D,gBAAkB7D,EAAAA,GAAgB2D,mBAGlE5vI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,aACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5BnD,EAAQ+2J,EAAc,aAAe,kBAK9Ch1J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,OACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EACb+oB,EAAc3oB,EAAAA,GAAgBghB,aAAehhB,EAAAA,GAAgB+gB,gBAG/DhtJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,wBACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5BnD,EAAQ22J,EAAc,aAAe,kBAI3CQ,EAAe,GACdp1J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,MACLi2G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB6gB,iBAE7C7uJ,EAAQ,+BACT+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,gCAAgCy3J,KAKtDp1J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAAYZ,EAAQ,iBAEtF+B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNz9G,UAAU,UAEVK,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB0e,qBAE9C3qJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,sBACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5B80J,EAAmBjtH,EAAQoxB,gBAIlCr6D,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNz9G,UAAU,UAEVK,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB2e,kBAE9C5qJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,kBACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5B80J,EAAmBjtH,EAAQ6tH,aAIlC92J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNz9G,UAAU,UAEVK,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB4e,sBAE9C7qJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,6BACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5B80J,EAAmBjtH,EAAQ8tH,iBAIlC/2J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNz9G,UAAU,UAEVK,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB6e,aAE9C9qJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,eACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5B80J,EAAmBjtH,EAAQ20G,QAIlC59I,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNz9G,UAAU,UAEVK,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB8e,kBAE9C/qJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,oBACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5B80J,EAAmBjtH,EAAQ+tH,aAIlCh3J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNz9G,UAAU,UAEVK,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB+e,eAE9ChrJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,iBAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5B80J,EAAmBjtH,EAAQypD,UAIlC1yF,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNz9G,UAAU,UAEVK,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBgf,oBAE9CjrJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,yBACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5B80J,EAAmBjtH,EAAQguH,aAIlCj3J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNz9G,UAAU,UAEVK,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBof,mBAE9CrrJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,iBACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5B80J,EAAmBjtH,EAAQiuH,cAIlCl3J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACN+7C,oBAAkB,EAClBh0G,aAAclhB,GAAwBjiC,EAAAA,GAAAC,cAACuB,GAAAA,EAAQ,CAACG,KAAK,MAAMD,KAAK,YAChE/D,UAAU,UAEVK,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBif,uBAE9ClrJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,8BACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5B80J,EAAmBjtH,EAAQmuH,kBAIlCp3J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNj4D,aAAclhB,GAAwBjiC,EAAAA,GAAAC,cAACuB,GAAAA,EAAQ,CAACG,KAAK,MAAMD,KAAK,YAChE/D,UAAU,UAEVK,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBkf,kBAE9CnrJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,yBACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5B+wI,EAA0Bh0I,EAAK,4BAE1BF,EADFg0I,EACU,oCACA,mBAIpBjyI,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNz9G,UAAU,UAEVK,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBmf,oBAE9CprJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,gBACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5B80J,EAAmBjtH,EAAQouH,gBAMnCvC,GACC90J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAC/DZ,EAAQ,iCAEX+B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO9S,EAAQ,4CACfkwF,SAAUlwF,EAAQ,gCAClBwsC,QAASz7B,QAAQ6lJ,GACjBhyI,UAAWiyI,EACX/gG,QAASkiG,KAKdZ,GACCr1J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAC/DZ,EAAQ,4BAEX+B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO9S,EAAQ,kBACfkwF,SAAUlwF,EAAQ,sBAClBwsC,QAASz7B,QAAQ+lJ,GACjBhhG,QAASgiG,KAKf/1J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAC/DZ,EAAQ,+BAEX+B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO9S,EAAQ,gCACfwsC,QAASz7B,QAAQimJ,GACjBlhG,QAASiiG,KAGT,KC9TV,IAAex4J,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MACEtR,OACE+nC,KAAMtB,GAER6b,SACE9c,IAAKkxH,GACN,YACD5uH,EAAW,cACXnS,GACErkB,EAEJ,MAAO,CACLm1B,YACAiwH,aACArxH,WAAYyC,GAAaT,QACzBsvH,iBAAiBjlJ,EAAAA,EAAAA,KAAeJ,GAAQslJ,WAAWC,aACnDlhI,gBACD,GAnBetkB,EAxD8BylJ,EAChDrwH,YACAiwH,aACArxH,aACAsxH,kBACAhhI,gBACAlyB,SACAQ,cAEA,MAAM,mBACJ8yJ,EAAkB,UAClB11G,IACElyC,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,MACNooD,EAAQqH,IAAaz9C,EAAAA,EAAAA,IAAS,KAErCzR,EAAAA,EAAAA,KAAU,KACRk5J,EAAmB,CAAEtxH,MAAOigB,GAAS,GACpC,CAACA,EAAQqxG,IAEZ,MAAMC,GAAqBh5J,EAAAA,EAAAA,KAAQ,KACjC,MAAMi5J,GAAsB3xH,EAAAA,GAAAA,IAAO,IAC7BD,GAAc,MACdsxH,GAAmB,IACvBz3H,QAAQg4H,GACDA,IAAcvhI,IAAkB+gI,EAAWnlI,SAAS2lI,MAG7D,OAAO3xH,EAAAA,GAAAA,IAAmB,CAAEC,IAAKyxH,EAAqBxxH,MAAOigB,EAAQ5kD,KAAM,SACxEwjD,MAAK,CAAC6yG,EAASC,KACd,MAAMj+F,GAAYzuB,EAAAA,EAAAA,IAAgBjE,EAAU0wH,KAAa,GACnDE,GAAa3sH,EAAAA,EAAAA,IAAgBjE,EAAU2wH,KAAc,GAE3D,OAAOj+F,EAAUm+F,cAAcD,EAAW,GAC1C,GACH,CAACX,EAAYrxH,EAAY1P,EAAe+vB,EAAQixG,EAAiBlwH,IAE9D8wH,GAAmB10J,EAAAA,EAAAA,KAAau8B,IACpCiiB,EAAU,CAAEjiB,WACZn7B,GAAS,GACR,CAACA,IAEJ,OACE7E,EAAAA,GAAAC,cAAC6oD,GAAgB,CACfzkD,OAAQA,EACR0kD,cAAe6uG,EACf5uG,kBAAmB7qD,EAAK,0BACxBmoD,OAAQA,EACR4C,eAAgByE,EAChBxE,mBAAoBgvG,EACpBtzJ,QAASA,GACT,KCoEN,IAAerH,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MACEw4C,OACE/hB,KAAMyvH,GAERx3J,OACE+nC,KAAM0vH,GAERn1G,SAAS,IACP9c,GAEFizB,aACEC,WAAYF,IAEZlnD,EAEJ,MAAO,CACLkmJ,aACAC,aACAf,WAAYlxH,EACZgzB,gBACD,GAtBennD,EApH2CqmJ,EAC7D56J,WACA6hE,UACA64F,aACAC,aACAf,aACAl+F,oBAEA,MAAM,YAAEpX,IAAgBjyC,EAAAA,EAAAA,MAElB5R,GAAOD,EAAAA,EAAAA,MACNq6J,EAAsBC,EAAoBC,IAAuBj6J,EAAAA,EAAAA,KAClEk6J,GAAqBj1J,EAAAA,EAAAA,KAAau8B,IACtCgiB,EAAY,CAAEhiB,UAAS,GACtB,CAACgiB,KAEJz0B,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAMo5F,GAAuB/5J,EAAAA,EAAAA,KAAQ,IAC5B04J,EAAWv4J,QAAO,CAACisD,EAAKhrB,KAC7B,MACMiS,GADYjgC,EAAAA,EAAAA,IAASguB,GACFq4H,EAAWr4H,QAAUnhC,EACxC+5J,EAAe3mH,IAASA,EAAKooB,cAAew+F,EAAAA,EAAAA,IAAgB5mH,GAMlE,OAJI2mH,IACF5tG,EAAIhrB,GAAU44H,GAGT5tG,CAAG,GACT,CAAC,IACH,CAACssG,EAAYe,IA6ChB,OACEr4J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,wBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,oCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BACbqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,6CAA6CyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACjFV,EAAK,sBAIV6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BACZ25J,GAAYv3J,OACXC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACZ25J,EAAYl3J,KAAI,CAAC03J,EAAW9wG,IAvDzC,SAAuB8wG,EAAmB9wG,GACxC,MAAMvI,GAAYzsC,EAAAA,EAAAA,IAAS8lJ,GACrB7lH,EAAOomH,EAAWP,GAClBplJ,EAAO0lJ,EAAWN,GAClB5hI,EAAO+b,GAAQv/B,EAEf/U,GAAYuC,EAAAA,GAAAA,GAChB,wDACAu+C,EAAY,UAAY,SAGpBq6G,EAAmBH,EAAqBb,GAE9C,OACE93J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAM,WAAU82J,IAChBn6J,UAAWA,EACXykB,QAAM,EACNg5F,QAAM,EACN/4D,eAAgB,CAAC,CACfj9C,MAAO,UACPD,KAAM,SACNu9C,QAASA,KACPg2G,EAAmBZ,EAAU,IAGjC7tJ,MAAQ,SA6B6D,EA7BpC+8C,GAAKwwF,EAAAA,UAEtCx3I,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt0B,KAAK,SACLu0B,KAAMA,IAERl2B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eAAeyD,IAAI,QAC/B80B,GAAQl2B,EAAAA,GAAAC,cAACosD,GAAAA,EAAa,CAACn2B,KAAMA,IAC7B+b,GAAMooB,aACLr6D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gBAAgByD,IAAI,SAAQw5D,EAAAA,GAAAA,IAA0BxB,EAAennB,EAAKooB,cAE1Fy+F,GAAqB94J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBAAmByD,IAAI,QAAO,IAAE03J,IAI7E,CAc+CC,CAAcjB,EAAW9wG,MAE5DswG,IAAeA,EAAWv3J,OAC5BC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,aAAayD,IAAI,QAAQjD,EAAK,cAE7C6B,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,CAAC7rD,IAAI,cAKnBhB,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,SAAO,EACPzqC,UAAU,oBACVK,QAASw6J,EACT1iJ,UAAW3X,EAAK,iBAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,SAEbvC,EAAAA,GAAAC,cAACy3J,GAAc,CACbrzJ,OAAQk0J,EACR1zJ,QAAS4zJ,IAEP,KChJH,SAASO,GAAcC,GAC5B,OAAQA,GACN,KAAKhtB,EAAAA,GAAgB0e,mBACrB,KAAK1e,EAAAA,GAAgB6f,kCACrB,KAAK7f,EAAAA,GAAgBogB,iCACnB,MAAO,cACT,KAAKpgB,EAAAA,GAAgB2e,gBACrB,KAAK3e,EAAAA,GAAgBqf,+BACrB,KAAKrf,EAAAA,GAAgByf,8BACnB,MAAO,WACT,KAAKzf,EAAAA,GAAgB4e,oBACrB,KAAK5e,EAAAA,GAAgBsf,mCACrB,KAAKtf,EAAAA,GAAgB0f,kCACnB,MAAO,eACT,KAAK1f,EAAAA,GAAgB6e,WACrB,KAAK7e,EAAAA,GAAgBuf,0BACrB,KAAKvf,EAAAA,GAAgB2f,yBACnB,MAAO,MACT,KAAK3f,EAAAA,GAAgB8e,gBACrB,KAAK9e,EAAAA,GAAgB8f,+BACrB,KAAK9f,EAAAA,GAAgBqgB,8BACnB,MAAO,WACT,KAAKrgB,EAAAA,GAAgB+e,aACrB,KAAK/e,EAAAA,GAAgB+f,4BACrB,KAAK/f,EAAAA,GAAgBsgB,2BACnB,MAAO,QACT,KAAKtgB,EAAAA,GAAgBgf,kBACrB,KAAKhf,EAAAA,GAAgBggB,iCACrB,KAAKhgB,EAAAA,GAAgBugB,gCACnB,MAAO,WACT,KAAKvgB,EAAAA,GAAgBif,qBACrB,KAAKjf,EAAAA,GAAgBigB,oCACrB,KAAKjgB,EAAAA,GAAgBwgB,mCACnB,MAAO,gBACT,KAAKxgB,EAAAA,GAAgBmf,kBACrB,KAAKnf,EAAAA,GAAgBwf,iCACrB,KAAKxf,EAAAA,GAAgB4f,gCACnB,MAAO,aACT,KAAK5f,EAAAA,GAAgBof,iBACrB,KAAKpf,EAAAA,GAAgBkgB,gCACrB,KAAKlgB,EAAAA,GAAgBygB,+BACnB,MAAO,YACT,KAAKzgB,EAAAA,GAAgBitB,gBACrB,KAAKjtB,EAAAA,GAAgBmgB,+BACrB,KAAKngB,EAAAA,GAAgB0gB,8BACnB,MAAO,WACT,KAAK1gB,EAAAA,GAAgBktB,kBACnB,MAAO,aACT,KAAKltB,EAAAA,GAAgBgH,sBACnB,MAAO,iBAIb,CCtCA,MA4HA,IAAez1I,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MACEsiC,UACEmjG,OAAO,gBACLyhB,KAGFlnJ,EAEJ,MAAO,CACLknJ,kBACAn3H,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GAClD,GAbeD,EA5HSonJ,EAC3BD,kBAAiBn3H,2BAEjB,MAAM,iBAAE8B,EAAgB,4BAAE+nF,IAAgC/7G,EAAAA,EAAAA,MAEpD5R,GAAOC,EAAAA,GAAAA,KAEPk7J,GAAiChpJ,EAAAA,EAAAA,IAAgB,KACrDyzB,EAAiB,CACfr9B,QAASvI,EAAK,qCACdgI,OAAQ,CACNA,OAAQ,mBACR+8H,QAAS,CAAC,GAEZq2B,WAAY,CAAEv4J,IAAK,QACnBmE,KAAM,QACN,IAGEq0J,GAA6BlpJ,EAAAA,EAAAA,IAAgB,KAC5C2xB,EAKL6pF,EAA4B,CAC1BstC,gBAAiB,IACZA,EACHK,gCAAiCL,GAAiBK,qCAAkC56J,KAPtFy6J,GASA,IAGEI,GAA+BppJ,EAAAA,EAAAA,IAAgB,KAC9C2xB,EAIL6pF,EAA4B,CAC1BstC,gBAAiB,IACZA,EACHO,kCAAmCP,GAAiBO,uCAAoC96J,KAN1Fy6J,GAQA,IAGEM,GAAqBtpJ,EAAAA,EAAAA,IAAgB,KACpC2xB,EAIL6pF,EAA4B,CAC1BstC,gBAAiB,IACZA,EACHS,+BAAgCT,GAAiBS,oCAAiCh7J,KANpFy6J,GAQA,IAGEQ,GAAkCxpJ,EAAAA,EAAAA,IAAgB,KACjD2xB,EAIL6pF,EAA4B,CAC1BstC,gBAAiB,IACZA,EACHW,4BAA6BX,GAAiBW,iCAA8Bl7J,KAN9Ey6J,GAQA,IAGJ,OACEt5J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,6BAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACtH,QAASw7J,GACjBx5J,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,8BACZ6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACP7nC,GAAG,kBACHqN,MAAyD5S,EAAlDi7J,GAAiBK,+BAAsC,wCACrD,wCACT52I,UAAWof,EACXwI,SAAUxI,IAA+Bm3H,GAAiBK,kCAG9Dz5J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACtH,QAAS07J,GACjB15J,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,yBACZ6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACP7nC,GAAG,YACHqN,MAA2D5S,EAApDi7J,GAAiBO,iCAAwC,mCACvD,mCACT92I,UAAWof,EACXwI,SAAUxI,IAA+Bm3H,GAAiBO,oCAG9D35J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACtH,QAAS47J,GACjB55J,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,sBACZ6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACP7nC,GAAG,SACHqN,MAAwD5S,EAAjDi7J,GAAiBS,8BAAqC,gCACpD,gCACTh3I,UAAWof,EACXwI,SAAUxI,IAA+Bm3H,GAAiBS,iCAG9D75J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACtH,QAAS87J,GACjB95J,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,mCACZ6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACP7nC,GAAG,uBACHqN,MAAqD5S,EAA9Ci7J,GAAiBW,2BAAkC,6BACjD,6BACTl3I,UAAWof,EACXwI,SAAUxI,IAA+Bm3H,GAAiBW,8BAG9D/5J,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,mCAAmCyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACvEV,EAAK,4BAEJ,KC/DV,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ,CACL+vB,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GACjDi6G,oBAAqBn9G,SAAQgrJ,EAAAA,EAAAA,KAA0B9nJ,OAJzCD,EAnDYgoJ,EAC9Bh4H,uBAAsBkqF,sBAAqB1jF,iBAE3C,MAAM,4BAAEqjF,EAA2B,iBAAE9nF,IAAqBj0B,EAAAA,EAAAA,MACpD5R,GAAOD,EAAAA,EAAAA,KACPg8J,EAAqC,WAAfzxH,GAA0C,aAAfA,EAEjD0xH,GAAkC7pJ,EAAAA,EAAAA,IACrCk9D,GAAcs+C,EAA4B,CAAEK,oBAAqB3+C,MAG9DokE,GAAyBthI,EAAAA,EAAAA,IAAgB,KAC7C0zB,EAAiB,CACfQ,eAAgB,aAChB,IAGJ,OACExkC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACGgyH,GACCl6J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,gBACZssC,QAAS0hF,EACTp4D,QAASomG,IAEXn6J,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,mCAAmCyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,IACvEmD,EAAAA,GAAAA,GAAW7D,EAAK,oBAAqB,CAAC,SAI7C6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPq/B,YAAa3kC,EAAAA,GAAAC,cAACuB,GAAAA,EAAQ,CAAC7D,UAAU,0BAA0B+D,KAAK,UAAUC,KAAK,QAC/E3D,QAAS4zI,GAEezzI,EAAvB8jC,EAA4B,mCAA2C,2BAE1EjiC,EAAAA,GAAAC,cAAA,KACEtC,UAAU,gDACVyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAGtBV,EADH8jC,EACQ,uCACA,gCAGZ,K,gBCtEP,MC0GA,IAAezkC,EAAAA,EAAAA,KAnFyC48J,EACtD7jI,gBACA8jI,yBACAC,+BAEA,MAAM,aACJC,EAAY,mBAAEC,EAAkB,mBAAE3oJ,EAAkB,iBAAEkyB,IACpDh0B,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,MAENu8J,EAAgCC,EAA8BC,IAAiCn8J,EAAAA,EAAAA,IAAQ,GAGxGs7D,GAAWvsD,EAAAA,EAAAA,IAAyB,OAE1C9O,EAAAA,EAAAA,KAAU,KACH47J,GACHE,EAAa,CAAEv6H,OAAQzJ,GACzB,GACC,CAAC8jI,EAAwB9jI,EAAegkI,IAE3C,MAAMK,GAAmBn3J,EAAAA,EAAAA,KAAak9I,IACpC6Z,EAAmB,CACjB7Z,OACAka,YAAY,IAEd92H,EAAiB,CACfr9B,QAASvI,EAAK,4CACd,GACD,CAACA,EAAM4lC,EAAkBy2H,IAEtBM,GAAsBr3J,EAAAA,EAAAA,KAAY,KACtCk3J,IACA9oJ,EAAmB,CAAExL,MAAOi0J,GAA4B,GACvD,CAACK,EAA+B9oJ,EAAoByoJ,IAEjDS,GAAyBt3J,EAAAA,EAAAA,KAAY,KACzCq2D,EAASpsD,SAASstJ,OAAO,GACxB,IAEH,OACEh7J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNj2G,KAAK,aACLnH,QAAS+8J,GAET/6J,EAAAA,GAAAC,cAACg7J,GAAAA,EAAY,CACX/pJ,SAAU0pJ,EACV9gG,SAAUA,IAEX37D,EAAKm8J,EACF,yCACA,wCAELA,GACCt6J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNz2E,YAAa3kC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAAC5vB,MAAOi0J,EAA0B34J,KAAK,OAAOhE,UDlFhB,aCmFlDK,QAAS08J,EACTjkJ,aAAW,GAEVtY,EAAKm8J,EAAyB5uJ,QAC3B,yCACA,0CACJ1L,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQo2J,EACR51J,QAAS81J,EACT1iJ,KAAM9Z,EAAK,8BACXonC,aAAcpnC,EAAK,UACnBqnC,eAAgBs1H,EAChBr1H,sBAAoB,KAI1BzlC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,mCAAmCyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACvEV,EAAK,yCAEJ,IC8CV,SAAS+8J,IAAkB,OACzBjC,EAAM,QACNhwH,EAAO,eACP4iG,EAAc,kBACdsvB,IAOA,MAAM,qBAAEnvC,IAAyBj8G,EAAAA,EAAAA,MAC3B9R,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KAEPg9J,GAAoBx8J,EAAAA,EAAAA,KAAQ,KAChC,MAAMy8J,EAAYpC,IAAWhtB,EAAAA,GAAgBktB,kBACvCv7J,EAAU,CACd,CAAE8S,MAAO,YAAaK,MAAO9S,EAAQ,iBACrC,CACEyS,MAAO,WACPK,MAAOoqJ,EACLn7J,EAAAA,GAAAC,cAACyyI,GAAmB,CAAC3hI,MAAO9S,EAAQ,iBAEpCA,EAAQ,eAEV00I,OAAQwoB,IAeZ,OAXIE,GACFz9J,EAAQ8B,KAAK,CACXgR,MAAO,SACPK,MAAOoqJ,EACLn7J,EAAAA,GAAAC,cAACyyI,GAAmB,CAAC3hI,MAAO9S,EAAQ,eAEpCA,EAAQ,aAEV00I,OAAQwoB,IAGLv9J,CAAO,GACb,CAACK,EAASg7J,EAAQkC,IAEfG,GAAwB18J,EAAAA,EAAAA,KAAQ,IAChCq6J,IAAWhtB,EAAAA,GAAgBktB,kBACtB,CACLoC,kBAAkB,EAClBC,mBAAmB,GAIhB,CACLD,iBAA0C,WAAxBtyH,GAASR,WAC3B+yH,kBAA2C,cAAxBvyH,GAASR,aAE7B,CAACQ,EAASgwH,IAEP5sC,EAAa2sC,GAAcC,GAE3B/oD,GAAkBtxG,EAAAA,EAAAA,KAAQ,KAC9B,OAAQq6J,GACN,KAAKhtB,EAAAA,GAAgB+e,aACnB,OAAO7sJ,EAAK,oBACd,KAAK8tI,EAAAA,GAAgB2e,gBACnB,OAAO3sJ,EAAQ,cACjB,KAAKguI,EAAAA,GAAgBktB,kBACnB,OAA6Cl7J,EAAd,cAAxBgrC,GAASR,WAAqC,mBAA8B,qBAErF,KAAKwjG,EAAAA,GAAgBif,qBACnB,OAAOjtJ,EAAQ,4BACjB,QACE,OACJ,GACC,CAACA,EAASE,EAAM86J,EAAQhwH,IAErBwyH,GAAa78J,EAAAA,EAAAA,KAAQ,KACzB,OAAQq6J,GACN,KAAKhtB,EAAAA,GAAgB0e,mBACnB,OAAO1sJ,EAAQ,qBACjB,KAAKguI,EAAAA,GAAgBktB,kBACnB,OAAOl7J,EAAQ,sBACjB,KAAKguI,EAAAA,GAAgB2e,gBACnB,OAAO3sJ,EAAQ,iBACjB,KAAKguI,EAAAA,GAAgB4e,oBACnB,OAAO5sJ,EAAQ,4BACjB,KAAKguI,EAAAA,GAAgB6e,WACnB,OAAO7sJ,EAAQ,mBACjB,KAAKguI,EAAAA,GAAgB8e,gBACnB,OAAO9sJ,EAAQ,wBACjB,KAAKguI,EAAAA,GAAgB+e,aACnB,OAAO7sJ,EAAK,qBACd,KAAK8tI,EAAAA,GAAgBgf,kBACnB,OAAOhtJ,EAAQ,wBACjB,KAAKguI,EAAAA,GAAgBif,qBACnB,OAAOjtJ,EAAQ,6BACjB,KAAKguI,EAAAA,GAAgBmf,kBACnB,OAAOntJ,EAAQ,eACjB,KAAKguI,EAAAA,GAAgBof,iBACnB,OAAOptJ,EAAQ,gBACjB,KAAKguI,EAAAA,GAAgBitB,gBACnB,OAAOj7J,EAAQ,cACjB,QACE,OACJ,GACC,CAACA,EAASE,EAAM86J,IAEbyC,GAAkBprJ,EAAAA,EAAAA,IACtB,CAAC23B,EAAoBwtF,EAAoB0gC,EAA8BC,KACrE,MAAMuF,EAAe1zH,GAASloC,QAAU,EAClC67J,EAAenmC,GAAS11H,QAAU,EAClC87J,EAA8B,UAAhBzF,EAGpB,IAFiBuF,IAAgBC,IAEfC,EAChB,OAA4B59J,EAArBk4J,EAA6B,iBAA4B,qBAC3D,GAAIA,EACT,OAAOl4J,EAAQ,sBAGjB,MAAM69J,EAAkBH,EAAe,EAAI19J,EAAQ,QAAS09J,QAAgB98J,EACtEk9J,EAAkBH,EAAe,EAAI39J,EAAQ,QAAS29J,QAAgB/8J,EAK5E,MAAO,CAHkBg9J,EAAc19J,EAAK,oBAAsB,GAC9CA,EAAK04J,YAAY,CAACiF,EAAiBC,GAAiBj8H,OAAO9wB,WAExC8wB,OAAO9wB,SAASga,KAAK,IAAI,IAI9DgzI,GAAgBp9J,EAAAA,EAAAA,KAAQ,IACrB88J,EACLzyH,GAASU,aACTV,GAASytH,aACTztH,GAASktH,mBACTltH,GAASmtH,cAEV,CAACntH,IAEEgzH,GAAcr9J,EAAAA,EAAAA,KAAQ,IACnB88J,EAAgBzyH,GAASY,aAAcZ,GAASutH,eACtD,CAACvtH,IAEE0B,GAAyBlnC,EAAAA,EAAAA,KAAaiN,IAC1Cs7G,EAAqB,CACnBK,WAAYA,EACZ5jF,WAAY/3B,GACZ,GACD,CAAC27G,IAEE6vC,EAAwB,MAC5B,OAAQjD,GACN,KAAKhtB,EAAAA,GAAgB0e,mBACnB,OAAO1e,EAAAA,GAAgB6f,kCACzB,KAAK7f,EAAAA,GAAgB2e,gBACnB,OAAO3e,EAAAA,GAAgBqf,+BACzB,KAAKrf,EAAAA,GAAgB4e,oBACnB,OAAO5e,EAAAA,GAAgBsf,mCACzB,KAAKtf,EAAAA,GAAgB6e,WACnB,OAAO7e,EAAAA,GAAgBuf,0BACzB,KAAKvf,EAAAA,GAAgB8e,gBACnB,OAAO9e,EAAAA,GAAgB8f,+BACzB,KAAK9f,EAAAA,GAAgB+e,aACnB,OAAO/e,EAAAA,GAAgB+f,4BACzB,KAAK/f,EAAAA,GAAgBgf,kBACnB,OAAOhf,EAAAA,GAAgBggB,iCACzB,KAAKhgB,EAAAA,GAAgBof,iBACnB,OAAOpf,EAAAA,GAAgBkgB,gCACzB,KAAKlgB,EAAAA,GAAgBitB,gBACnB,OAAOjtB,EAAAA,GAAgBmgB,+BACzB,KAAKngB,EAAAA,GAAgBif,qBACnB,OAAOjf,EAAAA,GAAgBigB,oCACzB,QACE,OAAOjgB,EAAAA,GAAgBwf,iCAE5B,EAzB6B,GA2BxB0Q,EAAuB,MAC3B,OAAQlD,GACN,KAAKhtB,EAAAA,GAAgB0e,mBACnB,OAAO1e,EAAAA,GAAgBogB,iCACzB,KAAKpgB,EAAAA,GAAgB2e,gBACnB,OAAO3e,EAAAA,GAAgByf,8BACzB,KAAKzf,EAAAA,GAAgB4e,oBACnB,OAAO5e,EAAAA,GAAgB0f,kCACzB,KAAK1f,EAAAA,GAAgB6e,WACnB,OAAO7e,EAAAA,GAAgB2f,yBACzB,KAAK3f,EAAAA,GAAgB8e,gBACnB,OAAO9e,EAAAA,GAAgBqgB,8BACzB,KAAKrgB,EAAAA,GAAgB+e,aACnB,OAAO/e,EAAAA,GAAgBsgB,2BACzB,KAAKtgB,EAAAA,GAAgBgf,kBACnB,OAAOhf,EAAAA,GAAgBugB,gCACzB,KAAKvgB,EAAAA,GAAgBof,iBACnB,OAAOpf,EAAAA,GAAgBygB,+BACzB,KAAKzgB,EAAAA,GAAgBitB,gBACnB,OAAOjtB,EAAAA,GAAgB0gB,8BACzB,KAAK1gB,EAAAA,GAAgBif,qBACnB,OAAOjf,EAAAA,GAAgBwgB,mCACzB,QACE,OAAOxgB,EAAAA,GAAgB4f,gCAE5B,EAzB4B,GA2B7B,OACE7rJ,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAAY48J,GAC9Ez7J,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAO,cAAa8pH,IACpBzuH,QAASw9J,EACTlqJ,SAAUy5B,EACVx5B,SAAU83B,GAASR,aAEpBynE,GACClwG,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,mCAAmCyD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAAYqxG,KAG3FirD,IAAsBG,EAAsBE,mBAAqBF,EAAsBC,mBACvFv7J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAC/DZ,EAAQ,sBAEVq9J,EAAsBE,mBACrBx7J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNj2G,KAAK,WAELnH,QAASA,KACP6tI,EAAeqwB,EAAsB,GAGvCl8J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,4BACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,gBACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYq+J,KAIjCV,EAAsBC,kBACrBv7J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EACNj2G,KAAK,cAELnH,QAASA,KACP6tI,EAAeswB,EAAqB,GAGtCn8J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,4BACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,eACjC+B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYs+J,MAMrCd,GAAqBn7J,EAAAA,GAAAC,cAACkzI,GAAiB,MAG9C,CAEA,UAAe31I,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU+mJ,aACT,IAAImD,EACAC,EAEJ,MAAM,cACJ9lI,EACAie,UAAU,QACRvL,EACA0uG,OAAO,yBACL2kB,KAGFpqJ,EAEEsrI,GAAsBnrG,EAAAA,EAAAA,KAAmBngC,EAAQqkB,GAEvD,OAAQ0iI,GACN,KAAKhtB,EAAAA,GAAgB0e,mBACnByR,EAAiBnzH,EAAQoxB,YACzBgiG,EAAmBpzH,EAAQszH,WAC3B,MAEF,KAAKtwB,EAAAA,GAAgB2e,gBACnBwR,EAAiBnzH,EAAQ6tH,SACzB,MAEF,KAAK7qB,EAAAA,GAAgB4e,oBACnBuR,EAAiBnzH,EAAQ8tH,aACzB,MAEF,KAAK9qB,EAAAA,GAAgB6e,WACnBsR,EAAiBnzH,EAAQ20G,IACzB,MAEF,KAAK3R,EAAAA,GAAgB8e,gBACnBqR,EAAiBnzH,EAAQ+tH,SACzB,MAEF,KAAK/qB,EAAAA,GAAgB+e,aACnBoR,EAAiBnzH,EAAQypD,MACzB,MAEF,KAAKu5C,EAAAA,GAAgBitB,gBACrB,KAAKjtB,EAAAA,GAAgBof,iBACnB+Q,EAAiBnzH,EAAQiuH,UACzBmF,EAAmBpzH,EAAQuzH,SAC3B,MAEF,KAAKvwB,EAAAA,GAAgBgf,kBACnBmR,EAAiBnzH,EAAQguH,SACzB,MAEF,KAAKhrB,EAAAA,GAAgBif,qBACnBkR,EAAiBnzH,EAAQmuH,cACzB,MAEF,KAAKnrB,EAAAA,GAAgBmf,kBACnBgR,EAAiBnzH,EAAQouH,WAI7B,OAAK+E,EAQE,CACLA,iBACAC,mBACA9lI,cAAeA,EACf8jI,uBAAwBrrJ,QAAQwuI,GAChC8c,yBAA0B9c,GAAqBvoH,cAC/CkmI,kBAAmBlC,IAAWhtB,EAAAA,GAAgBif,wBAAyBvnH,EAAAA,EAAAA,KAA2BzxB,GAClGoqJ,2BACAr6H,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,IAf1C,CACLqkB,cAAeA,EACf8jI,uBAAwBrrJ,QAAQwuI,GAChC8c,yBAA0B9c,GAAqBvoH,cAalD,GA/EehjB,EA9WyCwqJ,EAC3DxD,SACAv7J,WACA0+J,iBACAC,mBACA9lI,gBACA8jI,yBACAC,2BACAa,oBACAtvB,iBACAtsE,UACA+8F,2BACAr6H,2BAEA,MAAM9jC,GAAOC,EAAAA,GAAAA,MAEP,4BAAE0tH,EAA2B,iBAAE/nF,IAAqBh0B,EAAAA,EAAAA,OAE1Dwd,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAMm9F,GAA4BpsJ,EAAAA,EAAAA,IAAgB,KAC3C2xB,EAYL6pF,EAA4B,CAC1BwwC,0BAA2BA,IAZ3Bv4H,EAAiB,CACfr9B,QAASvI,EAAK,qCACdgI,OAAQ,CACNA,OAAQ,mBACR+8H,QAAS,CAAC,GAEZq2B,WAAY,CAAEv4J,IAAK,QACnBmE,KAAM,QAMR,IAGEw3J,GAAkB/9J,EAAAA,EAAAA,KAAQ,KAC9B,OAAQq6J,GACN,KAAKhtB,EAAAA,GAAgBof,iBACnB,OAAOpf,EAAAA,GAAgBitB,gBACzB,KAAKjtB,EAAAA,GAAgB0e,mBACnB,MAAsC,WAA/ByR,GAAgB3zH,WAA0BwjG,EAAAA,GAAgBktB,uBAAoBt6J,EAEvF,QACE,OACJ,GACC,CAACu9J,EAAgBnD,IAEpB,OACEj5J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACZs7J,IAAWhtB,EAAAA,GAAgB+e,cAC1BhrJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACtH,QAAS0+J,GACjB18J,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,8BACZ6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACP7nC,GAAG,OACHmf,UAAWof,EACXlxB,MAAkC5S,EAA3Bm+J,EAAgC,kBAA0B,sBACjE7xH,QAAS6xH,KAGbt8J,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,mCAAmCyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACvEV,EAAK,gCAAiC,CACrCgH,KAAMnF,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,OAAO5E,UAAU,cAClCs5F,KAAM94F,EAAK,uBACV,CACD69C,WAAW,MAKnBh8C,EAAAA,GAAAC,cAACi7J,GAAiB,CAChBjC,OAAQA,EACRhwH,QAASmzH,EACTvwB,eAAgBA,EAChBsvB,kBAAmBA,IAEpBlC,IAAWhtB,EAAAA,GAAgB4e,qBAAsD,cAA/BuR,GAAgB3zH,YACjEzoC,EAAAA,GAAAC,cAACm6J,GAAiC,CAChC7jI,cAAeA,EACf8jI,uBAAwBA,EACxBC,yBAA0BA,IAG7BrB,IAAWhtB,EAAAA,GAAgB2e,iBAC1B5qJ,EAAAA,GAAAC,cAACg6J,GAAuB,CAACxxH,WAAY2zH,GAAgB3zH,aAEtDwwH,IAAWhtB,EAAAA,GAAgB+e,cAC1BhrJ,EAAAA,GAAAC,cAACo5J,GAAoB,MAEtBsD,GACC38J,EAAAA,GAAAC,cAACi7J,GAAiB,CAChBjC,OAAQ0D,EACR1zH,QAASozH,EACTxwB,eAAgBA,IAGhB,KCrGJ+wB,GAAmB,CAACC,GAAAA,IAyK1B,SAASC,GAA0B5qJ,EAAqB+mJ,GACtD,MAAM,QAAEhwH,GAAY/2B,EAAOsiC,SAC3B,OAAQykH,GACN,KAAKhtB,EAAAA,GAAgB6f,kCACrB,KAAK7f,EAAAA,GAAgBogB,iCACnB,OAAOpjH,EAAQoxB,YACjB,KAAK4xE,EAAAA,GAAgBqf,+BACrB,KAAKrf,EAAAA,GAAgByf,8BACnB,OAAOziH,EAAQ6tH,SACjB,KAAK7qB,EAAAA,GAAgBsf,mCACrB,KAAKtf,EAAAA,GAAgB0f,kCACnB,OAAO1iH,EAAQ8tH,aACjB,KAAK9qB,EAAAA,GAAgBuf,0BACrB,KAAKvf,EAAAA,GAAgB2f,yBACnB,OAAO3iH,EAAQ20G,IACjB,KAAK3R,EAAAA,GAAgB8f,+BACrB,KAAK9f,EAAAA,GAAgBqgB,8BACnB,OAAOrjH,EAAQ+tH,SACjB,KAAK/qB,EAAAA,GAAgB+f,4BACrB,KAAK/f,EAAAA,GAAgBsgB,2BACnB,OAAOtjH,EAAQypD,MACjB,KAAKu5C,EAAAA,GAAgBkgB,gCACrB,KAAKlgB,EAAAA,GAAgBygB,+BACnB,OAAOzjH,EAAQiuH,UACjB,KAAKjrB,EAAAA,GAAgBmgB,+BACrB,KAAKngB,EAAAA,GAAgB0gB,8BACnB,OAAO1jH,EAAQuzH,SACjB,KAAKvwB,EAAAA,GAAgBggB,iCACrB,KAAKhgB,EAAAA,GAAgBugB,gCACnB,OAAOvjH,EAAQguH,SACjB,KAAKhrB,EAAAA,GAAgBigB,oCACrB,KAAKjgB,EAAAA,GAAgBwgB,mCACnB,OAAOxjH,EAAQmuH,cACjB,KAAKnrB,EAAAA,GAAgB4f,gCACrB,KAAK5f,EAAAA,GAAgBwf,iCACnB,OAAOxiH,EAAQouH,WACjB,KAAKprB,EAAAA,GAAgBgH,sBACnB,OAAOhqG,EAAQ+oG,eAIrB,CAEA,UAAex0I,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU+mJ,aACF,CACL1iI,cAAerkB,EAAOqkB,cACtBie,SAAUsoH,GAA0B5qJ,EAAQ+mJ,MAJ9BhnJ,EAlNsD8qJ,EACxEC,cACAC,sBACAC,uBACAjE,SACAv7J,WACA64B,gBACAie,WACA2oH,aAAY,EACZ59F,cAEA,MAAM,mBAAE69F,IAAuBrtJ,EAAAA,EAAAA,MAEzB9R,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KAEPi/J,GAAoCz+J,EAAAA,EAAAA,KAAQ,KACzC,CACL0+J,cAAc,EACd57J,KAAM,OACN0D,MAAOjH,EAAK,oBACZo/J,WAAY,OACZC,gBAAgB,EAChBC,YAAa,KAEd,CAACt/J,IAEEu/J,GAAmB9+J,EAAAA,EAAAA,KAAQ,IACxB,CAACy+J,IACP,CAACA,IAEEM,GAAqB/+J,EAAAA,EAAAA,KAAQ,IAC5B41C,EAIDwoH,EACK,IAAIxoH,EAAS7K,gBAAiB6K,EAASkiH,cAEvC,IAAIliH,EAAS3K,gBAAiB2K,EAASgiH,cANvC,IAQR,CAACwG,EAAaxoH,IACXopH,GAAwBh/J,EAAAA,EAAAA,KAAQ,IAC/B41C,EAGDA,EAAS2hH,mBAA6B,CAAC0G,GAAAA,GAAoBn7J,MAClC,UAAzB8yC,EAAS4hH,aAA2B4G,EAAsB,CAACK,EAAe37J,MACvE,GAJE,IAKR,CAAC8yC,EAAUwoH,EAAaK,KACpBv3H,EAAaC,IAAkB71B,EAAAA,EAAAA,IAAiB,KAChDq3B,EAAeC,IAAoBt3B,EAAAA,EAAAA,KAAkB,IACrDu3B,EAAuBC,IAA4Bx3B,EAAAA,EAAAA,IAAmBytJ,IACtEE,EAA0BC,IAA+B5tJ,EAAAA,EAAAA,IAA2B0tJ,IAG3Fn/J,EAAAA,EAAAA,KAAU,KACHf,IACHgqC,EAAyBi2H,GACzBG,EAA4BF,GAC9B,GACC,CAAClgK,EAAUkgK,EAAuBD,IAErC,MAAMx5B,GAAsBC,EAAAA,GAAAA,IAA8B3E,EAAAA,KACpD4E,GAA2BD,EAAAA,GAAAA,IAA8BE,EAAAA,KACzDt+F,GAAepnC,EAAAA,EAAAA,KAAQ,KAE3B,MAAM6rD,GAAY7Z,EAAAA,EAAAA,MAAY8Z,MAAM/hB,KAC9BtB,GAAYuJ,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAE9B8sF,GAAUvvF,EAAAA,GAAAA,IAAO,IAAIi+F,GAAuB,MAAOE,GAA4B,KAClFvkG,QAAQvvB,IACP,MAAMmC,EAAO+3C,EAAUl6C,GACjB0hC,EAAO5K,EAAU92B,GACjBo8B,EAAYsF,IAAQ4b,EAAAA,EAAAA,IAAc5b,GAClCtc,EAAYjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,GACxC,QAASyqJ,GAAalrH,IACjB1hC,IAAWgmB,GACXhmB,IAAWwtJ,EAAAA,MACVpoI,IAAcgX,CAAS,IAG3BqxH,GAAgB73H,EAAAA,GAAAA,IAAmB,CAAEC,IAAKqvF,EAASpvF,MAAOP,IAGhE,OAAIA,EAAoBk4H,GAEjB93H,EAAAA,GAAAA,IAAO,IACTy3H,KACAloC,GACH,GACD,CAAC0O,EAAqBE,EAA0Bs5B,EAAoB73H,EAAavP,EAAe4mI,IAE7Fc,GAAiCx6J,EAAAA,EAAAA,KAAaiN,IAClDotJ,EAA4BptJ,GAC5B82B,GAAiB,EAAK,GACrB,IAEGO,GAAiCtkC,EAAAA,EAAAA,KAAaiN,IAClDg3B,EAAyBh3B,GACzB82B,GAAiB,EAAK,GACrB,IAEGQ,GAAevkC,EAAAA,EAAAA,KAAY,KAC/B25J,EAAmB,CACjB/wC,WAAY2sC,GAAcC,GAC1B+D,YAAahuJ,QAAQguJ,GACrBkB,WAAYz2H,EACZ02H,iBAAkBN,EAAyB1rI,SAAS0qI,GAAAA,GAAoBn7J,YAAS7C,EACjFu3J,YAAe8G,EACVW,EAAyB1rI,SAASkrI,EAAe37J,MAAQ,QAAU,WADjC,SAIzC69D,GAAS,GACR,CACDy9F,EACAE,EACAW,EACAp2H,EACA83B,EACA05F,EACAoE,IAcF,OAXA9vI,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAURv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,wBACbqC,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACT0+F,WARAi4B,EAA4BL,GAC5BM,GAAwBF,EAAoBU,OAAhD,EAQIn3H,QAASP,GAAgB,GACzBL,YAAa8B,EACbw9F,mBAAoB44B,EACpBn3H,YAAaZ,EACba,kBAAiC1oC,EAAd++J,EAAsB,yBAAoC,yBAC7E93B,uBAAuB,mBACvBt+F,cAAc,0BACdC,cAAY,EACZG,oBAAqBe,EACrBq9F,2BAA4B64B,EAC5Bh3H,eAAgBlB,EAChBmB,eAAa,EACbE,cAAc,WACdN,oBAAkB,EAClBK,YAAU,IAGZnnC,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAASb,EACTvpC,QAASgqC,EACTlyB,UAAyB7X,EAAd++J,EAAsB,cAAyB,eAE1Dh9J,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAET,KC/IV,IAAe/E,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAEksJ,EAAM,UAAEv8G,GAAc3vC,EAE9B,MAAO,CACL0vC,mBAAoBC,EAAUD,mBAC9By8G,iBAAkBD,GAAQE,gBAC3B,GAPersJ,EA7CqCssJ,EACvD7gK,WACAkkD,qBACAy8G,mBACA9+F,cAEA,MAAM,mBAAEi/F,IAAuBzuJ,EAAAA,EAAAA,OAE/Bwd,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAM3hE,GAAUgB,EAAAA,EAAAA,KAAQ,KACrBgjD,GAAsB,IAAI9hB,QAAQmjE,IAAuBA,EAAkBuI,aACzEprG,KAAK6iG,IAAiB,CACrBlyF,MACE/Q,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACmjD,GAAAA,EAAmB,CAACnS,SAAUgyD,EAAkBhyD,SAAU2Q,mBAAoBA,IAC9EqhD,EAAkB79F,OAGvBsL,MAAOuyF,EAAkBhyD,SAASwtH,cAErC,CAAC78G,IAEE0lC,GAAe7jF,EAAAA,EAAAA,KAAawtC,IAChCutH,EAAmB,CACjBvtH,SAAU,CAAEvvC,KAAM,QAAS+8J,SAAUxtH,IACrC,GACD,CAACutH,IAEJ,OACEx+J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,wEACbqC,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,0BACL3E,QAASA,EACTuT,SAAUktJ,EACVntJ,SAAUo2E,EACVo3E,UAAQ,IAEN,KCjCJh9G,GAAwB,IAAM5oC,EAAAA,EA0IpC,IAAetb,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ,KACF8+C,EAAAA,GAAAA,IAAK9+C,EAAOsiC,SAASmjG,MAAO,CAC7B,wBACA,gCAEFgnB,YAAazsJ,EAAOutE,SAAS+pB,MAAMC,OACnCmuC,kBAAmB1lI,EAAO62E,aAAaygB,MAAMC,OAC7Cd,gBAAiBz2F,EAAOutE,SAASipB,SACjC41D,gBAAiBpsJ,EAAOksJ,QAAQE,gBAChC18G,mBAAoB1vC,EAAO2vC,UAAUD,mBACrCi2F,uBAAuBluC,EAAAA,EAAAA,KAA4Bz3F,MAZrCD,EAtHgC2sJ,EAClDlhK,WACAihK,cACA/mB,oBACAjvC,kBACA21D,kBACAO,wBACAC,8BACAl9G,qBACAi2F,wBACAt4E,UACAssE,qBAEA,MAAM,iBACJrc,EAAgB,eAChBnlC,IACEt6E,EAAAA,EAAAA,MACE5R,GAAOD,EAAAA,EAAAA,KAGP85I,GAAqBzqI,EAAAA,EAAAA,IAAuB,OAC1CuuF,QAASoB,IAAiCd,EAAAA,GAAAA,IAAwB,CAAEC,QAAS27C,IAE/EC,GAAwBx0I,EAAAA,EAAAA,KAAak7E,IACzC0L,EAAe,CACblB,eAAgBxK,EAAQwK,gBACxB,GACD,CAACkB,IAEE00E,GAAqCt7J,EAAAA,EAAAA,KAAa20F,IACtDo3B,EAAiB,CAAEsvC,4BAA6B1mE,GAAW,GAC1D,CAACo3B,IAEEwvC,GAA8Bv7J,EAAAA,EAAAA,KAAa20F,IAC/Co3B,EAAiB,CAAEqvC,sBAAuBzmE,GAAW,GACpD,CAACo3B,IAEEyvC,GAAcrgK,EAAAA,EAAAA,KAAQ,IAC1B+/J,GAAen+G,OAAOuK,QAAOiG,EAAAA,GAAAA,IAAK23C,EAAiBg2D,KAClD,CAACA,EAAah2D,IAOjB,OALAp7E,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,mBACZssC,QAASo0H,EACT9qG,QAASirG,IAEXh/J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP81G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB1gD,aAC9CpmF,KAAK,SAEJhH,EAAK,0BACLy5I,GAAqB53I,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,gCAAgCi6I,EAAkB73I,SAEzFu+J,GACCt+J,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,0BACVy9G,QAAM,EAENp9G,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgBqe,gBAE9CtqJ,EAAAA,GAAAC,cAACmjD,GAAAA,EAAmB,CAClBnS,SAAUqtH,EACV3gK,UAAU,2BACVgE,KAAM+/C,GACNE,mBAAoBA,IAEtB5hD,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,SAASQ,EAAK,uBAInC6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,uCAER6B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,sCACZssC,QAASq0H,EACT/qG,QAASgrG,IAEX/+J,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAC/CjD,EAAK,4CAGT8gK,GACCj/J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DV,EAAK,+BAER6B,EAAAA,GAAAC,cAAA,OAAKmX,IAAK4gI,GACPinB,EAAY7+J,KAAKo9F,GAChBx9F,EAAAA,GAAAC,cAACq3I,GAAc,CACbt2I,IAAKw8F,EAAW95F,GAChB85F,WAAYA,EACZE,oBAAqBR,EACrBl/F,QAASi6I,EACTh1H,QAAS40H,OAIf73I,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,SAC/CY,EAAAA,GAAAA,GAAW7D,EAAK,mBAAoB,CAAC,YAIxC,KC5GV,IAAeX,EAAAA,EAAAA,KAnCoC0hK,EACjDxhK,WAAU6hE,UAASssE,qBAEnB,MAAM1tI,GAAOD,EAAAA,EAAAA,KAEP0oB,GAAcnjB,EAAAA,EAAAA,KAAY,KAC9BooI,EAAeI,EAAAA,GAAgB0D,QAAQ,GACtC,CAAC9D,IAOJ,OALAt+G,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAACorI,GAAAA,EAAY,CACX1pI,KAAMiC,EAAAA,IACNC,OAAQC,GAAAA,EAAeiqI,gBACvBpwI,UAAU,0BAGZqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAC/CjD,EAAK,wCAIV6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gCACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACjE,QAAS4oB,GAAczoB,EAAK,+CAElC,I,gBCjBV,MA4EA,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACxC,MACMitJ,GADW7sJ,EAAAA,EAAAA,KAAeJ,GACDitJ,cAE/B,MAAO,CACLC,eAAeC,EAAAA,EAAAA,KAAoBntJ,EAAQ,MAC3CotJ,WAAYptJ,EAAO8lG,cAAcunD,uBACjCJ,gBACD,GARiBltJ,EA1EsCutJ,EACxDJ,gBACAE,aACAzoI,YACAq5B,QACA8oD,aACAvjD,WACA/3D,WACA6hE,UACA4/F,oBAGA,MAAMrlG,GAAWvsD,EAAAA,EAAAA,IAAyB,OACpC,SAAErK,IAAaC,EAAAA,EAAAA,MACfs8J,EAAsBv8J,EAAW,IAAM,KAEtCwN,EAAOgvJ,IAAYxvJ,EAAAA,EAAAA,IAAiB,KAE3CzR,EAAAA,EAAAA,KAAU,KACHia,EAAAA,IACH5J,YAAW,KACTgrD,EAASpsD,QAAS+sD,OAAO,GACxBglG,EACL,GACC,CAACA,IAEJ,MAAMthK,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAMogG,GAAoBl8J,EAAAA,EAAAA,KAAamN,IACjCs/C,GAAS8oD,GACXA,IAGF,MAAM5gB,EAAWxnF,EAAEC,OAAOH,MAAMovC,MAAM,EAAGw/G,GAErClnE,EAASr4F,SAAWu/J,GACtB7pG,EAAS2iC,GAGXsnE,EAAStnE,GACTxnF,EAAEC,OAAOH,MAAQ0nF,CAAQ,GACxB,CAAC4gB,EAAYsmD,EAAYpvG,EAAOuF,IAEnC,OACEz1D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAAC2/J,GAAAA,EAAuB,CAACjhF,QAASygF,EAAez9J,KArDvC,IAqDwDhE,UAAU,0BAC3EwhK,GACCn/J,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAC/CjD,EAAK,sCAAuCghK,KAKnDn/J,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gCACbqC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRV,MAAOA,EACP0G,IAAK0iD,EACLhB,UAAU,UACV/nD,MAAO5S,EAAK,iBACZ+xD,MAAOA,EACPh/C,SAAUyuJ,IAEX9oI,GAAa72B,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,OAEpB,KChCV,IAAervD,EAAAA,EAAAA,KApD4BqiK,EACzCniK,WAAU6hE,UAASssE,qBAEnB,MAAM1tI,GAAOD,EAAAA,EAAAA,KAOb,OALAqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQC,GAAAA,EAAemqI,KACvBC,WAAYC,GACZxsI,KAAM,IACNhE,UAAU,0BAGZqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,SAC/CY,EAAAA,GAAAA,GAAW7D,EAAK,uBAAwB,CAAC,SAI9C6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,OAELnH,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB4hB,6BAE7C1vJ,EAAK,mBAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,eAELnH,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB6hB,eAE7C3vJ,EAAK,oBAER6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,QAELnH,QAASA,IAAM6tI,EAAeI,EAAAA,GAAgB8hB,oCAE7C5vJ,EAAK,sBAGN,ICuGV,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAqB,CAACC,GAAU/M,WAC3C,CACLi6J,eAAeC,EAAAA,EAAAA,KAAoBntJ,EAAiB,UAAT/M,EAAmB,KAAO,SAFrD8M,EApI0C6tJ,EAC5DV,gBACA19J,OAAO,OACPm1B,YACAq5B,QACAxD,cACAqzG,gBACA/mD,aACAvjD,WACA/3D,WACA6hE,cAGA,MAAMzF,GAAWvsD,EAAAA,EAAAA,IAAyB,OACpC,SAAErK,IAAaC,EAAAA,EAAAA,MAEfs8J,EAAsBv8J,EAAW,IAAM,KACtCwN,EAAOgvJ,IAAYxvJ,EAAAA,EAAAA,IAAiB,KACpC8vJ,EAAgBC,EAAoBC,IAAwB1hK,EAAAA,EAAAA,IAAQ,IAE3EC,EAAAA,EAAAA,KAAU,KACHia,EAAAA,IACH5J,YAAW,KACTgrD,EAASpsD,QAAS+sD,OAAO,GACxBglG,EACL,GACC,CAACA,IAEJ,MAAME,GAAoBl8J,EAAAA,EAAAA,KAAamN,IACjCs/C,GAAS8oD,GACXA,IAGF0mD,EAAS9uJ,EAAEC,OAAOH,MAAM,GACvB,CAACsoG,EAAY9oD,IAYViwG,GAAa18J,EAAAA,EAAAA,KAAY,KAC7BgyD,GAAU,GACT,CAACA,IAEE2qG,GAAoB38J,EAAAA,EAAAA,KAAY,KACpCy8J,IACAzqG,GAAU,GACT,CAACA,EAAUyqG,IAER/hK,GAAOD,EAAAA,EAAAA,KAOb,OALAqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAAC2/J,GAAAA,EAAuB,CAACjhF,QAASygF,EAAez9J,KAnEvC,IAmEwDhE,UAAU,0BAClE,UAAT+D,GACC1B,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAC/CjD,EAAK,2BAKZ6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gCACbqC,EAAAA,GAAAC,cAAA,QAAMkG,OAAO,GAAGsvD,SAtCA7kD,IACpBA,EAAEkX,iBAEGgyC,EAASpsD,SAId+nD,EAAS/kD,EAAM,GAgCT1Q,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRgG,IAAK0iD,EACLppD,MAAOA,EACPooD,UAAWp3D,EACXqP,MAAO27C,EACPwD,MAAOA,EACPh/C,SAAUyuJ,IAGXjvJ,EACC1Q,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACP,KAAK,SAASm1B,UAAWA,EAAWzU,QAAM,GAAEjkB,EAAK,aAEzD6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLE,QAAM,EACN00B,UAAWA,EACXzU,QAAM,EACNpkB,QAAS+hK,EAAgBE,EAAqBE,GAE7ChiK,EAAK,mBAIX4hK,GACC//J,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,UAAU,SACV0G,OAAQ27J,EACR56J,MAAOjH,EAAK,wBACZ0G,QAASq7J,IAERl+J,EAAAA,GAAAA,GAAW7D,EAAK,4BAA6B,CAAC,KAAM,oBACrD6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,SACN+Q,QAAM,EACNjgB,QAAM,EACNxE,UAAU,wBACVK,QAASoiK,GAERjiK,EAAK,kBAER6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,UACN+Q,QAAM,EACNjgB,QAAM,EACNxE,UAAU,wBACVK,QAASkiK,GAER/hK,EAAK,cAMZ,KCtHV,IAAeX,EAAAA,EAAAA,KAhC0B6iK,EACvC3iK,WAAU6hE,UAAS1lB,cAEnB,MAAM17C,GAAOD,EAAAA,EAAAA,KAOb,OALAqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qCACbqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQC,GAAAA,EAAemqI,KACvBC,WAAYC,GACZxsI,KAAM,IACNhE,UAAU,0BAGZqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iCAAiCyD,IAAI,QAC/CjD,EAAK,+BAIV6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gCACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACjE,QAAS67C,GAAU17C,EAAK,kCAE9B,ICuWV,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IAAM,IAAuBA,EAAO8lG,iBADnB/lG,EAxX6BquJ,EAC/C30B,gBACAC,cACA9uE,QACAm7C,OACAphF,YACAiiF,WACAymD,yBACAh8B,WACA7lI,WACAmuI,iBACAtsE,cAEA,MAAM,eACJghG,EAAc,cACdC,EAAa,gBACbC,EAAe,oBACfC,EAAmB,sBACnBC,EAAqB,cACrBC,IACE7wJ,EAAAA,EAAAA,MAEE5R,GAAOC,EAAAA,GAAAA,KACPH,GAAUC,EAAAA,EAAAA,MAEhBO,EAAAA,EAAAA,KAAU,KACJ8gK,IACE5zB,IAAkBM,EAAAA,GAAgBuhB,sBACpC3hB,EAAeI,EAAAA,GAAgByhB,2BACtB/hB,IAAkBM,EAAAA,GAAgBwhB,oBAC3C5hB,EAAeI,EAAAA,GAAgB0hB,wBAEnC,GACC,CAAChiB,EAAeE,EAAgB0zB,IAEnC,MAAMzwB,GAAoBrrI,EAAAA,EAAAA,KAAY,KACpC8/H,EAAS,CAAE7hI,KAAM,UACjBmqI,EAAeI,EAAAA,GAAgBihB,iBAAiB,GAC/C,CAAC3pB,EAAUsI,IAERmD,GAAoBvrI,EAAAA,EAAAA,KAAaiN,IACrC6yH,EAAS,CAAE7hI,KAAM,cAAewhI,QAASxyH,IACzCm7H,EAAeI,EAAAA,GAAgBohB,wBAAwB,GACtD,CAAC9pB,EAAUsI,IAERqD,GAA2BzrI,EAAAA,EAAAA,KAAY,KAC3CooI,EAAeI,EAAAA,GAAgBqhB,qBAAqB,GACnD,CAACzhB,IAEEg1B,GAAwBp9J,EAAAA,EAAAA,KAAaiN,IACzC6yH,EAAS,CAAE7hI,KAAM,UAAWwhI,QAASxyH,IACrCm7H,EAAeI,EAAAA,GAAgBuhB,sBAAsB,GACpD,CAACjqB,EAAUsI,IAERi1B,GAAyBr9J,EAAAA,EAAAA,KAAaiN,IAC1C6yH,EAAS,CAAE7hI,KAAM,WAAYwhI,QAASxyH,IACtC6vJ,EAAe,IACVzjG,EACHkmE,MAAOtyH,EACP47G,UAAWA,KACTuf,EAAeI,EAAAA,GAAgB2hB,qBAAqB,GAEtD,GACD,CAACrqB,EAAUsI,EAAgB/uE,EAAOyjG,IAE/BnxB,GAA8B3rI,EAAAA,EAAAA,KAAaiN,IAC/C6yH,EAAS,CAAE7hI,KAAM,qBAAsBwhI,QAASxyH,IAChD8vJ,EAAc,CACZ9nD,gBAAiBhoG,EACjB47G,UAAWA,KACTuf,EAAeI,EAAAA,GAAgBkhB,uBAAuB,GAExD,GACD,CAACqT,EAAej9B,EAAUsI,IAEvB2D,GAA0B/rI,EAAAA,EAAAA,KAAaiN,IAC3C6yH,EAAS,CAAE7hI,KAAM,cAAewhI,QAASxyH,IACzCm7H,EAAeI,EAAAA,GAAgBmhB,2BAA2B,GACzD,CAAC7pB,EAAUsI,IAERk1B,GAA8Bt9J,EAAAA,EAAAA,KAAY,KAC9CooI,EAAeI,EAAAA,GAAgBshB,wBAAwB,GACtD,CAAC1hB,IAEEm1B,GAA2Bv9J,EAAAA,EAAAA,KAAaiN,IAC5C6yH,EAAS,CAAE7hI,KAAM,UAAWwhI,QAASxyH,IACrC6vJ,EAAe,IACVzjG,EACHm7C,KAAMvnG,EACN47G,UAAWA,KACTuf,EAAeI,EAAAA,GAAgB2hB,qBAAqB,GAEtD,GACD,CAACrqB,EAAUsI,EAAgB/uE,EAAOyjG,IAE/B7wB,GAAgBjsI,EAAAA,EAAAA,KAAaiN,IACjCkwJ,EAAc,CACZloD,gBAAiBhoG,EACjB47G,UAAWA,KACTuf,EAAeI,EAAAA,GAAgB0D,QAAQ,GAEzC,GACD,CAACixB,EAAe/0B,IAEbo1B,GAAqCx9J,EAAAA,EAAAA,KAAaiN,IACtD6yH,EAAS,CAAE7hI,KAAM,qBAAsBwhI,QAASxyH,IAChD8vJ,EAAc,CACZ9nD,gBAAiBhoG,EACjB47G,UAAWA,KACTuf,EAAeI,EAAAA,GAAgBwhB,mBAAmB,GAEpD,GACD,CAAC+S,EAAej9B,EAAUsI,IAEvBq1B,GAAsBz9J,EAAAA,EAAAA,KAAaiN,IACvC6yH,EAAS,CAAE7hI,KAAM,WAAYwhI,QAASxyH,IACtCgwJ,EAAoB,IACf5jG,EACHkmE,MAAOtyH,EACP47G,UAAWA,KACTuf,EAAeI,EAAAA,GAAgB2hB,qBAAqB,GAEtD,GACD,CAACrqB,EAAUsI,EAAgB/uE,EAAO4jG,IAE/BS,GAAkB19J,EAAAA,EAAAA,KAAas0D,IACnC4oG,EAAsB,CAAE5oG,QAAO,GAC9B,CAAC4oG,IAEJ,OAAQh1B,GACN,KAAKM,EAAAA,GAAgB+gB,cACnB,OACEhtJ,EAAAA,GAAAC,cAACogK,GAAkB,CACjBxmH,QAASi1F,EACTpxI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBihB,iBAChBjhB,EAAAA,GAAgBohB,wBAChBphB,EAAAA,GAAgBqhB,qBAChBrhB,EAAAA,GAAgBuhB,sBAChBvhB,EAAAA,GAAgByhB,0BAChBzhB,EAAAA,GAAgB2hB,sBAChBz7H,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBihB,iBACnB,OACEltJ,EAAAA,GAAAC,cAACmhK,GAAqB,CACpB10G,YAAazuD,EAAQ,uBACrB45D,YAAa55D,EAAQ,YACrBw3D,SAAUu5E,EACVtxI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBohB,wBAChBphB,EAAAA,GAAgBqhB,qBAChBrhB,EAAAA,GAAgBuhB,sBAChBvhB,EAAAA,GAAgByhB,0BAChBzhB,EAAAA,GAAgB2hB,sBAChBz7H,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBohB,wBACnB,OACErtJ,EAAAA,GAAAC,cAACmhK,GAAqB,CACpB5zB,iBAAkB1wE,EAAM27C,SACxB/rD,YAAazuD,EAAQ,yBACrB45D,YAAa55D,EAAQ,YACrBw3D,SAAUy5E,EACVxxI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBqhB,qBAChBrhB,EAAAA,GAAgBuhB,sBAChBvhB,EAAAA,GAAgByhB,0BAChBzhB,EAAAA,GAAgB2hB,sBAChBz7H,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBqhB,qBACnB,OACEttJ,EAAAA,GAAAC,cAAC6/J,GAA0B,CACzB36J,KAAK,OACLunD,YAAazuD,EAAQ,2BACrBw3D,SAAUorG,EACVnjK,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBuhB,sBAChBvhB,EAAAA,GAAgByhB,0BAChBzhB,EAAAA,GAAgB2hB,sBAChBz7H,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBuhB,sBACnB,OACExtJ,EAAAA,GAAAC,cAAC6/J,GAA0B,CACzB36J,KAAK,QACLzD,KAAK,QACLm1B,UAAWA,EACXq5B,MAAO4oD,GAAY36G,EAAK46G,YAAYD,GACpCE,WAAYynD,EACZ/zG,YAAazuD,EAAQ,sBACrB8hK,eAAa,EACbtqG,SAAUqrG,EACVpjK,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgByhB,0BAChBzhB,EAAAA,GAAgB2hB,sBAChBz7H,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgByhB,0BACnB,OACE1tJ,EAAAA,GAAAC,cAACu/J,GAAsB,CACrB3oI,UAAWA,EACXq5B,MAAO4oD,GAAY36G,EAAK46G,YAAYD,GACpCE,WAAYynD,EACZhrG,SAAU0rG,EACVzjK,SAAUA,GAAYkuI,IAAgBK,EAAAA,GAAgB2hB,qBACtDruF,QAASA,IAIf,KAAK0sE,EAAAA,GAAgB2hB,qBACnB,OACE5tJ,EAAAA,GAAAC,cAACi/J,GAA4B,CAC3BrzB,eAAgBA,EAChBnuI,SAAUA,EACV6hE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBghB,aACnB,OACEjtJ,EAAAA,GAAAC,cAAC4/J,GAAoB,CACnBh0B,eAAgBA,EAChBnuI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgB4hB,2BAChB5hB,EAAAA,GAAgBkhB,uBAChBlhB,EAAAA,GAAgBmhB,2BAChBnhB,EAAAA,GAAgBshB,wBAChBthB,EAAAA,GAAgB6hB,aAChB7hB,EAAAA,GAAgB8hB,kCAChB9hB,EAAAA,GAAgBwhB,mBAChBxhB,EAAAA,GAAgB0hB,uBAChB1hB,EAAAA,GAAgB2hB,sBAChBz7H,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgB4hB,2BACnB,OACE7tJ,EAAAA,GAAAC,cAACmhK,GAAqB,CACpBvqI,UAAWA,EACXq5B,MAAO4oD,GAAY36G,EAAK46G,YAAYD,GACpCE,WAAYynD,EACZxoD,KAAMA,EACNxiD,SAAU25E,EACV1xI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBkhB,uBAChBlhB,EAAAA,GAAgBmhB,2BAChBnhB,EAAAA,GAAgBshB,wBAChBthB,EAAAA,GAAgB2hB,sBAChBz7H,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBkhB,uBACnB,OACEntJ,EAAAA,GAAAC,cAACmhK,GAAqB,CACpB10G,YAAazuD,EAAQ,+BACrBw3D,SAAU+5E,EACV9xI,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBmhB,2BAChBnhB,EAAAA,GAAgBshB,wBAChBthB,EAAAA,GAAgB2hB,sBAChBz7H,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBmhB,2BACnB,OACEptJ,EAAAA,GAAAC,cAACmhK,GAAqB,CACpB5zB,iBAAkB1wE,EAAM27C,SACxB/rD,YAAazuD,EAAQ,yBACrBw3D,SAAUsrG,EACVrjK,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBshB,wBAChBthB,EAAAA,GAAgB2hB,sBAChBz7H,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBshB,wBACnB,OACEvtJ,EAAAA,GAAAC,cAAC6/J,GAA0B,CACzBjpI,UAAWA,EACXq5B,MAAO4oD,GAAY36G,EAAK46G,YAAYD,GACpCE,WAAYynD,EACZt7J,KAAK,OACLunD,YAAazuD,EAAQ,2BACrBw3D,SAAUurG,EACVtjK,SAAUA,GAAYkuI,IAAgBK,EAAAA,GAAgB2hB,qBACtDruF,QAASA,IAIf,KAAK0sE,EAAAA,GAAgB6hB,aACnB,OACE9tJ,EAAAA,GAAAC,cAACmhK,GAAqB,CACpBvqI,UAAWA,EACXq5B,MAAO4oD,GAAY36G,EAAK46G,YAAYD,GACpCE,WAAYynD,EACZxoD,KAAMA,EACNxiD,SAAUi6E,EACVhyI,SAAUA,EACV6hE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgB8hB,kCACnB,OACE/tJ,EAAAA,GAAAC,cAACmhK,GAAqB,CACpBvqI,UAAWA,EACXq5B,MAAO4oD,GAAY36G,EAAK46G,YAAYD,GACpCE,WAAYynD,EACZxoD,KAAMA,EACNxiD,SAAUwrG,EACVvjK,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgBwhB,mBAChBxhB,EAAAA,GAAgB0hB,uBAChB1hB,EAAAA,GAAgB2hB,sBAChBz7H,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgBwhB,mBACnB,OACEztJ,EAAAA,GAAAC,cAAC6/J,GAA0B,CACzB36J,KAAK,QACLzD,KAAK,QACLgrD,YAAazuD,EAAQ,sBACrBw3D,SAAUyrG,EACVxjK,SAAUA,GAAY,CACpBuuI,EAAAA,GAAgB0hB,uBAChB1hB,EAAAA,GAAgB2hB,sBAChBz7H,SAASy5G,GACXrsE,QAASA,IAIf,KAAK0sE,EAAAA,GAAgB0hB,uBACnB,OACE3tJ,EAAAA,GAAAC,cAACu/J,GAAsB,CACrB3oI,UAAWA,EACXq5B,MAAO4oD,GAAY36G,EAAK46G,YAAYD,GACpCE,WAAYynD,EACZhrG,SAAU0rG,EACVzjK,SAAUA,GAAYkuI,IAAgBK,EAAAA,GAAgB2hB,qBACtDruF,QAASA,IAIf,QACE,OACJ,KCxWI8hG,GAA0B7gH,OAAO2K,KAAK8gF,EAAAA,IAAiBlsI,OAAS,EAGhEuhK,GAAiB,CACrBr1B,EAAAA,GAAgB+gB,cAChB/gB,EAAAA,GAAgBihB,iBAChBjhB,EAAAA,GAAgBohB,wBAChBphB,EAAAA,GAAgBqhB,qBAChBrhB,EAAAA,GAAgBuhB,sBAChBvhB,EAAAA,GAAgByhB,0BAChBzhB,EAAAA,GAAgB2hB,qBAChB3hB,EAAAA,GAAgBghB,aAChBhhB,EAAAA,GAAgB4hB,2BAChB5hB,EAAAA,GAAgBkhB,uBAChBlhB,EAAAA,GAAgBmhB,2BAChBnhB,EAAAA,GAAgBshB,wBAChBthB,EAAAA,GAAgB6hB,aAChB7hB,EAAAA,GAAgB8hB,kCAChB9hB,EAAAA,GAAgBwhB,mBAChBxhB,EAAAA,GAAgB0hB,wBAGZ4T,GAAmB,CACvBt1B,EAAAA,GAAgB2D,iBAChB3D,EAAAA,GAAgB6D,iBAGZ0xB,GAAkB,CACtBv1B,EAAAA,GAAgBoB,QAChBpB,EAAAA,GAAgBC,oBAChBD,EAAAA,GAAgBE,kBAChBF,EAAAA,GAAgBG,8BAChBH,EAAAA,GAAgBI,yBAChBJ,EAAAA,GAAgBK,qBAChBL,EAAAA,GAAgBc,iCAChBd,EAAAA,GAAgBM,qBAChBN,EAAAA,GAAgBgB,iCAChBhB,EAAAA,GAAgBX,cAGZm2B,GAAkB,CACtBx1B,EAAAA,GAAgB8gB,oBAChB9gB,EAAAA,GAAgB6gB,gBAGZ4U,GAA+B,CACnCz1B,EAAAA,GAAgB6f,kCAChB7f,EAAAA,GAAgBogB,kCAGZsV,GAAkC,CACtC11B,EAAAA,GAAgBqf,+BAChBrf,EAAAA,GAAgByf,+BAGZkW,GAAgC,CACpC31B,EAAAA,GAAgBsf,mCAChBtf,EAAAA,GAAgB0f,mCAGZkW,GAAsB,CAC1B51B,EAAAA,GAAgBuf,0BAChBvf,EAAAA,GAAgB2f,0BAGZkW,GAA2B,CAC/B71B,EAAAA,GAAgB8f,+BAChB9f,EAAAA,GAAgBqgB,+BAGZyV,GAAwB,CAC5B91B,EAAAA,GAAgB+f,4BAChB/f,EAAAA,GAAgBsgB,4BAGZyV,GAA6B,CACjC/1B,EAAAA,GAAgBkgB,gCAChBlgB,EAAAA,GAAgBygB,gCAGZuV,GAA4B,CAChCh2B,EAAAA,GAAgBmgB,+BAChBngB,EAAAA,GAAgB0gB,+BAGZuV,GAA6B,CACjCj2B,EAAAA,GAAgBggB,iCAChBhgB,EAAAA,GAAgBugB,iCAGZ2V,GAAiC,CACrCl2B,EAAAA,GAAgBigB,oCAChBjgB,EAAAA,GAAgBwgB,oCAGZ2V,GAA8B,CAClCn2B,EAAAA,GAAgBwf,iCAChBxf,EAAAA,GAAgB4f,iCAGZwW,GAA2B,CAC/Bp2B,EAAAA,GAAgBgH,uBAwYlB,IAAez1I,EAAAA,EAAAA,KA3XgB8kK,EAC7B5kK,WACAiuI,gBACA42B,eACAC,kBACA32B,iBACAtsE,UACAkjG,2BAEA,MAAM,0BAAEC,IAA8B3yJ,EAAAA,EAAAA,MAGhC6b,GAAere,EAAAA,EAAAA,IAAuB,OAErCo1J,EAAYC,I/D9GZC,EAAAA,GAAAA,GAAW5/B,GAAcF,K+D+GzB+/B,EAAiBC,IAAsB7yJ,EAAAA,EAAAA,IAAiB,KAE/D8yJ,EAAAA,GAAAA,GAAgB,CACdp3I,eACAwI,SAAU,qBACT,CAACu3G,IAEJ,MAAMK,GAAc17H,EAAAA,EAAAA,IAAiB2yJ,IACnC,MAAMC,GAAiB5wJ,EAAAA,EAAAA,MAAes+B,EAAAA,EAAAA,OAAa25F,mBAAmB24B,eAElEv3B,IAAkBM,EAAAA,GAAgBX,cACpCo3B,KAG4B,IAA1BO,QAAsDpkK,IAAnBqkK,IAAiCA,EACtE3jG,GAAQ,IAKRosE,IAAkBM,EAAAA,GAAgBC,qBAC/BP,IAAkBM,EAAAA,GAAgBE,mBAClCR,IAAkBM,EAAAA,GAAgBG,+BAClCT,IAAkBM,EAAAA,GAAgBI,0BAErCv9H,YAAW,KACT0zJ,EAAgB,CAAE9gK,KAAM,SAAU,GA1Jd,KA+JtBiqI,IAAkBM,EAAAA,GAAgBK,sBAC/BX,IAAkBM,EAAAA,GAAgBM,qBAUvChtE,IAR4B,WAAtBgjG,EAAaj/B,KACfuI,EAAeI,EAAAA,GAAgBC,qBAE/BL,EAAeI,EAAAA,GAAgBE,mBAK1B,IAgSX,SAASg3B,EACPC,EACAC,EACAC,EACAjkI,GAEA,OACEr/B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACqpJ,GAAc,CACb3d,cAAeA,EACfpsE,QAASysE,EACTH,eAAgBA,EAChB0d,eAAgBgZ,EAAanmF,WAzSrC,SAAqCgnF,EAAyBG,GAC5D,MAAMC,EAA+C,CACnD,CAACv3B,EAAAA,GAAgB0e,oBAAqB+W,GAA6BvvI,SAASoxI,GAC5E,CAACt3B,EAAAA,GAAgB2e,iBAAkB+W,GAAgCxvI,SAASoxI,GAC5E,CAACt3B,EAAAA,GAAgB4e,qBAAsB+W,GAA8BzvI,SAASoxI,GAC9E,CAACt3B,EAAAA,GAAgB6e,YAAa+W,GAAoB1vI,SAASoxI,GAC3D,CAACt3B,EAAAA,GAAgB8e,iBAAkB+W,GAAyB3vI,SAASoxI,GACrE,CAACt3B,EAAAA,GAAgB+e,cAAe+W,GAAsB5vI,SAASoxI,GAC/D,CAACt3B,EAAAA,GAAgBof,kBAAmB2W,GAA2B7vI,SAASoxI,GACxE,CAACt3B,EAAAA,GAAgBitB,iBAAkB+I,GAA0B9vI,SAASoxI,GACtE,CAACt3B,EAAAA,GAAgBgf,mBAAoBiX,GAA2B/vI,SAASoxI,GACzE,CAACt3B,EAAAA,GAAgBif,sBAAuBiX,GAA+BhwI,SAASoxI,GAChF,CAACt3B,EAAAA,GAAgBmf,mBAAoBgX,GAA4BjwI,SAASoxI,GAC1E,CAACt3B,EAAAA,GAAgBkf,iBAAkBkX,GAAyBlwI,SAASoxI,IAGjEE,EAAgBnC,GAAenvI,SAASoxI,GACxCG,EAAmBnC,GAAiBpvI,SAASoxI,GAC7CI,EAAkBnC,GAAgBrvI,SAASoxI,GAC3CK,EAAkBnC,GAAgBtvI,SAASoxI,IAC5CE,GACAC,GACAljH,OAAO2K,KAAKq4G,GAAqBpjK,IAAIunB,QAAQwK,SAASoxI,IACtD/iH,OAAOuK,OAAOy4G,GAAqBrxI,UAAS,GAEjD,OAAQw5G,GACN,KAAKM,EAAAA,GAAgB43B,KACnB,OACE7jK,EAAAA,GAAAC,cAACuvJ,GAAY,CAAC3jB,eAAgBA,EAAgBnuI,SAAUA,EAAU6hE,QAASysE,IAE/E,KAAKC,EAAAA,GAAgBme,YACnB,OACEpqJ,EAAAA,GAAAC,cAAC49I,GAAmB,CAClBngJ,SAAUA,GAAY0lK,EACtB7jG,QAASysE,IAGf,KAAKC,EAAAA,GAAgBoe,QACnB,OACErqJ,EAAAA,GAAAC,cAAC+hJ,GAAe,CACdnW,eAAgBA,EAChBnuI,SAAU0lK,GACLG,IAAiBt3B,EAAAA,GAAgBiZ,4BACjCqe,IAAiBt3B,EAAAA,GAAgBmX,uBACjCmgB,IAAiBt3B,EAAAA,GAAgBqe,eACjCiZ,IAAiBt3B,EAAAA,GAAgB1gD,aACjCq4E,GAAmBD,EACxBpkG,QAASysE,IAGf,KAAKC,EAAAA,GAAgBqe,cACnB,OACEtqJ,EAAAA,GAAAC,cAACs+J,GAAqB,CAAC7gK,SAAU0lK,EAAgB7jG,QAASysE,IAE9D,KAAKC,EAAAA,GAAgB1gD,YACnB,OACEvrF,EAAAA,GAAAC,cAAC63I,GAAmB,CAACp6I,SAAU0lK,EAAgB7jG,QAASysE,IAE5D,KAAKC,EAAAA,GAAgBh7E,cACnB,OACEjxD,EAAAA,GAAAC,cAAC8wJ,GAAqB,CAACrzJ,SAAU0lK,EAAgB7jG,QAASysE,IAE9D,KAAKC,EAAAA,GAAgBse,YACnB,OACEvqJ,EAAAA,GAAAC,cAACm4I,GAAmB,CAAC16I,SAAU0lK,EAAgB7jG,QAASysE,IAE5D,KAAKC,EAAAA,GAAgB0D,QACnB,OACE3vI,EAAAA,GAAAC,cAACu1J,GAAe,CACd3pB,eAAgBA,EAChBnuI,SAAU0lK,GAAkBQ,EAC5BrkG,QAASysE,IAGf,KAAKC,EAAAA,GAAgBue,SACnB,OACExqJ,EAAAA,GAAAC,cAACiuJ,GAAgB,CACfxwJ,SAAU0lK,GAAkBG,IAAiBt3B,EAAAA,GAAgBwe,eAC7DlrF,QAASysE,EACTH,eAAgBA,IAGtB,KAAKI,EAAAA,GAAgBwe,eACnB,OACEzqJ,EAAAA,GAAAC,cAAC85I,GAAsB,CAACr8I,SAAU0lK,EAAgB7jG,QAASysE,IAE/D,KAAKC,EAAAA,GAAgBye,SACnB,OACE1qJ,EAAAA,GAAAC,cAAC2+J,GAAgB,CAAClhK,SAAU0lK,EAAgB7jG,QAASysE,EAAaH,eAAgBA,IAEtF,KAAKI,EAAAA,GAAgBuV,aACnB,OACExhJ,EAAAA,GAAAC,cAACggJ,GAAoB,CAACviJ,SAAU0lK,EAAgB7jG,QAASysE,IAE7D,KAAKC,EAAAA,GAAgBmX,sBACnB,OACEpjJ,EAAAA,GAAAC,cAACskJ,GAAyB,CACxB1Y,eAAgBA,EAChBnuI,SAAU0lK,GAAkBG,IAAiBt3B,EAAAA,GAAgBiZ,2BAC7D3lF,QAASysE,IAGf,KAAKC,EAAAA,GAAgBiZ,2BACnB,OACEllJ,EAAAA,GAAAC,cAAC6jK,GAA8B,CAC7BpmK,SAAU0lK,EACV7jG,QAASysE,IAGf,KAAKC,EAAAA,GAAgB4gB,eACnB,OACE7sJ,EAAAA,GAAAC,cAAC+0I,GAAsB,CACrBt3I,SAAU0lK,EACV7jG,QAASysE,IAGf,KAAKC,EAAAA,GAAgB6gB,eACnB,OACE9sJ,EAAAA,GAAAC,cAAC62I,GAAsB,CACrBp5I,SAAU0lK,EACV7jG,QAASysE,IAGf,KAAKC,EAAAA,GAAgB8gB,oBACnB,OACE/sJ,EAAAA,GAAAC,cAACq4J,GAA2B,CAC1B56J,SAAU0lK,EACV7jG,QAASysE,IAGf,KAAKC,EAAAA,GAAgB0e,mBACrB,KAAK1e,EAAAA,GAAgB2e,gBACrB,KAAK3e,EAAAA,GAAgB4e,oBACrB,KAAK5e,EAAAA,GAAgB6e,WACrB,KAAK7e,EAAAA,GAAgB8e,gBACrB,KAAK9e,EAAAA,GAAgB+e,aACrB,KAAK/e,EAAAA,GAAgBof,iBACrB,KAAKpf,EAAAA,GAAgBgf,kBACrB,KAAKhf,EAAAA,GAAgBif,qBACrB,KAAKjf,EAAAA,GAAgBmf,kBACnB,OACEprJ,EAAAA,GAAAC,cAACw8J,GAAyB,CACxBxD,OAAQttB,EACRE,eAAgBA,EAChBnuI,SAAU0lK,GAAkBI,EAAoB73B,GAChDpsE,QAASysE,IAIf,KAAKC,EAAAA,GAAgB6f,kCACrB,KAAK7f,EAAAA,GAAgBqf,+BACrB,KAAKrf,EAAAA,GAAgBsf,mCACrB,KAAKtf,EAAAA,GAAgBuf,0BACrB,KAAKvf,EAAAA,GAAgB8f,+BACrB,KAAK9f,EAAAA,GAAgB+f,4BACrB,KAAK/f,EAAAA,GAAgBkgB,gCACrB,KAAKlgB,EAAAA,GAAgBmgB,+BACrB,KAAKngB,EAAAA,GAAgBggB,iCACrB,KAAKhgB,EAAAA,GAAgBigB,oCACrB,KAAKjgB,EAAAA,GAAgBwf,iCACrB,KAAKxf,EAAAA,GAAgBgH,sBACnB,OACEjzI,EAAAA,GAAAC,cAAC88J,GAAsC,CACrCC,aAAW,EACXG,UAAWxxB,IAAkBM,EAAAA,GAAgBgH,sBAC7CgqB,oBAAqBtxB,IAAkBM,EAAAA,GAAgBwf,iCACvDyR,qBAAsBvxB,IAAkBM,EAAAA,GAAgB+f,4BACxDiN,OAAQttB,EACRjuI,SAAU0lK,GAAkBI,EAAoB73B,GAChDpsE,QAASysE,IAIf,KAAKC,EAAAA,GAAgBogB,iCACrB,KAAKpgB,EAAAA,GAAgByf,8BACrB,KAAKzf,EAAAA,GAAgB0f,kCACrB,KAAK1f,EAAAA,GAAgB2f,yBACrB,KAAK3f,EAAAA,GAAgBqgB,8BACrB,KAAKrgB,EAAAA,GAAgBsgB,2BACrB,KAAKtgB,EAAAA,GAAgBygB,+BACrB,KAAKzgB,EAAAA,GAAgB0gB,8BACrB,KAAK1gB,EAAAA,GAAgBugB,gCACrB,KAAKvgB,EAAAA,GAAgBwgB,mCACrB,KAAKxgB,EAAAA,GAAgB4f,gCACnB,OACE7rJ,EAAAA,GAAAC,cAAC88J,GAAsC,CACrC9D,OAAQttB,EACRjuI,SAAU0lK,EACV7jG,QAASysE,IAIf,KAAKC,EAAAA,GAAgBkf,gBACnB,OACEnrJ,EAAAA,GAAAC,cAACkrJ,GAAe,CACdztJ,SAAU0lK,EACV7jG,QAASysE,EACTH,eAAgBA,IAItB,KAAKI,EAAAA,GAAgBoB,QACrB,KAAKpB,EAAAA,GAAgBC,oBACrB,KAAKD,EAAAA,GAAgBE,kBACrB,KAAKF,EAAAA,GAAgBG,8BACrB,KAAKH,EAAAA,GAAgBI,yBACrB,KAAKJ,EAAAA,GAAgBK,qBACrB,KAAKL,EAAAA,GAAgBc,iCACrB,KAAKd,EAAAA,GAAgBM,qBACrB,KAAKN,EAAAA,GAAgBgB,iCACrB,KAAKhB,EAAAA,GAAgBX,aACnB,OACEtrI,EAAAA,GAAAC,cAACyrI,GAAe,CACdC,cAAeA,EACfC,YAAa23B,EACbzmG,MAAOylG,EACPh/B,SAAUi/B,EACV9kK,SAAU0lK,EACVv3B,eAAgBA,EAChBtsE,QAASysE,IAIf,KAAKC,EAAAA,GAAgB+gB,cACrB,KAAK/gB,EAAAA,GAAgBihB,iBACrB,KAAKjhB,EAAAA,GAAgBohB,wBACrB,KAAKphB,EAAAA,GAAgBqhB,qBACrB,KAAKrhB,EAAAA,GAAgBuhB,sBACrB,KAAKvhB,EAAAA,GAAgByhB,0BACrB,KAAKzhB,EAAAA,GAAgB2hB,qBACrB,KAAK3hB,EAAAA,GAAgBghB,aACrB,KAAKhhB,EAAAA,GAAgB4hB,2BACrB,KAAK5hB,EAAAA,GAAgBkhB,uBACrB,KAAKlhB,EAAAA,GAAgBmhB,2BACrB,KAAKnhB,EAAAA,GAAgBshB,wBACrB,KAAKthB,EAAAA,GAAgB6hB,aACrB,KAAK7hB,EAAAA,GAAgB8hB,kCACrB,KAAK9hB,EAAAA,GAAgBwhB,mBACrB,KAAKxhB,EAAAA,GAAgB0hB,uBACnB,OACE3tJ,EAAAA,GAAAC,cAACqgK,GAAa,CACZ30B,cAAeA,EACf7uE,MAAO6lG,EACPp/B,SAAUq/B,EACVh3B,YAAa23B,EACb7lK,SAAU0lK,EACVv3B,eAAgBA,EAChBtsE,QAASysE,IAIf,KAAKC,EAAAA,GAAgB2D,iBACrB,KAAK3D,EAAAA,GAAgB8C,oBACrB,KAAK9C,EAAAA,GAAgBgD,2BACrB,KAAKhD,EAAAA,GAAgBmC,8BACrB,KAAKnC,EAAAA,GAAgBsD,0BACrB,KAAKtD,EAAAA,GAAgBwD,8BACrB,KAAKxD,EAAAA,GAAgBkD,wBACrB,KAAKlD,EAAAA,GAAgB6D,gBACrB,KAAK7D,EAAAA,GAAgBoC,gBACnB,OACEruI,EAAAA,GAAAC,cAACuuI,GAAgB,CACf7C,cAAeA,EACf4C,SAAUu0B,EACVr0B,cAAes0B,EACfn3B,YAAa23B,EACb7lK,SAAU0lK,EACVv3B,eAAgBA,EAChBtsE,QAASysE,IAIf,KAAKC,EAAAA,GAAgB2gB,YACnB,OACE5sJ,EAAAA,GAAAC,cAAC8jK,GAAmB,CAClBrmK,SAAU0lK,EACV7jG,QAASysE,IAIf,QACE,OAEN,CAgBOg4B,CAA4BZ,EAAgB/jI,GAGnD,CAEA,OACEr/B,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACThoB,IAAKwU,EACLloB,GAAG,WACHnB,KAAMkgK,EAAuB,OAASwB,EAAAA,GACtC5kI,UAAWssG,EACX7I,YAAau+B,GACb6C,YAAU,EACVC,kBAAgB,GAEfhB,EACU,I,oDC3fjB,MAAMiB,GAAWA,EAAG19J,aAEhB1G,GAAAA,cAAA,OAAKrC,UAAU,2CAA2C+I,GCLxD29J,IAAe7wC,EAAAA,GAAAA,IDSMJ,IACzB,MAAM,KACJ1xH,EAAI,UAAE4iK,EAAS,QAAEz/J,EAAO,SAAE2Z,GACxB40G,EACEmxC,GAAch3J,EAAAA,GAAAA,SAAOooH,EAAAA,GAAAA,OACpBjlH,EAAOgvJ,IAAYxvJ,EAAAA,GAAAA,UAAuBo0J,GAAWE,UAAY,CACtE,CACE9iK,KAAM,YACN4U,SAAU,CAAC,CAAE2B,KAAM,SAGhBwsJ,EAAUC,IAAex0J,EAAAA,GAAAA,UAAiBo0J,GAAWG,UAAY,KACjEE,EAAeC,IAAoB10J,EAAAA,GAAAA,UAAiB,KACpD20J,EAAYC,IAAiB50J,EAAAA,GAAAA,UAAiB,IAC/CkH,GAAM7J,EAAAA,GAAAA,QAAkB,MACxBw3J,GAAuBthK,EAAAA,GAAAA,cAAamN,IACxC8zJ,EAAY9zJ,EAAEC,OAAOH,MAAM,GAC1B,IAIGs0J,GAAavhK,EAAAA,GAAAA,cAAY,KAC7B,MAAMwhK,EAAsBv0J,EAHftQ,KAAK8kK,GAAMC,GAAAA,GAAKC,OAAOF,KAAIl8I,KAAK,MAI7C,IAAKi8I,EAEH,YADAH,EAAc,2BAKhB,GAFEA,EAAc,KAEXL,EAEH,YADAG,EAAiB,2BAGjBA,EAAiB,IAEnB,MAAMS,EAA4B,QAAT3jK,EAAiB6iK,EAAY72J,QAAU42J,GAAW5gK,GAC3E4wH,GAAAA,GAAagwC,WAAWgB,aAAa,CACnC5hK,GAAI2hK,EACJb,SAAU9zJ,EACVu0J,YACAR,aACC3+E,MAAK,KACNjhF,IACA2Z,GAAU,IAEZ+mJ,GAAAA,GAAwBC,WAAWf,EAAUY,EAAkB,CAC7DI,OAAQR,GACR,GACD,CAACX,GAAW5gK,GAAImB,EAAS2Z,EAAUimJ,EAAU/iK,EAAMgP,IACtD,OACE1Q,GAAAA,cAAA,OAAKrC,UAAU,mCACbqC,GAAAA,cAAA,OAAKrC,UAAU,wCACbqC,GAAAA,cAAC0lK,GAAAA,GAAM,CAAC/nK,UAAU,uCAAuCyZ,IAAKA,EAAK1G,MAAOA,EAAOQ,SAAUwuJ,EAAUiG,QAAS,CAAC,UAAW,OAAQ,SAAU,aAAc,aAAc,UACvKd,GAAc7kK,GAAAA,cAACokK,GAAQ,CAAC19J,QAASm+J,KAEpC7kK,GAAAA,cAAA,OAAKrC,UAAU,2BACbqC,GAAAA,cAAA,WAAK,6BAA0BA,GAAAA,cAAA,QAAMrC,UAAU,kBAAiB,MAChEqC,GAAAA,cAAC4lK,GAAAA,EAAK,CAACl1J,MAAO+zJ,EAAUvzJ,SAAU6zJ,IACjCJ,GAAiB3kK,GAAAA,cAACokK,GAAQ,CAAC19J,QAASi+J,KAEvC3kK,GAAAA,cAAA,OAAKrC,UAAU,mCACbqC,GAAAA,cAACiC,GAAAA,GAAM,CAACtE,UAAU,uBAAuBK,QAAS6G,GAAS,UAC3D7E,GAAAA,cAACiC,GAAAA,GAAM,CAACP,KAAK,UAAU/D,UAAU,uBAAuBK,QAASgnK,GAAY,QAE3E,IC9CV,GA1B0Ba,EACxBnkK,OAAM4iK,YAAWjgK,SAAQQ,UAAS2Z,eAElC,MAAMsnJ,GAAYv4J,EAAAA,EAAAA,IAA8B,MAWhD,OAVA9O,EAAAA,EAAAA,KAAU,KACJqnK,EAAUp4J,SACZ22J,GAAayB,EAAUp4J,QAAS,CAC9B7I,UACA2Z,WACA8lJ,YACA5iK,QAEJ,GACC,CAAC4iK,EAAWz/J,EAAS2Z,EAAU9c,IAEhC1B,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJI,MAAM,QACNorE,gBAAc,EACdnsE,OAAQA,EACRQ,QAASA,EACTw1E,YAAY,iDAEZr6E,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBAAmByZ,IAAK0uJ,IACjC,E,sFClCNC,GAA0BA,EAAGC,WAE/BhmK,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kEACbqC,EAAAA,GAAAC,cAAA,OAAK+H,IAAKi+J,GAAkBn7I,IAAI,cAAcntB,UAAU,kCACxDqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,8BAA6B,mLAG7CqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1T,UAAU,yGACVK,QAASgoK,GAEThmK,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UAAU,yBAAyB4E,KAAK,QAC9CvC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,cAAa,SAK/BuoK,GAAkBA,EAAGC,gBAAeC,SAAQxxH,eAKhD,MAAM,iBAAE7Q,IAAqBh0B,EAAAA,EAAAA,MACvBm6G,GAAazmH,EAAAA,EAAAA,KAAa6gK,IAC9B+B,KAAK/B,EAAUW,WACflhI,EAAiB,CACfr9B,QAAS,cACT,GACD,IACG4/J,GAAa7iK,EAAAA,EAAAA,KAAa6gK,IAC9B8B,EAAO9B,EAAU,GAChB,CAAC8B,IACEz7C,GAAelnH,EAAAA,EAAAA,KAAa6gK,IAChC1vH,EAAS0vH,EAAU5gK,GAAG,GACrB,CAACkxC,IACJ,OACE50C,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,aACZwoK,EAAc/lK,KAAK+R,GAClBnS,EAAAA,GAAAC,cAAA,OAAKe,IAAKmR,EAAKzO,GAAI/F,UAAU,6DAC3BqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mEACZwU,GAAMsyJ,UAAY,IAErBzkK,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mEACZwU,EAAK8yJ,UAAU9sG,QAAQ,OAAQ,KAElCn4D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2CACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cAENrT,QAASA,IAAMksH,EAAW/3G,IAE1BnS,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,OAAO5E,UAAU,iBAE9BqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cAENrT,QAASA,IAAMsoK,EAAWn0J,IAE1BnS,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,OAAO5E,UAAU,iBAE9BqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cAENrT,QAASA,IAAM2sH,EAAax4G,IAE5BnS,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,SAAS5E,UAAU,qBAKlC,EAyBV,IAAeH,EAAAA,EAAAA,KAtBY+oK,EACzBJ,gBAAeK,iBAAgBJ,SAAQxxH,eAOvC,MAAM6xH,GAAYhjK,EAAAA,EAAAA,KAAY,KAC5B+iK,EAAe,MAAM,GACpB,CAACA,IACJ,OACExmK,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACa,IAAzBwoK,EAAcpmK,OACbC,EAAAA,GAAAC,cAAC8lK,GAAuB,CAACC,MAAOS,IAEhCzmK,EAAAA,GAAAC,cAACimK,GAAe,CAACC,cAAeA,EAAeC,OAAQA,EAAQxxH,SAAUA,IAEvE,IC7DV,IAAep3C,EAAAA,EAAAA,KApCyBkpK,EAAGnnG,UAASonG,gBAAeH,qBACjE,MAAMvoK,GAAUC,EAAAA,EAAAA,KAKVuoK,GAAYhjK,EAAAA,EAAAA,KAAY,KAC5B+iK,EAAe,MAAM,GACpB,CAACA,IACJ,OACExmK,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACNrT,QAASuhE,EACTzpD,UAAW7X,EAAQ,mBAEnB+B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAdRvC,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,sBAiBjB0oK,GACC3mK,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1T,UAAU,2GACVK,QAASyoK,GAETzmK,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAAC1E,UAAU,yBAAyB4E,KAAK,QAC9CvC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,cAAa,QAG7B,IC+CV,IAAeH,EAAAA,EAAAA,KArEkBopK,EAAGrnG,cAClC,MAAO4mG,EAAeU,IAAoB32J,EAAAA,EAAAA,IAAwB,KAC3D42J,EAAcC,IAAmB72J,EAAAA,EAAAA,KAAS,IAC1CxO,EAAMslK,IAAW92J,EAAAA,EAAAA,IAAyB,QAC1C+2J,EAAeC,IAAoBh3J,EAAAA,EAAAA,IAA6B,OACvEzR,EAAAA,EAAAA,KAAU,KACR61H,GAAAA,GAAagwC,WAAW6C,kBAAkBrhF,MAAMw+E,IAC9CuC,EAAiBvC,GAAa,GAAG,GACjC,GACD,IACH,MAAMt4B,GAAc17H,EAAAA,EAAAA,IAAgB,KAClCivD,GAAQ,EAAK,IAET6nG,GAAsB3jK,EAAAA,EAAAA,KAAY,KACtCsjK,GAAgB,EAAM,GACrB,IACGM,GAAqB5jK,EAAAA,EAAAA,KAAa/B,IACtCqlK,GAAgB,GAChBC,EAAQtlK,EAAK,GACZ,IACG4kK,GAAa7iK,EAAAA,EAAAA,KAAa6gK,IAC9B0C,EAAQ,QACRE,EAAiB5C,GACjByC,GAAgB,EAAK,GACpB,IACGvxJ,GAAe/R,EAAAA,EAAAA,KAAY,KAC/ByjK,EAAiB,MACjB5yC,GAAAA,GAAagwC,WAAW6C,kBAAkBrhF,MAAMw+E,IAC9CuC,EAAiBvC,GAAa,GAAG,GACjC,GACD,IACG35C,GAAelnH,EAAAA,EAAAA,KAAaC,IAChC4wH,GAAAA,GAAagwC,WAAWgD,gBAAgB5jK,GAAIoiF,MAAK,KAC/C+gF,GAAkB7nG,GACTA,EAAKl/B,QAAQ3tB,GAASA,EAAKzO,KAAOA,KACzC,IAEJ6hK,GAAAA,GAAwBgC,WAAW7jK,EAAG,GACrC,IACH,SAASy/J,IACP,OACEnjK,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACymK,GAAiB,CAChBnnG,QAASysE,EACT26B,cAAeR,EAAcpmK,OAAS,EACtCymK,eAAgBa,IAElBrnK,EAAAA,GAAAC,cAACsmK,GAAkB,CAACJ,cAAeA,EAAeK,eAAgBa,EAAoBjB,OAAQE,EAAY1xH,SAAU+1E,IACnHm8C,GACC9mK,EAAAA,GAAAC,cAAC4lK,GAAiB,CAACnkK,KAAMA,EAAM2C,OAAQyiK,EAAcjiK,QAASuiK,EAAqB9C,UAAW2C,EAAezoJ,SAAUhJ,IAK/H,CACA,OACExV,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACT17B,GAAG,cACHnB,KAAM0hK,EAAAA,GACN5kI,UAAW,EACXyjG,YAAa,EACbohC,YAAU,EACVC,kBAAgB,GAEfhB,EACU,I,gBCxFjB,UAAgB,KAAO,WAAW,KAAO,YCkBnCvpB,GAAsC,CAC1C,KAAM,MAAO,KAAM,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KACzD,MAAO,KAAM,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MACzD,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,MAAO,KAAM,KAC1D,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,KAAM,KAAM,MACzD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KACvD,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,MACvD,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KACxD,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KACvD,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,MACxD,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,MAAO,KAAM,KAC1D,KAAM,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,MAAO,MAC1D,MAAO,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KACzD,KAAM,MAAO,MAAO,KAAM,MAAO,MAAO,KAAM,KAAM,KAAM,KAC1D,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,MAAO,KAAM,KAC1D,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5D,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAC7D,MAAO,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,MAC5D,KAAM,KAAM,MAAO,MAGfC,GAAsB7pB,EAAAA,IAAgClwF,QAAQ3hC,GAClEy7I,GAAoCznH,SAASh0B,KAyE/C,GAtEkCqpK,KAChC,MAAM,iBAAEh4C,IAAqBz/G,EAAAA,EAAAA,MAEvBiqI,GADO97I,EAAAA,EAAAA,KACS65D,MAAQ,MACvBkiF,EAAkBC,IAAuBhqI,EAAAA,EAAAA,IAAiB,KAC1D41B,EAAaC,IAAkB71B,EAAAA,EAAAA,IAAiB,IACjDiqI,GAA0Cv7I,EAAAA,EAAAA,KAAQ,KACtD,MAAMhB,EAAUi8I,GAAoBz5I,KAAKuvH,IAOhC,CACLA,WACAM,eARsB,IAAIC,KAAKC,aAAa,CAAC6pB,GAAW,CAAEt4I,KAAM,aAC3B0uH,GAAGT,GAQxCU,aANoB,IAAIH,KAAKC,aAAa,CAACR,GAAW,CAAEjuH,KAAM,aAC7B0uH,GAAGT,OAOrC7vF,OAAO9wB,SAAS5O,KAAI,EAAGuvH,WAAUM,iBAAgBI,mBAAmB,CACrEt/G,MAAOk/G,EACP9hC,SAAUkiC,EACV3/G,MAAOi/G,MAGT,IAAK7pF,EAAYikC,OAAQ,CACvB,MAAMqwE,EAAwBx8I,EAAQ8C,MAAMzB,GAAWA,EAAOyR,QAAUspI,IAClEK,EAAkBz8I,EAAQkiC,QAAQ7gC,GAAWA,EAAOyR,QAAUspI,IACpE,OAAOI,EAAwB,CAACA,KAA0BC,GAAmBz8I,CAC/E,CAEA,OAAOA,GAASkiC,QAAQ7gC,GAAWA,EAAO8R,MAAM+5C,cAAc34B,SAAS2T,EAAYglB,gBAAe,GACjG,CAACkvF,EAAUl0G,KAEdrnC,EAAAA,EAAAA,KAAU,KACRgpK,GAAAA,GAAiBr5J,IAAI,2BAA2B03E,MAAM4hF,IACpDxtB,EAAoBwtB,GAAiB1tB,EAAS,GAC9C,GACD,CAACA,IAEJ,MAAM1yD,GAAeh3E,EAAAA,EAAAA,IAAiBk/E,IACpC0qD,EAAoB1qD,GACpBi4E,GAAAA,GAAiB74J,IAAI,0BAA2B4gF,GAChDggC,EAAiB,CACfm4C,sBAAuBn4E,EACvBqgC,oBAAqBrgC,GACrB,IAGJ,OACExvF,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOkgC,KAAM,qCAC1CrgC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOgS,OACpCnS,EAAAA,GAAAC,cAACmsF,GAAU,CACTzuF,UAAWwC,GAAOyvF,OAClBjpC,MAAOwzF,EACPntD,cAAeitD,EACfnsD,sBAAuBxG,EACvB5gD,YAAaZ,EACbmB,eAAgBlB,EAChBc,cAAc,EACdK,eAAe,EACfJ,oBAAkB,EAClBM,cAAc,QACdR,cAAc,wBAGd,EC1CV,GA/CyCghI,EACvClqK,WACA6hE,cAEA,MAAM,iBACJiwD,IAEEz/G,EAAAA,EAAAA,MACE5R,GAAOD,EAAAA,EAAAA,MAEN2pK,EAAeC,IAAoB53J,EAAAA,EAAAA,KAAS,IAEnDzR,EAAAA,EAAAA,KAAU,KACRgpK,GAAAA,GAAiBr5J,IAAI,kBAAkB03E,MAAMp1E,IAC3Co3J,EAAiBp3J,IAAoB,EAAM,GAC3C,GACD,IAEH,MAAMq3J,GAA4Bz3J,EAAAA,EAAAA,IAAiB8nF,IACjDqvE,GAAAA,GAAiB74J,IAAI,iBAAkBwpF,GACvCo3B,EAAiB,CAAEq4C,cAAezvE,GAAW,IAQ/C,OALA7qE,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAIRv/D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,oDACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,kBACZssC,QAASo9H,EACT9zG,QAASg0G,KAGb/nK,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sCACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,wBACXQ,EAAK,mCAER6B,EAAAA,GAAAC,cAACunK,GAAqB,OAEpB,EC9BV,IAAehqK,EAAAA,EAAAA,KAtByBwqK,EAAGzoG,cACzC,MAAMthE,GAAUC,EAAAA,EAAAA,KAKhB,OACE8B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACNrT,QAASuhE,EACTzpD,UAAW7X,EAAQ,mBAEnB+B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAXRvC,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,iBAcd,ICUV,IAAeT,EAAAA,EAAAA,KAvBkByqK,EAAG1oG,cAClC,SAAS4jG,IACP,OACEnjK,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAC+nK,GAAiB,CAACzoG,QAASA,IAC5Bv/D,EAAAA,GAAAC,cAAC2nK,GAAkB,CAACroG,QAASA,IAGnC,CACA,OACEv/D,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACT17B,GAAG,cACHnB,KAAM0hK,EAAAA,GACN5kI,UAAW,EACXyjG,YAAa,EACbohC,YAAU,EACVC,kBAAgB,GAEfhB,EACU,IC0EjB,IAAe3lK,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAQ+1B,QAAShC,GAAe/zB,EAAOw2B,aAAe,CAAC,GAC/CC,KAAMtB,EAAWyqD,aAAco2E,GAAqBh2J,EAAOtR,MAEnE,MAAO,CACLymC,YACA6gI,mBACAjiI,aACD,GATeh0B,EA5E2Bk2J,EAC7CzqK,WACAoiC,SACAuH,YACA6gI,mBACAjiI,aACAs5B,cAEA,MAAM,SACJhzB,EAAQ,qBACR67H,IACEr4J,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,MACP,SAAEgF,IAAaC,EAAAA,EAAAA,OAErBoqB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAM34C,GAAcnjB,EAAAA,EAAAA,KAAaC,IAC/B6oC,EAAS,CAAE7oC,KAAIm3H,sBAAsB,GAAO,GAC3C,CAACtuF,IAEE2gB,GAAUtuD,EAAAA,EAAAA,KAAQ,KACtB,IAAKqnC,EACH,OAGF,MAAM45F,GAAc15F,EAAAA,GAAAA,IAAmB,CAAEC,IAAKH,EAAYI,MAAOvG,EAAQp+B,KAAM,SAE/E,OAAOswF,EAAAA,EAAAA,IAAY6tC,EAAax4F,EAAW6gI,EAAiB,GAC3D,CAACjiI,EAAYnG,EAAQuH,EAAW6gI,KAE5Bz+G,EAAaC,IAAWC,EAAAA,GAAAA,QAAkB9qD,EAAWquD,EAASl+C,QAAQ8wB,IAE7E,OACE9/B,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CAACC,MAAO8C,EAAa7C,WAAY8C,EAAS/rD,UAAU,2BAChE8rD,GAAa1pD,OACZ0pD,EAAYrpD,KAAKsD,GACf1D,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK0C,EACL/F,UAAU,wCAEVK,QAASA,IAAM4oB,EAAYljB,IAE3B1D,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQt8B,EACRqjC,eAAa,EACb8mF,WAAW,QACX9wE,WAAS,EACTs9E,kBAAmBn6F,EAAAA,GAAkBI,SACrCle,QAASlf,OAIbumD,IAAgBA,EAAY1pD,OAC9BC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,aAAaqD,IAAI,aAAaI,IAAI,QAC5C0+B,EAAO//B,OAAS,mCAAqC,0BAGxDC,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,CAAC7rD,IAAI,YAEfhB,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBnnC,IAAI,qBACJonC,SAAO,EACPpqC,QAASoqK,EACTtyJ,UAAW3X,EAAK,qBAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,qBAEE,KC0BrB,IAAe/E,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAQ+1B,QAASsvH,GAAoBrlJ,EAAOw2B,aAAe,CAAC,GAG1DrC,MAAOP,EAAW,eAClBy4B,EAAc,cACdw/D,EAAa,aACbC,IACE1rH,EAAAA,EAAAA,KAAeJ,GAAQmsD,cACnBxf,QAASo/E,GAAkBF,GAAiB,CAAC,GAC7Cl/E,QAAS+gF,GAAiB5B,GAAgB,CAAC,EAEnD,MAAO,CACLu5B,kBACAzxH,cACAuiI,YAAa9pG,GAAgB7T,MAC7BuzE,gBACA2B,eACD,GAnBe3tH,EAjG4Bq2J,EAC9C3yI,YACAj4B,WACA8zF,oBACA+lE,kBACAzxH,cACAuiI,cACAzoC,eACA3B,gBACAsqC,4BACAC,aACAjpG,cAEA,MAAM,qBACJkpG,IACE14J,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAMyuB,GAAqBvqF,EAAAA,EAAAA,KAAa4iC,IACtCoiI,EAAqB,CAAEpiI,SAAQ,GAC9B,IAEGL,GAAepnC,EAAAA,EAAAA,KAAQ,KAE3B,MAAMyoC,GAAYuJ,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAC9B+/H,EAAkBnR,GACpBpxH,EAAAA,GAAAA,IAAmB,CAAEC,IAAKmxH,EAAiBlxH,MAAOP,EAAapkC,KAAM,SAAY,GAErF,OAAOusD,EAAAA,GAAAA,IACL/nB,EAAAA,GAAAA,IAAO,IACFwiI,KACC9oC,GAAgB,MAChB3B,GAAiB,KACpBn+F,QAAQg4H,IACT,MAAM7lH,EAAO5K,EAAUywH,GAEvB,OAAO7lH,IAASA,EAAK0Z,SAAW1Z,EAAK02H,uBAAwBx2E,EAAAA,EAAAA,IAAUlgD,GAAM,KAE/E,EACAu/C,EACD,GACA,CAAC+lE,EAAiBzxH,EAAa85F,EAAc3B,EAAezsC,IAEzDo3E,GAAiBnlK,EAAAA,EAAAA,KAAY,KACjCglK,EAAqB,CAAEpiI,MAAO,KAC9BmiI,GAAY,GACX,CAACA,IAEJ,OACExoK,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACNrT,QAASuhE,EACTzpD,UAAU,uBAEV9V,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAEbvC,EAAAA,GAAAC,cAAA,UAAK9B,EAAK,qBAEZ6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,wBACbqC,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACTC,QAASP,EACTL,YAAa6rD,EACb9qD,YAAaZ,EACba,kBAAmBxoC,EAAK,iBACxByoC,cAAc,0BACd/P,UAAWwxI,EACXxhI,cAAY,EACZK,eAAa,EACbC,YAAU,EACVC,cAAc,WACdN,oBAAkB,EAClBE,oBAAqBuhI,EACrBthI,eAAgB+mD,IAGlBhuF,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,SAAO,EACPpqC,QAAS4qK,EACT9yJ,UAAW6f,EAAY,2BAA6B,0BAEpD31B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,kBAGX,KC6FV,IAAe/E,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MACE6E,SAAU8xJ,EACV34G,MAAO44G,IACLx2J,EAAAA,EAAAA,KAAeJ,GAAQ62J,cAAgB,CAAC,EAE5C,MAAO,CACLF,mBACAC,gBACAE,aAAc92J,EAAOksJ,QAAQ4K,aAC9B,GAXe/2J,EAtL6Bg3J,EAC/CtzI,YACAj4B,WACAm0F,YACAm3E,eACAH,mBACAC,gBACAvpG,cAEA,MAAM,gBACJ2pG,EAAe,cACfC,IACEp5J,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAOn6D,EAAOgkK,IAAYl5J,EAAAA,EAAAA,IAAS,KAC5B4lG,EAAOuzD,IAAYn5J,EAAAA,EAAAA,IAAS,KAC5B7J,EAAOi4I,IAAYpuI,EAAAA,EAAAA,OACnBggD,EAAOmuF,IAAYnuI,EAAAA,EAAAA,MAEpBo5J,EAAsB,4BACtBC,EAAyB,+BAGzB1yI,EAAYgyI,IAAqBW,EAAAA,GAAqB5qB,YAE5DngJ,EAAAA,EAAAA,KAAU,KACR,GAAIk3B,EACF,OAEF,IAAKk8D,EAAU9xF,QAAU8xF,EAAU9xF,OAtCI,EAwCrC,YADAqpK,EAAS,IAGX,MAAMl3J,GAAS0+B,EAAAA,EAAAA,MACTvJ,EAAYn1B,EAAOtR,MAAM+nC,KACzB8gI,EAAmB,CAACv3J,EAAOqkB,iBAAmBs7D,GACjDzxF,KAAK4/B,IAAWmvB,EAAAA,EAAAA,IAAuB9nB,EAAUrH,MACjDF,OAAO9wB,SACJ06J,EAAoBD,EAAiB3pH,MAAM,GAAI,GAAG92B,KAAK,MACzD7qB,EAAK,uCACLsrK,EAAiBA,EAAiB1pK,OAAS,GAC/CqpK,EAASM,EAAkB,GAC1B,CAAC/zI,EAAWk8D,EAAW1zF,IAE1B,MAAMwrK,GAAoBlmK,EAAAA,EAAAA,KAAamN,IACrC,MAAM,MAAEF,GAAUE,EAAEmW,cACdqxE,EAAW1nF,EAAMynD,QAAQ,OAAQ,IAEvCixG,EAAShxE,GAELA,IAAa1nF,IACfE,EAAEmW,cAAcrW,MAAQ0nF,EAC1B,GACC,IAEGznF,GAA0BlN,EAAAA,EAAAA,KAAamN,IAC3Cy4J,EAASz4J,EAAEmW,cAAcrW,MAAM,GAC9B,IAEGk5J,GAAoBnmK,EAAAA,EAAAA,KAAY,KAC/B2B,EAAMrF,OAKPipK,GAAgBn3E,EAAU9xF,QAAUipK,EACtC3qB,EA7C0B,oDAiD5B6qB,EAAgB,CACd9jK,QACAiB,QACAwrF,cAZAwsD,EAASirB,EAaT,GACD,CAAClkK,EAAOysF,EAAWm3E,EAAcE,EAAiB7iK,IAE/CwjK,GAAsBpmK,EAAAA,EAAAA,KAAY,KACjC2B,EAAMrF,OAKXopK,EAAc,CACZ/jK,QACA0wG,QACAzvG,QACAwrF,cARAwsD,EAASkrB,EAST,GACD,CAACnkK,EAAO+jK,EAAerzD,EAAOzvG,EAAOwrF,EAAW03E,KAEnD9qK,EAAAA,EAAAA,KAAU,KACJoqK,IAAqBW,EAAAA,GAAqBxqB,UAC5Cz/E,GAAQ,EACV,GACC,CAACspG,EAAkBtpG,IAEtB,MAAMuqG,EAAiBhB,GAAiB3qK,EAAK2qK,KAC3C54G,IAAUo5G,GAAuBp5G,IAAUq5G,EACvCr5G,OACArxD,GAGN,OACEmB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cAENrT,QAASA,IAAMuhE,IACfzpD,UAAU,8BAEV9V,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAEbvC,EAAAA,GAAAC,cAAA,UAAK9B,EAAKw3B,EAAY,aAAe,cAEvC31B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,wBACbqC,EAAAA,GAAAC,cAACu/I,GAAAA,EAAc,CACbtuI,SAAUotI,EACVl5I,MAAOjH,EAAK,cAEd6B,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRV,MAAOtL,EACP8L,SAAUy4J,EACV54J,MAAO5S,EAAKw3B,EAAY,mBAAqB,aAC7Cu6B,MAAOA,IAAUo5G,GAAuBp5G,IAAUq5G,EAAyBr5G,OAAQrxD,IAEpF82B,GACC31B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRV,MAAOolG,EACP5kG,SAAUP,EACVI,MAAO5S,EAAK,oCAEd6B,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,QAAQQ,EAAK,qBAI7B2rK,GACC9pK,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,SAASmsK,GAGvBj4E,EAAU9xF,OAAS,GAClBC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,wBAAwBQ,EAAK,6BAA8B0zF,EAAU9xF,OAAQ,MAE3FC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mCACZk0F,EAAUzxF,KAAKsD,GACd1D,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACo/B,UAAQ,EAAC/mC,UAAU,uBAC3BqC,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CAAC1jB,OAAQt8B,UAQrC1D,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAA0B,IAAjBhjC,EAAMrF,OACf/B,QAAS23B,EAAYk0I,EAAsBD,EAC3C/mJ,SAAUgU,EACV/gB,UAAW6f,EAAYx3B,EAAK,8BAAgC,gBAE3D04B,EACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,iBAGX,KCpMJwnK,GAAevpH,OAAO2K,KAAK6+G,EAAAA,IAAmBjqK,OAAS,EAsD7D,IAAevC,EAAAA,EAAAA,KApDeysK,EAC5BvsK,WACAi4B,aAAY,EACZtf,UACA6zJ,kBACA3qG,cAEA,MAAO4qG,EAAkBC,IAAuBl6J,EAAAA,EAAAA,IAAmB,IAE7D04J,GAAiBnlK,EAAAA,EAAAA,KAAY,KACjCymK,EAAgBv0I,EAAYq0I,EAAAA,GAAkBK,gBAAkBL,EAAAA,GAAkBM,cAAc,GAC/F,CAAC30I,EAAWu0I,IAEf,OACElqK,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACT17B,GAAG,UACHnB,KAAM0hK,EAAAA,GACNnhC,YAAainC,GACb1qI,UAAWhpB,IAETk0J,IACA,OAAQl0J,GACN,KAAK2zJ,EAAAA,GAAkBQ,gBACvB,KAAKR,EAAAA,GAAkBS,cACrB,OACEzqK,EAAAA,GAAAC,cAACqoK,GAAY,CACX3yI,UAAWA,EACXj4B,SAAUA,EACV8zF,kBAAmB24E,EACnB5B,0BAA2B6B,EAC3B5B,WAAYI,EACZrpG,QAASA,IAGf,KAAKyqG,EAAAA,GAAkBK,gBACvB,KAAKL,EAAAA,GAAkBM,cACrB,OACEtqK,EAAAA,GAAAC,cAACgpK,GAAY,CACXtzI,UAAWA,EACXj4B,SAAU6sK,GAAgB7sK,EAC1Bm0F,UAAWs4E,EACX5qG,QAASA,IAGf,QACE,OACJ,GAES,I,wFC7BjB,MAkHA,IAAe/hE,EAAAA,EAAAA,KAlHqBktK,EAClChtK,WACAitK,mBACAC,kBACAC,qBACAtrG,UACAurG,gBACAC,yBACAC,4BACAxI,sBAEA,MAAM,sBAAEyI,IAA0Bl7J,EAAAA,EAAAA,MAC5B5R,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ+xC,IAGV,MAAM2rG,GAA8B56J,EAAAA,EAAAA,IAAgB,KAClD26J,EAAsB,CAAEzyJ,UAAU,GAAQ,KAGtC,uCACJ2yJ,EAAsC,gCACtCC,IACEC,EAAAA,GAAAA,GAAsCV,IAGxCxkJ,aAAcmlJ,EACdjlJ,qBAAsBklJ,IACpBhlJ,EAAAA,GAAAA,IAA6BokJ,OAAkB9rK,OAAWA,GAAW,IAEnE,uBACJ2sK,EAAsB,6BAAEC,EAA4B,+BACpDC,EAA8B,mBAAEC,IAC9BC,EAAAA,GAAAA,GAAoBjB,GAClBkB,EAAsBlB,GAAoBgB,GAG9CxlJ,aAAc2lJ,EACdzlJ,qBAAsB0lJ,EACtBjxE,UAAWkxE,IACTzlJ,EAAAA,GAAAA,GACFskJ,OAAoBhsK,OAAWA,EAAW,IAAI,EAAOssB,GAAAA,GAAqBiP,EAAAA,KAG5E,OACEp6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAe,eAAgB4rK,GAA2B,uBACvE3tK,EAAKkD,OAASrB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBAC9BqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cACNrT,QAASuhE,EACTzpD,UAAU,sBACVnY,WAAWuC,EAAAA,GAAAA,GACT/B,EAAKkD,OAAS,MACdwqK,GAAuB1tK,EAAKkD,OAAS,gBACrC8pK,EAAuCz9J,SAAWvP,EAAKkD,OAAS,sBAElEw/C,gBAAiBuqH,GAEjBprK,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAEZ+oK,GAAqBtrK,EAAAA,GAAAC,cAAA,MAAItC,UAAW4tK,GAAkBptK,EAAK,kBAC5D6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yBACbqC,EAAAA,GAAAC,cAACgsK,GAAAA,EAAY,CAACC,SAAO,EAAC9kE,YAAU,KAEjCwjE,EAAgBpyJ,UACfxY,EAAAA,GAAAC,cAACyW,GAAAA,EAAY,CACX/Y,UAAU,2BACViZ,UAAU,QACViqC,gBAAiB1iD,EAAKkD,MAAQ+pK,OAAkCvsK,GAEhEmB,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,oBAAoBnH,QAASktK,GACzC/sK,EAAK,kCAKd6B,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACT,oBACA4rK,GAA2B,oBAC3BC,IAGDD,GACC9rK,EAAAA,GAAAC,cAACkgC,GAAAA,EAAW,CAACinE,YAAU,EAACzpG,UAAU,qBAAqBm9F,UAAWkxE,IAEpEhsK,EAAAA,GAAAC,cAACqgC,GAAAA,EAAQ,CACP6rI,WAAW,WACXzuK,SAAUA,EACVitK,iBAAkBkB,EAClBd,uBAAwBA,EACxBC,0BAA2BA,EAC3BxI,gBAAiBA,EACjBoI,gBAAiBA,KAGpBY,GACCxrK,EAAAA,GAAAC,cAACmsK,GAAAA,EAAU,CACT/nK,OAAQsmK,EACRG,cAAeA,EACfuB,qBAAsBX,EACtB77J,oBAAqB47J,IAGrB,IClCV,IAAejuK,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAQy2B,KAAMs/F,EAAaj0F,WAAYs4H,GAAqBp6J,EAAO8mH,YAEnE,MAAO,CACLiP,cACAqkC,mBACD,GAPer6J,EAtF+BuoH,EACjDn2H,SACAkM,SACA03H,cACAqkC,mBACAznK,UACAgL,0BAEA,MAAM,gBAAE08J,IAAoBx8J,EAAAA,EAAAA,MAEtB5R,GAAOD,EAAAA,EAAAA,KAEPsuK,GAA2B5tK,EAAAA,EAAAA,KAAQ,IAClCqpI,EAIEznF,OAAO2K,KAAK88E,GAAalpI,QAAO,CAACK,EAAQg9E,KAC9C,MAAM,gBAAEuoD,EAAe,cAAEkG,GAAkB5C,EAAYtgH,OAAOy0D,IAK9D,OAJIuoD,EAAgBxyG,SAAS5hB,IAAWs6H,GAAe14G,SAAS5hB,KAC9DnR,EAAOM,KAAK08E,GAGPh9E,CAAM,GACZ,IAVM,IAWR,CAACmR,EAAQ03H,KAELwkC,EAAmBC,IAAwBx8J,EAAAA,EAAAA,IAAmBs8J,GAE/Dt3D,GAAUt2G,EAAAA,EAAAA,KAAQ,IACf0tK,GAAkBxsI,QAAQs8C,GAAaA,IAAaqjD,EAAAA,MACxDr/H,KAAKg8E,IACJ,MAAMR,EAASqsD,EAAcA,EAAY7rD,QAAYv9E,EAMrD,MAAO,CACLkS,MANY6qE,GAASvuC,EAAAA,GAAAA,IAAuB,CAC5Cp1B,KAAM2jE,EAAOx2E,MAAM6S,KACnBg0E,SAAUrQ,EAAOx2E,MAAM6mF,SACvBunB,sBAAuB53B,EAAO63B,oBAC3B,GAGH/iG,MAAOgwC,OAAO07B,GACf,KACG,IACP,CAACkwF,EAAkBrkC,IAEhBjgG,GAAevkC,EAAAA,EAAAA,KAAY,KAC/B,MAAMkpK,EAAcH,EAAyB1sI,QAAQp8B,IAAQ+oK,EAAkBt6I,SAASzuB,KAAKtD,IAAIunB,QAC3FilJ,EAAWH,EAAkB3sI,QAAQp8B,IAAQ8oK,EAAyBr6I,SAASzuB,KAAKtD,IAAIunB,QAE9F4kJ,EAAgB,CAAEh8J,SAAQo8J,cAAaC,aACvC/nK,GAAS,GACR,CAAC0L,EAAQg8J,EAAiBC,EAA0B3nK,EAAS4nK,IAEhE,GAAKxkC,GAAgBqkC,EAIrB,OACEtsK,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRQ,QAASA,EACTgL,oBAAqBA,EACrBmB,QAASg3B,EACTrqC,WAAWuC,EAAAA,GAAAA,GC9FgC,WD8FJ,UACvC6E,iBC/FyB,WDgGzBK,MAAOjH,EAAK,gBAEZ6B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GClG6C,WDkGjB,kBAC1CF,EAAAA,GAAAC,cAAC2nH,GAAAA,EAAa,CACZhqH,QAASs3G,EACT/jG,SAAUs7J,EACVv7J,SAAUw7J,KAGd1sK,EAAAA,GAAAC,cAAA,OAAKtC,UCzG4E,YD0G/EqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACoP,MAAM,UAAU1T,UAAU,wBAAwBwE,QAAM,EAACnE,QAASgqC,GACvE7pC,EAAK,gBAER6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAAS6G,GAAU1G,EAAK,aAGvE,KEtG8B,IAUrC0uK,GAAY,SAAZA,GAAY,OAAZA,EAAY,eAAZA,EAAY,kBAAZA,EAAY,mBAAZA,EAAY,eAAZA,EAAY,mBAAZA,EAAY,aAAZA,CAAY,EAAZA,IAAY,IASjB,MA8DA,IAAervK,EAAAA,EAAAA,KA9DqB+8H,EAClCl2H,SACAkM,SACAu8C,UACAjoD,UACAgL,0BAEA,MAAOi9J,EAAiBC,IAAsB78J,EAAAA,EAAAA,IAAS28J,GAAaG,UAC9D,qBAAEC,EAAoB,sBAAEC,IAA0Bn9J,EAAAA,EAAAA,MAElD5R,GAAOD,EAAAA,EAAAA,KAEPivK,GAAiBvuK,EAAAA,EAAAA,KAAQ,IAAM,CACnC,CAAEmS,MAAO5S,EAAK,gBAAiB,GAAIuS,MAAOm8J,GAAaO,SACvD,CAAEr8J,MAAO5S,EAAK,gBAAiB,GAAIuS,MAAOm8J,GAAaQ,WACvD,CAAEt8J,MAAO5S,EAAK,gBAAiB,GAAIuS,MAAOm8J,GAAaS,YACvD,CAAEv8J,MAAO5S,EAAK,eAAgB,GAAIuS,MAAOm8J,GAAaU,QACtD,CAAEx8J,MAAO5S,EAAK,eAAgB,GAAIuS,MAAOm8J,GAAaW,WACtD,CAAEz8J,MAAO5S,EAAK,mBAAoBuS,MAAOm8J,GAAaG,WACrD,CAAC7uK,IAEE6pC,GAAevkC,EAAAA,EAAAA,KAAY,KAC/B,IAAIsuJ,EAEFA,EADE+a,IAAoBD,GAAaG,QACtB/4G,EAAAA,IAEAr0D,KAAKse,MAAMwQ,KAAKC,MAAQ,KAAQhH,OAAOmlJ,GAElDhgH,EACFogH,EAAsB,CAAE38J,SAAQu8C,UAASilG,eAEzCkb,EAAqB,CAAE18J,SAAQwhJ,eAEjCltJ,GAAS,GACR,CAAC0L,EAAQu8J,EAAiBjoK,EAASioD,IAEtC,OACE9sD,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRQ,QAASA,EACTgL,oBAAqBA,EACrBmB,QAASg3B,EACTrqC,UAAU,SACVyH,MAAOjH,EAAK,kBAEZ6B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACTtT,UAAU,wBACV4E,KAAK,UACL3E,QAASuvK,EACTh8J,SAAU27J,EACV57J,SAAU67J,IAEZ/sK,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACoP,MAAM,UAAU1T,UAAU,wBAAwBwE,QAAM,EAACnE,QAASgqC,GACvE7pC,EAAK,gBAER6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAAS6G,GAAU1G,EAAK,YAErE,I,4BC1BZ,MAoMA,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAUu7J,cAAaC,0BACtB,MAAM96J,GAAqBC,EAAAA,EAAAA,KAAyBX,IAC9C,OAAE3B,EAAM,SAAEuC,GAAaF,GAAsB,CAAC,EAC9CF,EAAOnC,IAAU4hC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GACpCu9C,EAAev9C,GAASw9C,EAAAA,EAAAA,KAAmB77C,EAAQ3B,QAAU1R,EAC7D8uK,EAAcj7J,GAAOk7J,EAAAA,EAAAA,IAA4Bl7J,EAAMo7C,QAAgBjvD,EACvEgvK,EAAat9J,GAAUuC,GAAWg7J,EAAAA,EAAAA,KAAiB57J,EAAQ3B,EAAQuC,QAAYjU,EAC/EkvK,EAAkB/+J,SAAS6+J,GAAYG,gBAAkBH,GAAYI,eACrEhjH,EAAQ16C,GAAUuC,GAAWspH,EAAAA,EAAAA,KAAYlqH,EAAQ3B,EAAQuC,QAAYjU,EACrEqvK,EAAkBl/J,QACtB0D,GAAQI,IAAYo4C,EAAAA,EAAAA,IAAiBx4C,EAAMu4C,EAAO8iH,EAAiBjgH,IAC9D6/G,GAAaO,iBAEd5hH,EAAkBt9C,QAAQuB,KAAWkmB,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,GAElE44E,EAAiBskF,EAAcA,EAAYtkF,eAC7CukF,EAAsB,CAAEnzF,UAAWmzF,QAAwB7uK,EAEzD2+F,EAAarU,GAAiBD,EAAAA,EAAAA,KAAiBh3E,EAAQi3E,QAAkBtqF,EACzE+0C,EAAoBrjC,GAASsjC,EAAAA,EAAAA,KAA4B3hC,EAAQ3B,QAAU1R,EAEjF,MAAO,CACLsvK,uBAAwBn/J,QAAQuB,KAAW69J,EAAAA,EAAAA,KAA6Bl8J,EAAQ3B,GAChF29J,kBACA5hH,kBACA+hH,gBAAiBz6H,IAAqB06H,EAAAA,EAAAA,KAAqBp8J,GAC3DsrF,aACAv7D,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GACjD4sJ,4BAA6B5sJ,EAAOsiC,SAASmjG,MAAMmnB,4BACnDlsJ,qBACD,GA/BeX,EAlM+Bs8J,EACjDlqK,SACAopK,cACAC,sBACAlwE,aACA0wE,kBACAC,yBACAE,iBACA/hH,kBACArqB,uBACA68H,8BACAlsJ,qBACA/N,cAEA,MAAM,aACJulF,EAAY,iBACZ6a,EAAgB,YAChBz0C,EAAW,iBACXzsB,IACEh0B,EAAAA,EAAAA,MAGE6b,GAAere,EAAAA,EAAAA,IAAuB,MAEtCowF,GAAkBpwF,EAAAA,EAAAA,IAA0B,MAE5CpP,GAAOD,EAAAA,EAAAA,MAEP,SAAEgF,IAAaC,EAAAA,EAAAA,MAEfqrK,GAAiBh2I,EAAAA,EAAAA,GAAsBglE,GACvCixE,EAAsBjxE,GAAcgxE,EAEpCE,EAAU1/J,SAASy/J,GAAqBrnE,YAAcqnE,GAAqBtnE,eAC3EnB,EAAUyoE,GAAqBzoE,SAE9B2oE,EAAiBC,IAAYC,EAAAA,GAAAA,GAAYV,IAE9C3sH,aAAc+oD,EACdnpD,cAAeopD,GACbtpD,MAGF46C,QAAS4B,IACPtB,EAAAA,GAAAA,IAAwB,CAAEC,QAASzwE,EAAcmxE,WA9CzB,IA8C4D5uF,YAAa9J,KAErG5F,EAAAA,EAAAA,KAAU,KACJ4F,IAAWoqK,GAAqBhvF,UAClC2K,EAAa,CACXjB,eAAgBskF,EAAcA,EAAYtkF,eAAiB,CAAE5O,UAAWmzF,IAE5E,GACC,CAACrpK,EAAQopK,EAAarjF,EAAcsjF,EAAqBe,IAE5D,MAAM/+C,GAAejsH,EAAAA,EAAAA,KAAY,CAACk7E,EAAqB2pC,EAAoBwmD,KACpEl8J,IAGL+rE,EAAU,IACLA,EACHowF,qBAAqB,GAGnBV,GAAkBS,EACpBH,GAAiBK,IACfx+G,EAAY,CACVM,YAAal+C,EAAoB+rE,UAAS2pC,WAAU0mD,gBAEtDnqK,GAAS,KAGX2rD,EAAY,CACVM,YAAal+C,EACb+rE,UACA2pC,WACAw2C,4BAA6BA,GAA+B4P,IAE9D7pK,KACF,GACC,CAAC+N,EAAoBy7J,EAAgBM,EAAiB9pK,EAASi6J,EAA6B4P,IAEzF/8D,GAAoBluG,EAAAA,EAAAA,KAAY,KAChCgrK,IACFxpE,EAAiB,CAAEoB,aAAcooE,EAAoB/qK,KACrDmB,IACF,GACC,CAACA,EAAS4pK,EAAqBxpE,IAE5BgqE,GAAiBxrK,EAAAA,EAAAA,KAAY,KACjC,IAAKgrK,EAAqB,OAC1B,MAAM,UAAEl0F,GAAck0F,EAChBS,EAASlpE,EAAU,WAAa,cAChC5rF,EAAO,GAAEivD,EAAAA,MAAkB6lG,KAAU30F,KAC3C02C,EAAAA,GAAAA,IAAoB72G,GACpB2pB,EAAiB,CACfr9B,QAASvI,EAAK,eACd,GACD,CAAC6nG,EAAS7nG,EAAMswK,EAAqB1qI,IAclC4hB,GAAkE/mD,EAAAA,EAAAA,KAAQ,IACvE,EAAGgX,YAAWvR,OAAQuhD,KAC3B5lD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLuM,QAASlf,EACTvB,KAAK,UACL0P,MAAM,cACN1T,UAAWioD,EAAa,SAAW,GACnC5nD,QAAS4X,EACTE,UAAU,gBAEV9V,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGd,CAACW,IAwBJ,OACElD,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,WAAWuC,EAAAA,GAAAA,GAAe,kBAAmB8lG,GAAW,gBACxD3hG,OAAQA,EACRQ,QAASA,EACTL,OA3BJ,WACE,MAAM+qC,GAAgBrvC,EAAAA,GAAAA,GAAe,gBAAiBsqG,GAAuB,mBAE7E,OACExqG,EAAAA,GAAAC,cAAA,OAAKtC,UAAW4xC,EAAenuC,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACvDmB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAAC4T,OAAK,EAACxE,MAAM,cAAc1P,KAAK,UAAUmU,UAAW3X,EAAK,SAAUH,QAAS6G,GAClF7E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACZ8wK,GAAsBzsK,EAAAA,GAAAA,GAAWysK,EAAoBrpK,MAAO,CAAC,QAAS,UAAYjH,EAAK,uBAE1F6B,EAAAA,GAAAC,cAACyW,GAAAA,EAAY,CACX/Y,UAAU,2CACVgZ,QAASgvC,EACT/uC,UAAU,SAEV5W,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,OAAOnH,QAASixK,GAAiB9wK,EAAK,kBAI7D,CAOYgxK,IAEPV,GAAqBhvF,SACpBz/E,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKmX,IAAKwU,EAAcjuB,UAAU,yBAAyB6oD,SAAU+jD,GACnEvqG,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yCACbqC,EAAAA,GAAAC,cAAA,UAAQmX,IAAKumF,EAAiBhgG,UAAU,kBACvC8wK,EAAoBhvF,SAASr/E,KAAKu+E,GACjC3+E,EAAAA,GAAAC,cAACy/F,GAAa,CACZ/gB,QAASA,EACTh9E,KAAMqkG,EAAUopE,EAAAA,IAAmBC,EAAAA,IACnC3xE,oBAAqBA,EACrB1/F,QAASkwK,IAAoBloE,EAAU0pB,OAAe7wH,EACtDshG,SAAUxhB,EACVryB,gBAAiBA,EACjBrqB,qBAAsBA,EACtB07D,gBAAiBA,QAKzB39F,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLN,KAAK,UACLkkD,OAAK,EACLx0C,MAAOq9J,EAAU,SAAW,UAC5B1wK,QAAS2zG,GAjFI29D,MACvB,IAAKb,EAAqB,OAAOtwK,EAAK,WAEtC,MAAM+wK,EAASlpE,EAAU,QAAU,UAEnC,OAAO7nG,EACLuwK,EAAW,qBAAoBQ,SAAiB,kBAAiBA,SACjET,EAAoBl5I,MACpB,IACD,EA0EU+5I,MAKPtvK,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAET+hH,EACK,KC9PZ,IAAgB,KAAO,WAAW,KAAO,YCoFzC,IAAepxK,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ,CACL2lI,uBAAuBluC,EAAAA,EAAAA,KAA4Bz3F,MAHrCD,EArDoCs9J,EACtD33B,oBACAC,wBACAhzI,cAEA,MAAM,eAAEwlF,IAAmBt6E,EAAAA,EAAAA,MACrB5R,GAAOD,EAAAA,EAAAA,KAEPi6I,GAAkBv5I,EAAAA,EAAAA,KAAQ,IACvBg5I,GAAmBx3I,KAAKsD,IAAOktC,EAAAA,EAAAA,MAAY6uC,SAASipB,SAAShlG,MACnE,CAACk0I,IAGE43B,GAAsBjiK,EAAAA,EAAAA,IAAuB,OAC3CuuF,QAASoB,IAAiCd,EAAAA,GAAAA,IAAwB,CACxEC,QAASmzE,EAAqBrhK,YAAagqI,IAGvCs3B,GAAsBj3I,EAAAA,EAAAA,GAAsB2/G,GAC5Cu3B,EAA2Bv3B,GAAmBs3B,EAE9CE,GAAiBr/J,EAAAA,EAAAA,IAAiBquE,IACtC0L,EAAe,CACblB,eAAgBxK,EAAQwK,gBACxB,IAGJ,OACEnpF,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQ2K,QAAQmpI,GAChBx6I,UAAWwC,GAAOkgC,KAClBx7B,QAASA,EACT2rE,gBAAc,EACdprE,MAAOjH,EAAK,+BAEZ6B,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOyvK,KAAM,iBAAkBx4J,IAAKo4J,EAAqBK,eAAa,GAClGH,GAA0BtvK,KAAK0vK,GAE5B9vK,EAAAA,GAAAC,cAACq3I,GAAc,CACbt2I,IAAK8uK,EAAepsK,GACpB/F,UAAWwC,GAAO4vK,QAClBvyE,WAAYsyE,EACZ9xK,QAAS2xK,EACTjyE,oBAAqBR,EACrBj6E,QAAS40H,OAKX,K,4BClBZ,MAAMm4B,GAAiE,CACrEx7H,SAAU,CACRrvC,KAAM,OACN4L,MAAO,eAETk/J,KAAM,CACJ9qK,KAAM,OACN4L,MAAO,YAkvBX,IAAevT,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,SAAQuC,eACjB,MAAMJ,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAChC,IAAKmC,GAAQA,EAAKw9J,aAChB,MAAO,CAAC,EAEV,MAAMzxH,GAAYzsC,EAAAA,EAAAA,IAASU,EAAKhP,IAC1BuuC,EAAOwM,GAAYvM,EAAAA,EAAAA,KAAWhgC,EAAQ3B,QAAU1R,EAChDsxK,EAAgBl+H,IAAQm+H,EAAAA,EAAAA,IAAiBn+H,GACzCo+H,EAAev9J,IAAaqqC,EAAAA,GAC5B3mB,GAAiBC,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,IAC5CA,OAAQ+/J,EAAex9J,SAAUy9J,IAAoB19J,EAAAA,EAAAA,KAAyBX,IAAW,CAAC,EAC5Fs+J,EAAgBH,IAAiBp+H,KAASrc,EAAAA,EAAAA,IAAcljB,KAASojB,EAAAA,EAAAA,IAAYpjB,IAE7E+wG,GAAWC,EAAAA,EAAAA,IAAYnzG,QAAsC1R,GAA5B8kH,EAAAA,EAAAA,KAAUzxG,EAAQ3B,GACnD6hC,EAAeqM,GAAYpM,EAAAA,EAAAA,KAAmBngC,EAAQ3B,QAAU1R,EAChEivD,EAAgBrP,OAAiD5/C,GAArCkvD,EAAAA,EAAAA,KAAmB77C,EAAQ3B,GACvD6wG,EAAWhvE,GAAgB0b,EAC3B2iH,GAAUC,EAAAA,EAAAA,KAAcx+J,EAAQ3B,GAEhC06C,GAAQmxE,EAAAA,EAAAA,KAAYlqH,EAAQ3B,EAAQuC,GACpC69J,EAAiBj+J,EAAK84C,UAC1B94C,EAAKoxG,aAAc8sD,EAAAA,EAAAA,IAAkBl+J,EAAM,kBAAmBmxG,EAAAA,EAAAA,IAAiBnxG,EAAM,iBAEjFm+J,EAAe5lH,IAAS6lH,EAAAA,EAAAA,IAAkBp+J,EAAMu4C,GAChD8lH,GAAYC,EAAAA,EAAAA,KAAgB9+J,EAAQ3B,GAEpCy9I,GAAeijB,EAAAA,EAAAA,KAAuB/+J,EAAQ3B,IAAW6wG,GAAU8vD,sBAGnEC,GADgBC,EAAAA,EAAAA,IAAiB7gK,EAAQuC,EAAUZ,EAAOqkB,gBAC5B4b,EAAAA,EAAAA,KAAWjgC,EAAQwuC,OAAO5tC,SAAajU,EACrEi1C,GAAkBC,EAAAA,EAAAA,KAA0B7hC,GAElD,MAAO,CACLQ,OACAoO,SAAS83G,EAAAA,GAAAA,IAAelmH,GAAMmmH,EAAAA,EAAAA,KAAqB3mH,IAAS4mH,EAAAA,EAAAA,KAAsB5mH,EAAQQ,EAAKhP,KAC/F+6C,YACA4yH,QAAS3+J,GAAM84C,UAAY6kH,EAC3B7kH,QAAS94C,GAAM84C,QACf8lH,kBAAmB5+J,GAAM4+J,kBACzBnB,gBACAoB,eAAeC,EAAAA,EAAAA,IAAiB9+J,GAChC89J,gBACAC,UACApvD,cAAeryG,QAAQ8+C,GAAcwzD,cACrCmwD,YAAahuD,EAAUrxE,GAAcsuB,SAASgxG,cAAW7yK,EACzD8yK,oBAAqBluD,EAAUrxE,GAAcsuB,SAASkxG,sBAAmB/yK,EACzEgzK,iBAAiBv/J,EAAAA,EAAAA,KAAeJ,GAAQ2/J,iBACnCvB,IAAkB//J,GAAUggK,IAAoBz9J,EACrD69J,iBACAE,eACAE,YACAe,oBAAoBC,EAAAA,EAAAA,KAAyB7/J,GAC7C87I,eACAhkB,UAAW53F,GAAc43F,UACzBgoC,MAAOhjK,QAAQy0G,GACfjtF,iBACA26I,cACA/X,gBAAiBhnH,GAAcgnH,gBAC/BtlH,kBACD,GA5De7hC,EAlrBmCggK,EACrD1hK,SACAuC,WACAzO,SACA6tK,mBACA54F,SACA3jD,YACA87I,cACAE,sBACAQ,mBACAd,UACA7lH,UACA8lH,oBACAO,kBACAO,cACAC,eACA7B,gBACA8B,YACAC,UACAC,UACAC,oBACAC,sBACAC,gBACAC,sBACAC,WACAC,oBACAC,qBACArgK,OACA+rC,YACA39B,UACAywJ,gBACAd,UACApvD,gBACA8uD,gBACAQ,iBACAE,eACAE,YACAe,qBACA9jB,eACAhkB,YACAgoC,QACAx7I,iBACA26I,cACA6B,oBACAC,sBACAC,qBACAC,gBACAC,oBACAvuK,UACAgL,uBACAupJ,mBACAtlH,uBAEA,MAAM,qBACJm5H,GAAoB,uBACpBoG,GAAsB,eACtBC,GAAc,WACdC,GAAU,8BACVC,GAA6B,gBAC7BC,GAAe,eACfC,GAAc,qBACdC,GAAoB,uBACpBC,GAAsB,4BACtBC,GAA2B,iBAC3BC,GAAgB,2BAChBC,GAA0B,oBAC1BC,GAAmB,cACnBC,GAAa,mBACbC,GAAkB,qBAClBC,GAAoB,mBACpBC,GAAkB,SAClB7nI,GAAQ,QACRnU,GAAO,iBACPi8I,GAAgB,uBAChBC,GAAsB,UACtBryH,GAAS,YACTD,GAAW,uBACXuyH,GAAsB,eACtBC,GAAc,eACdj5D,GAAc,iBACdx3E,KACEh0B,EAAAA,EAAAA,MAEE9R,IAAUC,EAAAA,EAAAA,KACVC,IAAOC,EAAAA,GAAAA,MAEP,SAAE8E,KAAaC,EAAAA,EAAAA,OACdyiD,GAAY6uH,KAAiBvkK,EAAAA,EAAAA,KAAS,IACtCwkK,GAAiBC,KAAsBzkK,EAAAA,EAAAA,KAAS,IAChDkE,GAAmBwgK,KAAwB1kK,EAAAA,EAAAA,KAAS,IACpDkpH,GAAiBy7C,KAAsB3kK,EAAAA,EAAAA,KAAS,IAChD2pH,GAAuBC,GAAqBC,KAAyBv7H,EAAAA,EAAAA,MACtE,EAAEytB,GAAC,EAAEC,IAAMotD,GAEjB/yD,EAAAA,GAAAA,GAA4BliB,EAAQwL,QAAqBhR,GAAW,GACpE,MAAMi2K,IAAuB1mI,EAAAA,GAAAA,KACzByjI,IAAmBrmH,SAAkB3sD,EAlGL,KAqG9Bk2K,IAAwBn2K,EAAAA,EAAAA,KAAQ,KACpC,GAAKw6J,GAGL,OAAO54G,OAAOuK,OAAOquG,IAAiB7oD,MAAMvhG,QAAQ,GACnD,CAACoqJ,KAEE9/B,IAAiBhpH,EAAAA,EAAAA,IAAgB,KACrCukK,IAAmB,GACnBhwK,GAAS,IAGLwL,IAAeC,EAAAA,EAAAA,IAAgB,KAC/BwjC,GACF8/H,MAEAa,IAAc,GACdl5D,GAAe,CAAEhrG,SAAQ0F,WAAY,MAEvCpR,GAAS,IAGL8lH,IAAer6G,EAAAA,EAAAA,IAAgB,KAC/BwjC,IACF8/H,KACA/uK,KAEA+vK,IAAqB,GAEvBH,IAAc,EAAM,IAGhBO,IAAY1kK,EAAAA,EAAAA,IAAgB,KAChCmkK,IAAc,GACd5vK,GAAS,IAGLowK,IAAsB3kK,EAAAA,EAAAA,IAAgB,KAC1C4jK,GAAmB,CAAE3jK,SAAQuC,aAC7B6hK,IAAoB7C,GACpBkD,IAAW,IAGP1gK,IAAmBhE,EAAAA,EAAAA,IAAgB,KACvCskK,IAAqB,GACrB/vK,GAAS,IAGLqwK,IAAiB5kK,EAAAA,EAAAA,IAAgB,KACjCwjC,GACF8/H,KAEAN,GAAe,CAAE6B,QAAS,UAC5B,IAGIC,IAAmB9kK,EAAAA,EAAAA,IAAgB,KACnCwjC,GACF8/H,KAEAL,GAAW,CAAEhjK,UACf,IAGI8kK,IAAoB/kK,EAAAA,EAAAA,IAAgB,KACpCwjC,GACF8/H,KAEA3G,GAAqB,CAAE18J,SAAQuQ,SAAS,IAE1Ck0J,IAAW,IAGPM,IAAkBhlK,EAAAA,EAAAA,IAAgB,KAClCwjC,IACF8/H,KACAoB,OAEAl7C,KACA+6C,IAAmB,IAErBJ,IAAc,EAAM,IAGhBc,IAAyBjlK,EAAAA,EAAAA,IAAgB,KACzCwjC,GACF8/H,MAEAO,GAAqB,CAAE5jK,WACvBokK,IAAoB7C,IAEtBkD,IAAW,IAGPQ,IAAkBllK,EAAAA,EAAAA,IAAgB,KAClCwjC,GACF8/H,MAEAS,GAAiB,CAAEv/I,OAAO,IAC1B6/I,IAAoB7C,IAEtBkD,IAAW,IAGPS,IAAuBnlK,EAAAA,EAAAA,IAAgB,KACvCwjC,GACF8/H,MAEAQ,GAAmB,CAAE7jK,SAAQu8C,QAASnlC,OAAO7U,KAC7C6hK,IAAoB7C,IAEtBkD,IAAW,IAGPU,IAA0BplK,EAAAA,EAAAA,IAAgB,KAC9Ci8B,GAAS,CAAE7oC,QAAI7E,IACf01K,GAAuB,CAAEhkK,SAAQi9D,WAAW,IAC5CwnG,IAAW,IAGPW,IAA4BrlK,EAAAA,EAAAA,IAAgB,KAC5CwjC,GACF8/H,KACSb,EAETU,GAAgB,CACdljK,WAGFijK,GAA8B,CAC5BjjK,WAGJykK,IAAW,IAGPY,IAAwBtlK,EAAAA,EAAAA,IAAgB,KAC5CojK,GAAe,CAAEhwK,GAAI6M,IACrBykK,IAAW,IAGPa,IAAkBvlK,EAAAA,EAAAA,IAAgB,KAClCykK,IAAyBriK,EAC3BqxB,GAAiB,CAAEr9B,QAASvI,GAAK,wBAGnC81K,GAAc,CAAE6B,UAAWvlK,IACvBujC,GACF8/H,KAEAK,GAAc,CAAE6B,UAAWvlK,IAE7BykK,KAAW,IAGPe,IAAwBzlK,EAAAA,EAAAA,IAAgB,KACxCwjC,GACF8/H,KAEAD,GAAqB,CAAE3zI,OAAQzvB,IAEjCykK,IAAW,IAGPgB,IAAkB1lK,EAAAA,EAAAA,IAAgB,KAClCwjC,GACF8/H,KAEAV,IAEF8B,IAAW,IAGPiB,IAAkB3lK,EAAAA,EAAAA,IAAgB,KAClCwjC,GACF8/H,KAEAC,GAA4B,CAAE7zI,OAAQzvB,EAAQ7E,SAAS,IAEzDspK,IAAW,IAGPkB,IAAa5lK,EAAAA,EAAAA,IAAgB,KAC7BwjC,GACF8/H,KAEAC,GAA4B,CAAE7zI,OAAQzvB,IAExCykK,IAAW,IAGPllD,IAAex/G,EAAAA,EAAAA,IAAgB,KACnC6iK,IACA6B,IAAW,IAGPmB,IAAwB7lK,EAAAA,EAAAA,IAAgB,KAC5CwjK,KACAa,IAAoB7C,GACpBkD,IAAW,IAGPoB,IAA0B9lK,EAAAA,EAAAA,IAAgB,KAC9CyjK,GAA2B,CAAExjK,WAC7BokK,IAAoB7C,GACpBkD,IAAW,IAGPqB,IAAmB/lK,EAAAA,EAAAA,IAAgB,KACnCwjC,GACF8/H,KACSjB,GACTqB,GAAoB,CAAEzjK,WACtBokK,IAAoB7C,IAEpB0C,GAAe,CAAEjkK,WAEnBykK,IAAW,IAGPsB,IAA2BhmK,EAAAA,EAAAA,IAAgB,KAC/CgkK,GAAuB,CAAE/jK,SAAQi9D,WAAW,IAC5CwnG,IAAW,IAGPuB,IAAuBjmK,EAAAA,EAAAA,IAAgB,KACvCwjC,GACF8/H,KAEAP,KAEF2B,IAAW,IAGPwB,IAAuBlmK,EAAAA,EAAAA,IAAgB,KAC3C8iK,IACA4B,IAAW,IAGPyB,IAAcnmK,EAAAA,EAAAA,IAAgB,KAC9BwjC,GACF8/H,KAEA3xH,GAAU,CAAEjiB,OAAQzvB,IAEtBykK,IAAW,IAGP0B,IAAgBpmK,EAAAA,EAAAA,IAAgB,KAChCwjC,GACF8/H,KAEA5xH,GAAY,CAAEhiB,OAAQzvB,IAExBykK,IAAW,KAGbv2K,EAAAA,EAAAA,IAAU6hD,GAAAA,GAAkB,IAE5B,MAAMq2H,IAAa/3K,EAAAA,EAAAA,KAAQ,KACzB,MAAMg4K,EAAiBnF,GAAarxK,KAAI,EAAG+0K,cACzC,MAAM0B,EAAM7G,GAAYmF,GACxB,GAAK0B,EAOL,OACE72K,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP7V,IAAKm0K,EACLhwK,KAAM0xK,EAAI1xK,KAEVnH,QAVgB4oB,KAClB0sJ,GAAe,CAAE6B,QAAU,IAAGA,MAC9BH,IAAW,GAUR/2K,GAAQ44K,EAAI9lK,OACJ,IAIT+lK,EAAoBrF,GAAapmE,MAAK,EAAG8pE,aAA0B,YAAZA,IAmB7D,MAAO,IAAIyB,GAAkB,GAjBP5E,GACpBhyK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,iBAELnH,QAASA,KACH84K,IAAsBnF,EACxB2B,GAAe,CAAE6B,QAAS,aAE1B/8I,GAAQ,CAAEhe,IAAKu3J,GAAuB1zK,GAAQ,6BAEhD+2K,IAAW,GAGZ/2K,GAAQ,sBAImC6hC,OAAO9wB,QAAQ,GAC9D,CAACyiK,EAAaxzK,GAAS0zK,EAAqBK,IAEzC+E,IAAcn4K,EAAAA,EAAAA,KAAQ,KAC1B,GAAK8T,EAEL,OACSzU,GADLkzK,EACa,SAGb1yH,EACa,iBAGb8yH,EACa,0BAGb57I,EACa,eAGF,mBAAmB,GACjC,CAAC47I,EAAe7+J,EAAMijB,EAAW8oB,EAAW0yH,EAAalzK,KAE5D,OACE+B,EAAAA,GAAAC,cAACutG,GAAAA,EAAM,KACLxtG,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI,CACHpe,OAAQuhD,GACRhvC,UAAU,QACV3M,MAAQ,SAAQgiB,aAAYC,QAC5BrnB,QAASmwK,GACTN,gBAAiBA,IAEhBxxK,IAAYovK,GACXtyK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,SACLnH,QAAS8xH,IAER7xH,GAAQ,WAGZk0K,GAAoBxB,GACnB3wK,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,WACLnH,QAASu3K,IAERt3K,GAAQ,2BAEX+B,EAAAA,GAAAC,cAAC+2K,GAAAA,EAAa,OAGjBlC,IACC90K,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,OACLnH,QAASi3K,IAEEh3K,GAAVozK,EAAkB,yBAAoC,2BAG1DN,IAAcF,GACb7wK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,OACLnH,QAASw3K,IAERv3K,GAAQ,SAGZ4yK,GACC7wK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,OACLnH,QAASy3K,IAERx3K,GAAQ,yBAGZiF,KAAaivK,GAAoB3mH,IAAY6lH,GAC5CrxK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,SACLnH,QAAS03K,IAERz3K,GAAQ,6BAGZk0K,GAAoBnjK,QAAQ4jK,IAC3B5yK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,OACLnH,QAASi1K,GAEIh1K,GAAZ03B,EAAoB,oBAA+B,kBACpD31B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eAAei1K,IAGjCT,IAAqBd,IAAYC,GAChCtxK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,UACLnH,QAASw4K,IAERv4K,GAAQ,+BAGZi0K,GAAoBE,GACnBpyK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,OACLnH,QAASk3K,IAERj3K,GAAQ,aAGZi0K,GAAoBG,GACnBryK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAMwwB,EAAY,UAAY,QAC9B33B,QAASg4K,IAER/3K,GAAQ03B,EAAY,qBAAuB,qBAG/Cq9I,IAAsBL,GACrB3yK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,gBACLnH,QAASq4K,IAERp4K,GAAQ03B,EAAY,2BAA6B,2BAGrDw6I,GACCnwK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,WACLnH,QAAS+3K,IAER93K,GAAQ,eAGZiF,IAAYqvK,GACXvyK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,QACLnH,QAASk4K,IAERj4K,GAAQ,SAGZs0K,GACCvyK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,iBACLnH,QAASi4K,IAERh4K,GAAQ,cAGZu0K,IAAY1xJ,EACX9gB,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,SACLnH,QAASq3K,IAERp3K,GAAQ,gBAIT+B,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,OACLnH,QAASs3K,IAERr3K,GAAQ,aAAa,SAI1B60K,GAAqBC,IACrB/yK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,aACLnH,QAAS23K,IAER13K,GAAQ80K,EAAqB,gBAAkB,sBAGnD1xD,GACCrhH,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAMwwB,EAAY,WAAa,UAC/B33B,QAAS43K,IAER33K,GAAQ03B,EAAY,iBAAmB,8BAG1Cw8I,GACAnyK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,SACLnH,QAASu4K,IAERt4K,GAAQ,yBAGZ00K,GACC3yK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,gBACLnH,QAASq4K,IAERp4K,GAAQ,WAGZw0K,GACCzyK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,QACLnH,QAASm4K,IAERl4K,GAAQ,eAGZ03B,GAAa+8I,GACZ1yK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,cACLnH,QAASo4K,IAERn4K,GAAQ,2BAGZ+vJ,GACChuJ,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,WACLnH,QAASs4K,IAERr4K,GAAQ,0BAGZuyK,GACCxwK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,OACLnH,QAASqS,IAERpS,GAAQ,sBAGZ04K,GACAlG,GACCzwK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,OACLnH,QAAS63K,IAER53K,GAAQ,qBAGZ+zK,GACChyK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAM6kI,EAAY,OAAS,YAC3BhsI,QAASgsI,EAAYorC,GAAmBqB,IAE3Bx4K,GAAZ+rI,EAAoB,aAAwB,aAGhDvrF,IAAcjoB,IAAmBw7I,GAChChyK,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAM6kI,EAAY,OAAS,YAC3BhsI,QAASgsI,EAAY0sC,GAAgBD,IAExBx4K,GAAZ+rI,EAAoB,UAAqB,cAG7C6oC,GACC7yK,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAC+2K,GAAAA,EAAa,MACdh3K,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACPJ,aAAW,EACXtR,KAAK,SACLnH,QAAS2sH,IAERosD,MAKRrkK,GACC1S,EAAAA,GAAAC,cAACg3K,GAAAA,EAAe,CACd5yK,OAAQ+P,GACRvP,QAASyP,GACT5B,KAAMy+J,GAAez+J,EACrBwkK,cAAeloK,QAAQmiK,KAG1BqB,GAAW34C,IAAyBnnH,GAAMhP,IACzC1D,EAAAA,GAAAC,cAACs6H,GAAAA,EAAa,CACZl2H,OAAQ+0H,GACRv0H,QAASy0H,GACTzpH,oBAAqBkqH,GACrBxpH,OAAQmC,EAAKhP,MAIZ,K,wCCnzBb,UAAgB,KAAO,WAAW,OAAS,WAAW,KAAO,WAAW,OAAS,WAAW,KAAO,WAAW,SAAW,YCmFzH,IAAelG,EAAAA,EAAAA,KArDY25K,EACzBz5K,WACAgJ,UACA0wK,aACAC,cACAC,iBACAjxI,QACA1oC,YACAK,cAEA,MAAMG,GAAOD,EAAAA,EAAAA,KACPq5K,EAAqB7wK,EAAQ87B,aAAag1I,eAE1CthJ,EAAOohJ,EAAiBD,EAAcD,EAEtCnhD,EAAaqhD,GAAiBG,EAAAA,GAAAA,IAAqBt5K,EAAMuI,EAAQ6J,OAAQ6mK,QAAcv4K,EAEvF+nB,GAActW,EAAAA,EAAAA,IAAgB,KAClCtS,EAAQ0I,EAAQ,IAGlB,OACE1G,EAAAA,GAAAC,cAAA,OACEgrC,KAAK,SACLD,SAAU,EACVrtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOkgC,KAAM3iC,GAAYyC,GAAOY,OAAQpD,GAClEK,QAAS4oB,GAET5mB,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt4B,UAAWwC,GAAO6F,OAClBkwB,KAAMA,EACNje,KAAMs/J,EACN51K,KAAK,WAEP3B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO64B,MACrBh5B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOu3K,QACnBxhJ,GAAQl2B,EAAAA,GAAAC,cAACosD,GAAAA,EAAa,CAACn2B,KAAMA,EAAMu4E,iBAAe,KAAQ8oE,EAC5Dv3K,EAAAA,GAAAC,cAAC03K,GAAAA,EAAe,CAACh6K,UAAWwC,GAAOy3K,KAAMlxK,QAASA,KAEpD1G,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOkF,SAAUjE,IAAI,QAClC60H,GACCj2H,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,gBAAeqE,EAAAA,GAAAA,GAAWi0H,IAC1Cj2H,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAAQ,MAG5BqC,EAAAA,GAAAC,cAAC43K,GAAAA,EAAc,CAACnxK,QAASA,EAAS+pH,UAAWpqF,EAAOyxI,eAhDtC,QAmDd,IC/EV,IAAgB,KAAO,WAAW,OAAS,WAAW,OAAS,WAAW,OAAS,WAAW,MAAQ,WAAW,OAAS,WAAW,QAAU,WAAW,aAAe,WAAW,mBAAqB,WAAW,SAAW,WAAW,eAAiB,WAAW,QAAU,WAAW,YAAc,WAAW,UAAY,WAAW,UAAY,WAAW,KAAO,WAAW,WAAa,WAAW,eAAiB,WAAW,KAAO,WAAW,YAAc,WAAW,WAAa,WAAW,aAAe,WAAW,OAAS,WAAW,mBAAmB,WAAW,gBAAkB,WAAW,QAAU,WAAW,iBAAmB,WAAW,iBAAmB,WAAW,mBAAqB,WAAW,OAAS,YCoFxsBC,GAA4B,CAChCza,cAAc,EACdC,WAAY,iBACZya,SAAU,qBAINC,GAAyB,qBAEzBC,IAAwBrpJ,EAAAA,GAAAA,KAAUuvC,GAAOA,KAAM,KAAK,GAwqB1D,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAMU,GAAqBC,EAAAA,EAAAA,KAAyBX,GACpD,IAAKU,EACH,MAAO,CAAC,EAEV,MAAM,OAAErC,EAAM,SAAEuC,GAAaF,EAEvBF,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAChC,IAAKmC,EACH,MAAO,CAAC,EAGV,MAAM,eACJylK,EAAc,SAAEC,EAAQ,QAAElrD,EAAO,cAAEmrD,EAAa,UAAEC,EAAS,KAAE52K,IAC3D62K,EAAAA,EAAAA,KAA0BrmK,IAAW,CAAC,GACpC,WAAEunG,EAAU,SAAEhiF,EAAU4O,MAAOmyI,GAAoBtrD,GAAW,CAAC,EAE/D32F,EAAgBrkB,EAAOqkB,cACvB+1B,GAAkB71B,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,GAC/C2mK,GAAgB9F,EAAAA,EAAAA,IAAiB7gK,EAAQuC,EAAUyjB,GAEnDkiJ,EAAYnsH,IAAoB4qH,EAAgBhlK,EAAOwmK,mBAAmB/gC,WAAQ94I,EAExF,MAAO,CACL6T,OACAylK,iBACA1+D,aACA3mG,WACA2kB,WACAkhJ,sBAAuB3pK,SAAQsD,EAAAA,EAAAA,KAAeJ,GAAQ6mD,2BACtD0/G,YACAL,WACAn2I,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GACjDo6C,kBACA+rH,gBACAO,eAAgBN,EAChB/hJ,gBACAsiJ,WAAYn3K,EACZ82K,kBACD,GAxCevmK,EAtqBiB6mK,EACnCp7K,WACAgV,OACAI,WACAqlK,iBACAM,YACAL,WACA3+D,aACA++D,kBACA/gJ,WACAkhJ,wBACA12I,uBACAqqB,kBACA+rH,gBACAO,iBACAC,aAAa,OACbtiJ,oBAEA,MAAM,mBACJwiJ,EAAkB,kBAClBC,EAAiB,oBACjBC,EAAmB,aACnBtkJ,EAAY,kBACZukJ,EAAiB,oBACjBC,EAAmB,iBACnBn1I,EAAgB,sBAChBo1I,IACErpK,EAAAA,EAAAA,MAGEqH,GAAM7J,EAAAA,EAAAA,IAAuB,MAE7BusD,GAAWvsD,EAAAA,EAAAA,IAAyB,MAEpCqe,GAAere,EAAAA,EAAAA,IAAuB,MACtC8rK,GAAwB9rK,EAAAA,EAAAA,KAAO,IAE/B,SAAErK,IAAaC,EAAAA,EAAAA,MACflF,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MAENioC,EAAOke,IAAYr0C,EAAAA,EAAAA,IAASioK,GAAkB,KAC9CmB,EAAcC,IAAmBrpK,EAAAA,EAAAA,IAAS,GAC3CspK,EAAgB/hJ,GAAY6hJ,EAAe,EAC3CG,EAAgBhiJ,GAAY6hJ,EAAe7hJ,EAAS13B,OAAS,GAE5D25K,EAAeC,IAAoBzpK,EAAAA,EAAAA,KAAUxS,GAC9Ck8K,GAAiBrsK,EAAAA,EAAAA,MACjBssK,IAA0BtsK,EAAAA,EAAAA,KAAO,IAEhCusK,GAAWC,GAAaC,KAAex7K,EAAAA,EAAAA,MACvCy7K,GAAcC,KAAmBhqK,EAAAA,EAAAA,KAAS,IAC1C2mB,GAAWspF,KAAgBjwG,EAAAA,EAAAA,KAAS,IChJtC,SACLiqK,EAAsC5hG,GAEtC,MAAM6hG,GAAqB9pK,EAAAA,EAAAA,IAAiB8gB,IACnB+oJ,EAAK5pE,OAAOn5F,GAC1BA,EAAI1J,UAAY0J,EAAI1J,QAAQuuB,SAAS7K,EAAMvgB,WAGhC0nE,EAASnnD,EAAM,KAGrC3yB,EAAAA,EAAAA,KAAU,KACR2H,SAAS6S,iBAAiB,QAASmhK,GAC5B,KACLh0K,SAAS8S,oBAAoB,QAASkhK,EAAmB,IAE1D,CAACA,GACN,CDuIEC,CAAgB,CAACjjK,IANU9G,EAAAA,EAAAA,IAAiB8gB,IACtCyoJ,GAAwBnsK,SAEvB0jB,EAAMvgB,OAAuBue,QAAQ,WAC1C4qJ,IAAa,KAIf,MAAMM,GAAsBtrK,QAASq3B,GAAS5O,GAAamhJ,GACrD2B,GAAa3B,IAAmBvyI,EAChCm0I,GAAkBxrK,QAAQq3B,GAAS5O,IAAaA,EAAS13B,SAAW82B,KAAc0jJ,IAGlFE,GAAqB/8K,IAAau8K,KAAiB/2K,KAAc42K,IADrB,YAAfjB,GAA2C,aAAfA,IAE1D7pK,QACDsrK,IAJ0BE,IAAmBD,IAIG9B,GAG9CiC,GAAe1rK,QAASq3B,IAAUk0I,IAAenC,GACjDuC,GAAsC,SAAf9B,GAAyB7pK,QAAQyoB,GAAU13B,QAElEs9B,IAAc/sB,EAAAA,EAAAA,IAAgB,KAClC4oK,GAAmB,IAGf0B,IAAatqK,EAAAA,EAAAA,IAAgB,MACjCo+B,EAAAA,EAAAA,KAAe,KACborB,EAASpsD,SAAS+sD,OAAO,GACzB,IAGEogH,IAAYvqK,EAAAA,EAAAA,IAAgB,KAChCwpD,EAASpsD,SAASotK,MAAM,KAI1Br8K,EAAAA,EAAAA,KAAU,KACR,MAAM,eAAEs8K,GAAmBlsK,OAC3B,IAAKksK,EACH,OAGF,MAAMC,EAAS50K,SAASi2B,eAAe,QACjCtjB,EAAeA,KACnB,MAAM,cAAE2/G,GAAkBtyH,SAC1B,GAAIsyH,GAAkBA,IAAkB5+D,EAASpsD,QAAU,CACzD,MAAM,QAAEutK,EAAO,OAAEjtK,GAAW+sK,GAE5B5/J,EAAAA,EAAAA,KAAgB,KACd6/J,EAAO/wK,MAAMkkB,UAAa,cAAa8sJ,OACvCD,EAAO/wK,MAAM+D,OAAU,GAAEA,MACzB5H,SAAS2hD,gBAAgBnrB,UAAYq+I,CAAO,GAEhD,MACE9/J,EAAAA,EAAAA,KAAgB,KACd6/J,EAAO/wK,MAAMkkB,UAAY,GACzB6sJ,EAAO/wK,MAAM+D,OAAS,EAAE,GAE5B,EAKF,OAFA+sK,EAAe9hK,iBAAiB,SAAUF,GAEnC,KACLgiK,EAAe7hK,oBAAoB,SAAUH,EAAa,CAC3D,GACA,KAGHta,EAAAA,EAAAA,KAAU,KACR86K,GAAiB,EAAE,GAClB,CAACf,KAGJ/5J,EAAAA,EAAAA,KAAgB,KACT9E,EAAAA,IAELrY,MAAMC,KAAK6E,SAASyD,iBAAmC,UAAUtK,SAASmrC,IACxEA,EAAM7nB,SAAW7T,QAAQtR,GAAYgtC,IAAUovB,EAASpsD,QAAQ,GAChE,GACD,CAAChQ,KAGJe,EAAAA,EAAAA,KAAU,KACHf,GAOHi8K,GAAiB,GACjBnrK,aAAaorK,EAAelsK,WAP5BosD,EAASpsD,QAASotK,OAClBZ,IAAgB,GAChBX,EAAgB,GAChBh1H,EAAS,IACTq1H,EAAelsK,QAAUmB,OAAOC,YAAW,IAAM6qK,GAAiB,IApJnD,KAwJjB,GACC,CAACj8K,KAEJe,EAAAA,EAAAA,KAAU,KACH05K,GAAmBzlK,GAAMhP,KAC9B6gD,EAAS4zH,GACTY,EAAmB,CAAExoK,OAAQmC,EAAKhP,GAAIoP,WAAUwyD,OAAQ,CAAE6yG,oBAAgBt5K,KAC1EshH,IAAa,IAEb+6D,EAAAA,EAAAA,KAAoB,KAClB,MAAMxwI,EAAQovB,EAASpsD,QAClBg9B,KACL2V,EAAAA,GAAAA,GAAqB3V,GAAO,GAAM,GAClCqvI,KAAa,IACb,GACD,CAACrnK,GAAMhP,GAAIy0K,EAAgBrlK,KAE9B+0B,EAAAA,GAAAA,IAAsB,EAAEC,MAClBpqC,IAAaoqC,IAAiBzB,GAASmyI,GACzCj0H,EAASi0H,EACX,GACC,CAAC96K,EAAU86K,EAAiBnyI,KAE/BwB,EAAAA,GAAAA,IAAsB,EAAEszI,MACjBz9K,GAAYy9K,IAAuBxC,IACpCA,GACFkC,KACAb,MAEAY,KACF,GACC,CAACjC,EAAuBj7K,IAE3B,MAAMsuI,IAAc17H,EAAAA,EAAAA,IAAgB,KAC7B+1B,GAAOtmC,QAAWq4K,GAKvB7zH,EAAS,IACT47D,IAAa,GACb64D,IACA4B,MAPEv9I,IAOU,KAGd5+B,EAAAA,EAAAA,KAAU,IAAOf,GAAWmgC,EAAAA,EAAAA,GAAsBmuG,SAAentI,GAAY,CAACnB,EAAU2/B,KAExF,MAAM+9I,IAAiBx8K,EAAAA,EAAAA,KAAQ,KAC7B,GAAK65K,EACL,OAAOj4H,OAAOuK,OAAO0tH,EAAU,GAC9B,CAACA,IAEE4C,GAAersK,QAAQosK,IAAgBr7K,QACvCu7K,GAAuBD,KAAiBp5I,GAE9CxjC,EAAAA,EAAAA,KAAU,KACJ6tD,GAAmB5uD,GAAU07K,GAAuB,GACvD,CAAC9sH,EAAiB5uD,IAErB,MAAMoyH,IAAex/G,EAAAA,EAAAA,IAAgB,KACnC,MAAMC,EAASmC,GAAMhP,GAChB6M,GAIL2nK,IAAsB,KAChBmB,EAAsB3rK,SAC1BurK,EAAoB,CAAE1oK,SAAQuC,WAAUuzB,SAAQ,GAChD,IAGEk1I,IAAoBjrK,EAAAA,EAAAA,IAAiBkrK,IAGzC,GAFAnC,EAAsB3rK,SAAU,EAE5B8tK,EAASl8C,WAAW,OAASs5C,EAI/B,OAHAG,EAAmB,CAAExoK,OAAQmC,EAAMhP,GAAIoP,WAAUwyD,OAAQ,CAAEgzG,WAAW,KACtE/zH,EAASi3H,EAAS17H,MAAM,SACxBgwE,KAIFvrE,EAASi3H,GAEJA,IACHr7D,IAAa,GACb64D,IACAK,EAAsB3rK,SAAU,EAClC,KAGFjP,EAAAA,EAAAA,KAAU,KACJ4nC,GACFypF,IACF,GACC,CAACzpF,KAEJ5nC,EAAAA,EAAAA,KAAU,KACR0hH,GAAanxG,QAAQqpK,GAAe,GACnC,CAACA,KAEJ55K,EAAAA,EAAAA,KAAU,KACHg5B,GAAU13B,QACC03B,EAAS13B,OAASu5K,EA/PA,GAiQhCxpD,IACF,GACC,CAACwpD,EAAc7hJ,GAAU13B,UAE5BtB,EAAAA,EAAAA,KAAU,KACR,GAAKf,EA4BL,OA1BAm8K,GAAwBnsK,SAAU,EAoBlCmB,OAAOoK,iBAAiB,WAAYwhD,GACpC5rD,OAAOoK,iBAAiB,UAAWwhD,GAEnC5rD,OAAOoK,iBAAiB,aAAcwiK,GACtC5sK,OAAOoK,iBAAiB,YAAawiK,GAE9B,KACLA,IACA5sK,OAAOqK,oBAAoB,aAAcuiK,GACzC5sK,OAAOqK,oBAAoB,YAAauiK,EAAgB,EA3B1D,SAAShhH,IACPX,EAASpsD,SAAS+sD,QAClBs/G,MAEA2B,EAAAA,GAAAA,KAAQ,KACN7B,GAAwBnsK,SAAU,CAAK,GAE3C,CAEA,SAAS+tK,IACP5sK,OAAOqK,oBAAoB,WAAYuhD,GACvC5rD,OAAOqK,oBAAoB,UAAWuhD,IAEtCihH,EAAAA,GAAAA,KAAQ,KACN7B,GAAwBnsK,SAAU,CAAK,GAE3C,CAYC,GACA,CAAChQ,KAEJ6vB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ6P,KAGV,MAAOosB,GAAaC,GAASM,GAAiB,IAAKL,EAAAA,GAAAA,GAAkBmmE,GAAcr4F,GAE7EkkJ,IAAkB/8K,EAAAA,EAAAA,KAAQ,KAC9B,IAAMynC,IAAU+xI,IAAc3uH,IAAa1pD,OACzC,OAAOymC,GAAAA,EAET,MAAMt0B,GAAS0+B,EAAAA,EAAAA,MAEf,OAAO6Y,GAAYrpD,KAAKw7K,IACtB,MAAOrrK,EAAQ7M,IAAMi0H,EAAAA,GAAAA,GAAqBikD,GACpCl1K,GAAUswB,EAAAA,EAAAA,KAAkB9kB,EAAQ3B,EAAQ7M,GAClD,IAAKgD,EACH,OAGF,MAAMm1K,EAAkBvvH,IAAmBo3D,EAAAA,EAAAA,IAAYnzG,IAAWA,IAAWurK,EAAAA,KACzEC,EAAAA,EAAAA,KAAsB7pK,EAAQxL,QAAW7H,EACvCy1B,GAAgBC,EAAAA,EAAAA,KAAariB,EAAQxL,GAK3C,MAAO,CACLk1K,kBACAl1K,UACA2wK,aAPkBllI,EAAAA,EAAAA,KAAWjgC,EAAQxL,EAAQ6J,QAQ7C6mK,WANiByE,GAAkBvnJ,EAOpC,IACAwL,OAAO9wB,QAAQ,GACjB,CAACq3B,EAAO+xI,EAAU3uH,GAAa6C,IAE5B0vH,IAAqB1rK,EAAAA,EAAAA,IAAiB5J,IAC1C,MAAMk1K,GAAkBK,EAAAA,GAAAA,GAAmBv1K,GACrClH,EAAQi4B,GAAUgH,QAAQm9I,IAAoB,EAEpDrC,EADkB/5K,EAAQwqD,IAGP,SAAf6uH,GACFqB,IAAgB,GAGlBvlJ,EAAa,CACXpkB,OAAQ7J,EAAQ6J,OAChBiL,UAAW9U,EAAQhD,GACnBoP,SAAW8lK,OAA4B/5K,EAAXiU,IAG9BknK,IAAa,IAGTkC,IAAyB5rK,EAAAA,EAAAA,IAAgB,KAC7C4pK,IAAiBl7G,IAAUA,IAC3B+6G,IAAa,IAGTlyJ,IAAgB0jC,EAAAA,GAAAA,GAA0B3/B,EAAc0uJ,IAAsB96K,IAClF,MAAM28K,EAAcR,MAA6B,IAAXn8K,EAAe,EAAIA,GACrD28K,IACFH,GAAmBG,EAAYz1K,SAC/B6yK,EAAgB/5K,EAAQwqD,IAC1B,GACE,IAAGiuH,MAA0B,GAE3BmE,IAAqB9rK,EAAAA,EAAAA,IAAiBg1D,IAC1CyzG,EAAmB,CAAExoK,OAAQmC,EAAMhP,GAAIoP,WAAUwyD,WAEjDwqD,IAAc,IAGVusD,IAAoB/rK,EAAAA,EAAAA,IAAiBgsK,IACrChB,GACFt3I,EAAiB,CACfQ,eAAgB,eAKpB43I,GAAmB,CAAEhE,SAAUkE,GAAM,IAGjCC,IAAuBjsK,EAAAA,EAAAA,IAAgB,KAC3C8rK,GAAmB,CAAEhE,cAAUv5K,GAAY,IAGvC29K,IAAkBlsK,EAAAA,EAAAA,IAAgB,KAClCsoK,EACFwD,GAAmB,CAAE9D,WAAW,IAI9BF,GACFmE,IACF,IAGIE,IAAyBnsK,EAAAA,EAAAA,IAAiB5O,IAC9C06K,GAAmB,CAAE16K,SACrBw4K,IAAgB,EAAK,IAGjBwC,IAAmBpsK,EAAAA,EAAAA,IAAgB,KACvC,GAAmB,SAAfuoK,IACJmB,KACAa,KACIpjJ,GAAU,CACZ,MAAMklJ,EAAgBrD,EAAe,GAC9B/oK,EAAQiL,IAAam8G,EAAAA,GAAAA,GAAqBlgG,EAASklJ,IAC1DhoJ,EAAa,CAAEpkB,SAAQiL,YAAW1I,aAClCymK,EAAgBoD,EAClB,KAGIC,IAAmBtsK,EAAAA,EAAAA,IAAgB,KACvC,GAAmB,SAAfuoK,IACJmB,KACAa,KACIpjJ,GAAU,CACZ,MAAMklJ,EAAgBrD,EAAe,GAC9B/oK,EAAQiL,IAAam8G,EAAAA,GAAAA,GAAqBlgG,EAASklJ,IAC1DhoJ,EAAa,CAAEpkB,SAAQiL,YAAW1I,aAClCymK,EAAgBoD,EAClB,KAGF,SAASE,GAAcn7K,EAAwBo7K,GAC7C,MAAM/8E,GAAc+8E,GAAYjE,IAAen3K,EAC/C,OAAQA,GACN,IAAK,OACH,OACE1B,EAAAA,GAAAC,cAACsuG,GAAAA,EAAQ,CACP5wG,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO04K,WAAY94E,GAAc5/F,GAAO48K,cAClEntK,OAAQ8C,GAAMhP,GACd0B,MAAOnH,EAAQ,kBACfkiG,SAAS,OACTniG,QAAS8+K,EAAWN,GAAkBC,KAG5C,IAAK,UACH,OACEz8K,EAAAA,GAAAC,cAACsuG,GAAAA,EAAQ,CACP5wG,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO04K,WAAY94E,GAAc5/F,GAAO48K,cAClEntK,OAAQ2mB,EACRwQ,eAAa,EACb3hC,MAAOnH,EAAQ,oBACfkiG,SAAS,UACTniG,QAAS8+K,EAAWN,GAAkBC,KAG5C,IAAK,WACH,OACEz8K,EAAAA,GAAAC,cAACsuG,GAAAA,EAAQ,CACP5wG,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO04K,WAAY94E,GAAc5/F,GAAO48K,cAClEzmE,WAAYyhE,GACZ3yK,MAAOnH,EAAQ,qBACfkiG,SAAS,WACTniG,QAAS8+K,EAAWN,GAAkBC,KAKhD,CAEA,SAASO,KACP,OACEh9K,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO88K,UAAWxC,IAAsBt6K,GAAO+8K,kBAC1Eh6K,GAAYlD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOg9K,YACpC9B,KAAiBzC,GAChB54K,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACTC,GAAOs4K,WACNv1K,GAAY/C,GAAOi9K,KACpB,iBAGDhC,GAAeh7K,KAAKk8K,IACnB,MAAMe,GAAWhtI,EAAAA,EAAAA,IAAeisI,EAAIrrI,SAAUmnI,GAC9C,OACEp4K,EAAAA,GAAAC,cAACq9K,GAAAA,EAAc,CACb7sI,YAAY,eACZzvC,KAAKswC,EAAAA,EAAAA,IAAegrI,EAAIrrI,UACxBA,SAAUqrI,EAAIrrI,SACdqrI,IAAKA,EACLiB,WAAS,EACTpvK,WAAYmtK,GACZ+B,SAAUA,EACVr/K,QAASq/K,EAAWd,GAAuBF,IAC3C,KAKTzD,GACC54K,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOq9K,YAAa,iBAE7CX,GAAc,QACdA,GAAc,WACdA,GAAc,aAGlBvC,IACCt6K,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACbtvC,IAAKwU,EACLjuB,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO+sH,QAAS,iBAC1CvmE,MAAOg1H,GACP1uH,aAAe,IAAGgrH,KAClB34G,iBAAkB,EAClB1Y,WAAY8C,GACZ+C,UAAW5kC,IAEV2yJ,IACCx6K,EAAAA,GAAAC,cAAA,QAAMe,IAAI,UAAUrD,UAAWwC,GAAOusD,aACnCzuD,EAAQ,mBAAoBooC,IAGhCk0I,IACCv6K,EAAAA,GAAAC,cAAA,QAAMe,IAAI,YAAYrD,UAAWwC,GAAOusD,aACrCzuD,EAAQ,6BAGZ09K,IAAiBv7K,KAAI,EACpBsG,UAAS0wK,aAAYC,cAAauE,mBACjC50H,IACDhnD,EAAAA,GAAAC,cAACk3K,GAAkB,CACjBn2K,IAAK46K,EACL6B,eAAgB/2K,EAAQ0uB,KACxBz3B,UAAWs6K,GACX5xI,MAAOA,EACP3/B,QAASA,EACT0wK,WAAYA,EACZC,YAAaA,EACbC,eAAgBsB,EAChBl7K,SAAU47K,EAAetvH,KAAmBhD,EAC5ChpD,QAASg+K,QAOvB,CAEA,OACEh8K,EAAAA,GAAAC,cAAA,OACEyD,GAAG,eACH/F,WAAWuC,EAAAA,GAAAA,GACTC,GAAOkgC,KACP3iC,GAAYyC,GAAOY,QAClBrD,GAAYg8K,GAAiB,kBAC9BI,IAAa35K,GAAOu9K,QACpBx6K,GAAY/C,GAAOw9K,QAErBvmK,IAAKA,GAELpX,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOqE,SACnBtB,GACAlD,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt4B,UAAWwC,GAAO6F,OAClBkwB,KAAMxjB,EACN/Q,KAAK,SACL2qD,gBAAiBA,IAGrBtsD,EAAAA,GAAAC,cAAComD,GAAAA,EAAW,CACVjvC,IAAK0iD,EACLppD,MAAO21B,EACP1oC,WAAWuC,EAAAA,GAAAA,GACTC,GAAOuqC,MACP+vI,IAAsBt6K,GAAOy9K,aAC7BnD,KAAuBv3K,GAAY/C,GAAO09K,oBAE5CC,UAAW56K,EACX2zB,UAAWA,GACXknJ,oBAAsB,IAAG59K,GAAO+sH,YAAY+qD,KAC5C+F,YAAarD,KAAyBz3K,EACtC+6K,cAAetD,KAAyBz3K,EACxCwpD,YAA8BzuD,EAAjB26K,EAAyB,qBAAgC,UACtE/tI,2BAAyB,EACzB35B,SAAUqqK,GACV2C,iBAAkB1B,GAClBj9G,QAASysE,GACTmyC,aAAcj7K,EACdw6C,QAASq8H,GACT2D,QAAS5D,GACTsE,UAAW3E,EAAgBiD,QAAmB79K,EAC9Cw/K,YAAa7E,EAAgBoD,QAAmB/9K,GAEhDmB,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOm+K,YACpBlG,GACCp4K,EAAAA,GAAAC,cAACq9K,GAAAA,EAAc,CACb7sI,YAAY,oBACZ9yC,UAAWwC,GAAOo+K,eAClBttI,SAAUmnI,EACVkE,IAAK7D,GAAWnnI,EAAAA,EAAAA,IAAe8mI,IAC/Bp6K,QAASu+K,KAGZ3D,GAAkB54K,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOy1G,MAAM,OAEhD1yG,GAAY85K,OAEd95K,GACAlD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOq+K,OACrBx+K,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cAENrT,QAASA,IAAMm7K,EAAoB,CAAElkH,YAAYwpH,EAAAA,GAAAA,IAAc/vJ,KAAKC,SACpE7Y,UAAW7X,EAAQ,eAEnB+B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAKlBW,GAAY85K,KACZ95K,GACClD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOsE,QACrBzE,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLlU,KAAK,UACL0P,MAAM,cAENrT,QAASA,IAAMm7K,EAAoB,CAAElkH,YAAYwpH,EAAAA,GAAAA,IAAc/vJ,KAAKC,SACpE7Y,UAAW7X,EAAQ,eAEnB+B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,cAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOu+K,SACpBhE,KACCjjJ,GAAU13B,OACR9B,EAAQ,KAAM,CAAC2B,KAAKZ,IAAIs6K,EAAe,EAAG,GAAI7/D,IAC5ChiF,IAAaA,EAAS13B,QACxB9B,EAAQ,cAIE,SAAf46K,GAAyB7pK,QAAQyoB,GAAU13B,SAC1CC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAWwC,GAAOw+K,UAClBh9K,KAAK,UACLQ,QAAM,EACN0jD,OAAK,EACLzjD,mBAAiB,EACjBpE,QAASk+K,IAEOj+K,EAAfg8K,GAAuB,eAA0B,iBAGrDU,KAAyBF,IACxBz6K,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOy+K,kBACrB5+K,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO0+K,kBAAmBpF,GAAiBt5K,GAAO2+K,oBAC5EjpK,OAAK,EACLlU,KAAK,UACL0P,MAAM,YACNrT,QAAS0+K,GACTtrI,gBAAiBqoI,EACjB3jK,UAAW3X,EAAK,0BAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,QAEbvC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO0+K,kBAAmBrF,GAAiBr5K,GAAO2+K,oBAC5EjpK,OAAK,EACLlU,KAAK,UACL0P,MAAM,YACNrT,QAAS4+K,GACTxrI,gBAAiBooI,EACjB1jK,UAAW3X,EAAK,0BAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,YAMjB,K,wCEnrBV,MAAMgmG,GAAsB,IAAMzvF,EAAAA,EAwUlC,IAAetb,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAM,SACJm4F,EAAQ,MACRc,EAAK,OACLu1E,EAAM,SACNC,EAAQ,OACRC,GACE/sK,EAAOutE,SAELnzB,GAAkB71B,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,GAC/CmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAC1B2uK,GAAoBltK,EAAAA,EAAAA,IAASzB,QAA+D1R,GAArDkvD,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAASitF,YAAY95F,GAE7F,MAAO,CACLgP,OACAysK,eAAgBF,GAAQx/F,SACxB2/F,aAAcH,GAAQj2E,OACtBq2E,eAAgBN,EAAOt/F,SACvBqkB,iBAAkBk7E,EAASv/F,SAC3BkpB,gBAAiBD,EACjBi2D,YAAan1D,EAAMC,OACnBC,YAAY41E,EAAAA,EAAAA,KAAyBptK,GACrCo6C,kBACArqB,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GACjDgtK,mBACD,GA1BejtK,EAtU6BstK,EAC/C7sK,OACAI,WACAnV,YACA6a,WACA8rF,gBACAxB,cACAorE,kBACAmR,iBACAv7E,mBACAq7E,iBACAC,eACAzgB,cACAh2D,kBACAu2E,mBACAx1E,aACAp9C,kBACArqB,uBACAsiE,iBACA7I,WACAgJ,kBACA86E,mBAEA,MAAM,mBACJC,EAAkB,iBAClBC,EAAgB,cAChBC,EAAa,YACbC,EAAW,oBACXC,IACE9vK,EAAAA,EAAAA,MAGE6b,GAAere,EAAAA,EAAAA,IAAuB,MAEtCksB,GAAYlsB,EAAAA,EAAAA,IAAuB,MAEnCowF,GAAkBpwF,EAAAA,EAAAA,IAA0B,OAGhDi0C,aAAc+oD,EACdnpD,cAAeopD,GACbtpD,KAEE4+H,GAAoBC,EAAAA,GAAAA,GAAqBrtK,GAAMhP,GAAIoP,GAEnD83F,EAAU,GAAElP,iBACZ,eACJE,EAAc,0BACdG,EAAyB,mCACzBkB,EAAkC,mCAClCL,EAAkC,6BAClCM,EAA4B,iBAC5BhU,GACEuS,GAA0B7vE,EAAc6N,EAAWmxE,EAAQpyF,GAEzDra,GAAOD,EAAAA,EAAAA,KAEP4sG,EAAiB97F,QAAQ2vJ,GAEzB5zD,GAAUnsG,EAAAA,EAAAA,KAAQ,KACtB,GAAI4gL,GAAgBL,EAAgB,CAClC,MAAMa,EAAiD,GAoBvD,OAnBIZ,GAAcr/K,QAChBigL,EAAWtgL,KAAK,CACdgE,GAAI4jG,EAAAA,IACJL,WAAY,IACZ7hG,MAAO,GACPq6E,SAAU2/F,EACV7pJ,MAAO6pJ,EAAar/K,OACpBimG,SAAS,IAGTm5E,GAAgBp/K,QAClBigL,EAAWtgL,KAAK,CACdgE,GAAI6jG,EAAAA,IACJN,WAAY,IACZ7hG,MAAOjH,EAAK,kBACZshF,SAAU0/F,EACV5pJ,MAAO4pJ,EAAep/K,SAGnBigL,CACT,CAEA,IAAKrhB,EACH,OAAOn4H,GAAAA,EAGT,MAAMwkE,EAAc,GAEhBlH,EAAiB/jG,QACnBirG,EAAYtrG,KAAK,CACfgE,GAAImiG,EAAAA,IACJoB,WAAY,IACZ7hG,MAAOjH,EAAK,oBACZshF,SAAUqkB,EACVvuE,MAAOuuE,EAAiB/jG,SAIxBs/K,EAAet/K,QACjBirG,EAAYtrG,KAAK,CACfgE,GAAI+hG,EAAAA,IACJwB,WAAY,IACZ7hG,MAAOjH,EAAK,kBACZshF,SAAU4/F,EACV9pJ,MAAO8pJ,EAAet/K,SAI1B,MAAM8rG,EAAa,IAAK8yD,GAAe,IACnCugB,GACFrzE,EAAWV,QAAQ+zE,GAGrB,MAAMe,EAAsBz/H,OAAOuK,QAAO0/C,EAAAA,GAAAA,IAAW9B,EAAiBkD,IAEtE,MAAO,IACFb,KACAi1E,EACJ,GACA,CACDthB,EACAh2D,EACA7E,EACAu7E,EACAH,EACA/gL,EACAghL,EACAK,EACAJ,IAGIpzE,GAAkBptG,EAAAA,EAAAA,KAAQ,IAC9BksG,GAC4D,IAAzDC,EAAQjrE,QAAQlxB,GAAQA,EAAI6wE,UAAU1/E,SAAQA,QAChD,CAACgrG,EAASD,KAEbrsG,EAAAA,EAAAA,KAAU,KACHqkG,IACL28E,IACKvR,GACL4R,EAAkB,CAAEp+K,KAAM,kBAAkB,GAC3C,CAACwsK,EAAiBprE,EAAa28E,EAAoBK,IAEtD,MAAMhoD,GAAoB5rB,EAAAA,GAAAA,GAAkB,GAAI3Q,EAAAA,KAC1C2kF,EAAuBp1E,GAAkBgtB,IAC3C9rB,IAAoBkiE,GAAmBsR,IAE3CrlG,EAAAA,GAAAA,GAAoB1gD,GAAYymJ,IAAyBzmJ,EAAU/rB,UAGnEjP,EAAAA,EAAAA,KAAU,KACR,IAAKqsG,EACH,OAGF,MAAMtmG,EAASi1B,EAAU/rB,QACzB,IAAKlJ,EACH,OAGF,MAAM4nG,EAAUxQ,EAAiB2M,IAAuB/jG,EAAOoqC,YAAc,EAAI25D,GAAsB,IAEvG1iB,EAAAA,GAAAA,GAAwBrhF,EAAQ4nG,EAAQ,GACvC,CAACtB,EAAgBlP,IAEpB,MAAMukF,GAAsB7vK,EAAAA,EAAAA,IAAgB,CAACquE,EAAqB2pC,EAAoB+lD,KACpF3pE,EAAgB/lB,EAAS2pC,EAAU+lD,GAAgB,GACnDqR,EAAiB,CAAE/gG,WAAU,IAGzByhG,IAAsB9vK,EAAAA,EAAAA,IAAiBquE,IAC3CghG,EAAc,CAAEhhG,WAAU,IAGtB0hG,IAAoB/vK,EAAAA,EAAAA,IAAiBquE,IACzCihG,EAAY,CAAEjhG,WAAU,IAGpB2hG,IAAkBhwK,EAAAA,EAAAA,IAAgB,KACjC49J,GACL4R,EAAkB,CAAEp+K,KAAM,iBAAkB,IAGxC6+K,IAA4BjwK,EAAAA,EAAAA,IAAiBquE,IACjDkhG,EAAoB,CAAElhG,WAAU,IAGlC,IAAKjsE,EAAM,OA+DX,MAAM68B,IAAgBrvC,EAAAA,GAAAA,GnK5UD,WmK4U6BvC,GAElD,IAAKuiL,EACH,OACElgL,EAAAA,GAAAC,cAAA,OAAKtC,UAAW4xC,IACZ2+H,GAAoBsR,EAElBxzE,EACFhsG,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IAAwBhC,EAAK,eAE7C6B,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAJR7sD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IAAwBhC,EAAK,oCAUrD,MAAMouG,IAAkBrsG,EAAAA,GAAAA,GACtBC,GACA,gBACCqqG,GAAuBrqG,IAG1B,OACEH,EAAAA,GAAAC,cAAA,OAAKtC,UAAW4xC,KACXiwI,GACDx/K,EAAAA,GAAAC,cAAA,OAAKmX,IAAKqiB,EAAW97B,UAAW4uG,IAC9BvsG,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BACbqC,EAAAA,GAAAC,cAAA,UAAQmX,IAAKumF,EAAiBhgG,UAAU,kBACvCotG,EAAQ3qG,KAzFnB,SAAqBo9F,EAA8Ch+F,GACjE,MAAMitG,EAAejP,EAAW/d,WAAW,GACrC3C,GAAkB58E,EAAAA,GAAAA,GAAeC,GAAqBX,IAAUo8F,GnKjRoJ,YmKkRpN8Q,EAAmBltG,EAAQmtG,EAAAA,IAEjC,OAAInP,EAAW95F,KAAO+hG,EAAAA,KACjBjI,EAAW95F,KAAOmiG,EAAAA,KAClBrI,EAAW95F,KAAO88K,EAAAA,KAClBhjF,EAAWI,eACV6O,EAGFzsG,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLjB,IAAKw8F,EAAW95F,GAChB/F,UAAWm/E,EACXhnE,UAAW0nF,EAAWp4F,MACtByQ,OAAK,EACLmwC,MAAOw3C,EAAW95F,KAAO+hG,EAAAA,KAAwBjI,EAAW95F,KAAOmiG,EAAAA,IACnEx0F,MAAM,cAENrT,QAASA,IAAMkrF,EAAiB1pF,IAE/Bg+F,EAAW95F,KAAO+hG,EAAAA,IACjBzlG,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WACTi7F,EAAW95F,KAAOmiG,EAAAA,IACpB7lG,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,aACTi7F,EAAW95F,KAAO88K,EAAAA,IACpBxgL,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACC,KAAMxjB,EAAM/Q,KAAK,UAEzB3B,EAAAA,GAAAC,cAACs9F,GAAe,CACdC,WAAYA,EACZv6E,QAASymF,IAAe5G,EACxBpF,oBAAqBR,EACrBS,gBAAiB+O,EAAmB/O,OAAkB9+F,EACtD0rB,eAAa,KAOnBvqB,EAAAA,GAAAC,cAACy/F,GAAa,CACZ1+F,IAAKw8F,EAAW95F,GAChBi7E,QAAS8tB,EACT9qG,KAAM87F,EAAAA,IACNr4F,MAAOo4F,EAAWp4F,MAClBzH,UAAWm/E,EACX75D,QAASymF,IAAe5G,EACxBpF,oBAAqBR,EACrByC,eAAa,EACb19D,sBAAoB,EACpB07D,gBAAiB+O,EAAmB/O,OAAkB9+F,EACtDqhG,qBAAsBoE,EACtBtmG,QAASkrF,EACTiX,SAAU3gG,EACV+qB,eAAa,GAIrB,MAkCIvqB,EAAAA,GAAAC,cAAA,OACEmX,IAAKwU,EACL1D,YAAao4J,GACb95H,SAAU+jD,EACV5sG,WACEuC,EAAAA,GAAAA,GACEC,GACAuY,EAAAA,GAAe,eAAiB,iBAC/B8mK,GAAgBr/K,KAIpB4qG,EAAQ3qG,KAAI,CAACo9F,EAAYx2C,IACxBhnD,EAAAA,GAAAC,cAAC2jG,GAAU,CACT5iG,IAAKw8F,EAAW95F,GAChB85F,WAAYA,EACZsF,YAAa9zF,QAAQ06F,GAAc5G,GACnCyB,eAAgBA,EAChB/kG,MAAOwnD,EACP00C,SAAUkP,EACVlN,oBAAqB3B,EACrBkB,mCAAoCA,EACpCL,mCAAoCA,EACpCiH,aAAcjI,GAAkB50C,EAAI,GAAK40C,GAAkB50C,EAAI,EAC/D88C,iBAAkBA,EAClBx3C,gBAAiBA,EACjBrqB,qBAAsBA,EACtBqiE,cAAeA,EACfD,iBAAkB7G,EAAW95F,KAAOw7K,EACpCx6E,gBAAiBy7E,EACjBx7E,gBAAiBy7E,GACjBx7E,cAAey7E,GACfx7E,sBAAuB07E,GACvBh2J,eAAa,EACby5E,iBAAkBxG,EAAW95F,KAAO4jG,EAAAA,SAItC,KC1PV,IAAe9pG,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAM,mBAAEqxC,EAAkB,aAAEynD,GAAiBn3F,EAAO2vC,WAE9C,mBAAE4+H,GAAuBvuK,EAAO8/B,WAAa,CAAC,GAC9C,iBAAE0uI,EAAgB,wBAAEz2E,IAA4Bl8C,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAAW,CAAC,EAE7F,MAAO,CACLmwK,mBACA9+H,qBACAynD,eACAs3E,eAAgBF,EAChBz2E,mBAAoBC,EACrB,GAbeh4F,EAlGqC2uK,EACvD99E,cACA49E,mBACA9+H,qBACAynD,eACAnF,sBACA8F,qBACAtjG,UACAi6K,iBACAn8E,mBACAC,wBAGA,MAAM9G,GAAkBpwF,EAAAA,EAAAA,IAA0B,MAE5Cw1F,GAAoBx1F,EAAAA,EAAAA,IAA0B,OAC5CI,MAAOyf,IAAgBE,EAAAA,GAAAA,MACzB,cAAEuzJ,IAAkB19K,EAAAA,EAAAA,MAEpB29K,EAAmBp6K,GAASm7C,WAAWqrE,QAEvC6zD,EAA4BJ,GAAkBG,GAChDA,EAAiB/gL,QAAU4gL,EAEzBK,GAAwBpiL,EAAAA,EAAAA,KAAQ,KACpC,GAAImiL,EAA2B,CAC7B,MAAMl/H,EAAYi/H,EAAiB1gL,KAAI,EAAG6wC,cAAeA,IAIzD,OAHI+4D,GACFnoD,EAAUspD,QAAQ,CAAEzpG,KAAM,SAErBmgD,CACT,CAEA,IAAK6+H,EACH,MAAO,GAGT,GAA8B,QAA1BA,EAAiBh/K,KAAgB,CACnC,MAAMu/K,GAA0Cr/H,GAAsB,IAAIxhD,KAAI,EAAG6wC,cAAeA,IAIhG,OAHI+4D,GACFi3E,EAAgB91E,QAAQ,CAAEzpG,KAAM,UAE3Bw/K,EAAAA,EAAAA,IAAcD,EAAiB53E,EACxC,CAEA,MAAM43E,EAAyCP,EAAiBS,QAAQrhI,QAKxE,OAJIkqD,GACFi3E,EAAgB91E,QAAQ,CAAEzpG,KAAM,UAG3Bw/K,EAAAA,EAAAA,IAAcD,EAAiB53E,EAAa,GAClD,CACDznD,EAAoB8+H,EAAkBr3E,EAAc03E,EAA2BD,EAAkB92E,IAG7Fo3E,GAAexiL,EAAAA,EAAAA,KAAQ,KAC3B,MAAMyiL,EAAczhL,KAAKC,IA5DD,MA4D2BiZ,EAAAA,EAAKsU,GAClDk0J,GAAYl0J,EAhEK,IAIE,KACD,IA2D2EtU,EAAAA,EAC7FyhB,EAAiB8mJ,EAhEI,GAgEmCvoK,EAAAA,EAExDyoK,EAAa3hL,KAAKse,OAAOqc,EAAiB+mJ,IApE9B,GAoE2DA,IACvEjyG,EAAYzvE,KAAKg9E,KAAKokG,EAAsBjhL,OAASwhL,GAErDC,EAvEY,GAuEMnyG,GAA6BA,EAAY,GAAKiyG,EArE3C,GAqE+ExoK,EAAAA,EAAM,EAEhH,OAAOlZ,KAAKC,IAtEa,GAsEciZ,EAAAA,EAAK0oK,EAAgB,GAC3D,CAACR,EAAsBjhL,OAAQqtB,IAElC,OACEptB,EAAAA,GAAAC,cAAA,OAAKtC,UC3Hc,WD2HUsM,MAAQ,WAAUm3K,OAC7CphL,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GC5HsB,WD4HS2gL,EAAgB,eAAiB,kBAC9E7gL,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gDACbqC,EAAAA,GAAAC,cAAA,UAAQmX,IAAKumF,EAAiBhgG,UAAU,kBACxCqC,EAAAA,GAAAC,cAAA,UAAQmX,IAAK2rF,EAAmBplG,UAAU,kBACzCqjL,EAAsB5gL,KAAK6wC,IAC1B,MAAMm3D,GAAa92D,EAAAA,EAAAA,IAAeL,GAC5B8uD,EAAaqI,EAAalE,GAAqB/xE,SAASi2E,QAAcvpG,EAE5E,OACEmB,EAAAA,GAAAC,cAAC4iG,GAAa,CACZ7hG,IAAKonG,EACLn3D,SAAUA,EACV8uD,WAAYA,EACZ+C,YAAaA,EACblhD,mBAAoBA,EACpB5jD,QAASwmG,EACTp8E,cAAeq8E,EACf9G,gBAAiBA,EACjBoF,kBAAmBA,GACnB,MAKN,KEtFJ0+E,GAA0B,OAAS3oK,EAAAA,EAqOzC,IAAetb,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACxC,MAAM4qD,GAAQxqD,EAAAA,EAAAA,KAAeJ,GACvBwvK,EAAsBxvK,EAAOwvK,qBAC7B,OACJnxK,EAAM,UAAEiL,EAAS,YAAEmmK,EAAW,QAAEt8I,EAAO,SAAEpjB,EAAQ,cAAE2/J,EAAa,aAAEpC,GAChE1iH,EAAM3pB,gBAAkB,CAAC,EACvBnR,EAAQ2/I,GAAet8I,GACzBmD,EAAAA,EAAAA,KAAgBt2B,EAAQyvK,EAAat8I,QACrCxmC,EACE6T,EAAOnC,GAAS4hC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,QAAU1R,EAC7CivD,EAAev9C,GAASw9C,EAAAA,EAAAA,KAAmB77C,EAAQ3B,QAAU1R,EAC7D6H,EAAU6J,GAAUiL,GAAYwb,EAAAA,EAAAA,KAAkB9kB,EAAQ3B,EAAQiL,QAAa3c,EAC/EipH,GAAgB91G,EAAAA,EAAAA,IAASzB,GAAUoxK,GAAe,IAClDE,EAAmE,SAAzC/zH,GAAc4yH,kBAAkBh/K,MAC1D,mBAAE++K,GAAuBvuK,EAAO8/B,WAAa,CAAC,EAC9C8vI,EAAkE,QAAzCh0H,GAAc4yH,kBAAkBh/K,MAC1DosD,GAAc4yH,kBAAkBqB,iBAE/BjB,EAAmBp6K,GAASm7C,WAAWqrE,QACvC6zD,EAA4B/xK,QAAQyxK,GAAsBK,GAC3DA,EAAiB/gL,QAAU0gL,GAEhC,MAAO,CACL/5K,UACAs7B,QACA/f,WACA+/J,sBAAsBtvK,GAAMuvK,aAAeJ,GAA2Bd,KACjEe,GAA0Bh6D,GAC/BxjB,eAAeyI,EAAAA,EAAAA,KAA+B76F,GAC9C+vB,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GACjD0vK,gBACApC,eACAjvK,SACAmxK,sBACD,GAlCiBzvK,EAnO8BiwK,EAChD79K,SACAqC,UACAs7B,QACA/f,WACAqiF,gBACAriE,uBACA+/I,sBACAJ,gBACArxK,SACAivK,eACAkC,0BAEA,MAAM,eACJS,EAAc,oBAAEC,EAAmB,YAAE5xH,EAAW,iBAAEzsB,EAAgB,kBAAE8L,EAAiB,kBAAEwyI,EAAiB,wBACxGC,EAAuB,qBAAEC,EAAoB,sBAAEC,IAC7CzyK,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,KAEPukL,GAAoB10I,EAAAA,GAAAA,GAAiBrnC,GAAShD,IAAI,GAClDg/K,GAAiB30I,EAAAA,GAAAA,GAAiBrnC,GAAS6J,QAAQ,GACnDoyK,GAAsB50I,EAAAA,GAAAA,GAAiB/L,GAAOpyB,QAAQ,GACtDgzK,GAAkB70I,EAAAA,GAAAA,GAAiB/L,GAAOt+B,IAC1Cm/K,GAAiB90I,EAAAA,GAAAA,GAAiB9rB,GAAU,GAE5CkwD,GAAU5kE,EAAAA,EAAAA,IAAuB,MACjCu1K,GAAoBlkL,EAAAA,EAAAA,KAAQ,KAChC,GAAKikL,EAIL,OAAID,EACKC,EAGF,CACL52J,EAAG42J,EAAe52J,GAAK+1J,GAzCQ,IACG,IAyClC91J,EAAG22J,EAAe32J,GAAK81J,GA1CgB,IACG,IA0C3C,GACA,CAACY,EAAiBC,EAAgBb,IAE/B1vG,GAAiBhiE,EAAAA,EAAAA,IAAgB,IAAM6hE,EAAQzkE,UAC/C0zF,GAAY9wF,EAAAA,EAAAA,IAAgB,KAAM,CACtC+wF,YAAY,EACZ0hF,SAAUJ,EACVK,SAAS5lI,EAAAA,EAAAA,OAAiB+0B,EAAQzkE,UAC5BykE,EAAQzkE,QAAQkhC,YAAc6yI,IAA2B,IAAIwB,KAC/D,MAGAC,GAA6B5yK,EAAAA,EAAAA,IAAiBquE,IAClD,IAAK+jG,IAAmBD,EACtB,OAEF,MAAMxxI,EAAwB0tC,EAAQoiB,cAClC,CAAEr/F,KAAM,SAAUsnF,WAAYrK,EAAQj7E,IACtC,CAAEhC,KAAM,QAAS+8J,SAAU9/E,EAAQiN,OAEvCu2F,EAAe,CACb5xK,OAAQmyK,EAAgBlnK,UAAWinK,EAAmBxxI,WAAUkyI,mBAAmB,IAErFf,GAAqB,IAGjBgB,GAAuB9yK,EAAAA,EAAAA,IAAiB2gC,IACvCyxI,GAAmBD,IAIF,SAAlBxxI,EAASvvC,KACX6gL,EAAqB,CACnBhyK,OAAQmyK,EAAgBlnK,UAAWinK,EAAmBltJ,MAAO,IAG/D4sJ,EAAe,CACb5xK,OAAQmyK,EAAgBlnK,UAAWinK,EAAmBxxI,WAAUkyI,mBAAmB,IAGvFf,IAAqB,IAGjBiB,GAA4B/yK,EAAAA,EAAAA,IAAiB2gC,IAC3B,SAAlBA,EAASvvC,OAEb8gL,EAAsB,CACpBjyK,OAAQmyK,EACRlnK,UAAWinK,IAEbL,IAAqB,IAGjBkB,GAA4BhzK,EAAAA,EAAAA,IAAiB6B,IACjD,GAAI,SAAUA,GAAsB,SAAdA,EAAKzQ,KAAiB,OAE5C,MAAMuvC,EAAW,OAAQ9+B,EAAO,CAAEzQ,KAAM,SAAUsnF,WAAY72E,EAAKzO,IAAgByO,EAE7EwsE,EAAU,SAAUxsE,GAAsB,WAAdA,EAAKzQ,MAAoBkvC,EAAAA,EAAAA,MAAYm4C,aAAapgD,KAAKx2B,EAAK62E,YAC1F,OAAQ72E,EAAOA,OAAOtT,EAE1B,GAAI8/E,IAAYA,EAAQkiB,SAAW5+D,EAYjC,OAXA8B,EAAiB,CACfr9B,QAASvI,EAAK,0BACdgI,OAAQ,CACNA,OAAQ,mBACR+8H,QAAS,CAAE1+F,eAAgB,mBAE7B+0H,WAAYp7J,EAAK,sBAGnBikL,IAKF,IAAKR,EASH,OARA/xI,EAAkB,CAChBjgC,OAAQ+yK,EACRt9I,QAASu9I,EACTnyI,aAAaC,EAAAA,EAAAA,IAAYiyI,EAAsBC,GAC/C3xI,WACAkyI,mBAAmB,SAErBf,IAIF,IAAInqK,EACAg0E,EAEJ,GAAI,SAAU95E,GAAsB,UAAdA,EAAKzQ,KACzBuW,EAAO9F,EAAKssJ,aACP,CACL,MAAM8kB,GAAqBC,EAAAA,GAAAA,KAAyBC,EAAAA,GAAAA,IAAqB9kG,IACzE1mE,EAAOsrK,EAAmBtrK,KAC1Bg0E,EAAWs3F,EAAmBt3F,QAChC,CAEAz7B,EAAY,CAAEv4C,OAAMg0E,WAAUy3F,YAAY,IAC1CtB,GAAqB,IAGjBjC,GAAsB7vK,EAAAA,EAAAA,IAAiBquE,IAC3C,MAAMglG,EAAmBnjI,OAAOuK,OAAO22H,GACjCkC,EAAWD,EAAiBjjL,MAAMu+K,GAAWA,EAAO4E,kBAAoBllG,EAAQj7E,MAAKA,GAEvF6M,GAAQ8xK,EAAkB,CAAE9xK,SAAQuC,SAAUqqC,EAAAA,GAAgBymI,aAE9DA,GAAUtB,EAAwB,CAAC,GACvCF,GAAqB,IAGjBl+E,GAAsBtlG,EAAAA,EAAAA,KAAQ,KAC1B8H,GAASm7C,WAAWqrE,SAAW,IAAInuH,QAAiB,CAACisD,GAAO84H,cAAa7yI,oBAC3DpyC,IAAhBilL,GACF94H,EAAItrD,MAAK4xC,EAAAA,EAAAA,IAAeL,IAGnB+Z,IACN,KACF,CAACtkD,GAASm7C,WAAWqrE,UAExB,OACEltH,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI,CACHpe,OAAQA,EACR+S,IAAK+6D,EACLx0E,WAAWuC,EAAAA,GAAAA,GCtOM,WDsOsB,kBACvCwtG,iBAAiBxtG,EAAAA,GAAAA,GCvOyB,YDyOvC8hL,IAAwBY,GCzOiE,WD0O1FA,GC1O+D,YD4OjEvhF,YAAU,EACVoM,WAAS,EACTn0B,OAAQwpG,EACRpgK,UAAWsf,GAAS,SACpBowC,kBAAmBA,GACnBC,eAAgBA,GAChBC,eAAgBA,EAChB8uB,UAAWA,EACX2iF,yBAAyB,iBACzBl/K,QAASu9K,GAER5C,GAAgBjvK,EACfvQ,EAAAA,GAAAC,cAACs/K,GAAa,CACZ5hL,UAAU,GACV6a,UAAWnU,EACXy+F,YAAa9zF,QAAQ3K,GAAU29K,GAC/BtmF,SAAS,iBACTwyE,iBAAiB,EACjB3pE,gBAAgB,EAChBh0F,OAAQA,EACR+zF,cAAeA,EACfI,gBAAiBy7E,EACjBX,aAAcA,IAGhBx/K,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACkqG,GAAiB,CAChB55F,OAAQmyK,EACRhnF,SAAS,qBACTljF,UAAWnU,KAAY29K,GAAuBY,GAC9C9/E,YAAa9zF,QAAQ3K,GAAU29K,GAC/Bj+E,kBAAgB,EAChBpmG,UAAYqkL,GAAwBY,OAAkC/jL,EC5QoC,WD6Q1GqlG,oBAAqBA,EACrBI,cAAeA,EACfgG,oBAAqBs4E,EAAkBU,EAA4BJ,EACnE1+E,iBAAkBo+E,EAAkBU,EAA4BF,EAChE3+E,kBAAmB4+E,KAEnBrB,GAAuBhzK,QAAQ0zK,IAC/B1iL,EAAAA,GAAAC,cAAC2gL,GAAqB,CACpBrwK,OAAQmyK,EACR5/E,YAAaz+F,EACbmgG,iBAAkBo+E,EAAkBU,EAA4BF,EAChE3+E,kBAAmB4+E,EACnBn/E,oBAAqBA,EACrBx9F,QAASA,KAKZ,KAyCX,SAAS0rE,KACP,OAAOhsE,SAASoC,cAAc,OAChC,CAEA,SAAS6pE,KACP,OAAOjsE,SAASoC,cAAc,OAChC,C,4BE7UA,MAAMw7K,GAAM59K,SAASnG,cAAc,O,sFCDnC,SAA4C,WAA5C,GAA+N,WC6BzNgkL,GAAmB,GAAKnrK,EAAAA,EAmH9B,IAAetb,EAAAA,EAAAA,KAjH2B0mL,EACxCC,aACAxmL,YACAoI,WACAq+K,0BACAC,uBACA7kL,QACAo1C,WACA0vI,sBAEA,MAAMC,EA2FD,SAAwBJ,EAA2BC,GACxD,GAAIA,GAA2BD,EAAWK,MAAO,CAC/C,GAAIC,EAAAA,IAA8Bj3F,IAAI22F,EAAWO,UAC/C,MAAO,QAET,GAAIC,EAAAA,IAA8Bn3F,IAAI22F,EAAWO,UAC/C,MAAO,OAEX,CACA,MAAO,MACT,CArGsBE,CAAeT,EAAYC,GAEzCS,GAAqBv0K,EAAAA,EAAAA,IAAgB,KACzCg0K,IAAkB9kL,EAAM,IAGpB6W,GAAUzX,EAAAA,EAAAA,KAAQ,KACtB,OAAQ2lL,GACN,IAAK,QACH,OACEvkL,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,GACX6H,IAAKm8K,EAAWj3K,QAChB4d,IAAI,GACJjjB,WAAW,IAGjB,IAAK,QACH,OACE7H,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACGl5B,QAAQm1K,EAAWK,OAAOvoK,WACzBjc,EAAAA,GAAAC,cAAA,OAAKtC,UD9D+C,aC8DlBihB,EAAAA,GAAAA,IAAoBulK,EAAWK,MAAOvoK,WAE1Ejc,EAAAA,GAAAC,cAAA,SACEtC,UAAWwC,GACX6H,IAAKm8K,EAAWj3K,QAChBqb,UAAQ,EACRjB,OAAK,EACLoB,MAAI,EACJ7D,yBAAuB,KAI/B,QACE,OACE7kB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAC2gJ,GAAAA,EAAI,CACHjjJ,UD9E2I,WC+E3I4E,KAAM4hL,EAAW1zG,SACjBq0G,WAAWC,EAAAA,GAAAA,IAAiBZ,EAAW1zG,SAAU0zG,EAAWO,UAC5DM,YAAab,EAAWx3K,eACxBhL,KAAMwiL,EAAWxiL,KACjBq/H,SAAO,IAERpsF,GACC50C,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CACHE,KAAK,SACL5E,WAAWuC,EAAAA,GAAAA,GAAeC,GDxFsO,YC0FhQnC,QAASA,IAAM42C,EAASp1C,MAKpC,GACC,CAAC2kL,EAAYI,EAAa/kL,EAAOo1C,IAE9BqwI,EAAqC,SAAhBV,IAA2BF,EAChDa,EAAuBl2K,QAAwB,SAAhBu1K,GAA0BJ,EAAWgB,qBACpEC,EAAsC,SAAhBb,EAEtBc,GAAgBnlL,EAAAA,GAAAA,GACpBvC,EDvGmB,WCuGKoI,GDvG0D,WCuG/Bk/K,GDvGgF,YC0GrI,OACEjlL,EAAAA,GAAAC,cAAA,OAAKtC,UAAW0nL,GACbhvK,EACDrW,EAAAA,GAAAC,cAACqlL,GAAAA,EAAY,CACX1jK,UAAWsjK,EACX93K,aAAc+2K,EAAWx3K,gBAAkBw3K,EAAWj3K,QACtDS,MAAOs2K,GACPj2K,OAAQi2K,KAETmB,GACCplL,EAAAA,GAAAC,cAAA,OAAKtC,UDpHiK,YCqHpKqC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CACHE,KAAM4hL,EAAWgB,oBAAsB,kBAAoB,UAC3DxnL,UAAWwC,GACXnC,QAAS6mL,IAEVjwI,GAEC50C,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,SAAS5E,UAAWwC,GAAmBnC,QAASA,IAAM42C,EAASp1C,MAI5E,I,wCCjIK,SAAS+lL,GAAe57K,EAAwBwqB,EAAsBqxJ,GAAe,GAClG,MAAMC,EAAa97K,EAAU67K,EAAe,aAAe,aACrDE,EAAaD,EAAa97K,EAAU67K,EAAe,cAAgB,gBACnEj1J,EAAK4D,EAAQqxJ,EAAe,aAAe,aAC3CG,EAAKp1J,EAAK4D,EAAQqxJ,EAAe,cAAgB,gBACvD,OAAOj1J,EAAKk1J,GAAcE,EAAKD,CACjC,CCNe,SAASE,GACtBj8K,EACAk8K,EACA7oF,EAAS,EACT+lF,GAAU,EACV+C,GAAsB,EACtBN,GAAe,GAEf,MAAMC,EAAa97K,EAAU67K,EAAe,aAAe,aACrDE,EAAaD,EAAa97K,EAAU67K,EAAe,cAAgB,gBACnEO,EAA4C,iBAAvBF,EACvBl8K,EAAUE,iBAA8Bg8K,GACxCA,GACE,OAAE9lL,GAAWgmL,EACbC,EAA2B,GACjC,IAAIC,GAAU,EAEd,IAAK,IAAIj/H,EAAI,EAAGA,EAAIjnD,EAAQinD,IAAK,CAC/B,MAAM7yB,EAAU4xJ,EAAY/+H,GACtBz2B,EAAK4D,EAAQqxJ,EAAe,aAAe,aAC3CG,EAAKp1J,EAAK4D,EAAQqxJ,EAAe,cAAgB,gBAKvD,GAJkBM,EACdH,GAAMF,EAAazoF,GAAU2oF,GAAMD,EAAa1oF,EAChDzsE,GAAMm1J,EAAa1oF,GAAU2oF,GAAMF,EAAazoF,EAGlDgpF,EAAetmL,KAAKsnD,GACpBi/H,GAAU,OACL,GAAIA,IAAYlD,EACrB,KAEJ,CAEA,MAAO,CAAEgD,cAAaC,iBACxB,CC3Be,SAASE,GAAsB9xJ,EAAkB50B,EAAeosB,GAC7E,MAAMjiB,EAAYiiB,EAAale,QAC/B,IAAK/D,GAAanK,EAAQ,EACxB,OAEF,MAAM,eAAEwmL,EAAc,YAAED,GAAgBH,GACtCj8K,EACAyqB,EAVoB,GAYpB,GACA,GAGF,IAAK2xJ,EAAYhmL,SAAWgmL,EAAYvmL,GACtC,OAEF,MAAMksF,EAAQs6F,EAAe,GAC7B,IAAKA,EAAe7zJ,SAAS3yB,IACvBA,IAAUksF,IAAU65F,GAAe57K,EAAWo8K,EAAYr6F,IAAU,CACxE,MAAMzpE,EAAWziB,EAAQwmL,EAAeA,EAAejmL,OAAS,GAAK,QAAU,OAC/Es9F,EAAAA,GAAAA,IAAc,CACZ1zF,YACAwqB,QAAS4xJ,EAAYvmL,GACrByiB,WACA+6E,OA1BgB,IA4BpB,CACF,CC3BO,SAASmpF,IAAsB,SACpCzoL,EAAQ,aACR8nL,EAAY,iCACZY,EAAgC,6BAChCC,EAA4B,kBAC5BC,EAAiB,MACjB3/H,EAAK,kBACL4/H,EAAiB,SACjB1gJ,EAAQ,QACRhhC,IAYA,MAAO2hL,EAAmBC,IAAwBv2K,EAAAA,EAAAA,KAAU,GAEtDw2K,GAAmBp2K,EAAAA,EAAAA,IAAiBmsE,GACnC91B,GAIEo5B,EAAAA,GAAAA,GAAcp5B,EAAM5mD,OAAQ08E,IAHzB,IAMNkqG,GAAiBr2K,EAAAA,EAAAA,IAAgB,CAACI,EAAeE,KACrDA,EAAEkX,iBACF2+J,GAAsBjnL,GAAWknL,EAAiBlnL,EAAQkR,IAAQ,IAG9Dk2K,GAAmBt2K,EAAAA,EAAAA,IAAiBM,IAExC,GAAIA,EAAEi2K,QAAUj2K,EAAEijB,SAAWjjB,EAAEk2K,SAAWl2K,EAAE2hH,SAAU,OAAO,EAC7D,IAAK70H,EAAU,OAAO,EAEtB,GAAIipD,GAASA,EAAM5mD,QAAUymL,GAAqB,EAAG,CACnD,MAAMr0K,EAAOw0C,EAAM6/H,GACnB,GAAIr0K,EAAM,CACR,IAAuB,IAAnB0zB,EAAS1zB,GACX,OAAO,EAGTvB,EAAEkX,gBACJ,CACF,CAEA,OAAO,CAAI,KAGbrpB,EAAAA,EAAAA,KAAU,KACHf,GAAU+oL,EAAqBJ,GAAgC,EAAI,EAAE,GACzE,CAAC3oL,EAAU2oL,IAEd,MAAMU,GAAyBpgI,GAAS6/H,EAAoB7/H,EAAM5mD,OAAS,EAmB3E,OAlBAtB,EAAAA,EAAAA,KAAU,KACH2nL,IAAoCW,GACvCN,EAAqBJ,GAAgC,EAAI,EAC3D,GACC,CAACU,EAAuBV,EAA8BD,KAEzD3nL,EAAAA,EAAAA,KAAU,IAAOf,GAAWm9C,EAAAA,GAAAA,GAAyB,CACnDgwE,MAAOhmH,EACPmiL,KAAMV,GAAqBd,OAAe3mL,EAAa+R,GAAqB+1K,GAAgB,EAAG/1K,GAC/Fq2K,OAAQX,GAAqBd,OAAe3mL,EAAa+R,GAAqB+1K,EAAe,EAAG/1K,GAChGmqC,OAAQurI,IAAsBd,OAAe3mL,EAAa+R,GAAqB+1K,GAAgB,EAAG/1K,GAClGkqC,QAASwrI,IAAsBd,OAAe3mL,EAAa+R,GAAqB+1K,EAAe,EAAG/1K,GAClGs2K,MAAOX,EAAoBK,OAAmB/nL,EAC9CmS,QAAS41K,SACN/nL,GAAY,CACfynL,EAAmBK,EAAgBC,EAAkBlpL,EAAU8nL,EAAc3gL,EAAS0hL,IAGjFC,CACT,CC5DA,MA0FA,IAAehpL,EAAAA,EAAAA,KA1FsB2pL,EACnC9iL,SACAQ,UACAuiL,mBACAC,oBAGA,MAAMz7J,GAAere,EAAAA,EAAAA,IAAuB,OACtC,aAAE4Y,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BliB,OAAQxF,OAAWA,GAAW,GAEnGyoL,GAAmBh3K,EAAAA,EAAAA,IAAgB,CAAC0vB,EAAgBunJ,GAAa,KAErE,MACMt1I,GADYrB,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KACb3I,GAClBiS,GAILm1I,EAAiBn1I,EAAMs1I,EAAW,IAG9B3gK,GAActW,EAAAA,EAAAA,IAAgB,CAACM,EAAqBlN,KACxDkN,EAAEkX,iBAEFw/J,EAAiB5jL,EAAG,IAGhB8jL,GAAsBl3K,EAAAA,EAAAA,IAAiBs1G,IAC3C0hE,EAAiB1hE,EAAOliH,IAAI,EAAK,IAG7B+jL,EAAuBtB,GAAsB,CACjDzoL,SAAU2G,EACVsiD,MAAO0gI,EACPxhJ,SAAU2hJ,EACVjB,mBAAmB,EACnBH,kCAAkC,EAClCvhL,aAGFpG,EAAAA,EAAAA,KAAU,KACRynL,GAAsB,uBAAwBuB,EAAsB77J,EAAa,GAChF,CAAC67J,KAEJhpL,EAAAA,EAAAA,KAAU,KACJ4oL,IAAkBA,EAActnL,QAClC8E,GACF,GACC,CAACwiL,EAAexiL,IAEnB,MAAM6iL,GAAkBlvJ,EAAAA,EAAAA,GACtB6uJ,GAAetnL,OACXsnL,OACAxoL,EACJsnB,GAEIwhK,EAAsBN,IAAkBA,EAActnL,OACxD2nL,EACAL,EAEJ,IAAKlhK,GAAiBwhK,IAAwBA,EAAoB5nL,OAChE,OAGF,MAAMpC,GAAYuC,EAAAA,GAAAA,GAChB,gDACAmmB,GAGF,OACErmB,EAAAA,GAAAC,cAAA,OAAKtC,UAAWA,EAAWyZ,IAAKwU,GAC7B+7J,GAAqBvnL,KAAI,EAAGsD,MAAMlE,IACjCQ,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK0C,EACL/F,UAAU,+CACVK,QAAS4oB,EACTu5E,SAAUz8F,EACV+2D,MAAOgtH,IAAyBjoL,GAEhCQ,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQt8B,EACRmqH,WAAW,QACXqL,cAAY,OAId,I,4BC/GV,SAAma,WAAna,GAAwgB,WC8GlgB0uD,GAA4B,qBAunBlC,IAAepqL,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAM,cACJgmB,EAAa,aACbsxJ,EAAY,aACZ9+F,EAAY,mBACZ++F,GACE51K,EAEE47C,GAAgB97C,EAAAA,EAAAA,IAASzB,QAA+C1R,GAArCkvD,EAAAA,EAAAA,KAAmB77C,EAAQ3B,GAC9DimB,GAAiBC,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,IAC9C,yBAAEwnI,GAA6B7lI,EAAOsiC,SAASmjG,OAC/C,SAAEqC,IAAajpE,EAAAA,GAAAA,GAAqB7+D,GACpC61K,EAAoB71K,EAAO81K,cAAcC,EAAAA,KACzCD,EAAgBhuC,IAAaiuC,EAAAA,IAA0B/1K,EAAO81K,cAAchuC,QAAYn7I,EAE9F,MAAO,CACL23B,iBACAD,gBACA2xJ,iBAAkBp6H,GAAc4jC,QAChCm2F,eACAE,kBAAmBA,GAAmBI,SACtCH,cAAeA,GAAeG,SAC9BpwC,2BACAqwC,oBAAqBr/F,EAAas/F,SAAS5oG,SAC3C6oG,cAAcllD,EAAAA,GAAAA,GAAmBlxH,EAAQ,iBACzC41K,qBACD,GA3Be71K,EAnnB+Bs2K,EACjDh4K,SACAuC,WACA6gH,cACA60D,UACAC,iBACAC,wBACAJ,eACAnsK,UACAqa,iBACAD,gBACA2xJ,mBACAL,eACAE,oBACAC,gBACAW,eACAta,iBACAt2B,2BACAqwC,sBACAN,qBACAc,2BACAC,yBACAC,oBACAC,0BACAC,iBACAC,sBACAC,kBACAC,SACAC,eACAC,UACAC,eACAC,kBACAj/E,sBACAk/E,iBACAC,gBACAtb,yBACAub,cACAC,mBACA/1I,wBAGA,MAAMx8B,GAAM7J,EAAAA,EAAAA,IAAuB,MAE7Bq8K,IAASr8K,EAAAA,EAAAA,IAAsB,OAC/B,qBAAEs8K,GAAoB,eAAEC,GAAc,yBAAEC,KAA6Bh6K,EAAAA,EAAAA,MAErE9R,IAAUC,EAAAA,EAAAA,KACVC,IAAOC,EAAAA,GAAAA,KAGP4rL,IAAgBz8K,EAAAA,EAAAA,IAAiC,MAEjDusD,IAAWvsD,EAAAA,EAAAA,IAAuB,MAElC08K,IAAiB18K,EAAAA,EAAAA,MACjB28K,IAAkB1xJ,EAAAA,EAAAA,GAAsBm7F,GACxCw2D,GAAuBx2D,EAAY5zH,OAAS4zH,EAAcu2D,IAC1D,SAAEhnL,KAAaC,EAAAA,EAAAA,MAEfinL,GAAY3B,GAAkBz5K,QAAQy5K,GACtC3+J,GAAY2+J,GAAkBA,GAAgB4B,UAE9CC,GAA0C,UADnBF,IAAaz2D,GAAa5zH,SAAUwqL,EAAAA,EAAAA,IAAuB52D,EAAY,MAG7F62D,GAAkBC,GAAgBC,KAAmBlsL,EAAAA,EAAAA,MAErDmsL,GAAsBC,KAA2B16K,EAAAA,EAAAA,IACtD04K,GAA4Bd,EAAmB+C,gBAE3CC,GAAsB97K,SACzB27K,IAAwB9B,GAA0B/+J,MAAeg/J,IAE7DiC,GAAmBC,KAAwB96K,EAAAA,EAAAA,IAAS43K,EAAmBiD,mBACxEE,GAAkBnD,EAAmBmD,iBAGzCzpI,aAAc0pI,GACd9pI,cAAe+pI,GACf7pI,QAAS8pI,IACPlqI,MAEIM,aAAc6pI,GAAqBjqI,cAAekqI,IAAyBpqI,KAE7E78C,GAAS2K,QAAQ2kH,EAAY5zH,QAC7BwrL,GAAkBv8K,QAAQm7K,IAAsBpqL,SAC/CyrL,GAAWC,GAAaC,KAAiBltL,EAAAA,EAAAA,MAEhDC,EAAAA,EAAAA,KAAU,KACH4F,KACHqmL,KACAX,GAAyB,CAAEkB,qBAAiBpsL,IAC9C,GACC,CAAC6rL,GAAiBrmL,KAErB,MAAOsnL,GAAUC,KAAgBhtL,EAAAA,EAAAA,KAAQ,IACrBoQ,QAAQm7K,IAAsB55E,OAAOprD,GAAMA,EAAEq/H,OAASr/H,EAAE0mI,SACpD,EAAC,GAAM,GAEtB,CADU78K,QAAQm7K,IAAsB9+E,MAAMlmD,GAAMA,EAAEq/H,OAASr/H,EAAE0mI,UACtD,IACjB,CAAC1B,MAEG2B,GAAYC,KAAkBntL,EAAAA,EAAAA,KAAQ,IACpBoQ,QAAQm7K,IAAsB55E,OAAOprD,GAAMA,EAAEggI,uBACzC,EAAC,GAAM,GAE3B,CADen2K,QAAQm7K,IAAsB9+E,MAAMlmD,GAAMA,EAAEggI,wBAC3C,IACtB,CAACgF,KAEE6B,IAAoBC,EAAAA,GAAAA,GAAsB,IAAGC,EAAAA,QAE7C,mBACJC,GAAkB,eAClBC,GAAc,qBACdC,GAAoB,YACpBC,GAAW,kBACXC,KACEC,EAAAA,GAAAA,GACFx9K,QAAQmN,IAAY4sK,IAA4BJ,IAAiB4C,IACjE/C,EACAU,EACAgD,EAAAA,IACArE,EACAE,EACAC,IAGI,yBACJyE,GAAwB,kBACxBC,GAAiB,wBACjBC,KACEC,EAAAA,GAAAA,GACF59K,QAAQmN,IAAY4sK,IAA4BJ,IAAiB4C,IAAmBxzC,GACpFywC,EACAU,EACA8C,GACAlyH,GACAsuH,IAGI,qBACJyE,GAAoB,oBACpBC,GAAmB,cACnBC,GAAa,qBACbC,KACEC,EAAAA,GAAAA,GACFj+K,QAAQmN,GAAW4sK,GAA2BwC,IAC9C/C,EACAU,EACA8C,GACAlyH,GACAouH,OACArpL,EACA03B,GAkBF,SAAS22J,GAAmBx8K,GAC1Bq5K,GAAyB,CAAEkB,gBAAiBv6K,GAC9C,EAjBAjS,EAAAA,EAAAA,KAAU,IAAO4F,IAASw5B,EAAAA,EAAAA,GAAsBwrJ,QAAWxqL,GAAY,CAACwF,GAAQglL,KAEhF5qL,EAAAA,EAAAA,KAAU,KACJ4F,KACFumL,GAAwBhC,GAA4Bd,EAAmB+C,gBACvEG,GAAqBlD,EAAmBiD,mBAC1C,GACC,CAACjD,EAAoBzjL,GAAQukL,KAEhCnqL,EAAAA,EAAAA,KAAU,KACH4F,IACH0lL,GAAyB,CAAEkB,qBAAiBpsL,GAC9C,GACC,CAACkrL,GAA0B1lL,GAAQukL,KAMtCnqL,EAAAA,EAAAA,KAAU,KACJ4F,IAAUnB,KACZiqL,EAAAA,GAAAA,KACF,GACC,CAACjqL,GAAUmB,KAEd,MACEkuE,kBAAmB66G,GAAoB,kBACvC36G,GAAiB,uBACjBC,GAAsB,sBACtBC,KACEC,EAAAA,GAAAA,GAAuBo3G,IAAgBtB,IAA0BrkL,IAE/DgpL,IAAkB/8K,EAAAA,EAAAA,IAAgB,CAACg4G,EAAoBglE,KACvDjpL,OACagqK,GAAkBif,IAAwB3E,IAAiBF,EAAkBc,EACxFjhE,EAAWghE,EAAeH,GACzB2B,GAAqBC,GAAmBE,IAC7ClB,GAAyB,CACvBc,oBAA6ChsL,IAA7B+pL,EAAyCkC,QAAsBjsL,EAC/EksL,qBACAE,qBAEJ,IAGIsC,IAAmBj9K,EAAAA,EAAAA,IAAgB,KACvC+8K,IAAgB,EAAK,IAGjBG,IAAkBl9K,EAAAA,EAAAA,IAAgB,KACtC+8K,IAAiB,IAGbI,IAAsBn9K,EAAAA,EAAAA,IAAgB,KAC1C+8K,IAAgB,GAAO,EAAK,IAuBxBK,IAAkBp9K,EAAAA,EAAAA,IAAgBiL,UACtC3K,EAAEkX,iBACF4jK,KAEA,MAAM,aAAEiC,GAAiB/8K,EAEnB6+C,QAAcm+H,EAAAA,GAAAA,GAA8BD,EAAahnI,OAC3D8I,GAAO1vD,QACTqpL,EAAa35H,EAAOs8H,GACtB,IAYInnC,IAAmBt0I,EAAAA,EAAAA,IAAiBM,IACxC,MAAM,MAAE6+C,GAAU7+C,EAAEC,OACdg0I,GAAiBC,EAAAA,EAAAA,IAAcr1F,GAEjCo1F,GAAgB9kJ,QAClBqpL,EAAavkC,EAAgBknC,GAC/B,IAGI8B,IAAuBv9K,EAAAA,EAAAA,IAAgB,MAC3C00I,EAAAA,GAAAA,GAAsB,KAAMp0I,GAAMg0I,GAAiBh0I,IAAG,IAGlD+5G,IAAer6G,EAAAA,EAAAA,IAAiB9Q,IACpCypL,EAAoBt1D,EAAY7zF,QAAO,CAACqlB,EAAG6B,IAAMA,IAAMxnD,IAAO,IAG1DsuL,IAAuBx9K,EAAAA,EAAAA,IAAgB,KAC3C24K,EAAoBt1D,EAAYvzH,KAAK+kD,IAAC,IACjCA,EACHggI,qBAAqB,MACnB,IAGA4I,IAAwBz9K,EAAAA,EAAAA,IAAgB,KAC5C24K,EAAoBt1D,EAAYvzH,KAAK+kD,IAAC,IAAWA,EAAGggI,yBAAqBtmL,MAAc,IAGnFmvL,IAAsB19K,EAAAA,EAAAA,IAAiB9Q,IAC3CypL,EAAoBt1D,EAAYvzH,KAAI,CAAC+jL,EAAYn9H,IAC3CA,IAAMxnD,EACD,IACF2kL,EACHgB,qBAAsBhB,EAAWgB,0BAAuBtmL,GAIrDslL,IACN,IAGCprK,IAAezI,EAAAA,EAAAA,IAAgB,KACnC,MAAM29K,EAAMrE,GAAOl8K,QACnB,IAAKugL,EACH,OAGF,MAAM,MAAEtgL,EAAK,OAAEK,GAAWigL,EAAIlvK,wBAC9BkvK,EAAI99G,QAAQ+9G,QAAQvgL,MAAQA,EAC5BsgL,EAAI99G,QAAQ+9G,QAAQlgL,OAASA,CAAM,KAIrCg5F,EAAAA,GAAAA,GAAkB5vF,EAAK2B,KAEvB1B,EAAAA,GAAAA,GAAc0B,KAEdta,EAAAA,EAAAA,KAAU,KACR,MAAMmkE,EAAaonH,GAAct8K,QAC3Bg9B,EAAQtkC,SAASi2B,eAAeurJ,IAEtC,IAAKhlH,IAAel4B,EAAO,OAE3B,MAAM,MAAE/8B,GAAUi1D,EAAW7jD,yBAE7B5D,EAAAA,EAAAA,KAAgB,KACduvB,EAAMzgC,MAAM4kC,YAAY,yBAA2B,GAAElhC,MAAU,GAC/D,GACD,CAAC1P,GAASoG,KAEb,MAAMshD,IAAkE/mD,EAAAA,EAAAA,KAAQ,IACvE,EAAGgX,YAAWvR,OAAQuhD,KAC3B5lD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLuM,QAASlf,GACTvB,KAAK,UACL0P,MAAM,cACN1T,UAAWioD,EAAa,SAAW,GACnC5nD,QAAS4X,EACTE,UAAU,gBAEV9V,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGd,CAACW,KAEEirL,IAAY11K,EAAAA,GAAAA,IAAgB,KAChC,IAAK8yK,GAAiB,OAEtB,MAAM6C,EAAuB9F,GTrcC+F,ESqcgC7F,ITpchExE,GAAIsK,UAAYD,GAChBE,EAAAA,GAAAA,IAAgBvK,IAChBA,GAAIn6K,iBAAiB,MAAMtK,SAASivL,IAClCA,EAAGC,YAAY,KAAK,IAEfzK,GAAI0K,aAAa3kH,OAAOhqE,QAAU,GANpC,IAA2BsuL,ESsc9B,OAAOD,GAzVoB,IAyV6BA,OAAuBvvL,CAAS,GACvF,CAACypL,EAAcE,EAAS+C,KAErBoD,GAAiB7D,IAAuBc,IAEvCgD,GAAcC,GAAcC,KAAgBlwL,EAAAA,EAAAA,KAAQ,IACpD+vL,IAAmBxE,GAIjB,CAHYA,GAAqB55E,OAAOprD,GAAMs/H,EAAAA,IAA8Bj3F,IAAIroC,EAAEu/H,YACtEyF,GAAqB55E,OAAOprD,GAAMw/H,EAAAA,IAA8Bn3F,IAAIroC,EAAEu/H,YACtEyF,GAAqB55E,OAAOprD,GAAM4pI,EAAAA,IAA8BvhG,IAAIroC,EAAEu/H,aAHpC,EAAC,GAAO,GAAO,IAKnE,CAACyF,GAAsBwE,KAEpBK,IAAoBpwL,EAAAA,EAAAA,KAAQ,MAC3BurL,IACEA,GAAqB9+E,MAAMlmD,IAAO4pI,EAAAA,IAA8BvhG,IAAIroC,EAAEu/H,aAC5E,CAACyF,KAEJ,IAAKA,GACH,OAGF,MAAM8E,GAAa9E,GAAqBpqL,OAAS,EAE3CmvL,KACA9E,KACCuB,MACA7C,GAAsBD,GAA2BiC,KAClDmE,IAAclE,IAIpB,IAAI3lL,GAAQ,GACZ,MAAM+pL,GAAoBhF,GAAqBpqL,OAE7CqF,GAAQnH,GADN2wL,GACcxE,GAAY,0BAA4B,0BAC/CyE,GACOzE,GAAY,0BAA4B,0BAC/C0E,GACO1E,GAAY,0BAA4B,0BAExCA,GAAY,yBAA2B,yBAN4B+E,GAAmB,KA6FxG,MAAMC,IAAwBhE,KAAmCE,GAC3D+D,GAAoBz7I,GAAoBkI,EAAAA,GAAAA,GAAkB39C,GAC9DgxL,GAAoBv7I,EACpB,CACEj2C,UD7kBkJ,WC8kBlJo+C,QAAQ,IACL99C,GAAQ,QAEf,OACE+B,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,GACRQ,QAASwkL,EACT7kL,OAhGJ,WACE,GAAK2lL,GAIL,OACEnqL,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yBAAyByD,IAAKnD,GAAQoD,MAAQ,WAAQxC,GACnEmB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAAC4T,OAAK,EAACxE,MAAM,cAAc1P,KAAK,UAAUmU,UAAU,qBAAqB9X,QAASqrL,GACvFrpL,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eAAeyH,IAC7BklL,KAAmBxgK,IAEhB9pB,EAAAA,GAAAC,cAACyW,GAAAA,EAAY,CACX/Y,UAAU,iEACVgZ,QAASgvC,GACT/uC,UAAU,SAET5H,SAASy5K,IACRzoL,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,MAAMnH,QAAS6vL,IAAuB5vL,GAAQ,QAE9D0tL,IACC3rL,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KAEIgnJ,KAAoBjE,GAOlBjrL,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,oBAAoBnH,QAASA,IAAMkvL,QAAmBruL,IAClEZ,GAAS,+BANZ+B,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,kBAAkBnH,QAASA,IAAMkvL,IAAmB,IAChEjvL,GAAQ,+BAUZ6qL,IAAsBD,IAA2BiC,GAEhD9qL,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,WAAWnH,QAASA,IAAM4sL,IAAwB,IAC9D3sL,GAAQgxL,GAAa,yBAA2B,0BAInDjvL,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,QAAQnH,QAASA,IAAM4sL,IAAwB,IAC3DqE,GAAa,oBAAsB,kBAIzCnE,IAAuBkE,IAAqBhgL,SAASy5K,KACpDqD,GACE9rL,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,kBAAkBnH,QAAS+vL,IACvC9vL,GAAQ,8BAGX+B,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,UAAUnH,QAAS8vL,IAC/B7vL,GAAQ,+BAMlBgxL,KACClE,GACE/qL,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CACP1R,KAAK,kBAELnH,QAASA,IAAMgtL,IAAqB,IACrC,qBAKDhrL,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,UAAUnH,QAASA,IAAMgtL,IAAqB,IAAO,qBASpF,CAcY7b,GACRxxK,WAAWuC,EAAAA,GAAAA,GDtlBM,WCwlBfsrL,IAAarrL,IACZgrL,IDzlBmH,WC0lBpHjoL,ID1lBmC,WC2lBnCsnL,ID3lB+D,WC4lB/DxB,GAAkB,wBAEpBvuG,iBAAe,EACfrxB,oBAAkB,GAElBppD,EAAAA,GAAAC,cAAA,OACEtC,UAAWwC,GACXmvL,YAAa7D,GACb8D,OAAQ7B,GACR8B,WA/PN,SAAwB5+K,GACtBA,EAAEkX,iBAEEmiK,GAAev8K,UACjBmB,OAAOL,aAAay7K,GAAev8K,SACnCu8K,GAAev8K,aAAU7O,EAE7B,EAyPM4wL,YAhSmB7+K,IACvB,MAAQ8+K,cAAeC,EAAU9+K,OAAQ++K,GAAeh/K,EAGnDg/K,EAA8Bv7J,QAAS,IAAGl0B,QAAyBwvL,IACtE1F,GAAev8K,QAAUmB,OAAOC,WAAW48K,GA5NnB,MAgOtBkE,GAAeA,EAA2BxgK,QAAS,IAAGjvB,QAItDwvL,GACF/+K,EAAEwI,kBAGJsyK,KAAe,EAgRX1tL,QAAS0tL,GACT,0BAAyBztL,GAAQ,4BAA6B,IAC9D,oBAEA+B,EAAAA,GAAAC,cAAA,OAAKtC,UD3mBwb,YC4mB3bqC,EAAAA,GAAAC,cAAA,QAAMtC,UD5mB8c,WC4mB/asuB,EAAE,IAAIC,EAAE,IAAIve,MAAM,OAAOK,OAAO,OAAO6hL,GAAG,OAEjF7vL,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GD/mB4J,WCinBrK,gBACAkvL,IDlnBmP,YConBrP5oI,SAAU0kI,IAETf,GAAqB/pL,KAAI,CAAC+jL,EAAYn9H,IACrChnD,EAAAA,GAAAC,cAACikL,GAAmB,CAClBC,WAAYA,EACZC,wBAAyB0G,GACzBzG,qBAAsB0G,GACtBhlL,SAA0C,IAAhCokL,GAAqBpqL,OAC/BP,MAAOwnD,EACPhmD,IAAKmjL,EAAW2L,UAAY9oI,EAC5BpS,SAAU+1E,GACV25D,gBAAiB0J,QAIvBhuL,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GDpoBmS,WCsoB5SkvL,IDtoB0W,aCyoB5WpvL,EAAAA,GAAAC,cAACknL,GAAc,CACb9iL,OAAQwoL,GACRxF,cAAe2F,GACf5F,iBAAkB2F,GAClBloL,QAASioL,KAEX9sL,EAAAA,GAAAC,cAAC8vL,GAAAA,EAAY,CACX1rL,OAAQ8nL,GACRnjF,OAAQojF,GACRrjG,aAAcsjG,GACdvC,eAAgBA,GAChBD,qBAAsBA,GACtBJ,cAAe6C,GACfhiF,oBAAqBgiF,GACrBznL,QAAS0nL,KAEXvsL,EAAAA,GAAAC,cAAC+vL,GAAAA,EAAkB,CACjBz/K,OAAQA,EACRlM,OAAQooL,GACR5C,qBAAsBA,GACtBv/E,oBAAqBoiF,GACrB7nL,QAAS8nL,KAEX3sL,EAAAA,GAAAC,cAAA,OAAKtC,UDhqB4X,YCiqB/XqC,EAAAA,GAAAC,cAACgwL,GAAAA,EAAgB,CACf1/K,OAAQA,EACRuC,SAAUA,EACV5P,SAAUA,GACViZ,QAASA,EACTquK,iBAAkBA,GAClBC,eAAgBA,GAChBC,gBAAiBA,GACjBpgF,oBAAqBA,EACrBk/E,eAAgBA,EAChBC,cAAeA,EACfyG,mBAAiB,EACjBC,kBAAgB,EAChBxyL,UAAU,qDACV+9F,SAAS,aACTstF,eAAgBA,IAElBhpL,EAAAA,GAAAC,cAACmwL,GAAAA,EAAY,CACXh5K,IAAK0iD,GACLp2D,GAAIkkL,GACJr3K,OAAQA,EACRuC,SAAUA,EACVu9K,wBAAsB,EACtBC,kBAAkB,aAClBn0K,QAASA,EACTze,SAAU2G,GACVmkL,QAASA,EACTjrI,gBAAiB2uI,EAAAA,IACjBx/H,YAAazuD,GAAQ,cACrBugB,SAAU0qK,EACVC,OAAQqE,GACRhnI,SAAU6kI,GACVkF,aAAcvhL,QAAQmN,GAAW4sK,GAA2Bp1D,EAAY5zH,QACxEuoL,aAAc6F,GACdqC,oBAAqBttL,IAAYsnL,GACjCiG,kBAAmB/F,KAErB1qL,EAAAA,GAAAC,cAAA,OAAKtC,UDtsB0iB,YCusB7iBqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLmV,IAAK4yK,GACLrsL,UDzsB6jB,WC0sB7jBK,QAASwvL,GACTplK,cAAesgK,EAAwBj2G,QAAoB5zE,GAE1DwvK,IAAmBoa,EAAiBxqL,GAAQ,QACzCwqL,EAAiBxqL,GAAQ,QAAUoxL,IAExC3G,GACC1oL,EAAAA,GAAAC,cAACywL,GAAAA,EAAc,CACbrsL,OAAQ+oL,GACR1D,YAAaA,GAAef,EAC5BW,aAAe9yJ,OAAoC33B,EAAnB0uL,GAChCoD,eAAgBlD,GAChB5oL,QAAS6tE,GACT7iE,oBAAqB8iE,GACrBrmB,gBAAiB91B,EACjBmzJ,iBAAkBA,EAClBxb,uBAAwBA,QAO9B,KC1WZ,IAAe3wK,EAAAA,EAAAA,KAjViBozL,EAC9BvsL,SAAQwsL,SAAQC,oBAAmB3H,SAAQE,cAG3C,MAAM0H,GAAmBxjL,EAAAA,EAAAA,IAAyB,MAE5CyjL,GAAiBzjL,EAAAA,EAAAA,IAAuB,OAEvCk3J,EAAUC,IAAex0J,EAAAA,EAAAA,IAAiB,KAC1CtS,EAASqzL,IAAc/gL,EAAAA,EAAAA,IAAmB,CAAC,MAC3CghL,EAAaC,IAAkBjhL,EAAAA,EAAAA,KAAS,IACxCkhL,EAAmBC,IAAwBnhL,EAAAA,EAAAA,KAAS,IACpDohL,EAAYC,IAAiBrhL,EAAAA,EAAAA,IAAS2gL,IAAU,IAChDW,EAAUC,IAAevhL,EAAAA,EAAAA,IAAiB,KAC1CwhL,EAAeC,IAAoBzhL,EAAAA,EAAAA,OACnC0hL,EAAWC,IAAgB3hL,EAAAA,EAAAA,KAAkB,GAE9C/R,GAAOD,EAAAA,EAAAA,KAEP4zL,GAAuBxhL,EAAAA,EAAAA,IAAiBM,IAC5C6gL,EAAY7gL,EAAEC,OAAOH,MAAM,IAGvBkqK,GAAatqK,EAAAA,EAAAA,IAAiB8G,IAC9B/S,GAAU+S,EAAI1J,SAChB0J,EAAI1J,QAAQ+sD,OACd,KAGFh8D,EAAAA,EAAAA,KAAU,IAAO4F,GAASw5B,EAAAA,EAAAA,GAAsBwrJ,QAAWxqL,GAAY,CAACwF,EAAQglL,KAChF5qL,EAAAA,EAAAA,KAAU,KACH4F,IACHqgK,EAAY,IACZusB,EAAW,CAAC,KACZE,GAAe,GACfE,GAAqB,GACrBE,EAAcV,IAAU,GACxBY,EAAY,IACZE,OAAiB9yL,GACjBgzL,GAAa,GACf,GACC,CAAChB,EAAQxsL,KAEZ5F,EAAAA,EAAAA,KAAU,IAAMm8K,EAAWmW,IAAmB,CAACnW,EAAYv2K,IAE3D,MAAM0tL,GAAezhL,EAAAA,EAAAA,IAAgB,CAAC0hL,EAAuB,MAC3Df,EAAW,IAAIe,EAAY,MAE3B9W,EAAAA,EAAAA,KAAoB,KAClB,MAAM1wI,EAAOwmJ,EAAetjL,QACvB88B,IAILkE,EAAAA,EAAAA,KAAe,KACblE,EAAK8E,SAAS,CAAEzpB,IAAK2kB,EAAKiX,aAAcwwI,SAAU,UAAW,GAC7D,GACF,IAGEC,GAAe5hL,EAAAA,EAAAA,IAAgB,KAEnC,GADAuhL,GAAa,IACRxtL,EACH,OAGF,MAAM8tL,EAAyBb,SAAiCzyL,IAAlB6yL,IAAgC9zL,EAAQ8zL,GAAe3nH,QAE/FqoH,EAAUx0L,EACbwC,KAAI,CAAC6X,EAAMzY,KAGV,GAFAyY,EAAOA,EAAK8xD,OAIZ,MAAO,CACL9xD,KAAM,CACJA,QAEFhZ,OAAQyhD,OAAOlhD,MACXA,IAAUkyL,GAAiB,CAAEW,SAAS,GAC3C,IACAvyJ,OAAO9wB,SAENsjL,EAAkB7tB,EAAS16F,OAAOwoH,UAAU,EAtF1B,KAuFxB,IAAKD,GAAmBF,EAAQryL,OAAS,EAAG,CAE1C,GADA2kK,EAAY4tB,GACRF,EAAQryL,OAAQ,CAClB,MAAMyyL,EAAiB50L,EAAQwC,KAAKqyL,GAAMA,EAAE1oH,OAAOwoH,UAAU,EA3F3C,OA2FkEzyJ,OAAO9wB,SACvFwjL,EAAezyL,OAAS,EAC1BgyL,EAAaS,GAEbvB,EAAWuB,EAEf,MACET,IAGF,YADAF,GAAa,EAEf,CAEA,GAAIM,EAEF,YADAN,GAAa,GAIf,MAAM3uD,EAAsB,CAC1BwvD,QAAS,CACPjuB,SAAU,CACRxsJ,KAAMq6K,GAERF,cACKlB,GAAe,CAAE1gJ,UAAU,MAC5B4gJ,GAAqB,CAAEuB,gBAAgB,MACvCrB,GAAc,CAAEsB,MAAM,KAI9B,GAAItB,EAAY,CACd,MAAM,KAAEr5K,EAAI,SAAEg0E,GAAculG,IAAYhO,EAAAA,GAAAA,IAAyBgO,EAASe,UAAU,EAxH9D,OAyHjB,CAAC,EAENrvD,EAAQ0vD,KAAO,CACbC,eAAgB,CAACnyI,OAAOgxI,OACpBz5K,GAAQ,CAAEu5K,SAAUv5K,MACpBg0E,GAAY,CAAE6mG,iBAAkB7mG,GAExC,CAEAk9F,EAAOjmD,EAAQ,IAGX6vD,GAAeziL,EAAAA,EAAAA,IAAgB,CAAC9Q,EAAeyY,KACnD,MAAM+5K,EAAa,IAAIp0L,GACvBo0L,EAAWxyL,GAASyY,EAChB+5K,EAAWA,EAAWjyL,OAAS,GAAGgqE,OAAOhqE,QAAUiyL,EAAWjyL,OA3I5C,GA4IpBgyL,EAAaC,GAEbf,EAAWe,EACb,IAGIgB,GAAe1iL,EAAAA,EAAAA,IAAiB9Q,IACpC,MAAMwyL,EAAa,IAAIp0L,GACvBo0L,EAAWpkG,OAAOpuF,EAAO,GACzByxL,EAAWe,QAEWnzL,IAAlB6yL,IACEA,IAAkBlyL,EACpBmyL,OAAiB9yL,GACRW,EAAQkyL,GACjBC,EAAiBD,EAAgB,KAIrCxW,EAAAA,EAAAA,KAAoB,KACb8V,EAAetjL,SAIpBsjL,EAAetjL,QAAQjG,UAAU+xB,OAAO,YAAaw3J,EAAetjL,QAAQ+zC,aArK1D,IAqKyF,GAC3G,IAGEwxI,GAA4B3iL,EAAAA,EAAAA,IAAiB8nF,IACjDu5F,EAAiBhqK,OAAOywE,GAAU,IAG9B86F,GAA0B5iL,EAAAA,EAAAA,IAAiBM,IAC/CugL,EAAevgL,EAAEC,OAAO45B,QAAQ,IAG5B0oJ,GAA8B7iL,EAAAA,EAAAA,IAAiBM,IACnDygL,EAAqBzgL,EAAEC,OAAO45B,QAAQ,IAGlC2oJ,GAAuB9iL,EAAAA,EAAAA,IAAiBM,IAC5C2gL,EAAc3gL,EAAEC,OAAO45B,QAAQ,IAG3B4oJ,GAAiB/iL,EAAAA,EAAAA,IAAiBM,IACpB,KAAdA,EAAEqpC,SACJi4I,GACF,IAGIntB,GAAuBz0J,EAAAA,EAAAA,IAAiBM,IAC5C8zJ,EAAY9zJ,EAAEC,OAAOH,MAAM,IAGvB4iL,GAAmBhjL,EAAAA,EAAAA,IAAgB,KACvC,GAAIshL,IAAcntB,EAAS16F,OAAOhqE,OAChC,OAAO5B,EAAK,4BAGE,IAGZo1L,GAAkBjjL,EAAAA,EAAAA,IAAiB9Q,IACvC,MAAMgzL,EAAiB50L,EAAQwC,KAAKqyL,GAAMA,EAAE1oH,SAAQjqC,QAAQ2yJ,GAAMA,EAAE1yL,SACpE,GAAI6xL,GAAaY,EAAezyL,OAAS,IAAMnC,EAAQ4B,GAAOuqE,OAAOhqE,OACnE,OAAO5B,EAAK,2BAEE,IAsBlB,SAASq1L,IACP,OAAO51L,EAAQwC,KAAI,CAACnB,EAAQO,IAC1BQ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRwtE,UAxOgB,IAyOhB7tE,MAAOvR,IAAU5B,EAAQmC,OAAS,GA1OlB,KA0OuBnC,EAAQmC,OAC3C5B,EAAK,cACLA,EAAK,wBACT+xD,MAAOqjI,EAAgB/zL,GACvBkR,MAAOzR,EAEPiS,SAAWN,GAAMmiL,EAAavzL,EAAOoR,EAAEmW,cAAcrW,OACrD+iL,WAAYJ,IAEb7zL,IAAU5B,EAAQmC,OAAS,GAC1BC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,uBACVkY,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACLmU,UAAW3X,EAAK,UAEhBH,QAASA,IAAMg1L,EAAaxzL,IAE5BQ,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,aAKrB,CAeA,OACEvC,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CAACX,OAAQA,EAAQQ,QAASwkL,EAAS7kL,OA9DvCxE,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,0BACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAAC4T,OAAK,EAACxE,MAAM,cAAc1P,KAAK,UAAUmU,UAAU,uBAAuB9X,QAASqrL,GACzFrpL,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eAAeQ,EAAK,YACnC6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,UACN1P,KAAK,UACLhE,UAAU,sBACVK,QAASk0L,GAER/zL,EAAK,YAmDqDR,UAAU,aACzEqC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRgG,IAAK25K,EACLhgL,MAAO5S,EAAK,gBACZuS,MAAO+zJ,EACPv0G,MAAOojI,IACPpiL,SAAU6zJ,EACV0uB,WAAYJ,IAEdrzL,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,oBAEfqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,6BAA6ByZ,IAAK45K,GAC/ChxL,EAAAA,GAAAC,cAAA,MAAItC,UAAU,kBAAkBQ,EAAK,gBAEpCyzL,GAvBP,WACE,MAAMY,EAAiB50L,EAAQwC,KAAKqyL,GAAMA,EAAE1oH,SAAQjqC,QAAQ2yJ,GAAMA,EAAE1yL,SAEpE,OAAOuxL,SAAiCzyL,IAAlB6yL,IAAgCc,EAAed,KACnE1xL,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,cAAcQ,EAAK,4BAEpC,CAiBoBu1L,GACbpC,EACCtxL,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,gBACL3E,QA/BD41L,IACJpzL,KAAI,CAAC2Q,EAAOvR,KAAU,CAAGkR,MAAOgwC,OAAOlhD,GAAQuR,QAAO4hI,QAAS/0I,EAAQ4B,GAAOuqE,WA+BzE54D,SAAUuvC,OAAOgxI,GACjBxgL,SAAU+hL,IAGZO,KAKJxzL,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,oBAEfqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,aACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,0BACXmzL,GACA9wL,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,iBACZssC,QAASymJ,EACThgL,SAAUgiL,IAGdlzL,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,gBACZssC,QAAS2mJ,EACTvuK,SAAUyuK,EACVpgL,SAAUiiL,IAEZnzL,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,YACZssC,QAAS6mJ,EACTzuK,SAAUuuK,QAAgCvyL,IAAXgyL,EAC/B3/K,SAAUkiL,KAGb9B,GACCtxL,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,kBAAkBQ,EAAK,6BACrC6B,EAAAA,GAAAC,cAAC+7G,GAAAA,EAAQ,CACPtrG,MAAO8gL,EACPtgL,SAAU4gL,EACV31E,mBAAiB,IAEnBn8G,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,QAAQQ,EAAK,iCAI5B,I,4BClWZ,MAuCA,IAAeX,EAAAA,EAAAA,KAvCmBm2L,EAChC/nG,QAAOnxB,QAAOz8D,cAEd,MAAM4oB,GAActW,EAAAA,EAAAA,IAAiBM,IAEnCA,EAAEkX,iBAEF9pB,EAAQ4tF,EAAMgoG,OAAQhoG,EAAMloF,GAAG,IAG3B/F,GAAYuC,EAAAA,GAAAA,GAChB,cACAu6D,GAAS,SAGLzyD,EAAO,GAAE6rL,EAAAA,IAAuBC,EAAAA,IAAW,oBAAoBloG,EAAMmoG,YACrE51I,EAAW61I,GAAAA,GAAcxmG,IAAIxlF,GAEnC,OACEhI,EAAAA,GAAAC,cAAA,OACEtC,UAAWA,EACXsvC,YAAarmB,EACbxhB,MAAQ,IAAGwmF,EAAMqoG,MAAM,OAEtBC,EAAAA,GAAqBtoG,EAAMgoG,OAC1B5zL,EAAAA,GAAAC,cAAA,OACE+H,IAAKA,EACLrK,UAAYwgD,OAAwCt/C,EAA7B,2BACvBisB,IAAK8gE,EAAMgoG,OACXO,QAAQ,OACR,YAAWnsL,EACX9D,OAASi6C,OAA6Bt/C,EAAlBu1L,GAAAA,GACpBvsL,WAAW,IAGX,ICnCJwsL,GAAe,KAAQv7K,EAAAA,EACvBw7K,GAAwB,IAAOx7K,EAAAA,EAC/By7K,GAA+B,GAAMz7K,EAAAA,EACrC07K,GAA2B,GAAM17K,EAAAA,EAwEvC,IAAetb,EAAAA,EAAAA,KA7DqBi3L,EAClCC,WAAUl1L,QAAOm1L,YAAWj3F,sBAAqBv3E,eAAcsjK,oBAG/D,MAAMryK,GAAM7J,EAAAA,EAAAA,IAAuB,OAEnCyvH,EAAAA,GAAAA,IAAe5lH,EAAKsmF,GAEpB,MAAMr3E,GAAuB2xB,EAAAA,GAAAA,GAA6B7xB,GAEpDhoB,GAAOD,EAAAA,EAAAA,MACP,SAAEgF,IAAaC,EAAAA,EAAAA,MAEfyxL,EAAe1xL,EACjBtD,KAAKse,OACJoc,EAAAA,EAAWlsB,MAAMT,MAAQ6mL,GAA2BH,KAAiB9wF,EAAAA,IAAoB8wF,KA9B9D,EAiC1BrmL,EAASpO,KAAKg9E,KAAK83G,EAAS1rF,OAAOjpG,OAAS60L,IAC7CrxF,EAAAA,KAAqBrgG,EAAWqxL,GAA+BD,KAEpE,OACEt0L,EAAAA,GAAAC,cAAA,OACEmX,IAAKA,EACLpW,IAAK0zL,EAAShxL,GACdA,GAAK,kBAAiBlE,IACtB7B,UAAU,cAEVqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qBACbqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,kBAAkByD,IAAI,QAChCjD,EAAKu2L,EAAShxL,KAAO+hG,EAAAA,IAAuB,iBAAoB,QAAOjmG,OAG5EQ,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAe,uBAAwBmmB,GAClDpc,MAAQ,WAAU+D,OAClB5M,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAEzBsnB,GAAgBuuK,EAAS1rF,OAAO5oG,KAAKmC,IACpC,MAAMqpF,EAAQ+oG,EAAUpyL,GAExB,IAAKqpF,EACH,OAIF,MAAMipG,EAAiB,OAAQjpG,EAAQA,EAAQA,EAAM,GAErD,OACE5rF,EAAAA,GAAAC,cAAC0zL,GAAW,CACV3yL,IAAK6zL,EAAenxL,GACpBkoF,MAAOipG,EACP72L,QAASyrL,GACT,KAIJ,ICxCJqL,GAA8C,CAClD/V,OAAQ,SACRgW,OAAQ,QACRC,OAAQ,UACRC,MAAO,OACPC,SAAU,QACVC,OAAQ,MACRC,QAAS,OACTC,QAAS,WACTC,MAAO,QAKH95F,GAAe,KAAO1iF,EAAAA,EACtByvF,GAAsB,MAAQzvF,EAAAA,EAG9By8K,GAAmC,GAEzC,IAAIC,GACAC,GACAC,GAiMJ,UAAel4L,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IAAuB8+C,EAAAA,GAAAA,IAAK9+C,EAAQ,CAAC,kBADpBD,EA/L2B0jL,EAC7Ch4L,YACAkqL,eACA4B,oBAGA,MAAM79J,GAAere,EAAAA,EAAAA,IAAuB,MAEtCksB,GAAYlsB,EAAAA,EAAAA,IAAuB,OAElCy3H,EAAY4wD,IAAiB1lL,EAAAA,EAAAA,OAC7B84F,EAAQ6sF,IAAa3lL,EAAAA,EAAAA,OACrB4lL,EAAqBC,IAA0B7lL,EAAAA,EAAAA,IAAS,IACzD,SAAEhN,IAAaC,EAAAA,EAAAA,OAEnBq+C,aAAc+oD,EACdnpD,cAAeopD,GACbtpD,MAEI46C,QAAS4B,IAAwBtB,EAAAA,GAAAA,IAAwB,CAC/DC,QAASzwE,EACTmxE,WA7B0B,MA8BxBt8C,IACFA,EAAQlhD,SAASg9F,IACf,MAAM,GAAE74F,GAAO64F,EAAM1rF,OACrB,IAAKnN,IAAOA,EAAG47H,WAAW,mBACxB,OAGF,MAAM9/H,EAAQmoB,OAAOjkB,EAAGy0D,QAAQ,kBAAmB,KACnDo9H,GAAsB/1L,GAAS+8F,EAAMC,cAAc,IAGrD,MAAMC,EAAuB84F,GAAsBx2L,QAAO,CAAC29F,EAAaF,EAAgBh9F,IAC/Eg9F,GAAkBh9F,EAAQk9F,EAAcl9F,EAAQk9F,GACtDC,KAECF,IAAyBE,KAI7Bo5F,EAAuBt5F,EAAqB,IAGxCq7B,GAAoB5rB,EAAAA,GAAAA,GAAkB,GAAI8pF,EAAAA,KAC1C7pF,EAAsBnD,GAAU8uB,GAEtC39C,EAAAA,GAAAA,GAAoB1gD,IAAav2B,GAAYipG,KAG7C1tG,EAAAA,EAAAA,KAAU,KACR,IAAKumI,EACH,OAGF,MAAMxgI,EAASi1B,EAAU/rB,QACzB,IAAKlJ,EACH,OAGF,MAAM4nG,EAAU0pF,EAAsBvtF,GAAsB/jG,EAAOoqC,YAAc,EAAI25D,GAAsB,GAE3G1iB,EAAAA,GAAAA,GAAwBrhF,EAAQ4nG,EAAQ,GACvC,CAAC44B,EAAY8wD,IAEhB,MAAM33L,GAAOD,EAAAA,EAAAA,KAEP+3L,GAAgBr3L,EAAAA,EAAAA,KAAQ,KAC5B,IAAKomI,EACH,OAAOx+F,GAAAA,EAET,MAAM0vJ,EAAkB,IAAIlxD,GAS5B,OARI6iD,GAAc9nL,QAChBm2L,EAAgB/qF,QAAQ,CACtBznG,GAAI+hG,EAAAA,IACJljG,KAAMpE,EAAK,kBACX6qG,OAAQ6+E,IAILqO,CAAe,GACrB,CAAClxD,EAAY7mI,EAAM0pL,KAGtBppL,EAAAA,EAAAA,KAAU,KACRqQ,YAAW,KACT,MAAMqnL,EAAOA,KACXP,EAAcF,GAAU1wD,YAExB6wD,EAAUH,GAAU1sF,OAAoB,EAGtC0sF,GACFS,IAuFR56K,iBAQE,OAPKi6K,KACHA,GAAmB,oCACnBC,UAAsBD,IAAkBY,QAExCV,IAAYW,EAAAA,GAAAA,IAAgBZ,KAGvBD,EACT,CA9FQc,GACGxwG,KAAKqwG,EACV,GA7GuB,IA8GD,GACvB,IAEH,MAAMI,GAAiBjmL,EAAAA,EAAAA,IAAiB9Q,IACtCu2L,EAAuBv2L,GACvB,MAAMg3L,EAAa5qK,EAAale,QAAS0hB,QAAqB,oBAC3D5mB,cAAe,mBAAkBhJ,MACpC69F,EAAAA,GAAAA,IAAc,CACZ1zF,UAAWiiB,EAAale,QACxBymB,QAASqiK,EACTv0K,SAAU,QACV+6E,OAAQxB,GACR8B,YAzHyB,KA0HzB,IAGE+O,GAAoB/7F,EAAAA,EAAAA,IAAgB,CAACs7E,EAAerpF,KACxDknL,EAAc79F,EAAOrpF,EAAK,IAqBtBk0L,GAAqBv2L,EAAAA,GAAAA,GAAe,cAAevC,GAEzD,IAAKwuG,EACH,OACEnsG,EAAAA,GAAAC,cAAA,OAAKtC,UAAW84L,GACdz2L,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,OAKd,MAAM0/C,GAAkBrsG,EAAAA,GAAAA,GACtB,sBACCsqG,GAAuB,mBAG1B,OACExqG,EAAAA,GAAAC,cAAA,OAAKtC,UAAW84L,GACdz2L,EAAAA,GAAAC,cAAA,OACEmX,IAAKqiB,EACL97B,UAAW4uG,EACXnrG,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAEzBo3L,EAAc71L,KAxCrB,SAA8Bs0L,EAA6Bl1L,GACzD,MAAM2F,EAAO2vL,GAAkBJ,EAAShxL,IAExC,OAAOyB,GACLnF,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAY,sBAAoB6B,IAAUs2L,EAAsB,YAAc,IAC9EjgL,OAAK,EACLmwC,OAAK,EACL30C,MAAM,cAENrT,QAASA,IAAMu4L,EAAe/2L,GAC9BsW,UAAW4+K,EAASnyL,MAEpBvC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAM4C,IAGlB,KA0BInF,EAAAA,GAAAC,cAAA,OACEmX,IAAKwU,EACL46B,SAAU+jD,EACV5sG,WAAWuC,EAAAA,GAAAA,GAAe,mBAAoBwY,EAAAA,GAAe,eAAiB,kBAE7Eu9K,EAAc71L,KAAI,CAACs0L,EAAU1tI,IAC5BhnD,EAAAA,GAAAC,cAACw0L,GAAa,CACZC,SAAUA,EACVl1L,MAAOwnD,EACP2tI,UAAW3rF,EACXtL,oBAAqBA,EACrBv3E,aAAc2vK,GAAuB9uI,EAAI,GAAK8uI,GAAuB9uI,EAAI,EACzEyiI,cAAep9E,OAIjB,K,2NCjNV,MAmKA,IAAe7uG,EAAAA,EAAAA,KAnKiBk5L,EAC9BC,MACAxoL,aACAxQ,YACA+/F,sBACA1/F,UACA44L,gBACAtqI,sBAGA,MAAMl1C,GAAM7J,EAAAA,EAAAA,IAAuB,MAE7BpP,GAAOD,EAAAA,EAAAA,KAGP4kG,GADiBtE,EAAAA,GAAAA,IAAkBpnF,EAAKsmF,KACPvvF,EACjCu0B,GAAei0J,EAAIE,iBAAmBF,EAAIl0J,YAAaq0J,EAAAA,EAAAA,IAAkBH,EAAK,aAC9EhqL,GAAiBJ,EAAAA,EAAAA,GAASm2B,GAAcogE,IAEvCi0F,IAAa7mL,EAAAA,EAAAA,IAASymL,EAAIl0J,WAAWp1B,UAAYV,GAClDkrC,GAAWC,EAAAA,GAAAA,GAAc6+I,EAAIl0J,WAAWp1B,SAAU0pL,GAElDC,GAAYC,EAAAA,EAAAA,IAAyBN,KAAQG,EAAAA,EAAAA,IAAkBH,EAAK,QACpEO,GAAY3qL,EAAAA,EAAAA,GAASyqL,GAAYl0F,GAEjCq0F,EAAoBnoL,QAAQ8zF,GAAeo0F,IAC3C,WAAEt2K,EAAU,kBAAEmF,IAAsBC,EAAAA,GAAAA,IAAa,GACjDI,EAAsB08E,IAAgBliF,EACtCw2K,EAAet0F,GAAeliF,GAE9B,kBACJ2xD,EAAiB,kBAAEC,EAAiB,wBACpC0uB,EAAuB,kBAAEzuB,EAAiB,uBAC1CC,EAAsB,sBAAEC,IACtBC,EAAAA,GAAAA,GAAuBx7D,GAErBg7D,GAAoB9hE,EAAAA,EAAAA,IAAgB,IAAM8G,EAAI1J,UAC9C2kE,GAAiB/hE,EAAAA,EAAAA,IAAgB,IAAM8G,EAAI1J,QAAS0hB,QAAQ,mCAC5DkjD,GAAiBhiE,EAAAA,EAAAA,IAAgB,IAAM8G,EAAI1J,QAASlF,cAAc,+BAElEoe,GAActW,EAAAA,EAAAA,IAAgB,MAC9BiiE,GAAsBv0E,GAC1BA,EAAQ,IACH24L,EACHzpL,QAASgqL,GACT,IAGEG,GAAoB/mL,EAAAA,EAAAA,IAAiBM,IACzCA,EAAEwI,kBACFxI,EAAEkX,iBACF8uK,EAAeD,EAAI,IAGfW,GAAsBhnL,EAAAA,EAAAA,IAAgB,KAC1CsmL,IAAgBD,EAAI,IAGhBh1F,GAAkBrxF,EAAAA,EAAAA,IAAgB,KACtCtS,EAAS,IACJ24L,EACHzpL,QAASgqL,IACR,EAAK,IAGJt1F,GAAsBtxF,EAAAA,EAAAA,IAAgB,KAC1CtS,EAAS,IACJ24L,EACHzpL,QAASgqL,QACRr4L,GAAW,EAAK,IAGfguC,GAAkBv8B,EAAAA,EAAAA,IAAiBM,KACvCsxF,EAAAA,GAAAA,GAAoCtxF,GACpCswF,EAAwBtwF,EAAE,KAG5BnS,EAAAA,EAAAA,KAAU,KACJ0P,GAAYukE,GAAwB,GACvC,CAACA,EAAwBvkE,IAE5B,MAAMohC,GAAgBrvC,EAAAA,GAAAA,GACpB,YACAy2L,EAAIhpL,OAASgpL,EAAI3oL,QAAU2oL,EAAIhpL,MAAQgpL,EAAI3oL,OAAS,WAAa,aACjEhQ,GAAW,cACXL,GAGF,OACEqC,EAAAA,GAAAC,cAAA,OACEmX,IAAKA,EACLzZ,UAAW4xC,EACXtC,YAAaJ,EACb7uC,QAAS4oB,EACTwB,cAAeqqD,IAEb/5D,EAAAA,IAAgBk+K,GAChB52L,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,oBACV0T,MAAM,OACN62F,MAAI,EACJtF,aAAW,EACX5kG,QAASq5L,GAETr3L,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,QAAQ5E,UAAU,4BAGhCo5L,GACC/2L,EAAAA,GAAAC,cAAA,UACEmX,IAAKygC,EACLl6C,UAAU,cAGbgP,IAAmByqL,GAClBp3L,EAAAA,GAAAC,cAAA,OACE+H,IAAK2E,EACLme,IAAI,GACJntB,UAAU,UACVkK,WAAW,IAGdsvL,GACCn3L,EAAAA,GAAAC,cAACw8C,GAAAA,EAAcn0B,GAAA,CACbo0B,SAAO,EACP10C,IAAKkvL,EACL3uK,UAAQ,EACRG,MAAI,EACJpB,OAAK,EACLzC,yBAAuB,EACvB4D,aAAW,EACX8uK,QAAQ,QAEJxxK,IAGPK,GACCpmB,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAO1E,GAAkBoqL,EAAY,QAAU,UAEzD/4L,QAAiCa,IAAtB2zE,GACVxyE,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI,CACHpe,OAAQkuE,EACR+G,OAAQ9G,EACRJ,kBAAmBA,EACnBC,eAAgBA,EAChBC,eAAgBA,EAChB30E,UAAU,mBACVglB,WAAS,EACT9d,QAAS6tE,EACT7iE,oBAAqB8iE,IAEnBrmB,GAAmBtsD,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC7Y,QAAS2jG,EAAiBx8F,KAAK,QAAQhH,EAAK,qBAC3E6B,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC7Y,QAAS4jG,EAAqBz8F,KAAK,YAC1ChH,EAAKmuD,EAAkB,cAAgB,oBAEzCsqI,GACC52L,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAACJ,aAAW,EAACtR,KAAK,SAASnH,QAASs5L,GAAsBn5L,EAAK,YAI1E,ICxGV,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,OAAE3B,IAAWsC,EAAAA,EAAAA,KAAyBX,IAAW,CAAC,EAClDo6C,EAAkBt9C,QAAQuB,KAAWkmB,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,GACxE,MAAO,CACLizE,UAAWtxE,EAAOslL,KAAKC,MAAMD,KAC7BlrI,kBACD,GAPer6C,EA3DyBylL,EAC3C/5L,YACAmlG,cACA60F,cACAn0G,YACAl3B,kBACAsrI,kBAEA,MAAM,cAAEC,EAAa,QAAEC,IAAY/nL,EAAAA,EAAAA,MAG7B6b,GAAere,EAAAA,EAAAA,IAAuB,OAG1CuuF,QAAS4B,IACPtB,EAAAA,GAAAA,IAAwB,CAAEC,QAASzwE,EAAcmsK,WAjBzB,OAmB5Bt5L,EAAAA,EAAAA,KAAU,KACJqkG,GACF+0F,GACF,GACC,CAAC/0F,EAAa+0F,IAEjB,MAAMR,GAAoB/mL,EAAAA,EAAAA,IAAiBqmL,IACzCmB,EAAQ,CAAEnB,MAAKqB,cAAc,GAAO,IAGhClgE,GAAoB5rB,EAAAA,GAAAA,GAAkB,GAAI3Q,EAAAA,KAEhD,OACEv7F,EAAAA,GAAAC,cAAA,WACED,EAAAA,GAAAC,cAAA,OACEmX,IAAKwU,EACLjuB,WAAWuC,EAAAA,GAAAA,GAAe,YAAavC,EAAW+a,EAAAA,GAAe,eAAiB,kBAEhFi/K,EAEE7/D,GAAqBt0C,GAAaA,EAAUzjF,OAC9CyjF,EAAUpjF,KAAKu2L,GACb32L,EAAAA,GAAAC,cAACy2L,GAAS,CACR11L,IAAK21L,EAAIjzL,GACTizL,IAAKA,EACLj5F,oBAAqBA,EACrBvvF,YAAa20F,EACb9kG,QAAS25L,EAAcC,OAAc/4L,EACrC+3L,cAAeS,EACf/qI,gBAAiBA,MAGnBwrE,GAAqBt0C,EACvBxjF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBAAkB,kBAEjCqC,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAhBR7sD,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBAAkB,8CAmBjC,KCtEH,IAAKs6L,GAAc,SAAdA,GAAc,OAAdA,EAAAA,EAAc,iBAAdA,EAAAA,EAAc,6BAAdA,EAAAA,EAAc,uBAAdA,EAAAA,EAAc,eAAdA,CAAc,MAOnB,MAAMC,GAAyD,CACpE,CAACD,GAAeE,OAAQ,QACxB,CAACF,GAAe1sG,aAAc,yBAC9B,CAAC0sG,GAAevtC,UAAW,mBAC3B,CAACutC,GAAeG,MAAO,WAGnBC,GAAwB,CAC5B,CAACJ,GAAeE,OAAQ,aACxB,CAACF,GAAe1sG,aAAc,gBAC9B,CAAC0sG,GAAevtC,UAAW,gBAC3B,CAACutC,GAAeG,MAAO,aAqEzB,IAAe56L,EAAAA,EAAAA,KAlEwB86L,EACrC/1D,YAAWM,cAAa2mD,iBAAgB+O,eAAcrI,oBACtDC,mBAAkB7d,gBAElB,MAAMn0K,GAAOD,EAAAA,EAAAA,KAEb,SAASs6L,EAAgBv/G,GACvB,OACEj5E,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAY,sBAAoB4kI,IAActpD,EAAM,YAAc,IAElEj7E,QAASA,IAAM6kI,EAAY5pD,GAC3BnjE,UAAW3X,EAAK+5L,GAAuBj/G,IACvCpjE,OAAK,EACLmwC,OAAK,EACL30C,MAAM,eAENrR,EAAAA,GAAAC,cAAA,KAAGtC,WAAWuC,EAAAA,GAAAA,GAAe,OAAQm4L,GAAsBp/G,MAGjE,CAEA,MAAMw/G,GAAmBnoL,EAAAA,EAAAA,IAAgB,KACvCioL,EAAah2D,IAAc01D,GAAevtC,SAAW,WAAa,OAAO,IAO3E,OACE1qJ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,oBAAoBK,QALrC,SAAyBozB,GACvBA,EAAMhY,iBACR,EAG+DhY,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACpF0jI,IAAc01D,GAAeE,OAAS51D,IAAc01D,GAAe1sG,aAAe+mF,GACjFtyK,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,uBACVmY,UAAWysH,IAAc01D,GAAevtC,SAAW,kBAAoB,cACvE70I,OAAK,EACLmwC,OAAK,EACL30C,MAAM,cACNrT,QAASy6L,GAETz4L,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,YAId4tL,GAAoBqI,EAAgBP,GAAeE,OACnDhI,GAAoBqI,EAAgBP,GAAe1sG,cAClD2kG,GAAqBsI,EAAgBP,GAAevtC,WACpDwlC,GAAqBsI,EAAgBP,GAAeG,OAEpD71D,IAAc01D,GAAeE,OAAS51D,IAAc01D,GAAe1sG,cACnEvrF,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,uBACVK,QAASwrL,EACT1zK,UAAU,gBACVD,OAAK,EACLmwC,OAAK,EACL30C,MAAM,eAENrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,iBAGX,I,2NC/BV,IAAIu8E,IAAc,EAElB,MAyQA,IAAethF,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACQ,CACLwmL,mBAAmBpmL,EAAAA,EAAAA,KAAeJ,GAAQwmL,kBAC1CC,yBAAyB5rF,EAAAA,EAAAA,KAA+B76F,MAJ1CD,EAzQ0B2mL,EAC5CroL,SACAuC,WACAzO,SACA6pK,kBACAypB,cACAkB,oBACAH,oBACAh9F,WACAw0F,oBACAC,mBACAxyL,YACAg7L,0BACAz0L,SACAW,UACA4kL,gBACAn/E,sBACA5F,kBACAkzF,cACApO,iBACA+O,eACAzO,iBACAD,0BACGiP,MAEH,MAAOv2D,EAAWC,IAAgBtyH,EAAAA,EAAAA,IAAiB,IAC5C23K,EAAckR,IAAmB7oL,EAAAA,EAAAA,IAAmB,KACpDg5F,EAAoB8vF,IAAyB9oL,EAAAA,EAAAA,IAAmB,KACjE,SAAEhN,IAAaC,EAAAA,EAAAA,OAEd81L,EAAkBC,IAAoBC,EAAAA,GAAAA,GAAe90L,EAAQQ,OAAShG,EAAWqE,IAClF,aAAEijB,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BliB,EAAQQ,GAAS,GAAO,GAE7F1G,GAAOD,EAAAA,EAAAA,MAER4gF,IAAez6E,IAClBy6E,IAAc,IAGhBrgF,EAAAA,EAAAA,KAAU,KACRyF,GAAQ,GACP,CAACA,KAGJzF,EAAAA,EAAAA,KAAU,KACJ0xL,GACJ3tD,EArFuB,EAqFS,GAC/B,CAAC2tD,KAEJ1xK,EAAAA,EAAAA,KAAgB,KACd,GAAKvb,GAAamB,IAAU6rL,EAO5B,OAHA9pL,SAAS0b,KAAKra,UAAUC,IAAI,iCAC5BtB,SAAS0b,KAAKra,UAAUC,IAAI,uBAErB,KACLtB,SAAS0b,KAAKra,UAAUsa,OAAO,uBAE/BjT,YAAW,MACTqM,EAAAA,EAAAA,KAAgB,KACd/U,SAAS0b,KAAKra,UAAUsa,OAAO,gCAAgC,GAC/D,GAvGiB,IAwGC,CACvB,GACA,CAACmuK,EAAmBhtL,EAAUmB,IAEjC,MAAM+0L,GAAkB7rL,EAAAA,EAAAA,IAAOs6K,GAC/BuR,EAAgB1rL,QAAUm6K,GAC1BppL,EAAAA,EAAAA,KAAU,KACH26L,EAAgB1rL,QAAQ3N,SAAUsE,IAIvC+0L,EAAgB1rL,QAAQnO,SAASgD,IAC/BunL,EAAe,CAAEl+F,MAAOrpF,GAAO,IAGjCw2L,EAAgB,IAAG,GAClB,CAAC10L,EAAQylL,IAEZ,MAAMz9E,GAAoB/7F,EAAAA,EAAAA,IAAgB,CAACs7E,EAAerpF,KACxDw2L,GAAiB/vF,GAAW,IAAIA,EAAQzmG,KAExCknL,EAAc79F,EAAM,IAGhBytG,GAAwB9rL,EAAAA,EAAAA,IAAO27F,GACrCmwF,EAAsB3rL,QAAUw7F,GAChCzqG,EAAAA,EAAAA,KAAU,KACH46L,EAAsB3rL,QAAQ3N,SAAUsE,IAI7Cg1L,EAAsB3rL,QAAQnO,SAASypF,IACrC6gG,EAAqB,CACnB7gG,cACA,IAGJ+vG,EAAgB,IAAG,GAClB,CAAC10L,EAAQwlL,IAEZ,MAAMyP,GAA0BhpL,EAAAA,EAAAA,IAAiBs7E,IAC/CotG,GAAuB5yJ,GAAQ,IAAIA,EAAKwlD,EAAMloF,MAE9C4mG,EAAoB1e,EAAM,IAGtBkkC,GAAex/G,EAAAA,EAAAA,IAAiB5O,IACpCmD,IACA0zL,EAAa72L,EAAK,IAGdy+K,GAAsB7vK,EAAAA,EAAAA,IAAgB,CAC1CquE,EAAqB2pC,EAAoB+lD,EAA0BkrB,KAEnE70F,IAAkB/lB,EAAS2pC,EAAU+lD,GAAgB,EAAMkrB,EAA0B,IAGvF,SAASpvJ,EAAczsC,EAAmB87L,GACxC,OAAQj3D,GACN,KAAK01D,GAAeE,MAClB,OACEn4L,EAAAA,GAAAC,cAAC01L,GAAW,CACVh4L,UAAU,aACV8rL,cAAep9E,IAGrB,KAAK4rF,GAAe1sG,YAClB,OACEvrF,EAAAA,GAAAC,cAACkqG,GAAiB,CAChBxsG,UAAU,aACV6a,UAAWnU,IAAW3G,EACtBg+F,SAAUA,EACVoH,YAAaz+F,IAAW3G,GAAY87L,GACpCjpL,OAAQA,EACR+zF,eAAgBphG,GAAYy1L,EAC5BruF,oBAAqBgvF,IAG3B,KAAKrB,GAAevtC,SAClB,OACE1qJ,EAAAA,GAAAC,cAACs/K,GAAa,CACZ5hL,UAAU,aACV6a,UAAWnU,IAAW3G,EACtBolG,cAAaorE,GAAkB7pK,IAAW3G,GAAY87L,GACtD99F,SAAUA,EACVwyE,gBAAiBA,EACjB3pE,gBAAiBs0F,EACjBtoL,OAAQA,EACRuC,SAAUA,EACVwxF,eAAgBphG,GAAYy1L,EAC5Bj0F,gBAAiBy7E,IAGvB,KAAK8X,GAAeG,KAClB,OACEp4L,EAAAA,GAAAC,cAACy3L,GAAS,CACR/5L,UAAU,aACVmlG,cAAa60F,GAActzL,IAAW3G,GAAY87L,GAClD7B,YAAaA,EACbC,YAAaA,IAMvB,CAMA,MAAMvhL,EACJrW,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBAAkBK,QANrC,SAAyBozB,GACvBA,EAAMhY,iBACR,GAKO0lE,IACC9+E,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACT78B,KAAK,QACL88B,UAAWkjG,EACXO,YAAatiF,OAAOuK,OAAOmtI,IAAwBn4L,QAElDoqC,IAINjnC,GACClD,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLmwC,OAAK,EACL30C,MAAM,cACNyE,UAAW3X,EAAK,SAChBR,UAAU,sBACVgE,KAAK,OACL3D,QAAS6G,GAET7E,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGfvC,EAAAA,GAAAC,cAACq4L,GAAgB,CACf/1D,UAAWA,EACXM,YAAaL,EACbgnD,eAAgBA,EAChBlX,UAAWumB,EACXN,aAAczoE,EACdogE,kBAAmBA,EACnBC,iBAAkBA,KAKxB,GAAIjtL,EAAU,CACZ,IAAKijB,EACH,OAGF,MAAMszK,GAAkBv5L,EAAAA,GAAAA,GACtB,yBACAmmB,EACAqyK,GAAqB,mBACrBxI,GAAqB,sBACrB2I,GAAqB,oBAGvB,OAAI3I,EAEAlwL,EAAAA,GAAAC,cAAA,OAAKtC,UAAW87L,GACbpjL,GAMLrW,EAAAA,GAAAC,cAACutG,GAAAA,EAAM,KACLxtG,EAAAA,GAAAC,cAAA,OAAKtC,UAAW87L,GACbpjL,GAIT,CAEA,OACErW,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI6F,GAAA,CACHjkB,OAAQA,EACRQ,QAASA,EACTw8F,WAAY6uF,EACZvyL,WAAWuC,EAAAA,GAAAA,GAAe,aAAcvC,GACxCkS,oBAAqBhL,EACrB60L,aAAehhL,EAAAA,QAAkC7Z,EAAnBo6L,EAC9B3/I,aAAe5gC,EAAAA,QAAkC7Z,EAAnBq6L,EAC9BvrF,mBAAoBj1F,EAAAA,GACpB+0F,WAAS,GAEJyiF,EAAoB4I,EAAsB,CAC7CliL,UAAW,OACX8L,UAAW,WAGZrM,EACI,K,gBCvTX,MAgCA,IAAe7Y,EAAAA,EAAAA,KAhCKm8L,EAClBC,aACAn/H,QACA06G,UACAhlK,cACA+lB,OACAiqE,WACAniG,cAEA,MAAM4oB,GAActW,EAAAA,EAAAA,IAAgB,KAClCtS,EAAQmiG,EAAS,IAGnB,OACEngG,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAKm0K,EACLx3K,WAAWuC,EAAAA,GAAAA,GAAe,6CAA8C05L,GAAc,eACtFp0L,WAAS,EACTxH,QAAS4oB,EACT6zC,MAAOA,GAENm/H,GACC55L,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACt0B,KAAK,QAAQu0B,KAAMA,IAE7Bl2B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAAQ,IAAEw3K,GAC1Bn1K,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,aAAYqE,EAAAA,GAAAA,GAAWmO,KAEhC,ICmHf,IAAe3S,EAAAA,EAAAA,KAAKq8L,EAAAA,GAAAA,IA9HqBC,EACvCz1L,SACAkM,SACA2oH,eACAu4C,cACAsoB,eACAC,qBACAC,OACAzR,UACAxqL,UACA6G,cAEA,MAAM,eAAEyuK,EAAc,eAAE4mB,IAAmBnqL,EAAAA,EAAAA,MAGrC6b,GAAere,EAAAA,EAAAA,IAAuB,OACtC,aAAE4Y,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BliB,OAAQxF,OAAWA,GAAW,GAEnGs7L,GAAoB7pL,EAAAA,EAAAA,IAAgB,EAAGojD,QAAOyhH,cAElD,MACMrlH,GADYlf,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KACd+qB,GAEtB4/G,EAAe,CACb6B,QAAU,IAAGA,IAAUj8C,GAAgBppE,EAAO,IAAGA,EAAIzY,UAAW,GAAG2jG,WAAa,OAElFh9I,GAAS,IAGLo8L,GAAuB9pL,EAAAA,EAAAA,IAAiB5M,IAC5Cw2L,EAAe,CAAE3pL,SAAQ8pL,aAAc32L,IACvC1F,GAAS,IAGLs8L,GAA8B17L,EAAAA,EAAAA,KAAQ,KAC1C,GAAKm7L,GAAch6L,QAAWi6L,EAC9B,OAAOD,EAAa35L,KAAKm6L,IACvB,MAAM7zL,EAAUszL,EAAmBO,EAAMC,cACzC,MAAO,CACL92L,GAAI62L,EAAM72L,GACVyxK,QAASolB,EAAME,SACftqL,YAAazJ,GAAS2P,QAAQ4B,MAAMA,MAAQ,GAC7C,GACD,GACD,CAAC8hL,EAAcC,IAEZU,GAAuBpqL,EAAAA,EAAAA,IAAiB6B,KACvCA,EAAKgjK,QAAQ71C,WAAWkpD,IAAU1oI,MAAM,MAIzC,OAAQ3tC,EACVioL,EAAqBjoL,EAAKzO,IAE1By2L,EAAkBhoL,IAGb,KASHwoL,EAAuBxU,GAAsB,CACjDzoL,SAAU2G,EACVsiD,OAR8B/nD,EAAAA,EAAAA,KAAQ,KACtC,GAAK6yK,GAAgB6oB,EACrB,MAAQ,GACL7sG,OAAO6sG,GAA+B,GAAI7oB,GAAe,GAAG,GAC9D,CAACA,EAAa6oB,IAKfz0J,SAAU60J,EACV71L,YAGI+1L,EAAWnpB,IAAgBA,EAAY1xK,QAAYg6L,IAAiBA,EAAah6L,OAYvF,IAVAtB,EAAAA,EAAAA,KAAU,KACJm8L,GACF/1L,GACF,GACC,CAAC+1L,EAAS/1L,KAEbpG,EAAAA,EAAAA,KAAU,KACRynL,GAAsB,uBAAwByU,EAAsB/uK,EAAa,GAChF,CAAC+uK,KAECx0K,GAAgBy0K,EACnB,OAGF,MAAMj9L,GAAYuC,EAAAA,GAAAA,GClIG,WDoInB,iCACAmmB,GAGF,OACErmB,EAAAA,GAAAC,cAAA,OAAKtC,UAAWA,EAAWyZ,IAAKwU,GAC7B0uK,GAA6Bl6L,KAAI,CAACm6L,EAAO/6L,IACxCQ,EAAAA,GAAAC,cAAC05L,GAAW,CACV34L,IAAM,cAAau5L,EAAM72L,KACzByxK,QAASolB,EAAMplB,QACfhlK,YAAaoqL,EAAMpqL,YACnB+lB,KAAM+jK,EACNL,YAAU,EACVz5F,SAAUo6F,EAAM72L,GAChB1F,QAASo8L,EACT3/H,MAAOkgI,IAAyBn7L,MAGnCiyK,GAAarxK,KAAI,CAAC+0K,EAAS31K,IAC1BQ,EAAAA,GAAAC,cAAC05L,GAAW,CACV34L,IAAM,GAAEm0K,EAAQzhH,SAASyhH,EAAQA,UACjCA,QAASA,EAAQA,QACjBhlK,YAAaglK,EAAQhlK,YAErB+lB,MAAM0a,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAAKwsI,EAAQzhH,OACrCkmI,YAAU,EACVz5F,SAAUg1E,EACVn3K,QAASm8L,EACT1/H,MAAOkgI,GAAwBL,GAA6Bv6L,QAAU,KAAOP,MAG7E,KEpGV,IAAehC,EAAAA,EAAAA,KAzCsBq9L,EACnCx2L,SAAQotK,cAAa5sK,cAErB,MAAM,eAAEyuK,IAAmBvjK,EAAAA,EAAAA,OACrB,SAAE7M,IAAaC,EAAAA,EAAAA,OAEd81L,EAAkBC,IAAoBC,EAAAA,GAAAA,GAAe90L,EAAQQ,OAAShG,EAAWqE,GAElF0jB,GAActW,EAAAA,EAAAA,IAAiB6kK,IACnC7B,EAAe,CACb6B,QAAU,IAAGA,MAEftwK,GAAS,IAGX,OACE7E,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI,CACHpe,OAAQA,EACRuS,UAAU,OACV8L,UAAU,SACV7d,QAASA,EACTlH,UAAU,iBACVkS,oBAAqBhL,EACrB60L,aAAehhL,EAAAA,QAAkC7Z,EAAnBo6L,EAC9B3/I,aAAe5gC,EAAAA,QAAkC7Z,EAAnBq6L,EAC9BvrF,mBAAoBj1F,EAAAA,GACpB+0F,WAAS,GAERgkE,EAAYrxK,KAAK06L,GAChB96L,EAAAA,GAAAC,cAAC05L,GAAW,CACV34L,IAAK85L,EAAW3lB,QAChBA,QAAS2lB,EAAW3lB,QACpBhlK,YAAa2qL,EAAW3qL,YACxBgwF,SAAU26F,EAAW3lB,QACrBn3K,QAAS4oB,MAGR,ICsCX,IAAeppB,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAM,SAAEkvE,GAAavtE,EAAOutE,SAAS4oG,SAGrC,MAAO,CAAE5oG,WAAUnzB,iBAFK71B,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,GAEjB0xB,sBADP0B,EAAAA,EAAAA,KAA2BzxB,GACE,GAL1CD,EA5D8B8oL,EAChDxqL,SACAuC,WACAzO,SACAqgG,kBACA7/F,UACA46E,WACAnzB,kBACArqB,2BAGA,MAAMrW,GAAere,EAAAA,EAAAA,IAAuB,OACtC,aAAE4Y,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BliB,OAAQxF,OAAWA,GAAW,GACnGm8L,GAAexiK,EAAAA,EAAAA,GAAsBinD,GAAU,GAC/Cw7G,EAAoBx7G,GAAYu7G,EAChClb,GAAoBC,EAAAA,GAAAA,GAAqBxvK,EAAQuC,IAGrDgpF,QAAS4B,IACPtB,EAAAA,GAAAA,IAAwB,CAAEC,QAASzwE,EAAcmxE,WArBzB,OAuB5Bt+F,EAAAA,EAAAA,KAAU,IAAO4F,GAASw5B,EAAAA,EAAAA,GAAsBh5B,QAAWhG,GAAY,CAACwF,EAAQQ,IAEhF,MAIMlH,GAAYuC,EAAAA,GAAAA,GAChB,gDACAmmB,GACE40K,GAAmBl7L,QAAW,UAGlC,OACEC,EAAAA,GAAAC,cAAA,OACEmX,IAAKwU,EACLjuB,UAAWA,EACXuqB,YAdoBo4J,KACtBR,EAAkB,CAAEp+K,KAAM,iBAAkB,GAezCykB,GAAgB80K,EACfA,EAAkB76L,KAAKu+E,GACrB3+E,EAAAA,GAAAC,cAACy/F,GAAa,CACZ1+F,IAAK29E,EAAQj7E,GACbi7E,QAASA,EACTh9E,KAAMilG,EAAAA,IACNlJ,oBAAqBA,EACrB1/F,QAASqG,EAASqgG,OAAkB7lG,EACpCshG,SAAUxhB,EACVryB,gBAAiBA,EACjBuzC,YAAU,EACV59D,qBAAsBA,MAGxB9b,EACFnmB,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,WACNhuD,EACA,KC7FV,IAAgB,KAAO,YAAY,YAAc,YC6GjD,IAAerB,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAQkvE,SAAUue,GAAgB9rF,EAAO62E,aAAas/F,SAItD,MAAO,CAAErqF,cAAa1xC,iBAHE71B,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,GAGd0xB,sBAFV0B,EAAAA,EAAAA,KAA2BzxB,GAEK,GAN7CD,EAtEkC+9K,EACpD3rL,SACAwlL,uBACAv/E,sBACAzlG,UACAm5F,cACA1xC,kBACArqB,uBACAhf,aAEA,MAAM,yBAAEi4K,IAA6BnrL,EAAAA,EAAAA,MAG/B6b,GAAere,EAAAA,EAAAA,IAAuB,OACtC,aAAE4Y,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BliB,OAAQxF,OAAWA,GAAW,GACnGm8L,GAAexiK,EAAAA,EAAAA,GAAsBwlE,GAAa,GAClDi9F,EAAoBj9F,GAAeg9F,GAEzC7gH,EAAAA,GAAAA,GAAoBvuD,GAEpB,MACEkwE,QAAS4B,IACPtB,EAAAA,GAAAA,IAAwB,CAAEC,QAASzwE,EAAcmxE,WAxBzB,IAwB4D5uF,YAAa9J,KAErG5F,EAAAA,EAAAA,KAAU,IAAO4F,GAASw5B,EAAAA,EAAAA,GAAsBh5B,QAAWhG,GAAY,CAACwF,EAAQQ,IAEhF,MAAMy0L,GAA0BhpL,EAAAA,EAAAA,IAAiB6qL,IAC1C92L,IACLimG,EAAoB6wF,GACpBtR,EAAqB,CACnB7gG,WAAYmyG,EAAGz3L,KAEjBw3L,IAA0B,IAGtBv9L,GAAYuC,EAAAA,GAAAA,GAChBC,GAAOkgC,KACP,mCACAha,GACC40K,GAAmBl7L,QAAUI,GAAOwyI,QAGvC,OACE3yI,EAAAA,GAAAC,cAAA,OACEmX,IAAKwU,EACLjuB,UAAWA,GAEVwoB,GAAgB80K,EACfA,EAAkB76L,KAAKu+E,GACrB3+E,EAAAA,GAAAC,cAACy/F,GAAa,CACZ1+F,IAAK29E,EAAQj7E,GACbi7E,QAASA,EACThhF,UAAWwC,GAAOi7L,YAClBz5L,KAAM05L,EAAAA,IACN39F,oBAAqBA,EACrB1/F,QAASs7L,EACTn5F,SAAUxhB,EACVryB,gBAAiBA,EACjBuzC,YAAU,EACV59D,qBAAsBA,EACtBhf,OAAQA,MAGVkD,EACFnmB,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,WACNhuD,EACA,K,gBCrDV,MA8HA,IAAerB,EAAAA,EAAAA,KA5HsBkzL,EACnCrsL,SACAi3L,kBAAiB,EACjBhvI,kBACAo9H,cACAvb,yBACAmb,eACAqH,iBACAhH,mBACA4R,iBACA12L,UACAgL,sBACAU,SACAirL,cACAC,mBACAC,kBACA1a,wBACA2a,mBACAjhG,gBACAz4D,uBACA25J,oBACAC,kBACAhkD,4BAEA,MAAM,iBACJikD,IACE/rL,EAAAA,EAAAA,OAEGkpL,EAAkBC,IAAoBC,EAAAA,GAAAA,GAAe90L,EAAQQ,IAC7Dk3L,EAA4BC,IAAiC9rL,EAAAA,EAAAA,KAAS,GAEvEjS,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MACN69L,EAAgBC,EAAWC,IAAa39L,EAAAA,EAAAA,MAE/CqpC,EAAAA,GAAAA,IAAsB,EAAE+tB,MAElBvxD,IAAWuxD,IACbumI,IACAH,EAA8BhtL,QAAQm/J,IACxC,GACC,CAAC9pK,EAAQ8pK,IAEZ,MAAOhyJ,EAASigL,EAAaC,IAAiB79L,EAAAA,EAAAA,KAExC89L,GAAiChsL,EAAAA,EAAAA,IAAiB2R,IACtDi6K,IACI3rL,GAAQurL,EAAiB,CAAEvrL,SAAQ0R,YAAW,IAcpD,OAXAxjB,EAAAA,EAAAA,KAAU,KACH4F,EAKLyK,YAAW,KACTstL,GAAa,GA3DQ,KAsDrBC,GAMoB,GACrB,CAACh4L,EAAQ+3L,EAAaC,IAGvBr8L,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI,CACHpe,OAAQA,EACRse,WAAS,EACT/L,UAAU,QACV8L,UAAW44K,EAAiB,MAAQ,SACpC39L,WAAWuC,EAAAA,GAAAA,GACT,iBAAkB,QAAS,wBAAyBs7L,GAAe,gBAErE32L,QAASA,EACTgL,oBAAqBA,EACrB6pL,aAAehhL,EAAAA,QAAkC7Z,EAAnBo6L,EAC9B3/I,aAAe5gC,EAAAA,QAAkC7Z,EAAnBq6L,EAC9BvrF,mBAAoBj1F,EAAAA,IAGnB8iL,IAAgBK,GACf77L,EAAAA,GAAAC,cAACs8L,GAAAA,EAAgB,CACfvb,sBAAuBA,EACvB0a,gBAAiBA,EACjB5a,sBAAkBjiL,EAClB88L,iBAAkBA,EAClBl9I,WAAS,EACTtiC,QAASA,EACTu+E,cAAeA,EACfz4D,qBAAsBA,EACtB25J,kBAAmBA,EACnBpc,cAAY,EACZ3nC,sBAAuBA,EACvB2kD,WAAYF,EACZz3L,QAASA,EACTlH,WAAWuC,EAAAA,GAAAA,GAAe+7L,GAAkB,6BAIhDj8L,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACT,uBACA+7L,GAAkB,+BAEpB76L,IAAKnD,EAAQoD,MAAQ,WAAQxC,GAE5ByqL,GAAgBtpL,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,OAAOnH,QAASsrL,GAAerrL,EAAQ,qBACtEyrL,GAAeiH,GACd3wL,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,WAAWnH,QAAS2yL,GAChC1yL,EAAQquD,EAAkB,cAAgB,oBAG9Co9H,GAAeiH,GAAkBoL,GAChC/7L,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,cAAcnH,QAAS2rL,GACnC1rL,EAAQ,mBAGZu9L,GAAeC,GACdz7L,EAAAA,GAAAC,cAAC4W,GAAAA,EAAQ,CAAC1R,KAAK,SAASnH,QAASu9L,GAC9Bp9L,EAAK,kBAIP,I,4BCnIX,MAAMs+L,GAAsE,CAC1EC,EAAG,OACHC,OAAQ,OACRC,EAAG,SACHC,GAAI,SACJC,EAAG,YACHC,IAAK,gBACLC,KAAM,YACNC,KAAM,WAEFC,GAAa92L,SAASnG,cAAc,OA4c1C,IAAezC,EAAAA,EAAAA,KA1cqB2/L,EAClC94L,SACA+4L,iBACAC,gBACAC,mBACAz4L,cAGA,MAAM+mB,GAAere,EAAAA,EAAAA,IAAuB,MAEtCgwL,GAAkBhwL,EAAAA,EAAAA,IAAyB,OAC3C,aAAE4Y,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BliB,IACpEm5L,EAAmBC,EAAiBC,IAAoBl/L,EAAAA,EAAAA,MACxDqqE,EAAS80H,IAAcztL,EAAAA,EAAAA,IAAS,KAChC0tL,EAAeC,IAAoB3tL,EAAAA,EAAAA,KAAS,IAC5C4tL,EAAgBC,IAAqB7tL,EAAAA,EAAAA,OACrC8tL,EAAqBC,IAA0B/tL,EAAAA,EAAAA,IAA+B,CAAC,IAEtFzR,EAAAA,EAAAA,KAAU,IAAO4F,GAASw5B,EAAAA,EAAAA,GAAsBh5B,QAAWhG,GAAY,CAACwF,EAAQQ,KAChFq5L,EAAAA,GAAAA,GACE75L,EACAunB,EACA/mB,GACA,IAGFpG,EAAAA,EAAAA,KAAU,KACJ++L,EACFD,EAAgB7vL,QAAS+sD,SAEzBkjI,EAAW,IACXE,GAAiB,GACnB,GACC,CAACL,KAEJ/+L,EAAAA,EAAAA,KAAU,KACH0nB,IACHu3K,IACAO,EAAuB,CAAC,GACxBF,OAAkBl/L,GACpB,GACC,CAAC6+L,EAAkBv3K,KAEtB1nB,EAAAA,EAAAA,KAAU,KACR,IAAK4F,IAAWg5L,EACd,OAGF,MAAMc,EAAwC,CAAC,EAC/C,IAAI,cAAEC,GAAkBf,EAAcgB,wBACtC,KAAOD,GAAiBA,EAAc16L,KAAO46L,EAAAA,KAAmB,CAC9D,MAAMC,EAAa9B,GAAwB2B,EAAcI,SACrDD,IACFJ,EAAgBI,IAAc,GAGhCH,EAAgBA,EAAcA,aAChC,CAEAH,EAAuBE,EAAgB,GACtC,CAAC95L,EAAQg5L,EAAeI,IAE3B,MAAMgB,GAAmBnuL,EAAAA,EAAAA,IAAgB,KACvC,IAAK+sL,EACH,OAGF,MAAMqB,EAAY7vL,OAAO8vL,eACrBD,IACFA,EAAUE,kBACVF,EAAUG,SAASxB,GACrB,IAGIyB,GAAsBxuL,EAAAA,EAAAA,IAAgB,KAC1C,MAAMouL,EAAY7vL,OAAO8vL,eACrBD,GACFpB,EAAiBoB,EAAUK,WAAW,GACxC,IAGIC,GAAkB1uL,EAAAA,EAAAA,IAAiB2uL,IACvC,GAAK5B,EASL,OANAH,GAAWgC,gBAAgB7B,EAAc8B,iBACrCF,GACF/B,GAAWrzL,iBAAiBu1L,GAAAA,IAA6B7/L,SAASkmI,IAChEA,EAAGgpD,YAAYhpD,EAAG45D,aAAa,OAAQ,IAGpCnC,GAAW5O,SAAS,IAGvBgR,GAAqBhvL,EAAAA,EAAAA,IAAgB,KACzC,GAAK+sL,EAIL,OAAOA,EAAcgB,wBAAwBD,aAAa,IAG5D,SAASmB,IACP,MAAM70J,EAAQ6yJ,EAAgB7vL,QAC9B,IAAKg9B,EACH,OAGF,MAAM,YAAEkE,EAAW,YAAE4wJ,EAAW,WAAEt5G,GAAex7C,EACjD,GAAI80J,GAAe5wJ,EAEjB,YADAmvJ,OAAkBl/L,GAIpB,IAAIlB,EAAY,GACZuoF,EAAas5G,EAAc5wJ,IAC7BjxC,EAAY,cAEVuoF,EAAa,IACfvoF,GAAa,cAGfogM,EAAkBpgM,EACpB,CAOA,SAAS8hM,EAAyBz+L,GAChC,GAAIg9L,EAAoBh9L,GACtB,MAAO,SAGT,GAAY,cAARA,GAA+B,kBAARA,GACzB,GAAIw/C,OAAO2K,KAAK6yI,GAAqB3yF,MAClCq0F,GAASA,IAAS1+L,GAAOgO,QAAQgvL,EAAoB0B,MAEtD,MAAO,gBAEJ,GAAI1B,EAAoB2B,WAAa3B,EAAoB4B,cAC9D,MAAO,UAIX,CAEA,MAAMC,GAAoBvvL,EAAAA,EAAAA,IAAgB,KACxC,GAAI0tL,EAAoB8B,QAAS,CAC/B,MAAM3rK,EAAUmrK,IAChB,IACGjC,IACGlpK,GACDA,EAAQk1H,QAAQ02C,aAAeC,EAAAA,GAAsBC,UACpD9rK,EAAQu6J,YAEZ,OASF,OANAv6J,EAAQs6J,YAAYt6J,EAAQu6J,kBAC5BuP,GAAwBE,IAAe,IAClCA,EACH2B,SAAS,KAIb,CAEA,MAAM7nL,EAAO+mL,IACb54L,SAAS85L,YACP,cAAc,EAAQ,2CAA0CF,EAAAA,GAAsBC,YAAYhoL,YAEpGpT,GAAS,IAGLs7L,GAAiB7vL,EAAAA,EAAAA,IAAgB,KACrC2tL,GAAwBE,IAEtB/3L,SAAS85L,YAAY/B,EAAgB77K,KAAO,eAAiB,QAC7Dk+B,OAAO2K,KAAKgzI,GAAiB5+L,SAASyB,IACvB,WAARA,GAA4B,cAARA,IAAwBgO,QAAQmvL,EAAgBn9L,KACvEoF,SAAS85L,YAAYl/L,EACvB,IAGF89L,IACO,IACFX,EACH77K,MAAO67K,EAAgB77K,QAEzB,IAGE89K,GAAmB9vL,EAAAA,EAAAA,IAAgB,KACvClK,SAAS85L,YAAY,UACrBpB,IACAb,GAAwBE,IAAe,IAClCA,EACHkC,QAASlC,EAAgBkC,UACxB,IAGCC,GAAsBhwL,EAAAA,EAAAA,IAAgB,KAC1ClK,SAAS85L,YAAY,aACrBpB,IACAb,GAAwBE,IAAe,IAClCA,EACHoC,WAAYpC,EAAgBoC,aAC3B,IAGCC,GAA0BlwL,EAAAA,EAAAA,IAAgB,KAC9C,GAAI0tL,EAAoB4B,cAAe,CACrC,MAAMzrK,EAAUmrK,IAChB,IACGjC,IACGlpK,GACmB,QAApBA,EAAQqqK,UACPrqK,EAAQu6J,YAEZ,OASF,OANAv6J,EAAQs6J,YAAYt6J,EAAQu6J,kBAC5BuP,GAAwBE,IAAe,IAClCA,EACHyB,eAAe,KAInB,CAEA,MAAM3nL,EAAO+mL,IACb54L,SAAS85L,YAAY,cAAc,EAAQ,QAAOjoL,WAClDpT,GAAS,IAGL47L,GAAsBnwL,EAAAA,EAAAA,IAAgB,KAC1C,GAAI0tL,EAAoB2B,UAAW,CACjC,MAAMxrK,EAAUmrK,IAChB,IACGjC,IACGlpK,GACmB,SAApBA,EAAQqqK,UACPrqK,EAAQu6J,YAEZ,OASF,OANAv6J,EAAQs6J,YAAYt6J,EAAQu6J,kBAC5BuP,GAAwBE,IAAe,IAClCA,EACHwB,WAAW,KAIf,CAEA,MAAM1nL,EAAO+mL,GAAgB,GAC7B54L,SAAS85L,YAAY,cAAc,EAAQ,6CAA4CjoL,YACvFpT,GAAS,IAGL67L,GAAuBpwL,EAAAA,EAAAA,IAAgB,KAC3C,MAAMqwL,IAAoBjvI,EAAAA,GAAAA,IAAemX,IAAY,IAAIyS,MAAM,KAAKl7E,IAAIwgM,WAAW53K,KAAK,KAExF,GAAI40K,EAAe,CACjB,MAAMzpK,EAAUmrK,IAChB,IAAKnrK,GAA+B,MAApBA,EAAQqqK,QACtB,OAOF,OAJCrqK,EAA8B5d,KAAOoqL,OAEtC97L,GAGF,CAEA,MAAMoT,EAAO+mL,GAAgB,GAC7BP,IACAr4L,SAAS85L,YACP,cACA,EACC,WAAUS,yCAAwD1oL,SAErEpT,GAAS,IAGLgjB,GAAgBvX,EAAAA,EAAAA,IAAiBM,IACrC,MAUM8xC,EAVqD,CACzDlyB,EAAGitK,EACHr4I,EAAG+6I,EACHU,EAAGP,EACHt5I,EAAGo5I,EACHU,EAAGL,EACHh5I,EAAG+4I,EACHO,EAAGlB,GClWM,SAAyBjvL,GACtC,MAAM5P,EAAM4P,EAAE5P,KAAO4P,EAAEmnD,KAEvB,OAAO/2D,EAAIs+H,WAAW,OAASt+H,EAAI8+C,MAAM,GAAGgL,cAAgB9pD,CAC9D,CDiWoCggM,CAAgBpwL,KAG9CA,EAAEi2K,SACGj2K,EAAEijB,SAAWjjB,EAAEk2K,UAChBpkI,IAKN9xC,EAAEkX,iBACFlX,EAAEwI,kBACFspC,IAAS,KAGXjkD,EAAAA,EAAAA,KAAU,KACJ4F,GACF+B,SAAS6S,iBAAiB,UAAW4O,GAGhC,IAAMzhB,SAAS8S,oBAAoB,UAAW2O,KACpD,CAACxjB,EAAQwjB,IAEZ,MAAM1pB,GAAOD,EAAAA,EAAAA,KASb,IAAKioB,EACH,OAGF,MAAMxoB,GAAYuC,EAAAA,GAAAA,GAChB,gBACAmmB,EACAm3K,GAAqB,sBAGjByD,GAA0B/gM,EAAAA,GAAAA,GAC9B,iCACA8O,QAAQ65D,EAAQ9oE,SAAW,SAGvBkK,EAAQmzL,EACT,SAAQA,EAAenxK,aAAamxK,EAAelxK,8BAA8BkxK,EAAenxK,OACjG,GAEJ,OACEjsB,EAAAA,GAAAC,cAAA,OACEmX,IAAKwU,EACLjuB,UAAWA,EACXsM,MAAOA,EACPwiD,UA/BJ,SAAgC77C,GAChB,UAAVA,EAAE5P,KAAmBw8L,IACvBkD,IACA9vL,EAAEkX,iBAEN,EA4BImlB,YAAallC,EAAAA,GAEb/H,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,cACNyE,UAAU,eACVnY,UAAW8hM,EAAyB,WACpCzhM,QAAS6hM,GAET7/L,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,iBAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,0BACfqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,cACNyE,UAAU,YACVnY,UAAW8hM,EAAyB,QACpCzhM,QAASmiM,GAETngM,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UAEbvC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,cACNyE,UAAU,cACVnY,UAAW8hM,EAAyB,UACpCzhM,QAASoiM,GAETpgM,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,YAEbvC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,cACNyE,UAAU,kBACVnY,UAAW8hM,EAAyB,aACpCzhM,QAASsiM,GAETtgM,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAEbvC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,cACNyE,UAAU,qBACVnY,UAAW8hM,EAAyB,iBACpCzhM,QAASwiM,GAETxgM,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,mBAEbvC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,cACNyE,UAAU,iBACVnY,UAAW8hM,EAAyB,aACpCzhM,QAASyiM,GAETzgM,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,eAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,0BACfqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACoP,MAAM,cAAcyE,UAAW3X,EAAK,2BAA4BH,QAASy/L,GAC/Ez9L,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAIfvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,8BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACoP,MAAM,cAAcyE,UAAW3X,EAAK,UAAWH,QAAS0/L,GAC9D19L,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAEbvC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,0BAEfqC,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAe,uCAAwC49L,IAElE99L,EAAAA,GAAAC,cAAA,SACEmX,IAAKmmL,EACL5/L,UAAU,+BACV+D,KAAK,OACLgP,MAAOm4D,EACPnc,YAAY,eACZw0I,aAAa,MACbpoI,UAAU,MACV13D,IAAI,OACJ8P,SAvTZ,SAA6BN,GAC3B+sL,EAAW/sL,EAAEC,OAAOH,OACpB6uL,GACF,EAqTY/4I,SAAU+4I,KAIdv/L,EAAAA,GAAAC,cAAA,OAAKtC,UAAWsjM,GACdjhM,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,0BACfqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLoP,MAAM,cACNyE,UAAW3X,EAAK,QAChBR,UAAU,gBACVK,QAAS0iM,GAET1gM,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,cAKf,IEvcV,IAAe/E,EAAAA,EAAAA,KAhCyB2jM,EACtCv1G,QAAOnxB,QAAOz8D,UAAS0/F,0BAEvB,MAAM92E,GAActW,EAAAA,EAAAA,IAAiBM,IAEnCA,EAAEkX,iBAEF9pB,IAAU4tF,EAAM,IAGZjuF,GAAYuC,EAAAA,GAAAA,GAChB,cACAu6D,GAAS,SAGX,OACEz6D,EAAAA,GAAAC,cAAA,OACEtC,UAAWA,EACXsvC,YAAarmB,EACbxhB,MAAOwmF,EAAMA,OAEb5rF,EAAAA,GAAAC,cAACsrF,GAAAA,EAAW,CACVvC,WAAY4C,EAAMloF,GAClB/B,KAhCkB,GAiClBghG,qBAAmB,EACnBH,sBAAoB,EACpBtD,8BAA+BxB,IAE7B,IC0HV,IAAelgG,EAAAA,EAAAA,KAxGoBuyL,EACjC1rL,SACA2kG,SACAjgB,eACAlkF,UACA4kL,gBACAn/E,sBACAw/E,iBACAD,2BAGA,MAAMj+J,GAAere,EAAAA,EAAAA,IAAuB,OACtC,aAAE4Y,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BliB,OAAQxF,OAAWA,GAAW,GACnGuiM,GAAqChzJ,EAAAA,GAAAA,GACzC46D,EAAOjpG,OAAS,IAAIgpF,KAAiBigB,QAAUnqG,EAzD5B,MA0DhB,IAELs7E,EAAAA,GAAAA,GAAoBvuD,GAEpB,MACEkwE,QAAS4B,IACPtB,EAAAA,GAAAA,IAAwB,CAAEC,QAASzwE,EAAcmxE,WAvBzB,IAuB4D5uF,YAAa9J,IAE/Fg9L,GAAoB/wL,EAAAA,EAAAA,IAAiBs7E,IACzC69F,EAAc79F,EAAMgoG,QACpB9J,EAAe,CAAEl+F,MAAOA,EAAMloF,IAAK,IAG/B41L,GAA0BhpL,EAAAA,EAAAA,IAAiBs7E,IAC/C0e,EAAoB1e,GACpBi+F,EAAqB,CAAE7gG,WAAY4C,EAAMloF,IAAK,IAG1CgsH,GAAep/G,EAAAA,EAAAA,IAAiBs7E,IAChC,WAAYA,EACdy1G,EAAkBz1G,GAElB0tG,EAAwB1tG,EAC1B,IAGIhlE,GAActW,EAAAA,EAAAA,IAAgB,CAACsjL,EAAgBlwL,KACnD+lL,EAAcmK,GACd9J,EAAe,CAAEl+F,MAAOloF,GAAK,IAGzB49L,GAAyBhxL,EAAAA,EAAAA,IAAiBs7E,IAC9C0e,EAAoB1e,GACpBi+F,EAAqB,CAAE7gG,WAAY4C,EAAMloF,IAAK,IAG1C69L,EAAgBpb,GAAsB,CAC1CzoL,SAAU2G,EACVmhL,cAAc,EACd7+H,MAAOy6I,EACP/a,8BAA8B,EAC9BxgJ,SAAU6pF,EACV7qH,aAGFgjC,EAAAA,GAAAA,IAAsB,EAAE25J,WACI3iM,IAAtB2iM,IAA0D,IAAvBA,GAtG3C,SAAwBhiM,EAAeosB,GACrC,MAAMjiB,EAAYiiB,EAAale,QAC/B,IAAK/D,EACH,OAGF,MAAM,eAAEq8K,EAAc,YAAED,GAAgBH,GACtCj8K,EACA,eAZoB,GAcpB,GACA,GACA,GAGF,IAAKo8K,EAAYhmL,SAAWgmL,EAAYvmL,GACtC,OAEF,MAAMksF,EAAQs6F,EAAe,GAC7B,IAAKA,EAAe7zJ,SAAS3yB,IACvBA,IAAUksF,IAAU65F,GAAe57K,EAAWo8K,EAAYr6F,IAAQ,GAAQ,CAC9E,MACM0gB,EAAuB,UADZ5sG,EAAQwmL,EAAeA,EAAejmL,OAAS,GAAK,QAAU,OAxBxD,GAyBgBP,EAA6B,GAEpEqmF,EAAAA,GAAAA,GAAwBl8E,EAAWyiG,EACrC,CACF,CAgFIq1F,CAAeF,EAAe31K,EAAa,GAC1C,CAAC21K,IAEJ,MAAM5jM,GAAYuC,EAAAA,GAAAA,GAChB,gDACAmmB,GAGF,OACErmB,EAAAA,GAAAC,cAAA,OACEmX,IAAKwU,EACLjuB,UAAWA,GAEVwoB,GAAgBi7K,EACfA,EAAWhhM,KAAI,CAACwrF,EAAOpsF,IACrB,WAAYosF,EACV5rF,EAAAA,GAAAC,cAAC0zL,GAAW,CACV3yL,IAAK4qF,EAAMloF,GACXkoF,MAAOA,EACPnxB,MAAO8mI,IAAkB/hM,EACzBxB,QAAS4oB,IAGX5mB,EAAAA,GAAAC,cAACkhM,GAAiB,CAChBngM,IAAK4qF,EAAMloF,GACXkoF,MAAOA,EACPnxB,MAAO8mI,IAAkB/hM,EACzBxB,QAASsjM,EACT5jG,oBAAqBA,MAIzBv3E,EACFnmB,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,WACNhuD,EACA,ICvGV,IAAerB,EAAAA,EAAAA,KAxCkBkkM,EAC/Bt8L,QACA+K,cACAsyB,YACA4b,WACAoc,QACAp0C,uBAAuB,GACvBroB,cAEA,IAAIqY,EAEJ,MAAMsrL,GAAmBp1L,EAAAA,EAAAA,GAASk2B,GAAYm/J,EAAAA,EAAAA,IAAmBn/J,QAAa5jC,GAW9E,OAVAw/C,EAAWA,GAAYsjJ,GAGrBtrL,EACErW,EAAAA,GAAAC,cAAA,OAAK+H,IAAKq2C,EAAU1gD,UAAW0oB,EAAsByE,IAAI,GAAG+2K,SAAS,QAAQh6L,WAAW,IAEjFzC,IACTiR,GAAUkpF,EAAAA,GAAAA,IAAgBn6F,EAAO,IAIjCpF,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPm1D,MAAOA,EACP98D,UAAU,iCACVsvC,YAAai1D,GAAAA,EACblkG,QAASA,GAETgC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SACM,iBAAZ0Y,GAAuBrU,EAAAA,GAAAA,GAAWqU,GAAWA,GAEvDrW,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACZyH,GAAUpF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,SAASyH,GAClC+K,GAAgBnQ,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eAAewS,IAExC,ICxBf,IAAe3S,EAAAA,EAAAA,KAvBqBskM,EAAGrnI,QAAOsnI,eAAc/jM,cAC1D,MAAM,MACJoH,EAAK,YAAE+K,GACL4xL,EAEE3nL,EAAM,QAAS2nL,EAAeA,EAAa3nL,SAAMvb,EACjDmjM,EAAe,iBAAkBD,EAAeA,EAAaC,kBAAenjM,EAE5E+nB,GAActW,EAAAA,EAAAA,IAAgB,KAClCtS,EAAQ+jM,EAAa,IAGvB,OACE/hM,EAAAA,GAAAC,cAACyhM,GAAU,CACTjnI,MAAOA,EACPh4B,UAAWu/J,EACX58L,MAAOA,GAASgV,EAChBjK,YAAaA,EACbnS,QAAS4oB,GACT,ICQN,IAAeppB,EAAAA,EAAAA,KAxBiBykM,EAC9BF,eAAcz1I,kBAAiBqrI,cAAaj6F,sBAAqB1/F,cAEjE,MAAM,IAAE24L,GAAQoL,EAEVn7K,GAActW,EAAAA,EAAAA,IAAgB,CAAC4xL,EAAgB55E,EAAoB+lD,KACvErwK,EAAQ+jM,EAAcz5E,EAAU+lD,EAAe,IAGjD,GAAKsoB,EAIL,OACE32L,EAAAA,GAAAC,cAACy2L,GAAS,CACRC,IAAKA,EACLj5F,oBAAqBA,EACrB//F,UAAU,sBACVK,QAAS25L,EAAc/wK,OAAc/nB,EACrCytD,gBAAiBA,GACjB,IC0CN,IAAe9uD,EAAAA,EAAAA,KAvDmB2kM,EAChC1nI,QAAO2nI,eAAcL,eAAc/jM,cAEnC,IAAIqI,EACAo8B,EACAu/J,EAEA,UAAWD,IACb17L,EAAQ07L,EAAa17L,OAGnB,cAAe07L,IACjBt/J,EAAYs/J,EAAat/J,WAEvB,iBAAkBs/J,IACpBC,EAAeD,EAAaC,cAG9B,MAAMK,GAAmB91L,EAAAA,EAAAA,IAASq1L,EAAAA,EAAAA,IAAmBI,IAC/C5mE,GAAe7uH,EAAAA,EAAAA,GAASlG,IAASi8L,EAAAA,EAAAA,IAAkBj8L,EAAO,cAC1DggB,GAAuB2xB,EAAAA,GAAAA,GAA6BojF,GAAgBinE,GAEpEz7K,GAActW,EAAAA,EAAAA,IAAgB,KAClCtS,EAAQ+jM,EAAa,IAGvB,GAAIK,EACF,OACEpiM,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCAAkCK,QAAS4oB,GACxD5mB,EAAAA,GAAAC,cAAA,OAAK+H,IAAM3B,GAAOo8B,WAAWp1B,SAAYg1L,EAAkBv3K,IAAI,GAAGjjB,WAAW,IAC7E7H,EAAAA,GAAAC,cAAA,OACE+H,IAAKozH,EACLz9H,WAAWuC,EAAAA,GAAAA,GAAe,aAAcmmB,GACxCyE,IAAI,GACJjjB,WAAW,KAMnB,MAAM,MAAEzC,EAAK,YAAE+K,GAAgB4xL,EAE/B,OACE/hM,EAAAA,GAAAC,cAACyhM,GAAU,CACTjnI,MAAOA,EACPh4B,UAAWu/J,EACX3jJ,SAAU+8E,GAAgB34F,GAAWp1B,QACrCgZ,qBAAsBA,EACtBjhB,MAAOA,EACP+K,YAAaA,EACbnS,QAAS4oB,GACT,IC5BN,IAAeppB,EAAAA,EAAAA,KA9BqB+kM,EAClCR,eACAz1I,kBACAoxC,sBACA1/F,UACAikC,2BAEA,MAAM,QAAE08C,GAAYojH,EAEpB,GAAKpjH,EAIL,OACE3+E,EAAAA,GAAAC,cAACy/F,GAAa,CACZ/gB,QAASA,EACTh9E,KAAM6gM,EAAAA,IACN9kG,oBAAqBA,EACrBt4F,MAAOu5E,EAAQiN,MACfjuF,UAAU,sBACVK,QAASA,EACTmiG,SAAU4hG,EACVz1I,gBAAiBA,EACjBuzC,YAAU,EACVI,eAAa,EACbh+D,qBAAsBA,GACtB,ICZAk8B,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAK,GA6MjD,IAAe5gE,EAAAA,EAAAA,KA1LwBilM,EACrCp+L,SACAqvD,QACAgvI,YACAC,mBACAC,WACAC,gBACAv2I,kBACAqrI,cACA1uI,WACApkD,UACAi+L,iBACA7gK,2BAEA,MAAM,SACJsK,EAAQ,SACRw2J,EAAQ,qBACRC,IACEjzL,EAAAA,EAAAA,MAGE6b,GAAere,EAAAA,EAAAA,IAAuB,OACtC,aAAE4Y,EAAY,qBAAEE,IAAyBE,EAAAA,GAAAA,GAA4BliB,OAAQxF,OAAWA,GAAW,GACnGokM,GAAoBl1J,EAAAA,GAAAA,GAAiB20J,EAAWv8K,IAEpD21E,QAAS4B,IACPtB,EAAAA,GAAAA,IAAwB,CAC1BC,QAASzwE,EACTmsK,WAhD6B,IAiD7B5pL,YAAa9J,IAGTqhD,GAAiBp1C,EAAAA,EAAAA,IAAgB,EAAGye,gBACpCA,IAAcmwC,EAAAA,GAAkBC,WAClChB,GAAalV,EACf,IAGIs4I,EAAgBpb,GAAsB,CAC1CzoL,SAAU2G,EACVgiL,6BAA8B4c,EAC9B3c,kBAAmB2c,EACnBt8I,MAAOg8I,EACP98J,SAAUi9J,EACVj+L,aAGFpG,EAAAA,EAAAA,KAAU,KACRynL,GAAsB,uBAAwBqb,EAAe31K,EAAa,GACzE,CAAC21K,IAEJ,MAAM2B,GAAe5yL,EAAAA,EAAAA,IAAgB,KACnCi8B,EAAS,CAAE7oC,GAAIgwD,IACfqvI,EAAS,CAAErvI,MAAOA,EAAQyvI,MAAOP,EAAU7yI,YAAa,IAGpDqzI,GAAoB9yL,EAAAA,EAAAA,IAAgB,KACxC,MAAM+sD,GAAQC,EAAAA,GAAAA,KAEd0lI,EAAqB,CACnBtvI,MAAOA,EACPt5C,IAAKyoL,EAAezoL,IACpB1V,WAAYm+L,EAAe5qL,KAC3BolD,QACAgmI,qBAAqB,GACrB,IAGEC,GAAuB9qK,EAAAA,EAAAA,GAC3BmqK,GAAkB5iM,OACd4iM,OACA9jM,EACJsnB,GAEIo9K,EAA2BZ,GAAkB5iM,OAAS4iM,EAAmBW,EAE/E,IAAKn9K,IAAkBo9K,GAA0BxjM,SAAU6iM,EACzD,OAGF,MAAMjlM,GAAYuC,EAAAA,GAAAA,GAChB,oCACAwY,EAAAA,GAAe,eAAiB,gBAChCuqL,GAAqB,UACrB58K,GAqFF,OACErmB,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACbtvC,IAAKwU,EACLjuB,UAAWA,EACXgpD,MAAO48I,EACPt2I,aAAa,uBACboS,YAAU,EACVzY,WAAYlB,EACZ89I,cAAe,KAEdZ,GA1FD5iM,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAAC8c,QAAM,EAACzkB,UAAU,wBAAwBK,QAASklM,GAC1DljM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASilM,EAAU3qL,OA0FpC4qL,GAnFD7iM,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAAC8c,QAAM,EAACzkB,UAAU,wBAAwBK,QAASolM,GAC1DpjM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASklM,EAAe5qL,OAmFzCjJ,QAAQu0L,GAA0BxjM,SA7E9BwjM,EAA0BnjM,KAAI,CAACqjM,EAAiBjkM,KACrD,OAAQikM,EAAgB/hM,MACtB,IAAK,MACH,OACE1B,EAAAA,GAAAC,cAACgiM,GAAS,CACRjhM,IAAKyiM,EAAgB//L,GACrBq+L,aAAc0B,EACd/lG,oBAAqBA,EACrB1/F,QAAS8kM,EACTx2I,gBAAiBA,EACjBqrI,YAAaA,IAInB,IAAK,QACH,OACE33L,EAAAA,GAAAC,cAACkiM,GAAW,CACVnhM,IAAKyiM,EAAgB//L,GACrB0+L,aAAca,EACdlB,aAAc0B,EACdzlM,QAAS8kM,IAIf,IAAK,UACH,OACE9iM,EAAAA,GAAAC,cAACsiM,GAAa,CACZvhM,IAAKyiM,EAAgB//L,GACrBq+L,aAAc0B,EACd/lG,oBAAqBA,EACrB1/F,QAAS8kM,EACTx2I,gBAAiBA,EACjBrqB,qBAAsBA,IAI5B,IAAK,QACL,IAAK,OACL,IAAK,OACH,OACEjiC,EAAAA,GAAAC,cAACkiM,GAAW,CACVnhM,IAAKyiM,EAAgB//L,GACrB+2D,MAAO8mI,IAAkB/hM,EACzBuiM,aAAc0B,EACdzlM,QAAS8kM,IAGf,IAAK,UACL,IAAK,QACL,IAAK,QACH,OACE9iM,EAAAA,GAAAC,cAAC6hM,GAAa,CACZ9gM,IAAKyiM,EAAgB//L,GACrB+2D,MAAO8mI,IAAkB/hM,EACzBuiM,aAAc0B,EACdzlM,QAAS8kM,IAIf,QACE,OACJ,IAiBe,ICtFrB,IAAetlM,EAAAA,EAAAA,KAnHkBkmM,EAC/Br/L,SACAkM,SACAozL,mBACAC,gBACA3hK,uBACAp9B,cAEA,MAAM,kBAAEg/L,EAAiB,iBAAE9/J,IAAqBh0B,EAAAA,EAAAA,MAG1Cs3B,GAAYuJ,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAC9B8hB,GAAY7Z,EAAAA,EAAAA,MAAY8Z,MAAM/hB,KAE9BxqC,GAAOD,EAAAA,EAAAA,KAEP0tB,GAAere,EAAAA,EAAAA,IAAuB,OAErC0rL,EAAkBC,EAAkB4K,IAAmB3K,EAAAA,GAAAA,GAAe90L,EAAQQ,OAAShG,IAE9FJ,EAAAA,EAAAA,KAAU,KACJ4F,GACFy/L,GACF,GACC,CAACz/L,EAAQy/L,IAEZ,MAAMxc,GAAmBh3K,EAAAA,EAAAA,IAAiB5M,IACxCmB,IACAg/L,EAAkB,CAAEtzL,OAAQA,EAASwzL,SAAUrgM,GAAK,IAGhDsgM,EAAsB7d,GAAsB,CAChDzoL,SAAU2G,EACVsiD,MAAOi9I,EACP/9J,SAAUyhJ,EACVf,mBAAmB,EACnBH,kCAAkC,EAClCvhL,YAaF,OAVApG,EAAAA,EAAAA,KAAU,KACRynL,GAAsB,uBAAwB8d,EAAqBp4K,EAAa,GAC/E,CAACo4K,KAEJvlM,EAAAA,EAAAA,KAAU,KACJmlM,IAAkBA,EAAc7jM,QAClC8E,GACF,GACC,CAAC++L,EAAe/+L,IAGjB7E,EAAAA,GAAAC,cAACwiB,GAAAA,EAAI,CACHpe,OAAQA,EACRuS,UAAU,OACV8L,UAAU,SACV7d,QAASA,EACTlH,UAAU,aACVkS,oBAAqBhL,EACrB60L,aAAehhL,EAAAA,QAAkC7Z,EAAnBo6L,EAC9B3/I,aAAe5gC,EAAAA,QAAkC7Z,EAAnBq6L,EAC9BvrF,mBAAoBj1F,EAAAA,GACpB+0F,WAAS,GAETztG,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gBAAgByD,IAAI,QAAQjD,EAAK,uBAC/CkpC,GAAaojB,GAAam5I,GAAexjM,KAAI,EAAGsD,KAAIygF,aAAa3kF,KAChE,MAAMyyC,EAAO5K,EAAU3jC,GACjBgP,EAAO+3C,EAAU/mD,GACjBwyB,EAAO+b,GAAQv/B,EAiBfuxL,GAAkB/jM,EAAAA,GAAAA,GAAeyjM,IAAqBjgM,GAAM,YAElE,OACE1D,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK0C,EACL/F,UAAU,yDAEVK,QAtBgB4oB,MACbu9D,GAAaliD,EAChBqlJ,EAAiB5jL,GAEjBqgC,EAAiB,CACfr9B,QAASvI,EAAK,+BACdo7J,WAAYp7J,EAAK,QACjBgI,OAAQ,CACNA,OAAQ,mBACR+8H,QAAS,CAAC,IAGhB,EAWEzoE,MAAOupI,IAAwBxkM,EAC/B2jD,cAAelhB,GAAwBkiD,GAClCnkF,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,aAAa5E,UAAU,yBAEvCqC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt0B,KAAK,QACLu0B,KAAMA,EACNv4B,UAAWsmM,IAEbjkM,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,QACZu4B,GAAQl2B,EAAAA,GAAAC,cAACosD,GAAAA,EAAa,CAACn2B,KAAMA,EAAMguK,QAAM,IAC1ClkM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYs0C,EACxB9zC,EAAK,4BACLA,EAAK,cAAeuU,GAAMyxL,aAAc,OAGrC,IAGV,ICpBX,IAAe3mM,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAUm0F,mBACF,CACLz3F,KAAKs6E,EAAAA,EAAAA,KAAiBh3E,EAAQm0F,GAC9B5H,YAAY6gF,EAAAA,EAAAA,KAAyBptK,GACrC+vB,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,MALnCD,EA1FgCmyL,EAClD/9F,eAAc3I,sBAAqB9uF,MAAK6vF,aACxChuC,cAAaxuB,2BAEb,MAAM,aAAEmoD,EAAY,iBAAE6a,EAAgB,eAAE5a,IAAmBt6E,EAAAA,EAAAA,MAGrD4tF,GAAkBpwF,EAAAA,EAAAA,IAA0B,MAE5CpP,GAAOD,EAAAA,EAAAA,KACPwwK,EAAU9/J,IAAQA,EAAIw4F,YAAcp4F,QAAQJ,EAAIu4F,eAChDk9F,EAAoBr1L,QAAQJ,GAAK6wE,UAEjCw7G,GAAoBr8L,EAAAA,EAAAA,KAAQ,KAChC,IAAKgQ,EACH,MAAO,GAGT,MAAM01L,GAAqB11L,EAAI6wE,UAAU3/C,QAAO,EAAGghE,eAAgBA,KAAc,IAC9EhhD,MAAM,EAtBuB,GAuB1BykJ,GAAmB31L,EAAI41L,QAAU,IAAIpkM,KAAI,EAAGsD,QAASA,IACrD+gM,EAAgB71L,EAAI6wE,SAAW7wE,EAAI6wE,SAAS3/C,QAAO,EAAGp8B,SAAU6gM,EAAgBpyK,SAASzuB,KAAO,GAEtG,MAAO,IAAI4gM,KAAuB11L,EAAI41L,QAAU,MAAQC,GAAe3kJ,MAAM,EAzBrD,EAyB4E,GACnG,CAAClxC,KAEJnQ,EAAAA,EAAAA,KAAU,MAEH4lM,GAAqBpJ,EAAkBl7L,OA9BpB,GA8BoD6O,GAC1Ew7E,EAAa,CACXjB,eAAgB,CACd5O,UAAW3rE,EAAI2rE,YAGrB,GACC,CAAC8pH,EAAmBpJ,EAAkBl7L,OAAQqqF,EAAcx7E,EAAKy3F,IAEpE,MAAMD,GAAiB3iG,EAAAA,EAAAA,KAAY,KACjCwhG,EAAiB,CAAEoB,gBAAe,GACjC,CAACpB,EAAkBoB,IAEhBq+F,GAAqBjhM,EAAAA,EAAAA,KAAak7E,IACtC0L,EAAe,CAAElB,eAAgBxK,EAAQwK,gBAAiB,GACzD,CAACkB,IAEJ,IAAKz7E,EACH,OAGF,MAAM+1L,EAAoB1J,EAAkBl7L,OAAS,EAErD,OACEC,EAAAA,GAAAC,cAAA,OAAKe,IAAK4N,EAAIlL,GAAI/F,UAAU,cAAcyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAClEmB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,sBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,QAAQyD,IAAI,QAAQwN,EAAIxJ,OACtCpF,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,QAAQyD,IAAI,QAAQjD,EAAK,WAAYyQ,EAAI2mB,MAAO,OAE/Dv1B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAW+wK,EAAU,gBAAa7vK,EAClCwS,MAAM,UACN1P,KAAK,OACLumG,MAAI,EACJriD,OAAK,EACL7nD,QAASooG,GAERjoG,EAAKuwK,EAAU,qBAAuB,sBAG3C1uK,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,4CACbqC,EAAAA,GAAAC,cAAA,UAAQmX,IAAKumF,EAAiBhgG,UAAU,mBACtCgnM,GAAqB3kM,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,MAC9B85K,GAAqB1J,EAAkB76L,KAAKu+E,GAC3C3+E,EAAAA,GAAAC,cAACy/F,GAAa,CACZ/gB,QAASA,EACTh9E,KAAMijM,EAAAA,IACNlnG,oBAAqBA,EACrBz6E,QAASw7E,GAAchuC,EACvB0vC,SAAUxhB,EACV3gF,QAAS0mM,EACT/kG,eAAa,EACb19D,qBAAsBA,EACtB07D,gBAAiBA,OAInB,KCvFJx/B,IAAenlD,EAAAA,GAAAA,KAAUolD,GAAOA,KAAM,KAAO,GA2EnD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAMqlB,GAAgBstK,EAAAA,EAAAA,KAA2B3yL,IAC3C,MAAEm0B,EAAK,UAAEy+J,GAAcvtK,GAAiB,CAAC,GACzC,SAAEwtK,GAAa7yL,EAAOutE,SAE5B,MAAO,CACLp5C,QACAwiE,YAAak8F,EAASt7F,OACtBq7F,YACAr0I,YAAazhD,SAAQsD,EAAAA,EAAAA,KAAeJ,GAAQ8yL,2BAC7C,GAXe/yL,EAzE6BgzL,EAC/CvnM,WACA2oC,QACAwiE,cACAi8F,YACAr0I,cACA5rD,cAEA,MAAM,qBAAEqgM,IAAyBn1L,EAAAA,EAAAA,MAG3B6b,GAAere,EAAAA,EAAAA,IAAuB,MAEtCpP,GAAOD,EAAAA,EAAAA,MAGX49F,QAAS4B,IACPtB,EAAAA,GAAAA,IAAwB,CAAEC,QAASzwE,EAAcmxE,WArBzB,MAsE5B,OA7CAt+F,EAAAA,EAAAA,KAAU,KACR0/D,IAAa,KACX+mI,GAAsB,GACtB,KAGJ33K,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IAsCR7E,EAAAA,GAAAC,cAAA,OAAKmX,IAAKwU,EAAcjuB,UAAU,8BAA8ByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAnC5F,WACE,QAAcA,IAAVwnC,EAIJ,OAAKA,GAASwiE,EACLA,EAAYzoG,KAAKsD,GACtB1D,EAAAA,GAAAC,cAACmkM,GAAgB,CACfpjM,IAAK0C,EACL2iG,aAAc3iG,EACdg6F,oBAAqBA,EACrBjtC,YAAaA,MAKfq0I,EACGA,EAAU/kM,OAIR+kM,EAAU1kM,KAAKsD,GACpB1D,EAAAA,GAAAC,cAACmkM,GAAgB,CACfpjM,IAAK0C,EACL2iG,aAAc3iG,EACdg6F,oBAAqBA,EACrBjtC,YAAaA,MARRzwD,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,cAAcyD,IAAI,QAAO,kBAa1CpB,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,KACjB,CAIK1iB,GACG,KC+DV,IAAe3sC,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAMqlB,GAAgB4tK,EAAAA,EAAAA,KAAuBjzL,IACvC,MAAEm0B,EAAK,QAAE6mF,GAAY31F,GAAiB,CAAC,GACvC,OAAEhnB,EAAM,SAAEuC,IAAaD,EAAAA,EAAAA,KAAyBX,IAAW,CAAC,EAC5DQ,EAAOnC,GAAS4hC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,QAAU1R,EAC7CivD,EAAev9C,GAASw9C,EAAAA,EAAAA,KAAmB77C,EAAQ3B,QAAU1R,EAC7DklH,EAAgBrxG,GAAOsxG,EAAAA,EAAAA,KAAoB9xG,EAAQQ,QAAQ7T,EAC3DytD,EAAkBt9C,QAAQuB,KAAWkmB,EAAAA,EAAAA,KAAqBvkB,EAAQ3B,GAClEs9J,EAAat9J,GAAUuC,GAAWg7J,EAAAA,EAAAA,KAAiB57J,EAAQ3B,EAAQuC,QAAYjU,EAC/EkvK,EAAkB/+J,SAAS6+J,GAAYG,gBAAkBH,GAAYI,eACrEhjH,EAAQ16C,GAAUuC,GAAWspH,EAAAA,EAAAA,KAAYlqH,EAAQ3B,EAAQuC,QAAYjU,EAI3E,MAAO,CACLwnC,QACA6mF,UACAx6G,OACAqxG,gBACAz3D,kBACA84I,cAToBp2L,QAAQ0D,IAAS1D,QAAQ8D,KAC1Co4C,EAAAA,EAAAA,IAAiBx4C,EAAMu4C,EAAO8iH,EAAiBjgH,GASlDqgH,uBAAwBn/J,QAAQuB,KAAW69J,EAAAA,EAAAA,KAA6Bl8J,EAAQ3B,GAChFqC,oBAAoBC,EAAAA,EAAAA,KAAyBX,GAC9C,GAxBeD,EAlHyBozL,EAC3C3nM,WACA2oC,QACA6mF,UACAx6G,OACAo7C,eACAi2D,gBACAoqD,yBACA7hH,kBACA84I,gBACAxyL,qBACA/N,cAEA,MAAM,eACJygM,EAAc,YACd90I,EAAW,kBACX+0I,IACEx1L,EAAAA,EAAAA,MAGE6b,GAAere,EAAAA,EAAAA,IAAuB,OAErCohK,EAAiBC,IAAYC,EAAAA,GAAAA,GAAYV,IAG9CryE,QAAS4B,IACPtB,EAAAA,GAAAA,IAAwB,CAAEC,QAASzwE,EAAcmsK,WA5BzB,MA8BtBJ,EAAcyN,IAAiBx3B,EAAAA,EAAAA,IAA4Bl7J,EAAMo7C,EAAci2D,GAAe4zE,YAE9F6N,GAAiB/hM,EAAAA,EAAAA,KAAY,CAACkzL,EAAeruE,EAAoB+lD,KACrE,GAAIspB,EAAa,CACf,IAAK/kL,EACH,OAGEy7J,EACFM,GAAiBK,IACfx+G,EAAY,CACVM,YAAal+C,EACb+jL,MACA3nB,cACA1mD,YACA,IAGJ93D,EAAY,CAAEM,YAAal+C,EAAoB+jL,MAAKruE,YAExD,CAEI5vG,EAAAA,IACF6sL,EAAkB,CAAEl/J,WAAOxnC,GAC7B,GACC,CAAC84L,EAAa/kL,EAAoB+7J,IAE/B82B,GAAuBhiM,EAAAA,EAAAA,KAAY,KACvC6hM,GAAgB,GACf,CAACA,IAEEnnM,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IA+BV,MAAM6gM,EAAa12L,aAAkBnQ,IAAVwnC,GAAuB6mF,GAAWA,EAAQntH,QAErE,OACEC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YAAYyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACnDmB,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACbtvC,IAAKwU,EACLjuB,WAAWuC,EAAAA,GAAAA,GAAe,8BAA+BwlM,GAAc,QACvE/+I,MAAOumE,EACPjgE,aAAa,aACbqS,iBA1GkB,GA2GlBD,YAAU,EACVzY,WAAY6+I,GAvClB,WACE,QAAc5mM,IAAVwnC,EAIJ,OAAK6mF,EAMAA,EAAQntH,OAMNmtH,EAAQ9sH,KAAKu2L,GAClB32L,EAAAA,GAAAC,cAACy2L,GAAS,CACR11L,IAAK21L,EAAIjzL,GACTizL,IAAKA,EACLj5F,oBAAqBA,EACrB1/F,QAAS25L,EAAc6N,OAAiB3mM,EACxCytD,gBAAiBA,MAVjBtsD,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,cAAcyD,IAAI,QAAQjD,EAAK,gBAN5C6B,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,KAmBd,CAeO1iB,IAEFykI,EACG,K,gBCjKV,SAAuB,WAAvB,GAA8C,WAA9C,GAA6F,WAA7F,GAAsL,WAAtL,GAAyM,WAAzM,GAA2N,WAA3N,GAA6O,WAA7O,GAAuQ,WAAvQ,GAA6R,WAA7R,GAA+S,WCyC/S,IAAepxK,EAAAA,EAAAA,KAzBf,UAAkC,cAAEmoM,IAClC,MAAM1nM,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KACb,OACE4B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACbwlM,EAAcx1J,eAAiB,GAC9BnwC,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,IACfH,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,gBAAgB5E,UAAWwC,MACrCu9D,EAAAA,GAAAA,IAAqBv/D,EAAMwnM,EAAcx1J,iBAI7Cw1J,EAAcz1J,cAAgB,GAC7BlwC,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,IACfH,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UAAU5E,UAAWwC,MAC/Bu9D,EAAAA,GAAAA,IAAqBv/D,EAAMwnM,EAAcz1J,iBAI5Cy1J,EAAcz1J,gBAAkBy1J,EAAcx1J,gBAC3ClyC,EAAQ,4CAGnB,ICgDA,IAAeT,EAAAA,EAAAA,KA1D+BooM,EAAGD,gBAAej/L,cAC9D,MAAMvI,GAAOD,EAAAA,EAAAA,MACP,wBAAE2nM,IAA4B91L,EAAAA,EAAAA,MAE9BkrH,GAAiBE,EAAAA,EAAAA,IAA4Bz0H,GAC7C00H,GAAe7uH,EAAAA,EAAAA,IAAS8uH,EAAAA,EAAAA,IAAoB30H,EAAS,UACrD40H,EAAetsH,SAAQusH,EAAAA,EAAAA,IAAqB70H,IAE5CkgB,GAAcnjB,EAAAA,EAAAA,KAAY,KAC9BoiM,EAAwB,CAAErqL,UAAW9U,EAAQhD,IAAK,GACjD,CAACmiM,EAAyBn/L,EAAQhD,KAErC,OACE1D,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACTC,GACA6O,QAAQosH,GAAgBH,IAAmB96H,IAE7CnC,QAAS4oB,GAET5mB,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IAkBxB,SAAuBhC,EAAiBuI,EAAqBwG,EAAkBouH,GAC7E,OAAKpuH,EAKHlN,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,OACE+H,IAAKkF,EACL4d,IAAI,GACJjjB,WAAW,EACXlK,WAAWuC,EAAAA,GAAAA,GAAeC,GAAcm7H,GF/EgE,eEiFzGM,EAAAA,EAAAA,IAAgBl1H,IAAY1G,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,UACvCk5H,EAAAA,EAAAA,GAAqBt9H,EAAMuI,GAAS,KAZhC+0H,EAAAA,EAAAA,GAAqBt9H,EAAMuI,EAetC,CAlCWm1H,CAAc19H,EAAMuI,EAAS00H,GAAgBH,EAAgBK,IAEhEt7H,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACbhC,EAAK,0BAA2BwnM,EAAc11J,WAAY,OAI/DjwC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,KACbi5F,EAAAA,GAAAA,IAAsC,IAAf1yF,EAAQ0uB,KAAaj3B,EAAK45D,OAEpD/3D,EAAAA,GAAAC,cAAC6lM,GAAwB,CAACH,cAAeA,KAEvC,IC6BV,IAAenoM,EAAAA,EAAAA,KAjEf,UAA+B,KAAEkV,EAAI,MAAEsvB,EAAK,cAAE2jK,IAC5C,MAAMxnM,GAAOD,EAAAA,EAAAA,MACP,sBAAE6nM,IAA0Bh2L,EAAAA,EAAAA,MAC5BouC,EAAWnc,GAAS,YAAaA,EAEjC17B,EAAQ63C,EAAWnc,EAAM3rB,QAAQ/P,WAAQzH,EACzCu/C,EAAYD,GAAWxb,EAAAA,EAAAA,IAAkBX,QAASnjC,EAClDmnM,GAAaz5L,EAAAA,EAAAA,GAAS6xC,GACtB68E,EAAiB+qE,GAAc1/L,GAAOm8B,WAAWp1B,QAEjDuZ,GAActW,EAAAA,EAAAA,IAAgB,KAClCy1L,EAAsB,CAAE1gK,QAASsgK,EAActgK,SAAU,IAG3D,OACErlC,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAaA,IACvCnC,QAAS4oB,GAET5mB,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IAkBxB,SAAuBhC,EAAiBuU,EAAexF,GACrD,OACElN,EAAAA,GAAAC,cAAA,YACGiN,EACClN,EAAAA,GAAAC,cAAA,QAAMtC,UHtE4D,YGuEhEqC,EAAAA,GAAAC,cAAA,OACE+H,IAAKkF,EACL4d,IAAI,GACJjjB,WAAW,EACXlK,WAAWuC,EAAAA,GAAAA,GAAeC,GH3E8F,WAA6B,eG+EzJH,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLC,KAAMxjB,EACN/Q,KAAK,QACLhE,UAAWwC,GACX8lM,gBAAc,EACdC,uBAAqB,IAIxB/nM,EAAK,SAGZ,CA1CW09H,CAAc19H,EAAMuU,EAAMszL,GAAc/qE,IAE3Cj7H,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACbhC,EAAK,0BAA2BwnM,EAAc11J,WAAY,OAI/DjwC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACbg+C,GAAYnvC,QAAQgzB,EAAM5M,QAASgkE,EAAAA,GAAAA,IAAoC,IAAbp3D,EAAM5M,KAAaj3B,EAAK45D,OAErF/3D,EAAAA,GAAAC,cAAC6lM,GAAwB,CAACH,cAAeA,KAIjD,IChEA,GAAuB,WAAvB,GAA2K,WAA3K,GAAqS,WAArS,GAAwT,WAAxT,GAA2U,WAA3U,GAA+V,WCoC/V,IAAIQ,GACAC,GAWJ,MAAMC,GAAwB,CAC5BC,YAAa,4BACbC,eAAgB,+BAChBC,UAAW,mCACXC,cAAe,kCACfC,mBAAoB,mCACpBC,0BAA2B,0CAC3BC,eAAgB,8BAChBC,kBAAmB,kCACnBC,wBAAyB,+BACzBC,uBAAwB,6BACxBC,6BAA8B,uCAE1BC,GAAiBzmJ,OAAO2K,KAAKk7I,IAE7Ba,GAAsB,CAC1BZ,YAAa,yBACba,aAAc,0BACdP,eAAgB,4BAChBQ,cAAe,2BACfC,aAAc,0BACdZ,cAAe,4BAEXa,GAAe9mJ,OAAO2K,KAAK+7I,IAgLjC,IAAe1pM,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMg3L,GAAaC,EAAAA,EAAAA,KAAiBt1L,EAAQ3B,GACtCmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAC1Bk3L,GAAO15I,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAASm3L,eAC3C7xK,EAAyB,uBAAfnjB,GAAMhR,KAChBimM,GAAexwK,EAAAA,EAAAA,KAAmBjlB,EAAQ3B,GAC1Cq3L,GAAcC,EAAAA,EAAAA,KAAkB31L,EAAQ3B,IAASo4B,KAEvD,MAAO,CACL4+J,aAAYE,OAAM5xK,UAASnjB,OAAMi1L,eAAcC,cAChD,GAXe31L,EAjK0B61L,EAC5Cv3L,SACAmC,OACA60L,aACAE,OACA5xK,UACA8xK,eACAC,kBAEA,MAAMzpM,GAAOD,EAAAA,EAAAA,KAEP0tB,GAAere,EAAAA,EAAAA,IAAuB,OACrC4O,EAAS4rL,IAAc73L,EAAAA,EAAAA,KAAS,GACjC83L,GAAez6L,EAAAA,EAAAA,IAAiB,KAEhC,eAAE06L,EAAc,yBAAEC,IAA6Bn4L,EAAAA,EAAAA,MAC/CzB,GAAcC,EAAAA,EAAAA,MAEpB9P,EAAAA,EAAAA,KAAU,KACRwpM,EAAe,CAAE13L,SAAQslB,WAAU,GAClC,CAACtlB,EAAQ03L,EAAgBpyK,IAE5B,MAAMsyK,GAASvpM,EAAAA,EAAAA,KAAQ,IACdi3B,EAAUyxK,GAAeL,IAC/B,CAACpxK,IAEEuyK,GAAcxpM,EAAAA,EAAAA,KAAQ,IACnBi3B,EAAUqxK,GAAsBb,IACtC,CAACxwK,IA4EJ,OAzEAp3B,EAAAA,EAAAA,KAAU,KACH8oM,GAILY,EAAO5oM,SAASgD,IACd,MAAM8lM,EAAQd,EAAWhlM,GACQ,iBAAV8lM,GAGrBH,EAAyB,CACvB3lM,OACAgO,SACA+3L,MAAOD,EAEPE,aAAuB,mBAAThmM,GAElB,GACA,GACD,CAAC4lM,EAAQ53L,EAAQg3L,EAAYW,KAEhCzpM,EAAAA,EAAAA,KAAU,KACR,iBApGJ8c,iBAME,OALK4qL,KACHA,GAAqB,gCACrBC,SAAoBD,IAGfA,EACT,CA8FYqC,GAEDrsL,EAKAorL,GAAe37K,EAAale,UAIjCy6L,EAAO5oM,SAAQ,CAACgD,EAAM/C,KACpB,MAAM6oM,EAAQd,EAAWhlM,GAGzB,GAFiC,iBAAV8lM,GAERL,EAAat6L,QAAQykB,SAAS5vB,GAC3C,OAGF,IAAK8lM,EAGH,YAFAL,EAAat6L,QAAQhO,KAAK6C,GAK5B,MAAM,UAAEkmM,GAAcJ,EAEtBjC,GAAYsC,OACV98K,EAAale,QAAS4I,SAAS9W,GAC/B,CACE4F,MAAOjH,EAAMiqM,EAAuC7lM,OACjDkmM,EAAY,CACbr2K,OAASnG,IAAcvQ,EAAAA,GAAAA,IAAQ,4BAA6B,CAAE4sL,MAAOG,EAAWx8K,IAAGw7K,SACnFkB,aAAcxqM,EAAK,kBACjB,CAAC,KACFkqM,IAIPL,EAAat6L,QAAQhO,KAAK6C,GAE1BqpB,EAAale,QAAS4I,SAAS9W,GAAOiI,UAAUsa,OAAO5hB,GAAc,IAGvEmO,KAzCEy5L,GAAW,EA0Cd,EA9CD,EA8CI,GACH,CACDI,EAAQC,EAAajsL,EAASorL,EAAYppM,EAAMoS,EAAQ23L,EAA0BT,EAAMn5L,IAIxFtO,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAa,8BAA+Bgc,GAAWhc,KACnFonM,GACCvnM,EAAAA,GAAAC,cAAC2oM,GAAAA,EAAkB,CACjBrB,WAAYA,EACZ7lM,KAAMm0B,EAAU,QAAU,UAC1BzwB,MAAOjH,EAAK,wBAId6pM,EAAat6L,QAAQ3N,QAAUC,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAEzC7sD,EAAAA,GAAAC,cAAA,OAAKmX,IAAKwU,GACPu8K,EAAO/nM,KAAKioM,GACXroM,EAAAA,GAAAC,cAAA,OAAKe,IAAKqnM,EAAO1qM,WAAWuC,EAAAA,GAAAA,GAAeC,GAAcA,SAI5D6O,QAASu4L,GAAqCsB,aAAa9oM,SAC1DC,EAAAA,GAAAC,cAAA,OAAKtC,UDjNkI,YCkNrIqC,EAAAA,GAAAC,cAAA,MAAItC,UDlNoN,YCkNlLQ,EAAK,+BAEzCopM,EAAoCsB,YAAYzoM,KAAKulM,IACrD,GAAI,UAAWA,EAAe,CAC5B,MAAMj/L,EAAUihM,EAAahC,EAAc/+E,OAC3C,IAAKlgH,KAAa,YAAaA,GAAU,OAEzC,OACE1G,EAAAA,GAAAC,cAAC2lM,GAAuB,CACtB5kM,IAAM,qBAAoB2kM,EAAc/+E,QACxClgH,QAASA,EACTi/L,cAAeA,GAGrB,CAEA,GAAI,YAAaA,GAAiBjzL,EAAM,CACtC,MAAMsvB,EAAQ4lK,IAAcjC,EAActgK,SAE1C,OACErlC,EAAAA,GAAAC,cAAC6oM,GAAqB,CACpB9nM,IAAM,mBAAkB2kM,EAActgK,UACtC3yB,KAAMA,EACNsvB,MAAOA,EACP2jK,cAAeA,GAGrB,CAEgB,KAIlB,KCnPV,GAAuB,WAAvB,GAA0C,WAA1C,GAA6D,WC4C7D,IAAenoM,EAAAA,EAAAA,KA1BsCurM,EAAGttL,WACtD,MAAMtd,GAAOD,EAAAA,EAAAA,MACP,mBAAE8qM,IAAuBj5L,EAAAA,EAAAA,MAEzBirI,GAAWp8I,EAAAA,EAAAA,KAAQ,IAAO6c,EAAK/I,MAAOmmJ,EAAAA,EAAAA,IAAgBp9I,EAAK/I,WAAQ7T,GAAY,CAAC4c,EAAK/I,OACrFkU,GAAcnjB,EAAAA,EAAAA,KAAY,KAC9BulM,EAAmB,CAAEhuD,SAAUA,EAAWx/H,UAAWC,EAAKD,WAAY,GACrE,CAACC,EAAKD,UAAWwtL,EAAoBhuD,IAExC,OACEh7I,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAa,4BAA6BnC,QAAS4oB,GAChF5mB,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACt0B,KAAK,SAASu0B,KAAMza,EAAK/I,OAEjC1S,EAAAA,GAAAC,cAAA,WACED,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACbsb,EAAKrW,OAGRpF,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACbhC,EAAK,0BAA2Bsd,EAAKq0B,MAAO,OAG7C,ICZV,IAAIq2J,GACAC,GAWJ,MAAM6C,GAAe,CACnBC,WAAY,iCACZC,eAAgB,gCAEZC,GAAS5oJ,OAAO2K,KAAK89I,IAuJ3B,IAAezrM,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMk3L,GAAO15I,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAASm3L,eAC3Cr1L,GAAWC,EAAAA,EAAAA,KAAeJ,GAIhC,MAAO,CAAEq1L,WAHUl1L,EAASk1L,WAAW8B,eAGlB5B,OAAMjsL,UAFTnJ,EAASk1L,WAAW+B,iBAEA,GAPtBr3L,EA1IpB,UAAoB,OAClB1B,EAAM,SACN7S,EAAQ,WACR6pM,EAAU,KACVE,EAAI,UACJjsL,IAEA,MAAMrd,GAAOD,EAAAA,EAAAA,KAEP0tB,GAAere,EAAAA,EAAAA,IAAuB,OACrC4O,EAAS4rL,IAAc73L,EAAAA,EAAAA,KAAS,GACjC83L,GAAez6L,EAAAA,EAAAA,IAAiB,KAEhC,sBAAEg8L,EAAqB,0BAAEC,EAAyB,yBAAEtB,IAA6Bn4L,EAAAA,EAAAA,MACjFzB,GAAcC,EAAAA,EAAAA,MAEpB9P,EAAAA,EAAAA,KAAU,KACJ+c,GACF+tL,EAAsB,CAAEh5L,SAAQiL,aAClC,GACC,CAACjL,EAAQg5L,EAAuB/tL,KAEnC/c,EAAAA,EAAAA,KAAU,KACHf,IAAY8d,IACfwsL,EAAat6L,QAAU,GACvBq6L,GAAW,GACb,GACC,CAACrqM,EAAU8d,KAGd/c,EAAAA,EAAAA,KAAU,KACH8oM,GAIL6B,GAAO7pM,SAASgD,IACd,MAAM8lM,EAAQd,EAAWhlM,GACQ,iBAAV8lM,GAGrBH,EAAyB,CAAE3lM,OAAMgO,SAAQ+3L,MAAOD,GAClD,GACA,GACD,CAAC93L,EAAQg3L,EAAYW,KAExBzpM,EAAAA,EAAAA,KAAU,KACR,iBAxEJ8c,iBAME,OALK4qL,KACHA,GAAqB,gCACrBC,SAAoBD,IAGfA,EACT,CAkEYqC,GAEDrsL,EAKAorL,GAAe37K,EAAale,UAIjC07L,GAAO7pM,SAAQ,CAACgD,EAAM/C,KACpB,MAAM6oM,EAAQd,EAAWhlM,GAGzB,GAFiC,iBAAV8lM,GAERL,EAAat6L,QAAQykB,SAAS5vB,GAC3C,OAGF,IAAK8lM,EAGH,YAFAL,EAAat6L,QAAQhO,KAAK6C,GAK5B,MAAM,UAAEkmM,GAAcJ,EAEtBjC,GAAYsC,OACV98K,EAAale,QAAS4I,SAAS9W,GAC/B,CACE4F,MAAOjH,EAAM8qM,GAAwC1mM,OAClDkmM,EAAY,CACbr2K,OAASnG,IAAcvQ,EAAAA,GAAAA,IAAQ,4BAA6B,CAAE4sL,MAAOG,EAAWx8K,IAAGw7K,SACnFkB,aAAcxqM,EAAK,kBACjB,CAAC,KACFkqM,IAIPL,EAAat6L,QAAQhO,KAAK6C,EAAK,IAGjC+L,KAvCEy5L,GAAW,EAwCd,EA5CD,EA4CI,GACH,CACD5rL,EAASorL,EAAYppM,EAAMoS,EAAQiL,EAAW0sL,EAA0BT,EAAMn5L,IAGhF,MAAMo3C,GAAiBp1C,EAAAA,EAAAA,IAAgB,EAAGye,gBACpCA,IAAcmwC,EAAAA,GAAkBC,WAAa3jD,GAC/CguL,EAA0B,CAAEj5L,SAAQiL,aACtC,IAGF,OAAKW,GAAYorL,GAAe/rL,EAK9Bxb,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAa,gBAAiBgc,GAAWhc,KACtEH,EAAAA,GAAAC,cAAC2oM,GAAAA,EAAkB,CAACrB,WAAYA,EAAY7lM,KAAK,UAAU0D,MAAOjH,EAAK,wBAErE6pM,EAAat6L,QAAQ3N,QAAUC,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAEzC7sD,EAAAA,GAAAC,cAAA,OAAKmX,IAAKwU,GACPw9K,GAAOhpM,KAAKioM,GACXroM,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,IAAe6nM,EAAat6L,QAAQykB,SAASk2K,IAAUloM,SAIzF6O,QAAQu4L,EAAWkC,iBAClBzpM,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IAA6BhC,EAAK,+BAEjD6B,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACbC,MAAO4gJ,EAAWmC,mBAClBz8I,aAAa,4BACbrG,WAAYlB,EACZ4Z,iBAAkBqqI,EAAAA,IAClBtqI,YAAU,GAERkoI,EAAWmC,mBAAiDtpM,KAAK+R,GACjEnS,EAAAA,GAAAC,cAAC8oM,GAA8B,CAAC/nM,IAAKmR,EAAKqJ,UAAWC,KAAMtJ,SA3B9DnS,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,KAkCnB,KChJA,IAAervD,EAAAA,EAAAA,KA3Bf,UAAwC,KAAEie,EAAI,UAAEgvC,EAAS,UAAEpjB,IACzD,MAAMlpC,GAAOD,EAAAA,EAAAA,MACP,SAAEquC,IAAax8B,EAAAA,EAAAA,MACfkiC,EAAO5K,EAAU5rB,EAAK7L,QACtB8C,EAAO+3C,EAAUhvC,EAAK7L,QAEtBgX,GAActW,EAAAA,EAAAA,IAAgB,KAClCi8B,EAAS,CAAE7oC,GAAIuuC,EAAKvuC,IAAK,IAG3B,OACE1D,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAa,4BAA6BnC,QAAS4oB,GAChF5mB,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CAACt0B,KAAK,SAASu0B,KAAM+b,GAAQv/B,EAAMuzL,gBAAc,EAACC,uBAAqB,IAE9ElmM,EAAAA,GAAAC,cAAA,WACED,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACb8xC,GAAO3G,EAAAA,EAAAA,IAAgB2G,IAAQmd,EAAAA,EAAAA,IAAajxD,EAAMuU,IAGrD1S,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACbsb,EAAKw0B,WAAa9xC,EAAK,0BAA2Bsd,EAAKw0B,WAAY,KAAO9xC,EAAK,aAK1F,IClBA,IAAIgoM,GACAC,GAWJ,MAAM6C,GAAe,CACnBC,WAAY,+BACZC,eAAgB,gCAEZC,GAAS5oJ,OAAO2K,KAAK89I,IAwK3B,IAAezrM,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMk3L,GAAO15I,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAASm3L,eAC3Cr1L,GAAWC,EAAAA,EAAAA,KAAeJ,GAC1Bq1L,EAAal1L,EAASk1L,WAAWqC,aACjCvkK,EAAUhzB,EAASk1L,WAAWhpJ,gBAC5B5V,KAAMtB,GAAcn1B,EAAOtR,OAC3B+nC,KAAM8hB,GAAcv4C,EAAOw4C,MAEnC,MAAO,CACL68I,aAAYE,OAAMpiK,UAASgC,YAAWojB,YACvC,GAXex4C,EAzJpB,UAAyB,OACvB1B,EAAM,SACN7S,EAAQ,WACR6pM,EAAU,KACVE,EAAI,QACJpiK,EAAO,UACPolB,EAAS,UACTpjB,IAEA,MAAMlpC,GAAOD,EAAAA,EAAAA,KAEP0tB,GAAere,EAAAA,EAAAA,IAAuB,OACrC4O,EAAS4rL,IAAc73L,EAAAA,EAAAA,KAAS,GACjC83L,GAAez6L,EAAAA,EAAAA,IAAiB,KAEhC,oBAAEs8L,EAAmB,wBAAEC,EAAuB,yBAAE5B,IAA6Bn4L,EAAAA,EAAAA,MAC7EzB,GAAcC,EAAAA,EAAAA,MAEpB9P,EAAAA,EAAAA,KAAU,KACJ4mC,GACFwkK,EAAoB,CAAEt5L,SAAQ80B,WAChC,GACC,CAAC90B,EAAQ80B,KAEZ5mC,EAAAA,EAAAA,KAAU,KACHf,IAAY2nC,IACf2iK,EAAat6L,QAAU,GACvBq6L,GAAW,GACb,GACC,CAACrqM,EAAU2nC,KAGd5mC,EAAAA,EAAAA,KAAU,KACH8oM,GAIL6B,GAAO7pM,SAASgD,IACd,MAAM8lM,EAAQd,EAAWhlM,GACQ,iBAAV8lM,GAGrBH,EAAyB,CAAE3lM,OAAMgO,SAAQ+3L,MAAOD,GAClD,GACA,GACD,CAAC93L,EAAQg3L,EAAYW,KAExBzpM,EAAAA,EAAAA,KAAU,KACR,iBA5EJ8c,iBAME,OALK4qL,KACHA,GAAqB,gCACrBC,SAAoBD,IAGfA,EACT,CAsEYqC,GAEDrsL,EAKAorL,GAAe37K,EAAale,UAIjC07L,GAAO7pM,SAAQ,CAACgD,EAAM/C,KACpB,MAAM6oM,EAAQd,EAAWhlM,GAGzB,GAFiC,iBAAV8lM,GAERL,EAAat6L,QAAQykB,SAAS5vB,GAC3C,OAGF,IAAK8lM,EAGH,YAFAL,EAAat6L,QAAQhO,KAAK6C,GAK5B,MAAM,UAAEkmM,GAAcJ,EAEtBjC,GAAYsC,OACV98K,EAAale,QAAS4I,SAAS9W,GAC/B,CACE4F,MAAOjH,EAAM8qM,GAAwC1mM,OAClDkmM,EAAY,CACbr2K,OAASnG,IAAcvQ,EAAAA,GAAAA,IAAQ,4BAA6B,CAAE4sL,MAAOG,EAAWx8K,IAAGw7K,SACnFkB,aAAcxqM,EAAK,kBACjB,CAAC,KACFkqM,IAIPL,EAAat6L,QAAQhO,KAAK6C,EAAK,IAGjC+L,KAvCEy5L,GAAW,EAwCd,EA5CD,EA4CI,GACH,CACD5rL,EAASorL,EAAYppM,EAAMoS,EAAQ80B,EAAS6iK,EAA0BT,EAAMn5L,IAG9E,MAAMo3C,GAAiBp1C,EAAAA,EAAAA,IAAgB,KAChC+0B,GAELykK,EAAwB,CAAEv5L,SAAQ80B,WAAU,IAG9C,OAAKlpB,GAAYorL,GAAeliK,EAK9BrlC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAa,gBAAiBgc,GAAWhc,KACtEH,EAAAA,GAAAC,cAAC2oM,GAAAA,EAAkB,CAACrB,WAAYA,EAAY7lM,KAAK,QAAQ0D,MAAOjH,EAAK,wBAEnE6pM,EAAat6L,QAAQ3N,QAAUC,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAEzC7sD,EAAAA,GAAAC,cAAA,OAAKmX,IAAKwU,GACPw9K,GAAOhpM,KAAKioM,GACXroM,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,IAAe6nM,EAAat6L,QAAQykB,SAASk2K,IAAUloM,SAIzF6O,QAAQu4L,EAAWkC,iBAClBzpM,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IAA6BhC,EAAK,+BAEjD6B,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACbC,MAAO4gJ,EAAWmC,mBAClBz8I,aAAa,4BACbrG,WAAYlB,EACZ4Z,iBAAkBqqI,EAAAA,IAClBtqI,YAAU,GAETkoI,EAAWmC,mBAAoBtpM,KAAK+R,GAC/B,cAAeA,EAEfnS,EAAAA,GAAAC,cAAC8oM,GAA8B,CAAC/nM,IAAM,WAAUmR,EAAKqJ,YAAaC,KAAMtJ,IAK1EnS,EAAAA,GAAAC,cAAC8pM,GAA4B,CAC3B/oM,IAAM,SAAQmR,EAAKkzB,UACnB5pB,KAAMtJ,EACNs4C,UAAWA,EACXpjB,UAAWA,SAtClBrnC,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,KA+CnB,K,gBC1DA,UAAervD,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAUuzJ,aACT,MAAM,OAAEukC,EAAM,QAAEC,IAAY33L,EAAAA,EAAAA,KAAeJ,GAAQg4L,YAEnD,MAAO,CACLF,OAAQA,IAASvkC,EAAOxmK,QACxB+f,OAASirL,IAAUxkC,EAAOxmK,SAAY,GACvC,GAPegT,EA7GiCk4L,EACnDz3L,OACAhM,UACA++J,SACA2kC,aACAC,cACAL,SACAhrL,aAEA,MAAM,sBACJsrL,EAAqB,SACrB/9J,EAAQ,iBACRg+J,IACEx6L,EAAAA,EAAAA,MAEEy6L,GAAkBhyK,EAAAA,EAAAA,GAA8B4xK,EAAWK,cAC1D5zK,EAAWspF,IAAgBjwG,EAAAA,EAAAA,KAAkB,GAC9Cw6L,EAAkB17L,QAAQg7L,IAC1B,OAAE/qM,EAAM,KAAEgZ,GAASwtJ,EACnBtnK,GAAOD,EAAAA,EAAAA,MAEbO,EAAAA,EAAAA,KAAU,KAEHisM,GAAmBF,IAAoBJ,EAAWK,aACrDH,EAAsB,CACpB53L,OAAM8I,UAAW9U,EAAQhD,GAAIzE,SAAQ+f,SAAQgT,MA5B/B,EA4BqD24K,mBAAmB,GAE1F,GAEC,CAACP,EAAWK,YAAaC,IAE5B,MAAME,GAAsBnnM,EAAAA,EAAAA,KAAY,KACtC08G,GAAa,GACbmqF,EAAsB,CACpB53L,OAAM8I,UAAW9U,EAAQhD,GAAIzE,SAAQ+f,SAAQgT,MApC3B,IAqClB,GACD,CAACtf,EAAM43L,EAAuB5jM,EAAQhD,GAAIsb,EAAQ/f,KAErDR,EAAAA,EAAAA,KAAU,KACR0hH,GAAa,EAAM,GAClB,CAAC6pF,IAEJ,MAAMa,GAAoBpnM,EAAAA,EAAAA,KAAaC,IACrC6oC,EAAS,CAAE7oC,OACX6mM,GAAkB,GACjB,CAACA,EAAkBh+J,IAetB,OACEvsC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACZqsM,EACGA,EAAO5pM,KAAKsD,GACZ1D,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK0C,EACL/F,UAAU,sBAEVK,QAASA,IAAM6sM,EAAkBnnM,KAEhCsO,EAAAA,EAAAA,IAAStO,GACR1D,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACdmqE,WAAW,OACX7tF,OAAQt8B,EACRqjC,eAAa,EACb6c,kBAAgB,IAGlB5jD,EAAAA,GAAAC,cAAC4jD,GAAAA,EAAa,CACZgqE,WAAW,OACXt9G,OAAQ7M,EACRkgD,kBAAgB,OAKtB5jD,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MACXm9I,GAzCP,WACE,MAAMc,EAAkBV,EAAWK,YAAcT,EAAQjqM,OAEzD,OAAOqqM,EAAWK,YArDA,GAqD+BK,EAAkB,GACjE9qM,EAAAA,GAAAC,cAAC8qM,GAAAA,EAAc,CACbx1K,MAAOu1K,EACPjxF,SAAS,QACThjF,UAAWA,EACX74B,QAAS4sM,GAGf,CA8BiBI,IAEbhrM,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cAAcyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACrDmB,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,eAAeyD,IAAI,SAChCisC,EAAAA,GAAAA,IAAuB,CACtBp1B,KAAMA,EAAKA,KACXg0E,SAAUh0E,EAAKg0E,YAGnBjsF,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,iBAAiByD,IAAKjD,EAAKkD,MAAQ,YAASxC,IAQ7C6R,EAPE05L,EAAWK,aAOE9zC,EAPW0zC,GAQhC,GAAM35L,EAAQimJ,EAAS,KAAKziI,UAAY,GARK,OAO9D,IAAuBxjB,EAAeimJ,CAJ5B,KClEV,IAAen5J,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MACEg4L,aAAa,OAAE35L,EAAM,UAAEiL,KACrBlJ,EAAAA,EAAAA,KAAeJ,GAEnB,IAAK3B,IAAWiL,EACd,MAAO,CAAC,EAGV,MAAM9I,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAC1B7J,GAAUswB,EAAAA,EAAAA,KAAkB9kB,EAAQ3B,EAAQiL,GAGlD,MAAO,CACL9I,OACAhM,UACAukM,KALWvkM,IAAWwkM,EAAAA,EAAAA,KAAsBh5L,EAAQxL,GAMrD,GAlBeuL,EAjD2Bk5L,EAC7CztM,WACAgV,OACAhM,UACAukM,OACApmM,cAEA,MAAM1G,GAAOD,EAAAA,EAAAA,KAOb,IALAqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,KAGL6B,IAAYukM,IAASv4L,EACxB,OAAO1S,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAGjB,MAAM,QAAE6lI,EAAO,QAAExlE,GAAY+9E,EAC7B,IAAK/9E,EAAQA,QACX,OAGF,MAAMk+E,GAAkBC,EAAAA,GAAAA,IAAqBn+E,EAAQA,QAAS,UAE9D,OACEltH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cAAcyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACrDmB,EAAAA,GAAAC,cAAA,MAAItC,UAAU,gBAAgByD,IAAI,SAC/BisC,EAAAA,GAAAA,IAAuB,CACtBp1B,KAAMy6K,EAAQjuB,SAASxsJ,KACvBg0E,SAAUymG,EAAQjuB,SAASx4E,YAG/BjsF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mCACZ+0L,EAAQN,QAAQhyL,KAAKqlK,GACpBzlK,EAAAA,GAAAC,cAACkqM,GAAiB,CAChBnpM,IAAM,GAAEiqM,EAAKvnM,MAAM+hK,EAAOxmK,SAC1ByT,KAAMA,EACNhM,QAASA,EACT++J,OAAQA,EACR2kC,WAAYgB,EAAgB3lC,EAAOxmK,QACnCorM,YAAan9E,EAAQm9E,iBAIvB,K,gBC3EV,SAAuB,WAAvB,GAA4C,WAA5C,GAAiE,WAAjE,GAAuG,WAAvG,GAA2H,WAA3H,GAAoJ,WAApJ,GAAsK,WAAtK,GAAkN,WAAlN,GAAmQ,WC4B7PiB,GAAY,EAAIxyL,EAAAA,EA6ItB,IAAetb,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,iBAAEq5L,IAAqBj5L,EAAAA,EAAAA,KAAeJ,GAC5C,MAAO,CACLQ,KAAM64L,GAAkBh7L,QAAS4hC,EAAAA,EAAAA,KAAWjgC,EAAQq5L,EAAiBh7L,aAAU1R,EAC/E0sM,mBACAtpK,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GAClD,GAPeD,EAhI2Bu5L,EAC7C9tM,WACAgV,OACA64L,mBACAtpK,uBACAp9B,cAEA,MAAM,YAAE4mM,EAAW,iBAAEznK,IAAqBj0B,EAAAA,EAAAA,OACnC3K,EAAOgkK,IAAYl5J,EAAAA,EAAAA,IAAS,KAC5Bw7L,EAAgBC,IAAqBz7L,EAAAA,EAAAA,IAAS,IAC9C07L,EAAaC,IAAkB37L,EAAAA,EAAAA,SAA6BrR,GAC7DV,GAAOD,EAAAA,EAAAA,KAEP+lI,EAAYj1H,QAAQ5J,GACpByxB,EAAY7nB,QAAQu8L,GAAkB10K,YAE5CtJ,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,KAGVpG,EAAAA,EAAAA,KAAU,KACHf,IACH0rK,EAAS,IACTyiC,OAAehtM,GACjB,GACC,CAACnB,IAEJ,MAAMisK,GAAoBlmK,EAAAA,EAAAA,KAAamN,IACrCw4J,EAASx4J,EAAEC,OAAOH,MAAM,GACvB,IAEGo7L,GAAkBroM,EAAAA,EAAAA,KAAY,KAClCkoM,GAAmB3sI,IAAS+gB,EAAAA,GAAAA,IAAcgsH,EAAAA,GAAAA,MAAiBhsM,OAAQi/D,EAAO,IAAG,GAC5E,IAEGgtI,GAAoBvoM,EAAAA,EAAAA,KAAY,KACpCgoM,EAAY,CACVl7L,OAAQmC,EAAMhP,GACd0B,QACA6mM,WAAWF,EAAAA,GAAAA,MAAiBL,GAC5BE,eACA,GACD,CAACl5L,EAAM+4L,EAAaC,EAAgBE,EAAaxmM,IAE9Ck0L,GAA0B71L,EAAAA,EAAAA,KAAamoF,IACtCA,EAAMiV,QAAW5+D,GAAwB2pD,EAAMloF,KAAO6iG,EAAAA,IAKvD3a,EAAMloF,KAAO6iG,EAAAA,IAKjBslG,EAAejgH,EAAMloF,IAJnBmoM,OAAehtM,GALfmlC,EAAiB,CAAEQ,eAAgB,kBASb,GACvB,CAACvC,EAAsB+B,IAEpBkoK,GAAattM,EAAAA,EAAAA,KAAQ,KAClB,CACL8E,GAAI,EACJ0B,QACA6mM,WAAWF,EAAAA,GAAAA,MAAiBL,GAC5BE,iBAED,CAACF,EAAgBE,EAAaxmM,IAEjC,GAAKsN,GAAM84C,QAIX,OACExrD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAgB,kBAC7CH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAgBA,KAC7CH,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,IAAiBhC,EAAK,qBACvC6B,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACT78B,KAAK,WACL88B,UAAW1X,OAAOukL,EAAWN,cAAgB,EAC7CprE,eAAa,EACbzxG,UAAW,EACXpxB,UAAWwC,IAEXH,EAAAA,GAAAC,cAAC8sD,GAAAA,EAAS,CACR9B,MAAOihJ,EACPvuM,WAAWuC,EAAAA,GAAAA,GAAeC,GD/HqJ,YCgI/KnC,QAAS8tM,EACTnqM,KAAM2pM,GACNa,aAAW,KAGfnsM,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRV,MAAOtL,EACP8L,SAAUy4J,EACV54J,MAAO5S,EAAK,yBACZ0kB,SAAUgU,EACVgU,2BAAyB,KAG7B7qC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAgBA,KAC7CH,EAAAA,GAAAC,cAACkqG,GAAiB,CAChBzO,SAAS,0BACTljF,UAAW9a,EACXolG,YAAaplG,EACb4sG,oBAAqBgvF,EACrB37L,UAAWwC,GACXiqG,oBAAoB,qBACpBC,uBAAqB,MAI3BrqG,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAAS67F,EACTphH,SAAUgU,EACV74B,QAASguM,EACTl2L,UAAW3X,EAAK,SAEf04B,EACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGX,KCxIJ+oM,GAAY,EAAIxyL,EAAAA,EA4JtB,IAAetb,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,eAAEk6L,IAAmB95L,EAAAA,EAAAA,KAAeJ,GAK1C,MAAO,CACLQ,KALW05L,GAAgB77L,QAAS4hC,EAAAA,EAAAA,KAAWjgC,EAAQk6L,EAAe77L,aAAU1R,EAMhFosD,MALYmhJ,GAAgB77L,QAAU67L,GAAgBt/I,SACpDsvE,EAAAA,EAAAA,KAAYlqH,EAAQk6L,EAAe77L,OAAQ67L,EAAet/I,cAAWjuD,EAKvEutM,iBACAnqK,sBAAsB0B,EAAAA,EAAAA,KAA2BzxB,GAClD,GAZeD,EA7IyBo6L,EAC3C3uM,WACAgV,OACAu4C,QACAmhJ,iBACAnqK,uBACAp9B,cAEA,MAAM,UAAEynM,EAAS,iBAAEtoK,IAAqBj0B,EAAAA,EAAAA,OACjC3K,EAAOgkK,IAAYl5J,EAAAA,EAAAA,IAAS,KAC5B07L,EAAaC,IAAkB37L,EAAAA,EAAAA,SAA6BrR,GAC7DV,GAAOD,EAAAA,EAAAA,KAEP24B,EAAY7nB,QAAQo9L,GAAgBv1K,WACpC01K,EAAYthJ,GAAOvnD,KAAO8oM,EAAAA,KAEhCj/K,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,KAGVpG,EAAAA,EAAAA,KAAU,KACHf,IACH0rK,EAAS,IACTyiC,OAAehtM,GACjB,GACC,CAACnB,KAEJe,EAAAA,EAAAA,KAAU,MACJwsD,GAAO7lD,OAAS6lD,GAAO2gJ,eACzBxiC,EAASn+G,EAAM7lD,OACfymM,EAAe5gJ,EAAM2gJ,aACvB,GACC,CAAC3gJ,IAEJ,MAAMg5E,GAAYrlI,EAAAA,EAAAA,KAAQ,IACjBwG,IAAU6lD,GAAO7lD,OAASwmM,IAAgB3gJ,GAAO2gJ,aACvD,CAACA,EAAaxmM,EAAO6lD,GAAO2gJ,YAAa3gJ,GAAO7lD,QAE7CukK,GAAoBlmK,EAAAA,EAAAA,KAAamN,IACrC,MAAM67L,EAAW77L,EAAEC,OAAOH,MAC1B04J,EAASqjC,EAAS,GACjB,IAEGC,GAAkBjpM,EAAAA,EAAAA,KAAY,KAClC6oM,EAAU,CACR/7L,OAAQmC,EAAMhP,GACd0B,QACA0nD,QAAS7B,EAAOvnD,GAChBkoM,eACA,GACD,CAACl5L,EAAM45L,EAAWV,EAAaxmM,EAAO6lD,IAEnCquI,GAA0B71L,EAAAA,EAAAA,KAAamoF,IACtCA,EAAMiV,QAAW5+D,GAAwB2pD,EAAMloF,KAAO6iG,EAAAA,IAKvD3a,EAAMloF,KAAO6iG,EAAAA,IAKjBslG,EAAejgH,EAAMloF,IAJnBmoM,EA1EgB,KAqEhB7nK,EAAiB,CAAEQ,eAAgB,kBASb,GACvB,CAACvC,EAAsB+B,IAEpBkoK,GAAattM,EAAAA,EAAAA,KAAQ,KAClB,IACFqsD,EACH7lD,QACAwmM,iBAED,CAACA,EAAaxmM,EAAO6lD,IAExB,GAAKv4C,GAAM84C,QAIX,OACExrD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,IACdH,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAgB,mBAC3C8qD,GAASjrD,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MAClB5B,GACCjrD,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAgBA,GAAYosM,GFjIe,aEkIxEvsM,EAAAA,GAAAC,cAAA,QAAMtC,UAAWwC,IAAiBhC,EAAKouM,EAAY,0BAA4B,qBAC/EvsM,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACT78B,KAAK,WACL88B,UAAW1X,OAAOukL,EAAWN,cAAgB,EAC7CprE,eAAa,EACbzxG,UAAW,EACXpxB,UAAWwC,IAEXH,EAAAA,GAAAC,cAAC8sD,GAAAA,EAAS,CACR9B,MAAOihJ,EACPvuM,UAAWwC,GACXwB,KAAM2pM,GACNa,aAAW,KAGfnsM,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRV,MAAOtL,EACP8L,SAAUy4J,EACV54J,MAAO5S,EAAK,yBACZ0kB,SAAUgU,EACVgU,2BAAyB,MAG3B0hK,GACAvsM,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAgBA,KAC7CH,EAAAA,GAAAC,cAACkqG,GAAiB,CAChBzO,SAAS,wBACTljF,UAAW9a,EACXolG,YAAaplG,EACb4sG,oBAAqBgvF,EACrB37L,UAAWwC,GACXiqG,oBAAoB,qBACpBC,uBAAqB,OAOjCrqG,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAAS67F,EACTphH,SAAUgU,EACV74B,QAAS0uM,EACT52L,UAAW3X,EAAK,SAEf04B,EACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGX,KC/HJoqM,GAAqB,sBAoM3B,IAAenvM,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU8tB,aACT,MAAMiS,GAAO0xE,EAAAA,EAAAA,KAAUzxG,EAAQ8tB,GACzBoS,GAAeC,EAAAA,EAAAA,KAAmBngC,EAAQ8tB,IAC1C,SAAEjpB,IAAazE,EAAAA,EAAAA,KAAeJ,GAAQ06L,WACtCvvD,GAAeja,EAAAA,GAAAA,GAAmBlxH,EAAQ,eAEhD,MAAO,CACL8tB,SACAiS,OACAl7B,WACA4mI,WAAYvrG,GAAcwrG,IAC1BP,eACD,GAbeprI,EAlMyB46L,EAC3C7sK,SACAiS,OACAl7B,WACAlS,UACA84I,aACAjgJ,WACA2/I,mBAEA,MAAM,WACJyvD,EAAU,mBACVtyC,EAAkB,0BAClBuyC,EAAyB,2BACzBC,IACEj9L,EAAAA,EAAAA,OAEGk9L,EAAgBC,EAAkBC,IAAwB3uM,EAAAA,EAAAA,IAAQ,IAClE4uM,EAAiBC,EAAmBC,IAAuB9uM,EAAAA,EAAAA,IAAQ,IACnE0xD,EAAOmuF,IAAYnuI,EAAAA,EAAAA,MACpB/R,GAAOD,EAAAA,EAAAA,KAEP88I,GAAWp8I,EAAAA,EAAAA,KAAQ,IAAOqzC,GAAO4mH,EAAAA,EAAAA,IAAgB5mH,QAAQpzC,GAAY,CAACozC,KAE5E1kB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IAGV,MAAM0oM,EAAct7J,GAAOkd,EAAAA,EAAAA,IAAuBld,GAAQ,IAEnD5rC,EAAOi4I,IAAYpuI,EAAAA,EAAAA,OACnB3N,EAAMirM,IAAWt9L,EAAAA,EAAAA,IAASq9L,GAAe,KACzC3vD,EAAKW,IAAUruI,EAAAA,EAAAA,IAASytI,GAAc,IAEvCF,EAAoBxrG,IAAQyrG,EAAAA,EAAAA,IAAkBzrG,GAC9CysG,GAAuBnyI,EAAAA,EAAAA,GAASkxI,GAAmB,EAAOjxI,EAAAA,GAAeC,UAE/EhO,EAAAA,EAAAA,KAAU,KACR0uM,IACAG,GAAqB,GACpB,CAACttK,KAEJvhC,EAAAA,EAAAA,KAAU,KACR+uM,EAAQD,GAAe,IACvBhvD,EAAOZ,GAAc,GAAG,GACvB,CAAC4vD,EAAa5vD,EAAY1rG,KAE7BxzC,EAAAA,EAAAA,KAAU,KACR6/I,OAASz/I,EAAU,GAClB,CAAC6/I,KAEJjgJ,EAAAA,EAAAA,KAAU,KACJsY,IAAa02L,EAAAA,GAAmBzuD,WAClCmuD,IACAG,IACAjvD,OAASx/I,GACX,GACC,CAACkY,IAEJ,MAAM22L,GAAmBp9L,EAAAA,EAAAA,IAAiBM,IACxC48L,EAAQ58L,EAAEC,OAAOH,OACjBw8L,IAEIh9I,IAAUy8I,IACZtuD,OAASx/I,EACX,IAGIsgJ,GAAkB7uI,EAAAA,EAAAA,IAAiBM,IACvC2tI,EAAO3tI,EAAEC,OAAOH,OAChBw8L,GAAkB,IAGdjuD,GAAoB3uI,EAAAA,EAAAA,IAAiB4uI,IACzCZ,EAASY,GACTmuD,GAAmB,IAGfjuD,GAAoB9uI,EAAAA,EAAAA,IAAgB,KACxC,MAAMq9L,EAAcprM,EAAKwnE,OACnBw1E,EAAa3B,EAAI7zE,OAElB4jI,EAAY5tM,QAKjB+sM,EAAW,IACLG,GAAkB,CACpBn9I,IAAK7d,EACL1vC,KAAMorM,EACNx9L,YAAaovI,KAIbl5I,GACFm0J,EAAmB,CACjB7Z,KAAMt6I,KACF+mM,GAAmB,CAAEt9I,IAAK7d,MAfhCosG,EAASsuD,GAiBX,IAGIiB,GAAwBt9L,EAAAA,EAAAA,IAAgB,KAC5C08L,EAA2B,CAAE7J,MAAQ,GAAEnoD,WAAmB,IAGtD6yD,GAA2Bv9L,EAAAA,EAAAA,IAAgB,KAC/C08L,EAA2B,CAAE7J,MAAQ,GAAEnoD,cAAsB,IAGzD8yD,GAAuBx9L,EAAAA,EAAAA,IAAgB,KAC3C08L,EAA2B,CAAE7J,MAAQ,GAAEnoD,KAAa,IAIhDlhF,GAAWvsD,EAAAA,EAAAA,IAAyB,MACpCwgM,GAAexgM,EAAAA,EAAAA,KAAO,GAEtBygM,GAAqB19L,EAAAA,EAAAA,IAAiBqwI,IAC1C0sD,IACAN,EAA0B,CAAE/sK,SAAQ2gH,OAAMstD,UAAWF,EAAargM,SAAU,IAG9E,IAAKukC,EACH,OAGF,MAAMpb,EAAY9f,IAAa02L,EAAAA,GAAmB7uD,WAElD,OACE5+I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACu/I,GAAAA,EAAc,CACbd,qBAAsBA,EACtBxtI,SAAU+tI,EACV75I,MAAOjH,EAAK,uBACZ0kB,SAAUgU,IAEZ72B,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACR1N,GAAG,YACHqN,MAAO5S,EAAK,uBACZ+S,SAAUw8L,EACVh9L,MAAOnO,EACP2tD,MAAOA,IAAUy8I,GAAqBz8I,OAAQrxD,EAC9CgsC,2BAAyB,IAE3B7qC,EAAAA,GAAAC,cAAC+7G,GAAAA,EAAQ,CACPtrG,MAAOktI,EACP1sI,SAAUiuI,EACVpuI,MAAO5S,EAAK,0BACZ0kB,SAAUgU,EACV+nD,UAAWy+D,EACXnhC,mBAAoBmhC,GAAgBA,EAAeO,EAAI79I,QAAQwmF,gBAAa1nF,KAGhFmB,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,sBAAsBid,QAAM,EAACpkB,QAAS4vM,GACnD5tM,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,kBAEd6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,cAAcid,QAAM,EAACpkB,QAAS6vM,GAC3C7tM,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,qBAEd6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,OAAOid,QAAM,EAACpkB,QAAS8vM,GACpC9tM,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,uBAEd6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mCACZqE,EAAAA,GAAAA,GAAW7D,EAAK,iBAAkB,CAAC,cAK5C6B,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAAS6kK,GAAkBG,EAC3BpvM,QAASohJ,EACTv8H,SAAUgU,EACV/gB,UAAW3X,EAAK,SAEf04B,EACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGfvC,EAAAA,GAAAC,cAACg7J,GAAAA,EAAY,CACX/pJ,SAAU88L,EACVl0I,SAAUA,IAER,KCrMJo0I,GAAsB,+BA2S5B,IAAe1wM,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,IAC1B,WAAEq8L,IAAet6L,EAAAA,EAAAA,KAAeJ,IAChC,SAAE6E,GAAa61L,GACf,QAAErnE,GAAYqnE,EAAWx1E,SAAS7mH,IAAW,CAAC,EAEpD,MAAO,CACLmC,OACAo7C,cAAcC,EAAAA,EAAAA,KAAmB77C,EAAQ3B,GACzCwG,WACAo3L,eAAetqF,EAAAA,EAAAA,IAAiBnxG,EAAM,cACtC07L,WAAWvqF,EAAAA,EAAAA,IAAiBnxG,EAAM,eAClC27L,gBAAiB9oE,EACjB3jF,mBAAoB1vC,EAAO2vC,UAAUD,mBACtC,IAEH,CAAC1vC,GAAU3B,YACFvB,SAAQmjC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,KAlBlB0B,EAxS6Bq8L,EAC/C/9L,SACAmC,OACAo7C,eACA/2C,WACAo3L,gBACAC,YACAC,kBACA3wM,WACAkkD,qBACAiqF,iBACAhnI,cAEA,MAAM,WACJ0pM,EAAU,gBACVC,EAAe,aACfC,EAAY,cACZC,EAAa,SACbniK,EAAQ,wBACRoiK,EAAuB,qBACvBC,IACE7+L,EAAAA,EAAAA,MAEE8+L,EAAen8L,GAAMtN,OAAS,GAC9B0pM,EAAehhJ,GAAcgoD,OAAS,GACtCuL,EAAgBryG,QAAQ8+C,GAAcwzD,eAErCytF,EAAoBC,EAAkBC,IAAqBzwM,EAAAA,EAAAA,MAC3D2/I,EAAwBC,IAA6BluI,EAAAA,EAAAA,KAAS,IAC9D9K,EAAOgkK,IAAYl5J,EAAAA,EAAAA,IAAS2+L,IAC5B/4F,EAAOuzD,IAAYn5J,EAAAA,EAAAA,IAAS4+L,IAC5BzoM,EAAOi4I,IAAYpuI,EAAAA,EAAAA,OACnBggD,EAAOmuF,IAAYnuI,EAAAA,EAAAA,MACpBkuC,EAAY1rC,IAAQgrI,EAAAA,EAAAA,IAAkBhrI,GACtCgsI,GAAuBnyI,EAAAA,EAAAA,GAAS6xC,GAAW,EAAO5xC,EAAAA,GAAeC,SACjEtO,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,KAGVpG,EAAAA,EAAAA,KAAU,KACH2vM,IACLO,EAAwB,CAAEp+L,WAC1Bo+L,EAAwB,CAAEp+L,SAAQ2+L,WAAW,IAC7CN,EAAqB,CAAEr+L,WAAS,GAC/B,CAACA,EAAQ69L,KAEZ3vM,EAAAA,EAAAA,KAAU,KACJsY,IAAa02L,EAAAA,GAAmBzuD,WAClCZ,GAA0B,GAC1BC,OAASx/I,GACX,GACC,CAACkY,IAEJ,MAAMo4L,GAAcvwM,EAAAA,EAAAA,KAAQ,IACnB4hD,OAAO2K,KAAK2C,GAAc6jC,kBAAoB,CAAC,GAAG5xF,QACxD,CAAC+tD,GAAc6jC,mBACZy9G,EAAoBthJ,GAAcuhJ,eAAetvM,QAAU,EAE3DuvM,GAAsB7rM,EAAAA,EAAAA,KAAY,KACtCooI,EAAe0jE,EAAAA,GAAkBC,gBAAgB,GAChD,CAAC3jE,IAEE4jE,GAAwBhsM,EAAAA,EAAAA,KAAY,KACxCooI,EAAe0jE,EAAAA,GAAkBG,WAAW,GAC3C,CAAC7jE,IAEE8jE,GAAuBlsM,EAAAA,EAAAA,KAAY,KACvCooI,EAAe0jE,EAAAA,GAAkBK,UAAU,GAC1C,CAAC/jE,IAEEgkE,GAA4BpsM,EAAAA,EAAAA,KAAY,KAC5CooI,EAAe0jE,EAAAA,GAAkBO,mBAAmB,GACnD,CAACjkE,IAEEkkE,GAAqBtsM,EAAAA,EAAAA,KAAY,KACrCooI,EAAe0jE,EAAAA,GAAkBS,QAAQ,GACxC,CAACnkE,IAEEokE,IAAsBxsM,EAAAA,EAAAA,KAAY,KACtCooI,EAAe0jE,EAAAA,GAAkBW,aAAa,GAC7C,CAACrkE,IAEEskE,IAAiB1sM,EAAAA,EAAAA,KAAak9I,IAClCrC,EAASqC,GACTvC,GAA0B,EAAK,GAC9B,IAEGurB,IAAoBlmK,EAAAA,EAAAA,KAAamN,IACrCw4J,EAASx4J,EAAEC,OAAOH,OAClB0tI,GAA0B,EAAK,GAC9B,IAEGgyD,IAAoB3sM,EAAAA,EAAAA,KAAamN,IACrCy4J,EAASz4J,EAAEC,OAAOH,OAClB0tI,GAA0B,EAAK,GAC9B,IAEGiyD,IAAsB5sM,EAAAA,EAAAA,KAAY,KACtC,MAAM6sM,EAAelrM,EAAM2kE,OACrBwmI,EAAez6F,EAAM/rC,OAEtBumI,EAAavwM,OAKlBwuM,EAAW,CACTh+L,SACAnL,MAAOkrM,EACPx6F,MAAOy6F,EACPlqM,UARAg4I,EAAS6vD,GAST,GACD,CAACp4F,EAAOvlG,EAAQlK,EAAOjB,EAAOmpM,IAE3BiC,IAAyB/sM,EAAAA,EAAAA,KAAY,KACzCooI,EAAe0jE,EAAAA,GAAkBkB,mBAAmB,GACnD,CAAC5kE,IAEE6kE,IAA0BjtM,EAAAA,EAAAA,KAAY,KAC1CooI,EAAe0jE,EAAAA,GAAkBoB,oBAAoB,GACpD,CAAC9kE,IAEE+kE,IAAsBntM,EAAAA,EAAAA,KAAY,KAClCiP,EAAKoxG,UACP4qF,EAAc,CAAEn+L,OAAQmC,EAAKhP,KAE7B+qM,EAAa,CAAEl+L,OAAQmC,EAAKhP,KAG9BurM,IACAT,IACAjiK,EAAS,CAAE7oC,QAAI7E,GAAY,GAC1B,CAAC6T,EAAKoxG,UAAWpxG,EAAKhP,GAAIurM,EAAmBT,EAAiBC,EAAcC,EAAeniK,IAExFskK,IAA2BjyM,EAAAA,EAAAA,KAAQ,KACvC,IAAKkvD,GAAc4yH,iBACjB,OAAOviL,EAAK,gBAGd,GAA2C,QAAvC2vD,EAAa4yH,iBAAiBh/K,KAChC,OAAOvD,EAAK,gBAGd,MAAM2yM,EAAgBhjJ,EAAa4yH,iBAAiBS,QAAQphL,OACtDgxM,EAAcnvJ,GAAoB9hB,QAAQmR,IAAcA,EAASu6D,aAAYzrG,QAAU,EAE7F,OAAOgxM,EAAe,GAAED,OAAmBC,IAAiB,GAAED,GAAe,GAC5E,CAAClvJ,EAAoBkM,GAAc4yH,iBAAkBviL,IAClD6yM,IAAkBpyM,EAAAA,EAAAA,KAAQ,KAAMiyF,EAAAA,EAAAA,IAAan+E,IAAO,CAACA,IAE3D,GAAIA,EAAKw9J,cAAgBx9J,EAAKuvK,YAC5B,OAGF,MAAMprJ,GAAY9f,IAAa02L,EAAAA,GAAmB7uD,WAElD,OACE5+I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACu/I,GAAAA,EAAc,CACbd,qBAAsBA,EACtBxtI,SAAUi/L,GACVttL,UAAWsrL,IAEbnuM,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACR1N,GAAG,gBACHqN,MAAO5S,EAAK,oBACZ+S,SAAUy4J,GACVj5J,MAAOtL,EACP8qD,MAAOA,IAAUg+I,GAAsBh+I,OAAQrxD,EAC/CgkB,UAAWsrL,IAEbnuM,EAAAA,GAAAC,cAAC+7G,GAAAA,EAAQ,CACPt4G,GAAG,gBACHqN,MAAO5S,EAAK,0BACZ+S,SAAUk/L,GACV1/L,MAAOolG,EACPl3B,UAxLkB,IAyLlBs9B,oBAzLkB,IAyL6BpG,EAAM/1G,QAAQwmF,WAC7D1jE,UAAWsrL,EACXhyF,mBAAiB,KAGpBzpG,EAAKoxG,WACJ9jH,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,OAAOK,WAAS,EAACxH,QAASsxM,GACvCtvM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,gBAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAA8BQ,EAAlB6yM,GAAuB,aAAqB,iBAG5EhxM,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,UACLK,WAAS,EACTxH,QAASyxM,EACT5sL,UAAWsrL,GAEXnuM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,eAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAA4BQ,EAAhBkjH,EAAqB,mBAA2B,SAE7E+sF,GACCpuM,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,OACLnH,QAAS+xM,EACTvqM,WAAS,EACTqd,UAAWwrL,GAEXruM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,0BAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YACb0wM,GAAkBntM,EAAAA,GAAAA,IAAcmtM,EAAgBtuM,QAAU5B,EAAK,aAIrE6Q,QAAQ0D,EAAKu+L,cAAclxM,SAC1BC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,kBACLnH,QAASiyM,GACTzqM,WAAS,GAETxF,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,sBAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,aACbuD,EAAAA,GAAAA,IAAcwR,EAAKu+L,aAAclxM,UAIxCC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,gBACLK,WAAS,EACTxH,QAAS2xM,EACT9sL,UAAWsrL,GAEXnuM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,cAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5ByvM,MAIP7wM,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,QACLK,WAAS,EACTxH,QAAS6xM,GAET7vM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,0BAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYwxM,IAE9BnvM,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,QACLK,WAAS,EACTxH,QAASwyM,IAETxwM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,QAAQyD,IAAI,QAAQjD,EAAK,uBACzC6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,SAAQF,EAAAA,GAAAA,IAAcwR,EAAKyxL,gBAE5DnkM,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,cACLK,WAAS,EACTxH,QAAS0yM,IAET1wM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,wBAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYyxM,KAGhCpvM,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,SAASid,QAAM,EAAC3L,aAAW,EAACzY,QAASgxM,GACjDt8L,EAAKoxG,UAAY3lH,EAAK,iBAAmBA,EAAK,mBAIrD6B,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAAS+1G,EACTngJ,QAASqyM,GACTxtL,SAAUgU,GACV/gB,UAAW3X,EAAK,SAEf04B,GACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGfvC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ0qM,EACRlqM,QAASoqM,EACTh3L,KAAMvF,EAAKoxG,UAAY3lH,EAAK,sBAAwBA,EAAK,qBACzDonC,aAAc7yB,EAAKoxG,UAAY3lH,EAAK,iBAAmBA,EAAK,gBAC5DqnC,eAAgBorK,GAChBnrK,sBAAoB,IAElB,KC/JV,IAAejoC,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAChC,MAAO,CACLmC,OACA6jB,cAAerkB,EAAOqkB,cACtBZ,UAAWjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,GACjCi/E,kBAAkB5jC,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAASohF,iBACvD,GARe1/E,EAtJwCi/L,EAC1DxzM,WACAgV,OACAijB,YACAY,gBACAo7D,mBACAk6C,iBACAslE,qBACAtsM,cAEA,MAAM,iBAAEusM,IAAqBrhM,EAAAA,EAAAA,MACvB5R,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IAGV,MAAMwsM,EAAuBriM,QAAQ0D,GAAM4+L,oBACrCC,EAAqBviM,QAAQ0D,GAAM8+L,kBAEnCC,EAAkBziM,QAAQ0D,GAAMoxG,WAAcpxG,IAAQmxG,EAAAA,EAAAA,IAAiBnxG,EAAM,cAC7Eg/L,EAAsB/7K,IAAakuF,EAAAA,EAAAA,IAAiBnxG,EAAO,gBAE3Di/L,GAAe/yM,EAAAA,EAAAA,KAAQ,KAC3B,IAAK+yF,EACH,MAAO,GAGT,MAAOn9D,EAAOo9K,IAAU7mE,EAAAA,GAAAA,IAAUvqF,OAAOuK,OAAO4mC,IAAoBi0B,GAAWA,EAAOisF,UAEtF,MAAO,IAAIr9K,KAAUo9K,EAAO,GAC3B,CAACjgH,IAEEmgH,GAAyBxhM,EAAAA,EAAAA,IAAiBs1G,IAC9CurF,EAAmBvrF,EAAO5lF,OAAQ4lF,EAAOmsF,mBAAqBx7K,GAC9Ds1G,EAAe0jE,EAAAA,GAAkByC,gBAAgB,IAG7CC,GAAyB3hM,EAAAA,EAAAA,IAAgB,KAC7C8gM,EAAiB,CACf7gM,OAAQmC,EAAMhP,GACd6tM,qBACAF,sBAAuBA,GACvB,IAGEa,GAAuB5hM,EAAAA,EAAAA,IAAgB,KAC3C8gM,EAAiB,CACf7gM,OAAQmC,EAAMhP,GACd6tM,oBAAqBA,EACrBF,wBACA,IAGEc,GAAsB7hM,EAAAA,EAAAA,IAAgB,KAC1Cu7H,EAAe0jE,EAAAA,GAAkB6C,eAAe,IAG5CC,GAAkB/hM,EAAAA,EAAAA,IAAiBs1G,IACvC,GAAIA,EAAOisF,QACT,OAAO1zM,EAAK,kBAId,MAAMkpC,GAAYuJ,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAC9B2pK,EAAiB1sF,EAAOmsF,iBAAmB1qK,EAAUu+E,EAAOmsF,uBAAoBlzM,EAEtF,OAAIyzM,EACKn0M,EAAK,uBAAuBmtC,EAAAA,EAAAA,IAAgBgnK,IAG9Cn0M,EAAK,eAAe,IAG7B,OACE6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,SACLK,WAAS,EACTqd,UAAQ,GAER7iB,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,aAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYQ,EAAKw3B,EAAY,4BAA8B,yBAI/E31B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UAAUyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACjDmB,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,eAAeyD,IAAI,QAC7BjD,EAAKw3B,EACF,sCACA,sCAGLg8K,EAAavxM,KAAKwlH,GACjB5lH,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK4kH,EAAO5lF,OACZriC,UAAU,sBAEVK,QAASA,IAAM8zM,EAAuBlsF,IAEtC5lH,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQ4lF,EAAO5lF,OACf8iB,OAAQuvJ,EAAgBzsF,GACxB7+E,eAAa,OAKnB/mC,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAASqpK,EACTzzM,QAASm0M,EACTr8L,UAAW3X,EAAK,oCAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,sBAIdmvM,GACC1xM,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPrpB,QAAS4mK,EACTtgM,MAAO5S,EAAK,uBACZ+S,SAAU+gM,KAGbZ,GACCrxM,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPrpB,QAAS8mK,EACTxgM,MAAO5S,EAAK,kCACZ+S,SAAUghM,KAGdlyM,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,kCACVQ,EAAK,+BAOd,KCuHV,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,IAC1B,oBAAEwrI,EAAmB,gBAAEC,EAAe,MAAE9rF,IAAUqiJ,EAAAA,EAAAA,IAAiBrgM,EAAQ3B,GAEjF,MAAO,CACLmC,OACAijB,WAAWC,EAAAA,EAAAA,IAAcljB,GACzBqE,UAAUzE,EAAAA,EAAAA,KAAeJ,GAAQ06L,WAAW71L,SAC5Cm5C,QACA6rF,sBACAC,kBACAjpI,YAAaL,GAAMK,YACnBy/L,gBAAgBpvE,EAAAA,GAAAA,GAAmBlxH,EAAQ,kBAC3CugM,mBAAmB1kJ,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAASmiM,WACxD,IAEH,CAACxgM,GAAU3B,YACFvB,SAAQmjC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,KAAWgiM,EAAAA,EAAAA,IAAiBrgM,EAAQ3B,KAlBtD0B,EAtPqC0gM,EACvDjgM,OACAhV,WACAi4B,YACA5e,WACAglI,sBACAC,kBACA9rF,QACAn9C,cACAy/L,iBACAC,oBACA5tM,cAEA,MAAM,iBACJ+tM,EAAgB,kBAChBC,EAAiB,kBACjBC,EAAiB,sBACjBrvE,EAAqB,qBACrBsvE,IACEhjM,EAAAA,EAAAA,MAEEiuI,GAAwBp/I,EAAAA,EAAAA,KAAQ,IAAM8T,EAAK2kC,WAAW32C,MAAK,EAAG46I,gBAAiBA,KAAa,CAAC5oI,EAAK2kC,YAClGwkG,EAAkBmC,GAAuBhD,UAAY,GACrDxqG,GAAW5xC,EAAAA,EAAAA,KAAQ,KAAMiyF,EAAAA,EAAAA,IAAan+E,IAAO,CAACA,KAE7CyrI,EAAwBC,IAA6BluI,EAAAA,EAAAA,KAAS,IAC9D8iM,EAAaC,IAAkB/iM,EAAAA,EAAAA,IAAsBsgC,EAAW,SAAW,YAC3EguG,EAAkBC,IAAuBvuI,EAAAA,EAAAA,OACzCgjM,EAA2BC,EAAyBC,IAA4B50M,EAAAA,EAAAA,MAChF60M,EAA0BC,EAAwBC,IAA2B/0M,EAAAA,EAAAA,KAE9E69I,GAA8B7jH,EAAAA,EAAAA,GAAsBujH,GAGpDpoI,EAAYwqI,GAA0BnvI,QACzB,WAAhBgkM,IACKx0D,GAAqB3C,GAAwC,KAArB2C,KAJXzC,GAAuBM,IAMtC,YAAhB22D,GAA6BxiK,IAGnCjjB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,KAGVpG,EAAAA,EAAAA,KAAU,KACR2/I,GAA0B,EAAM,GAC/B,CAACvC,KAEJp9I,EAAAA,EAAAA,KAAU,KACJu0M,IAAgBP,GAClBI,GACF,GACC,CAACG,EAAaP,EAAmBI,IAEpC,MAAM/1D,GAAuBr5I,EAAAA,EAAAA,KAAaiN,IACxC+tI,EAAoB/tI,GACpB0tI,GAA0B,GAEtBluF,GACF6iJ,EAAqB,CACnBxiM,OAAQmC,EAAKhP,IAEjB,GACC,CAACgP,EAAKhP,GAAIwsD,IAEPsjJ,GAAqB/vM,EAAAA,EAAAA,KAAY,CAACiN,EAAeE,KAIrD,GAHgB4vC,OAAOuK,QAAOna,EAAAA,EAAAA,MAAY8Z,MAAM/hB,MAC7C7I,QAAO,EAAGgkF,YAAWzsE,eAAgBysE,GAAazsE,GAAWg0D,MAAMooG,GAAMA,EAAE/1M,aAElEqC,QAAUyyM,GAA4B,WAAV9hM,EAAoB,CAC1D+yH,EAAsB,CAAEzxG,MAAO,mBAC/B,MAAM0hL,EAAa9iM,EAAEmW,cAAcqI,QAAQ,gBAK3C,OAFCskL,EAAWlrM,cAAc,kBAAuCiiC,SAAU,OAC1EipK,EAAWlrM,cAAc,mBAAwCiiC,SAAU,EAE9E,CACAwoK,EAAeviM,GACf0tI,GAA0B,EAAK,GAC9B,CAACo0D,EAAgB/uE,IAEdkwE,GAA+BlwM,EAAAA,EAAAA,KAAaiN,IAChDoiM,EAAkB,CAChBviM,OAAQmC,EAAKhP,GACbqP,YAAuB,cAAVrC,GACb,GACD,CAACgC,EAAKhP,GAAIovM,IAEP9tC,GAAavhK,EAAAA,EAAAA,KAAY,KACzB+sC,GAA4B,YAAhBwiK,EACdM,IAEAV,EAAiB,CAAE53D,SAA0B,WAAhBg4D,GAA4Bx0D,GAA0B,IACrF,GACC,CAAChuG,EAAU8iK,EAAwBN,EAAaJ,EAAkBp0D,IAE/Do1D,GAAkCnwM,EAAAA,EAAAA,KAAY,KAClDmvM,EAAiB,CAAE53D,SAAU,GAAI64D,wBAAwB,IACzDN,GAAyB,GACxB,CAACA,EAAyBX,IAEvBkB,GAA0BrwM,EAAAA,EAAAA,KAAY,KAC1C2vM,IACAP,GAAmB,GAClB,CAACO,EAA0BP,IAExB10M,GAAOD,EAAAA,EAAAA,KACP61M,EAAcp+K,EAAY,UAAY,OACtCq+K,EAAcr+K,EAAY,UAAY,QAEtC/3B,EAAU,CACd,CAAE8S,MAAO,UAAWK,MAAO5S,EAAM,GAAE41M,YAAuB5lH,SAAUhwF,EAAM,GAAE41M,iBAC5E,CAAErjM,MAAO,SAAUK,MAAO5S,EAAM,GAAE41M,WAAsB5lH,SAAUhwF,EAAM,GAAE41M,iBAGtEE,EAAoB,CAAC,CACzBvjM,MAAO,UACPK,MAAO5S,EAAK,yCACX,CACDuS,MAAO,YACPK,MAAO5S,EAAK,2CAGR04B,GAAY9f,IAAa02L,EAAAA,GAAmB7uD,WAC5CE,GAA8C,WAAhBk0D,GAA4BtgM,EAAK2kC,WAAa3kC,EAAK2kC,UAAUt3C,OAAS,EAiB1G,OACEC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UAAUyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACjDmB,EAAAA,GAAAC,cAAA,MAAItC,UAAU,mBAAmBQ,EAAM,GAAE61M,UACzCh0M,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACTE,SAAU6hM,EACVzwM,KAAK,eACL3E,QAASA,EACTsT,SAAUsiM,KAGG,YAAhBR,EACChzM,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UAAUyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAChD4zM,EACCzyM,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACwyG,GAAAA,EAAS,CAAC3mB,KAAM2mH,EAAmB90M,UAAU,gBAC9CqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,eAAeyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACnDV,EAAM,GAAE41M,qBAGX/zM,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,SAASid,QAAM,EAAC3L,aAAW,EAACzY,QAASm1M,GACjDh1M,EAAK,eAER6B,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ6uM,EACRruM,QAASuuM,EACTn7L,KAAM9Z,EAAK,eACXonC,aAAcpnC,EAAK,gBACnBqnC,eAAgBsuK,EAChBruK,sBAAoB,KAIxBzlC,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,OAIZ7sD,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAC27I,GAAa,CACZE,QAAM,EACND,gBAAiBA,EACjBhlH,UAAWA,GACXklH,oBAAqBA,EACrBC,gBAAiBA,EACjB9qI,SAAU4rI,KAGb5sF,IAAUuvF,EAAAA,KAhErB,WACE,MAAMC,EAAoB,GAAEr2E,EAAAA,MAAkBs2E,EAAAA,MAE9C,OACE3/I,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,eAAeyD,IAAI,QAC5BjD,EAAK,mCACJg6D,QAAQ,SAAU,mBAClBmjB,MAAM,KACNl7E,KAAKqnD,GACU,kBAANA,EAAwBznD,EAAAA,GAAAC,cAACs3G,GAAAA,EAAQ,CAACn9F,IAAKslI,EAAkBznI,KAAO,IAAG0nI,EAAAA,QAA0Bl4F,IAI/G,CAmDgDm4F,GACtC5/I,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,eAAeyD,IAAI,QAC7BjD,EAAM,GAAE61M,qCAIdl1D,IACC9+I,EAAAA,GAAAC,cAACs6I,GAAe,CACdhqI,OAAQmC,EAAKhP,GACb2zC,UAAW3kC,EAAK2kC,UAChBmjG,eAAgBsC,IAGpB98I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UAAUyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACjDmB,EAAAA,GAAAC,cAAA,MAAItC,UAAU,mBACXQ,EAAKw3B,EAAY,4CAA8C,4CAElE31B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACTE,SAAU4B,EAAc,YAAc,UACtCxQ,KAAK,kBACL3E,QAASq2M,EACT/iM,SAAUyiM,IAEZ3zM,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,kCAEPQ,EADHw3B,EACQ,2CACA,6CAIf31B,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAASz0B,EACTkP,SAAUgU,GACV/gB,UAAW3X,EAAK,QAChBH,QAASgnK,GAERnuI,GACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGfvC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQgvM,EACRxuM,QAAS0uM,EACTt7L,KAAM9Z,EAAK,gDAAiD09I,GAC5Dr2G,eAAgBouK,EAChBnuK,sBAAoB,IAElB,KChOV,IAAejoC,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAUQ,WACT,MAAM,cAAE6jB,GAAkBrkB,EAE1B,MAAO,CACLqkB,gBACA29K,aAAanmJ,EAAAA,EAAAA,KAAmB77C,EAAQQ,EAAKhP,KAAKguF,QACnD,GAPez/E,EA9CoCkiM,EACtDzhM,OACA6jB,gBACA29K,cACA7vM,SACAQ,cAEA,MAAM,gBACJuvM,EAAe,iBACf5vF,IACEz0G,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,MACNooD,EAAQqH,IAAaz9C,EAAAA,EAAAA,IAAS,IAE/BmkM,GAAUz1M,EAAAA,EAAAA,KAAQ,KACtB,MAAM01M,GAAsBJ,GAAe,IACxCn1M,QAAO,CAACisD,EAAe46D,KACjBA,EAAOK,SAAYL,EAAOisF,SAAWjsF,EAAO5lF,SAAWzJ,GAC1Dy0B,EAAItrD,KAAKkmH,EAAO5lF,QAEXgrB,IACN,IAEL,OAAO7kB,EAAAA,GAAAA,IAAmB,CAAEC,IAAKkuK,EAAoBjuK,MAAOigB,EAAQ5kD,KAAM,QAAS,GAClF,CAACwyM,EAAa39K,EAAe+vB,IAE1B6xG,GAAmB10J,EAAAA,EAAAA,KAAau8B,IACpCwkF,EAAiB,CAAEj0G,OAAQmC,EAAKhP,GAAIs8B,WACpCn7B,GAAS,GACR,CAAC6N,EAAKhP,GAAI8gH,EAAkB3/G,IAE/B,OACE7E,EAAAA,GAAAC,cAAC6oD,GAAgB,CACfzkD,OAAQA,EACR0kD,cAAesrJ,EACfrrJ,kBAAmB7qD,EAAK,oBACxBmoD,OAAQA,EACR4C,eAAgByE,EAChB1E,SAAUmrJ,EACVjrJ,mBAAoBgvG,EACpBtzJ,QAASA,GACT,KCwDN,IAAerH,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,IACxBo4B,KAAMtB,GAAcn1B,EAAOtR,MAGnC,MAAO,CACL8R,OACA20B,YACAktK,iBALuB7hM,KAASmxG,EAAAA,EAAAA,IAAiBnxG,EAAM,aAAeA,EAAKoxG,WAM3E0wF,gBAAgBzmJ,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAAS8+L,eAAiB7oK,GAAAA,EACrE7Q,UAAWjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,GAClC,GAZeT,EA3FsCwiM,EACxD/hM,OACA20B,YACAktK,mBACAC,iBACA7+K,YACA9wB,UACAnH,eAEA,MAAM,6BAAEinH,IAAiC50G,EAAAA,EAAAA,MAEnC5R,GAAOD,EAAAA,EAAAA,MACNw2M,EAAuBC,EAAqBC,IAAwBp2M,EAAAA,EAAAA,MAE3E+uB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IAGV,MAAMgwM,GAAepxM,EAAAA,EAAAA,KAAamiH,IAChC,IAAKA,EAAOkvF,eACV,OAGF,MAAMC,EAAe1tK,EAAUu+E,EAAOkvF,gBACtC,OAAKC,EAIE52M,EAAK,iBAAiBmtC,EAAAA,EAAAA,IAAgBypK,SAJ7C,CAI2D,GAC1D,CAAC52M,EAAMkpC,IAEJ2tK,GAAoBvxM,EAAAA,EAAAA,KAAamiH,IACrC,GAAKlzG,EAIL,MAAO,CAAC,CACNtN,MAAOjH,EAAK,WACZgH,KAAM,SACNsR,aAAa,EACbisC,QAASA,IAAMiiE,EAA6B,CAC1Cp0G,OAAQmC,EAAKhP,GACbs8B,OAAQ4lF,EAAO5lF,OACfynF,aAAc,CAAC,KAEjB,GACD,CAACtpH,EAAMuU,EAAMiyG,IAEhB,OACE3kH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UAAUyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACjDmB,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,gBAAgBQ,EAAKw3B,EAAY,oBAAsB,oBAEnE6+K,EAAep0M,KAAKwlH,GACnB5lH,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK4kH,EAAO5lF,OACZriC,UAAU,sBACVykB,QAAM,EACNigC,eAAgB2yJ,EAAkBpvF,IAElC5lH,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQ4lF,EAAO5lF,OACf8iB,OAAQ+xJ,EAAajvF,GACrB7+E,eAAa,OAIlBwtK,GACCv0M,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,SAAO,EACPpqC,QAAS22M,EACT7+L,UAAW3X,EAAK,0CAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,qBAGdmQ,GAAQ6hM,GACPv0M,EAAAA,GAAAC,cAACk0M,GAAoB,CACnBzhM,KAAMA,EACNrO,OAAQqwM,EACR7vM,QAAS+vM,MAKb,KCsKV,IAAep3M,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,IAC1B,aAAE+wG,IAAiBvzD,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAAW,CAAC,GAC1D,iBAAE0kM,EAAkBtsK,KAAMyvH,GAAelmJ,EAAOw4C,MAGtD,MAAO,CACLh4C,OACA0lJ,aACA68C,mBACAC,WANiB5zF,GAAenvE,EAAAA,EAAAA,KAAWjgC,EAAQovG,QAAgBziH,EAOnE82B,UAAWjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,GAClC,GAbeT,EArPgCkjM,EAClDziM,OACA7N,UACAnH,WACA6S,SACA6nJ,aACA88C,aACAD,mBACAt/K,YACAk2G,qBAEA,MAAM,wBACJupE,EAAuB,oBACvBC,EAAmB,sBACnBC,EAAqB,kBACrBC,EAAiB,iBACjBC,IACEzlM,EAAAA,EAAAA,OAEG0lM,EAAeC,IAAoBxlM,EAAAA,EAAAA,OACnCylM,EAAgCC,EAA8BC,IAAiCr3M,EAAAA,EAAAA,MAC/Fs3M,EAA8BC,EAA4BC,IAA+Bx3M,EAAAA,EAAAA,MACzFy3M,EAAcC,IAAmBhmM,EAAAA,EAAAA,IAASlB,QAAQkmM,GAAYe,gBAC9DE,EAAeC,IAAoBlmM,EAAAA,EAAAA,IAASlB,QAAQkmM,GAAYiB,gBACjEh4M,GAAOD,EAAAA,EAAAA,KACPojH,EAAe4zF,GAAYxxM,IAEjC6pB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,KAGVpG,EAAAA,EAAAA,KAAU,KACR22M,GAAyB,GACxB,CAACA,KAEJ32M,EAAAA,EAAAA,KAAU,KACJf,IACFw4M,EAAgBhB,GAAYe,eAAgB,GAC5CG,EAAiBlB,GAAYiB,gBAAiB,GAChD,GACC,CAACjB,EAAYx3M,IAEhB,MAAM24M,GAA4B5yM,EAAAA,EAAAA,KAAY,KAC5CoyM,IACAP,EAAsB,CAAE/hK,UAAW5d,EAAYplB,EAAS+wG,IACnD3rF,GACHk2G,EAAe0jE,EAAAA,GAAkB+G,QACnC,GACC,CAACT,EAA+BP,EAAuB3/K,EAAWplB,EAAQ+wG,EAAcuqB,IAErF0qE,GAA0B9yM,EAAAA,EAAAA,KAAY,KAC1CuyM,IACAX,EAAoB,CAAE9hK,UAAWhjC,EAAQA,OAAQklM,GAAiB,GACjE,CAACO,EAA6BX,EAAqB9kM,EAAQklM,IAExDe,GAAwB/yM,EAAAA,EAAAA,KAAagnC,IACzCyrK,EAAgBzrK,GAChB+qK,EAAiB,CAAEjlM,OAAQ+wG,EAAe9zC,UAAW/iC,IAChDA,GACH2rK,GAAiB,EACnB,GACC,CAAC90F,EAAck0F,IAEZiB,GAAyBhzM,EAAAA,EAAAA,KAAagnC,IAC1C2rK,EAAiB3rK,GACjB8qK,EAAkB,CAAEhlM,OAAQ+wG,EAAe9zC,UAAW/iC,GAAU,GAC/D,CAAC62E,EAAci0F,IAyIlB,OACEv1M,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQC,GAAAA,EAAe4yM,iBACvB/0M,KAAMg1M,EAAAA,IACNh5M,UAAU,iBAEXu3M,GAtFLl1M,EAAAA,GAAAC,cAAA,WACED,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,sBACV+mC,UAAQ,GAER1kC,EAAAA,GAAAC,cAAC4jD,GAAAA,EAAa,CAACtzC,OAAQ2kM,EAAYxxM,MAErC1D,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,SACLid,QAAM,EACN3L,aAAW,EACXzY,QAAS43M,GAERz3M,EAAKw3B,EAAY,wBAA0B,4BAE9C31B,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQsxM,EACR9wM,QAASgxM,EACTrxM,OArEJxE,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gBACbqC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt0B,KAAK,OACLu0B,KAAMg/K,IAERl1M,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACZQ,EAAKw3B,EAAY,wBAA0B,6BAgE5CtL,WAAWroB,EAAAA,GAAAA,GACT7D,EAAKw3B,EAAY,+BAAiC,6BAA8Bu/K,EAAY9vM,OAC5F,CAAC,KAAM,oBAETmgC,aAAcpnC,EAAKw3B,EAAY,wBAA0B,2BACzD6P,eAAgB6wK,EAChB5wK,sBAAoB,MA8DlByvK,GAtDNl1M,EAAAA,GAAAC,cAAA,WACED,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,eAAeyD,IAAI,QAAQjD,EAAK,0BAE7C6B,EAAAA,GAAAC,cAAA,OAAK4vK,eAAa,GAChB7vK,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAI,eACJmE,KAAK,QACLid,QAAM,EACNq7J,cAAe,EACf56J,UAAQ,GAEP1kB,EAAK,0BAEP82M,EACCA,EAAiB70M,KAAI,CAACsD,EAAIsjD,IACxBhnD,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK0C,EACL+5K,cAAez2H,EAAI,EACnBrpD,UAAU,kCAEVK,QAASA,KA9GrB03M,EA+GgChyM,GA9GhCqyM,GA8GmC,GAGvB/1M,EAAAA,GAAAC,cAAC4jD,GAAAA,EAAa,CAACtzC,OAAQ7M,OAI3B1D,EAAAA,GAAAC,cAAC83H,GAAAA,EAAY,CAAC/2H,IAAI,gBAAgBy8K,cAAe,EAAGxlK,KAAK,gCAG7DjY,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,yBAAyByD,IAAI,QAAQjD,EAAK,2BACvD6B,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQyxM,EACRjxM,QAASmxM,EACTxxM,OA3GR,WACE,IAAKixM,EAAe,OACpB,MAAMmB,EAAcx+C,EAAWq9C,GAC/B,OAAKmB,EAGH52M,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gBACbqC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLt0B,KAAK,OACLu0B,KAAM0gL,IAER52M,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACZQ,EAAK,4CATZ,CAaF,CA2FgB04M,GACRxsL,UA1FR,WACE,IAAKorL,EAAe,OACpB,MAAMmB,EAAcx+C,EAAWq9C,GAC/B,OAAKmB,EAEDA,EAAYE,gBACP90M,EAAAA,GAAAA,GACJ,yBAAwB40M,EAAYxxM,sCAAsCsN,EAAMtN,WACjF,CAAC,KAAM,qBAIJpD,EAAAA,GAAAA,GAEJ,yBAAwB40M,EAAYxxM,sCAAsCsN,EAAMtN,kFACjF,CAAC,KAAM,yBAZT,CAcF,CAyEmB2xM,GACXxxK,aAAcpnC,EAAK,uBACnBqnC,eAAgB+wK,MAkBjBrB,GACCl1M,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,mBAAmBQ,EAAK,6BACtC6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPrpB,QAASwrK,EACTliJ,QAASyiJ,EACTzlM,MAAO5S,EAAK,gCAGf83M,GACCj2M,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPrpB,QAAS0rK,EACTpiJ,QAAS0iJ,EACT1lM,MAAO5S,EAAK,iCAIlB6B,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,kCACKQ,EAAf83M,EAAoB,iCAAyC,oCAKlE,KC1NJe,GAAoB,6BAGpBC,GAAoD,CACxD,eACA,aACA,YACA,aACA,cACA,cACA,eACA,aACA,aACA,kBACA,aACA,aACA,YAIIC,GAA0BD,GAAgBl3M,OAAS,EAEnDsxJ,IAAexiI,EAAAA,GAAAA,KAAUuvC,GAAOA,KAAM,KAAK,GAqZjD,IAAe5gE,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAC1Bu9C,GAAeC,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAC1C,WAAEq8L,EAAU,kBAAEuK,IAAsB7kM,EAAAA,EAAAA,KAAeJ,IACnD,SAAE6E,GAAa61L,EACfwK,EAAmBpoM,QAAQ8+C,GAAcwzD,cACzC+1F,GAAenzF,EAAAA,EAAAA,IAAiBxxG,IAChC,QAAE6yH,GAAYqnE,EAAWx1E,SAAS7mH,IAAW,CAAC,EAC9C+mM,GAAgBF,KAAqBvzF,EAAAA,EAAAA,IAAiBnxG,EAAM,eAAiBA,EAAKoxG,WAKxF,MAAO,CACLpxG,OACAo7C,eACA/2C,WACAsgM,eACAD,mBACAjJ,cAVoBz7L,EAAKoxG,YAAaD,EAAAA,EAAAA,IAAiBnxG,EAAM,cAW7DkxG,YAVkBlxG,EAAKoxG,YAAaD,EAAAA,EAAAA,IAAiBnxG,EAAM,YAW3D07L,UAVgB17L,EAAKoxG,YAAaD,EAAAA,EAAAA,IAAiBnxG,EAAM,eAWzD27L,gBAAiB9oE,EACjBgyE,8BAA4D,aAA7BJ,GAAmBnlL,MAClD4vB,mBAAoB1vC,EAAO2vC,UAAUD,mBACrC01J,eACD,IAEH,CAACplM,GAAU3B,YACFvB,SAAQmjC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,KA9BlB0B,EAnZ2BulM,EAC7CjnM,SACAmC,OACAo7C,eACA/2C,WACAsgM,eACAD,mBACAjJ,gBACAvqF,cACAwqF,YACAkJ,eACA55M,WACA2wM,kBACAkJ,gCACA31J,qBACAiqF,iBACAhnI,cAEA,MAAM,uBACJ4yM,EAAsB,WACtBlJ,EAAU,WACVmJ,EAAU,aACVjJ,EAAY,cACZC,EAAa,gBACbF,EAAe,SACfjiK,EAAQ,wBACRoiK,EAAuB,qBACvBC,EAAoB,YACpB+I,IACE5nM,EAAAA,EAAAA,OAEGg/L,EAAoBC,EAAkBC,IAAqBzwM,EAAAA,EAAAA,KAC5DqwM,EAAen8L,EAAKtN,MACpB0pM,EAAehhJ,GAAcgoD,OAAS,IAErCqoC,EAAwBC,IAA6BluI,EAAAA,EAAAA,KAAS,IAC9D9K,EAAOgkK,IAAYl5J,EAAAA,EAAAA,IAAS2+L,IAC5B/4F,EAAOuzD,IAAYn5J,EAAAA,EAAAA,IAAS4+L,IAC5BzoM,EAAOi4I,IAAYpuI,EAAAA,EAAAA,OACnBggD,EAAOmuF,IAAYnuI,EAAAA,EAAAA,OACnB0nM,EAAgBC,IAAqB3nM,EAAAA,EAAAA,IAASwC,EAAK84C,SACpDpN,IAAYs/F,EAAAA,EAAAA,IAAkBhrI,GAC9BgsI,IAAuBnyI,EAAAA,EAAAA,GAAS6xC,IAAW,EAAO5xC,EAAAA,GAAeC,SACjEqrM,IAAgBl5M,EAAAA,EAAAA,KAAQ,KAAMiyF,EAAAA,EAAAA,IAAan+E,IAAO,CAACA,IACnDvU,IAAOD,EAAAA,EAAAA,KAEP65M,IAAgCxqM,EAAAA,EAAAA,IAAuB,OAE7DggB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,KAGVpG,EAAAA,EAAAA,KAAU,KACJ2vM,IACFO,EAAwB,CAAEp+L,WAC1Bo+L,EAAwB,CAAEp+L,SAAQ2+L,WAAW,IAC7CN,EAAqB,CAAEr+L,WACzB,GACC,CAACA,EAAQ69L,KAGZ3vM,EAAAA,EAAAA,KAAU,KACRo5M,EAAkB7oM,QAAQ0D,EAAK84C,SAAS,GACvC,CAAC94C,EAAK84C,WAET/sD,EAAAA,EAAAA,KAAU,KACJsY,IAAa02L,EAAAA,GAAmBzuD,WAClCZ,GAA0B,GAC1BC,OAASx/I,GACX,GACC,CAACkY,IAEJ,MAAMu4L,IAAsBh/L,EAAAA,EAAAA,IAAgB,KAC1Cu7H,EAAe0jE,EAAAA,GAAkBC,gBAAgB,IAG7CC,IAAwBn/L,EAAAA,EAAAA,IAAgB,KAC5Cu7H,EAAe0jE,EAAAA,GAAkBG,WAAW,IAGxCC,IAAuBr/L,EAAAA,EAAAA,IAAgB,KAC3Cu7H,EAAe0jE,EAAAA,GAAkBK,UAAU,IAGvCoI,IAAyB1nM,EAAAA,EAAAA,IAAgB,KAC7Cu7H,EAAe0jE,EAAAA,GAAkB0I,iBAAiB,IAG9CpI,IAA4Bv/L,EAAAA,EAAAA,IAAgB,KAChDu7H,EAAe0jE,EAAAA,GAAkBO,mBAAmB,IAGhDC,IAAqBz/L,EAAAA,EAAAA,IAAgB,KACzCu7H,EAAe0jE,EAAAA,GAAkBS,QAAQ,IAGrCC,IAAsB3/L,EAAAA,EAAAA,IAAgB,KAC1Cu7H,EAAe0jE,EAAAA,GAAkBW,aAAa,IAG1CC,IAAiB7/L,EAAAA,EAAAA,IAAiBqwI,IACtCrC,EAASqC,GACTvC,GAA0B,EAAK,IAG3BurB,IAAoBr5J,EAAAA,EAAAA,IAAiBM,IACzCw4J,EAASx4J,EAAEC,OAAOH,OAClB0tI,GAA0B,EAAK,IAG3BgyD,IAAoB9/L,EAAAA,EAAAA,IAAiBM,IACzCy4J,EAASz4J,EAAEC,OAAOH,OAClB0tI,GAA0B,EAAK,IAG3B85D,IAAoB5nM,EAAAA,EAAAA,IAAgB,KACxC,MAAMggM,EAAelrM,EAAM2kE,OACrBwmI,EAAez6F,EAAM/rC,OAEtBumI,EAAavwM,OAKlBwuM,EAAW,CACTh+L,SACAnL,MAAOkrM,EACPx6F,MAAOy6F,EACPlqM,UARAg4I,EAAS24D,GAST,IAGEmB,IAAqB7nM,EAAAA,EAAAA,IAAgB,KACzCu7H,EAAe0jE,EAAAA,GAAkB6I,aAAa,IAG1CC,IAAyB/nM,EAAAA,EAAAA,IAAgB,KAC7C,IAAKw9C,EACH,OAGF,MAAM,mBAAEwqJ,GAAuBxqJ,EAE/B2pJ,EAAuB,CAAElnM,OAAQmC,EAAKhP,GAAI8pE,WAAY8qI,GAAqB,IAGvEC,IAAoBjoM,EAAAA,EAAAA,IAAgB,KACxCunM,GAAmBnqM,IACjB,MAAM8qM,GAAqB9qM,EAM3B,OAJA2jJ,IAAa,KACXsmD,EAAY,CAAEpnM,SAAQi9D,UAAWgrI,GAAoB,IAGhDA,CAAiB,GACxB,KAGJ/5M,EAAAA,EAAAA,KAAU,KACR,IAAK84M,EACH,OAKF,MAAMkB,EAAWV,GAA8BrqM,SAASlF,cAAc,SACtEiwM,EAAShuK,SAAWqjB,GAAcwqJ,kBAAkB,GACnD,CAACf,EAA+BzpJ,GAAcwqJ,qBAEjD,MAAMzH,IAA2BjyM,EAAAA,EAAAA,KAAQ,KACvC,IAAKkvD,GAAc4yH,iBACjB,OAAOviL,GAAK,gBAGd,GAA2C,QAAvC2vD,EAAa4yH,iBAAiBh/K,KAChC,OAAOvD,GAAK,gBAGd,MAAM2yM,EAAgBhjJ,EAAa4yH,iBAAiBS,QAAQphL,OACtDgxM,EAAcnvJ,GAAoB9hB,QAAQmR,IAAcA,EAASu6D,aAAYzrG,QAAU,EAE7F,OAAOgxM,EACF,GAAED,OAAmBC,IACrB,GAAED,GAAe,GACrB,CAAClvJ,EAAoBkM,GAAc4yH,iBAAkBviL,KAElDu6M,IAA0B95M,EAAAA,EAAAA,KAAQ,KACtC,IAAK8T,EAAKmyG,oBACR,OAAO,EAGT,IAAIpL,EAAaw9F,GAAgBn3K,QAC9B9+B,KACa,iBAARA,IAA2B42M,GACvBllM,EAAKmyG,oBAAqB7jH,MAEpCjB,OAEF,MAAM,aAAE0iH,EAAY,SAAEhC,GAAa/tG,EAAKmyG,oBAOxC,OAJKpC,GAAiBhC,IACpBhH,GAAc,GAGTA,CAAU,GAChB,CAAC/mG,EAAKmyG,oBAAqB+yF,IAExBzI,IAAcvwM,EAAAA,EAAAA,KAAQ,IACnB4hD,OAAO2K,KAAK2C,GAAc6jC,kBAAoB,CAAC,GAAG5xF,QACxD,CAAC+tD,GAAc6jC,mBAEZgnH,IAAoBroM,EAAAA,EAAAA,IAAgB,KACpC+mM,EACFK,EAAW,CAAEnnM,OAAQmC,EAAKhP,KAChBgP,EAAKoxG,UAGf4qF,EAAc,CAAEn+L,OAAQmC,EAAKhP,KAF7B+qM,EAAa,CAAEl+L,OAAQmC,EAAKhP,KAI9BurM,IACAT,IACAjiK,EAAS,CAAE7oC,QAAI7E,GAAY,IAG7B,GAAI6T,EAAKw9J,cAAgBx9J,EAAKuvK,YAC5B,OAGF,MAAMprJ,GAAY9f,IAAa02L,EAAAA,GAAmB7uD,WAElD,OACE5+I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACu/I,GAAAA,EAAc,CACbo5D,WAAYhB,EACZl5D,qBAAsBA,GACtBxtI,SAAUi/L,GACVttL,UAAWsrL,IAEbnuM,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACR1N,GAAG,cACHqN,MAAO5S,GAAK,aACZ+S,SAAUy4J,GACVj5J,MAAOtL,EACP8qD,MAAOA,IAAU8mJ,GAAoB9mJ,OAAQrxD,EAC7CgkB,UAAWsrL,IAEbnuM,EAAAA,GAAAC,cAAC+7G,GAAAA,EAAQ,CACPt4G,GAAG,cACHqN,MAAO5S,GAAK,0BACZygF,UArRgB,IAsRhBs9B,oBAtRgB,IAsR6BpG,EAAM/1G,QAAQwmF,WAC3Dr1E,SAAUk/L,GACV1/L,MAAOolG,EACPjzF,UAAWsrL,EACXhyF,mBAAiB,KAGpBzpG,EAAKoxG,WACJ9jH,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,OAAOK,WAAS,EAACxH,QAASsxM,IACvCtvM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,GAAK,cAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAA4BQ,GAAhB25M,GAAqB,aAAqB,iBAGzEV,GACCp3M,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,UACLK,WAAS,EACTxH,QAASyxM,IAETzvM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,GAAK,kBAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYQ,GAAK,sBAGrC6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,cACLK,WAAS,EACTxH,QAASg6M,GACTn1L,UAAW+gG,GAEX5jH,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,GAAK,uBAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5Bs3M,GAAwB,IAAExB,IAA2BU,EAAiB,EAAI,KAG/E53M,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,gBACLK,WAAS,EACTxH,QAAS2xM,GACT9sL,UAAWsrL,GAEXnuM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,GAAK,cAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5ByvM,KAGL7wM,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,QACLK,WAAS,EACTxH,QAAS6xM,IAET7vM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,GAAK,0BAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,aAAYuD,EAAAA,GAAAA,IAAciuM,MAE3Cf,GACCpuM,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,OACLnH,QAAS+xM,GACTvqM,WAAS,EACTqd,UAAWwrL,GAEXruM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,GAAK,0BAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YACb0wM,GAAkBntM,EAAAA,GAAAA,IAAcmtM,EAAgBtuM,QAAU5B,GAAK,aAIrE6Q,QAAQ0D,EAAKu+L,cAAclxM,SAC1BC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,kBACLnH,QAASiyM,GACTzqM,WAAS,GAETxF,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,GAAK,mBAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,aACbuD,EAAAA,GAAAA,IAAcwR,EAAKu+L,aAAclxM,UAIvCu3M,GACCt3M,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,SAASid,QAAM,EAACpkB,QAASu6M,IACtCv4M,EAAAA,GAAAC,cAAA,YAAO9B,GAAK,kBACZ6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACP7nC,GAAG,sBACHqN,MAAO5S,GAAK,iBACZssC,QAASmtK,EACTlzK,UAAQ,KAGZ1kC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kCAAkCQ,GAAK,6BAI5D6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,QAAQK,WAAS,EAACxH,QAASm6M,IACxCn4M,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,GAAK,iBAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,aAAYuD,EAAAA,GAAAA,IAAcwR,EAAKyxL,cAAgB,MAG/D2T,KAAkBV,GAAoBpoM,QAAQ8+C,IAC9C9tD,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBAAkByZ,IAAK2gM,IACpC/3M,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPrpB,SAAUqjB,EAAawqJ,mBACvBvnM,MAAO5S,GAAK,eACZ+S,SAAUmnM,GACVlqH,SACErgC,EAAawqJ,mBAAqBn6M,GAAK,0BAA4BA,GAAK,0BAE1E0kB,UAAW+gG,MAKnB5jH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,SAASid,QAAM,EAAC3L,aAAW,EAACzY,QAASgxM,GACjD7wM,GAAK,iBAIZ6B,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAAS+1G,EACTngJ,QAASk6M,GACTr1L,SAAUgU,GACV/gB,UAAW3X,GAAK,SAEf04B,GACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGfvC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ0qM,EACRlqM,QAASoqM,EACT5kL,WAAWroB,EAAAA,GAAAA,GACTq1M,IAAiB3kM,EAAKoxG,UAClB3lH,GAAK,2BACLA,GAAK,oCAAqCuU,EAAKtN,OACnD,CAAC,KAAM,oBAETmgC,aAAc8xK,IAAiB3kM,EAAKoxG,UAAY3lH,GAAK,cAAgBA,GAAK,qBAC1EqnC,eAAgBmzK,GAChBlzK,sBAAoB,IAElB,KChEV,IAAejoC,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,SAAQsoM,8BACjB,MAAMnmM,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAC1B6wG,GAAWrzD,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IACpCo4B,KAAMtB,GAAcn1B,EAAOtR,OAC7B,cAAE21B,GAAkBrkB,EACpByjB,GAAYC,EAAAA,EAAAA,IAAcljB,GAC1BomM,IAAwBpmM,EAAKoxG,WAAa+0F,GAGhD,MAAO,CACLnmM,OACA20B,YACA9Q,gBACAZ,YACA61B,QAPc94C,EAAK84C,QAQnBstJ,sBACAC,cAAermM,EAAKsmM,YACpBC,YAAajqM,QAAQoyG,GACrBzvB,iBAAkByvB,GAAUzvB,iBAC7B,IAEH,CAACz/E,GAAU3B,YACFvB,SAAQmjC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,KAvBlB0B,EArXsCinM,EACxDx7M,WACAy7M,aACAC,iBACAL,gBACArmM,OACA20B,YACA9Q,gBACAo7D,mBACAsnH,cACAtjL,YACA61B,UACAstJ,sBACAj0M,UACAgnI,qBAEA,MAAM,gBAAEwtE,IAAoBtpM,EAAAA,EAAAA,OAErBgwG,EAAaC,IAAkB9vG,EAAAA,EAAAA,IAA6B,CAAC,IAC7D+zH,EAAWC,IAAgBh0H,EAAAA,EAAAA,IAASlB,QAAQmqM,KAC5CtiL,EAAWspF,IAAgBjwG,EAAAA,EAAAA,KAAS,IACpCopM,EAAiCC,EAA+BC,IAAkCh7M,EAAAA,EAAAA,MAClGi7M,EAAaC,IAAkBxpM,EAAAA,EAAAA,IAAS,IACzC/R,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IAGV,MAAM80M,GAAqB/6M,EAAAA,EAAAA,KAAQ,KACjC,MAAMg7M,EAAsBR,EAAiBznH,IAAmBynH,QAAkBv6M,EAIlF,IAAIs6M,IAAeS,GAAwBR,EAA3C,CAIA,GAAID,EAAY,CACd,MAAMlnK,GAAOrB,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAAKywK,GAEpC,OAAOnnK,EAAO,CACZjS,OAAQiS,EAAKvuC,GACbs1M,YAAaD,EACbU,YAAat7M,EAAK,gBAClB0zM,SAAS,EACTE,sBAAkBlzM,QAChBA,CACN,CAEA,OAAO+6M,CAdP,CAc0B,GACzB,CAACjoH,EAAkBonH,EAAeI,EAAYh7M,EAAMi7M,KAEvD36M,EAAAA,EAAAA,KAAU,KACJw6M,GAAeG,IAAmBO,GACpC9tE,EAAe0jE,EAAAA,GAAkBO,mBACnC,GACC,CAACp9L,EAAMumM,EAAaptE,EAAgB8tE,EAAoBP,KAE3D36M,EAAAA,EAAAA,KAAU,KACRuhH,EAAe25F,GAAoBX,aAAe,CAAC,GACnDU,GAAgBC,GAAoBF,aAAe,IAAI5qD,OAAO,EAhElC,KAiE5B3qB,EAAal1H,QAAQmqM,IACrBh5F,GAAa,EAAM,GAClB,CAAC44F,EAAeI,EAAYQ,IAE/B,MAAMv5F,GAAyB38G,EAAAA,EAAAA,KAAamN,IAC1C,MAAM,KAAErO,GAASqO,EAAEC,OAMnBmvG,GAAgB+gF,IAAC,UACZA,EACH,CAACx+L,IANgCmO,EAMCqwL,EAAEx+L,IAL7BmO,QAAQ7R,IADjB,IAAmC6R,CAOjC,IACFwzH,GAAa,EAAK,GACjB,IAEG21E,GAAwBp2M,EAAAA,EAAAA,KAAY,KACnC21M,IAILj5F,GAAa,GACbk5F,EAAgB,CACd9oM,OAAQmC,EAAKhP,GACbs8B,OAAQo5K,EACRJ,YAAaj5F,EACb05F,gBACA,GACD,CAACL,EAAgBC,EAAiB3mM,EAAKhP,GAAIq8G,EAAa05F,IAErDK,GAAqBr2M,EAAAA,EAAAA,KAAY,KAChC21M,IAILC,EAAgB,CACd9oM,OAAQmC,EAAKhP,GACbs8B,OAAQo5K,EACRJ,YAAa,CAAC,IAEhBQ,IAAgC,GAC/B,CAAC9mM,EAAKhP,GAAI81M,EAAgCJ,EAAgBC,IAEvDx3F,GAAuBp+G,EAAAA,EAAAA,KAAazC,MACpCkjH,EAAAA,EAAAA,IAAiBxxG,KAIjBomM,GAAwBpmM,EAAKsmM,cAI7BtmM,EAAKoxG,WAIDpxG,EAAKsmM,YAAah4M,MACzB,CAAC0R,EAAMomM,IAEJiB,GAAen7M,EAAAA,EAAAA,KAAQ,KAC3B,GAAIu6M,IAAeQ,EACjB,OAGF,GAAIA,EAAmB9H,QACrB,OAAO1zM,EAAK,kBAGd,MAAMm0M,EAAiBqH,EAAmB5H,iBACtC1qK,EAAUsyK,EAAmB5H,uBAC7BlzM,EAEJ,OAAIyzM,EACKn0M,EAAK,uBAAuBmtC,EAAAA,EAAAA,IAAgBgnK,IAG9Cn0M,EAAK,eAAe,GAC1B,CAACg7M,EAAYQ,EAAoBtyK,EAAWlpC,IAEzC67M,GAA0Bv2M,EAAAA,EAAAA,KAAamN,IAC3C,MAAM,MAAEF,GAAUE,EAAEC,OACpB6oM,EAAehpM,GACfwzH,GAAa,EAAK,GACjB,IAEH,GAAKy1E,EAIL,OACE35M,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACo/B,UAAQ,EAAC/mC,UAAU,uBAC3BqC,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQ25K,EAAmB35K,OAC3B8iB,OAAQi3J,EACRhzK,eAAa,KAIjB/mC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAI,QAAQjD,EAAK,uBAEtD6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,aACLkoC,QAASz7B,QAAQ+wG,EAAYkD,YAC7BlyG,MAAO5S,EAAKw3B,EAAY,6BAA+B,4BACvDwsF,UAAQ,EACRt/F,SAAUg/F,EAAqB,cAC/B3wG,SAAUkvG,KAGbzqF,GACC31B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,eACLkoC,QAASz7B,QAAQ+wG,EAAYk6F,cAC7BlpM,MAAO5S,EAAK,yBACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,gBAC/B3wG,SAAUkvG,KAIfzqF,GACC31B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,eACLkoC,QAASz7B,QAAQ+wG,EAAYm6F,cAC7BnpM,MAAO5S,EAAK,yBACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,gBAC/B3wG,SAAUkvG,KAIhBpgH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,iBACLkoC,QAASz7B,QAAQ+wG,EAAYuE,gBAC7BvzG,MAAO5S,EAAKw3B,EAAY,0BAA4B,gCACpDwsF,UAAQ,EACRt/F,SAAUg/F,EAAqB,kBAC/B3wG,SAAUkvG,KAGdpgH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,cACLkoC,QAASz7B,QAAQ+wG,EAAYo6F,aAC7BppM,MAAO5S,EAAK,wBACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,eAC/B3wG,SAAUkvG,KAGdpgH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,cACLkoC,QAASz7B,QAAQ+wG,EAAYq6F,aAC7BrpM,MAAO5S,EAAK,wBACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,eAC/B3wG,SAAUkvG,KAGdpgH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,gBACLkoC,QAASz7B,QAAQ+wG,EAAYs6F,eAC7BtpM,MAAO5S,EAAK,0BACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,iBAC/B3wG,SAAUkvG,MAGZzqF,GACA31B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,WACLkoC,QAASz7B,QAAQ+wG,EAAYu6F,UAC7BvpM,MAAO5S,EAAK,qBACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,YAC/B3wG,SAAUkvG,KAIhBpgH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,cACLkoC,QAASz7B,QAAQ+wG,EAAYgD,aAC7BhyG,MAAO5S,EAAK,qBACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,eAC/B3wG,SAAUkvG,MAGZzqF,GACA31B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,cACLkoC,QAASz7B,QAAQ+wG,EAAYiD,aAC7BjyG,MAAO5S,EAAK,wBACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,eAC/B3wG,SAAUkvG,KAIhBpgH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,YACLkoC,QAASz7B,QAAQ+wG,EAAYw6F,WAC7BxpM,MAAO5S,EAAK,sBACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,aAC/B3wG,SAAUkvG,KAGdpgH,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,aACLkoC,QAASz7B,QAAQ+wG,EAAYy6F,YAC7BzpM,MAAO5S,EAAK,2BACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,cAC/B3wG,SAAUkvG,KAGb50D,GACCxrD,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,eACLkoC,QAASz7B,QAAQ+wG,EAAYmD,cAC7BnyG,MAAO5S,EAAK,0BACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,gBAC/B3wG,SAAUkvG,MAIdzqF,GACA31B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAK,YACLkoC,QAASz7B,QAAQ+wG,EAAY06F,WAC7B1pM,MAAO5S,EAAK,4BACZgkH,UAAQ,EACRt/F,SAAUg/F,EAAqB,aAC/B3wG,SAAUkvG,KAKf04F,GACC94M,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,oBAAoByD,IAAI,QAClCjD,EAAK,kCAIRw3B,GACA31B,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACR1N,GAAG,cACHqN,MAAO5S,EAAK,iBACZ+S,SAAU8oM,EACVtpM,MAAO+oM,EACP52L,SAAUi2L,EACVl6H,UAhVkB,KAoVrBroD,IAAkB6iL,IAAmBN,IAAwBK,GAC5Dn5M,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,SAASid,QAAM,EAAC3L,aAAW,EAACzY,QAASu7M,GACjDp7M,EAAK,2BAMd6B,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAAS67F,EACTjmI,QAAS67M,EACT/jM,UAAW3X,EAAK,QAChB0kB,SAAUgU,GAETA,EACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,YAIb42M,GACAn5M,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQi1M,EACRz0M,QAAS20M,EACTvhM,KAAK,+CACLstB,aAAcpnC,EAAK,yBACnBqnC,eAAgBs0K,EAChBr0K,sBAAoB,IAGpB,K,0BCtWV,MAsNA,IAAejoC,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,IACxBuhF,aAAco2E,GAAqBh2J,EAAOtR,OAC5C,QAAE8wF,EAAO,iBAAEC,EAAgB,sBAAE+oH,IAA0B3sJ,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAAW,CAAC,EAC9FolB,EAAYjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,IAChCu1B,QAASsvH,GAAoBrlJ,EAAOw2B,aAAe,CAAC,EACtDiyK,EAAwBzoM,EAAO8/B,WAAW2oK,sBAE1CpG,EAAmB7hM,IAASA,EAAKoxG,YAAaD,EAAAA,EAAAA,IAAiBnxG,EAAM,aAErEkoM,EAAsBrG,KAAqBrwF,EAAAA,EAAAA,IAAiBxxG,SAA+B7T,IAAtB6T,EAAKyxL,mBACnDtlM,IAA1B87M,GAAuCjoM,EAAKyxL,cAAgBwW,EAEzDE,EAAgBnoM,KAAUmxG,EAAAA,EAAAA,IAAiBnxG,EAAM,iBAC9CijB,KAAci7I,EAAAA,EAAAA,IAAkBl+J,EAAM,gBAC1CA,EAAKoxG,YAIRz9E,MAAOP,EAAW,eAClBy4B,EAAc,cACdu8I,EAAa,aACbrjD,IACEnlJ,EAAAA,EAAAA,KAAeJ,GAAQslJ,WAE3B,MAAO,CACLkjD,sBAAuB1rM,QAAQ0D,GAAQgoM,GACvChpH,UACAmpH,gBACAlpH,mBACAu2E,mBACAvyI,YACA4hI,kBACAzxH,cACAuiI,YAAa9pG,EACbu8I,gBACArjD,eACA88C,mBACAh+K,cAAerkB,EAAOqkB,cACtBqkL,sBACD,GAzCe3oM,EAtNkC8oM,EACpDxqM,SACAyqM,WACAtpH,UACAmpH,gBACAlpH,mBACAu2E,mBACAvyI,YACAj4B,WACAo9M,gBACAvjD,kBACAE,eACA4Q,cACAviI,cACAvP,gBACAg+K,mBACAmG,wBACAE,sBACA/1M,UACAgnI,iBACAslE,yBAEA,MAAM,SACJ5kK,EAAQ,mBAAEorH,EAAkB,gBAAE62C,EAAe,yBAC7CyM,EAAwB,6BAAEC,EAA4B,iBAAE7mC,IACtDtkK,EAAAA,EAAAA,MACE5R,GAAOD,EAAAA,EAAAA,KAEP47D,GAAWvsD,EAAAA,EAAAA,IAAyB,MAEpCqe,GAAere,EAAAA,EAAAA,IAAuB,OAErC4tM,EAAgBC,IAAqBlrM,EAAAA,EAAAA,MAEtCmrM,GAAWz8M,EAAAA,EAAAA,KAAQ,IAChBo8M,GAAYrpH,EAAmBnxC,OAAO2K,KAAKwmC,GAAoB,IACrE,CAACA,EAAkBqpH,IAEhBnpH,GAAYjzF,EAAAA,EAAAA,KAAQ,KAExB,MAAMyoC,GAAYuJ,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KACpC,IAAK+oD,IAAYrqD,EACf,MAAO,GAGT,MAAMY,GAAU+pD,EAAAA,EAAAA,IACdN,EAAQtxF,KAAI,EAAG4/B,YAAaA,IAC5BqH,EACA6gI,GAGF,OAAO8yC,EAAW/yK,EAAQnI,QAAQE,IAAYq7K,EAASlpL,SAAS6N,KAAWiI,CAAO,GACjF,CAACypD,EAASw2E,EAAkB8yC,EAAUK,KAEzCC,EAAAA,GAAAA,GAAsBzpH,GAEtB,MAAM7rD,GAAepnC,EAAAA,EAAAA,KAAQ,KAE3B,MAAMyoC,GAAYuJ,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAC9B4yK,EAAyBvsM,QAAQ82B,GACjC01K,EAAaD,EAEdhkD,GAAkBpxH,EAAAA,GAAAA,IAAmB,CAAEC,IAAKmxH,EAAiBlxH,MAAOP,EAAapkC,KAAM,SAAY,GADpGmwF,EAGJ,OAAO5jC,EAAAA,GAAAA,IACL/nB,EAAAA,GAAAA,IAAO,IACFs1K,KACCD,GAAyB9jD,GAAqB,MAC9C8jD,GAAyBT,GAAsB,KAClDh7K,QAAQg4H,IACT,MAAM7lH,EAAO5K,EAAUywH,GACvB,OAAK7lH,IAIGtc,GAAasc,EAAK02H,uBAAwBx2E,EAAAA,EAAAA,IAAUlgD,OACrD+oK,IAAaK,EAASlpL,SAAS2lI,GAAW,KAEnD,EACD,GACA,CAACjmE,EAAW0lE,EAAiBzxH,EAAa2xH,EAAcqjD,EAAenlL,EAAWqlL,EAAUK,KAExF5xJ,EAAaC,IAAWC,EAAAA,GAAAA,QAAkB9qD,EAAWmnC,EAAch3B,QAAQ82B,IAE5E+kK,GAAoBv6L,EAAAA,EAAAA,IAAiB5M,IACrCs3M,GACF7J,EAAoBztM,GAAI,GACxBmoI,EAAgB0jE,EAAAA,GAAkBkM,sBAElCjN,IACAjiK,EAAS,CAAE7oC,OACb,IAGIsqF,GAAqB19E,EAAAA,EAAAA,IAAiBM,IAC1C+mJ,EAAmB,CAAEtxH,MAAOz1B,EAAEC,OAAOH,OAAQ,IAGzCmX,GAAgB0jC,EAAAA,GAAAA,GAA0B3/B,EAAcluB,GAAW8B,IACnEiqD,GAAeA,EAAY1pD,OAAS,GACtC8qM,EAAkBphJ,GAAuB,IAAXjqD,EAAe,EAAIA,GACnD,GACC,oBAAoB,GAEjBk8M,GAAgCprM,EAAAA,EAAAA,IAAgB,KACpD8qM,OAAkBv8M,EAAU,IAGxB88M,GAAiCrrM,EAAAA,EAAAA,IAAgB,KACrD2qM,EAAyB,CAAE1qM,SAAQi9D,WAAYktI,GAAwB,IAGnEkB,GAA4BtrM,EAAAA,EAAAA,IAAgB,KAChD+jK,IACA6mC,EAA6B,CAAEW,uBAAwBC,EAAAA,GAAuBl9D,YAAa,IA+B7F,OA5BArxH,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IA2BR7E,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACZq9M,GAbDh7M,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,qBAAqByD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAC5DmB,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRgG,IAAK0iD,EACLppD,MAAOo1B,EACP50B,SAAU88E,EACVthC,YAAavuD,EAAK,aAStB6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACZi9M,IAAwBjlL,GACvB31B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,QAAQid,QAAM,EAACpkB,QAAS29M,GACrC37M,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,uBACZ6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CAACx6B,MAAO5S,EAAK,sBAAuBssC,QAASiwK,KAExD16M,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,gBACVQ,EAAKu8M,EAAwB,+BAAiC,mCAIrE16M,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACZ8rD,GAAa1pD,OACZC,EAAAA,GAAAC,cAACymD,GAAAA,EAAc,CACb/oD,UAAU,4BACVgpD,MAAO3gB,EACP4gB,WAAY8C,EACZ4iC,gBAAiBt9E,QAAQ82B,GACzB1uB,IAAKwU,EACL6gC,UAAW5kC,GAEV4hC,EAAYrpD,KAAKsD,IAChB1D,SAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK0C,EACL/F,UAAU,kCAEVK,QAASA,IAAM6sM,EAAkBnnM,GACjC2+C,gBAtDgB05J,EAsDuBr4M,EArD9Cq4M,IAAaxlL,GAAkBg+K,EAA+B,CAAC,CACpEnvM,MAAOjH,EAAK,iCACZgH,KAAM,OACNu9C,QAASA,KACP04J,EAAkBW,EAAS,SAJ0Bl9M,GAsD3C0kD,mBAAiB,GAEjBvjD,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CAAC1jB,OAAQt8B,EAAIqjC,eAAa,EAACgW,WAAS,KAzDpE,IAAgCg/J,CA2DnB,KAEA1zC,IAAe5+G,GAAgBA,EAAY1pD,OAO9CC,EAAAA,GAAAC,cAAC4sD,GAAAA,EAAO,MANR7sD,EAAAA,GAAAC,cAAC83H,GAAAA,EAAY,CACX0lD,cAAe,EACfz8K,IAAI,gBACJiX,KAAM0d,EAAY,uBAAyB,uBAOlDklL,GACC76M,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,SAAO,EACPpqC,QAAS49M,EACT9lM,UAAW3X,EAAK,0BAEhB6B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,qBAGdgyM,GACCv0M,EAAAA,GAAAC,cAAC+7M,GAAAA,EAAiB,CAChB33M,OAAQ2K,QAAQmsM,GAChBn7K,OAAQm7K,EACRt2M,QAAS62M,IAGT,KCiFV,IAAel+M,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAC1B6wG,GAAWrzD,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IACtC,SAAEwG,IAAazE,EAAAA,EAAAA,KAAeJ,GAAQ06L,WAEtCh5J,EAAoBlhC,GAAMkhC,kBAC1Bo9F,EAA2C9+H,EAAO8/B,WAAWi/F,mCAEnE,MAAO,CACLv+H,OACAqE,WACAwf,cAAerkB,EAAOqkB,cACtB64K,kBAAmBhuF,GAAUiuF,eAAetvM,QAAU,EACtD2xF,QAAS0vB,GAAU1vB,QACnBuqH,yBAA0BjtM,QAAQoyG,GAAU66F,0BAA4BjrE,GACxEsB,qBAAsBtjI,QAAQ4kC,GAAqBo9F,GACnDkrE,oBAAqBtoK,GAAqBw+F,EAAAA,IAC3C,GAlBengI,EA/PsCkqM,EACxDtwE,iBACAslE,qBACAz+L,OACAqE,WACAwf,gBACA64K,oBACA19G,UACA7sF,UACAnH,WACAu+M,2BACA3pE,uBACA4pE,0BAEA,MAAM,8BAAEE,EAA6B,wBAAEC,IAA4BtsM,EAAAA,EAAAA,OAE7D,YACJgwG,EAAW,sBAAEE,EAAqB,UAAEppF,EAAS,uBAAEupF,EAAsB,aAAED,GACrEN,GAAqBntG,GAAMmyG,qBACzB5mH,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MAEbmvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IAGV,MAAM6rM,GAA0BjtM,EAAAA,EAAAA,KAAY,KAC1CooI,EAAe0jE,EAAAA,GAAkB+M,kBAAkB,GAClD,CAACzwE,IAEE0wE,GAA0B94M,EAAAA,EAAAA,KAAY,KAC1CooI,EAAe0jE,EAAAA,GAAkBiN,2BAA2B,GAC3D,CAAC3wE,IAEE4wE,GAA6Bh5M,EAAAA,EAAAA,KAAamiH,IAC9CurF,EAAmBvrF,EAAO5lF,OAAQ4lF,EAAOmsF,mBAAqBx7K,GAC9Ds1G,EAAe0jE,EAAAA,GAAkBmN,qBAAqB,GACrD,CAACnmL,EAAe46K,EAAoBtlE,KAEhCrqB,EAAqBC,IAA0BvxG,EAAAA,EAAAA,KAAS,IAExDysM,EAA2BC,EAA6BC,IAAiCr+M,EAAAA,EAAAA,MACzFs+M,EAAwBC,IAA6B7sM,EAAAA,EAAAA,IAASoiI,IAC9DjB,EAAmBoB,IAAwBviI,EAAAA,EAAAA,IAAiBgsM,IAEnEz9M,EAAAA,EAAAA,KAAU,KACJsY,IAAa02L,EAAAA,GAAmBzuD,UAClC69D,GACF,GACC,CAAC9lM,IAEJ,MAAM8iM,GAAwBvpM,EAAAA,EAAAA,IAAgB,KACvCoC,IAILytG,GAAa,GACbi8F,EAA8B,CAAE7rM,OAAQmC,EAAKhP,GAAI+jH,aAAc1H,IAAc,IAGzEi9F,GAAgC1sM,EAAAA,EAAAA,IAAgB,KAC/CoC,GACL2pM,EAAwB,CACtB9rM,OAAQmC,GAAMhP,GACdkwC,kBAAmBkpK,EAAyBzrE,EAAoB,GAChE,IAGE4rE,GAA0B3sM,EAAAA,EAAAA,IAAgB,KAC1CqsM,GACFK,IAEE/8F,GACF45F,GACF,IAGIqD,GAAmBt+M,EAAAA,EAAAA,KAAQ,IAC1B8yF,EAIEA,EAAQ5xD,QAAO,EAAG2nF,kBAAmBz4G,QAAQy4G,KAH3C,IAIR,CAAC/1B,IAEEyrH,GAAsB15M,EAAAA,EAAAA,KAAamiH,IACvC,MAAM,aAAE6B,GAAiB7B,EACzB,IAAK6B,IAAiB/0G,EACpB,OAGF,MAAM,oBAAEmyG,GAAwBnyG,EAEhC,OAAO8tC,OAAO2K,KAAKs8D,GAAc1oH,QAAO,CAACK,EAAQoxB,KAC/C,MAAMxvB,EAAMwvB,EACZ,IACGi3F,EAAazmH,IACV6jH,IAAsB7jH,IACf,eAARA,GAAgC,iBAARA,GAAkC,cAARA,EAErD,OAAO5B,EAGT,MAAM2lC,EA/IZ,SAAqC/jC,GACnC,OAAQA,GACN,IAAK,eACH,MAAO,yBACT,IAAK,YACH,MAAO,8BACT,IAAK,eACH,MAAO,iCACT,IAAK,aACH,MAAO,+BACT,IAAK,YACH,MAAO,8BACT,IAAK,aACH,MAAO,+BACT,IAAK,cACH,MAAO,8BACT,IAAK,cACH,MAAO,8BACT,IAAK,eACH,MAAO,iCACT,IAAK,YACH,MAAO,6BACT,IAAK,WACH,MAAO,6BACT,IAAK,kBACH,MAAO,8BACT,IAAK,aACH,MAAO,8BACT,IAAK,aACH,MAAO,8BACT,IAAK,aACH,MAAO,+BACT,IAAK,aACH,MAAO,+BACT,QACE,OAEN,CA0GsBo8M,CAA4Bp8M,GAE5C,IAAK+jC,EACH,OAAO3lC,EAGT,MAAMi+M,EAAmBp/M,EAAQ8mC,GAEjC,MAAQ,GAAE3lC,IAAUA,EAAOW,OAA6B,KAAIs9M,IAAxBA,GAA4C,GAC/E,GAAG,GACL,CAAC3qM,EAAMzU,IAEJq/M,GAA+BhtM,EAAAA,EAAAA,IAAgB,KACnDysM,GAA2BD,GAC3BF,GAA6B,IAGzBtrE,GAAgChhI,EAAAA,EAAAA,IAAiBI,IACrD+hI,EAAqB/hI,GACrBksM,GAA6B,IAGzBW,EAAwBZ,GAA6B18F,EACrDu9F,EAAwBzmM,IAAa02L,EAAAA,GAAmB7uD,YAAc/nH,EAE5E,OACE72B,EAAAA,GAAAC,cAAA,OACEtC,UAAU,mCACVsM,MAAQ,sDAGRjK,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iCACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,kBAAkByD,IAAI,QAAQjD,EAAK,6BACjD6B,EAAAA,GAAAC,cAACshH,GAAsB,CACrBhxG,OAAQmC,GAAMhP,GACd89G,oBAAqBA,EACrBC,uBAAwBA,EACxBrB,uBAAwBA,EACxBL,YAAaA,EACb4B,kBAAkB,mBAClBhkH,WAAWuC,EAAAA,GAAAA,GACT,eACAshH,GAAuB,sBAEzBE,kBAAkBxhH,EAAAA,GAAAA,GAAe,OAAQshH,GAAuB,cAInEy6F,GACCj8M,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACT,UACAshH,GAAuB,YAGzBxhH,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACtH,QAASs/M,GACjBt9M,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,6BACZ6B,EAAAA,GAAAC,cAACsrC,GAAAA,EAAQ,CACP7nC,GAAG,sBACHqN,MAAO5S,EAAK,4BACZssC,QAASqyK,KAGb98M,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,mCAAmCyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GACvEV,EAAK,4BAKX2+M,GACC98M,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACT,UACAshH,GAAuB,YAGzBxhH,EAAAA,GAAAC,cAAC8yI,GAAgB,CACftC,4BAA0B,EAC1BW,aAAW,EACXC,kBAAmBA,EACnBngI,SAAUogI,KAKhBtxI,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACT,UACAshH,GAAuB,YAGzBxhH,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,cACLK,WAAS,EACT41G,QAAM,EACNp9G,QAAS0yM,GAET1wM,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASQ,EAAK,wBAC9B6B,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,YAAYyxM,KAIhCpvM,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACT,UACAshH,GAAuB,YAGzBxhH,EAAAA,GAAAC,cAAA,MAAItC,UAAU,kBAAkByD,IAAI,QAAQjD,EAAK,sBAEjD6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,WACLnH,QAASu+M,GAERp+M,EAAK,wBAGP++M,EAAiB98M,KAAKwlH,GACrB5lH,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK4kH,EAAO5lF,OACZriC,UAAU,wCAEVK,QAASA,IAAMy+M,EAA2B72F,IAE1C5lH,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQ4lF,EAAO5lF,OACf8iB,OAAQq6J,EAAoBv3F,GAC5B7+E,eAAa,SAOvB/mC,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAASm1K,EACTv/M,QAASi/M,EACTnnM,UAAW3X,EAAK,QAChB0kB,SAAU26L,GAETA,EACCx9M,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGX,KCtJV,IAAe/E,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,SAAQsoM,8BACjB,MAAMnmM,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAC1B6wG,GAAWrzD,EAAAA,EAAAA,KAAmB77C,EAAQ3B,GAG5C,MAAO,CACLmC,OACAomM,sBAJ4BpmM,EAAKoxG,WAAa+0F,GAK9CI,YAAajqM,QAAQoyG,GACrB1vB,QAAS0vB,GAAU1vB,QACpB,IAEH,CAACx/E,GAAU3B,YACFvB,SAAQmjC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,KAdlB0B,EAvJ0CwrM,EAC5D/qM,OACAgrM,uBACAzE,cACAvnH,UACAm6C,iBACAitE,sBACAj0M,UACAnH,eAEA,MAAM,6BAAEinH,IAAiC50G,EAAAA,EAAAA,MAEnC4pM,GAAqB/6M,EAAAA,EAAAA,KAAQ,KACjC,GAAK8yF,EAIL,OAAOA,EAAQhxF,MAAK,EAAGs/B,YAAaA,IAAW09K,GAAqB,GACnE,CAAChsH,EAASgsH,KAEP,YACJ39F,EAAW,sBAAEE,EAAqB,UAAEppF,EAAS,uBAAEupF,EAAsB,aAAED,GACrEN,GAAqB85F,GAAoBlyF,cAAgB/0G,GAAMmyG,sBAC5D84F,EAA6BC,EAA2BC,IAA8Br/M,EAAAA,EAAAA,KACvFL,GAAOC,EAAAA,GAAAA,KACPH,GAAUC,EAAAA,EAAAA,MAEhBqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,KAGVpG,EAAAA,EAAAA,KAAU,KACJw6M,GAAeyE,IAAyB/D,GAC1C9tE,EAAe0jE,EAAAA,GAAkB0I,iBACnC,GACC,CAACvlM,EAAMumM,EAAaptE,EAAgB8tE,EAAoB+D,IAE3D,MAAM7D,GAAwBp2M,EAAAA,EAAAA,KAAY,KACnCiP,GAASgrM,IAIdv9F,GAAa,GACbwE,EAA6B,CAC3Bp0G,OAAQmC,EAAKhP,GACbs8B,OAAQ09K,EACRj2F,aAAc1H,IACd,GACD,CAACrtG,EAAMgrM,EAAsBv9F,EAAcwE,EAA8B5E,IAEtE+9F,GAAqBr6M,EAAAA,EAAAA,KAAY,KAChCiP,GAASgrM,GAId/4F,EAA6B,CAC3Bp0G,OAAQmC,EAAKhP,GACbs8B,OAAQ09K,EACRj2F,aAAc,CACZs2F,cAAc,IAEhB,GACD,CAACrrM,EAAMgrM,EAAsB/4F,IAE1B9C,GAAuBp+G,EAAAA,EAAAA,KAAazC,KACpC83M,MAICpmM,IAASA,EAAKmyG,sBAIZnyG,EAAKmyG,oBAAoB7jH,IAC/B,CAAC0R,EAAMomM,KAEHt3F,EAAqBC,IAA0BvxG,EAAAA,EAAAA,KAAS,GAE/D,GAAKypM,EAIL,OACE35M,EAAAA,GAAAC,cAAA,OACEtC,UAAU,mCACVsM,MAAQ,uDAGRjK,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iCACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACo/B,UAAQ,EAAC/mC,UAAU,uBAC3BqC,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CAAC1jB,OAAQ25K,EAAmB35K,OAAQ+G,eAAa,KAGnE/mC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,uBAAuByD,IAAI,QAAQnD,EAAQ,0BACzD+B,EAAAA,GAAAC,cAACshH,GAAsB,CACrBhxG,OAAQmC,GAAMhP,GACd89G,oBAAqBA,EACrBC,uBAAwBA,EACxBrB,uBAAwBA,EACxBL,YAAaA,EACbpiH,WAAWuC,EAAAA,GAAAA,GACT,eACAshH,GAAuB,sBAEzBG,kBAAkB,mBAClBD,kBAAkBxhH,EAAAA,GAAAA,GAAe,OAAQshH,GAAuB,WAChEK,qBAAsBA,MAIxBi3F,GACA94M,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,GAAAA,GACT,UACAshH,GAAuB,YAGzBxhH,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,cAAcid,QAAM,EAAC3L,aAAW,EAACzY,QAAS4/M,GACtD3/M,EAAQ,4BAMjB+B,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAAS63E,EACTjiH,QAAS67M,EACT/jM,UAAW7X,EAAQ,QACnB4kB,SAAUgU,GAETA,EACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAIfvC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQs5M,EACR94M,QAASg5M,EACT5lM,KAAM9Z,EAAK,iCACXonC,aAAa,SACbC,eAAgBs4K,EAChBr4K,sBAAoB,IAElB,KCvGV,IAAejoC,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,IACxBo4B,KAAMtB,EAAWyqD,aAAco2E,GAAqBh2J,EAAOtR,MAC7D8wF,GAAU3jC,EAAAA,EAAAA,KAAmB77C,EAAQ3B,IAASmhF,QAGpD,MAAO,CACLA,UACArqD,YACA6gI,mBACAvyI,UANgBjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,GAOvC,GAZeT,EA7DgD+rM,EAClE32K,YACA6gI,mBACAx2E,UACA/7D,YACAk2G,iBACAslE,qBACAtsM,UACAnH,gBAEA6vB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IAGV,MAAMgtF,GAAYjzF,EAAAA,EAAAA,KAAQ,KACxB,GAAK8yF,GAAYrqD,EAIjB,OAAO2qD,EAAAA,EAAAA,IACLN,EAAQ5xD,QAAQ8lF,IAAYA,EAAOisF,UAASzxM,KAAI,EAAG4/B,YAAaA,IAChEqH,EACA6gI,EACD,GACA,CAACx2E,EAASrqD,EAAW6gI,IAElBu0C,GAA6Bh5M,EAAAA,EAAAA,KAAas4M,IAC9C5K,EAAmB4K,GACnBlwE,EAAe0jE,EAAAA,GAAkBmN,qBAAqB,GACrD,CAACvL,EAAoBtlE,IAExB,OACE7rI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UAAUkyK,eAAa,GACnCh+E,EACCA,EAAUzxF,KAAI,CAACsD,EAAIsjD,IACjBhnD,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPtE,IAAK0C,EACL+5K,cAAez2H,EACfrpD,UAAU,kCAEVK,QAASA,IAAMy+M,EAA2B/4M,IAE1C1D,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CAAC1jB,OAAQt8B,EAAIqjC,eAAa,OAI9C/mC,EAAAA,GAAAC,cAAC83H,GAAAA,EAAY,CACX0lD,cAAe,EACfz8K,IAAI,gBACJiX,KAAM0d,EAAY,uBAAyB,uBAK/C,KC/DJsoL,GAAuB,CAAC,EAAG,GAAI,KAC/BC,GAAsB,CAC1BC,KAAM,KACN7pJ,IAAK,MACL8pJ,KAAM,QAEFC,GAA6BH,GAAoBC,KA6OvD,IAAe3gN,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAM,cAAE+tM,IAAkBhsM,EAAAA,EAAAA,KAAeJ,GAAQ06L,WAAWx1E,SAAS7mH,IAAW,CAAC,EAEjF,MAAO,CACL+tM,gBACD,GANersM,EAhO4BssM,EAC9ChuM,SACA+tM,gBACA5gN,WACAmH,UACAgnI,qBAEA,MAAM,uBAAE2yE,EAAsB,iBAAEC,IAAqB1uM,EAAAA,EAAAA,MAE/C5R,GAAOD,EAAAA,EAAAA,MACN81F,EAAkBC,EAAcC,IAAiB11F,EAAAA,EAAAA,MACjD03G,EAAiBwoG,IAAsBxuM,EAAAA,EAAAA,KAAS,IAChD9K,EAAOgkK,IAAYl5J,EAAAA,EAAAA,IAAS,KAC5B4kF,EAAkBC,IAAuB7kF,EAAAA,EAAAA,IAAiBwe,KAAKC,MAAQ0vL,KACvEM,EAAsBC,IAA2B1uM,EAAAA,EAAAA,IAAS,cAC1D2uM,EAAkBC,IAAuB5uM,EAAAA,EAAAA,IAA6B,KACtE6uM,EAAqBC,IAA0B9uM,EAAAA,EAAAA,IAAS,MACxD+uM,EAAiBC,IAAsBhvM,EAAAA,EAAAA,KAAS,IAEvDqd,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,KAGV4I,EAAAA,EAAAA,IAAc,EAAE0xM,MACd,GAAIA,IAAqBb,EACzB,GAAKA,EAOE,CACL,MACEl5M,MAAOg6M,EAAY,WAAEC,EAAU,WAAE/0K,EAAY4rE,gBAAiBopG,GAC5DhB,EAMJ,GALIc,GAAch2C,EAASg2C,GACvBC,IACFL,EAAuBf,GAAqB9rL,SAASktL,GAAcA,EAAW94H,WAAa,UAC3Fu4H,EAAoBO,IAElB/0K,EAAY,CACd,MAAMi1K,GAAcn7K,EAAAA,GAAAA,MAAkBi6K,GACtCO,EAAwB,UACxB7pH,EAAwD,IAApCn1F,KAAKZ,IAAIsrC,EAAYi1K,GAC3C,CACID,GACFZ,GAAmB,EAEvB,MAvBEt1C,EAAS,IACTw1C,EAAwB,aACxBI,EAAuB,KACvBjqH,EAAsC,KAAlB3wD,EAAAA,GAAAA,MAAyBi6K,IAC7CS,EAAoB,IACpBJ,GAAmB,EAkBrB,GACC,CAACJ,IAEJ,MAAMkB,GAAwB/7M,EAAAA,EAAAA,KAAamN,IACzC8tM,EAAmB9tM,EAAEC,OAAO45B,QAAQ,GACnC,IAEGk/H,GAAoBlmK,EAAAA,EAAAA,KAAamN,IACrCw4J,EAASx4J,EAAEC,OAAOH,MAAM,GACvB,IAEG+uM,GAA+Bh8M,EAAAA,EAAAA,KAAamN,IAChDkuM,EAAoBn3L,OAAO+3L,SAAS9uM,EAAEC,OAAOH,MAAO,IAAI,GACvD,IAEG+nF,GAAyBh1F,EAAAA,EAAAA,KAAa2xB,IAC1C2/D,EAAoB3/D,EAAKyhC,WACzBq9B,GAAe,GACd,CAACA,IAEEyrH,GAAkBl8M,EAAAA,EAAAA,KAAY,KAClCy7M,GAAmB,GACnB,MAAMG,EAAqC,WAAxBN,EAAmCF,EAAmBl3L,OAAOo3L,GAChF,IAAIz0K,EACJ,OAAQq0K,GACN,IAAK,SACHr0K,GAAalG,EAAAA,GAAAA,OAAmB0wD,EAAmBpmE,KAAKC,OAAS,IACjE,MACF,IAAK,OACL,IAAK,MACL,IAAK,OACH2b,GAAalG,EAAAA,GAAAA,MAAkB85K,GAAoBS,GAAwB,IAC3E,MACF,IAAK,YACHr0K,EAAa,EACb,MACF,QACEA,OAAazrC,EAGby/M,EACFE,EAAuB,CACrB1yH,KAAMwyH,EAAcxyH,KACpBv7E,SACAnL,QACA8wG,kBACA5rE,aACA+0K,eAGFZ,EAAiB,CACfluM,SACAnL,QACA8wG,kBACA5rE,aACA+0K,eAGJxzE,EAAe0jE,EAAAA,GAAkBS,QAAQ,GACxC,CACDz/L,EAAQukF,EAAkB+pH,EAAkBL,EAAwBF,EACpEG,EAAkBvoG,EAAiByoG,EAAsBI,EAAqB35M,EAAOymI,IAGvF,OACE7rI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,2BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO5S,EAAK,qBACZgwF,SAAUhwF,EAAK,gCACfssC,QAASyrE,EACThlG,SAAUsuM,KAGdx/M,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRzT,UAAU,YACV+uD,YAAavuD,EAAK,gBAClBuS,MAAOtL,EACP8L,SAAUy4J,IAEZ3pK,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,qBAAqBQ,EAAK,kBAEzC6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBAAmBQ,EAAK,kBACvC6B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,gBACL3E,QAAS,CACP,CACE8S,MAAO,OACPK,MAAO5S,EAAK,QAAS,IAEvB,CACEuS,MAAO,MACPK,MAAO5S,EAAK,OAAQ,IAEtB,CACEuS,MAAO,OACPK,MAAO5S,EAAK,QAAS,IAEvB,CACEuS,MAAO,YACPK,MAAO5S,EAAK,YAEd,CACEuS,MAAO,SACPK,MAAO5S,EAAK,oCAGhB+S,SAAU0tM,EACVztM,SAAUwtM,IAEc,WAAzBA,GACC3+M,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,eAAewE,QAAM,EAACnE,QAASi2F,IAC9C2rH,EAAAA,GAAAA,IAAezhN,EAAM22F,GAAkB,KAAE98B,EAAAA,GAAAA,IAAW75D,EAAM22F,IAG/D90F,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,qBAAqBQ,EAAK,oBAEvC+3G,GACAl2G,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBAAmBQ,EAAK,sBACvC6B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,eACL3E,QAAS,IACJqgN,GAAqB79M,KAAK8kK,IAAC,CAAQx0J,MAAOw0J,EAAE3+E,WAAYx1E,MAAOm0J,MAClE,CACEx0J,MAAO,IACPK,MAAO5S,EAAK,YAEd,CACEuS,MAAO,SACPK,MAAO5S,EAAK,mCAGhB+S,SAAU8tM,EACV7tM,SAAU4tM,IAEa,WAAxBA,GACC/+M,EAAAA,GAAAC,cAAA,SACEtC,UAAU,2BACV+D,KAAK,SACL7B,IAAI,IACJb,IAAI,QACJ0R,MAAOmuM,EACP3tM,SAAUuuM,IAGdz/M,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,qBAAqBQ,EAAK,mBAG3C6B,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,SAAO,EACPpqC,QAAS2hN,EACT98L,SAAUo8L,EACVnpM,UAA2B3X,EAAhBmgN,EAAqB,WAAmB,eAEnDt+M,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,YAGfvC,EAAAA,GAAAC,cAAC+0D,GAAa,CACZ3wD,OAAQ2vF,EACR5+B,cAAY,EACZE,gBAAc,EACdzwD,QAASqvF,EACTz+B,SAAUgjC,EACVxjC,WAAY6/B,EACZv/B,kBAAmBp3D,EAAK,UAEtB,KC9FV,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAM,WAAEslG,IAAevjG,EAAAA,EAAAA,KAAeJ,GAAQ06L,WAAWx1E,SAAS7mH,IAAW,CAAC,GACxE,OAAEuiG,EAAM,UAAE+sG,EAAS,WAAEC,GAAejqG,GAAc,CAAC,EACnDnjG,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAGhC,MAAO,CACLuiG,SACA+sG,YACAC,aACAnqL,UANgBjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,GAOvC,GAZeT,EAvIgC8tM,EAClDxvM,SACAuiG,SACA+sG,YACAC,aACAnqL,YACAj4B,WACAmH,cAEA,MAAM,wBACJm7M,EAAuB,yBACvBC,EAAwB,SACxB1zK,IACEx8B,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,MACP,MACJgiN,EAAQ,EAAC,WAAEb,EAAU,KAAEvzH,EAAI,QAAEq0H,GAC3BrtG,GAAU,CAAC,EACTxoE,EAAawoE,GAAQxoE,YAAsD,KAAvCwoE,EAAOxoE,YAAalG,EAAAA,GAAAA,OAA0B1V,KAAKC,MACvF61B,GAAcsuD,GAAQxoE,YAAc,IAAKlG,EAAAA,GAAAA,MAAmB,EAwElE,OAtEA3lC,EAAAA,EAAAA,KAAU,KACJqtF,IACFk0H,EAAwB,CAAEzvM,SAAQu7E,SAClCm0H,EAAyB,CAAE1vM,SAAQu7E,SACrC,GACC,CAACv7E,EAAQu7E,EAAMk0H,EAAyBC,KAE3C1yL,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IA8DR7E,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gCACXm1G,GACA9yG,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,gBAAgBQ,EAAK,YAEnC20G,GACC9yG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACwyG,GAAAA,EAAS,CAACrtG,MAAO0tG,EAAO1tG,MAAO0mF,KAAMgnB,EAAOhnB,KAAMnuF,UAAU,gBAC5DqR,QAAQs7B,IACPtqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,gBACV6mD,EACGrmD,EAAK,eACLA,EAAK,gBAAkB,IAAEyhN,EAAAA,GAAAA,IAAezhN,EAAMmsC,OAAe0tB,EAAAA,GAAAA,IAAW75D,EAAMmsC,QAIvF61K,GACCngN,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,mBAAmBQ,EAAK,mBACrC6B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,6CAEVK,QAASA,IAAMuuC,EAAS,CAAE7oC,GAAIy8M,KAE9BngN,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQmgL,EACRr9J,QAAQxtB,EAAAA,GAAAA,IAAoBn3B,EAAoB,IAAd20G,EAAO19E,MAAa,GACtD2R,eAAa,MAvFPq5K,MACtB,GAAKP,GAAW9/M,SAAU+/M,GAAY//M,OACtC,OAAK8/M,EAEH7/M,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,mBAAmBkiN,EAAU9/M,OAAS5B,EAAK,eAAgB+hN,GAAS/hN,EAAK,gBACtF6B,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,iBACTkiN,EAAU9/M,SACVs/M,EAAalhN,EAAK,4BAA6BkhN,EAAaa,GAAS/hN,EAAK,mBAE3E0hN,EAAUz/M,KAAKigN,IACd,MAAMC,GAAWhrL,EAAAA,GAAAA,IAAoBn3B,EAAsB,IAAhBkiN,EAASjrL,MAAa,GAC3D0tB,EAASu9J,EAASE,eAAkB,GAAED,OAAsBniN,EAAK,qBAAuBmiN,EAC9F,OACEtgN,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,6CAEVK,QAASA,IAAMuuC,EAAS,CAAE7oC,GAAI28M,EAASrgL,UAEvChgC,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQqgL,EAASrgL,OACjB8iB,OAAQA,EACR/b,eAAa,IAEN,MAtBE/mC,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,KA0BvB,EAgECu1L,GA5DcI,MACvB,IAAI1tG,GAAQo8F,UAAZ,CACA,IAAK4Q,GAAcD,EAAW,OAAO7/M,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,MAC7C,GAAKi1L,GAAY//M,OACjB,OACEC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,mBAA+BQ,EAAZw3B,EAAiB,oBAA4B,mBAC7E31B,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,gBACVmiN,EAAW1/M,KAAKqgN,GACfzgN,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAU,6CAEVK,QAASA,IAAMuuC,EAAS,CAAE7oC,GAAI+8M,EAAUzgL,UAExChgC,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQygL,EAAUzgL,OAClB8iB,QAAQxtB,EAAAA,GAAAA,IAAoBn3B,EAAuB,IAAjBsiN,EAAUrrL,MAAa,GACzD2R,eAAa,QAhBc,CAqB/B,EAuCCy5K,KAIH,KCzHJE,GAAS,IAEf,SAASC,GAAiBC,EAAuBC,GAC/C,MAAQC,YAAaC,EAAeb,MAAOc,EAAU,EAAG5rL,KAAM6rL,GAAWL,GACjEE,YAAaI,EAAehB,MAAOiB,EAAU,EAAG/rL,KAAMgsL,GAAWP,EACzE,OAAIE,GAAiBG,EAAsBv5L,OAAOo5L,GAAiBp5L,OAAOu5L,GACtEF,GAAWG,EAAgBA,EAAUH,EAClCI,EAASH,CAClB,CAEA,MAoUA,IAAezjN,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAM,QAAEg1H,EAAO,eAAE87E,IAAmB/uM,EAAAA,EAAAA,KAAeJ,GAAQ06L,WAAWx1E,SAAS7mH,IAAW,CAAC,EACrFmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAGhC,MAAO,CACL89L,gBAAiB9oE,EACjB+7E,uBAAwBD,EACxB3uM,OACAijB,UANgBjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,GAOvC,GAXeT,EApU6BsvM,EAC/ChxM,SACAmC,OACA27L,kBACAiT,yBACA5jN,WACAi4B,YACA9wB,UACAgnI,qBAEA,MAAM,yBACJ21E,EAAwB,iBACxBz9K,EAAgB,uBAChBy6K,EAAsB,yBACtBiD,EAAwB,iCACxBC,EAAgC,oBAChCC,IACE5xM,EAAAA,EAAAA,MAEE5R,GAAOC,EAAAA,GAAAA,KACPH,GAAUC,EAAAA,EAAAA,MAET0jN,EAA6BC,EAA2BC,IAA8BtjN,EAAAA,EAAAA,MACtFujN,EAAoBC,EAAkBC,IAAqBzjN,EAAAA,EAAAA,MAC3D0jN,EAAgBC,IAAqBjyM,EAAAA,EAAAA,OACrC6+L,EAAoBC,EAAkBC,IAAqBzwM,EAAAA,EAAAA,MAC3D4jN,EAAgBC,IAAqBnyM,EAAAA,EAAAA,OAE5Cqd,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IAGV,MAAMy9M,GAAuB1jN,EAAAA,EAAAA,KAAQ,KACnC,GAAKyvM,EACL,OAAOA,EACJhjG,MAAK,EAAG/gE,gBACPA,GAAeA,GAAalG,EAAAA,GAAAA,MAAkBm+K,GAAAA,GAAsB,KACpE,GACH,CAAClU,IACE//L,GAAcC,EAAAA,EAAAA,MACpB4pE,EAAAA,GAAAA,GAAY7pE,EAAag0M,EAAuB,SAAOzjN,GAEvD,MAAM2jN,GAAmB5jN,EAAAA,EAAAA,KAAQ,IAAM8T,IAAQmmJ,EAAAA,EAAAA,IAAgBnmJ,IAAO,CAACA,IACjE+vM,EAAgBpU,GAAiB3tM,MAAK,EAAGogN,iBAAkBA,IAC3D4B,EAAoBF,EAAoB,GAAEn5I,EAAAA,MAAkBm5I,IAAqBC,GAAe32H,KAChG62H,GAAkB/jN,EAAAA,EAAAA,KAAQ,KAC9B,MAAM2mI,EAAU7yH,GAAM2kC,UAAYg3J,EAAkBA,GAAiBvuK,QAAO,EAAGghL,kBAAmBA,IAClG,OAAOv7E,GAASrgF,KAAKy7J,GAAiB,GACrC,CAACjuM,GAAM2kC,UAAWg3J,IAOfuU,GAAen/M,EAAAA,EAAAA,KAAaqvG,IAChC,MAAM,KACJhnB,EAAI,MAAE1mF,EAAK,gBAAE8wG,EAAe,WAAE5rE,EAAU,WAAE+0K,GACxCvsG,EACJ0rG,EAAuB,CACrBjuM,SACAu7E,OACA1mF,QACA8wG,kBACA5rE,aACA+0K,aACAnQ,WAAW,GACX,GACD,CAAC3+L,EAAQiuM,IAENqE,GAAcp/M,EAAAA,EAAAA,KAAaqvG,IAC/BqvG,EAAkBrvG,GAClBkvG,GAAkB,GACjB,CAACA,IAEEp3E,GAAennI,EAAAA,EAAAA,KAAY,KAC1By+M,IACLU,EAAaV,GACbC,OAAkBtjN,GAClBojN,IAAmB,GAClB,CAACA,EAAmBW,EAAcV,IAE/BY,GAAuBr/M,EAAAA,EAAAA,KAAY,KACvCooI,EAAe0jE,EAAAA,GAAkBwT,WAAW,GAC3C,CAACl3E,IAEEm3E,GAAsBv/M,EAAAA,EAAAA,KAAY,KAClCg/M,GACFI,EAAYJ,EACd,GACC,CAACI,EAAaJ,IAEXQ,GAAyBx/M,EAAAA,EAAAA,KAAY,KACzCi+M,EAAiC,CAAEnxM,WACnCuxM,GAA4B,GAC3B,CAACvxM,EAAQuxM,EAA4BJ,IAElCwB,GAAiBz/M,EAAAA,EAAAA,KAAaqvG,IAClC6uG,EAAoB,CAAEpxM,SAAQuiG,WAC9B+4B,EAAe0jE,EAAAA,GAAkB4T,WAAW,GAC3C,CAAC5yM,EAAQs7H,EAAgB81E,IAEtByB,GAAe3/M,EAAAA,EAAAA,KAAaqvG,IAChC2uG,EAAyB,CAAElxM,SAAQu7E,KAAMgnB,EAAOhnB,MAAO,GACtD,CAACv7E,EAAQkxM,IAEN4B,GAAc5/M,EAAAA,EAAAA,KAAaqvG,IAC/BuvG,EAAkBvvG,GAClBk8F,GAAkB,GACjB,CAACA,IAEErkF,GAAelnH,EAAAA,EAAAA,KAAY,KAC1B2+M,IACLgB,EAAahB,GACbC,OAAkBxjN,GAClBowM,IAAmB,GAClB,CAACA,EAAmBmU,EAAchB,IAE/BkB,IAAW7/M,EAAAA,EAAAA,KAAaqoF,KAC5BmlC,EAAAA,GAAAA,IAAoBnlC,GACpB/nD,EAAiB,CACfr9B,QAASzI,EAAQ,eACjB,GACD,CAACA,EAAS8lC,IAEPw/K,GAAoBzwG,IACxB,MAAM,MACJotG,EAAQ,EAAC,WAAEb,EAAU,WAAE/0K,EAAU,YAAEw2K,EAAW,UAAE0C,EAAS,UAAEtU,GACzDp8F,EACJ,IAAI76F,EAAO,GASX,GAPEA,GADGi3L,GAAamQ,GAAca,EAAQb,EAC/BphN,EAAQ,UAAWohN,EAAaa,GAC9BA,EACFjiN,EAAQ,eAAgBiiN,GAExBjiN,EAAQ,eAGbixM,EAEF,OADAj3L,GAAS,IAAGyoM,MAAUziN,EAAQ,aACvBga,EAOT,GAJIurM,IACFvrM,GAAS,IAAGyoM,MAAUziN,EAAQ,eAAgBulN,WAG7B3kN,IAAfwgN,GAA4Ba,IAAUb,EACxCpnM,GAAS,IAAGyoM,MAAUziN,EAAQ,2BACzB,GAAIqsC,EAAY,CACrB,MAAMqR,EAAOrR,GAAalG,EAAAA,GAAAA,MAC1BnsB,GAAS,IAAGyoM,MAEVzoM,GADE0jC,EAAO,EACD19C,EAAQ,wBAAwBwlN,EAAAA,GAAAA,IAAgBtlN,EAAMw9C,IAEtD19C,EAAQ,qBAEpB,MAAW6iN,IACT7oM,GAAS,IAAGyoM,MAAUziN,EAAQ,gBAGhC,OAAOga,CAAI,EAGPyrM,GAAsB5wG,IAC1B,MAAM,MACJotG,EAAQ,EAAC,WAAEb,EAAU,UAAEnQ,EAAS,WAAE5kK,GAChCwoE,EACJ,OAAIo8F,EACK,wBAELmQ,GAAca,EAAQb,EACjB,yBAEL/0K,GAC4C,KAAhCA,GAAalG,EAAAA,GAAAA,QACf,EACH,uBAGJ,uBAAuB,EAG1Bu/K,GAAyB7wG,IAC7B,MAAMxqE,EAAmC,GA8BzC,OA7BAA,EAAQ5oC,KAAK,CACX0F,MAAOnH,EAAQ,QACfkH,KAAM,OACNu9C,QAASA,IAAM4gK,GAASxwG,EAAOhnB,QAG5BgnB,EAAOguG,aAAgBhuG,EAAOo8F,WACjC5mK,EAAQ5oC,KAAK,CACX0F,MAAOnH,EAAQ,QACfkH,KAAM,OACNu9C,QAASA,IAjJKowD,KAClB0uG,EAAyB,CAAEjxM,SAAQuiG,WACnC+4B,EAAe0jE,EAAAA,GAAkBwT,WAAW,EA+IzBa,CAAW9wG,KAIzBA,EAAOo8F,UAQV5mK,EAAQ5oC,KAAK,CACX0F,MAAOnH,EAAQ,cACfkH,KAAM,SACNu9C,QAASA,IAAM2gK,EAAYvwG,GAC3Br8F,aAAa,IAXf6xB,EAAQ5oC,KAAK,CACX0F,MAAOnH,EAAQ,gBACfkH,KAAM,SACNu9C,QAASA,IAAMmgK,EAAY/vG,GAC3Br8F,aAAa,IAUV6xB,CAAO,EAGhB,OACEtoC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,4BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQC,GAAAA,EAAe+/M,OACvBliN,KAAMmiN,EAAAA,IACNnmN,UAAU,iBAEZqC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,gBAA4BM,EAAZ03B,EAAoB,yBAAoC,qBAEtF+sL,GACC1iN,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACwyG,GAAAA,EAAS,CACR90G,UAAU,iBACVmuF,KAAM42H,EACNn3E,WAAS,EACTC,SAAW94H,GAAM2kC,eAAkCx4C,EAAtBmkN,EAC7B59M,MAAyBnH,EAAlByU,GAAM2kC,UAAoB,aAAwB,sCAI/Dr3C,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UAAUkyK,eAAa,GACpC7vK,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,MAAM4+M,kBAAgB,EAAC/iN,IAAI,SAASrD,UAAU,cAAcK,QAAS8kN,GACjF7kN,EAAQ,oBAER0kN,IAAoBA,EAAgB5iN,SAAWC,EAAAA,GAAAC,cAAC83H,GAAAA,EAAY,CAAC9/G,KAAK,iBAAiBjX,IAAI,YACzF2hN,GAAiBviN,KAAK0yG,GACrB9yG,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPq/B,YAAa3kC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,OAAO5E,UAAY,oBAAmB+lN,GAAmB5wG,OACjFuI,cAAc,OACd71G,WAAS,EAETxH,QAASA,IAAMklN,EAAepwG,GAC9BzwD,eAAgBshK,GAAsB7wG,GACtC9xG,IAAK8xG,EAAOhnB,MAEZ9rF,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,sBAAsBm1G,EAAO1tG,OAAS0tG,EAAOhnB,MAC7D9rF,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5BmiN,GAAiBzwG,OAIxB9yG,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,oBAAoBqD,IAAI,cAAc/C,EAAQ,yBAE5DqjN,GAA0BtyM,QAAQsyM,EAAuBvhN,SACxDC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UAAUkyK,eAAa,GACpC7vK,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,eAAeqD,IAAI,SAAS/C,EAAQ,iBACjD+B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPH,KAAK,SACLsR,aAAW,EACXzV,IAAI,SACJhD,QAAS6jN,GAET7hN,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASM,EAAQ,2BAElCqjN,GAAwBlhN,KAAK0yG,GAC5B9yG,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPq/B,YAAa3kC,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,OAAO5E,UAAY,oBAAmB+lN,GAAmB5wG,OACjFuI,cAAc,OACd71G,WAAS,EAETxH,QAASA,IAAMklN,EAAepwG,GAC9BzwD,eAAgBshK,GAAsB7wG,GACtC9xG,IAAK8xG,EAAOhnB,MAEZ9rF,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,SAASm1G,EAAO1tG,OAAS0tG,EAAOhnB,MAChD9rF,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,WAAWyD,IAAI,QAC5BmiN,GAAiBzwG,SAO9B9yG,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQu9M,EACR/8M,QAASi9M,EACT18M,MAAOnH,EAAQ,yBACfga,KAAMha,EAAQ,4BACdwnC,sBAAoB,EACpBF,aAActnC,EAAQ,aACtBunC,eAAgBy9K,IAElBjjN,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ09M,EACRl9M,QAASo9M,EACT78M,MAAOnH,EAAQ,cACfga,KAAMha,EAAQ,eACdwnC,sBAAoB,EACpBF,aAActnC,EAAQ,gBACtBunC,eAAgBolG,IAElB5qI,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ0qM,EACRlqM,QAASoqM,EACT7pM,MAAOnH,EAAQ,cACfga,KAAMha,EAAQ,kBACdwnC,sBAAoB,EACpBF,aAActnC,EAAQ,UACtBunC,eAAgBmlF,IAEd,KC5RV,IAAentH,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU8tB,aAGF,CACLiS,MAHWC,EAAAA,EAAAA,KAAWhgC,EAAQ8tB,MAFhB/tB,EA3D2B+xM,EAC7ChkL,SACAzvB,SACAulG,QACA1gF,OACAO,YACAsc,WAEA,MAAM,SAAE1F,EAAQ,oBAAE03K,IAAwBl0M,EAAAA,EAAAA,MAEpC7P,GAAiBgkN,EAAAA,GAAAA,GAAuB,eACxC/lN,GAAOD,EAAAA,EAAAA,KAEPukD,GAAWnX,EAAAA,EAAAA,IAAgB2G,GAC3BkyK,EAAuC,KAA1B/uL,GAAOgP,EAAAA,GAAAA,OAA0B1V,KAAKC,MAEnDy1L,GAAaC,EAAAA,GAAAA,IAAQ,IAAI31L,KAAKy1L,KAChCnsJ,EAAAA,GAAAA,IAAW75D,EAAMgmN,IAAaG,EAAAA,GAAAA,IAAgBnmN,EAAMgmN,GAAW,GAAM,GAAO,GAM1EI,GAAsB9gN,EAAAA,EAAAA,KAAY,KACtCwgN,EAAoB,CAAE1zM,SAAQyvB,SAAQwkL,YAAY,GAAO,GACxD,CAACj0M,EAAQ0zM,EAAqBjkL,IAE3BykL,GAAsBhhN,EAAAA,EAAAA,KAAY,KACtCwgN,EAAoB,CAAE1zM,SAAQyvB,SAAQwkL,YAAY,GAAQ,GACzD,CAACj0M,EAAQ0zM,EAAqBjkL,IAEjC,OACEhgC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWuC,EAAe,MAC7BF,EAAAA,GAAAC,cAAA,OAAKtC,UAAWuC,EAAe,QAC7BF,EAAAA,GAAAC,cAAA,OAAKtC,UAAWuC,EAAe,QAASlC,QAftB0mN,KACtBn4K,EAAS,CAAE7oC,GAAIs8B,GAAS,GAelBhgC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACLj1B,IAAKg/B,EACLr+B,KAAK,SACLu0B,KAAM+b,IAERjyC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWuC,EAAe,cAC7BF,EAAAA,GAAAC,cAAA,OAAKtC,UAAWuC,EAAe,cAAeuiD,GAC9CziD,EAAAA,GAAAC,cAAA,OAAKtC,UAAWuC,EAAe,kBAAmB41G,KAGtD91G,EAAAA,GAAAC,cAAA,OAAKtC,UAAWuC,EAAe,SAAUkkN,IAE3CpkN,EAAAA,GAAAC,cAAA,OAAKtC,UAAWuC,EAAe,YAC7BF,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAWuC,EAAe,UAAWlC,QAASumN,GACvCpmN,EAAZw3B,EAAiB,sBAA8B,sBAElD31B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAWuC,EAAe,UAAWiC,QAAM,EAACnE,QAASymN,GAC1DtmN,EAAK,oBAGN,KCsCV,IAAeX,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,GAEhC,MAAO,CACLmC,OACAijB,UAAWjjB,IAAQkjB,EAAAA,EAAAA,IAAcljB,GAClC,GAPeT,EA7FkC0yM,EACpDjyM,OACAnC,SACA7S,WACAi4B,YACA9wB,cAEA,MAAM,wBAAE+/M,EAAuB,qBAAEhW,IAAyB7+L,EAAAA,EAAAA,OACnD80M,EAAuBC,EAAqBC,IAAwBvmN,EAAAA,EAAAA,MACpEwmN,EAAuBC,EAAqBC,IAAwB1mN,EAAAA,EAAAA,KAErEL,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,KAGVpG,EAAAA,EAAAA,KAAU,KACHiU,GAAMu+L,eAAiBj/L,EAAAA,EAAAA,IAASzB,IACnCq+L,EAAqB,CAAEr+L,UACzB,GACC,CAACmC,EAAMnC,EAAQq+L,IAElB,MAAMuW,GAA0B1hN,EAAAA,EAAAA,KAAY,KAC1CmhN,EAAwB,CAAEr0M,SAAQi0M,YAAY,IAC9CO,GAAsB,GACrB,CAACH,EAAyBr0M,EAAQw0M,IAE/BK,GAA0B3hN,EAAAA,EAAAA,KAAY,KAC1CmhN,EAAwB,CAAEr0M,SAAQi0M,YAAY,IAC9CU,GAAsB,GACrB,CAACN,EAAyBr0M,EAAQ20M,IAErC,OACEllN,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iCACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB3/F,OAAQC,GAAAA,EAAekgN,YACvBriN,KAAM0jN,EAAAA,IACN1nN,UAAU,iBAEXqR,QAAQ0D,GAAMu+L,cAAclxM,SAC3BC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,qBAAqBK,QAAS8mN,GAAqB,cACrE9kN,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,qBAAqBK,QAASinN,EAAqB9iN,QAAM,GAAC,iBAIlFnC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UAAUkyK,eAAa,GACpC7vK,EAAAA,GAAAC,cAAA,KAAGe,IAAI,SACH0R,GAAMu+L,aAAiCv+L,EAAKu+L,aAAalxM,OACvD5B,EAAK,eAAgBuU,EAAKu+L,aAAalxM,QAAU5B,EAAK,oBADnCA,EAAK,aAG5BuU,GAAMu+L,cACNjxM,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAAC7pB,IAAI,YAEiB,IAA/B0R,GAAMu+L,cAAclxM,QACnBC,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,eAAeqD,IAAI,SACjB7C,EAAZw3B,EAAiB,iCAAyC,gCAG9DjjB,GAAMu+L,cAAc7wM,KAAI,EAAG4/B,SAAQ81E,QAAO1gF,UACzCp1B,EAAAA,GAAAC,cAAC+jN,GAAW,CACVhkL,OAAQA,EACR81E,MAAOA,EACP1gF,KAAMA,EACNO,UAAWA,EACXplB,OAAQA,EACRvP,IAAKg/B,QAKbhgC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQwgN,EACRhgN,QAASkgN,EACT3/M,MAAM,uBACN6S,KAAK,gDACLutB,eAAgB2/K,IAElBnlN,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ2gN,EACRngN,QAASqgN,EACT9/M,MAAM,uBACN6S,KAAK,gDACLutB,eAAgB4/K,IAEd,KCoJV,IAAe5nN,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU3B,aACT,MAAMmC,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ3B,IAC1B,mBAAEkwK,EAAqB6kC,EAAAA,KAAyBpzM,EAAO8/B,WAAa,CAAC,EAErE8b,GAAeC,EAAAA,EAAAA,KAAmB77C,EAAQ3B,GAC1CowK,EAAiB7yH,GAAc6yH,gBAAkBF,EACjD9qJ,GAAYC,EAAAA,EAAAA,IAAcljB,GAEhC,MAAO,CACLguK,iBAAkB5yH,GAAc4yH,iBAChC9+H,mBAAoB1vC,EAAO2vC,UAAUD,mBACrClvC,OACA+tK,qBACAE,iBACAhrJ,YACD,IAEH,CAACzjB,GAAU3B,YACFvB,SAAQmjC,EAAAA,EAAAA,KAAWjgC,EAAQ3B,KAnBlB0B,EAlO+BszM,EACjD3jK,qBACA8+H,mBACAhuK,OACAhV,WACAmH,UACA47K,qBACAE,iBACAhrJ,gBAEA,MAAM,wBAAE6vL,IAA4Bz1M,EAAAA,EAAAA,MAE9B5R,GAAOD,EAAAA,EAAAA,MACN+lI,EAAWC,IAAgBh0H,EAAAA,EAAAA,KAAS,IACpC2mB,EAAWspF,IAAgBjwG,EAAAA,EAAAA,KAAS,IACpCu1M,EAAuBC,IAA4Bx1M,EAAAA,EAAAA,IAAuCwwK,IAE1FilC,EAAqBC,IAA0B11M,EAAAA,EAAAA,IAASywK,IAE/DpzJ,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IAGV,MAAMghN,GAAmBjnN,EAAAA,EAAAA,KAAQ,IAAM,CAAC,CACtC8R,MAAO,MACPK,MAAO5S,EAAK,iBACX,CACDuS,MAAO,OACPK,MAAO5S,EAAK,kBACX,CACDuS,MAAO,OACPK,MAAO5S,EAAK,kBACV,CAACA,IAEC2nN,GAAsBriN,EAAAA,EAAAA,KAAY,KACjCiP,IACLytG,GAAa,GAEbqlG,EAAwB,CACtBj1M,OAAQmC,EAAKhP,GACbg9K,iBAAkB+kC,EAClB9kC,eAAgBglC,IAChB,GACD,CAACjzM,EAAM+yM,EAAuBD,EAAyBG,KAE1DlnN,EAAAA,EAAAA,KAAU,KACR0hH,GAAa,GACb+jB,GAAa,GACbwhF,EAAyBhlC,GACzBklC,EAAuBjlC,EAAe,GACrC,CAACD,EAAkBC,IAEtB,MAAMolC,GAA2BnnN,EAAAA,EAAAA,KAC/B,IAAMgjD,GAAoB9hB,QAAO,EAAG0rE,iBAAkBA,KACtD,CAAC5pD,KAGHnjD,EAAAA,EAAAA,KAAU,KACR,QAA4BI,IAAxB8mN,GAAqCA,IAAwBhlC,EAAjE,CAKA,GAAoC,SAAhC8kC,GAAuB/jN,MAC8B,QAA3Bg/K,GAAkBh/K,MAA6C,SAA3Bg/K,GAAkBh/K,MAEd,IAAzC+jN,EAAsBtkC,QAAQphL,OAEvD,YADAmkI,GAAa,GAKjB,GAAIuhF,GAAuB/jN,OAASg/K,GAAkBh/K,KAAtD,CAKA,GAAoC,SAAhC+jN,GAAuB/jN,MAA8C,SAA3Bg/K,GAAkBh/K,KAAiB,CAC/E,MAAMskN,EAAwBP,EAAsBtkC,QAC9C8kC,EAA0BvlC,GAAkBS,QAElD,GAAI6kC,EAAsBjmN,SAAWkmN,EAAwBlmN,QAC1DimN,EAAsBlkI,UAAUupB,MAChC66G,IAAmBD,EAAwBvlN,MACzCylN,IAAoB91K,EAAAA,EAAAA,IAAe61K,EAAeC,OAIrD,YADAjiF,GAAa,EAGjB,CAEAA,GAAa,EAjBb,MAFEA,GAAa,EAZf,MAFEA,GAAa,EAiCI,GAClB,CACDyhF,EACAhlC,EACA8kC,EACA/kC,IAGF,MAAM0lC,GAA8B3iN,EAAAA,EAAAA,KAAaiN,IACjC,QAAVA,GACFg1M,EAAyB,CAAEhkN,KAAM,QACjCkkN,EAAuBjlC,IACJ,SAAVjwK,GACTg1M,EAAyB,CACvBhkN,KAAM,OACNy/K,QAAoC,SAA3BT,GAAkBh/K,KAAkBg/K,EAAiBS,QAAU,KAE1EykC,EAAuBjlC,KAEvB+kC,OAAyB7mN,GACzB+mN,OAAuB/mN,GACzB,GACC,CAAC6hL,EAAkBC,IAEhB0lC,GAAuB5iN,EAAAA,EAAAA,KAAamN,IACxC,IAAK8B,IAASqzM,EAA0B,OAExC,MAAM,KAAExjN,EAAI,QAAEkoC,GAAY75B,EAAEmW,cAC5B,GAAoC,SAAhC0+L,GAAuB/jN,KAAiB,CAC1C,MAAMuvC,EAAW,CAAEwtH,SAAUl8J,GAE3BmjN,EADEj7K,EACuB,CACvB/oC,KAAM,OACNy/K,QAAS,IAAIskC,EAAsBtkC,QAASlwI,IAGrB,CACvBvvC,KAAM,OACNy/K,QAASskC,EAAsBtkC,QAAQrhJ,QAAQwmL,KAAWj2K,EAAAA,EAAAA,IAAei2K,EAAOr1K,MAGtF,IACC,CAAC80K,EAA0BrzM,EAAM+yM,IAE9Bc,GAA6B9iN,EAAAA,EAAAA,KAAaiN,IAC9Ck1M,EAAuBl1M,EAAM,GAC5B,IAEG81M,GAA+B/iN,EAAAA,EAAAA,KAAaiN,GACzCvS,EAAK,0CAA2CuS,IACtD,CAACvS,IAEEsoN,EAA2B9wL,IACG,QAAhC8vL,GAAuB/jN,MAAkD,SAAhC+jN,GAAuB/jN,MAEpE,OACE1B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,+BACXgoN,GAAuBc,GACvBzmN,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,mBACXQ,EAAK,2BAER6B,EAAAA,GAAAC,cAACoiB,GAAAA,EAAW,CACVxiB,IAAK,EACLb,IAAKyhL,EACL/vK,MAAOi1M,EACPz0M,SAAUq1M,EACV7sE,YAAa8sE,EACbE,kBAAgB,IAElB1mN,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,kCACVQ,EAAK,oCAIZ6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,mBACXQ,EAAK,uBAER6B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACTE,SAAUs0M,GAAuB/jN,MAAQ,OACzCa,KAAK,YACL3E,QAASioN,EACT30M,SAAUk1M,IAEZpmN,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,kCACsB,QAAhC8nN,GAAuB/jN,MAAkBvD,EAAK,0BACd,SAAhCsnN,GAAuB/jN,MAAmBvD,EAAK,4BAC9CsnN,GAAyBtnN,EAAK,0BAGH,SAAhCsnN,GAAuB/jN,MACtB1B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,4BACbqC,EAAAA,GAAAC,cAAA,MAAItC,UAAU,mBACXQ,EAAK,2BAEP4nN,GAA0B3lN,KAAI,EAAG6wC,WAAU7rC,WAC1CpF,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPvxD,KAAM0uC,EAASwtH,SACfh0H,QAASg7K,GAAuBtkC,QAAQ91E,MAAM5xB,IAAMppC,EAAAA,EAAAA,IAAeY,EAAUwoC,KAC7E1oE,MACE/Q,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAACmjD,GAAAA,EAAmB,CAACnS,SAAUA,EAAU2Q,mBAAoBA,IAC5Dx8C,GAGLs5J,UAAQ,EACRxtJ,SAAUm1M,SAQtBrmN,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAAS67F,EACTjmI,QAAS8nN,EACThwM,UAAW3X,EAAK,QAChB0kB,SAAUgU,GAETA,EACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGX,KCpNJ26I,GAA2B,4BAgPjC,IAAe1/I,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU8tB,aACT,MAAMiS,GAAOC,EAAAA,EAAAA,KAAWhgC,EAAQ8tB,GAC1BttB,GAAOy/B,EAAAA,EAAAA,KAAWjgC,EAAQ8tB,GAC1BoS,GAAeC,EAAAA,EAAAA,KAAmBngC,EAAQ8tB,IAC1C,SAAEjpB,IAAazE,EAAAA,EAAAA,KAAeJ,GAAQ06L,WACtC9rL,EAAUpO,IAAQkmH,EAAAA,GAAAA,IAAelmH,GAAMmmH,EAAAA,EAAAA,KAAqB3mH,IAAS4mH,EAAAA,EAAAA,KAAsB5mH,EAAQQ,EAAKhP,KACxGyxB,EAAgBid,GAAcjd,cAGpC,MAAO,CACL8c,OAAMl7B,WAAU+J,UAASqU,gBAAewxL,iBAHjBv0K,GAAc2kH,cAAgB3kH,GAAcnd,cAIpE,GAZehjB,EA9O0B20M,EAC5C5mL,SACAiS,OACAl7B,WACA+J,UACAjc,UACAnH,WACAy3B,gBACAwxL,uBAEA,MAAM,cACJltJ,EAAa,cACbvX,EAAa,gBACbssJ,EAAe,0BACfzB,IACEh9L,EAAAA,EAAAA,OAEGg/L,EAAoBC,EAAkBC,IAAqBzwM,EAAAA,EAAAA,MAC3DqoN,EAAgCC,EAA8BC,IAAiCvoN,EAAAA,EAAAA,MAC/F2/I,EAAwBC,IAA6BluI,EAAAA,EAAAA,KAAS,IAC9DggD,EAAOmuF,IAAYnuI,EAAAA,EAAAA,MACpB/R,GAAOD,EAAAA,EAAAA,MAEbqvB,EAAAA,GAAAA,GAAe,CACb7vB,WACA8vB,OAAQ3oB,IAGV,MAAMy4I,EAAmBrrG,GAAQA,EAAK8nB,WAAmB,GACnDwjF,EAAkBtrG,GAAQA,EAAKgoB,UAAkB,IAEhDF,EAAWC,IAAgB9pD,EAAAA,EAAAA,IAASotI,IACpCrjF,EAAUC,IAAehqD,EAAAA,EAAAA,IAASqtI,IAClCypE,EAAwBC,IAA6B/2M,EAAAA,EAAAA,KAAU4Q,IAEtEriB,EAAAA,EAAAA,KAAU,KACRwoN,GAA2BnmM,EAAQ,GAClC,CAACA,KAEJriB,EAAAA,EAAAA,KAAU,KACR2/I,GAA0B,GAC1B6wD,GAAmB,GAClB,CAACA,EAAmBjvK,KAEvBvhC,EAAAA,EAAAA,KAAU,KACRu7D,EAAasjF,GACbpjF,EAAYqjF,EAAgB,GAC3B,CAACD,EAAkBC,EAAiBtrG,KAEvCxzC,EAAAA,EAAAA,KAAU,KACJsY,IAAa02L,EAAAA,GAAmBzuD,WAClCZ,GAA0B,GAC1BC,OAASx/I,GACTowM,IACF,GACC,CAACA,EAAmBl4L,IAEvB,MAAM2jD,GAAwBj3D,EAAAA,EAAAA,KAAamN,IACzCopD,EAAappD,EAAEC,OAAOH,OACtB0tI,GAA0B,GAEtBluF,IAAUgtF,IACZmB,OAASx/I,EACX,GACC,CAACqxD,IAEE2K,GAAuBp3D,EAAAA,EAAAA,KAAamN,IACxCspD,EAAYtpD,EAAEC,OAAOH,OACrB0tI,GAA0B,EAAK,GAC9B,IAEG8oE,GAA2BzjN,EAAAA,EAAAA,KAAamN,IAC5Cq2M,EAA0Br2M,EAAEC,OAAO45B,SACnC2zG,GAA0B,EAAK,GAC9B,IAEGgB,GAAoB37I,EAAAA,EAAAA,KAAY,KACpC,MAAM47I,EAAmBtlF,EAAUgQ,OAC7Bu1E,EAAkBrlF,EAAS8P,OAE5Bs1E,EAAiBt/I,OAKtB05D,EAAc,CACZz5B,SACAlf,SAAUkmM,EACVjtJ,UAAWslF,EACXplF,SAAUqlF,IARVjB,EAASnB,GAST,GACD,CAACnjF,EAAWE,EAAUR,EAAez5B,EAAQgnL,IAE1CG,GAAsB1jN,EAAAA,EAAAA,KAAY,KACtCy+C,EAAc,CAAEliB,WAChBivK,IACAT,GAAiB,GAChB,CAACS,EAAmBT,EAAiBtsJ,EAAeliB,IAGjD85B,GAAWvsD,EAAAA,EAAAA,IAAyB,MACpCwgM,GAAexgM,EAAAA,EAAAA,KAAO,GAEtB65M,GAAqB3jN,EAAAA,EAAAA,KAAY,KACrCq2D,EAASpsD,SAASstJ,QAClB+yC,EAAargM,SAAU,CAAI,GAC1B,IAEG25M,GAAyB5jN,EAAAA,EAAAA,KAAY,KACzCq2D,EAASpsD,SAASstJ,QAClB+yC,EAAargM,SAAU,CAAK,GAC3B,IAEG45M,GAA4B7jN,EAAAA,EAAAA,KAAY,KAC5CsjN,IACA3oE,GAA0B,GAC1B2uD,EAA0B,CAAE/sK,UAAS,GACpC,CAAC+mL,EAA+Bha,EAA2B/sK,IAExDguK,GAAqBvqM,EAAAA,EAAAA,KAAak9I,IACtCvC,GAA0B,GAC1B2uD,EAA0B,CAAE/sK,SAAQ2gH,OAAMstD,UAAWF,EAAargM,SAAU,GAC3E,CAACq/L,EAA2B/sK,IAE/B,IAAKiS,EACH,OAGF,MAAMs1K,IAAuBp1H,EAAAA,EAAAA,IAAUlgD,IAASA,EAAKvuC,KAAOq6J,EAAAA,IACtDlnI,EAAY9f,IAAa02L,EAAAA,GAAmB7uD,WAElD,OACE5+I,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,cACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACyjD,GAAAA,EAAe,CACd1jB,OAAQiS,EAAKvuC,GACbmqH,WAAW,QACXjqE,kBAAgB,EAChB4jK,eAAa,EACbC,cAAY,IAEdznN,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACR1N,GAAG,kBACHqN,MAAO5S,EAAK,iCACZ+S,SAAUwpD,EACVhqD,MAAOqpD,EACP7J,MAAOA,IAAUgtF,GAA2BhtF,OAAQrxD,IAEtDmB,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACR1N,GAAG,iBACHqN,MAAO5S,EAAK,gCACZ+S,SAAU2pD,EACVnqD,MAAOupD,KAGXj6D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,mBACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPrpB,QAASu8K,EACTj2M,MAAO5S,EAAK,iBACZgwF,SAAUhwF,EAAK6oN,EACX,gCACA,kCACJ91M,SAAUg2M,MAIfK,GACCvnN,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,aAAaid,QAAM,EAACpkB,QAASopN,GAC1CpnN,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,sBAAsBQ,EAAK,wBAAyB8zC,EAAK8nB,aAE3E/5D,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,aAAaid,QAAM,EAACpkB,QAASqpN,GAC1CrnN,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,sBAAsBQ,EAAK,0BAA2B8zC,EAAK8nB,aAE5E5kC,GACCn1B,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACPq/B,YACE3kC,EAAAA,GAAAC,cAACg2B,GAAAA,EAAM,CACL5vB,MAAOsgN,EACPe,iBAAe,EACfxxL,KAAM+b,EACNtwC,KAAK,OACLhE,UAAU,mBAGdykB,QAAM,EACNpkB,QAAS8oN,GAER3oN,EAAK,8BAGV6B,EAAAA,GAAAC,cAAA,KAAGtC,UAAU,eAAeyD,IAAI,QAAQjD,EAAK,2BAA4B8zC,EAAK8nB,aAGlF/5D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,WACbqC,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CAACH,KAAK,SAASid,QAAM,EAAC3L,aAAW,EAACzY,QAASgxM,GACjD7wM,EAAK,oBAIZ6B,EAAAA,GAAAC,cAACkoC,GAAAA,EAAoB,CACnBC,QAAS+1G,EACTngJ,QAASohJ,EACTv8H,SAAUgU,EACV/gB,UAAW3X,EAAK,SAEf04B,EACC72B,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAEfrR,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAGfvC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQ0qM,EACRlqM,QAASoqM,EACTh3L,KAAM9Z,EAAK,2BACXonC,aAAcpnC,EAAK,iBACnBqnC,eAAgB2hL,EAChB1hL,sBAAoB,IAEtBzlC,EAAAA,GAAAC,cAACqlC,GAAAA,EAAa,CACZjhC,OAAQwiN,EACRhiN,QAASkiN,EACT9uM,KAAM9Z,EAAK,oCAAqC8zC,EAAK8nB,WACrDx0B,aAAcpnC,EAAK,SACnBqnC,eAAgB8hL,EAChB7hL,sBAAoB,IAEtBzlC,EAAAA,GAAAC,cAACg7J,GAAAA,EAAY,CACX/pJ,SAAU88L,EACVl0I,SAAUA,IAER,KCHV,IAAet8D,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IAGQ,CACLy1M,gBAHqBC,EAAAA,EAAAA,KAA4B11M,MAFnCD,EAnP0B41M,EAC5Ct3M,SACAo7H,gBACA+xE,uBACA7E,0BACAhtE,iBACAslE,qBACAtsM,UACAnH,WACAiqN,qBAEA,OAAQh8E,GACN,KAAK4jE,EAAAA,GAAkB+G,QACrB,OAAQqR,GACN,IAAK,MACH,OACE3nN,EAAAA,GAAAC,cAAC4sM,GAAS,CACR7rM,IAAKuP,EACLyvB,OAAQzvB,EACR1L,QAASA,EACTnH,SAAUA,IAGhB,IAAK,OACH,OACEsC,EAAAA,GAAAC,cAAC2mN,GAAU,CACT5lN,IAAKuP,EACLyvB,OAAQzvB,EACR1L,QAASA,EACTnH,SAAUA,IAGhB,IAAK,QACH,OACEsC,EAAAA,GAAAC,cAACu3M,GAAW,CACVx2M,IAAKuP,EACLA,OAAQA,EACRs7H,eAAgBA,EAChBhnI,QAASA,EACTnH,SAAUA,GAAY,CACpB6xM,EAAAA,GAAkBC,gBAClBD,EAAAA,GAAkBG,WAClBH,EAAAA,GAAkB0I,iBAClB1I,EAAAA,GAAkBO,mBAClBP,EAAAA,GAAkB+M,kBAClB/M,EAAAA,GAAkBiN,2BAClBjN,EAAAA,GAAkBmN,qBAClBnN,EAAAA,GAAkByC,gBAClBzC,EAAAA,GAAkBkM,mBAClBlM,EAAAA,GAAkBuY,oBAClB31L,SAASw5G,KAGjB,IAAK,UACH,OACE3rI,EAAAA,GAAAC,cAACquM,GAAa,CACZttM,IAAKuP,EACLA,OAAQA,EACRs7H,eAAgBA,EAChBhnI,QAASA,EACTnH,SAAUA,GAAY,CACpB6xM,EAAAA,GAAkBkB,mBAClBlB,EAAAA,GAAkBO,mBAClBP,EAAAA,GAAkBoB,oBAClBpB,EAAAA,GAAkBG,WAClBH,EAAAA,GAAkBC,gBAClBD,EAAAA,GAAkByC,gBAClBzC,EAAAA,GAAkBkM,mBAClBlM,EAAAA,GAAkBuY,oBAClB31L,SAASw5G,KAKnB,MAGF,KAAK4jE,EAAAA,GAAkBC,gBACrB,OACExvM,EAAAA,GAAAC,cAAC0yM,GAAqB,CACpBpiM,OAAQA,EACR7S,SAAUA,EACVmH,QAASA,IAIf,KAAK0qM,EAAAA,GAAkBG,WACrB,OACE1vM,EAAAA,GAAAC,cAACk1M,GAAgB,CACf5kM,OAAQA,EACRs7H,eAAgBA,EAChBnuI,SAAUA,EACVmH,QAASA,IAIf,KAAK0qM,EAAAA,GAAkB0I,iBACrB,OACEj4M,EAAAA,GAAAC,cAACk8M,GAAsB,CACrB5rM,OAAQA,EACRs7H,eAAgBA,EAChBslE,mBAAoBA,EACpBzzM,SAAUA,GAAY,CACpB6xM,EAAAA,GAAkB+M,kBAClB/M,EAAAA,GAAkBiN,2BAClBjN,EAAAA,GAAkBmN,sBAClBvqL,SAASw5G,GACX9mI,QAASA,IAIf,KAAK0qM,EAAAA,GAAkBoB,oBACvB,KAAKpB,EAAAA,GAAkB+M,kBACrB,OACEt8M,EAAAA,GAAAC,cAACw0M,GAAsB,CACrBlkM,OAAQA,EACR7S,SAAUA,EACVmH,QAASA,IAIf,KAAK0qM,EAAAA,GAAkBiN,2BACrB,OACEx8M,EAAAA,GAAAC,cAAC+9M,GAAgC,CAC/BztM,OAAQA,EACR4gM,mBAAoBA,EACpBtlE,eAAgBA,EAChBnuI,SAAUA,GAAY,CACpB6xM,EAAAA,GAAkBmN,sBAClBvqL,SAASw5G,GACX9mI,QAASA,IAIf,KAAK0qM,EAAAA,GAAkBmN,qBACrB,OACE18M,EAAAA,GAAAC,cAACw9M,GAA0B,CACzBltM,OAAQA,EACRmtM,qBAAsBA,EACtB7E,wBAAyBA,EACzBhtE,eAAgBA,EAChBnuI,SAAUA,EACVmH,QAASA,IAIf,KAAK0qM,EAAAA,GAAkBO,mBACrB,OACE9vM,EAAAA,GAAAC,cAACixM,GAAwB,CACvB3gM,OAAQA,EACRs7H,eAAgBA,EAChBslE,mBAAoBA,EACpBzzM,SAAUA,GAAY,CACpB6xM,EAAAA,GAAkByC,gBAClBzC,EAAAA,GAAkBkM,mBAClBlM,EAAAA,GAAkBuY,oBAClB31L,SAASw5G,GACX9mI,QAASA,IAIf,KAAK0qM,EAAAA,GAAkBkM,mBACvB,KAAKlM,EAAAA,GAAkByC,gBACrB,OACEhyM,EAAAA,GAAAC,cAACi5M,GAAsB,CACrB3oM,OAAQA,EACR4oM,WAAYxtE,IAAkB4jE,EAAAA,GAAkBkM,mBAChDrC,eAAgBsE,EAChB7E,wBAAyBA,EACzBhtE,eAAgBA,EAChBnuI,SAAUA,EACVmH,QAASA,IAIf,KAAK0qM,EAAAA,GAAkBkB,mBACvB,KAAKlB,EAAAA,GAAkB6I,aACrB,OACEp4M,EAAAA,GAAAC,cAAC86M,GAAkB,CACjBxqM,OAAQA,EACR7S,SAAUA,EACVmH,QAASA,IAGf,KAAK0qM,EAAAA,GAAkBS,QACrB,OACEhwM,EAAAA,GAAAC,cAACshN,GAAa,CACZhxM,OAAQA,EACR7S,SAAUA,EACVmH,QAASA,EACTgnI,eAAgBA,IAGtB,KAAK0jE,EAAAA,GAAkBwT,WACrB,OACE/iN,EAAAA,GAAAC,cAACs+M,GAAY,CACXhuM,OAAQA,EACR7S,SAAUA,EACVmH,QAASA,EACTgnI,eAAgBA,IAGtB,KAAK0jE,EAAAA,GAAkB6C,eACrB,OACEpyM,EAAAA,GAAAC,cAAC86M,GAAkB,CACjBxqM,OAAQA,EACRyqM,UAAQ,EACRt9M,SAAUA,EACVmH,QAASA,EACTgnI,eAAgBA,EAChBslE,mBAAoBA,IAI1B,KAAK5B,EAAAA,GAAkBK,UACrB,OACE5vM,EAAAA,GAAAC,cAACslN,GAAe,CACdh1M,OAAQA,EACR7S,SAAUA,EACVmH,QAASA,IAGf,KAAK0qM,EAAAA,GAAkB4T,WACrB,OACEnjN,EAAAA,GAAAC,cAAC8/M,GAAgB,CACfxvM,OAAQA,EACR7S,SAAUA,EACVmH,QAASA,IAGf,KAAK0qM,EAAAA,GAAkBW,aACrB,OACElwM,EAAAA,GAAAC,cAAC0kN,GAAkB,CACjBp0M,OAAQA,EACR7S,SAAUA,EACVmH,QAASA,IAKD,KC3RZkjN,GAAO,OACPC,GAAc,UACdC,GAAc,eACdC,GAAM,YAEL,IAAKC,GAAQ,SAARA,GAAQ,OAARA,EAAAA,EAAQ,qBAARA,EAAAA,EAAQ,eAARA,EAAAA,EAAQ,2BAARA,EAAAA,EAAQ,aAARA,CAAQ,MAOpB,MAAMC,GAAgC,CACpC,CAACD,GAASE,SAAU,GACpB,CAACF,GAASG,MAAO,OACjB,CAACH,GAASI,YAAa,aACvB,CAACJ,GAASK,KAAM,OAGX,SAASC,GAAeC,GAE7B,OADAA,EAAaA,EAAWvwJ,QAAQ,MAAO,IACnC4vJ,GAAKlrE,KAAK6rE,GACLP,GAASG,KAEdJ,GAAIrrE,KAAK6rE,GACJP,GAASK,IAEdR,GAAYnrE,KAAK6rE,IAAeT,GAAYprE,KAAK6rE,GAC5CP,GAASI,WAEXJ,GAASE,OAClB,CCOA,MAAMtlF,GAA2B,CAC/B4lF,YAAa,GACbC,YAAa,GACbC,KAAM,GACN/rJ,MAAO,GACPgsJ,YAAa,GACbC,SAAU,GACVtmK,SAAU,GACVugF,MAAO,GACP7oE,MAAO,GACP6uJ,SAAU,GACVN,WAAY,GACZO,WAAY,GACZC,OAAQ,GACRC,IAAK,GACLC,eAAgB,GAChBC,WAAY,GACZC,UAAU,EACVC,iBAAiB,EACjBC,WAAY,CAAC,EACbC,UAAW,EACXC,kBAAmB,IAGfC,GAAgDA,CAAC7sJ,EAAO32D,KAC5D,OAAQA,EAAOzE,MACb,IAAK,iBACH,MAAO,IACFo7D,EACH6rJ,YAAaxiN,EAAO+8H,QACpBsmF,WAAY,IACP1sJ,EAAM0sJ,WACTb,iBAAa9pN,IAGnB,IAAK,iBACH,MAAO,IACFi+D,EACH8rJ,YAAaziN,EAAO+8H,QACpBsmF,WAAY,IACP1sJ,EAAM0sJ,WACTZ,iBAAa/pN,IAGnB,IAAK,aACH,MAAO,IACFi+D,EACH+rJ,KAAM1iN,EAAO+8H,QACbsmF,WAAY,IACP1sJ,EAAM0sJ,WACTX,UAAMhqN,IAGZ,IAAK,cACH,MAAO,IACFi+D,EACHA,MAAO32D,EAAO+8H,QACdsmF,WAAY,IACP1sJ,EAAM0sJ,WACT1sJ,WAAOj+D,IAGb,IAAK,gBACH,MAAO,IACFi+D,EACHgsJ,YAAa3iN,EAAO+8H,QAAQ7zC,KAC5B+5H,eAAgBjjN,EAAO+8H,QAAQ5zC,YAC/Bk6H,WAAY,IACP1sJ,EAAM0sJ,WACTV,iBAAajqN,IAGnB,IAAK,iBACH,MAAO,IACFi+D,EACHisJ,SAAU5iN,EAAO+8H,QACjBsmF,WAAY,IACP1sJ,EAAM0sJ,WACTT,cAAUlqN,IAGhB,IAAK,iBACH,MAAO,IACFi+D,EACHra,SAAUt8C,EAAO+8H,QACjBsmF,WAAY,IACP1sJ,EAAM0sJ,WACT/mK,cAAU5jD,IAGhB,IAAK,cACH,MAAO,IACFi+D,EACHkmE,MAAO78H,EAAO+8H,QACdsmF,WAAY,IACP1sJ,EAAM0sJ,WACTxmF,WAAOnkI,IAGb,IAAK,cACH,MAAO,IACFi+D,EACH3C,MAAOh0D,EAAO+8H,QACdsmF,WAAY,IACP1sJ,EAAM0sJ,WACTrvJ,WAAOt7D,IAGb,IAAK,iBACH,MAAO,IAAKi+D,EAAOksJ,SAAU7iN,EAAO+8H,SACtC,IAAK,mBACH,MAAO,IACFpmE,EACH4rJ,WAAYviN,EAAO+8H,QACnBsmF,WAAY,IACP1sJ,EAAM0sJ,WACTd,gBAAY7pN,IAGlB,IAAK,mBACH,MAAO,IACFi+D,EACHmsJ,WAAY9iN,EAAO+8H,QACnBsmF,WAAY,IACP1sJ,EAAM0sJ,WACTP,gBAAYpqN,IAGlB,IAAK,mBACH,MAAO,IACFi+D,EACHosJ,OAAQ/iN,EAAO+8H,QACfsmF,WAAY,IACP1sJ,EAAM0sJ,WACTN,YAAQrqN,IAGd,IAAK,gBACH,MAAO,IACFi+D,EACHqsJ,IAAKhjN,EAAO+8H,QACZsmF,WAAY,IACP1sJ,EAAM0sJ,WACTL,SAAKtqN,IAGX,IAAK,uBACH,MAAO,IACFi+D,EACHssJ,eAAgBjjN,EAAO+8H,QACvBsmF,WAAY,IACP1sJ,EAAM0sJ,WACTJ,oBAAgBvqN,IAGtB,IAAK,mBACH,MAAO,IACFi+D,EACHusJ,WAAYljN,EAAO+8H,QACnBsmF,WAAY,IACP1sJ,EAAM0sJ,WACTH,gBAAYxqN,IAGlB,IAAK,iBACH,MAAO,IAAKi+D,EAAOwsJ,SAAUnjN,EAAO+8H,SACtC,IAAK,wBACH,MAAO,IAAKpmE,EAAOysJ,gBAAiBpjN,EAAO+8H,SAC7C,IAAK,iBACH,OAAI/8H,EAAO+8H,QAAQ9zC,QACV,IACFtyB,KACA32D,EAAO+8H,QACVkmF,eAAgBjjN,EAAO+8H,QAAQ9zC,SAG5B,IAAKtyB,KAAU32D,EAAO+8H,SAC/B,IAAK,gBACH,MAAO,IACFpmE,EACH0sJ,WAAY,IACP1sJ,EAAM0sJ,cACNrjN,EAAO+8H,UAGhB,IAAK,eACH,MAAO,IACFpmE,EACH2sJ,UAAWtjN,EAAO+8H,SAEtB,IAAK,0BACH,MAAO,IACFpmE,EACH4sJ,kBAAmBvjN,EAAO+8H,SAE9B,IAAK,aACH,MAAO,IACFH,IAEP,QACE,OAAOjmE,EACX,E,gBC9OF,UAAgB,KAAO,WAAW,YAAc,WAAW,mBAAmB,WAAW,gBAAkB,WAAW,KAAO,WAAW,iBAAiB,WAAW,cAAgB,WAAW,uBAAuB,WAAW,oBAAsB,WAAW,aAAa,WAAW,UAAY,WAAW,kBAAkB,WAAW,cAAgB,WAAW,uBAAuB,WAAW,kBAAoB,WAAW,wBAAwB,WAAW,mBAAqB,WAAW,SAAW,WAAW,SAAW,WAAW,gBAAkB,WAAW,eAAiB,WAAW,eAAe,WAAW,YAAc,WAAW,SAAW,WAAW,OAAS,WAAW,YAAc,WAAW,gCAAgC,WAAW,0BAA4B,WAAW,+BAA+B,WAAW,yBAA2B,WAAW,eAAe,WAAW,YAAc,WAAW,KAAO,YC2Pp6B,IAAet/D,EAAAA,EAAAA,KAlMgBosN,EAC7BxkN,QACA+K,cACA9J,QACAwjN,UACAC,iBACAC,eACAC,aACA7uI,gBACAooD,WACA0mF,cACAR,YACAS,cACAC,qBACAC,mBACAC,mBACArtJ,cAEA,MAAM,eAAEstJ,IAAmBv6M,EAAAA,EAAAA,MAErB9R,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KACPmsN,EAAgBv7M,QAAQu0H,IAExB,SACJinF,EAAQ,oBAAEC,EAAmB,aAAEC,GAC7Bb,GAAW,CAAC,GACV,cACJc,EAAa,gBACbC,EAAe,gBACfC,EAAe,KACftoN,EAAI,MACJ43D,EAAK,eACL2wJ,GACGf,GAAgB,CAAC,EAEhBgB,GAAWx+M,EAAAA,EAAAA,IAASq1L,EAAAA,EAAAA,IAAmBv7L,IAEvC+Q,GAAM4zM,EAAAA,GAAAA,GAAqCD,GAE3CE,GAAkBxnN,EAAAA,EAAAA,KAAaynN,IACnC3nF,EAAU,CAAE7hI,KAAM,eAAgBwhI,QAASwnF,EAAe9qN,KAAKC,IAAIqrN,EAAMR,GAAgBQ,GAAO,GAC/F,CAAC3nF,EAAUmnF,IAERS,GAA2B1nN,EAAAA,EAAAA,KAAY,KAC3C6mN,EAAe,CAAEz5E,KAAMu5E,GAAkBrqN,OAASqrN,EAAAA,GAAYC,cAAgBD,EAAAA,GAAYE,aAAc,GACvG,CAAClB,GAAkBrqN,OAAQuqN,IAExBiB,GAA6B9nN,EAAAA,EAAAA,KAAY,KAC7C6mN,EAAe,CAAEz5E,KAAMu6E,EAAAA,GAAYI,cAAe,GACjD,CAAClB,IAEEmB,GAA4BhoN,EAAAA,EAAAA,KAAY,KAC5C6mN,EAAe,CAAEz5E,KAAMu6E,EAAAA,GAAYM,UAAW,GAC7C,CAACpB,IAyDJ,OACEtqN,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOkgC,MACrBrgC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOgQ,aACpB46M,GACC/qN,EAAAA,GAAAC,cAAA,OACEmX,IAAKA,EACLzZ,UAAWwC,GAAOwrN,gBAClB3jN,IAAK+iN,EACLljN,WAAW,EACX8F,MAAOtH,EAAOkJ,YAAY5B,MAC1BK,OAAQ3H,EAAOkJ,YAAYvB,OAC3B8c,IAAI,MAGNigM,GAAY1kN,GACZrG,EAAAA,GAAAC,cAACu8C,GAAAA,EAAQ,CACP7uC,MAAOtH,EAAMkJ,YAAY5B,MACzBK,OAAQ3H,EAAMkJ,YAAYvB,OAC1BrQ,UAAWwC,GAAOwrN,gBAClBC,kBAAgB,IAGpB5rN,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO8X,MACrBjY,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,GAAO0rN,eAAgBzmN,GACrC+K,GACCnQ,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO2rN,sBACpB9pN,EAAAA,GAAAA,GAAWmO,EAAa,CAAC,KAAM,QAAS,aAKjDnQ,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO4rN,WACpBlC,EAAQmC,OAAO5rN,KAAK+R,GACnB85M,GAAkB9tN,EAAMgU,EAAKpB,MAAOoB,EAAKrQ,OAAQ+nN,EAAQ9nN,YAE1D+nN,GAAkBA,EAAe1pN,KAAK+R,GACrC85M,GAAkB9tN,EAAMgU,EAAKpB,MAAOoB,EAAKrQ,OAAQ+nN,EAAQ9nN,YAE1D0oN,GAAuBA,EAAoB1qN,OAAS,GA3FvDC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO+rN,eACrBlsN,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOgsN,oBACpB/mN,GAEHpF,EAAAA,GAAAC,cAAA,YACG4B,EAAAA,GAAAA,GAAe1D,EAAMsrN,EAAYI,EAAQ9nN,YAG9C/B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOisN,UACpB3B,EAAqBrqN,KAAKisN,GACzBrsN,EAAAA,GAAAC,cAAA,OACEe,IAAKqrN,EACL1uN,WAAWuC,EAAAA,GAAAA,GAAeC,GAAOmsN,SAAUD,IAAQ5C,GAAatpN,GAAOosN,iBACvEvuN,QAASulI,EAAW,IAAM0nF,EAAgBoB,IAAQ5C,EAAY,EAAI4C,QAAOxtN,IAExEgD,EAAAA,GAAAA,GAAe1D,EAAMkuN,EAAKxC,EAAQ9nN,SAAU,CAAEyqN,qBAAqB,cA4E1D3tN,IAAfmrN,GACCiC,GAAkB9tN,EAAMF,EAAQ,wBAAyB+rN,EAAYH,EAAQ9nN,UAAU,IAG3F/B,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOssN,cACnBpC,GAAoBqC,GAAmB,CACvCtnN,MAAOulN,GAAiBP,IAAmB,GAAGhlN,MAC9C2L,MAAO9S,EAAQ,yBACfkH,KAAM,OACNnH,QAASusN,EAAgBY,OAA2BtsN,IAErD+rN,GAAmB8B,GAAmB,CACrCtnN,MAAOwlN,EACP75M,MAAO9S,EAAQ,2BACfsiI,YAAYrgI,EAAAA,GAAAA,GAAeC,GAAOwsN,SAAUxsN,GAAOyqN,EAAgB9/J,mBAEnEo/J,IAAiBK,GAAiBM,IAAqB6B,GAAmB,CAC1EtnN,MAAOylN,EACP95M,MAAO9S,EAAQ,0BACfkH,KAAM,WACNnH,QAASusN,EAAgBgB,OAA6B1sN,IAEvD0D,GAAQmqN,GAAmB,CAC1BtnN,MAAO7C,EACPwO,MAAO9S,EAAQ,uBACfkH,KAAM,SAEPg1D,GAASuyJ,GAAmB,CAC3BtnN,MAAO+0D,EACPppD,MAAO9S,EAAQ,8BACfkH,KAAM,WAENglN,IAAwBI,GAAiBO,IAAoB4B,GAAmB,CAChFtnN,MAAO0lN,EACP/5M,MAAO9S,EAAQ,iCACfkH,KAAM,QACNnH,QAASusN,EAAgBkB,OAA4B5sN,IAEtD2rN,IA1FYpwM,EA0FUowM,EAxFzBxqN,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAnBN,SAAuBqJ,EAAa/Y,GAClC,MACMurN,EADa3uN,EAAQ,iCAAkC++D,GAC1Bse,MAAM,KACzC,OACEt7E,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACG0kL,EAAgB,GACjB5sN,EAAAA,GAAAC,cAACs3G,GAAAA,EAAQ,CACPn9F,IAAKA,EACLnC,KAAM20M,EAAgB,GACtBvrN,MAAOA,IAERurN,EAAgB9sK,MAAM,GAG7B,CAKa+sK,CAAczyM,EAAKnc,EAAQoD,OAClCkB,KAAK,eACLkoC,QAASz7B,QAAQmsE,GACjBx9E,UAAWwC,GAAO2sN,YAClB9hL,SAAU,EACV+oB,QAASk2J,OARf,IAAmB7vM,CA4FX,IAMV,SAAS6xM,GACP9tN,EAAciH,EAAesL,EAAe3O,EAAkB4tF,GAAO,GAErE,OACE3vF,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GAAeC,GAAO+rN,cAAev8H,GAAQxvF,GAAO4sN,oBAClE/sN,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAOgsN,oBACpB/mN,GAEHpF,EAAAA,GAAAC,cAAA,YACG4B,EAAAA,GAAAA,GAAe1D,EAAMuS,EAAO3O,IAIrC,CAEA,SAAS2qN,IAAmB,MAC1BtnN,EAAK,MACL2L,EAAK,KACL5L,EAAI,WACJo7H,EAAU,QACVviI,IAQA,MAAMqa,EAAcrJ,QAAQ5J,GAAS2L,IAAU3L,GAE/C,OACEpF,EAAAA,GAAAC,cAACqF,GAAAA,EAAQ,CACP3H,UAAWwC,GAAOqqC,KAClB4wE,QAAM,EACN51G,UAAW6S,EACXlT,KAAMA,EACNu/B,UAAW1mC,EACXA,QAASA,EACT2mC,YAAa47F,GAAcvgI,EAAAA,GAAAC,cAAA,KAAGtC,WAAWuC,EAAAA,GAAAA,GAAe,OAAQqgI,MAEhEvgI,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,GAAO6sN,2BACpB5nN,GAAS2L,GAEX3L,GAAS2L,IAAU3L,GAClBpF,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,GAAO8sN,0BAClBl8M,GAKX,CC3QA,MAmDA,IAAevT,EAAAA,EAAAA,KAnDsB0vN,EACnC9yM,MAAK+yM,aAAYtoN,UAASuoN,0BAE1B,MAAM,iBAAElrJ,IAAqBnyD,EAAAA,EAAAA,MAEvB5R,GAAOD,EAAAA,EAAAA,KAEPoqE,GAAgB7kE,EAAAA,EAAAA,KAAa2tB,IACjC,IACE,MAAM3V,EAAOisD,KAAKa,MAAMn3C,EAAM3V,OACxB,UAAEmsD,EAAS,UAAEC,GAAcpsD,EACjC,OAAQmsD,GACN,IAAK,uBACH,IAAKulJ,EAAY,CACf,MAAMtkJ,EAAUQ,EAAAA,IAAkBxB,EAAUyB,UAC5CpH,EAAiB,CAAE9nD,IAAKyuD,GAC1B,CACAhkE,IACA,MACF,IAAK,sBACCuoN,GACFA,EAAoBvlJ,GAEtB,MACF,QACEhjE,IAGN,CAAE,MAAOgG,GACP,IAED,CAAChG,EAASsoN,EAAYjrJ,EAAkBkrJ,IAO3C,OALA3uN,EAAAA,EAAAA,KAAU,KACRoQ,OAAOoK,iBAAiB,UAAWqvD,GAC5B,IAAMz5D,OAAOqK,oBAAoB,UAAWovD,KAClD,CAACA,IAGFtoE,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,kBACbqC,EAAAA,GAAAC,cAAA,UACE+H,IAAKoS,EACLhV,MAAOjH,EAAK,kCACZmyE,MAAM,UACND,QAAQ,gFACR1yE,UAAU,4BAER,ICfV,IAAeH,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAAsBC,IACxC,MAAM,QAAE6uD,IAAYzuD,EAAAA,EAAAA,KAAeJ,GACnC,MAAO,CACL4mG,SAAU/3C,EAAQ7Q,OAAOm9J,WACzBn1G,aAAchmG,EAAO8lG,cAAcC,KACnCmyG,iBAAyC,YAAvBrpJ,EAAQusJ,MAAM5rN,KAAqBq/D,EAAQusJ,KAAKlD,sBAAmBvrN,EACtF,GANiBoT,EAxC+Bs7M,EACjD7vN,WACAo7G,WACAh8C,QACAstJ,mBACAlyG,eACAs1G,uBAEA,MAAM,kBAAEC,IAAsB19M,EAAAA,EAAAA,MAExB9R,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MAENm6G,EAAoBC,IAAyBtoG,EAAAA,EAAAA,KAAS,GACvDw9M,GAAW9uN,EAAAA,EAAAA,KAAQ,IAChBwrN,GAAkBrqN,QAAU+8D,EAAM4sJ,kBACrCU,EAAiB1pN,MAAK,EAAGgD,QAASA,IAAOo5D,EAAM4sJ,qBAAoBtkN,WACnEvG,GACH,CAACurN,EAAkBttJ,EAAM4sJ,oBAE5B,OACE1pN,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACbqC,EAAAA,GAAAC,cAAC0C,GAAAA,EAAc,CAACE,OAAK,EAACD,kBAAmB21G,IAEzCv4G,EAAAA,GAAAC,cAAC24G,GAAAA,EAAY,CACX1oD,MAAO4oD,GAAY36G,EAAK46G,YAAYD,GACpCb,KAAMC,EACN/nG,YAAalS,EAAQ,6BAA8ByvN,GACnDhhK,YAAazuD,EAAQ,YACrB+6G,WAAYy0G,EACZ50G,kBAAkB,EAClBI,iBAAkBv7G,EAClBkF,kBAAmB21G,EACnBW,2BAA4BV,EAC5Bm1G,cAAeH,IAEb,K,gBCzDK,SAASI,GACtBx2M,EAAkCy2M,EAHX,MAKvBpvN,EAAAA,EAAAA,KAAU,KACJia,EAAAA,IAIJ5J,YAAW,MACT4/B,EAAAA,EAAAA,KAAe,KACbt3B,EAAI1J,SAAS+sD,OAAO,GACpB,GACDozJ,EAAkB,GACpB,CAACz2M,EAAKy2M,GACX,C,gICgDA,IAAerwN,EAAAA,EAAAA,KA1CkBswN,EAAGp9M,QAAOw/C,QAAOh/C,eAChD,MAAM/S,GAAOD,EAAAA,EAAAA,KAEP6vN,GAAgBxgN,EAAAA,EAAAA,IAAyB,MAE/CqgN,GAAuBG,GAEvB,MAAOC,EAAUC,IAAe/9M,EAAAA,EAAAA,IAAiBi4M,GAASE,UAC1D5pN,EAAAA,EAAAA,KAAU,KACR,MAAMyvN,EAAczF,GAAe/3M,GACnCu9M,EAAYC,EAAY,GAEvB,IAEH,MAAM5mI,GAAe7jF,EAAAA,EAAAA,KAAamN,IAChC,MAAMwnF,EC/BH,SAA0B1tD,GAE/B,MAAMhV,GADNgV,EAAQA,EAAMytB,QAAQ,SAAU,KACZshC,MAAM,WAC1B,OAAO/jE,EAAQA,EAAM1M,KAAK,KAAO,EACnC,CD2BqBmlM,CAAiBv9M,EAAEC,OAAOH,OACrCw9M,EAAczF,GAAe73M,EAAEC,OAAOH,OAC5Cu9M,EAAYC,GACZh9M,EAASknF,EAAS,GACjB,CAAClnF,IAEEk9M,EAuBR,SAAqBJ,GACnB,OAAQA,GACN,KAAK7F,GAASI,WACZ,OAAOvoN,EAAAA,GAAAC,cAAA,OAAK+H,IAAKqmN,GAAoBxmN,WAAW,EAAOijB,IAAI,KAC7D,KAAKq9L,GAASG,KACZ,OAAOtoN,EAAAA,GAAAC,cAAA,OAAK+H,IAAKsmN,GAAczmN,WAAW,EAAOijB,IAAI,KACvD,KAAKq9L,GAASK,IACZ,OAAOxoN,EAAAA,GAAAC,cAAA,OAAK+H,IAAKumN,GAAa1mN,WAAW,EAAOijB,IAAI,KACtD,QACE,OAEN,CAlCmB0jM,CAAYR,GAE7B,OACEhuN,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,aACbqC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRgG,IAAK22M,EACLh9M,MAAO5S,EAAK,qBACZ+S,SAAUo2E,EACV52E,MAAOA,EACPooD,UAAU,UACVn7D,UAAWqwN,EAAW,kBAAoB,GAC1C99J,MAAOA,EACPllB,SAAU,EACV4zC,UA1CuB,GA2CvB/zC,2BAAyB,IAE3B7qC,EAAAA,GAAAC,cAAA,QAAMtC,UAAU,eAAeywN,GAC3B,IEtBV,IAAe5wN,EAAAA,EAAAA,KA3BoBixN,EAAG/9M,QAAOw/C,QAAOh/C,eAClD,MAAM/S,GAAOD,EAAAA,EAAAA,KAEPopF,GAAe7jF,EAAAA,EAAAA,KAAamN,IAChC,MAAMwnF,EAAWxnF,EAAEC,OAAOH,MAEtBA,EAAMg+M,SAAS,MAAQh+M,EAAM3Q,OAASq4F,EAASr4F,OACjDmR,EAASknF,GAETlnF,ED1BC,SAA0Bw5B,GAE/B,MAAMhV,GADNgV,EAAQA,EAAMytB,QAAQ,SAAU,IAAIrY,MAAM,EAAG,IACzB25C,MAAM,WAO1B,OANI/jE,IAAQ,IAAM/N,OAAO+N,EAAM,IAAM,KACnCA,EAAM,GAAK,MAETA,IAAQ,IAA0B,IAApBA,EAAM,GAAG31B,SAAiB21B,EAAM,KAChDA,EAAM,GAAK,IAENA,EAAQA,EAAM1M,KAAK,KAAO,EACnC,CCgBe2lM,CAAiB/9M,EAAEC,OAAOH,OACrC,GACC,CAACQ,EAAUR,IAEd,OACE1Q,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO5S,EAAK,yBACZ+S,SAAUo2E,EACV52E,MAAOA,EACPw/C,MAAOA,EACP4I,UAAU,UACV9tB,SAAU,EACV4zC,UA7BmB,EA8BnB/zC,2BAAyB,GACzB,ICsIN,IAAertC,EAAAA,EAAAA,KAhJmB8tN,EAChCxuJ,QACA8xJ,qBACAC,qBACAC,cACAC,UACA11J,cACAkqE,eAGA,MAAMyrF,GAAmBzhN,EAAAA,EAAAA,IAA0B,OAEnD9O,EAAAA,EAAAA,KAAU,KACJuwN,EAAiBthN,SAChBshN,EAAiBthN,QAAQgD,QAAUosD,EAAMssJ,iBAC5C4F,EAAiBthN,QAAQgD,MAAQosD,EAAMssJ,eACzC,GACC,CAACtsJ,EAAMssJ,iBAEV,MAAM6F,GAAyBxrN,EAAAA,EAAAA,KAAaiN,IAC1C6yH,EAAS,CAAE7hI,KAAM,mBAAoBwhI,QAASxyH,GAAQ,GACrD,CAAC6yH,IAEE2rF,GAAyBzrN,EAAAA,EAAAA,KAAamN,IAC1C2yH,EAAS,CAAE7hI,KAAM,mBAAoBwhI,QAAStyH,EAAEC,OAAOH,MAAMy+M,eAAgB,GAC5E,CAAC5rF,IAEE6rF,GAAqB3rN,EAAAA,EAAAA,KAAaiN,IACtC6yH,EAAS,CAAE7hI,KAAM,mBAAoBwhI,QAASxyH,GAAQ,GACrD,CAAC6yH,IAEE8rF,GAAkB5rN,EAAAA,EAAAA,KAAamN,IACnC,MAAMwnF,EAAWxnF,EAAEC,OAAOH,MAAMynD,QAAQ,UAAW,IACnDorE,EAAS,CAAE7hI,KAAM,gBAAiBwhI,QAAS9qC,GAAW,GACrD,CAACmrC,IAEE+rF,GAAsB7rN,EAAAA,EAAAA,KAAamN,IACvC2yH,EAAS,CAAE7hI,KAAM,uBAAwBwhI,QAAStyH,EAAEC,OAAOH,OAAQ,GAClE,CAAC6yH,IAEEgsF,GAA8B9rN,EAAAA,EAAAA,KAAamN,IAC/C2yH,EAAS,CAAE7hI,KAAM,mBAAoBwhI,QAAStyH,EAAEC,OAAOH,OAAQ,GAC9D,CAAC6yH,IAEEisF,GAA8B/rN,EAAAA,EAAAA,KAAamN,IAC/C2yH,EAAS,CAAE7hI,KAAM,wBAAyBwhI,QAAStyH,EAAEC,OAAOH,OAAQ,GACnE,CAAC6yH,IAEEtlI,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MAEP,WAAEorN,EAAa,CAAC,GAAM1sJ,EAE5B,OACE98D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACbqC,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,qBACb+B,EAAAA,GAAAC,cAAC6tN,GAAS,CACR58M,SAAU+9M,EACVv+M,MAAOosD,EAAM4rJ,WACbx4J,MAAOs5J,EAAWd,YAAcvqN,EAAK46G,YAAYywG,EAAWd,cAE7DmG,GACC7uN,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO9S,EAAQ,8CACfiT,SAAUg+M,EACVx+M,MAAOosD,EAAMmsJ,WACbnwJ,UAAU,OACV9tB,SAAU,EACVklB,MAAOs5J,EAAWP,YAAc9qN,EAAK46G,YAAYywG,EAAWP,cAGhEjpN,EAAAA,GAAAC,cAAA,WAAStC,UAAU,iBACjBqC,EAAAA,GAAAC,cAACwuN,GAAW,CACV/9M,MAAOosD,EAAMosJ,OACbh4M,SAAUk+M,EACVl/J,MAAOs5J,EAAWN,QAAU/qN,EAAK46G,YAAYywG,EAAWN,UAE1DlpN,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO9S,EAAQ,yBACfiT,SAAUm+M,EACV3+M,MAAOosD,EAAMqsJ,IACbrwJ,UAAU,UACV8lB,UAAW,EACX5zC,SAAU,EACVklB,MAAOs5J,EAAWL,KAAOhrN,EAAK46G,YAAYywG,EAAWL,KACrDt+K,2BAAyB,KAG5BikL,GAAeC,EACd/uN,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,+BACXY,EACJmB,EAAAA,GAAAC,cAAA,WAAStC,UAAU,iBAChBmxN,GACC9uN,EAAAA,GAAAC,cAACwvN,GAAAA,EAAM,CACL1+M,MAAO9S,EAAQ,0BACfiT,SAAUo+M,EACV5+M,MAAOosD,EAAMssJ,eACbsG,SAAU1gN,SAAQ,GAClBtL,GAAG,kBACHwsD,MAAOs5J,EAAWJ,gBAAkBjrN,EAAK46G,YAAYywG,EAAWJ,gBAChEp+K,SAAU,EACV5zB,IAAK43M,GAGH31J,EAAYj5D,KAAI,EAAGkvF,cAAa/sF,UAC9BvC,EAAAA,GAAAC,cAAA,UACEyQ,MAAO4+E,EACP3xF,UAAU,cACVwT,SAAUm+E,IAAgBxyB,EAAMssJ,gBAE/B95H,GAAe/sF,MAMzBwsN,GACC/uN,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO9S,EAAQ,iCACfiT,SAAUq+M,EACV7+M,MAAOosD,EAAMusJ,WACbvwJ,UAAU,OACV9tB,SAAU,EACV4zC,UAAW,GACX1uB,MAAOs5J,EAAWH,YAAclrN,EAAK46G,YAAYywG,EAAWH,eAIlErpN,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO9S,EAAQ,qCACfwsC,UAASmkL,GAAqB9xJ,EAAMysJ,gBACpCv+K,SAAU,EACVmjD,SAAUlwF,EAAQ2wN,EAAqB,gCAAkC,qBACzE19M,SAAUs+M,EACV3sM,UAAW+rM,MAIb,IChHV,IAAepxN,EAAAA,EAAAA,KAtC+BmyN,EAC5C7yJ,QACAstJ,mBACA7mF,WACAqsF,qBAEA,MAAMzxN,GAAOD,EAAAA,EAAAA,KAEPN,GAAUgB,EAAAA,EAAAA,KAAQ,IACfwrN,GAAkBrqN,OACrBqqN,EAAiBhqN,KAAI,EAAGsD,KAAI0B,YAAY,CAAG2L,MAAO3L,EAAOsL,MAAOhN,MAChE8iC,GAAAA,GACH,CAAC4jL,IAEEl5M,GAAWzN,EAAAA,EAAAA,KAAaiN,IAC5B6yH,EAAS,CAAE7hI,KAAM,0BAA2BwhI,QAASxyH,GAAQ,GAC5D,CAAC6yH,IAEJ,OACEvjI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,eACbqC,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,UAAK9B,EAAK,qBAEV6B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,oBACL3E,QAASA,EACTuT,SAAU2rD,EAAM4sJ,kBAChBx4M,SAAUA,IAGZlR,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACE,QAAM,EAACnE,QAAS4xN,GACrBzxN,EAAK,kCAGN,ICYV,IAAeX,EAAAA,EAAAA,KAzCgBkuN,EAC7B5uJ,QACA+yJ,kBACA9tN,WACAwhI,eAEA,MAAMtlI,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MAEbK,EAAAA,EAAAA,KAAU,KACHoxN,GAAoBA,EAAgB9vN,SAAU+8D,EAAMksJ,UAGzDzlF,EAAS,CAAE7hI,KAAM,iBAAkBwhI,QAAS2sF,EAAgB,GAAGnsN,IAAK,GACnE,CAACmsN,EAAiB/yJ,EAAMksJ,SAAUzlF,IAErC,MAAMusF,GAAuBrsN,EAAAA,EAAAA,KAAaiN,IACxC6yH,EAAS,CAAE7hI,KAAM,iBAAkBwhI,QAASxyH,GAAQ,GACnD,CAAC6yH,IAEE3lI,GAAUgB,EAAAA,EAAAA,KAAQ,IAAOixN,EAAgBzvN,KAAI,EAAGsD,GAAIgN,EAAOtL,MAAO2L,EAAOjP,aAAa,CAC1FiP,QACAo9E,UAAUtsF,EAAAA,GAAAA,GAAe1D,EAAM2D,EAAQC,GACvC2O,aACI,CAACm/M,EAAiB9tN,EAAU5D,IAElC,OACE6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,YACbqC,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,SAAIhC,EAAQ,0BACZ+B,EAAAA,GAAAC,cAACgR,EAAAA,EAAU,CACT1O,KAAK,mBACL3E,QAASA,EACTsT,SAAU4+M,EACV3+M,SAAU2rD,EAAMksJ,YAGhB,IC4JV,IAAexrN,EAAAA,EAAAA,KA7LoBguN,EACjC1uJ,QACAizJ,YACAC,YACAC,WACA/F,cACA7wJ,cACAkqE,eAGA,MAAMzpE,GAAWvsD,EAAAA,EAAAA,IAAyB,MAEpC2iN,GAAW3iN,EAAAA,EAAAA,IAAyB,MAEpCyhN,GAAmBzhN,EAAAA,EAAAA,IAA0B,OAEnD9O,EAAAA,EAAAA,KAAU,KACJuwN,EAAiBthN,SAChBshN,EAAiBthN,QAAQgD,QAAUosD,EAAMgsJ,cAC5CkG,EAAiBthN,QAAQgD,MAAQosD,EAAMgsJ,YACzC,GACC,CAAChsJ,EAAMgsJ,cAEV,MAAM7qN,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,KAEbwvN,GAAuB9zJ,GAEvB,MAAMq2J,GAAuB1sN,EAAAA,EAAAA,KAAamN,IACxC2yH,EAAS,CAAE7hI,KAAM,iBAAkBwhI,QAAStyH,EAAEC,OAAOH,OAAQ,GAC5D,CAAC6yH,IAEE6sF,GAAuB3sN,EAAAA,EAAAA,KAAamN,IACxC2yH,EAAS,CAAE7hI,KAAM,iBAAkBwhI,QAAStyH,EAAEC,OAAOH,OAAQ,GAC5D,CAAC6yH,IAEE8sF,GAAmB5sN,EAAAA,EAAAA,KAAamN,IACpC2yH,EAAS,CAAE7hI,KAAM,aAAcwhI,QAAStyH,EAAEC,OAAOH,OAAQ,GACxD,CAAC6yH,IAEE+sF,GAAoB7sN,EAAAA,EAAAA,KAAamN,IACrC2yH,EAAS,CAAE7hI,KAAM,cAAewhI,QAAStyH,EAAEC,OAAOH,OAAQ,GACzD,CAAC6yH,IAEE+rF,GAAsB7rN,EAAAA,EAAAA,KAAamN,IACvC2yH,EAAS,CAAE7hI,KAAM,gBAAiBwhI,QAAS7pE,EAAY34D,MAAM0uF,GAAYA,EAAQC,OAASz+E,EAAEC,OAAOH,SAAS,GAC3G,CAAC2oD,EAAakqE,IAEXgtF,GAAuB9sN,EAAAA,EAAAA,KAAamN,IACxC2yH,EAAS,CAAE7hI,KAAM,iBAAkBwhI,QAAStyH,EAAEC,OAAOH,OAAQ,GAC5D,CAAC6yH,IAEEitF,GAAuB/sN,EAAAA,EAAAA,KAAamN,IACxC2yH,EAAS,CAAE7hI,KAAM,iBAAkBwhI,QAAStyH,EAAEC,OAAOH,OAAQ,GAC5D,CAAC6yH,IAEEktF,GAAoBhtN,EAAAA,EAAAA,KAAamN,IACrC2yH,EAAS,CAAE7hI,KAAM,cAAewhI,QAAStyH,EAAEC,OAAOH,OAAQ,GACzD,CAAC6yH,IAEE5oE,GAAoBl3D,EAAAA,EAAAA,KAAamN,IACrC,IAAI,MAAEF,GAAUE,EAAEC,OAClBH,EAAS,IAAGA,EAAMynD,QAAQ,MAAO,MAC7B+3J,EAASxiN,UACXwiN,EAASxiN,QAAQgD,MAAQA,GAE3B6yH,EAAS,CAAE7hI,KAAM,cAAewhI,QAASxyH,GAAQ,GAChD,CAAC6yH,IAEEmtF,GAAuBjtN,EAAAA,EAAAA,KAAamN,IACxC2yH,EAAS,CAAE7hI,KAAM,iBAAkBwhI,QAAStyH,EAAEC,OAAOH,OAAQ,GAC5D,CAAC6yH,KAEE,WAAEimF,GAAe1sJ,EACvB,OACE98D,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,gBACbqC,EAAAA,GAAAC,cAAA,YACGiqN,EACClqN,EAAAA,GAAAC,cAAA,WACED,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,2BACb+B,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRgG,IAAK0iD,EACL/oD,MAAO9S,EAAQ,sCACfiT,SAAUi/M,EACVz/M,MAAOosD,EAAM6rJ,YACb7vJ,UAAU,OACV9tB,SAAU,EACVklB,MAAOs5J,EAAWb,aAAexqN,EAAK46G,YAAYywG,EAAWb,eAE/D3oN,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO9S,EAAQ,sCACfiT,SAAUk/M,EACV1/M,MAAOosD,EAAM8rJ,YACb9vJ,UAAU,OACV9tB,SAAU,EACVklB,MAAOs5J,EAAWZ,aAAezqN,EAAK46G,YAAYywG,EAAWZ,eAE/D5oN,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO9S,EAAQ,kCACfiT,SAAUm/M,EACV3/M,MAAOosD,EAAM+rJ,KACb/vJ,UAAU,OACV9tB,SAAU,EACVklB,MAAOs5J,EAAWX,MAAQ1qN,EAAK46G,YAAYywG,EAAWX,QAExD7oN,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO9S,EAAQ,mCACfiT,SAAUo/M,EACV5/M,MAAOosD,EAAMA,MACbhE,UAAU,OACV5I,MAAOs5J,EAAW1sJ,OAAS3+D,EAAK46G,YAAYywG,EAAW1sJ,SAEzD98D,EAAAA,GAAAC,cAACwvN,GAAAA,EAAM,CACL1+M,MAAO9S,EAAQ,0BACfiT,SAAUo+M,EACV5+M,MAAOosD,EAAMgsJ,YACb4G,SAAU1gN,SAAQ,GAClBtL,GAAG,mBACHwsD,MAAOs5J,EAAWV,aAAe3qN,EAAK46G,YAAYywG,EAAWV,aAC7D1xM,IAAK43M,EACLhkL,SAAU,GAETquB,EAAYj5D,KAAI,EAAGkvF,cAAa/sF,OAAM8sF,UACrCrvF,EAAAA,GAAAC,cAAA,UACEyQ,MAAO2+E,EACP1xF,UAAU,cACVwT,SAAUk+E,IAASvyB,EAAMgsJ,aAExBx5H,GAAe/sF,MAKtBvC,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO9S,EAAQ,iCACfiT,SAAUq/M,EACV7/M,MAAOosD,EAAMisJ,SACbjwJ,UAAU,OACV9tB,SAAU,EACVklB,MAAOs5J,EAAWT,UAAY5qN,EAAK46G,YAAYywG,EAAWT,kBAG5DlqN,EACFoxN,GAAYF,GAAaC,EACzBhwN,EAAAA,GAAAC,cAAA,UAAKhC,EAAQ,iCACXY,EACFoxN,GACAjwN,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO9S,EAAQ,uBACfiT,SAAUs/M,EACV9/M,MAAOosD,EAAMra,SACbqW,UAAU,OACV9tB,SAAU,EACVklB,MAAOs5J,EAAW/mK,UAAYtkD,EAAK46G,YAAYywG,EAAW/mK,YAG5DstK,GACA/vN,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO9S,EAAQ,mCACfiT,SAAUu/M,EACV//M,MAAOosD,EAAMkmE,MACblqE,UAAU,QACV9tB,SAAU,EACVklB,MAAOs5J,EAAWxmF,OAAS7kI,EAAK46G,YAAYywG,EAAWxmF,SAGzDgtF,GACAhwN,EAAAA,GAAAC,cAACmR,EAAAA,EAAS,CACRL,MAAO9S,EAAQ,8BACfiT,SAAUypD,EACVjqD,MAAOosD,EAAM3C,MACbrB,UAAU,MACV9tB,SAAU,EACVklB,MAAOs5J,EAAWrvJ,OAASh8D,EAAK46G,YAAYywG,EAAWrvJ,OACvD/iD,IAAK84M,IAGTlwN,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACP/iD,MAAO9S,EAAQ,uBACfkwF,SAAUlwF,EAAQ,2BAClBwsC,QAASz7B,QAAQ8tD,EAAMwsJ,UACvBt+K,SAAU,EACV95B,SAAUw/M,KAGV,IC1KJC,GAAmB,SACnBC,GAAkB,cAElBC,GAAsB,IAAI3jI,IAAI,CAACyjI,GAAkBC,KAsjBvD,IAAepzN,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,KACJo7M,EAAI,KACJz8E,EAAI,gBACJg/E,EAAe,MACf3/J,EAAK,kBACL4gK,EAAiB,aACjB7vJ,EAAY,UACZ4J,EAAS,kBACTkmJ,EAAiB,uBACjBC,EAAsB,kBACtBC,EAAiB,gBACjBC,EAAe,IACf92M,IACE9H,EAAAA,EAAAA,KAAeJ,GAAQ6uD,SAErB,QAAE8oJ,EAAO,aAAEsH,EAAY,eAAEC,GAAmB9D,GAAQ,CAAC,EACrDj0J,EAAcnnD,EAAOmnD,YAAYg6B,QAEvC,IAAIg+H,EAAe/D,GAAM8D,gBACpBC,GAAgBj3M,IACnBi3M,EAAej3M,EAAIklH,WA7kBG,oCA6kB+BsxF,QAAkB/xN,GAGzE,MAAM6T,EAAOuuD,GAAgB,WAAYA,GAAe9uB,EAAAA,EAAAA,KAAWjgC,EAAQ+uD,EAAa1wD,aAAW1R,EAC7FyyN,EAAkBtiN,QAAQ66M,KAAawH,IAAiBR,GAAoBrjI,IAAI6jI,MAChF,mBAAExC,EAAkB,YAAEC,EAAW,QAAEC,GAAaoC,GAAgB,CAAC,EACjErhK,EAAMw9J,GAAM55J,OAAQxhB,EAAAA,EAAAA,KAAWhgC,EAAQo7M,EAAK55J,YAAS70D,EACrDm+D,GAAU1xB,EAAAA,EAAAA,IAAgBwkB,GAEhC,MAAO,CACL+gF,OACAn+H,OACAm9M,kBACAuB,eAAgBC,EAChBC,kBACAhE,OACAzD,UACAgF,qBACAC,cACAC,UACA7+J,QACA4gK,kBAAmBA,GAAqB12M,EACxCiwM,iBAAkBr7M,SAASoiN,GAAkBh3M,GAC7Ci/C,cACAwR,YACAs/I,mBAAoBn7M,QAAQ6gN,GAAiB9vN,QAC7CwxN,iBAAkBP,GAAwB1oB,MAC1CkpB,SAAUT,GAAmBrtN,GAC7B+tN,mBAAoBR,GAAmBS,WACvCR,kBACAl0J,UACD,GArDe/qD,EAnhB4B0/M,EAC9CttN,SACAQ,UACAgsI,OACAg/E,kBACAvC,OACAgE,kBACAzH,UACAuH,iBACAvC,qBACAC,cACAC,UACA+B,oBACA5gK,QACAmJ,cACA8wJ,qBACAt/I,YACA0mJ,mBACAC,WACApH,mBACAqH,qBACAP,kBACA7G,mBACArtJ,cAEA,MAAM,iBACJ40J,EAAgB,sBAChBC,EAAqB,gBACrBC,EAAe,eACfxH,EAAc,oBACdyH,EAAmB,kBACnBtE,EAAiB,wBACjBuE,EAAuB,uBACvBC,IACEliN,EAAAA,EAAAA,MAEE9R,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MAENqyD,EAAa1nB,EAAWC,IAAcxqC,EAAAA,EAAAA,MACtC0zN,EAAcC,IbyHdtvD,EAAAA,GAAAA,GAAW8mD,GAAS5mF,KaxHpBlsG,EAAWspF,IAAgBjwG,EAAAA,EAAAA,KAAS,IACpCirE,EAAeC,IAAoBlrE,EAAAA,EAAAA,KAAS,IAC5CkiN,EAAeC,IAAoBniN,EAAAA,EAAAA,IAAS,IAC7CoiN,IAAW95L,EAAAA,EAAAA,GAAsBq4G,GAAM,GACvC0hF,IAAgB/5L,EAAAA,EAAAA,GAAsBqyC,GACtC2nJ,GAAkB3hF,IAASu6E,EAAAA,GAAY8B,eAEvCuF,IAAUhvN,EAAAA,EAAAA,KAAaivN,IAC3BpI,EAAe,CAAEz5E,KAAM6hF,GAAW,GACjC,CAACpI,KAEJ7rN,EAAAA,EAAAA,KAAU,KACJ4F,IACFguN,EAAiB,IACjBT,IACA7oL,IACF,GACC,CAAC1kC,EAAQutN,EAAkB7oL,KAG9BtqC,EAAAA,EAAAA,KAAU,MACH4F,GAAUosD,GACbznB,GACF,GACC,CAACA,EAAYynB,EAAapsD,KAE7B5F,EAAAA,EAAAA,KAAU,WACKI,IAATgyI,GAAsB3gF,IACxBiwD,GAAa,EACf,GACC,CAAC0wB,EAAM3gF,EAAO2a,KAGjBpsE,EAAAA,EAAAA,KAAU,KAENoyI,IAASu6E,EAAAA,GAAYxB,UAClB/4E,IAASyhF,IACTznJ,IAAc0nJ,IACbL,EAAaxI,mBACbwI,EAAaxJ,YAEjB+J,GAAQrH,EAAAA,GAAYE,YACtB,GACC,CAAC4G,EAAaxJ,WAAYwJ,EAAaxI,kBAAmB6I,GAAeD,GAAUznJ,EAAW4nJ,GAAS5hF,KAE1GpyI,EAAAA,EAAAA,KAAU,KACJyxD,GAAOyiK,OACTR,EAAgB,CACdzwN,KAAM,gBACNwhI,QAAS,CACP,CAAChzE,EAAMyiK,OAAQziK,EAAMm9J,aAG3B,GACC,CAACn9J,EAAOiiK,KAEX1zN,EAAAA,EAAAA,KAAU,KACR,GAAI6uN,GAAMsF,UAAW,CACnB,MACErwN,KAAMkgD,EAAQ,MAAE0X,EAAK,MAAE6oE,EAAK,gBAAE6nF,GAC5ByC,EAAKsF,WACH,YACJ9J,KAAgB+J,GACdhI,GAAmB,CAAC,EAClBiI,EAAkBhK,GAAezvJ,EAAY34D,MAAK,EAAG2uF,UAAWA,IAASy5H,IAAcx5H,YAC7F6iI,EAAgB,CACdzwN,KAAM,iBACNwhI,QAAS,CACPzgF,WACA0X,MAAOA,GAA6B,MAApBA,EAAM44J,OAAO,GACxB,IAAG54J,IACJA,EACJ6oE,WACI8vF,GAAmB,CACrB1jI,QAAS0jI,EACThK,iBACG+J,KAIX,IACC,CAACvF,EAAM6E,EAAiB94J,KAE3B56D,EAAAA,EAAAA,KAAU,KACJ2rN,GAAkBrqN,QACpBoyN,EAAgB,CACdzwN,KAAM,0BACNwhI,QAASknF,EAAiB,GAAG1mN,IAEjC,GACC,CAACyuN,EAAiB/H,IAErB,MAAM4I,IAAwBvvN,EAAAA,EAAAA,KAAY,KACxCgqN,GAAmB,GAClB,CAACA,IAEEzD,IAAaprN,EAAAA,EAAAA,KAAQ,IACrBiyI,IAASu6E,EAAAA,GAAYxB,SAChB,EA0cb,SACEoC,EAA4B,GAC5B6D,EACAoD,EACAxJ,GAEA,MAAMK,EAAiB+F,EACnBqD,GAAkBrD,EAAiBoD,GACnC,GACJ,IAAIt8D,EAAQ8yD,EAKZ,OAHA9yD,EADoBq1D,EAAOv+H,OAAOq8H,GAAkB,IAChC/qN,QAAO,CAACisD,EAAKmoK,IACxBnoK,EAAMmoK,EAAIrxN,QAChB60J,GACIA,CACT,CAtdWy8D,CAAcvJ,GAASmC,OAAQ6D,EAAiBqC,EAAalJ,SAAUkJ,EAAazI,YAC1F,CAAC54E,EAAMg5E,GAASmC,OAAQ6D,EAAiBqC,EAAalJ,SAAUkJ,EAAazI,YAE1EM,IAAenrN,EAAAA,EAAAA,KAAQ,KAC3B,GAAIiyI,IAASu6E,EAAAA,GAAYxB,SAGzB,OAidJ,SAAyB9sJ,EAAkB+yJ,EAA+CjF,GACxF,MAAMyI,EdxpBD,SAA4B3K,GACjC,MAAMsF,EAAWvF,GAAeC,GAChC,OAAON,GAAM4F,IAAuB,EACtC,CcqpBuBsF,CAAmBx2J,EAAM4rJ,YACxCiC,EAAgB0I,GAAgBv2J,EAAM4rJ,WAAc,GAAE2K,MAAiBv2J,EAAM4rJ,WAAW5oK,OAAO,UAAOjhD,EACtGgsN,EAAkB/tJ,EAAM6rJ,YACzB,GAAE7rJ,EAAM6rJ,gBAAgB7rJ,EAAM+rJ,SAAS/rJ,EAAMgsJ,mBAC9CjqN,GACE,MAAEs7D,EAAO1X,SAAUlgD,GAASu6D,EAC5Bm2J,EAAiBpD,EAAkB0D,GAAmB1D,EAAiB/yJ,EAAMksJ,eAAYnqN,EACzFisN,EAAiBmI,GAAgB7tN,MACvC,MAAO,CACLulN,gBACAC,kBACAC,kBACAtoN,OACA43D,QACA2wJ,iBAEJ,CAleW0I,CAAgBtB,EAAcrC,EAAiBuB,GAAkB,GAAG,GAC1E,CAACvgF,EAAMqhF,EAAcrC,EAAiBuB,IAEnCqC,IAAqBhwN,EAAAA,EAAAA,KAAY,KACrCgvN,GAAQrH,EAAAA,GAAYE,YAAY,GAC/B,CAACmH,KAEEiB,IAA0BjwN,EAAAA,EAAAA,KAAY,KAC1CgqN,GAAmB,GAClB,CAACA,IAyBEkG,IAAWlwN,EAAAA,EAAAA,KAAY,KAC3BquN,EAAgB,CACd8B,iBAAkB1B,EAAalJ,SAC/BO,gBAAiB2I,EAAa3I,gBAC9BG,kBAAmBwI,EAAaxI,kBAChCD,UAAWyI,EAAazI,WACxB,GACD,CAACqI,EAAiBI,IAEf2B,IAA0BpwN,EAAAA,EAAAA,KAAaokE,IAC3C,MAAM,YAAEisJ,GAAgBjsJ,EACxBoqJ,EAAuB6B,GACvBH,IAAU,GACT,CAACA,KA4FEI,IAAkBtwN,EAAAA,EAAAA,KAAY,KAClC,MAAM,SAAE6lN,GAAa4I,EACf8B,EAuVV,SAAwB9B,GACtB,MAAM,YACJvJ,EAAW,YACXC,EAAW,KACXC,EAAI,MACJ/rJ,EAAK,YACLgsJ,EAAW,SACXC,EACAtmK,SAAUlgD,EAAI,MACd43D,EAAK,MACL6oE,GACEkvF,EAWJ,MAAO,CACL3vN,OACA43D,QACA6oE,QACA6nF,gBAbsB,CACtBlC,cACAC,cACAC,OACA/rJ,QACAgsJ,cACAC,YASJ,CAnXwBkL,CAAe/B,GACnCL,EAAsB,CAAEmC,cAAa1K,YAAW,GAC/C,CAACuI,EAAuBK,IAErBgC,IAAkBzwN,EAAAA,EAAAA,KAAY,KAClC,MAAMqwN,EA4XV,SAAwB5B,GACtB,MAAM,WACJxJ,EAAU,WAAEO,EAAU,OAAEC,EAAM,IAAEC,EAAG,eAAEC,EAAc,WAAEC,GACnD6I,GACGiC,EAAaC,GAAclL,EAAO5tI,MAAM,KAW/C,MAAO,CACL7/D,KAXW,CACXitM,aACAO,aACAkL,cACAC,aACAjL,MACA/5H,QAASg6H,EACTiL,IAAKhL,GAMT,CA9YwBiL,CAAepC,GACnCH,EAAoB,CAClB+B,eACA,GACD,CAAC/B,EAAqBG,IAEnBvgH,IAAoBrhG,EAAAA,EAAAA,IAAgB,KACxC,OAAQugI,GACN,KAAKu6E,EAAAA,GAAYI,aACfrrG,GAAa,GACb4zG,KACA,MAEF,KAAK3I,EAAAA,GAAYM,SACf+G,GAAQrH,EAAAA,GAAYxB,UACpB,MAEF,KAAKwB,EAAAA,GAAYC,cACfoH,GAAQrH,EAAAA,GAAYmJ,iBACpB,MAEF,KAAKnJ,EAAAA,GAAYmJ,gBACf,GAAsB,KAAlBnC,EACF,OAGFjyG,GAAa,GACb6xG,EAAwB,CAAEv5G,SAAU25G,IACpC,MAEF,KAAKhH,EAAAA,GAAYE,YACfnrG,GAAa,GACb+zG,KACA/B,EAAgB,CAAEzwN,KAAM,0BAA2BwhI,QAAS,KAC5D,MAEF,KAAKkoF,EAAAA,GAAYxB,SAAU,CACzB,GAAIS,EAGF,OAFAlqG,GAAa,QACbsyG,GAAQrH,EAAAA,GAAY8B,gBAItB,GAAII,GAAMsF,YAAc/nJ,IAAcqnJ,EAAalJ,SAGjD,OAFA7oG,GAAa,QACb4zG,KAIF,GACE7B,EAAaxI,qBACR+H,GAAsBA,GAAuB/iM,KAAKC,MAAQ,IA5VvC,GA+VxB,YADA8jM,GAAQrH,EAAAA,GAAYmJ,iBAItB,IACGrC,EAAaxI,oBAEX0H,IAAmBT,KAAqBa,GACrCJ,IAAmBR,KAAoBW,GAI7C,YADAkB,GAAQrH,EAAAA,GAAYE,aAItB,MAAM,MAAEnxJ,EAAK,MAAE6oE,EAAK,SAAEvgF,GAAayvK,EAC7BsC,EAA2B3K,GAAS4K,mBAAqBzxF,GACzD6mF,GAAS6K,mBAAqBv6J,GAC9B0vJ,GAAS8K,kBAAoBlyK,EAEnC,GAAKonK,GAAS+K,6BAA+B/pJ,GAAc2pJ,EAEzD,YADA/B,GAAQrH,EAAAA,GAAYI,cAItB,GAAI3B,GAAS+K,6BAA+B1C,EAAalJ,UAAY6G,GAAiB9vN,OAEpF,YADA0yN,GAAQrH,EAAAA,GAAYM,UAItBvrG,GAAa,GACbwzG,KACA,KACF,EACF,KAGFl1N,EAAAA,EAAAA,KAAU,IACDoyI,IAASu6E,EAAAA,GAAYmJ,iBACxB15K,EAAAA,GAAAA,GAAyB,CAAE7pC,QAAS2gG,UACpC9yG,GAEN,CAAC8yG,GAAmBk/B,IAEpB,MAAMn4D,IAAmBj1E,EAAAA,EAAAA,KAAY,KACnC0uN,EAAgB,CACdzwN,KAAM,eAER05E,GAAiB,GACjBv2E,GAAS,GACR,CAACA,EAASstN,IAEPtiJ,IAAkBpsE,EAAAA,EAAAA,KAAY,KAClCgvN,GAAQ5hF,IAASu6E,EAAAA,GAAYmJ,gBAAkBnJ,EAAAA,GAAYC,cAAgBD,EAAAA,GAAYxB,SAAS,GAC/F,CAAC6I,GAAS5hF,IAEPgkF,IAAcj2N,EAAAA,EAAAA,KAAQ,KAC1B,OAAQiyI,GACN,KAAKu6E,EAAAA,GAAYxB,SACf,OAAO3rN,EAAQ,mBACjB,KAAKmtN,EAAAA,GAAYI,aACf,OAAOvtN,EAAQ,uBACjB,KAAKmtN,EAAAA,GAAYM,SACf,OAAOztN,EAAQ,yBACjB,KAAKmtN,EAAAA,GAAYC,cACf,OAAOptN,EAAQ,yBACjB,KAAKmtN,EAAAA,GAAYmJ,gBACf,OAAOt2N,EAAQ,gCACjB,KAAKmtN,EAAAA,GAAYE,YACf,OAAOrtN,EAAQ,mBACjB,KAAKmtN,EAAAA,GAAY8B,eACf,OAAOjvN,EAAQ,kCACjB,QACE,MAAO,GACX,GACC,CAAC4yI,EAAM5yI,IAEJyG,GAAamsI,IAASu6E,EAAAA,GAAYxB,SACpC3rN,EAAQ,qBAAqBspF,EAAAA,GAAAA,GAAuByiI,GAAYH,EAAS9nN,SAAU9D,EAAQ85D,OAC3F55D,EAAK,mBAwBT,GAAImzN,EACF,OACEtxN,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,UAAU,QACV0G,OAAQosD,EACR5rD,QAASmkC,EACTn5B,oBAAqB6oE,IAErB14E,EAAAA,GAAAC,cAAA,SAAG,0EAC2ED,EAAAA,GAAAC,cAAA,WAAM,iDAGpFD,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLE,QAAM,EACNnE,QAASgrC,GAER/qC,EAAQ,SAOnB,MAAM62N,GA9CN,WACE,GAAIj+L,EACF,OAAO,EAGT,OAAQg6G,GACN,KAAKu6E,EAAAA,GAAYxB,SACf,OAAO56M,QAAQ66M,GAASW,YAAcrvI,EAExC,KAAKiwI,EAAAA,GAAYE,YACf,OAAOt8M,QACuB,KAA5BkjN,EAAaxJ,YACTmG,GAAkD,KAA5BqD,EAAajJ,YACf,KAArBiJ,EAAa/I,KACW,KAAxB+I,EAAahJ,QAGpB,QACE,OAAO,EAEb,CA0ByB6L,GAEzB,OACE/0N,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,WAAWuC,EAAAA,GAAAA,GAAe,eAAgB2pN,GAASmL,aAAe,aAClE3wN,OAAQosD,EACR5rD,QAASmkC,EACTn5B,oBAAqB6oE,IAErB14E,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,SAASyD,IAAKnD,EAAQoD,MAAQ,WAAQxC,GACnDmB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,eACV0T,MAAM,cACNwE,OAAK,EACLlU,KAAK,UACL3D,QAAS6yI,IAASu6E,EAAAA,GAAYxB,SAAW5gL,EAAa6mC,GACtD/5D,UAAU,SAEV9V,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAMsuI,IAASu6E,EAAAA,GAAYxB,SAAW,QAAU,gBAExD5pN,EAAAA,GAAAC,cAAA,UAAK40N,UAEGh2N,IAATgyI,EACC7wI,EAAAA,GAAAC,cAACm/B,GAAAA,GAAU,CACT78B,KAAK,QACL88B,UAAWwxG,EACXrQ,eAAa,EACby0F,eAAgB7J,EAAAA,GAAY8B,gBAE5BltN,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,yBAlTvB,SAA4Bu3N,GAC1B,OAAQA,GACN,KAAK9J,EAAAA,GAAYxB,SACf,OACE5pN,EAAAA,GAAAC,cAAC2pN,GAAQ,CACPxkN,MAAOkoN,EAAMloN,MACb+K,YAAam9M,EAAMn9M,YACnB9J,MAAOinN,EAAMjnN,MACbk9H,SAAU4uF,EACVrI,eAAgBoI,EAAalJ,UAAY6G,EACrCqD,GAAkBrD,EAAiBqC,EAAalJ,eAChDnqN,EACJmrN,WAAYA,GACZH,QAASA,EACTE,aAAcA,GACdM,iBAAkBA,EAClBF,mBAAoBA,EACpBV,UAAWyI,EAAazI,UACxBS,YAAal7M,QAAQ66M,GAAS+K,4BAC9BxK,iBAAkBA,EAClBjvI,cAAeA,EACf8uI,YAAa7uI,EACbpe,QAASA,IAGf,KAAKouJ,EAAAA,GAAYC,cACf,OACErrN,EAAAA,GAAAC,cAAC0vN,GAAuB,CACtB7yJ,MAAOo1J,EACP9H,iBAAkBA,EAClB7mF,SAAU4uF,EACVvC,eAAgB6D,KAGtB,KAAKrI,EAAAA,GAAYmJ,gBACf,OACEv0N,EAAAA,GAAAC,cAACstN,GAAe,CACdzwJ,MAAOo1J,EACP9H,iBAAkBA,EAClBoD,iBAAkB6E,EAClB30N,SAAUw3N,IAAgBrkF,IAGhC,KAAKu6E,EAAAA,GAAYE,YACf,OACEtrN,EAAAA,GAAAC,cAACqrN,GAAW,CACVxuJ,MAAOo1J,EACP3uF,SAAU4uF,EACVvD,mBAAoB5/M,SAASs+M,EAAM6H,mBAAqB7H,EAAMsB,oBAC9DC,mBAAoBA,EACpBC,YAAaA,EACbC,QAASA,EACT11J,YAAaA,IAGnB,KAAK+xJ,EAAAA,GAAYI,aACf,OACExrN,EAAAA,GAAAC,cAACurN,GAAY,CACX1uJ,MAAOo1J,EACP3uF,SAAU4uF,EACVjI,YAAal7M,QAAQ66M,GAAS+K,4BAC9B7E,UAAW/gN,QAAQ66M,GAAS4K,kBAAoB5K,GAASuL,uBACzDpF,UAAWhhN,QAAQ66M,GAAS6K,kBAAoB7K,GAASwL,uBACzDpF,SAAUjhN,QAAQ66M,GAAS8K,iBAC3Bt7J,YAAaA,IAGnB,KAAK+xJ,EAAAA,GAAYM,SACf,OACE1rN,EAAAA,GAAAC,cAACyrN,GAAQ,CACP5uJ,MAAOo1J,EACP3uF,SAAU4uF,EACVtC,gBAAiBA,GAAmB,GACpC9tN,SAAU8nN,EAAS9nN,WAGzB,KAAKqpN,EAAAA,GAAY8B,eACf,OACEltN,EAAAA,GAAAC,cAACitN,GAAc,CACb9yM,IAAK02M,EACL3D,WAAY+D,EACZ9D,oBAAqByG,GACrBhvN,QAASmkC,IAGf,QACE,OAEN,CA2NWssL,CAAmBzkF,KAIxB7wI,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iBACbqC,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAO,CAACxZ,MAAM,UAGlBmhN,IACCxyN,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,UACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,cACV+D,KAAK,SACL1D,QAAS2zG,GACT9uF,SAAUiyM,GACVj+L,UAAWA,GAEVnyB,KAINwrD,IAAUA,EAAMyiK,OA9WrB,WACE,GAAKziK,EAGL,OACElwD,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,UAAU,QACV0G,OAAQ2K,QAAQkhD,GAChBrrD,QAASmuN,IAEThzN,EAAAA,GAAAC,cAAA,UAAKiwD,EAAMqlK,eAAiBp3N,EAAK46G,YAAY7oD,EAAMqlK,gBAAkBp3N,EAAK,qBAC1E6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,uBACbqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLE,QAAM,EACNnE,QAAS01N,IAERz1N,EAAQ,QAKnB,CAyV8Bu3N,GACpB,KA6DZ,SAASjC,GAAmB1D,EAAmC4F,GAC7D,OAAO5F,EAAgBnvN,MAAK,EAAGgD,QAASA,IAAO+xN,GACjD,CAEA,SAASvC,GAAkBrD,EAAmCoD,GAC5D,MAAMh0N,EAASs0N,GAAmB1D,EAAiBoD,GACnD,OAAOh0N,GAAQ+sN,MACjB,CCzoBA,MA+DA,IAAexuN,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAM,QAAEwjN,IAAYpjN,EAAAA,EAAAA,KAAeJ,GAAQ6uD,QAE3C,MAAO,CACL20J,UACD,GANezjN,EA/D4B0jN,EAC9CtxN,SACAQ,UACA6wN,cAEA,MAAMv3N,GAAOC,EAAAA,GAAAA,MAENqyD,EAAa1nB,EAAWC,IAAcxqC,EAAAA,EAAAA,MAE7CC,EAAAA,EAAAA,KAAU,KACJ4F,GACF0kC,GACF,GACC,CAAC1kC,EAAQ0kC,IAEZ,MAAM6sL,GAAcjgH,EAAAA,GAAAA,GAAY+/G,GAC1BG,EAAmBH,GAAWE,EAE9B7L,GAAenrN,EAAAA,EAAAA,KAAQ,KAC3B,GAAKi3N,EACL,OAqDJ,SAAyBlL,EACvB3xL,EAKA8xL,GACA,IAAK9xL,EACH,MAAO,CAAE2xL,iBAEX,MAAM,gBAAEE,GAAoB7xL,EACtB88L,EAAcjL,GAAiBlC,YAChC,GAAEkC,EAAgBlC,gBAAgBkC,EAAgBhC,SAASgC,EAAgB/B,mBAC5EjqN,GACE,MAAEs7D,EAAK,KAAE53D,GAASy2B,EACxB,MAAO,CACL2xL,gBACAE,gBAAiBiL,EACjBvzN,OACA43D,QACA2wJ,iBAEJ,CA3EW0I,CAAgBqC,EAAiBE,iBAAkBF,EAAiB78L,KAAM68L,EAAiB/K,eAAe,GAChH,CAAC+K,IAEJ,OACE71N,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,UAAU,oCACV0G,OAAQosD,EACR5rD,QAASmkC,EACTn5B,oBAAqBhL,GAEpBgxN,GACC71N,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,SAASyD,IAAKjD,EAAKkD,MAAQ,WAAQxC,GAChDmB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,eACV0T,MAAM,cACNwE,OAAK,EACLlU,KAAK,UACL3D,QAASgrC,EACTlzB,UAAU,SAEV9V,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEbvC,EAAAA,GAAAC,cAAA,UAAI,IAAE9B,EAAK,kBAAkB,MAE/B6B,EAAAA,GAAAC,cAAA,OAAKtC,UAAU,iCACbqC,EAAAA,GAAAC,cAAC2pN,GAAQ,CACPE,eAAgB+L,EAAiB/L,eACjCE,WAAY6L,EAAiBG,YAC7BvM,UAAWoM,EAAiBpM,UAC5BI,QAASgM,EAAiBhM,QAC1BE,aAAcA,EACd3kN,MAAOywN,EAAiBzwN,MACxB+K,YAAa0lN,EAAiB1lN,YAC9B9J,MAAOwvN,EAAiBxvN,UAK1B,KCtFZ,GAA4E,WAA5E,GAA+F,WCuM/F,IAAe7I,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KAClB,CAACC,GAAU05B,YAGF,CACLl5B,KAHWk5B,GAAOr7B,QAAS4hC,EAAAA,EAAAA,KAAWjgC,EAAQ05B,EAAMr7B,aAAU1R,KAFhDoT,EAnKkCgkN,EACpDrqL,QACAl5B,WAEA,MAAM,mBAAEwjN,EAAkB,wBAAEC,EAAuB,iBAAEnyL,IAAqBj0B,EAAAA,EAAAA,OACpE,aAAEqmN,GAAiBxqL,GAAS,CAAC,EAE7BztC,GAAOD,EAAAA,EAAAA,MACNszF,EAAmB6kI,IAAwBnmN,EAAAA,EAAAA,IAAmB,IAE/D+3B,GAAUrpC,EAAAA,EAAAA,KAAQ,IAAMw3N,GAAch2N,KAAK6xC,GAASA,EAAKvuC,MAAO8iC,GAAAA,GAAkB,CAAC4vL,KAClFE,EAAiBC,IAAiB33N,EAAAA,EAAAA,KAAQ,KAC/C,IAAKw3N,GAAcr2N,OAAQ,MAAO,CAAC,GAAI,IACvC,MAAOy2N,EAAmBC,IAAc1rF,EAAAA,GAAAA,IAAUqrF,GAAenkL,GAASA,EAAKykL,8BAC/E,MAAO,CAACF,EAAkBp2N,KAAK6xC,GAASA,EAAKvuC,KAAK+yN,EAAWr2N,KAAK6xC,GAASA,EAAKvuC,KAAI,GACnF,CAAC0yN,IAEEO,GAA0B/3N,EAAAA,EAAAA,KAAQ,IAC/Bw3N,GAAct2L,QAAQmS,GAASA,EAAK2kL,4BAA8B3kL,EAAKykL,8BAC3Et2N,KAAK6xC,GAASA,EAAKvuC,MACrB,CAAC0yN,IAEES,GAAyBj4N,EAAAA,EAAAA,KAAQ,KACrC,GAAKw3N,EACL,OAAQA,EAAa/qH,MAAMp5D,GAASA,EAAK2kL,6BAA+B3kL,EAAKykL,6BAA4B,GACxG,CAACN,IAEEU,GAAel4N,EAAAA,EAAAA,KAAQ,KAC3B,MAAMgC,GAAQgwC,EAAAA,EAAAA,MAAYhwC,MAAM+nC,KAChC,OAAOguL,GAAyBv2N,KAAKsD,GAAO9C,EAAM8C,IAAI,GACrD,CAACizN,KAEJl4N,EAAAA,EAAAA,KAAU,KACR43N,EAAqBE,EAAc,GAClC,CAACA,IAEJ,MAAMl5L,GAAc/sB,EAAAA,EAAAA,IAAgB,IAAM6lN,MAEpCY,GAAuBtzN,EAAAA,EAAAA,KAAY,KACvCyyN,EAAmB,CAAE3lN,OAAQmC,EAAMhP,GAAIukC,QAASupD,IAChD2kI,GAAyB,GACxB,CAAC3kI,EAAmB9+E,IAEjBk/H,GAAyBnuI,EAAAA,EAAAA,KAAY,KACzCugC,GAAkB,GACjB,IAEGgzL,GAAoBp4N,EAAAA,EAAAA,KAAQ,KAChC,GAAK8T,EACL,OAAO1D,QAAQ0D,GAAMoxG,WAAapxG,GAAMsmM,aAAaj2F,YAAY,GAChE,CAACrwG,IAEEukN,GAAoBr4N,EAAAA,EAAAA,KAAQ,IACzBo4N,EACH74N,EAA8B,IAAzBi4N,GAAcr2N,OAAe,0BAA4B,4BAC9D5B,EAAK,yBAA0Bi4N,GAAcr2N,SAChD,CAACi3N,EAAmB74N,EAAMi4N,GAAcr2N,SAErCm3N,GAAqBt4N,EAAAA,EAAAA,KAAQ,KACjC,IAAK+3N,GAAyB52N,SAAW+2N,GAAc/2N,OAAQ,OAC/D,MAAM6qG,EAASisH,EAAyB,8BAAgC,uBACxE,IAAI9xL,EAAW,GAAE6lE,OACbhlG,EAAS,EAAC0lC,EAAAA,EAAAA,IAAgBwrL,EAAa,KAgB3C,OAfuC,IAAnCH,EAAwB52N,QAC1BglC,EAAW,GAAE6lE,OACbhlG,EAAS,EAAC0lC,EAAAA,EAAAA,IAAgBwrL,EAAa,KAAKxrL,EAAAA,EAAAA,IAAgBwrL,EAAa,MAC7B,IAAnCH,EAAwB52N,QACjCglC,EAAW,GAAE6lE,SACbhlG,EAAS,EAAC0lC,EAAAA,EAAAA,IAAgBwrL,EAAa,KAAKxrL,EAAAA,EAAAA,IAAgBwrL,EAAa,KAAKxrL,EAAAA,EAAAA,IAAgBwrL,EAAa,MAClGH,EAAwB52N,OAAS,IAC1CglC,EAAW,GAAE6lE,QACbhlG,EAAS,EACP0lC,EAAAA,EAAAA,IAAgBwrL,EAAa,KAC7BxrL,EAAAA,EAAAA,IAAgBwrL,EAAa,KAC5BH,EAAyB52N,OAAS,GAAGwmF,aAInCpoF,EAAK4mC,EAASn/B,OAAQ/G,EAAWi4N,EAAa/2N,OAAO,GAC3D,CAAC42N,EAAyBE,EAAwB14N,EAAM24N,IAErDK,EAAoBnoN,QAAQ8nN,GAAc/2N,QAC1Cq3N,EAAuBpoN,QAAQunN,GAAex2N,QAEpD,OACEC,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQ2K,QAAQi5B,GAAWv1B,GAC3B3N,iBD3HoB,WC4HpBF,QAASw4B,EACToH,QAAM,GAENzkC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4T,OAAK,EACLxE,MAAM,cACN1P,KAAK,UACLhE,UDnI2C,WCoI3CmY,UAAW3X,EAAK,SAChBH,QAASq/B,GAETr9B,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAK,WAEZ20N,GACCl3N,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAACixC,GAAAA,EAAU,CACTvzC,UD5ImL,WC6InLwzC,MAAO2lL,EACPn1N,KAAK,UAEP3B,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IACQhC,EAApB64N,EAAyB,4BAAoC,mCAEhEh3N,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,KACX6B,EAAAA,GAAAA,GAAWk1N,EAAoB,CAAC,qBAEnCl3N,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4iC,qBAAmB,EACnBD,SAAO,EACPjjC,KAAK,UACL3D,QAAS4zI,GAERzzI,EAAK,mCAIXg5N,GAAqBC,GACpBp3N,EAAAA,GAAAC,cAACyF,GAAAA,EAAS,CAAC/H,UDjKmG,YCkK3GQ,EAAK,2BAGTi5N,GACCp3N,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACEloC,EAAAA,GAAAC,cAAA,MAAItC,UAAWwC,IAAehC,EAAK,uBACnC6B,EAAAA,GAAAC,cAAA,KAAGtC,UAAWwC,IACX82N,GAEHj3N,EAAAA,GAAAC,cAACqmC,GAAAA,EAAU,CACT3oC,UD5KkI,WC6KlI4oC,QAAS0B,EACTtC,YAAa6rD,EACbi6C,oBAAqB6qF,EACrBe,yBAA0Bl5N,EAAK,4BAC/B6oC,oBAAqBqvL,EACrB9pI,YAAayqI,EACb9vL,eAAa,EACbC,YAAU,EACVC,cAAc,aAEf4vL,GACCh3N,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UDzLyJ,WC0LzJgE,KAAK,UACL3D,QAAS+4N,EACTl0M,UAAW2uE,EAAkBzxF,QAE5B5B,EAAK,iCAKR,K,gBCnMZ,MCwGA,IAAeX,EAAAA,EAAAA,KAhFW85N,EACxB1rL,YAEA,MAAM,uBACJ2rL,IACExnN,EAAAA,EAAAA,MAEE5R,GAAOD,EAAAA,EAAAA,KACPwI,GAAUqnC,EAAAA,GAAAA,GAAiBnC,GAAOllC,SAAS,IAE3C,aACJyf,EAAY,qBACZE,IACEE,EAAAA,GAAAA,GAA4BvX,QAAQ48B,IAElC4rL,GAAkBlnN,EAAAA,EAAAA,IAAgB,KACtB,IAGZ+sB,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClCinN,GAAwB,IAG1B,IAAKpxM,IAAiBzf,EACpB,OAGF,MAAM+wN,GAAQC,EAAAA,EAAAA,IAAahxN,GACrB22D,GAAQuD,EAAAA,EAAAA,MAAYhwB,EAAAA,EAAAA,OACpB+mL,EAAwBx5N,EAARs5N,EAAa,0BAAkC,oCAgCrE,OACEz3N,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,GAAAA,GDtFG,WCsFyBmmB,IA/B9C,WACE,IAAK3f,GAAS2P,QACZ,OAEF,MAAM,MAAEuhN,EAAK,MAAEtxN,GAAUI,EAAQ2P,QACjC,OAAIuhN,EAEA53N,EAAAA,GAAAC,cAACm4H,GAAAA,GAAK,CACJz6H,UD/D8G,WCgE9G0/D,MAAOA,EACP32D,QAASA,EACTa,OAAQ8wH,EAAAA,GAAYw/F,aACpBtvM,UAAQ,EACRK,OAAQ4uM,EACR1uM,QAASuU,IAGJ/2B,GAAOuF,QAEd7L,EAAAA,GAAAC,cAAC63N,GAAAA,EAAU,CACTn6N,UD3EiI,WC4EjI+I,QAASA,EACTa,OAAO,eACPwwN,OAAQ16L,SANP,CAWT,CAIK26L,GACDh4N,EAAAA,GAAAC,cAAA,OAAKtC,UDxFoJ,YCyFvJqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL+jD,OAAK,EACLhoD,QAASq/B,EACT6qE,MAAI,EACJvmG,KAAK,UACL0P,MAAiB,SAAVgsD,EAAmB,OAAS,YACnC1/D,UD/F2K,YCiG1Kg6N,IAGD,ICnBV,IAAen6N,EAAAA,EAAAA,KA9DqCy6N,EAClD5zN,aAEA,MAAMpG,GAAUC,EAAAA,EAAAA,KACVC,GAAOC,EAAAA,GAAAA,MACP,mCAAE85N,EAAkC,iBAAE37J,IAAqBxsD,EAAAA,EAAAA,OAE1DooN,EAAoBC,IAAyBloN,EAAAA,EAAAA,KAAS,GAGvD0b,GAAere,EAAAA,EAAAA,IAAuB,MAEtC1I,GAAUpB,EAAAA,EAAAA,KAAY,KAC1By0N,EAAmC,CAAEC,sBAAqB,GACzD,CAACA,IAEE3yL,GAAiB/hC,EAAAA,EAAAA,KAAY,KACjC84D,EAAiB,CAAE87J,wBAAwB,IAC3CH,EAAmC,CAAEC,sBAAqB,GACzD,CAACA,IAEEG,GAAwB70N,EAAAA,EAAAA,KAAajE,KAC1B,IAAXA,GAAcgmC,GAAgB,GACjC,CAACA,IAEE3d,GAAgB0jC,EAAAA,GAAAA,GAA0B3/B,EAAcvnB,EAAQi0N,EAAuB,WAE7F,OACEt4N,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJrH,WAAWuC,EAAAA,GAAAA,GAAe,WAC1BkF,MAAOjH,EAAK,iBACZkG,OAAQA,EACRQ,QAASA,GAET7E,EAAAA,GAAAC,cAAA,SAAI9B,EAAK,4BACT6B,EAAAA,GAAAC,cAAC6zD,GAAAA,EAAQ,CACPn2D,UAAU,kBACVoT,MAAO5S,EAAK,iBACZssC,QAAS0tL,EACTpkK,QAASqkK,IAEXp4N,EAAAA,GAAAC,cAAA,OACEtC,UAAU,sBACVyZ,IAAKwU,EACL6gC,UAAW5kC,GAEX7nB,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAU,wBACVwE,QAAM,EACNnE,QAASwnC,EACTn0B,MAAM,UAELpT,EAAQ,YAEX+B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CAACtE,UAAU,wBAAwBwE,QAAM,EAACnE,QAAS6G,GACvD5G,EAAQ,YAGP,ICkDZ,IAAeT,EAAAA,EAAAA,KAAKyU,EAAAA,EAAAA,KACjBC,IACC,MAAMqmN,EAAkBrmN,EAAO8/B,WAAWumL,gBACpCC,EAAkBtmN,EAAO8/B,WAAWwmL,gBACpCC,EAAoBvmN,EAAOumN,kBAIjC,MAAO,CACLF,kBACAC,kBACAE,wBAN8BD,GAC5BvmL,EAAAA,EAAAA,KAAWhgC,EAAQumN,IAAoBphL,YAAY,IAAI2jG,cAAWn8I,EAMrE,GAZeoT,EAlGO0mN,EACzB/sL,QACA2sL,kBACAC,kBACAE,8BAEA,MAAM,wBACJE,EAAuB,QACvBxgM,IACEroB,EAAAA,EAAAA,MACE5R,GAAOC,EAAAA,GAAAA,KAEPiG,EAAS2K,QAAQ48B,GAEjBvO,GAAc/sB,EAAAA,EAAAA,IAAgB,KAClCsoN,GAAyB,IAGrBC,GAAevoN,EAAAA,EAAAA,IAAgB,KACnCsoN,IACIJ,GACFpgM,EAAQ,CAAEhe,IAAKo+M,GACjB,IAGIh0N,GAAS5F,EAAAA,EAAAA,KAAQ,IAEnBoB,EAAAA,GAAAC,cAAA,OAAKtC,UCxDc,YDyDjBqC,EAAAA,GAAAC,cAACujG,GAAAA,EAAuB,CACtB7hG,KAAM,IACNkC,OAAQC,GAAAA,EAAeg1N,WACvB70N,QAAM,IAERjE,EAAAA,GAAAC,cAAA,OAAKtC,UC9D+B,YD+DjCQ,EAAK,8BAIX,CAACA,IAEEsG,GAAS7F,EAAAA,EAAAA,KAAQ,KACrB,GAAKyF,EACL,OACErE,EAAAA,GAAAC,cAAA,OAAKtC,UCxEqD,YDyExDqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UC1EgF,WD2EhFgE,KAAK,UACL3D,QAAS66N,EACTz2N,mBAAiB,GAEhBjE,EAAK,iBAER6B,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLE,QAAM,EACNR,KAAK,UACL3D,QAASq/B,EACTj7B,mBAAiB,GAEhBjE,EAAK,qBAEJ,GAEP,CAACA,EAAMkG,IAEV,IAAKk0N,IAAoBG,EAAyB,OAElD,MAAMtjM,EAAO,IAAI1G,KAAuB,IAAlB6pM,GAEhBQ,EACJ/4N,EAAAA,GAAAC,cAACy5F,GAAAA,EAAI,CAAC17F,QAAS66N,EAAcl/H,WAAS,IACnCo3B,EAAAA,GAAAA,GAAe2nG,IAIdp0N,EAAe,CACnB,CAAC,YAAanG,EAAK,+BAAgCA,EAAK,mCACxD,CAAC,OAAQA,EAAK,8BAA+BA,EAAK,kCAClD,CAAC,cAAeA,EAAK,4BACnBA,EAAK,8BAA+B,CAClC46N,UACA3jM,MAAM0iC,EAAAA,GAAAA,GAAmB1iC,EAAMj3B,EAAK45D,OACnC,CACD/b,WAAW,MAIjB,OACEh8C,EAAAA,GAAAC,cAACmE,GAAAA,EAAe,CACdC,OAAQA,EACRG,OAAQA,EACRF,aAAcA,EACdG,OAAQA,EACRE,aAAW,EACXE,QAASw4B,GACT,I,qTExGN,MA2CA,GAAe7/B,EAAAA,EAAAA,KA3CKwzF,EAClBG,oBACAzV,oBACAuV,sBACAC,kBACAt/E,YACAizB,yBACGm0L,MAEH,MAAM76N,GAAOD,EAAAA,EAAAA,KACP+6N,EAAYjqN,QAAQmiF,GAAqBv/E,GAE/C,OACE5R,EAAAA,GAAAC,cAAC+E,EAAAA,EACCsjB,EAAA,GACI0wM,EAAU,CACdv0L,QAAM,EACN9mC,WAAWuC,EAAAA,EAAAA,GACT+wF,GCrCmE,WDsCnEC,GCtC2C,WDuC3C8nI,EAAWr7N,WAEboH,kBAAkB7E,EAAAA,EAAAA,GCzCE,WDyC6B84N,EAAWj0N,kBAC5DwnG,iBAAiBrsG,EAAAA,EAAAA,GC1CwE,WD0C1C84N,EAAWzsH,mBAEzDysH,EAAW1iN,SACX2iN,GACCj5N,EAAAA,GAAAC,cAAA,OAAKtC,UC9C6G,YD+ChHqC,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACL4iC,oBAAqBA,EACrB7mC,QAAS4T,GAAaonN,EAAWn0N,QACjCwM,MAAM,UACN1P,KAAK,UACLkhB,SAAU64D,GAETyV,GAAqBhzF,EAAK,aAI3B,G,8HE1DZ,QAA2H,WCwG3H,GAAeX,EAAAA,EAAAA,KArEQo1G,EACrBvuG,SACAe,QACAstG,YACAwmH,mBACA10N,SACAqwN,cACApwN,SACAC,aACA/G,YACAgH,cACAE,UACAC,oBAEA,MAAM,SAAEynC,IAAax8B,EAAAA,EAAAA,MACfwqC,GAAiBjqC,EAAAA,EAAAA,IAAiBV,IACtC28B,EAAS,CAAE7oC,GAAIkM,IACf/K,GAAS,IAGX,OACE7E,EAAAA,GAAAC,cAAC+E,EAAAA,EAAK,CACJX,OAAQA,EACRmsE,eAAgBxhE,QAAQ5J,GACxBH,wBAAyBG,EACzBF,yBAA0BP,EAAc,yBAAsB9F,EAC9D4lC,QAAM,EACNjgC,OAAQqwN,EACRzvN,MAAOA,EACPzH,UAAWA,EACXoH,iBDjEoB,WCkEpBF,QAASA,GAERq0N,GACCl5N,EAAAA,GAAAC,cAACg2B,EAAAA,EAAM,CAACC,KAAMgjM,EAAkBv3N,KAAK,QAAQhE,UDrEiH,aCuE/J6G,EACDxE,EAAAA,GAAAC,cAAA,OAAKtC,UDxEwE,YCyE1E+0G,GAAWtyG,KAAI,EAAE2Q,EAAOL,KACvB1Q,EAAAA,GAAAC,cAAAD,EAAAA,GAAAkoC,SAAA,KACGn3B,GAAS/Q,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,EAAAA,GAAeC,ED3ER,aC2EqC4Q,GACtE/Q,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,EAAAA,GAAeC,ED5EqB,YC4EO4Q,GD5E2E,aC6ElH,iBAAVL,GAAsB,WAAYA,EACxC1Q,EAAAA,GAAAC,cAACsuG,EAAAA,EAAQ,CACP3+F,OAAQc,EAAMH,OACd5S,UDhF0K,WCiF1KopC,eAAa,EACb0nE,gBAAiB/9F,EAAM+9F,gBACvBtO,SAAUzvF,EAAMH,OAChBvS,QAASu8C,IAET7pC,OAKXjM,EACAC,GACC1E,EAAAA,GAAAC,cAACgC,EAAAA,EAAM,CACLtE,UAAY8G,OAA2B5F,ED9FwD,WC+F/F8C,KAAK,UACL3D,QAAS8G,GAAiBD,GAC1BH,GAGE,G,8FCpGZ,SAAgB,KAAO,WAAW,IAAM,WAAW,MAAQ,WAAW,KAAO,YC6D7E,GAAelH,EAAAA,EAAAA,KAjCGmgE,EAChBznC,KAAMijM,EACNC,iBACAvrG,aACA51G,OACAwlD,YACAS,YACAvgE,YACAmgE,iBACAE,qBACAH,gBACA7/D,cAEA,MAAMG,GAAOC,EAAAA,EAAAA,KACb,OACE4B,EAAAA,GAAAC,cAAA,OACEtC,WAAWuC,EAAAA,EAAAA,GAAeC,EAAOkgC,KAAMriC,GAAWmC,EAAOk5N,UAAW17N,GACpEK,QAASA,GAETgC,EAAAA,GAAAC,cAAA,OAAKtC,UAAWwC,EAAO0lB,KACrB7lB,EAAAA,GAAAC,cAACg2B,EAAAA,EAAM,CAACt0B,KAAMksH,EAAY33F,KAAMijM,EAAYG,SAAUF,IACrD37J,GACCz9D,EAAAA,GAAAC,cAAA,OAAKtC,WAAWuC,EAAAA,EAAAA,GAAeC,EAAOo5N,MAAOz7J,GAAiB18D,IAAKjD,EAAKkD,MAAQ,MAAQ,OACrF68D,GAAal+D,EAAAA,GAAAC,cAACoC,EAAAA,EAAI,CAACE,KAAM27D,EAAWvgE,UAAWqgE,IAC/CP,IAINxlD,GAAQjY,EAAAA,GAAAC,cAAA,KAAGtC,WAAWuC,EAAAA,EAAAA,GAAeC,EAAO8X,KAAM4lD,IAAiB5lD,GAChE,G","sources":["webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportAvatarModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.module.scss?b350","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.tsx","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.module.scss?8058","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.module.scss?77cd","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.module.scss?b66d","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.module.scss?4803","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.module.scss?843e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.module.scss?3c2e","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.tsx","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.module.scss?94bc","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.tsx","webpack://telegram-t/./src/components/modals/sharePreparedMessage/SharePreparedMessageModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/chatAssistant/ai-search/AISearchInput.tsx","webpack://telegram-t/./src/components/chatAssistant/ai-search/AISearchSugesstions.tsx","webpack://telegram-t/./src/components/chatAssistant/ai-search/AISearch.tsx","webpack://telegram-t/./src/components/left/search/AISearchWrapper.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultSponsored.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/common/paidMessage/PaidMessageSlider.tsx","webpack://telegram-t/./src/components/common/paidMessage/PaidMessagePrice.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsAcceptedGift.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledgeEditor.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AddKnowledgeModal.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledgeContent.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledgeHeader.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledge.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AutoTranslateLanguage.module.scss?c18f","webpack://telegram-t/./src/components/left/aiTranslate/AutoTranslateLanguage.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AITranslateContent.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AITranslateHeader.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AITranslate.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/visibility/isFullyVisible.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.tsx","webpack://telegram-t/./src/components/modals/frozenAccount/FrozenAccountModal.tsx","webpack://telegram-t/./src/components/modals/frozenAccount/FrozenAccountModal.module.scss?86e3","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.type === 'chatEditPhoto' || action?.type === 'suggestProfilePhoto') {\n    return {\n      media: action.photo!,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo, document: webPageDocument } = webPage;\n    const isDocumentMedia = webPageDocument && (isDocumentPhoto(webPageDocument) || isDocumentVideo(webPageDocument));\n    const mediaDocument = isDocumentMedia ? webPageDocument : undefined;\n    const media = webPageVideo || mediaDocument || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport stopEvent from '../../../util/stopEvent';\nimport getOffsetToContainer from '../../../util/visibility/getOffsetToContainer';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [\n      MediaViewerOrigin.Inline,\n      MediaViewerOrigin.ScheduledInline,\n      MediaViewerOrigin.Album,\n      MediaViewerOrigin.ScheduledAlbum,\n    ].includes(origin)\n    && !isMessageImageFullyVisible(toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n\n  const { top } = getOffsetToContainer(imageEl, messageListElement);\n\n  return top > messageListElement.scrollTop\n    && top + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ChannelAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n    case MediaViewerOrigin.ChannelAvatar:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { IS_IOS, IS_PWA } from '../util/browser/windowEnvironment';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  peerId?: string;\n  photo?: ApiPhoto;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportAvatarModal: FC<OwnProps> = ({\n  isOpen,\n  peerId,\n  photo,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { reportProfilePhoto } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    reportProfilePhoto({\n      chatId: peerId, photo, reason: selectedReason, description,\n    });\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (!peerId || !photo) {\n    return undefined;\n  }\n\n  const title = lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAvatarModal);\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ActiveDownloads, MediaViewerOrigin, MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow, selectCurrentChat,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  chat?: ApiChat;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  chat,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <Icon name=\"download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <Icon name=\"download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message' && chat) {\n      openDeleteMessageModal({\n        chatId: chat?.id,\n        messageIds: [item.message.id],\n        isSchedule: messageListType === 'scheduled',\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon as IconName}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <Icon name=\"zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <Icon name=\"zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <Icon name=\"flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <Icon name=\"copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const chat = selectCurrentChat(global);\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      chat,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport { IS_ANDROID, IS_IOS } from '../../util/browser/windowEnvironment';\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { IconName } from '../../types/icons';\n\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon: IconName = useMemo(() => {\n    if (volume === 0 || isMuted) return 'muted';\n    if (volume < 0.3) return 'volume-1';\n    if (volume < 0.6) return 'volume-2';\n    return 'volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <Icon name={isPlaying ? 'pause' : 'play'} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <Icon name={volumeIcon} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <Icon name=\"pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/browser/windowEnvironment';\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  timestamp?: number;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  timestamp,\n  handleSponsoredClick,\n  onClose,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  useEffect(() => {\n    if (!timestamp) return;\n    videoRef.current!.currentTime = timestamp;\n    setCurrentTime(timestamp);\n  }, [setCurrentTime, timestamp]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <Icon name=\"play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION } from '../../config';\nimport {\n  selectIsMessageProtected, selectMessageTimestampableDuration, selectTabState,\n} from '../../global/selectors';\nimport { ARE_WEBCODECS_SUPPORTED } from '../../util/browser/globalEnvironment';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalEffect } from '../../hooks/useSignalEffect';\nimport useThrottledCallback from '../../hooks/useThrottledCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  threadId?: ThreadId;\n  timestamp?: number;\n  maxTimestamp?: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\nconst PLAYBACK_SAVE_INTERVAL = 1000;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  threadId,\n  timestamp,\n  maxTimestamp,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const { updateLastPlaybackTimestamp } = getActions();\n\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n  const [getCurrentTime] = useCurrentTimeSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const updatePlaybackTimestamp = useThrottledCallback(() => {\n    if (!isActive || !textMessage || media?.mediaType !== 'video') return;\n    if (media.duration < MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION) return;\n\n    const message = 'id' in textMessage ? textMessage : undefined;\n    const currentTime = getCurrentTime();\n    if (!currentTime || !message || message.isInAlbum) return;\n\n    // Reset timestamp if we are close to the end of the video\n    const newTimestamp = media.duration - currentTime > PLAYBACK_SAVE_INTERVAL / 1000 ? currentTime : undefined;\n    updateLastPlaybackTimestamp({ chatId: message.chatId, messageId: message.id, timestamp: newTimestamp });\n  }, [getCurrentTime, isActive, media, textMessage], PLAYBACK_SAVE_INTERVAL);\n\n  useSignalEffect(updatePlaybackTimestamp, [getCurrentTime]);\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({\n      message: textMessage, maxTimestamp, threadId, forcePlayback: true, isForMediaViewer: true,\n    }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n          timestamp={timestamp}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n      timestamp,\n      threadId,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    const maxTimestamp = message && selectMessageTimestampableDuration(global, message, true);\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n      threadId,\n      timestamp,\n      maxTimestamp,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getPeerTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Icon from '../common/icons/Icon';\nimport ReportAvatarModal from '../common/ReportAvatarModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsored,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target instanceof HTMLElement && e.target.closest('a')) return; // Prevent closing on timestamp click\n\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsored({ isMedia: isFromMedia, isFullscreen: true, randomId: sponsoredMessage.randomId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportAvatarModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport stopEvent from '../../../util/stopEvent';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <Icon name=\"eye-crossed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-past\" className={styles.icon} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-future\" className={styles.icon} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...selectedIds || [], ...contactIds], query: searchQuery, type: 'user' }));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...closeFriendIds, ...contactIds], query: searchQuery, type: 'user' }));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPrivacySettings, ApiStory, ApiUser, PrivacyVisibility,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getHours } from '../../util/dates/units';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getPeerTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? getHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <Icon name={option.icon} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <Icon name=\"next\" />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  isUserId,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { isChatChannel, isUserId } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectChat,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativePastTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  arePeerSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n  paidMessagesStars?: number;\n  isAccountFrozen?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  arePeerSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n  paidMessagesStars,\n  isAccountFrozen,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadPeerSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory && !isAccountFrozen;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !arePeerSettingsLoaded) {\n      loadPeerSettings({ peerId });\n    }\n  }, [arePeerSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getPeerTitle(oldLang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = oldLang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = oldLang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = oldLang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: oldLang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: oldLang('StealthModeOn'),\n        message: oldLang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: oldLang('StoryNotFound'),\n    });\n  }, [oldLang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={oldLang('AccDescrOpenMenu2')}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      );\n    };\n  }, [isMobile, oldLang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon: IconName = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <Icon name={privacyIcon} />\n        {isOut && <Icon name=\"next\" />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getPeerTitle(oldLang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getPeerTitle(oldLang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativePastTime(oldLang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{oldLang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={oldLang('Volume')}\n            >\n              <Icon name={(isMuted || noSound) ? 'speaker-muted-story' : 'speaker-story'} />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{oldLang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {oldLang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {oldLang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {oldLang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-crossed-outline\" onClick={handleOpenStealthModal}>\n                {oldLang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{oldLang('lng_report_story')}</MenuItem>}\n            {isOut && (\n              <MenuItem\n                icon=\"delete\"\n                destructive\n                onClick={handleDeleteStoryClick}\n              >{oldLang('Delete')}\n              </MenuItem>\n            )}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={oldLang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const inputPlaceholder = paidMessagesStars\n    ? lang('ComposerPlaceholderPaidReply', {\n      amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n    }, {\n      withNodes: true,\n    })\n    : oldLang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately');\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={oldLang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={oldLang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getPeerTitle(oldLang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={oldLang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={inputPlaceholder}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const userFullInfo = selectUserFullInfo(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n    reportModal,\n    giftInfoModal,\n    isPaymentMessageConfirmDialogOpen,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    isPaymentMessageConfirmDialogOpen\n    || viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || reportModal || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal || giftInfoModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n  const paidMessagesStars = selectPeerPaidMessagesStars(global, peerId);\n  const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    arePeerSettingsLoaded: Boolean(userFullInfo?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n    paidMessagesStars,\n    isAccountFrozen,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getStoryMediaHash } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <Icon name={areReactionsFirst ? 'heart-outline' : 'recent'} className={styles.iconSort} />\n        <Icon name=\"down\" className={styles.iconDown} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor, reportStory } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useLastCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  });\n\n  const handleCloseDeleteModal = useLastCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  });\n\n  const openMessageReport = useLastCallback(() => {\n    if (!storyId) return;\n    reportStory({ storyId, peerId });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openMessageReport}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterPeersByQuery } from '../../global/helpers/peers';\nimport {\n  filterChatIdsByType, selectChat, selectChatFullInfo, selectUser,\n} from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n\n    const peerIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = selectChat(global, id);\n      const user = selectUser(global, id);\n      if (user && !isDeletedUser(user)) return true;\n\n      const chatFullInfo = selectChatFullInfo(global, id);\n\n      return chat && (!chatFullInfo || getCanPostInChat(chat, undefined, undefined, chatFullInfo));\n    });\n\n    const sorted = sortChatIds(\n      filterPeersByQuery({\n        ids: unique([\n          ...(currentUserId ? [currentUserId] : []),\n          ...peerIds,\n          ...(contactIds || []),\n        ]),\n        query: search,\n      }),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: contactRequest,\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification key={notification.localId} notification={notification} />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/browser/url';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (!url) {\n      return;\n    }\n\n    window.open(ensureProtocol(url), '_blank', 'noopener noreferrer');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlText', { url: renderingUrl }, { withNodes: true, withMarkdown: true }))}\n      confirmLabel={lang('OpenUrlConfirm')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { IS_IOS, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport { prepareMapUrl } from '../../../util/map';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else if (currentAuth?.url) {\n      window.open(ensureProtocol(currentAuth.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <Icon name=\"previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <Icon name=\"next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: OldLangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text NewContactModal__help-text__negative\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useSignal, useState,\n} from '../lib/teact/teact';\n\nimport type { Point, Size } from '../types';\n\nimport { RESIZE_HANDLE_SELECTOR } from '../config';\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport enum ResizeHandleType {\n  Top,\n  Bottom,\n  Left,\n  Right,\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n}\n\ntype ResizeHandleSelectorType = 'top' | 'bottom' | 'left'\n| 'right' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nconst resizeHandleSelectorsMap: Record<ResizeHandleSelectorType, ResizeHandleType> = {\n  top: ResizeHandleType.Top,\n  bottom: ResizeHandleType.Bottom,\n  left: ResizeHandleType.Left,\n  right: ResizeHandleType.Right,\n  topLeft: ResizeHandleType.TopLeft,\n  topRight: ResizeHandleType.TopRight,\n  bottomLeft: ResizeHandleType.BottomLeft,\n  bottomRight: ResizeHandleType.BottomRight,\n};\n\nconst resizeHandleSelectors = Object.keys(resizeHandleSelectorsMap) as ResizeHandleSelectorType[];\n\nlet resizeTimeout: number | undefined;\nconst FULLSCREEN_POSITION = { x: 0, y: 0 };\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isDragEnabled: boolean = true,\n  originalSize: Size,\n  isFullscreen: boolean = false,\n  minimumSize: Size = { width: 0, height: 0 },\n  cachedPosition?: Point,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(cachedPosition);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartTransform, setElementPositionOnStartTransform] = useSignal({ x: 0, y: 0 });\n  const [getElementSizeOnStartTransform, setElementSizeOnStartTransform] = useSignal({ width: 0, height: 0 });\n  const [getTransformStartPoint, setTransformStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartTransform = getElementPositionOnStartTransform();\n  const transformStartPoint = getTransformStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isResizing, startResizing, stopResizing] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  const [hitResizeHandle, setHitResizeHandle] = useState<ResizeHandleType | undefined>(undefined);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const updateCurrentPosition = useLastCallback((position: Point) => {\n    if (!isFullscreen) setElementCurrentPosition({ x: position.x, y: position.y });\n  });\n\n  const getActualPosition = useLastCallback(() => {\n    return isFullscreen ? FULLSCREEN_POSITION : elementCurrentPosition;\n  });\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      updateCurrentPosition(centeredPosition);\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  function getResizeHandleFromTarget(targetElement: HTMLElement) {\n    const closest = (selector: string) => targetElement.closest(selector);\n\n    if (!closest(RESIZE_HANDLE_SELECTOR)) return undefined;\n    for (const selector of resizeHandleSelectors) {\n      if (closest(`.${selector}`)) { return resizeHandleSelectorsMap[selector]; }\n    }\n    return undefined;\n  }\n\n  const handleStartResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (!element || !targetElement) {\n      return;\n    }\n    const resizeHandle = getResizeHandleFromTarget(targetElement);\n\n    if (resizeHandle === undefined) return;\n    setHitResizeHandle(resizeHandle);\n\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const {\n      left, right, top, bottom,\n    } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setElementSizeOnStartTransform({ width: right - left, height: bottom - top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startResizing();\n  });\n\n  const handleDragRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  const handleResizeRelease = useLastCallback(() => {\n    stopResizing();\n  });\n\n  useEffect(() => {\n    if (!isDragEnabled) {\n      stopDragging();\n    }\n  }, [isDragEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    if (isFullscreen) return;\n    const position = !wasElementShown && !cachedPosition ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    updateCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    const originalWidth = originalSize.width;\n    const originalHeight = originalSize.height;\n    newSize.width = Math.min(visibleArea.width, Math.max(originalWidth, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalHeight, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize, isResizing]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize || isResizing) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize, isResizing]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - transformStartPoint.x;\n    const offsetY = pageY - transformStartPoint.y;\n\n    const newX = elementPositionOnStartTransform.x + offsetX;\n    const newY = elementPositionOnStartTransform.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  const handleResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isResizing || !element || hitResizeHandle === undefined) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n    const sizeOnStartTransform = getElementSizeOnStartTransform();\n\n    const pageVisibleX = Math.min(Math.max(0, pageX), getVisibleArea().width);\n    const pageVisibleY = Math.min(Math.max(0, pageY), getVisibleArea().height);\n\n    const offsetX = pageVisibleX - transformStartPoint.x;\n    const offsetY = pageVisibleY - transformStartPoint.y;\n\n    const maxX = elementPositionOnStartTransform.x + sizeOnStartTransform.width - minimumSize.width;\n    const maxY = elementPositionOnStartTransform.y + sizeOnStartTransform.height - minimumSize.height;\n\n    const originalBounds = {\n      x: elementPositionOnStartTransform.x,\n      y: elementPositionOnStartTransform.y,\n      width: sizeOnStartTransform.width,\n      height: sizeOnStartTransform.height,\n    };\n\n    const newBounds = { ...originalBounds };\n\n    if (hitResizeHandle === ResizeHandleType.Left\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width - offsetX, minimumSize.width);\n      newBounds.x = Math.min(newBounds.x + offsetX, maxX);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Right\n    || hitResizeHandle === ResizeHandleType.TopRight\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width + offsetX, minimumSize.width);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Top\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.TopRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height - offsetY, minimumSize.height);\n      newBounds.y = Math.min(newBounds.y + offsetY, maxY);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Bottom\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height + offsetY, minimumSize.height);\n    }\n\n    setElementCurrentSize({ width: newBounds.width, height: newBounds.height });\n    setElementCurrentPosition({ x: newBounds.x, y: newBounds.y });\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isDragEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleDragRelease,\n        onClick: handleDragRelease,\n        onDoubleClick: handleDragRelease,\n      });\n    }\n    return cleanup;\n  }, [isDragEnabled, dragHandleElement]);\n\n  useEffect(() => {\n    const cleanups: NoneToVoidFunction[] = [];\n    if (element && isDragEnabled) {\n      for (const selector of resizeHandleSelectors) {\n        const resizeHandler = element.querySelector(`.resizeHandle.${selector}`) as HTMLElement;\n\n        if (resizeHandler) {\n          const cleanup = captureEvents(resizeHandler, {\n            onCapture: handleStartResize,\n            onDrag: handleResize,\n            onRelease: handleResizeRelease,\n            onClick: handleResizeRelease,\n            onDoubleClick: handleResizeRelease,\n          });\n\n          if (cleanup) {\n            cleanups.push(cleanup);\n          }\n        }\n      }\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => cleanup());\n    };\n  }, [isDragEnabled, element]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  const actualPosition = getActualPosition();\n\n  if (!isInitiated || !elementCurrentSize || !actualPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${actualPosition.x}px;`,\n    `top: ${actualPosition.y}px;`,\n    !isFullscreen && `max-width: ${elementCurrentSize.width}px;`,\n    !isFullscreen && `max-height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isResizing || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    isResizing,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../types/webapp';\n\nimport { selectActiveWebApp, selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = peers.length > 0 && peers[0]?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        },\n        {\n          pluralValue: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = selectActiveWebApp(global) || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RFg0Ey2I\",\"user-count-badge\":\"UZtJ6ZXb\",\"userCountBadge\":\"UZtJ6ZXb\",\"user-badge-icon\":\"pTiZFhsG\",\"userBadgeIcon\":\"pTiZFhsG\",\"name\":\"TzA5nqCC\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PeerBadge from '../../common/PeerBadge';\n\nimport styles from './WebAppGridItem.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  chatId: string;\n  isPopularApp?: boolean;\n};\n\nexport type StateProps = {\n  user?: ApiUser;\n};\n\nfunction WebAppGridItem({ user, isPopularApp }: OwnProps & StateProps) {\n  const {\n    requestMainWebView,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleClick = useLastCallback(() => {\n    if (!user) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n    });\n  });\n\n  if (!user) return undefined;\n\n  // eslint-disable-next-line no-null/no-null\n\n  const title = user?.firstName;\n  const activeUserCount = user?.botActiveUsers;\n  const badgeText = activeUserCount && isPopularApp ? formatIntegerCompact(lang, activeUserCount) : undefined;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClick}\n    >\n      <PeerBadge\n        className={buildClassName(styles.avatarContainer, isPopularApp && 'PopularAppGridItem')}\n        textClassName={styles.name}\n        badgeClassName={styles.userCountBadge}\n        badgeIconClassName={styles.userBadgeIcon}\n        peer={user}\n        text={title}\n        badgeText={badgeText}\n        badgeIcon=\"user-filled\"\n      />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const user = selectUser(global, chatId);\n\n    return {\n      user,\n    };\n  },\n)(WebAppGridItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BJV09FsC\",\"search\":\"bdi8G7GR\",\"section-title\":\"ex3kxgWX\",\"sectionTitle\":\"ex3kxgWX\",\"section-content\":\"uIZzLhEh\",\"sectionContent\":\"uIZzLhEh\",\"showMoreLink\":\"h_Zs9ypA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport WebAppGridItem from './WebAppGridItem';\n\nimport styles from './MoreAppsTabContent.module.scss';\n\nconst POPULAR_APPS_SLICE = 30;\n\nexport type OwnProps = {\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\nconst LESS_GRID_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MoreAppsTabContent: FC<OwnProps & StateProps> = ({\n  foundIds,\n  recentBotIds,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n  const {\n    searchPopularBotApps,\n  } = getActions();\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n\n    return filterPeersByQuery({ ids: foundIds, query: searchQuery, type: 'user' });\n  }, [foundIds, searchQuery]);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleSearchInputReset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  return (\n    <InfiniteScroll\n      className={buildClassName(styles.root, 'custom-scroll')}\n      items={filteredFoundIds}\n      onLoadMore={handleLoadMore}\n      itemSelector=\".PopularAppGridItem\"\n      noFastList\n      preloadBackwards={POPULAR_APPS_SLICE}\n    >\n      <SearchInput\n        className={styles.search}\n        value={searchQuery}\n        onChange={setSearchQuery}\n        onReset={handleSearchInputReset}\n        placeholder={lang('SearchApps')}\n      />\n      {recentBotIds && !searchQuery && (\n        <div className={styles.section}>\n          <div className={styles.sectionTitle}>\n            <span>{oldLang('SearchAppsMine')}</span>\n            <span className={styles.showMoreLink} onClick={handleToggleShowMoreMine}>\n              {oldLang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n            </span>\n          </div>\n          <div className={styles.sectionContent}>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_GRID_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <WebAppGridItem\n                  chatId={id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className={styles.section}>\n        <div className={styles.sectionTitle}>\n          {searchQuery ? lang('Apps') : lang('PopularApps')}\n        </div>\n        <div className={styles.sectionContent}>\n          {filteredFoundIds && filteredFoundIds.map((id) => {\n            return (\n              <WebAppGridItem\n                chatId={id}\n                isPopularApp={!searchQuery}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(MoreAppsTabContent));\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp, WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { getWebAppKey } from '../../../../global/helpers';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\nconst FULLSCREEN_BUTTONS_AREA_HEIGHT = 3.675 * REM;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isFullscreen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n    openSuggestedStatusModal,\n    updateWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendFullScreenChanged = useCallback((value: boolean) => {\n    sendEvent({\n      eventType: 'fullscreen_changed',\n      eventData: {\n        is_fullscreen: value,\n      },\n    });\n  }, [sendEvent]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendSafeArea = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    sendEvent({\n      eventType: 'safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      },\n    });\n\n    sendEvent({\n      eventType: 'content_safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: isFullscreen ? FULLSCREEN_BUTTONS_AREA_HEIGHT : 0,\n        bottom: 0,\n      },\n    });\n  }, [sendEvent, isFullscreen, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) {\n          const key = getWebAppKey(webApp);\n          closeWebApp({ key, skipClosingConfirmation: true });\n        }\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_content_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_device_storage_clear'\n        || eventType === 'web_app_device_storage_get_key'\n        || eventType === 'web_app_device_storage_save_key') {\n        const { req_id } = eventData;\n        sendEvent({\n          eventType: 'device_storage_failed',\n          eventData: {\n            req_id,\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_secure_storage_clear'\n        || eventType === 'web_app_secure_storage_get_key'\n        || eventType === 'web_app_secure_storage_restore_key'\n        || eventType === 'web_app_secure_storage_save_key') {\n        const { req_id } = eventData;\n        sendEvent({\n          eventType: 'secure_storage_failed',\n          eventData: {\n            req_id,\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_accelerometer') {\n        sendEvent({\n          eventType: 'accelerometer_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_gyroscope') {\n        sendEvent({\n          eventType: 'gyroscope_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_device_orientation') {\n        sendEvent({\n          eventType: 'device_orientation_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_add_to_home_screen') {\n        sendEvent({\n          eventType: 'home_screen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_check_home_screen') {\n        sendEvent({\n          eventType: 'home_screen_checked',\n          eventData: {\n            status: 'unsupported',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_set_emoji_status') {\n        const { custom_emoji_id, duration } = eventData;\n\n        if (!custom_emoji_id || typeof custom_emoji_id !== 'string') {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'SUGGESTED_EMOJI_INVALID',\n            },\n          });\n          return;\n        }\n\n        if (duration) {\n          try {\n            BigInt(duration);\n          } catch (e) {\n            sendEvent({\n              eventType: 'emoji_status_failed',\n              eventData: {\n                error: 'DURATION_INVALID',\n              },\n            });\n            return;\n          }\n        }\n\n        if (!webApp) {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'UNKNOWN_ERROR',\n            },\n          });\n          return;\n        }\n\n        openSuggestedStatusModal({\n          webAppKey: getWebAppKey(webApp),\n          customEmojiId: custom_emoji_id,\n          duration: Number(duration),\n          botId: webApp.botId,\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, sendSafeArea, onLoad, windowSize.isResizing,\n    ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, sendSafeArea, windowSize]);\n\n  useEffect(() => {\n    if (!webApp?.plannedEvents?.length) return;\n    const events = webApp.plannedEvents;\n    events.forEach((event) => {\n      sendEvent(event);\n    });\n\n    updateWebApp({\n      key: getWebAppKey(webApp),\n      update: {\n        plannedEvents: [],\n      },\n    });\n  }, [sendEvent, webApp]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      sendSafeArea();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, isFullscreen, sendViewport, sendSafeArea, ref]);\n\n  return {\n    sendEvent, sendFullScreenChanged, reloadFrame, sendViewport, sendSafeArea, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loadingPlaceholder\":\"jEAibDyh\",\"placeholderPath\":\"Gx1BIECZ\",\"fadeOpacityBreath\":\"N5Blieah\",\"defaultPlaceholderGrid\":\"Ig_t1R7i\",\"placeholderSquare\":\"ablUg8HU\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"secondary-button\":\"ypxiUCFQ\",\"secondaryButton\":\"ypxiUCFQ\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"buttons-container\":\"mR_hsBdT\",\"buttonsContainer\":\"mR_hsBdT\",\"one-row\":\"YfQO314y\",\"oneRow\":\"YfQO314y\",\"two-rows\":\"gUldkEoy\",\"twoRows\":\"gUldkEoy\",\"left-to-right\":\"ntESqwQ_\",\"leftToRight\":\"ntESqwQ_\",\"right-to-left\":\"q6IUFEL0\",\"rightToLeft\":\"q6IUFEL0\",\"top-to-bottom\":\"gb4iHJ9H\",\"topToBottom\":\"gb4iHJ9H\",\"bottom-to-top\":\"R_bh3GF8\",\"bottomToTop\":\"R_bh3GF8\",\"hide-horizontal\":\"oYaRA7u4\",\"hideHorizontal\":\"oYaRA7u4\",\"secondary-button-spinner\":\"NYV0yA2J\",\"secondaryButtonSpinner\":\"NYV0yA2J\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\",\"closeIcon\":\"BvNtfigU\",\"state-back\":\"rC2wkMIk\",\"stateBack\":\"rC2wkMIk\",\"backIconContainer\":\"JXsuZ01s\",\"moreIcon\":\"T58ozRyW\",\"headerPanel\":\"eYrhewMy\",\"icon\":\"a0AI_he5\",\"headerSplitButton\":\"Tl4_05AQ\",\"headerButton\":\"MvCwTbk_\",\"left\":\"emOpAMBm\",\"right\":\"z4C5VD5o\",\"buttonCaptionContainer\":\"dpZR3YT7\",\"backButtonCaption\":\"dWDprnWa\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachBot, ApiBotAppSettings, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { BotAppPermissions, ThemeKey } from '../../../types';\nimport type {\n  PopupOptions,\n  WebApp,\n  WebAppInboundEvent,\n  WebAppModalStateType,\n  WebAppOutboundEvent,\n} from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectBotAppPermissions,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n  selectWebApp,\n} from '../../../global/selectors';\nimport { getGeolocationStatus, IS_GEOLOCATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport download from '../../../util/download';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useFullscreen, { checkIfFullscreen } from '../../../hooks/window/useFullscreen';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n  position?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  onContextMenuButtonClick: (e: React.MouseEvent) => void;\n  isTransforming?: boolean;\n  isMultiTabSupported? : boolean;\n  modalHeight: number;\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n  botAppSettings?: ApiBotAppSettings;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isPremium?: boolean;\n  modalState?: WebAppModalStateType;\n  botAppPermissions?: BotAppPermissions;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst COLLAPSING_WAIT = 350;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst APP_NAME_DISPLAY_DURATION = 3800;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isTransforming,\n  modalState,\n  isMultiTabSupported,\n  onContextMenuButtonClick,\n  botAppPermissions,\n  botAppSettings,\n  modalHeight,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n    resetPaymentStatus,\n    openChatWithInfo,\n    showNotification,\n    openEmojiStatusAccessModal,\n    openLocationAccessModal,\n    changeWebAppModalState,\n    closeWebAppModal,\n    openPreparedInlineMessageModal,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [secondaryButton, setSecondaryButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const [requestedFileDownload, setRequestedFileDownload] = useState<{ url: string; fileName: string } | undefined>();\n  const [bottomBarColor, setBottomBarColor] = useState<string | undefined>();\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonCaptionRef = useRef<HTMLDivElement>(null);\n\n  const isFullscreen = modalState === 'fullScreen';\n  const isMinimizedState = modalState === 'minimized';\n\n  const exitFullScreenCallback = useLastCallback(() => {\n    setTimeout(() => { changeWebAppModalState({ state: 'maximized' }); }, COLLAPSING_WAIT);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const fullscreenElementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    fullscreenElementRef.current = document.querySelector('#portals') as HTMLElement;\n  }, []);\n\n  const [, setFullscreen, exitFullscreen] = useFullscreen(fullscreenElementRef, exitFullScreenCallback);\n\n  const activeWebApp = modal?.activeWebAppKey ? modal.openedWebApps[modal.activeWebAppKey] : undefined;\n  const activeWebAppName = activeWebApp?.appName;\n  const {\n    url, buttonText, isBackButtonVisible,\n  } = webApp || {};\n\n  const {\n    placeholderPath,\n  } = botAppSettings || {};\n\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const isAvailable = IS_GEOLOCATION_SUPPORTED;\n  const isAccessRequested = botAppPermissions?.geolocation !== undefined;\n  const isAccessGranted = Boolean(botAppPermissions?.geolocation);\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webAppKey) return;\n    updateWebApp({ key: webAppKey, update: updatedPartialWebApp });\n  });\n\n  const themeParams = useMemo(() => {\n    return extractCurrentThemeParams();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [theme]);\n\n  useEffect(() => {\n    setBottomBarColor(themeParams.secondary_bg_color);\n  }, [themeParams]);\n\n  const themeBackgroundColor = themeParams.bg_color;\n  const [backgroundColorFromEvent, setBackgroundColorFromEvent] = useState<string | undefined>();\n  const backgroundColorFromSettings = theme === 'light' ? botAppSettings?.backgroundColor\n    : botAppSettings?.backgroundDarkColor;\n\n  useEffect(() => {\n    const color = backgroundColorFromEvent || backgroundColorFromSettings || themeBackgroundColor;\n\n    updateCurrentWebApp({ backgroundColor: color });\n  }, [themeBackgroundColor, backgroundColorFromEvent, backgroundColorFromSettings]);\n\n  const themeHeaderColor = themeParams.bg_color;\n  const [headerColorFromEvent, setHeaderColorFromEvent] = useState<string | undefined>();\n  const headerColorFromSettings = theme === 'light' ? botAppSettings?.headerColor\n    : botAppSettings?.headerDarkColor;\n\n  useEffect(() => {\n    const color = headerColorFromEvent || headerColorFromSettings || themeHeaderColor;\n\n    updateCurrentWebApp({ headerColor: color });\n  }, [themeHeaderColor, headerColorFromEvent, headerColorFromSettings]);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendFullScreenChanged, sendViewport, sendSafeArea, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isFullscreen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const isMainButtonVisible = isLoaded && mainButton?.isVisible && mainButton.text.trim().length > 0;\n  const isSecondaryButtonVisible = isLoaded && secondaryButton?.isVisible && secondaryButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSecondaryButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'secondary_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  const setFullscreenCallback = useLastCallback(() => {\n    if (!checkIfFullscreen() && isActive) {\n      setFullscreen?.();\n    }\n  });\n\n  const exitIfFullscreenCallback = useLastCallback(() => {\n    if (checkIfFullscreen() && isActive) {\n      exitFullscreen?.();\n    }\n  });\n\n  const sendFullScreenChangedCallback = useLastCallback(\n    (value: boolean) => { if (isActive) sendFullScreenChanged(value); },\n  );\n\n  useEffect(() => {\n    if (isFullscreen) {\n      setFullscreenCallback();\n      sendFullScreenChangedCallback(true);\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChangedCallback(false);\n    }\n  }, [isFullscreen]);\n\n  const visibilityChangedCallBack = useLastCallback((visibility: boolean) => {\n    sendEvent({\n      eventType: 'visibility_changed',\n      eventData: {\n        is_visible: visibility,\n      },\n    });\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n      visibilityChangedCallBack(Boolean(isActive));\n    }\n  }, [isActive, isLoaded]);\n\n  useEffectWithPrevDeps(([prevModalState]) => {\n    if (modalState === 'minimized') {\n      visibilityChangedCallBack(false);\n    }\n    if (modalState && prevModalState === 'minimized') {\n      visibilityChangedCallBack(true);\n    }\n  }, [modalState]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n      resetPaymentStatus();\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectFileDownload = useLastCallback((shouldCloseActive?: boolean) => {\n    if (shouldCloseActive) {\n      setRequestedFileDownload(undefined);\n      handlePopupClosed();\n    }\n\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    if (!bot) return;\n    const result = await callApi('allowBotSendMessages', { bot });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    if (!bot) return;\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleCheckDownloadFile(fileUrl: string, fileName: string) {\n    const canDownload = await callApi('checkBotDownloadFileParams', {\n      bot: bot!,\n      url: fileUrl,\n      fileName,\n    });\n\n    if (!canDownload) {\n      sendEvent({\n        eventType: 'file_download_requested',\n        eventData: {\n          status: 'cancelled',\n        },\n      });\n      return;\n    }\n\n    setRequestedFileDownload({ url: fileUrl, fileName });\n    handlePopupOpened();\n  }\n\n  const handleDownloadFile = useLastCallback(() => {\n    if (!requestedFileDownload) return;\n    setRequestedFileDownload(undefined);\n    handlePopupClosed();\n\n    download(requestedFileDownload.url, requestedFileDownload.fileName);\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'downloading',\n      },\n    });\n  });\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setSecondaryButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChatWithInfo({ id: bot!.id });\n  });\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n\n    if (eventType === 'web_app_request_fullscreen') {\n      if (getIsWebAppsFullscreenSupported()) {\n        changeWebAppModalState({ state: 'fullScreen' });\n      } else {\n        sendEvent({\n          eventType: 'fullscreen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n    }\n\n    if (eventType === 'web_app_exit_fullscreen') {\n      exitIfFullscreenCallback();\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl, shouldIgnoreCache: eventData.force_request });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      setBackgroundColorFromEvent(validateHexColor(eventData.color) ? eventData.color : undefined);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const key = eventData.color_key;\n      setHeaderColorFromEvent(eventData.color || (key ? themeParams[key] : undefined));\n    }\n\n    if (eventType === 'web_app_set_bottom_bar_color') {\n      setBottomBarColor(eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_secondary_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setSecondaryButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n        position: eventData.position,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n        || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n        || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n\n    if (eventType === 'web_app_request_file_download') {\n      if (requestedFileDownload || unlockPopupsAt > Date.now()) {\n        handleRejectFileDownload();\n        return;\n      }\n      handleCheckDownloadFile(eventData.url, eventData.file_name);\n    }\n\n    if (eventType === 'web_app_send_prepared_message') {\n      if (!bot || !webAppKey) return;\n      const { id } = eventData;\n      openPreparedInlineMessageModal({ botId: bot.id, messageId: id, webAppKey });\n    }\n\n    if (eventType === 'web_app_request_emoji_status_access') {\n      if (!bot) return;\n      openEmojiStatusAccessModal({ bot, webAppKey });\n    }\n\n    if (eventType === 'web_app_check_location') {\n      const handleGeolocationCheck = () => {\n        sendEvent({\n          eventType: 'location_checked',\n          eventData: {\n            available: isAvailable,\n            access_requested: isAccessRequested,\n            access_granted: isAccessGranted,\n          },\n        });\n      };\n\n      handleGeolocationCheck();\n    }\n\n    if (eventType === 'web_app_request_location') {\n      const handleRequestLocation = async () => {\n        const geolocationData = await getGeolocationStatus();\n        const { accessRequested, accessGranted, geolocation } = geolocationData;\n\n        if (!accessGranted || !accessRequested) {\n          sendEvent({\n            eventType: 'location_requested',\n            eventData: {\n              available: false,\n            },\n          });\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n          return;\n        }\n\n        if (isAvailable) {\n          if (isAccessRequested) {\n            sendEvent({\n              eventType: 'location_requested',\n              eventData: {\n                available: botAppPermissions?.geolocation!,\n                latitude: geolocation?.latitude,\n                longitude: geolocation?.longitude,\n                altitude: geolocation?.altitude,\n                course: geolocation?.heading,\n                speed: geolocation?.speed,\n                horizontal_accuracy: geolocation?.accuracy,\n                vertical_accuracy: geolocation?.altitudeAccuracy,\n              },\n            });\n          } else {\n            openLocationAccessModal({ bot, webAppKey });\n          }\n        } else {\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n        }\n      };\n\n      handleRequestLocation();\n    }\n\n    if (eventType === 'web_app_open_location_settings') {\n      handleOpenChat();\n    }\n  }\n\n  const mainButtonCurrentColor = useCurrentOrPrev(mainButton?.color, true);\n  const mainButtonCurrentTextColor = useCurrentOrPrev(mainButton?.textColor, true);\n  const mainButtonCurrentIsActive = useCurrentOrPrev(mainButton && Boolean(mainButton.isActive), true);\n  const mainButtonCurrentText = useCurrentOrPrev(mainButton?.text, true);\n\n  const secondaryButtonCurrentPosition = useCurrentOrPrev(secondaryButton?.position, true);\n  const secondaryButtonCurrentColor = useCurrentOrPrev(secondaryButton?.color, true);\n  const secondaryButtonCurrentTextColor = useCurrentOrPrev(secondaryButton?.textColor, true);\n  const secondaryButtonCurrentIsActive = useCurrentOrPrev(secondaryButton && Boolean(secondaryButton.isActive), true);\n  const secondaryButtonCurrentText = useCurrentOrPrev(secondaryButton?.text, true);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideMainButton, setShouldHideMainButton] = useState(true);\n  const [shouldHideSecondaryButton, setShouldHideSecondaryButton] = useState(true);\n  const [shouldShowMainButton, setShouldShowMainButton] = useState(false);\n  const [shouldShowSecondaryButton, setShouldShowSecondaryButton] = useState(false);\n\n  const [shouldShowAppNameInFullscreen, setShouldShowAppNameInFullscreen] = useState(false);\n\n  const [backButtonTextWidth, setBackButtonTextWidth] = useState(0);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n      sendSafeArea();\n    }, isTransforming ? 0 : ANIMATION_WAIT);\n  }, [shouldShowSecondaryButton, shouldHideSecondaryButton,\n    shouldShowMainButton, shouldShowMainButton,\n    secondaryButton?.position, sendViewport, isTransforming, modalHeight,\n    sendSafeArea]);\n\n  const isVerticalLayout = secondaryButtonCurrentPosition === 'top' || secondaryButtonCurrentPosition === 'bottom';\n  const isHorizontalLayout = !isVerticalLayout;\n\n  const rowsCount = (isVerticalLayout && shouldShowMainButton && shouldShowSecondaryButton) ? 2\n    : shouldShowMainButton || shouldShowSecondaryButton ? 1 : 0;\n\n  const hideDirection = (isHorizontalLayout\n    && (!shouldHideMainButton && !shouldHideSecondaryButton)) ? 'horizontal' : 'vertical';\n\n  const mainButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const mainButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const appNameDisplayTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (isFullscreen && isOpen && Boolean(activeWebAppName)) {\n      setShouldShowAppNameInFullscreen(true);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n\n      appNameDisplayTimeout.current = setTimeout(() => {\n        setShouldShowAppNameInFullscreen(false);\n        appNameDisplayTimeout.current = undefined;\n      }, APP_NAME_DISPLAY_DURATION);\n    } else {\n      setShouldShowAppNameInFullscreen(false);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n        appNameDisplayTimeout.current = undefined;\n      }\n    }\n\n    return () => {\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n    };\n  }, [isFullscreen, isOpen, activeWebAppName]);\n\n  useEffect(() => {\n    if (mainButtonChangeTimeout.current) clearTimeout(mainButtonChangeTimeout.current);\n    if (mainButtonFastTimeout.current) clearTimeout(mainButtonFastTimeout.current);\n\n    if (isMainButtonVisible) {\n      mainButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowMainButton(true);\n      }, 35);\n      setShouldHideMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isMainButtonVisible) {\n      setShouldShowMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideMainButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isMainButtonVisible]);\n\n  useEffect(() => {\n    if (secondaryButtonChangeTimeout.current) clearTimeout(secondaryButtonChangeTimeout.current);\n    if (secondaryButtonFastTimeout.current) clearTimeout(secondaryButtonFastTimeout.current);\n\n    if (isSecondaryButtonVisible) {\n      secondaryButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowSecondaryButton(true);\n      }, 35);\n      setShouldHideSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isSecondaryButtonVisible) {\n      setShouldShowSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideSecondaryButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isSecondaryButtonVisible]);\n\n  useEffect(() => {\n    if (!shouldShowSecondaryButton && !shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowSecondaryButton, shouldShowMainButton]);\n\n  const frameStyle = isTransforming ? 'pointer-events: none;' : '';\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChanged(false);\n      changeWebAppModalState({ state: 'maximized' });\n      closeWebAppModal();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    exitIfFullscreenCallback();\n  });\n\n  const handleShowContextMenu = useLastCallback((e: React.MouseEvent) => {\n    onContextMenuButtonClick(e);\n  });\n\n  const backIconClass = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n  const backButtonCaption = shouldShowAppNameInFullscreen ? activeWebAppName\n    : oldLang(isBackButtonVisible ? 'Back' : 'Close');\n\n  const hasHeaderElement = headerButtonCaptionRef?.current;\n\n  useEffect(() => {\n    const width = headerButtonCaptionRef?.current?.clientWidth || 0;\n    setBackButtonTextWidth(width);\n  }, [backButtonCaption, hasHeaderElement]);\n\n  function getBackButtonActiveKey() {\n    if (shouldShowAppNameInFullscreen) return 0;\n    return isBackButtonVisible ? 1 : 2;\n  }\n\n  function renderFullscreenBackButtonCaption() {\n    return (\n      <span\n        className={styles.buttonCaptionContainer}\n        style={\n          `width: ${backButtonTextWidth}px;`\n        }\n      >\n        <Transition\n          activeKey={getBackButtonActiveKey()}\n          name=\"slideFade\"\n        >\n          <div\n            ref={headerButtonCaptionRef}\n            className={styles.backButtonCaption}\n          >\n            {backButtonCaption}\n          </div>\n        </Transition>\n      </span>\n    );\n  }\n\n  function renderFullscreenHeaderPanel() {\n    return (\n      <div className={styles.headerPanel}>\n        <div ref={headerButtonRef} className={styles.headerButton} onClick={handleBackClick}>\n          <div className={styles.backIconContainer}>\n            <div className={backIconClass} />\n          </div>\n          {renderFullscreenBackButtonCaption()}\n        </div>\n        <div className={styles.headerSplitButton}>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.left,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-label={lang('WebAppCollapse')}\n            onClick={handleCollapseClick}\n          >\n            <Icon\n              name=\"down\"\n              className={styles.icon}\n            />\n          </div>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('AriaMoreButton')}\n            onClick={handleShowContextMenu}\n          >\n            <Icon\n              name=\"more\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderDefaultPlaceholder() {\n    const className = buildClassName(styles.loadingPlaceholder, styles.defaultPlaceholderGrid, isLoaded && styles.hide);\n    return (\n      <div className={className}>\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n      </div>\n    );\n  }\n\n  function renderPlaceholder() {\n    if (!placeholderPath) {\n      return renderDefaultPlaceholder();\n    }\n    return (\n      <svg\n        className={buildClassName(styles.loadingPlaceholder, isLoaded && styles.hide)}\n        viewBox=\"0 0 512 512\"\n      >\n        <path className={styles.placeholderPath} d={placeholderPath} />\n      </svg>\n    );\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isFullscreen && getIsWebAppsFullscreenSupported() && renderFullscreenHeaderPanel()}\n      {!isMinimizedState && renderPlaceholder()}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameStyle}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation; clipboard-write;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {!isMinimizedState && (\n        <div\n          style={`background-color: ${bottomBarColor};`}\n          className={buildClassName(\n            styles.buttonsContainer,\n            secondaryButtonCurrentPosition === 'left' && styles.leftToRight,\n            secondaryButtonCurrentPosition === 'right' && styles.rightToLeft,\n            secondaryButtonCurrentPosition === 'top' && styles.topToBottom,\n            secondaryButtonCurrentPosition === 'bottom' && styles.bottomToTop,\n            hideDirection === 'horizontal' && styles.hideHorizontal,\n            rowsCount === 1 && styles.oneRow,\n            rowsCount === 2 && styles.twoRows,\n          )}\n        >\n          <Button\n            className={buildClassName(\n              styles.secondaryButton,\n              shouldShowSecondaryButton && !shouldHideSecondaryButton && styles.visible,\n              shouldHideSecondaryButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${secondaryButtonCurrentColor}; color: ${secondaryButtonCurrentTextColor}`}\n            disabled={!secondaryButtonCurrentIsActive && !secondaryButton?.isProgressVisible}\n            nonInteractive={secondaryButton?.isProgressVisible}\n            onClick={handleSecondaryButtonClick}\n            size=\"smaller\"\n          >\n            {!secondaryButton?.isProgressVisible && secondaryButtonCurrentText}\n            {secondaryButton?.isProgressVisible\n              && <Spinner className={styles.mainButtonSpinner} color=\"blue\" />}\n          </Button>\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && !shouldHideMainButton && styles.visible,\n              shouldHideMainButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive && !mainButton?.isProgressVisible}\n            nonInteractive={mainButton?.isProgressVisible}\n            onClick={handleMainButtonClick}\n            size=\"smaller\"\n          >\n            {!mainButton?.isProgressVisible && mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </div>\n      ) }\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || oldLang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={oldLang('ShareYouPhoneNumberTitle')}\n        text={oldLang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={oldLang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={oldLang('lng_bot_allow_write_title')}\n        text={oldLang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={oldLang('lng_bot_allow_write_confirm')}\n      />\n      <ConfirmDialog\n        isOpen={Boolean(requestedFileDownload)}\n        title={oldLang('BotDownloadFileTitle')}\n        textParts={lang('BotDownloadFileDescription', {\n          bot: bot?.firstName,\n          filename: requestedFileDownload?.fileName,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n        })}\n        confirmLabel={oldLang('BotDownloadFileButton')}\n        onClose={handleRejectFileDownload}\n        confirmHandler={handleDownloadFile}\n      />\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={oldLang('lng_bot_close_warning_title')}\n        text={oldLang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={oldLang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={oldLang('BotRemoveFromMenuTitle')}\n        textParts={renderText(oldLang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n    const modalState = modal?.modalState;\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const userFullInfo = activeBotId ? selectUserFullInfo(global, activeBotId) : undefined;\n    const botAppSettings = userFullInfo?.botInfo?.appSettings;\n    const currentUser = global.currentUserId ? selectUser(global, global.currentUserId) : undefined;\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status: regularPaymentStatus } = selectTabState(global).payment;\n    const { status: starsPaymentStatus, inputInvoice: starsInputInvoice } = selectTabState(global).starsPayment;\n    const botAppPermissions = bot ? selectBotAppPermissions(global, bot.id) : undefined;\n\n    const paymentStatus = starsPaymentStatus || regularPaymentStatus;\n\n    return {\n      attachBot,\n      bot,\n      currentUser,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || Boolean(starsInputInvoice),\n      paymentStatus,\n      modalState,\n      botAppPermissions,\n      botAppSettings,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"fullScreen\":\"ciSTWz16\",\"tabs\":\"X18WbDa5\",\"tool-bar\":\"qK4q0Sat\",\"toolBar\":\"qK4q0Sat\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"more-apps-tab-icon\":\"Obu3ui67\",\"moreAppsTabIcon\":\"Obu3ui67\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"more-apps-button\":\"cEuW1_hJ\",\"moreAppsButton\":\"cEuW1_hJ\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"fullscreenButton\":\"otlJULGy\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { Point, Size, ThemeKey } from '../../../types';\nimport type { WebApp, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { RESIZE_HANDLE_CLASS_NAME } from '../../../config';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTheme, selectUser,\n  selectWebApp,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport windowSize from '../../../util/windowSize';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport MoreAppsTabContent from './MoreAppsTabContent';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  cachedSize?: Size;\n  cachedPosition?: Point;\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst MINIMIZED_STATE_SIZE = { width: 300, height: 40 };\nconst DEFAULT_MAXIMIZED_STATE_SIZE = { width: 420, height: 730 };\nconst MAXIMIZED_STATE_MINIMUM_SIZE = { width: 300, height: 300 };\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  cachedSize,\n  cachedPosition,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n    openMoreAppsTab,\n    closeMoreAppsTab,\n    updateMiniAppCachedPosition,\n    updateMiniAppCachedSize,\n  } = getActions();\n\n  const [getMaximizedStateSize, setMaximizedStateSize] = useSignal(cachedSize || DEFAULT_MAXIMIZED_STATE_SIZE);\n\n  function getSize() {\n    if (modal?.modalState === 'fullScreen') return windowSize.get();\n    if (modal?.modalState === 'maximized') return getMaximizedStateSize();\n    return MINIMIZED_STATE_SIZE;\n  }\n  function getMinimumSize() {\n    if (modal?.modalState === 'maximized') return MAXIMIZED_STATE_MINIMUM_SIZE;\n    return undefined;\n  }\n\n  const {\n    openedWebApps, activeWebAppKey, openedOrderedKeys, sessionKeys, isMoreAppsTabActive,\n  } = modal || {};\n  const activeWebApp = activeWebAppKey ? openedWebApps?.[activeWebAppKey] : undefined;\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n  const isMinimizedState = modal?.modalState === 'minimized';\n  const isFullScreen = modal?.modalState === 'fullScreen';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement && !isFullScreen));\n  }, [supportMultiTabMode, headerElement, containerElement, isFullScreen]);\n\n  useEffect(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  }, [supportMultiTabMode]);\n\n  const {\n    isDragging,\n    isResizing,\n    style: draggableStyle,\n    size,\n    position,\n  } = useDraggable(\n    ref,\n    headerRef,\n    isDraggingEnabled,\n    getSize(),\n    isFullScreen,\n    getMinimumSize(),\n    cachedPosition,\n  );\n\n  const x = position?.x;\n  const y = position?.y;\n  useEffect(() => {\n    if (!isDragging && x !== undefined && y !== undefined) {\n      updateMiniAppCachedPosition({ position: { x, y } });\n    }\n  }, [isDragging, x, y]);\n\n  useEffect(() => {\n    if (!isDragging && size && isMaximizedState) { updateMiniAppCachedSize({ size }); }\n  }, [isDragging, isMaximizedState, size]);\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n\n  useEffect(() => {\n    if (isResizing) {\n      setMaximizedStateSize({ width: currentWidth, height: currentHeight });\n    }\n  }, [currentHeight, currentWidth, isResizing, setMaximizedStateSize]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleCloseMoreAppsTab = useLastCallback(() => {\n    closeMoreAppsTab();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      const key = getWebAppKey(activeWebApp!);\n      updateWebApp({\n        key,\n        update: {\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'minimized' });\n  });\n\n  const handleFullscreenClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'fullScreen' });\n  });\n\n  const handleOpenMoreAppsTabClick = useLastCallback(() => {\n    openMoreAppsTab();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{oldLang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{oldLang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {oldLang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {oldLang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (isMoreAppsTabActive) return 'color-text';\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme, isMoreAppsTabActive]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsTab() {\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.moreAppsTabIcon}>\n            <Icon className={styles.icon} name=\"add\" />\n          </div>\n          {lang('OpenApp')}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleCloseMoreAppsTab}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsButton() {\n    return (\n      <Button\n        className={buildClassName(\n          styles.moreAppsButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleOpenMoreAppsTabClick}\n      >\n        <Icon className={styles.icon} name=\"add\" />\n      </Button>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || isMinimizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n        {isMoreAppsTabActive && renderMoreAppsTab()}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        <div className={styles.toolBar}>\n          {!isMoreAppsTabActive && renderMoreAppsButton()}\n\n          {!isMoreAppsTabActive && (\n            <Button\n              className={buildClassName(\n                styles.windowStateButton,\n                styles.fullscreenButton,\n                'no-drag',\n              )}\n              round\n              color=\"translucent\"\n              size=\"tiny\"\n              onClick={handleFullscreenClick}\n            >\n              <Icon className={styles.stateIcon} name=\"expand-modal\" />\n            </Button>\n          )}\n\n          <Button\n            className={buildClassName(\n              styles.windowStateButton,\n              'no-drag',\n            )}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            onClick={handleCollapseClick}\n          >\n            <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {!isMoreAppsTabActive && renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  function buildResizeHandleClass(handleClassName: string) {\n    return buildClassName(RESIZE_HANDLE_CLASS_NAME, handleClassName);\n  }\n\n  function renderResizeHandles() {\n    return (\n      <>\n        <div className={buildResizeHandleClass('top')} />\n        <div className={buildResizeHandleClass('bottom')} />\n        <div className={buildResizeHandleClass('left')} />\n        <div className={buildResizeHandleClass('right')} />\n        <div className={buildResizeHandleClass('topLeft')} />\n        <div className={buildResizeHandleClass('topRight')} />\n        <div className={buildResizeHandleClass('bottomLeft')} />\n        <div className={buildResizeHandleClass('bottomRight')} />\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        isMinimizedState && styles.minimized,\n        isFullScreen && styles.fullScreen,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      dialogContent={isDraggingEnabled && !isMinimizedState ? renderResizeHandles() : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {isFullScreen && renderMoreMenu()}\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isTransforming={isDragging || isResizing}\n          onContextMenuButtonClick={handleContextMenu}\n          isMultiTabSupported={supportMultiTabMode}\n          modalHeight={currentHeight}\n        />\n      ))}\n      { isMoreAppsTabActive && (<MoreAppsTabContent />)}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { miniAppsCachedPosition, miniAppsCachedSize } = selectSharedSettings(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      cachedPosition: miniAppsCachedPosition,\n      cachedSize: miniAppsCachedSize,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n} & ({\n  icon: IconName;\n  isFontIcon: true;\n} | {\n  icon: string;\n  isFontIcon?: false;\n});\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <Icon name={icon} className={styles.fontIcon} style={`--item-color: rgb(${r},${g},${b})`} />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <Icon name=\"previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <Icon name=\"next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar, { AVATAR_SIZES } from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS: Record<string, IconName> = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-crossed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = AVATAR_SIZES.giant + 0.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type {\n  ApiLimitTypeForPromo,\n  ApiPremiumPromo,\n  ApiPremiumSection,\n  ApiPremiumSubscriptionOption,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n  moreAccounts: 'ConnectedAccountsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n  moreAccounts: 'ConnectedAccountsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium\n      ? lang('OK')\n      : lang('SubscribeToPremium', { price: formatCurrency(lang, perMonthPrice, currency) }, { withNodes: true });\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  const currentSection = filteredSections[currentSlideIndex];\n  const hasHeaderBackdrop = currentSection !== 'double_limits' && currentSection !== 'stories';\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, hasHeaderBackdrop && styles.whiteBackButton)}\n        color={hasHeaderBackdrop ? 'translucent-white' : 'translucent'}\n        onClick={onBack}\n        ariaLabel={oldLang('Back')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={oldLang(LIMITS_TITLES[limit])}\n                        description={oldLang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {oldLang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumSubscriptionOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumSubscriptionOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const oldLang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={oldLang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {oldLang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrencyAsString(amount, currency, oldLang.code)} x ${users!}`\n            : oldLang('PricePerMonth', formatCurrencyAsString(perMonth, currency, oldLang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrencyAsString(amount, currency, oldLang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSection, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      lang,\n      perMonthPrice,\n      currency,\n    );\n  }, [selectedSubscriptionOption, lang]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return renderText(\n        fromUser?.id === currentUserId\n          ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n          : oldLang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]),\n        ['simple_markdown', 'emoji'],\n      );\n    }\n\n    if (fromUserStatusSet && fromUser) {\n      const template = oldLang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n      const [first, second] = template.split('{link}');\n\n      const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n        <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n      ) : undefined;\n      const link = (\n        <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n          {emoji}{renderText(fromUserStatusSet.title)}\n        </span>\n      );\n      return [renderText(first), link, renderText(second)];\n    }\n\n    return renderText(\n      fromUser\n        ? oldLang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n        : oldLang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium'),\n      ['simple_markdown', 'emoji'],\n    );\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : oldLang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return oldLang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? oldLang('TelegramPremiumUserDialogSubtitle')\n      : oldLang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={oldLang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={oldLang('Close')}\n            >\n              <Icon name=\"close\" />\n            </Button>\n            {(fromUserStatusEmoji && !isGift) ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {getHeaderText()}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {oldLang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={oldLang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={oldLang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {oldLang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  forceRenderAllItems?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  forceRenderAllItems,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(forceRenderAllItems || filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const foundChannelIds = channelIds ? filterPeersByQuery({ ids: channelIds, query: searchQuery, type: 'chat' }) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredUserIds = memberIds\n      ? filterPeersByQuery({ ids: memberIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(unique(filteredUserIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n  STARS_CURRENCY_CODE,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount && gift.currency !== STARS_CURRENCY_CODE);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.filter((gift) => gift.currency !== STARS_CURRENCY_CODE)\n      ?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftEnabled: global.appConfig?.isStarsGiftEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: OldLangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: OldLangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll({\n        container: containerRef.current!,\n        element: stickerSetEl,\n        position: 'start',\n        margin: FOCUS_MARGIN,\n        maxDistance: isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      });\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, undefined, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToSticker = !hasThumbnail\n    || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb && !hasStaticThumb);\n  const firstStickerHash = shouldFallbackToSticker && stickerSet.stickers?.[0]\n    && getStickerMediaHash(stickerSet.stickers[0], 'preview');\n  const firstStickerMediaData = useMedia(firstStickerHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !firstStickerHash) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || firstStickerMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, 'sticker-set-cover')}\n      style={`--_size: ${size}px`}\n    >\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToSticker) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || firstStickerMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport Sparkles from './Sparkles';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n  withSparkles?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n  withSparkles,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, undefined, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: { type: 'regular', documentId: sticker.id, until: getServerTime() + duration },\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {withSparkles && <Sparkles preset=\"button\" /> }\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiEmojiStatusType, ApiReactionWithPaid, ApiSticker,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  collectibleStatuses?: ApiEmojiStatusType[];\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps & StateProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  collectibleStatuses,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isStatusCollectible = stickerSet.id === COLLECTIBLE_STATUS_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const collectibleEmojiIdsSet = useMemo(() => (\n    collectibleStatuses ? new Set(collectibleStatuses.map(({ documentId }) => documentId)) : undefined\n  ), [collectibleStatuses]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && !isStatusCollectible\n   && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            const withSparkles = sticker.id === COLLECTIBLE_STATUS_SET_ID\n            || collectibleEmojiIdsSet?.has(sticker.id);\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n                withSparkles={withSparkles}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return { collectibleStatuses };\n  },\n)(StickerSet));\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiEmojiStatusType,\n  ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique, uniqueByField } from '../../util/iteratees';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  collectibleStatuses?: ApiEmojiStatusType[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  collectibleStatuses,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const collectibleStatusEmojis = useMemo(() => {\n    const collectibleStatusEmojiIds = collectibleStatuses?.map((status) => status.documentId);\n    return customEmojisById && collectibleStatusEmojiIds?.map((id) => customEmojisById[id]).filter(Boolean);\n  }, [customEmojisById, collectibleStatuses]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = uniqueByField(defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []), 'id');\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n          isEmoji: true,\n        });\n      }\n      if (collectibleStatusEmojis?.length) {\n        defaultSets.push({\n          id: COLLECTIBLE_STATUS_SET_ID,\n          accessHash: '',\n          count: collectibleStatusEmojis.length,\n          stickers: collectibleStatusEmojis,\n          title: lang('CollectibleStatusesCategory'),\n          isEmoji: true,\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: oldLang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, oldLang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction, collectibleStatusEmojis, lang,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{oldLang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      customEmojisById,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      collectibleStatuses: isStatusPicker ? collectibleStatuses : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"C9sWDINB\",\"topEmoji\":\"gdG3oY21\",\"description\":\"p7S4AH8A\",\"title\":\"KVpsce1g\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SuggestedStatusModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['suggestedStatusModal'];\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n};\n\nconst CUSTOM_EMOJI_SIZE = 6 * REM;\n\nconst SuggestedStatusModal = ({ modal, currentUser, bot }: OwnProps & StateProps) => {\n  const { setEmojiStatus, closeSuggestedStatusModal, sendWebAppEvent } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !renderingModal) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: renderingModal.customEmojiId,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, renderingModal]);\n\n  const description = useMemo(() => {\n    if (!renderingModal || !bot) return undefined;\n\n    const botName = getUserFullName(bot);\n\n    if (renderingModal.duration) {\n      return lang('BotSuggestedStatusFor', {\n        bot: botName,\n        duration: formatShortDuration(lang, renderingModal.duration),\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('BotSuggestedStatus', { bot: botName }, { withNodes: true, withMarkdown: true });\n  }, [bot, lang, renderingModal]);\n\n  const handleClose = useLastCallback(() => {\n    const webAppKey = renderingModal?.webAppKey;\n\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n      });\n    }\n\n    closeSuggestedStatusModal();\n  });\n\n  const handleSetStatus = useLastCallback(() => {\n    if (!renderingModal) return;\n\n    const expires = renderingModal.duration ? getServerTime() + renderingModal.duration : undefined;\n\n    setEmojiStatus({\n      referrerWebAppKey: renderingModal.webAppKey,\n      emojiStatus: { type: 'regular', documentId: renderingModal.customEmojiId, until: expires },\n    });\n    closeSuggestedStatusModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {renderingModal && (\n        <CustomEmoji\n          className={styles.topEmoji}\n          documentId={renderingModal.customEmojiId}\n          size={CUSTOM_EMOJI_SIZE}\n          loopLimit={1}\n          forceAlways\n        />\n      )}\n      <div>\n        <h3 className={styles.title}>{lang('BotSuggestedStatusTitle')}</h3>\n        <p className={styles.description}>{description}</p>\n      </div>\n      {mockPeerWithStatus && (\n        <PeerChip\n          mockPeer={mockPeerWithStatus}\n          withEmojiStatus\n        />\n      )}\n      <Button size=\"smaller\" onClick={handleSetStatus}>\n        {lang('GeneralConfirm')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const bot = modal?.botId ? selectUser(global, modal.botId) : undefined;\n\n    return {\n      currentUser,\n      bot,\n    };\n  },\n)(SuggestedStatusModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, chat);\n  }, [chat, oldLang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, prevBoostedChat);\n  }, [prevBoostedChat, oldLang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: oldLang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = oldLang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? oldLang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = oldLang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? oldLang('BoostChannel') : oldLang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = oldLang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = oldLang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = oldLang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = oldLang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, oldLang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {oldLang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {oldLang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : oldLang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {oldLang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(\n              oldLang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {oldLang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {oldLang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={oldLang('OK')}\n          title={oldLang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            oldLang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatShortDuration(lang, boost!.cooldownUntil - getServerTime()),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={oldLang('Common.Yes')}\n          title={oldLang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(oldLang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const isNew = invite.alreadyPeerIds.length === 0;\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = isNew ? lang('FolderLinkSubtitleNew')\n    : newChatsCount ? lang('FolderLinkSubtitleAdd', {\n      chats: lang('FolderLinkSubtitleAddCount', { count: newChatsCount }, { pluralValue: newChatsCount }),\n      title: renderTextWithEntities({\n        text: folder.title.text,\n        entities: folder.title.entities,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n      }),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    }) : lang('FolderLinkSubtitleAlready');\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {oldLang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length\n                  ? oldLang('DeselectAll') : oldLang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && oldLang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {oldLang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>([]);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {lang('FolderLinkSubtitleNew')}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? oldLang('DeselectAll') : oldLang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkAddFolder')}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) {\n      return renderTextWithEntities({\n        text: renderingFolder.title.text,\n        entities: renderingFolder.title.entities,\n        noCustomEmojiPlayback: renderingFolder.noTitleAnimations,\n      });\n    }\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) {\n      return renderTextWithEntities({\n        text: renderingInfo.invite.title.text,\n        entities: renderingInfo.invite.title.entities,\n        noCustomEmojiPlayback: renderingInfo.invite.noTitleAnimations,\n      });\n    }\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: TeactNode) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab\n            className={styles.folder}\n            isActive\n            badgeCount={folderTabNumber}\n            isBadgeActive\n            title={folderTitle}\n          />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFkgLoAk\",\"title\":\"La4sUYaq\",\"description\":\"Bn5kz5br\",\"moreButton\":\"JdN5pGTw\",\"secondary\":\"hbsLlXSH\",\"content\":\"TZE15Pt_\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { TableAboutData } from '../common/TableAboutModal';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredContextMenuContainer';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport TableAboutModal from '../common/TableAboutModal';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  modal: TabState['aboutAdsModal'];\n};\n\ntype StateProps = {\n  minLevelToRestrictAds?: number;\n};\n\nconst AboutAdsModal = ({ modal, minLevelToRestrictAds }: OwnProps & StateProps) => {\n  const { closeAboutAdsModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const moreMenuRef = useRef<HTMLButtonElement>(null);\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n  const {\n    canReport, randomId, additionalInfo, sponsorInfo,\n  } = renderingModal || {};\n  const isMonetizationSharing = canReport;\n\n  const renderingIsNewDesign = useCurrentOrPrev(isMonetizationSharing);\n\n  const oldLang = useOldLang();\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(moreMenuRef, !renderingIsNewDesign);\n\n  const handleClose = useLastCallback(() => {\n    closeAboutAdsModal();\n    handleContextMenuClose();\n    handleContextMenuHide();\n  });\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <Button\n          ref={moreMenuRef}\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          className={styles.moreButton}\n          onClick={handleContextMenu}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, handleContextMenu, minLevelToRestrictAds]);\n\n  if (renderingIsNewDesign) {\n    return (\n      <>\n        <TableAboutModal\n          isOpen={isOpen}\n          listItemData={modalData?.listItemData}\n          headerIconName=\"channel\"\n          withSeparator\n          header={modalData?.header}\n          footer={modalData?.footer}\n          buttonText={oldLang('RevenueSharingAdsUnderstood')}\n          onClose={handleClose}\n        />\n        {contextMenuAnchor && randomId && (\n          <SponsoredMessageContextMenuContainer\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            triggerRef={moreMenuRef}\n            randomId={randomId}\n            additionalInfo={additionalInfo}\n            canReport={canReport}\n            sponsorInfo={sponsorInfo}\n            shouldSkipAbout\n            onItemClick={handleClose}\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={handleClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const minLevelToRestrictAds = global.appConfig?.channelRestrictAdsLevelMin;\n\n    return {\n      minLevelToRestrictAds,\n    };\n  },\n)(AboutAdsModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      withSeparator\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['monetizationVerificationModal'];\n};\n\ntype StateProps = {\n  passwordHint?: string;\n};\n\nconst VerificationMonetizationModal = ({\n  modal,\n  passwordHint,\n}: OwnProps & StateProps) => {\n  const {\n    closeMonetizationVerificationModal, clearMonetizationVerificationError, processMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    if (!renderingModal) return;\n    processMonetizationRevenueWithdrawalUrl({\n      peerId: renderingModal.chatId,\n      currentPassword: password,\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationVerificationError();\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeMonetizationVerificationModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('CheckPasswordTitle')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('CheckPasswordPlaceholder')}\n            error={renderingModal?.errorKey && lang.withRegular(renderingModal.errorKey)}\n            description={lang('CheckPasswordDescription')}\n            clearError={handleClearError}\n            isLoading={renderingModal?.isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      passwordHint,\n    };\n  },\n)(VerificationMonetizationModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MKdSUg2P\",\"chatItem\":\"qEIwBtp0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserFrozen, selectIsCurrentUserPremium, selectStickerSet, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './EmojiStatusAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['emojiStatusAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n  stickerSet?: ApiStickerSet;\n  isPremium?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst INTERVAL = 3200;\n\nconst EmojiStatusAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n  stickerSet,\n  isPremium,\n  isAccountFrozen,\n}) => {\n  const {\n    closeEmojiStatusAccessModal,\n    toggleUserEmojiStatusPermission,\n    sendWebAppEvent,\n    openPremiumModal,\n    loadDefaultStatusIcons,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [currentStatusIndex, setCurrentStatusIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (isOpen && !stickerSet?.stickers && !isAccountFrozen) {\n      loadDefaultStatusIcons();\n    }\n  }, [isOpen, stickerSet, isAccountFrozen]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !stickerSet?.stickers) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: stickerSet.stickers[currentStatusIndex].id,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, stickerSet, currentStatusIndex]);\n\n  const totalCount = stickerSet?.stickers?.length;\n  useInterval(\n    () => {\n      if (!totalCount) return;\n      setCurrentStatusIndex((prevIndex) => (prevIndex + 1) % totalCount);\n    },\n    totalCount ? INTERVAL : undefined,\n  );\n\n  const renderPickerItem = useLastCallback(() => {\n    return (\n      <PeerChip\n        withEmojiStatus\n        className={styles.chatItem}\n        itemClassName={styles.itemName}\n        mockPeer={mockPeerWithStatus}\n      />\n    );\n  });\n\n  const confirmHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      if (isPremium) {\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'allowed',\n            },\n          },\n        });\n        toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: true, isBotAccessEmojiGranted: true });\n      } else {\n        openPremiumModal();\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'cancelled',\n            },\n          },\n        });\n      }\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'emoji_status_access_requested',\n          eventData: {\n            status: 'cancelled',\n          },\n        },\n      });\n    }\n    if (isPremium) {\n      toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: false });\n    }\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('EmojiStatusAccessText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      contentClassName={styles.content}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderPickerItem()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const isPremium = selectIsCurrentUserPremium(global);\n    const stickerSet = global.defaultStatusIconsId ? selectStickerSet(global, global.defaultStatusIconsId) : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      currentUser,\n      stickerSet,\n      isPremium,\n      isAccountFrozen,\n    };\n  },\n)(EmojiStatusAccessModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { getGeolocationStatus } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './LocationAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['locationAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst LocationAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n}) => {\n  const {\n    closeLocationAccessModal, toggleUserLocationPermission, sendWebAppEvent,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const confirmHandler = useLastCallback(async () => {\n    const geolocationData = await getGeolocationStatus();\n    const { geolocation } = geolocationData;\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: true,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: true,\n            latitude: geolocation?.latitude,\n            longitude: geolocation?.longitude,\n            altitude: geolocation?.altitude,\n            course: geolocation?.heading,\n            speed: geolocation?.speed,\n            horizontal_accuracy: geolocation?.accuracy,\n            vertical_accuracy: geolocation?.accuracy,\n          },\n        },\n      });\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: false,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: false,\n          },\n        },\n      });\n    }\n  });\n\n  const renderInfo = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return (\n      <div className={styles.avatars}>\n        <Avatar\n          size=\"large\"\n          peer={currentUser}\n        />\n        <Icon name=\"next\" className={styles.arrow} />\n        <Avatar\n          size=\"large\"\n          peer={modal.bot}\n        />\n      </div>\n    );\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('LocationPermissionText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderInfo()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n\n    return {\n      currentUser,\n    };\n  },\n)(LocationAccessModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatars\":\"CGPoDaLo\",\"arrow\":\"pzERgD5x\"};","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"root\":\"njPBcVYr\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 56;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsored, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsored({ peerId: chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        text={lang('lng_report_sponsored_reported_link')}\n        url={lang('ReportAd.Help_URL')}\n      />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      className={styles.root}\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"kq9LwNTZ\",\"root\":\"E1bGWeON\",\"content\":\"tNysQgHL\",\"modalTitle\":\"Lj_ezEWU\",\"header\":\"AlMDkK7c\",\"optionText\":\"FU8m6NUU\",\"option\":\"RoxwMzvA\",\"optionButton\":\"Z6skYdvb\",\"sectionTitle\":\"GSfUuTet\",\"description\":\"zwfjNhF9\",\"title\":\"QawchdxB\",\"hasDepth\":\"CV7kzv9H\",\"titleMultiline\":\"OYFbu8fQ\",\"subtitle\":\"OUFckTb7\",\"transition\":\"n2VxPirU\",\"block\":\"KpptZ3Mk\",\"optionInfo\":\"yc3szGcx\",\"reportIcon\":\"kO8JC4gK\"};","import type { ChangeEvent } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport TextArea from '../../ui/TextArea';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportModal.module.scss';\n\nconst MAX_DESCRIPTION = 512;\nconst ADDED_PADDING = 20;\n\nexport type OwnProps = {\n  modal: TabState['reportModal'];\n};\n\nconst ReportModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportMessages, reportStory, closeReportModal, openPreviousReportModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const [text, setText] = useState('');\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    if (!messageIds) return;\n    switch (subject) {\n      case 'message':\n        reportMessages({ chatId: chatId!, messageIds, option });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds[0], peerId: peerId!, option,\n        });\n        break;\n    }\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal?.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    openPreviousReportModal();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeReportModal();\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        {renderingDepth ? (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Back')}\n            onClick={handleBackClick}\n          >\n            <Icon name=\"arrow-left\" />\n          </Button>\n        ) : (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleCloseClick}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={buildClassName(styles.title, renderingDepth && styles.hasDepth)}>\n            {renderingSection?.options\n              ? lang(modal?.subject === 'story' ? 'ReportStory' : 'Report') : renderingSection?.title}\n          </h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.options, renderingSection?.subtitle, renderingSection?.title]);\n\n  const handleTextChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  });\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  const closeReportMessageModalHandler = useLastCallback(() => {\n    setText('');\n    closeReportModal();\n  });\n\n  const sendMessageReportHandler = useLastCallback(() => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    switch (subject) {\n      case 'message':\n        reportMessages({\n          chatId: chatId!, messageIds, option: renderingSection?.option, description: text,\n        });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds?.[0], peerId: peerId!, option: renderingSection?.option, description: text,\n        });\n        break;\n    }\n    closeReportMessageModalHandler();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      header={header}\n      onClose={closeReportMessageModalHandler}\n      contentClassName={styles.content}\n      className={buildClassName(styles.root, modal?.subject === 'story' && 'component-theme-dark')}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          {renderingSection?.options\n            ? <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3> : undefined}\n          {renderingSection?.options?.map((option) => (\n            <ListItem\n              narrow\n              nonInteractive\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n          {renderingSection?.option ? (\n            <div className={styles.block}>\n              <AnimatedIconWithPreview\n                tgsUrl={LOCAL_TGS_URLS.Report}\n                size={100}\n                className={styles.reportIcon}\n                nonInteractive\n                forceAlways\n                noLoop={false}\n              />\n              <TextArea\n                id=\"option\"\n                className={styles.optionInfo}\n                label={renderingSection.isOptional ? lang('Report2CommentOptional') : lang('Report2Comment')}\n                onChange={handleTextChange}\n                value={text}\n                maxLength={MAX_DESCRIPTION}\n                maxLengthIndicator={(MAX_DESCRIPTION - text.length).toString()}\n                noReplaceNewlines\n              />\n              <Button\n                size=\"smaller\"\n                onClick={sendMessageReportHandler}\n                disabled={!renderingSection.isOptional ? !text.length : undefined}\n              >{lang('ReportSend')}\n              </Button>\n            </div>\n          ) : undefined}\n        </div>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Rzj2LMLf\",\"content\":\"Ve4u2KVI\",\"modalTitle\":\"E42tgAwD\",\"container\":\"pNSCKAVN\",\"header\":\"P1fPh6h8\",\"actionMessageView\":\"McJgXCtB\",\"info\":\"xWnXsG7q\",\"background\":\"_6w75ldP\",\"customBgImage\":\"CZkpv8n0\",\"customBgColor\":\"VJAYrDF_\",\"withTransition\":\"lElCwweL\",\"blurred\":\"m8xzfVvU\",\"withRightColumn\":\"rJCyBVMB\"};","import React, {\n  type FC,\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { getMockPreparedMessageFromResult, getUserFullName } from '../../../global/helpers';\nimport { selectTheme, selectThemeValues, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Message from '../../middle/message/Message';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PreparedMessageModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['preparedMessageModal'];\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  bot?: ApiUser;\n};\n\nconst PreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  customBackground,\n  backgroundColor,\n  bot,\n}) => {\n  const {\n    closePreparedInlineMessageModal, sendWebAppEvent, openSharePreparedMessageModal,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const { webAppKey, message, botId } = modal || {};\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  const handleOpenClick = useLastCallback(() => {\n    if (webAppKey && botId && message) {\n      openSharePreparedMessageModal({\n        webAppKey,\n        message,\n      });\n      closePreparedInlineMessageModal();\n    }\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closePreparedInlineMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.header}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang('Close')}\n          onClick={handleCloseClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={buildClassName('modal-title', styles.modalTitle)}>\n          {lang('BotShareMessage')}\n        </h3>\n      </div>\n    );\n  }, [lang, modal]);\n\n  const localMessage = useMemo(() => {\n    if (!botId || !message || !webAppKey) return undefined;\n    return getMockPreparedMessageFromResult(botId, message);\n  }, [botId, message, webAppKey]);\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  return (\n    <Modal\n      dialogRef={containerRef}\n      isOpen={isOpen}\n      header={header}\n      onClose={handleCloseClick}\n      className={styles.root}\n      contentClassName={styles.content}\n    >\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        {localMessage && (\n          <Message\n            key={botId}\n            message={localMessage}\n            threadId={MAIN_THREAD_ID}\n            messageListType=\"thread\"\n            noComments\n            noReplies\n            appearanceOrder={0}\n            isJustAdded={false}\n            isFirstInGroup\n            isLastInGroup\n            isLastInList={false}\n            isFirstInDocumentGroup={false}\n            isLastInDocumentGroup={false}\n          />\n        )}\n      </div>\n      <div className={styles.container}>\n        <p className={styles.info}>\n          {lang('WebAppShareMessageInfo', { user: getUserFullName(bot) })}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={handleOpenClick}\n        >\n          {lang('BotShareMessageShare')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }) => {\n    const theme = selectTheme(global);\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = selectThemeValues(global, theme) || {};\n    const bot = modal ? selectUser(global, modal?.botId) : undefined;\n\n    return {\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      bot,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PreparedMessageModal));\n","import React, {\n  type FC,\n  memo, useEffect,\n} from '../../../lib/teact/teact';\nimport {\n  getActions, getGlobal, withGlobal,\n} from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer, selectTabState,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePaidMessageConfirmation from '../../middle/composer/hooks/usePaidMessageConfirmation';\n\nimport PaymentMessageConfirmDialog from '../../common/PaymentMessageConfirmDialog';\nimport RecipientPicker from '../../common/RecipientPicker';\n\nexport type OwnProps = {\n  modal: TabState['sharePreparedMessageModal'];\n};\n\ntype StateProps = {\n  isPaymentMessageConfirmDialogOpen: boolean;\n  starsBalance: number;\n  isStarsBalanceModalOpen: boolean;\n};\n\nexport type SendParams = {\n  peerName?: string;\n  starsForSendMessage: number;\n};\n\nconst SharePreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal, isPaymentMessageConfirmDialogOpen, isStarsBalanceModalOpen, starsBalance,\n}) => {\n  const {\n    closeSharePreparedMessageModal,\n    sendInlineBotResult,\n    sendWebAppEvent,\n    showNotification,\n    updateSharePreparedMessageModalSendArgs,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const {\n    message, filter, webAppKey, pendingSendArgs,\n  } = modal || {};\n\n  const {\n    starsForSendMessage,\n  } = pendingSendArgs || {};\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForSendMessage || 0, isStarsBalanceModalOpen, starsBalance);\n\n  const handleClose = useLastCallback(() => {\n    closeSharePreparedMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const handleSend = useLastCallback((id: string, threadId?: ThreadId) => {\n    if (message && webAppKey) {\n      const global = getGlobal();\n      const peer = selectPeer(global, id);\n      sendInlineBotResult({\n        chatId: id,\n        threadId: threadId || MAIN_THREAD_ID,\n        id: message.result.id,\n        queryId: message.result.queryId,\n      });\n      if (!starsForSendMessage) {\n        showNotification({\n          message: lang('BotSharedToOne', getPeerTitle(lang, peer!)),\n        });\n      }\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_sent',\n        },\n      });\n      closeSharePreparedMessageModal();\n      updateSharePreparedMessageModalSendArgs({ args: undefined });\n    }\n  });\n\n  const handleSelectRecipient = useLastCallback((id: string, threadId?: ThreadId) => {\n    updateSharePreparedMessageModalSendArgs({ args: { peerId: id, threadId } });\n  });\n\n  const handleSendWithPaymentConfirmation = useLastCallback(() => {\n    if (pendingSendArgs) {\n      handleActionWithPaymentConfirmation(handleSend, pendingSendArgs.peerId, pendingSendArgs.threadId);\n    }\n  });\n\n  const handleClosePaymentMessageConfirmDialog = useLastCallback(() => {\n    closeConfirmModalPayForMessage();\n    updateSharePreparedMessageModalSendArgs({ args: undefined });\n  });\n\n  useEffect(() => {\n    if (pendingSendArgs) {\n      handleSendWithPaymentConfirmation();\n    }\n  }, [pendingSendArgs]);\n\n  const global = getGlobal();\n  const peer = pendingSendArgs ? selectPeer(global, pendingSendArgs.peerId) : undefined;\n  const peerName = peer ? getPeerTitle(lang, peer) : undefined;\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <>\n      <RecipientPicker\n        isOpen={isOpen}\n        searchPlaceholder={lang('Search')}\n        filter={filter}\n        onSelectRecipient={handleSelectRecipient}\n        onClose={handleClose}\n        onCloseAnimationEnd={unmarkIsShown}\n        isLowStackPriority\n      />\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={handleClosePaymentMessageConfirmDialog}\n        userName={peerName}\n        messagePriceInStars={starsForSendMessage || 0}\n        messagesCount={1}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { isPaymentMessageConfirmDialogOpen } = tabState;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    return {\n      isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n    };\n  },\n)(SharePreparedMessageModal));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"_YNfwDqt\",\"root\":\"SeaF_shb\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"button\":\"goI3MITH\",\"options\":\"b6847Kh3\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"proceedButtons\":\"L4YzeG91\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  getSendersFromSelectedMessages,\n  selectBot,\n  selectCanDeleteSelectedMessages,\n  selectChat,\n  selectChatFullInfo, selectIsChatWithBot,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport AvatarList from './AvatarList';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  messageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  onConfirm?: NoneToVoidFunction;\n  canBanUsers?: boolean;\n  isCreator?: boolean;\n  linkedChatId?: string;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isSuperGroup,\n  isSchedule,\n  currentUserId,\n  messageIds,\n  isCreator,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  chatBot,\n  adminMembersById,\n  canBanUsers,\n  linkedChatId,\n}) => {\n  const {\n    closeDeleteMessageModal,\n    deleteMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n    deleteParticipantHistory,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [peerIdsToDeleteAll, setPeerIdsToDeleteAll] = useState<string[] | undefined>(undefined);\n  const [peerIdsToBan, setPeerIdsToBan] = useState<string[] | undefined>(undefined);\n  const [peerIdsToReportSpam, setPeerIdsToReportSpam] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const [shouldDeleteForAll, setShouldDeleteForAll] = useState(true);\n\n  const peerList = useMemo(() => {\n    if (isChannel || !messageIds || !chat) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n    const senderArray = getSendersFromSelectedMessages(global, chat.id, messageIds);\n    return senderArray ? unique(senderArray)\n      .filter((peer) => peer?.id !== chat?.id && peer?.id !== linkedChatId) : MEMO_EMPTY_ARRAY;\n  }, [chat, isChannel, linkedChatId, messageIds]);\n\n  const buildNestedOptionListWithAvatars = useLastCallback(() => {\n    return peerList.map((member) => {\n      return {\n        value: `${member.id}`,\n        label: getPeerTitle(lang, member) || '',\n        leftElement: <Avatar size=\"small\" peer={member} />,\n      };\n    });\n  });\n\n  const peerListToDeleteAll = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== linkedChatId && peer.id !== currentUserId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToReportSpam = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== currentUserId && peer.id !== linkedChatId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToBan = useMemo(() => {\n    const isCurrentUserInList = peerList.some((peer) => peer.id === currentUserId);\n    const shouldReturnEmpty = !canBanUsers || isCurrentUserInList;\n\n    if (shouldReturnEmpty) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return peerList.filter((peer) => {\n      const isAdmin = adminMembersById?.[peer.id];\n      return isCreator || !isAdmin;\n    });\n  }, [peerList, isCreator, currentUserId, canBanUsers, adminMembersById]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return Boolean(peerListToDeleteAll.length || peerListToReportSpam.length || peerListToBan.length);\n  }, [peerListToDeleteAll, peerListToReportSpam, peerListToBan]);\n\n  const shouldShowOption = shouldShowAdditionalOptions\n    && !canDeleteForAll && !isSchedule && isSuperGroup;\n\n  const peerNames = useMemo(() => {\n    if (!peerList || isSchedule) return {};\n    return buildCollectionByCallback(peerList, (peer) => [peer.id, getPeerTitle(lang, peer)]);\n  }, [isSchedule, lang, peerList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'spam' : peerList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, linkedChatId, currentUserId]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'delete_all' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(peerNames)[0]),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, peerNames, linkedChatId, currentUserId]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'ban' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(peerNames)[0])),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, messageIds, peerList, peerNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const filterMessageIdByPeerId = useLastCallback((peerIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(global, chat.id, msgId);\n      return sender && peerIds.includes(sender.id);\n    });\n  });\n\n  const handleReportSpam = useLastCallback((userMessagesMap: Record<string, number[]>) => {\n    Object.entries(userMessagesMap).forEach(([userId, messageIdList]) => {\n      if (messageIdList.length) {\n        reportChannelSpam({\n          participantId: userId,\n          chatId: chat!.id,\n          messageIds: messageIdList,\n        });\n      }\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteAllPeerMessages = useLastCallback((peerIdList: string[]) => {\n    if (!chat) return;\n    peerIdList.forEach((peerId) => {\n      deleteParticipantHistory({ peerId, chatId: chat.id });\n    });\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageList = useLastCallback(() => {\n    if (!chat || !messageIds) return;\n\n    onConfirm?.();\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (shouldShowOption) {\n      if (peerIdsToReportSpam) {\n        const global = getGlobal();\n        const peerIdList = peerIdsToReportSpam.filter((option) => !Number.isNaN(Number(option)));\n        const messageList = messageIds!.reduce<Record<string, number[]>>((acc, msgId) => {\n          const peer = selectSenderFromMessage(global, chat.id, msgId);\n          if (peer && peerIdList.includes(peer.id)) {\n            if (!acc[peer.id]) {\n              acc[peer.id] = [];\n            }\n            acc[peer.id].push(Number(msgId));\n          }\n          return acc;\n        }, {});\n\n        handleReportSpam(messageList);\n      }\n\n      if (peerIdsToDeleteAll) {\n        const peerIdList = peerIdsToDeleteAll.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteAllPeerMessages(peerIdList);\n      }\n\n      if (peerIdsToBan && !havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteMember(peerIdList);\n        const filteredMessageIdList = filterMessageIdByPeerId(peerIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (peerIdsToBan && havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleUpdateChatMemberBannedRights(peerIdList);\n      }\n\n      if (!peerIdsToReportSpam || !peerIdsToDeleteAll || !peerIdsToBan) {\n        deleteMessages({ messageIds, shouldDeleteForAll });\n      }\n    } else {\n      deleteMessages({ messageIds, shouldDeleteForAll });\n    }\n\n    closeDeleteMessageModal();\n    exitMessageSelectMode();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setPeerIdsToReportSpam(undefined);\n      setPeerIdsToDeleteAll(undefined);\n      setPeerIdsToBan(undefined);\n      setShouldDeleteForAll(true);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOption && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOption && (\n          <AvatarList\n            size=\"small\"\n            peers={peerList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOption ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', messageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={setPeerIdsToReportSpam}\n          selected={peerIdsToReportSpam}\n          nestedCheckbox={messageIds && peerList.length >= 2}\n        />\n        {peerListToDeleteAll?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_DELETE_OPTION}\n            onChange={setPeerIdsToDeleteAll}\n            selected={peerIdsToDeleteAll}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n        {peerListToBan?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={setPeerIdsToBan}\n            selected={peerIdsToBan}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', peerList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageList}\n      className={styles.root}\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {shouldShowOption && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              peerIdsToBan && canBanUsers ? (\n                <ListItem\n                  narrow\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(canDeleteForAll || chatBot || !shouldShowOption) && (\n          <>\n            <p>{messageIds && messageIds.length > 1\n              ? lang('AreYouSureDeleteFewMessages') : lang('AreYouSureDeleteSingleMessage')}\n            </p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{oldLang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{oldLang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        {canDeleteForAll && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={contactName ? renderText(oldLang('DeleteMessagesOptionAlso', contactName))\n              : oldLang('Conversation.DeleteMessagesForEveryone')}\n            checked={shouldDeleteForAll}\n            onCheck={setShouldDeleteForAll}\n          />\n        )}\n        <div className={buildClassName('dialog-buttons',\n          isMediaDropdownOpen ? styles.dialogButtons : styles.proceedButtons)}\n        >\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageList}>\n            {shouldShowOption ? oldLang('DeleteProceedBtn') : lang('Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const messageIds = deleteMessageModal?.messageIds;\n    const chatId = deleteMessageModal?.chatId;\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global, messageIds);\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const linkedChatId = chatFullInfo?.linkedChatId;\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const isSchedule = deleteMessageModal?.isSchedule;\n    const onConfirm = deleteMessageModal?.onConfirm;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const chatBot = Boolean(chat && !isSystemBot(chat.id) && selectBot(global, chat.id));\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && getHasAdminRight(chat, 'banUsers');\n    const isCreator = chat?.isCreator;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && (isChatSuperGroup(chat) || isChannel);\n\n    return {\n      chat,\n      isChannel,\n      isSuperGroup,\n      messageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      canBanUsers,\n      linkedChatId,\n      isSchedule,\n      isCreator,\n      onConfirm,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages, selectCurrentChat,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n  shouldWarnAboutSvg?: boolean;\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  chat,\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n    reportMessages,\n    openDeleteMessageModal,\n    setSharedSettingOption,\n  } = getActions();\n  const lang = useOldLang();\n\n  useCopySelectedMessages(isActive);\n\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    openDeleteMessageModal({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n      isSchedule,\n    });\n  });\n\n  useEffect(() => {\n    return isActive && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? handleDelete : undefined,\n        onDelete: canDeleteMessages ? handleDelete : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, handleDelete, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const handleMessageDownload = useLastCallback(() => {\n    if (shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: false });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const openMessageReport = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    reportMessages({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n    });\n    exitMessageSelectMode();\n  });\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <Icon name={icon} />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className={className}>\n        <div className=\"MessageSelectToolbar-inner\">\n          <Button\n            color=\"translucent\"\n            round\n            onClick={handleExitMessageSelectMode}\n            ariaLabel=\"Exit select mode\"\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n            {formattedMessagesCount}\n          </span>\n\n          {Boolean(selectedMessagesCount) && (\n            <div className=\"MessageSelectToolbar-actions\">\n              {messageListType !== 'scheduled' && canForwardMessages && (\n                renderButton(\n                  'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n                )\n              )}\n              {canReportMessages && (\n                renderButton('flag', lang('Conversation.ReportMessages'), openMessageReport)\n              )}\n              {canDownloadMessages && !hasProtectedMessage && (\n                renderButton('download', lang('lng_media_download'), handleMessageDownload)\n              )}\n              {!hasProtectedMessage && (\n                renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n              )}\n              {canDeleteMessages && (\n                renderButton('delete', lang('EditAdminGroupDeleteMessages'), handleDelete, true)\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const chat = selectCurrentChat(global);\n\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall || tabState.reportModal\n      || tabState.deleteMessageModal);\n\n    return {\n      chat,\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n      shouldWarnAboutSvg,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport Icon from '../common/icons/Icon';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={oldLang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <Icon name=\"heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(lang, reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(lang, count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={oldLang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <Icon name=\"heart-outline\" className=\"status-icon\" />\n                          {formatDateAtTime(oldLang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(oldLang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {oldLang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport { IS_ANDROID } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PeerChip\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","/* eslint-disable no-null/no-null */\n/* eslint-disable consistent-return */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-no-bind */\n/* eslint-disable no-console */\n\nimport React, { useState } from 'react';\nimport {\n  type Dispatch,\n  memo,\n  type SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\nimport type { UseChatHelpers } from '@ai-sdk/react';\nimport type {\n  Message,\n} from 'ai';\nimport cx from 'classnames';\nimport { toast } from 'sonner';\nimport { useLocalStorage, useWindowSize } from 'usehooks-ts';\n\nimport { sanitizeUIMessages } from '../../../lib/utils';\nimport { Button } from '../component/button';\nimport { Textarea } from '../component/textarea';\nimport { StopIcon } from '../icons';\n\nfunction PureMultimodalInput({\n  status,\n  stop,\n  setMessages,\n  handleSearch,\n  className,\n}: {\n  status: UseChatHelpers['status'];\n  stop: () => void;\n  setMessages: Dispatch<SetStateAction<Array<Message>>>;\n  handleSearch: (inputValue:string)=>void;\n  className?: string;\n}) {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const { width } = useWindowSize();\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      adjustHeight();\n    }\n  }, []);\n\n  const adjustHeight = () => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight + 2}px`;\n    }\n  };\n\n  const resetHeight = () => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = '98px';\n    }\n  };\n\n  const [localStorageInput, setLocalStorageInput] = useLocalStorage(\n    'input',\n    '',\n  );\n\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      const domValue = textareaRef.current.value;\n      // Prefer DOM value over localStorage to handle hydration\n      const finalValue = domValue || localStorageInput || '';\n      // setInput(finalValue);\n      setInputValue(finalValue);\n      adjustHeight();\n    }\n    // Only run once after hydration\n    // eslint-disable-next-line react-hooks/exhaustive-deps, react-hooks-static-deps/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLocalStorageInput(inputValue);\n  }, [inputValue, setLocalStorageInput]);\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setInputValue(event.target.value);\n    adjustHeight();\n  };\n\n  const submitForm = useCallback(() => {\n    if (!inputValue) {\n      return;\n    }\n    handleSearch(inputValue);\n    setInputValue('');\n    setLocalStorageInput('');\n    resetHeight();\n\n    if (width && width > 768) {\n      textareaRef.current?.focus();\n    }\n  }, [handleSearch, inputValue, setLocalStorageInput, width]);\n\n  return (\n    <div className=\"relative w-full mx-[22px] flex flex-col gap-4\">\n      <Textarea\n        ref={textareaRef}\n        placeholder=\"Send a message...\"\n        value={inputValue}\n        onChange={handleInput}\n        className={cx(\n          'min-h-[24px] h-[76px] overflow-hidden resize-none rounded-2xl !text-base bg-muted pb-10 focus-visible:!ring-0 !ring-offset-0',\n          className,\n        )}\n        rows={2}\n        autoFocus\n        onKeyDown={(event) => {\n          if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n\n            if (status !== 'ready') {\n              toast.error('Please wait for the model to finish its response!');\n            } else {\n              submitForm();\n            }\n          }\n        }}\n      />\n\n      <div className=\"absolute bottom-0 right-0 p-2 w-fit flex flex-col justify-end\">\n        {status === 'submitted' ? (\n          <StopButton stop={stop} setMessages={setMessages} />\n        ) : (\n          <SendButton\n            input={inputValue}\n            submitForm={submitForm}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport const AISearchInput = memo(\n  PureMultimodalInput,\n  (prevProps, nextProps) => {\n    if (prevProps.status !== nextProps.status) return false;\n\n    return true;\n  },\n);\n\nfunction PureStopButton({\n  stop,\n  setMessages,\n}: {\n  stop: () => void;\n  setMessages: Dispatch<SetStateAction<Array<Message>>>;\n}) {\n  return (\n    <Button\n      className=\"rounded-full p-1.5 h-fit border dark:border-zinc-600\"\n      onClick={(event) => {\n        event.preventDefault();\n        stop();\n        setMessages((messages) => sanitizeUIMessages(messages));\n      }}\n    >\n      <StopIcon size={14} />\n    </Button>\n  );\n}\n\nconst StopButton = memo(PureStopButton);\n\nfunction PureSendButton({\n  submitForm,\n  input,\n}: {\n  submitForm: () => void;\n  input: string;\n}) {\n  return (\n    <Button\n      className=\"!px-0 !py-0 !w-[24px] !h-[24px] !bg-transparent \"\n      onClick={(event) => {\n        event.preventDefault();\n        submitForm();\n      }}\n      disabled={input.length === 0}\n    >\n      {/* <ArrowUpIcon size={14} /> */}\n      <i className=\"icon icon-send text-[#B27AFF] text-[24px]\" />\n    </Button>\n  );\n}\n\nconst SendButton = memo(PureSendButton, (prevProps, nextProps) => {\n  if (prevProps.input !== nextProps.input) return false;\n  return true;\n});\n","/* eslint-disable max-len */\nimport React from 'react';\n\nimport SerenaIcon from '../assets/serena.png';\n\nconst suggestions = [\n  'Who is interested in early investments in GameFi projects?',\n  'Which meme KOLs are worth following?',\n  'Which of my contacts interacts with Paulo the most?',\n  'Which friends do Paulo and I share?',\n  'Find messages about Twitter Space collaboration.',\n];\nconst AISearchSugesstions = (props:{ handleSearch: (query:string)=>void }) => {\n  const { handleSearch } = props;\n  return (\n    <div className=\"flex flex-col mx-[22px]\">\n      <img className=\"w-[52px] h-[52px] rounded-full\" src={SerenaIcon} alt=\"\" />\n      <span className=\"font-bold text-[24px]\">AI Search</span>\n      <span className=\"mb-[12px] text-[14px]\">Intelligent deep search experience.</span>\n      {suggestions.map((item) => {\n        return (\n          <div className=\"px-[10px] py-[6px] mb-[8px] rounded-[8px] bg-[#F8F2FF] text-[14px]\" onClick={() => handleSearch(item)}>\n            {item}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AISearchSugesstions;\n","/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, {\n  useCallback, useEffect, useRef, useState,\n} from 'react';\nimport { useChat } from '@ai-sdk/react';\nimport type { Attachment, UIMessage } from 'ai';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getGlobal } from '../../../global';\n\nimport type { InfiniteScrollRef } from '../component/InfiniteScroll';\n\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport { Messages } from '../messages';\nimport { ChataiStores } from '../store';\nimport { parseMessage2StoreMessage, parseStoreMessage2Message } from '../store/messages-store';\nimport { sendGAEvent } from '../utils/analytics';\nimport { messageEmbeddingStore } from '../vector-store';\n\nimport { InfiniteScroll } from '../component/InfiniteScroll';\nimport { AISearchInput } from './AISearchInput';\nimport AISearchSugesstions from './AISearchSugesstions';\n\nconst GLOBAL_SEARCH_CHATID = '777889';\n\nexport const AISearch = () => {\n  const global = getGlobal();\n  const messageListRef = useRef<InfiniteScrollRef | null>(null);\n  const [attachments, setAttachments] = useState<Array<Attachment>>([]);\n  const [pageInfo, setPageInfo] = useState<{ lastTime: number | undefined; hasMore: boolean }>({ lastTime: undefined, hasMore: true });\n  const {\n    messages, setMessages, append, status, input, setInput, stop, handleSubmit,\n  } = useChat({\n    id: GLOBAL_SEARCH_CHATID,\n    api: 'https://telegpt-three.vercel.app/chat',\n    sendExtraMessageFields: true,\n  });\n\n  useEffect(() => {\n    ChataiStores.message?.getMessages(GLOBAL_SEARCH_CHATID, undefined, 20)?.then((res) => {\n      if (res.messages) {\n        const localChatAiMessages = parseStoreMessage2Message(res.messages);\n        setMessages((prev) => [...localChatAiMessages, ...prev]);\n      }\n      setPageInfo({\n        lastTime: res.lastTime,\n        hasMore: res.hasMore,\n      });\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (messages.length > 0 && status === 'ready') {\n      const parsedMessage = parseMessage2StoreMessage(GLOBAL_SEARCH_CHATID, messages);\n      ChataiStores.message?.storeMessages([...parsedMessage]);\n    }\n  }, [status, messages]);\n\n  const handleLoadMore = useCallback(() => {\n    return new Promise<void>((resolve) => {\n      ChataiStores.message?.getMessages(GLOBAL_SEARCH_CHATID, pageInfo?.lastTime, 20)?.then((res) => {\n        if (res.messages) {\n          const localChatAiMessages = parseStoreMessage2Message(res.messages);\n          setMessages((prev) => [...localChatAiMessages, ...prev]);\n        }\n        setPageInfo({\n          lastTime: res.lastTime,\n          hasMore: res.hasMore,\n        });\n        resolve();\n      });\n    });\n  }, [pageInfo?.lastTime, setMessages]);\n\n  //   const deleteMessage = useCallback((messageId: string) => {\n  //     ChataiStores.message?.delMessage(messageId).then(() => {\n  //       setLocalChatAiMessages((prev) => prev.filter((message) => message.id !== messageId));\n  //       setMessages((prev) => prev.filter((message) => message.id !== messageId));\n  //     });\n  //   }, [setMessages]);\n\n  const searchGroup = useCallback(async (query: string) => {\n    const vectorSearchResults = await messageEmbeddingStore.similaritySearch({\n      query,\n      k: 100,\n      filterOptions: {\n        include: {\n          metadata: {\n            chatType: 'group',\n          },\n        },\n      },\n    });\n    const similarItems = vectorSearchResults.similarItems;\n    let searchResult = null;\n    if (similarItems.length > 0) {\n      const chatIds = Array.from(new Set(similarItems.map((item) => {\n        if (item.score > 0.7) {\n          return (item?.metadata as { chatId: string })?.chatId;\n        }\n        return undefined;\n      }).filter(Boolean)));\n      if (chatIds.length > 0) {\n        searchResult = JSON.stringify(chatIds);\n      }\n    }\n    if (searchResult) {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: searchResult,\n        createdAt: new Date(),\n        parts: [],\n        annotations: [{\n          type: 'group-search',\n        }],\n      };\n      setMessages((prev) => [...prev, message]);\n    } else {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: 'No relevant group was found',\n        createdAt: new Date(),\n        parts: [],\n      };\n      setMessages((prev) => [...prev, message]);\n    }\n  }, [setMessages]);\n\n  const searchUser = useCallback(async (query: string) => {\n    const vectorSearchResults = await messageEmbeddingStore.similaritySearch({\n      query,\n      k: 100,\n      filterOptions: {\n        include: {\n          metadata: {\n            chatType: 'private',\n          },\n        },\n      },\n    });\n    const similarItems = vectorSearchResults.similarItems;\n    let searchResult = null;\n    if (similarItems.length > 0) {\n      const senderIds = Array.from(new Set(similarItems.map((item) => {\n        if (item.score > 0.7) {\n          return (item?.metadata as { senderId: string })?.senderId;\n        }\n        return undefined;\n      }).filter(Boolean)));\n      if (senderIds.length > 0) {\n        searchResult = JSON.stringify(senderIds);\n      }\n    }\n    if (searchResult) {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: searchResult,\n        createdAt: new Date(),\n        parts: [],\n        annotations: [{\n          type: 'user-search',\n        }],\n      };\n      setMessages((prev) => [...prev, message]);\n    } else {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: 'No relevant users was found',\n        createdAt: new Date(),\n        parts: [],\n      };\n      setMessages((prev) => [...prev, message]);\n    }\n  }, [setMessages]);\n  const searchMessage = useCallback(async (query: string) => {\n    const vectorSearchResults = await messageEmbeddingStore.similaritySearch({\n      query,\n      k: 100,\n    });\n    const similarItems = vectorSearchResults.similarItems;\n    if (similarItems.length > 0) {\n      const messageList = similarItems.map((item) => {\n        const { chatId, senderId } = item.metadata as { chatId:string;senderId:string };\n        const chat = selectChat(global, chatId);\n        if (chat) {\n          const peer = senderId ? selectUser(global, senderId) : undefined;\n          return {\n            chatId,\n            chatTitle: chat?.title ?? 'Unknown',\n            senderName: peer ? `${peer.firstName || ''} ${peer.lastName || ''}` : '',\n            content: item.text,\n          };\n        }\n        return null;\n      });\n      append({\n        role: 'user',\n        content: `你是一个专业的聊天记录分析师,用户输入的关键词是${query},下面是根据关键词检索出来的相关的聊天记录,请对此加以总结:\n          # 总结消息偏好:\n              ## 根据消息的内容选择合适的语种进行总结\n              ## 过滤所有的无意义消息；\n              ## 尽量提取关键信息(如任务、问题、请求等),并简要总结。\n              ## 为保证输出内容的完整性,尽量精简总结内容；\n              ## 主话题不超过5个,子话题总数不超过15个\n          # 消息内容\n          ${JSON.stringify(messageList)}  \n        `,\n        id: Math.random().toString(),\n        annotations: [{\n          isAuxiliary: true,\n        }],\n      });\n    }\n  }, [append, global]);\n\n  const toolsHitCheck = useCallback((inputValue: string) => {\n    fetch('https://telegpt-three.vercel.app/tool-check', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        messages: [{\n          id: uuidv4(),\n          content: inputValue,\n          role: 'user',\n        }],\n      }),\n    }).then((res) => res.json())\n      .then((toolResults) => {\n        if (toolResults && toolResults.length > 0) {\n          toolResults.forEach((toolCall: any) => {\n            if (toolCall.toolName === 'checkIsSearchGroup') {\n              searchGroup(toolCall.result.keyword);\n            } else if (toolCall.toolName === 'checkIsSearchUser') {\n              searchUser(toolCall.result.keyword);\n            } else if (toolCall.toolName === 'nullTool') {\n              // eslint-disable-next-line no-console\n              console.log('没有命中工具');\n              searchMessage(inputValue);\n            }\n          });\n        }\n      });\n  }, [searchGroup, searchMessage, searchUser]);\n\n  const handleSearch = useCallback((query: string) => {\n    setMessages((messages) => {\n      return [...messages, {\n        role: 'user',\n        content: query,\n        id: Math.random().toString(),\n        createdAt: new Date(),\n      }];\n    });\n    toolsHitCheck(query);\n    messageListRef.current?.scrollToBottom();\n    sendGAEvent('ai_search');\n  }, [setMessages, toolsHitCheck]);\n\n  return (\n    <div className=\"pb-[28px] flex-1 flex flex-col h-full gap-[8px] overflow-hidden\">\n      <InfiniteScroll\n        className=\"chat-ai-output-wrapper flex-1\"\n        loadMore={handleLoadMore}\n        hasMore={pageInfo.hasMore}\n        ref={messageListRef}\n      >\n        {!pageInfo.hasMore && (\n          <AISearchSugesstions handleSearch={handleSearch} />\n        )}\n        <Messages\n          status={status}\n          messages={messages}\n        />\n      </InfiniteScroll>\n      <form className=\"flex mx-auto gap-2 w-full\">\n        <AISearchInput\n          status={status}\n          stop={stop}\n          setMessages={setMessages}\n          handleSearch={handleSearch}\n        />\n      </form>\n    </div>\n  );\n};\n","/* eslint-disable no-null/no-null */\nimport React, { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport { injectComponent } from '../../../lib/injectComponent';\nimport { AISearch } from '../../chatAssistant/ai-search/AISearch';\n\nconst injectMessageAI = injectComponent(AISearch);\nexport const AISearchWrapper = () => {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    if (containerRef.current) {\n      injectMessageAI(containerRef.current);\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"LeftSearch--content\" ref={containerRef} />\n  );\n};\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ThemeKey } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\nimport { selectSharedSettings } from '../../../../global/selectors/sharedState';\n\nexport type StateProps = {\n  theme: ThemeKey;\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyDefaults, selectNotifyException, selectUser,\n} from '../../../global/selectors';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  withOpenAppButton?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  withOpenAppButton,\n  onClick,\n}) => {\n  const { requestMainWebView } = getActions();\n  const oldLang = useOldLang();\n\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useLastCallback(() => {\n    onClick(chatId);\n  });\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chatId,\n      peerId: chatId,\n      theme,\n    });\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {withOpenAppButton && user?.hasMainMiniApp && (\n        <Button\n          className=\"ChatBadge miniapp\"\n          pill\n          fluid\n          size=\"tiny\"\n          onClick={handleOpenApp}\n        >\n          {oldLang('BotOpen')}\n        </Button>\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    return filterPeersByQuery({ ids: withoutRecent, query: searchQuery, type: 'user' });\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: OldLangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <Icon name=\"calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredPeer } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId } from '../../../global/helpers';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { type ObserveFn, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport BadgeButton from '../../common/BadgeButton';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredContextMenuContainer';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  sponsoredPeer: ApiSponsoredPeer;\n  observeIntersection?: ObserveFn;\n};\n\nconst LeftSearchResultSponsored: FC<OwnProps> = ({\n  sponsoredPeer,\n  observeIntersection,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const { clickSponsored, viewSponsored, openChat } = getActions();\n  const lang = useLang();\n\n  const {\n    peerId, randomId, additionalInfo, sponsorInfo,\n  } = sponsoredPeer;\n\n  useOnIntersect(ref, observeIntersection, (entry) => {\n    if (entry.intersectionRatio === 1) {\n      viewSponsored({ randomId });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    clickSponsored({ randomId });\n    openChat({ id: peerId });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const {\n    handleClick: handleBadgeClick,\n    handleMouseDown: handleBadgeMouseDown,\n  } = useFastClick((e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleContextMenu(e);\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      ref={ref}\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      buttonRef={buttonRef}\n    >\n      {isUserId(peerId) ? (\n        <PrivateChatInfo\n          userId={peerId}\n          withUsername\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={peerId}\n          withUsername\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      <BadgeButton className=\"search-sponsored-badge\" onMouseDown={handleBadgeMouseDown} onClick={handleBadgeClick}>\n        {lang('SponsoredPeerBadge')}\n        <Icon name=\"more\" />\n      </BadgeButton>\n      {contextMenuAnchor && (\n        <SponsoredMessageContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          triggerRef={ref}\n          randomId={randomId}\n          additionalInfo={additionalInfo}\n          canReport\n          sponsorInfo={sponsorInfo}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(LeftSearchResultSponsored);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              withOpenAppButton\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageSearchContext, ApiSponsoredPeer } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  isChatChannel,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PeerChip from '../../common/PeerChip';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Transition from '../../ui/Transition';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport LeftSearchResultSponsored from './LeftSearchResultSponsored';\nimport RecentContacts from './RecentContacts';\n\nimport './ChatResults.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  sponsoredPeer?: ApiSponsoredPeer;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  sponsoredPeer,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal,\n    setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n  const [searchContext, setSearchContext] = useState<ApiMessageSearchContext>('all');\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n          context: searchContext,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery, searchContext]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  function getSearchContextCaption(context: ApiMessageSearchContext) {\n    if (context === 'users') return lang('PrivateChatsSearchContext');\n    if (context === 'groups') return lang('GroupChatsSearchContext');\n    if (context === 'channels') return lang('ChannelsSearchContext');\n    return lang('AllChatsSearchContext');\n  }\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.chatResultsContextMenu .bubble'));\n  const getTriggerElement = useLastCallback(() => ref.current!.querySelector('.menuTrigger'));\n\n  const handleClickContext = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const itemPlaceholderClass = buildClassName('icon', 'iconPlaceholder');\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"chatResultsContextMenu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          <MenuItem\n            icon={searchContext === 'all' ? 'check' : undefined}\n            customIcon={searchContext !== 'all' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('all')}\n          >\n            {getSearchContextCaption('all')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'users' ? 'check' : undefined}\n            customIcon={searchContext !== 'users' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('users')}\n          >\n            {getSearchContextCaption('users')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'groups' ? 'check' : undefined}\n            customIcon={searchContext !== 'groups' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('groups')}\n          >\n            {getSearchContextCaption('groups')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'channels' ? 'check' : undefined}\n            customIcon={searchContext !== 'channels' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('channels')}\n          >\n            {getSearchContextCaption('channels')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterPeersByQuery({ ids: filteredChatIds, query: searchQuery, type: 'chat' });\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterPeersByQuery({\n      ids: contactIdsWithMe, query: searchQuery, type: 'user',\n    });\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    searchMessagesGlobal({\n      type: isChannelList ? 'channels' : 'text',\n      context: searchContext,\n      shouldResetResultsByType: true,\n      shouldCheckFetchingMessagesStatus: true,\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [searchContext]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(oldLang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const actualFoundIds = foundMessages;\n\n  const nothingFound = searchContext === 'all' && fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !actualFoundIds.length;\n  const isMessagesFetching = fetchingStatus?.messages;\n\n  const shouldRenderTopPeers = !searchQuery && !searchDate && !isChannelList;\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n    isDisabled: !shouldRenderTopPeers,\n  });\n\n  if (shouldRenderTopPeers) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  const shouldRenderMessagesSection = searchContext === 'all' ? Boolean(actualFoundIds.length) : true;\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"LeftSearch--content custom-scroll\"\n      items={actualFoundIds}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={oldLang('ChatList.Search.NoResults')}\n          description={oldLang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={oldLang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PeerChip\n              peerId={id}\n              className=\"left-search-local-suggestion\"\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {oldLang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                withOpenAppButton\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {oldLang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {sponsoredPeer && (\n            <LeftSearchResultSponsored sponsoredPeer={sponsoredPeer} observeIntersection={observe} />\n          )}\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {oldLang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      <div className=\"menuOwner\" ref={ref}>\n        {renderContextMenu()}\n        {shouldRenderMessagesSection && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n              {!isChannelList && (\n                <Link className=\"Link menuTrigger dropDownLink\" onClick={handleClickContext}>\n                  {lang('SearchContextCaption', {\n                    type: getSearchContextCaption(searchContext),\n                  }, {\n                    withNodes: true,\n                  })}\n\n                  <Transition\n                    name=\"fade\"\n                    shouldCleanup\n                    activeKey={Number(isMessagesFetching)}\n                    className=\"iconContainer\"\n                    slideClassName=\"iconContainerSlide\"\n                  >\n                    {isMessagesFetching && (<Loading />)}\n                    {!isMessagesFetching && <Icon name=\"down\" />}\n                  </Transition>\n                </Link>\n              )}\n              {oldLang('SearchMessages')}\n            </h3>\n            {actualFoundIds.map(renderFoundMessage)}\n          </div>\n        )}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType, sponsoredPeer,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      sponsoredPeer,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { RegularLangKey } from '../../../types/language';\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport { AISearchWrapper } from './AISearchWrapper';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\ntype TabInfo = {\n  type: GlobalSearchContent;\n  key: RegularLangKey;\n};\n\nconst TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabChats' },\n  { type: GlobalSearchContent.AI, key: 'SearchTabAI' },\n  { type: GlobalSearchContent.ChannelList, key: 'SearchTabChannels' },\n  { type: GlobalSearchContent.BotApps, key: 'SearchTabApps' },\n  { type: GlobalSearchContent.Media, key: 'SearchTabMedia' },\n  { type: GlobalSearchContent.Links, key: 'SearchTabLinks' },\n  { type: GlobalSearchContent.Files, key: 'SearchTabFiles' },\n  { type: GlobalSearchContent.Music, key: 'SearchTabMusic' },\n  { type: GlobalSearchContent.Voice, key: 'SearchTabVoice' },\n];\n\nconst CHAT_TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabMessages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = useMemo(() => {\n    const arr = chatId ? CHAT_TABS : TABS;\n    return arr.map((tab) => ({\n      ...tab,\n      title: lang(tab.key),\n    }));\n  }, [chatId, lang]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.AI:\n              return (\n                <AISearchWrapper />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterPeersByQuery({ ids: chatIds, query: chatFilter, type: 'chat' }),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport Icon from '../../../common/icons/Icon';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIconWithPreview\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title.text}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { AI_FOLDER_ID, ALL_FOLDER_ID, PRESET_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS, UNREAD_FOLDER_ID } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\nimport { selectSharedSettings } from \"../../../../global/selectors/sharedState\"\nimport { filterAIFolder } from \"../../../chatAssistant/ai-chatfolders/util\"\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 56;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: lang('FilterAllChats'),\n            entities: [],\n          },\n        };\n      } else if (id === PRESET_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: 'Preset',\n            entities: [],\n          },\n        };\n      } else if (id === UNREAD_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: 'Unread',\n            entities: [],\n          },\n        };\n      } else if (id === AI_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: 'AI',\n            entities: [],\n          },\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n        noTitleAnimations: folder.noTitleAnimations,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIconWithPreview\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"settings-button with-icon\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <Icon name=\"add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID || folder.id === PRESET_FOLDER_ID || folder.id === UNREAD_FOLDER_ID || folder.id === AI_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {renderTextWithEntities({\n                        text: folder.title.text,\n                        entities: folder.title.entities,\n                        noCustomEmojiPlayback: folder.noTitleAnimations,\n                      })}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                    {isBlocked && <Icon name=\"lock-badge\" className=\"settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <Icon name=\"link\" className=\"mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                  </span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    let folderIds = global.chatFolders.orderedIds;\n    const { aiChatFolders } = selectSharedSettings(global);\n    if (aiChatFolders !== true) {\n      folderIds = filterAIFolder(folderIds);\n    }\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Icon from '../../../common/icons/Icon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  folder?: ApiChatFolder;\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  folder,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (folder?.includedChatIds || []).concat(folder?.pinnedChatIds || []);\n  }, [folder?.includedChatIds, folder?.pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        {folder && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('FolderLinkTitleDescription', {\n              folder: renderTextWithEntities({\n                text: folder.title.text,\n                entities: folder.title.entities,\n                noCustomEmojiPlayback: folder.noTitleAnimations,\n              }),\n              chats: lang('FolderLinkTitleDescriptionChats', { count: chatsCount }, { pluralValue: chatsCount }),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n          </p>\n        )}\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? oldLang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      folder,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsText } from '../../../util/localization/format';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../icons/Icon';\n\ntype OwnProps = {\n  min?: number;\n  max: number;\n  value: number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  bold?: boolean;\n  className?: string;\n  defaultValue: number;\n  onChange: (value: number) => void;\n  canChangeChargeForMessages?: boolean;\n};\n\nconst DEFAULT_POINTS = [50, 100, 500, 1000, 2000, 5000, 10000];\n\nconst PaidMessageSlider: FC<OwnProps> = ({\n  min = 0,\n  max,\n  value,\n  disabled,\n  readOnly,\n  bold,\n  className,\n  defaultValue,\n  onChange,\n  canChangeChargeForMessages,\n}) => {\n  const lang = useLang();\n\n  const points = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < DEFAULT_POINTS.length; i++) {\n      if (DEFAULT_POINTS[i] < max) {\n        result.push(DEFAULT_POINTS[i]);\n      }\n\n      if (DEFAULT_POINTS[i] >= max) {\n        result.push(max);\n        break;\n      }\n    }\n\n    return result;\n  }, [max]);\n\n  const handleChange = useLastCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.currentTarget.value);\n    onChange(getValue(points, newValue));\n  });\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    readOnly && 'readOnly',\n    bold && 'bold',\n  );\n\n  function renderTopRow() {\n    return (\n      <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"value-min\" dir=\"auto\">{lang.number(min)}</span>\n        <span className=\"settings-range-value\">\n          {!canChangeChargeForMessages && (<Icon name=\"lock-badge\" />)}\n          {formatStarsAsText(lang, getValue(points, getProgress(points, value)))}\n        </span>\n        <span className=\"value-max\" dir=\"auto\">{lang.number(max)}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className={mainClassName}>\n      {renderTopRow()}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${(getProgress(points, value) / points.length) * 100}%`}\n        />\n        <input\n          min={0}\n          max={points.length}\n          defaultValue={getProgress(points, defaultValue)}\n          step=\"any\"\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction getProgress(points: number[], value: number) {\n  const pointIndex = points.findIndex((point) => value <= point);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const progress = (value - prevPoint) / (nextPoint - prevPoint);\n  return pointIndex + progress;\n}\n\nfunction getValue(points: number[], progress: number) {\n  const pointIndex = Math.floor(progress);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const pointValue = prevPoint + (nextPoint - prevPoint) * (progress - pointIndex);\n  return pointValue < 100 ? Math.round(pointValue) : Math.round(pointValue / 10) * 10;\n}\n\nexport default memo(PaidMessageSlider);\n","import React, {\n  memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n  MINIMUM_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPercent } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Icon from '../icons/Icon';\nimport PaidMessageSlider from './PaidMessageSlider';\n\ntype OwnProps = {\n  chargeForMessages: number;\n  canChangeChargeForMessages?: boolean;\n  isGroupChat?: boolean;\n  onChange: (value: number) => void;\n};\n\ntype StateProps = {\n  starsUsdWithdrawRate: number;\n  starsPaidMessageAmountMax: number;\n  starsPaidMessageCommissionPermille: number;\n};\n\nfunction PaidMessagePrice({\n  starsUsdWithdrawRate,\n  starsPaidMessageAmountMax,\n  starsPaidMessageCommissionPermille,\n  canChangeChargeForMessages,\n  isGroupChat,\n  chargeForMessages,\n  onChange,\n}: OwnProps & StateProps) {\n  const { openPremiumModal } = getActions();\n\n  const lang = useLang();\n\n  const handleChargeForMessagesChange = useLastCallback((value: number) => {\n    onChange?.(value);\n  });\n\n  const handleUnlockWithPremium = useLastCallback(() => {\n    openPremiumModal({ initialSection: 'message_privacy' });\n  });\n\n  return (\n    <>\n      <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('SectionTitleStarsForForMessages')}\n      </h4>\n      <PaidMessageSlider\n        defaultValue={chargeForMessages}\n        min={MINIMUM_CHARGE_FOR_MESSAGES}\n        max={starsPaidMessageAmountMax}\n        value={chargeForMessages}\n        onChange={handleChargeForMessagesChange}\n        canChangeChargeForMessages={canChangeChargeForMessages}\n        readOnly={!canChangeChargeForMessages}\n      />\n      {!canChangeChargeForMessages && (\n        <Button\n          color=\"primary\"\n          fluid\n          size=\"smaller\"\n          noForcedUpperCase\n          className=\"settings-unlock-button\"\n          onClick={handleUnlockWithPremium}\n        >\n          <span className=\"settings-unlock-button-title\">\n            {lang('UnlockButtonTitle')}\n            <Icon name=\"lock-badge\" className=\"settings-unlock-button-icon\" />\n          </span>\n        </Button>\n      )}\n      {canChangeChargeForMessages && (\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang(isGroupChat ? 'SetPriceGroupDescription' : 'SectionDescriptionStarsForForMessages', {\n            percent: formatPercent(starsPaidMessageCommissionPermille * 100),\n            amount: formatCurrencyAsString(\n              chargeForMessages * starsUsdWithdrawRate * starsPaidMessageCommissionPermille,\n              'USD',\n              lang.code,\n            ),\n          }, {\n            withNodes: true,\n          })}\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const starsUsdWithdrawRateX1000 = global.appConfig?.starsUsdWithdrawRateX1000;\n    const starsUsdWithdrawRate = starsUsdWithdrawRateX1000 ? starsUsdWithdrawRateX1000 / 1000 : 1;\n    const configStarsPaidMessageCommissionPermille = global.appConfig?.starsPaidMessageCommissionPermille;\n    const starsPaidMessageCommissionPermille = configStarsPaidMessageCommissionPermille\n      ? configStarsPaidMessageCommissionPermille / 1000 : 100;\n\n    return {\n      starsPaidMessageCommissionPermille,\n      starsUsdWithdrawRate,\n      starsPaidMessageAmountMax: global.appConfig?.starsPaidMessageAmountMax || DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n    };\n  },\n)(PaidMessagePrice));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n  isChecked?: boolean;\n};\n\nfunction PrivacyLockedOption({ label, isChecked }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isChecked && styles.checked,\n      )}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sBptmiga\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\",\"checked\":\"U_6O1ebL\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  DEFAULT_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectNewNoncontactPeersRequirePremium,\n  selectNonContactPeersPaidStars,\n} from '../../../global/selectors';\n\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PaidMessagePrice from '../../common/paidMessage/PaidMessagePrice';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  canChargeForMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  nonContactPeersPaidStars: number;\n  noPaidReactionsForUsersCount: number;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  canChargeForMessages,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  nonContactPeersPaidStars,\n  isCurrentUserPremium,\n  noPaidReactionsForUsersCount,\n  onReset,\n  onScreenSelect,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const canChangeForContactsAndPremium = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n  const canChangeChargeForMessages = isCurrentUserPremium && canChargeForMessages;\n  const [chargeForMessages, setChargeForMessages] = useState<number>(nonContactPeersPaidStars);\n\n  const selectedValue = useMemo(() => {\n    if (shouldChargeForMessages) return 'charge_for_messages';\n    if (shouldNewNonContactPeersRequirePremium) return 'contacts_and_premium';\n    return 'everybody';\n  }, [shouldChargeForMessages, shouldNewNonContactPeersRequirePremium]);\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChangeForContactsAndPremium ? (\n          oldLang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption\n            label={oldLang('PrivacyMessagesContactsAndPremium')}\n            isChecked={selectedValue === 'contacts_and_premium'}\n          />\n        ),\n        hidden: !canChangeForContactsAndPremium,\n        isCanCheckedInDisabled: true,\n      },\n      {\n        value: 'charge_for_messages',\n        label: canChangeChargeForMessages ? (\n          lang('PrivacyChargeForMessages')\n        ) : (\n          <PrivacyLockedOption\n            label={lang('PrivacyChargeForMessages')}\n            isChecked={selectedValue === 'charge_for_messages'}\n          />\n        ),\n        hidden: !canChangeChargeForMessages,\n        isCanCheckedInDisabled: true,\n      },\n    ];\n  }, [oldLang, lang, canChangeForContactsAndPremium, canChangeChargeForMessages, selectedValue]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({\n      shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium',\n      // eslint-disable-next-line no-null/no-null\n      nonContactPeersPaidStars: privacy === 'charge_for_messages' ? chargeForMessages : null,\n    });\n  });\n\n  const updateGlobalPrivacySettingsWithDebounced = useDebouncedCallback((value: number) => {\n    updateGlobalPrivacySettings({\n      nonContactPeersPaidStars: value,\n    });\n  }, [updateGlobalPrivacySettings], 300, true);\n\n  const handleChargeForMessagesChange = useCallback((value: number) => {\n    setChargeForMessages(value);\n    updateGlobalPrivacySettingsWithDebounced(value);\n  }, [setChargeForMessages, updateGlobalPrivacySettingsWithDebounced]);\n\n  function renderSectionNoPaidMessagesForUsers() {\n    const itemSubtitle = !noPaidReactionsForUsersCount ? lang('SubtitlePrivacyAddUsers')\n      : oldLang('Users', noPaidReactionsForUsersCount, 'i');\n\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {lang('RemoveFeeTitle')}\n        </h4>\n        <ListItem\n          narrow\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => {\n            onScreenSelect(SettingsScreens.PrivacyNoPaidMessages);\n          }}\n        >\n          <div className=\"multiline-item full-size\">\n            <span className=\"title\">{lang('ExceptionTitlePrivacyChargeForMessages')}</span>\n            <span className=\"subtitle\">{\n              itemSubtitle\n            }\n            </span>\n          </div>\n        </ListItem>\n      </div>\n    );\n  }\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const privacyDescription = useMemo(() => {\n    if (shouldChargeForMessages) return lang('PrivacyDescriptionChargeForMessages');\n    return lang('PrivacyDescriptionMessagesContactsAndPremium');\n  }, [shouldChargeForMessages, lang]);\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={selectedValue}\n        />\n        <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {privacyDescription}\n        </p>\n      </div>\n      {selectedValue === 'charge_for_messages' && (\n        <div className=\"settings-item fluid-container\">\n          <PaidMessagePrice\n            canChangeChargeForMessages={canChangeChargeForMessages}\n            chargeForMessages={chargeForMessages}\n            onChange={handleChargeForMessagesChange}\n          />\n        </div>\n      )}\n      {canChangeChargeForMessages && selectedValue === 'charge_for_messages' && renderSectionNoPaidMessagesForUsers()}\n      {!isCurrentUserPremium && selectedValue !== 'charge_for_messages'\n      && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const nonContactPeersPaidStars = selectNonContactPeersPaidStars(global);\n\n  const noPaidReactionsForUsersCount = global.settings.privacy.noPaidMessages?.allowUserIds.length || 0;\n\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    shouldChargeForMessages: Boolean(nonContactPeersPaidStars),\n    nonContactPeersPaidStars: nonContactPeersPaidStars || DEFAULT_CHARGE_FOR_MESSAGES,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n    canChargeForMessages: global.appConfig?.starsPaidMessagesAvailable,\n    noPaidReactionsForUsersCount,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { AccountSettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', {\n      limit: lang('FileSizeMB', { count: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] }),\n    });\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettingsContacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsPrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsGroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsChannels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadFilesTitle'),\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 56;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-item\">\n          <div className=\"settings-input\">\n            <AvatarEditable\n              currentAvatarBlobUrl={currentAvatarBlobUrl}\n              onChange={handlePhotoChange}\n              title=\"Edit your profile photo\"\n              disabled={isLoading}\n            />\n            <InputText\n              value={firstName}\n              onChange={handleFirstNameChange}\n              label={lang('FirstName')}\n              disabled={isLoading}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              value={lastName}\n              onChange={handleLastNameChange}\n              label={lang('LastName')}\n              disabled={isLoading}\n            />\n            <TextArea\n              value={bio}\n              onChange={handleBioChange}\n              label={lang('UserBio')}\n              disabled={isLoading}\n              maxLength={maxBioLength}\n              maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n            />\n          </div>\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <div className=\"settings-input\">\n            <UsernameInput\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n          </div>\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ELECTRON,\n  IS_SNAP_EFFECT_SUPPORTED,\n  IS_WAVE_TRANSFORM_SUPPORTED,\n} from '../../../util/browser/windowEnvironment';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSharedSettingOption, requestWave } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const snapButtonRef = useRef<HTMLDivElement>(null);\n  const [isSnapButtonAnimating, setIsSnapButtonAnimating] = useState(false);\n\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  const handleRequestWave = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    requestWave({ startX: e.clientX, startY: e.clientY });\n  });\n\n  const handleRequestConfetti = useLastCallback(() => {\n    requestConfetti({ withStars: true });\n  });\n\n  const handleSnap = useLastCallback(() => {\n    const button = snapButtonRef.current;\n    if (!button) return;\n\n    if (animateSnap(button)) {\n      setIsSnapButtonAnimating(true);\n      // Manual reset for debug\n      setTimeout(() => {\n        setIsSnapButtonAnimating(false);\n      }, 1500);\n    }\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          onClick={handleRequestConfetti}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n        <ListItem\n          onClick={handleRequestWave}\n          icon=\"story-expired\"\n          disabled={!IS_WAVE_TRANSFORM_SUPPORTED}\n        >\n          <div className=\"title\">Start wave</div>\n        </ListItem>\n        <ListItem\n          ref={snapButtonRef}\n          onClick={handleSnap}\n          icon=\"spoiler\"\n          disabled={!IS_SNAP_EFFECT_SUPPORTED}\n          style={isSnapButtonAnimating ? 'visibility: hidden' : ''}\n        >\n          <div className=\"title\">Vaporize this button</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      shouldForceHttpTransport,\n      shouldAllowHttpTransport,\n      shouldCollectDebugLogs,\n      shouldDebugExportedSenders,\n    } = selectSharedSettings(global);\n\n    return {\n      shouldForceHttpTransport,\n      shouldAllowHttpTransport,\n      shouldCollectDebugLogs,\n      shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { SharedSettings, ThemeKey, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/browser/windowEnvironment';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<SharedSettings, (\n    'messageTextSize' |\n    'messageSendKeyCombo' |\n    'timeFormat' |\n    'theme' |\n    'shouldUseSystemTheme'\n  )>;\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    setSharedSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const timeFormatOptions: IRadioOption[] = [{\n    label: lang('SettingsTimeFormat12'),\n    value: '12h',\n  }, {\n    label: lang('SettingsTimeFormat24'),\n    value: '24h',\n  }];\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChatAppearanceLight'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChatAppearanceDark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChatAppearanceSystem'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('SettingsSendEnter'), subLabel: lang('SettingsSendEnterDescription') },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'SettingsSendCmdenter' : 'SettingsSendCtrlenter'),\n      subLabel: lang('SettingsSendPlusEnterDescription'),\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSharedSettingOption({ messageTextSize: newSize });\n  }, []);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ThemeKey;\n\n    setSharedSettingOption({ theme: newTheme });\n    setSharedSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, []);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSharedSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSharedSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, []);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSharedSettingOption({ messageSendKeyCombo: newCombo as SharedSettings['messageSendKeyCombo'] });\n  }, []);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Settings')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('SettingsTray')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsTimeFormat')}\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={timeFormatOptions}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SettingsKeyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      theme,\n      shouldUseSystemTheme,\n      messageSendKeyCombo,\n      messageTextSize,\n      timeFormat,\n    } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      messageTextSize,\n      timeFormat,\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme, selectThemeValues } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = selectThemeValues(global, theme) || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme, selectThemeValues } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = selectThemeValues(global, theme) || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{oldLang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{oldLang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{oldLang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{oldLang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{oldLang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{oldLang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{oldLang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{oldLang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{oldLang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{oldLang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{oldLang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{oldLang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{oldLang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{oldLang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{oldLang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{oldLang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{oldLang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{oldLang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyGifts:\n        return <h3>{lang('PrivacyGifts')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{oldLang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{oldLang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{oldLang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{oldLang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{oldLang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{oldLang('AlwaysShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{oldLang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{oldLang('AlwaysAllow')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{oldLang('NeverAllow')}</h3>;\n\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return <h3>{lang('RemoveFeeTitle')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('MenuAnimations')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{oldLang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{oldLang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{oldLang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{oldLang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{oldLang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{oldLang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{oldLang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{oldLang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{oldLang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{oldLang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{oldLang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{oldLang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{oldLang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{oldLang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{oldLang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{oldLang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {oldLang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {oldLang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {oldLang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={oldLang('lng_settings_information')}\n            >\n              <Icon name=\"edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{oldLang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={oldLang('lng_sure_logout')}\n        confirmLabel={oldLang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings, LangCode, SharedSettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<AccountSettings, 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>\n& Pick<SharedSettings, 'language' | 'languages'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n    setSharedSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSharedSettingOption({ language: langCode as LangCode });\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            forceRenderAllItems\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n    const { language, languages } = selectSharedSettings(global);\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: ApiStarsAmount;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openGiftRecipientPicker,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu self-profile\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('TelegramGeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('MenuAnimations')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.languageInfo.nativeName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('MenuStickers')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openStarsBalanceModal({})}\n        >\n          {lang('MenuStars')}\n          {Boolean(starsBalance) && (\n            <span className=\"settings-item__current-value\">\n              {formatStarsAmount(lang, starsBalance)}\n            </span>\n          )}\n        </ListItem>\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openGiftRecipientPicker()}\n          >\n            {lang('MenuSendGift')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('MenuTelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('MenuPrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('OK')}\n        title={lang('AskAQuestion')}\n        textParts={lang('MenuAskText', undefined, { withNodes: true, renderTextFilters: ['br'] })}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiNotifyPeerType, ApiPeerNotifySettings } from '../../../api/types';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  notifyDefaults?: Record<ApiNotifyPeerType, ApiPeerNotifySettings>;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  notifyDefaults,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: ApiNotifyPeerType,\n    setting: 'mute' | 'showPreviews',\n  ) => {\n    const currentIsMuted = Boolean(notifyDefaults?.[peerType]?.mutedUntil);\n    const currentShouldShowPreviews = Boolean(notifyDefaults?.[peerType]?.shouldShowPreviews);\n\n    updateNotificationSettings({\n      peerType,\n      isMuted: setting === 'mute' ? !e.target.checked : currentIsMuted,\n      shouldShowPreviews: setting === 'showPreviews' ? e.target.checked : currentShouldShowPreviews,\n    });\n  }, [notifyDefaults]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'mute');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('NotificationsWeb')}\n        </h4>\n        <Checkbox\n          label={lang('NotificationsWeb')}\n          subLabel={lang(hasWebNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label={lang('NotificationsOffline')}\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          subLabel={areOfflineNotificationsSupported\n            ? lang(hasPushNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')\n            : lang('SettingsOfflineNotificationUnsupported')}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label={lang('NotificationsSound')}\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          subLabel={lang(notifyDefaults?.users?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.mutedUntil)}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.users?.mutedUntil}\n          subLabel={lang(notifyDefaults?.users?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.shouldShowPreviews)}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(notifyDefaults?.groups?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.mutedUntil)}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.groups?.mutedUntil}\n          subLabel={lang(notifyDefaults?.groups?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.shouldShowPreviews)}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          subLabel={lang(notifyDefaults?.channels?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.mutedUntil)}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.channels?.mutedUntil}\n          subLabel={lang(notifyDefaults?.channels?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.shouldShowPreviews)}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED, IS_SNAP_EFFECT_SUPPORTED } from '../../../util/browser/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [RegularLangKey, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: RegularLangKey;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderMedium',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderCustom',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['SettingsPerformanceInterfaceAnimations', [\n    { key: 'pageTransitions', label: 'SettingsPerformancePageTransitions' },\n    { key: 'messageSendingAnimations', label: 'SettingsPerformanceSending' },\n    { key: 'mediaViewerAnimations', label: 'SettingsPerformanceMediaViewer' },\n    { key: 'messageComposerAnimations', label: 'SettingsPerformanceComposer' },\n    { key: 'contextMenuAnimations', label: 'SettingsPerformanceContextAnimation' },\n    { key: 'contextMenuBlur', label: 'SettingsPerformanceContextBlur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'SettingsPerformanceRightColumn' },\n    { key: 'snapEffect', label: 'SettingsPerformanceThanos' },\n  ]],\n  ['SettingsPerformanceStickers', [\n    { key: 'animatedEmoji', label: 'SettingsPerformanceAnimatedEmoji' },\n    { key: 'loopAnimatedStickers', label: 'SettingsPerformanceLoopStickers' },\n    { key: 'reactionEffects', label: 'SettingsPerformanceReactionEffects' },\n    { key: 'stickerEffects', label: 'SettingsPerformanceStickerEffects' },\n  ]],\n  ['SettingsPerformanceMediaAutoplay', [\n    { key: 'autoplayGifs', label: 'SettingsPerformanceAutoplayGif' },\n    { key: 'autoplayVideos', label: 'SettingsPerformanceAutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSharedSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n\n  const animationLevelOptions = useMemo(() => {\n    const options = animationLevelState === ANIMATION_LEVEL_CUSTOM\n      ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n      : ANIMATION_LEVEL_OPTIONS;\n\n    return options.map((option) => lang(option));\n  }, [animationLevelState, lang]);\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSharedSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, []);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderTitle')}\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderSubtitle')}\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => {\n                    if (key === 'snapEffect' && !IS_SNAP_EFFECT_SUPPORTED) return undefined;\n                    return (\n                      <Checkbox\n                        key={key}\n                        name={key}\n                        checked={performanceSettings[key]}\n                        label={lang(label)}\n                        disabled={disabled}\n                        onChange={handlePropertyChange}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  selectCanSetPasscode, selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages: boolean;\n  canDisplayChatInTitle?: boolean;\n  isCurrentUserFrozen?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n  isCurrentUserFrozen,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSharedSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    if (!isCurrentUserFrozen) {\n      loadBlockedUsers();\n      loadPrivacySettings();\n      loadContentSettings();\n      loadWebAuthorizations();\n    }\n  }, [isCurrentUserFrozen]);\n\n  useEffect(() => {\n    if (isActive && !isCurrentUserFrozen) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, isCurrentUserFrozen, loadGlobalPrivacySettings]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSharedSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return oldLang('Loading');\n\n    const { visibility, shouldAllowPremium, botsPrivacy } = setting;\n\n    const isAllowBots = botsPrivacy === 'allow';\n    const isVisibilityEverybody = visibility === 'everybody';\n    const shouldShowBotsString = isAllowBots && !isVisibilityEverybody;\n\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount && !isVisibilityEverybody) total.push(`+${allowCount}`);\n\n    const botPrivacyString = shouldShowBotsString ? lang('PrivacyValueBots') : '';\n    const totalString = lang.conjunction(total);\n\n    const exceptionString = [botPrivacyString, totalString].filter(Boolean).join(' ');\n    if (shouldShowBotsString && !isVisibilityEverybody) return exceptionString;\n\n    if (shouldAllowPremium) {\n      return oldLang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${oldLang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${oldLang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${oldLang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {oldLang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-item\">\n              <span className=\"title\">{oldLang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {oldLang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {oldLang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {oldLang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{oldLang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGifts)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{lang('PrivacyGifts')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.gifts)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldChargeForMessages ? lang('PrivacyPaidMessagesValue')\n                : shouldNewNonContactPeersRequirePremium\n                  ? oldLang('PrivacyMessagesContactsAndPremium')\n                  : oldLang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={oldLang('lng_settings_sensitive_disable_filtering')}\n            subLabel={oldLang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={oldLang('ArchiveAndMute')}\n            subLabel={oldLang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={oldLang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          shouldNewNonContactPeersRequirePremium, nonContactPeersPaidStars,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    const { canDisplayChatInTitle } = selectSharedSettings(global);\n    const shouldChargeForMessages = Boolean(nonContactPeersPaidStars);\n    const isCurrentUserFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      shouldChargeForMessages,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n      isCurrentUserFrozen,\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterPeersByQuery({ ids: availableContactIds, query: search, type: 'user' })\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <Icon name=\"add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyGifts:\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return 'gifts';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return 'noPaidMessages';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiDisallowedGiftsSettings } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport Switcher from '../../ui/Switcher';\n\ntype StateProps = {\n  disallowedGifts?: ApiDisallowedGiftsSettings;\n  isCurrentUserPremium: boolean;\n};\n\nconst SettingsAcceptedGift = ({\n  disallowedGifts, isCurrentUserPremium,\n}: StateProps) => {\n  const { showNotification, updateGlobalPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const handleOpenTelegramPremiumModal = useLastCallback(() => {\n    showNotification({\n      message: lang('PrivacySubscribeToTelegramPremium'),\n      action: {\n        action: 'openPremiumModal',\n        payload: {},\n      },\n      actionText: { key: 'Open' },\n      icon: 'star',\n    });\n  });\n\n  const handleLimitedEditionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowLimitedStarGifts: !disallowedGifts?.shouldDisallowLimitedStarGifts || undefined,\n      },\n    });\n  });\n\n  const handleUnlimitedEditionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowUnlimitedStarGifts: !disallowedGifts?.shouldDisallowUnlimitedStarGifts || undefined,\n      },\n    });\n  });\n\n  const handleUniqueChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowUniqueStarGifts: !disallowedGifts?.shouldDisallowUniqueStarGifts || undefined,\n      },\n    });\n  });\n\n  const handlePremiumSubscriptionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowPremiumGifts: !disallowedGifts?.shouldDisallowPremiumGifts || undefined,\n      },\n    });\n  });\n\n  return (\n    <div className=\"settings-item\">\n      <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('PrivacyAcceptedGiftTitle')}\n      </h4>\n      <ListItem onClick={handleLimitedEditionChange}>\n        <span>{lang('PrivacyGiftLimitedEdition')}</span>\n        <Switcher\n          id=\"limited_edition\"\n          label={disallowedGifts?.shouldDisallowLimitedStarGifts ? lang('PrivacyDisableLimitedEditionStarGifts')\n            : lang('PrivacyEnableLimitedEditionStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowLimitedStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handleUnlimitedEditionChange}>\n        <span>{lang('PrivacyGiftUnlimited')}</span>\n        <Switcher\n          id=\"unlimited\"\n          label={disallowedGifts?.shouldDisallowUnlimitedStarGifts ? lang('PrivacyDisableUnlimitedStarGifts')\n            : lang('PrivacyEnableUnlimitedStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowUnlimitedStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handleUniqueChange}>\n        <span>{lang('PrivacyGiftUnique')}</span>\n        <Switcher\n          id=\"unique\"\n          label={disallowedGifts?.shouldDisallowUniqueStarGifts ? lang('PrivacyDisableUniqueStarGifts')\n            : lang('PrivacyEnableUniqueStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowUniqueStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handlePremiumSubscriptionChange}>\n        <span>{lang('PrivacyGiftPremiumSubscription')}</span>\n        <Switcher\n          id=\"premium_subscription\"\n          label={disallowedGifts?.shouldDisallowPremiumGifts ? lang('PrivacyDisablePremiumGifts')\n            : lang('PrivacyEnablePremiumGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowPremiumGifts}\n        />\n      </ListItem>\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('PrivacyAcceptedGiftInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          disallowedGifts,\n        },\n      },\n    } = global;\n\n    return {\n      disallowedGifts,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsAcceptedGift));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiPrivacySettings, BotsPrivacyType } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Switcher from '../../ui/Switcher';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsAcceptedGift from './SettingsAcceptedGift';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  shouldDisplayGiftsButton?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n  shouldDisplayGiftsButton,\n  isCurrentUserPremium,\n}) => {\n  const lang = useLang();\n\n  const { updateGlobalPrivacySettings, showNotification } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleShowGiftIconInChats = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('PrivacySubscribeToTelegramPremium'),\n        action: {\n          action: 'openPremiumModal',\n          payload: {},\n        },\n        actionText: { key: 'Open' },\n        icon: 'star',\n      });\n      return;\n    }\n    updateGlobalPrivacySettings({\n      shouldDisplayGiftsButton: !shouldDisplayGiftsButton,\n    });\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {screen === SettingsScreens.PrivacyGifts && (\n        <div className=\"settings-item\">\n          <ListItem onClick={handleShowGiftIconInChats}>\n            <span>{lang('PrivacyDisplayGiftsButton')}</span>\n            <Switcher\n              id=\"gift\"\n              disabled={!isCurrentUserPremium}\n              label={shouldDisplayGiftsButton ? lang('HideGiftsButton') : lang('DisplayGiftsButton')}\n              checked={shouldDisplayGiftsButton}\n            />\n          </ListItem>\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyDisplayGiftIconInChats', {\n              icon: <Icon name=\"gift\" className=\"gift-icon\" />,\n              gift: lang('PrivacyDisplayGift'),\n            }, {\n              withNodes: true,\n            })}\n          </p>\n        </div>\n      )}\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {screen === SettingsScreens.PrivacyGifts && (\n        <SettingsAcceptedGift />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PContacts')} />\n        ) : (\n          oldLang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PNobody')} />\n        ) : (\n          oldLang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [oldLang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsInfo');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? oldLang('PrivacyPhoneInfo') : oldLang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return oldLang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return oldLang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return oldLang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return oldLang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return oldLang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return oldLang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return oldLang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return oldLang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return oldLang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen]);\n\n  const prepareSubtitle = useLastCallback(\n    (userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean, botsPrivacy?: BotsPrivacyType) => {\n      const userIdsCount = userIds?.length || 0;\n      const chatIdsCount = chatIds?.length || 0;\n      const isAllowBots = botsPrivacy === 'allow';\n      const hasPeers = userIdsCount || chatIdsCount;\n\n      if (!hasPeers && !isAllowBots) {\n        return shouldAllowPremium ? oldLang('PrivacyPremium') : oldLang('EditAdminAddUsers');\n      } else if (shouldAllowPremium) {\n        return oldLang('ContactsAndPremium');\n      }\n\n      const userCountString = userIdsCount > 0 ? oldLang('Users', userIdsCount) : undefined;\n      const chatCountString = chatIdsCount > 0 ? oldLang('Chats', chatIdsCount) : undefined;\n\n      const botPrivacyString = isAllowBots ? lang('PrivacyValueBots') : '';\n      const peersString = lang.conjunction([userCountString, chatCountString].filter(Boolean));\n\n      return [botPrivacyString, peersString].filter(Boolean).join(' ');\n    },\n  );\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(\n      privacy?.allowUserIds,\n      privacy?.allowChatIds,\n      privacy?.shouldAllowPremium,\n      privacy?.botsPrivacy,\n    );\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: {\n        privacy,\n        byKey: {\n          shouldDisplayGiftsButton,\n        },\n      },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyGifts:\n        primaryPrivacy = privacy.gifts;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n      shouldDisplayGiftsButton,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  withMiniAppsCategory?: boolean;\n  usersOnly?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  withMiniAppsCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  usersOnly = false,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const customPeerBots : UniqueCustomPeer = useMemo(() => {\n    return {\n      isCustomPeer: true,\n      type: 'bots',\n      title: lang('PrivacyValueBots'),\n      avatarIcon: 'bots',\n      isAvatarSquare: true,\n      peerColorId: 6,\n    };\n  }, [lang]);\n\n  const miniAppsCategory = useMemo(() => {\n    return [customPeerBots];\n  }, [customPeerBots]);\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n    if (settings.shouldAllowPremium) { return [CUSTOM_PEER_PREMIUM.type]; }\n    if (settings.botsPrivacy === 'allow' && isAllowList) { return [customPeerBots.type]; }\n    return [];\n  }, [settings, isAllowList, customPeerBots]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return (!usersOnly || user)\n          && chatId !== currentUserId\n          && chatId !== SERVICE_NOTIFICATIONS_USER_ID\n          && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterPeersByQuery({ ids: chatIds, query: searchQuery });\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...chatIds,\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, searchQuery, currentUserId, usersOnly]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n      botsPrivacy: (!withMiniAppsCategory) ? 'none'\n        : (newSelectedCategoryTypes.includes(customPeerBots.type) ? 'allow' : 'disallow'),\n    });\n\n    onReset();\n  }, [\n    isAllowList,\n    withMiniAppsCategory,\n    newSelectedCategoryTypes,\n    newSelectedContactIds,\n    onReset,\n    screen,\n    customPeerBots,\n  ]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function getCustomCategory() {\n    if (withPremiumCategory) return PREMIUM_CATEGORY;\n    if (withMiniAppsCategory && isAllowList) return miniAppsCategory;\n    return undefined;\n  }\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={getCustomCategory()}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? oldLang('AlwaysAllowPlaceholder') : oldLang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? oldLang('AlwaysAllow') : oldLang('NeverAllow')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return privacy.gifts;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return privacy.noPaidMessages;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { AccountSettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<AccountSettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji, selectTabState } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n  recoveryEmail: string;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n  recoveryEmail,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {recoveryEmail && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('TwoStepAuth.ConfirmEmailDescription', recoveryEmail)}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const tabState = selectTabState(global);\n  const recoveryEmail = tabState.recoveryEmail;\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n    recoveryEmail,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {type === 'email' && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('RecoveryEmailSubtitle')}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  errorKey,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          placeholder={oldLang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={oldLang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMarkScrolled from '../../../hooks/useMarkScrolled/useMarkScrolled';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_GIFTS_SCREENS = [\n  SettingsScreens.PrivacyGiftsAllowedContacts,\n  SettingsScreens.PrivacyGiftsDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nconst PRIVACY_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyNoPaidMessages,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  useMarkScrolled({\n    containerRef,\n    selector: '.settings-content',\n  }, [currentScreen]);\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGifts]: PRIVACY_GIFTS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyMessages]: PRIVACY_MESSAGES_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyGifts:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            usersOnly={currentScreen === SettingsScreens.PrivacyNoPaidMessages}\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            withMiniAppsCategory={currentScreen === SettingsScreens.PrivacyGiftsAllowedContacts}\n            screen={currentScreen}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      ref={containerRef}\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n// Import React dependencies.\nimport React, {\n  useCallback, useRef, useState,\n} from 'react';\nimport type { DSlateRef } from '@dslate/antd';\nimport DSlate from '@dslate/antd';\nimport { Button, Input } from 'antd';\nimport type { Descendant } from 'slate';\nimport { Node } from 'slate';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport { ChataiStores } from '../../chatAssistant/store';\nimport { knowledgeEmbeddingStore } from '../../chatAssistant/vector-store';\n\ntype OwnProps = {\n  knowledge?:AiKnowledge | null;\n  type: 'add' | 'edit';\n  onClose: () => void;\n  onUpdate:()=>void;\n};\n\nconst ErrorTip = ({ message }:{ message:string }) => {\n  return (\n    <div className=\"text-[12px] leading-[18px] text-red-400\">{message}</div>\n  );\n};\n\nconst AIKnowledgeEditor = (props: OwnProps) => {\n  const {\n    type, knowledge, onClose, onUpdate,\n  } = props;\n  const knowledgeId = useRef(uuidv4());\n  const [value, setValue] = useState<Descendant[]>(knowledge?.richText || [\n    {\n      type: 'paragraph',\n      children: [{ text: '' }],\n    },\n  ]);\n  const [question, setQuestion] = useState<string>(knowledge?.question || '');\n  const [questionError, setQuestionError] = useState<string>('');\n  const [valueError, setValueError] = useState<string>('');\n  const ref = useRef<DSlateRef>(null);\n  const handleQuestionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  }, []);\n  const serialize = (nodes: Descendant[]) => {\n    return nodes.map((n) => Node.string(n)).join('\\n');\n  };\n  const handleSave = useCallback(() => {\n    const plainText = serialize(value);\n    if (!plainText) {\n      setValueError('Please enter your notes');\n      return;\n    } else {\n      setValueError('');\n    }\n    if (!question) {\n      setQuestionError('Please enter a question');\n      return;\n    } else {\n      setQuestionError('');\n    }\n    const knowledgeIdValue = type === 'add' ? knowledgeId.current : knowledge?.id as string;\n    ChataiStores.knowledge?.addKnowledge({\n      id: knowledgeIdValue,\n      richText: value,\n      plainText,\n      question,\n    }).then(() => {\n      onClose();\n      onUpdate();\n    });\n    knowledgeEmbeddingStore.updateText(question, knowledgeIdValue, {\n      answer: plainText,\n    });\n  }, [knowledge?.id, onClose, onUpdate, question, type, value]);\n  return (\n    <div className=\"flex flex-col gap-[20px] h-full\">\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <DSlate className=\"flex-1 flex flex-col overflow-hidden\" ref={ref} value={value} onChange={setValue} toolbar={['history', 'bold', 'italic', 'decoration', 'text-align', 'list']} />\n        {valueError && <ErrorTip message={valueError} />}\n      </div>\n      <div className=\"flex flex-col gap-[8px]\">\n        <div>Preset standard questions <span className=\"text-[#FF543D]\">*</span></div>\n        <Input value={question} onChange={handleQuestionChange} />\n        {questionError && <ErrorTip message={questionError} />}\n      </div>\n      <div className=\"flex flex-row gap-8 justify-end\">\n        <Button className=\"!w-[120px] !h-[42px]\" onClick={onClose}>Cancel</Button>\n        <Button type=\"primary\" className=\"!w-[120px] !h-[42px]\" onClick={handleSave}>Add</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AIKnowledgeEditor;\n","/* eslint-disable no-null/no-null */\n/* eslint-disable max-len */\nimport React, {\n  useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport { injectComponent } from '../../../lib/injectComponent';\n\nimport Modal from '../../ui/Modal';\nimport AIKnowledgeEditor from './AIKnowledgeEditor';\n\nimport './AIKnowledgeEditor.scss';\n\ntype OwnProps = {\n  knowledge?:AiKnowledge | null;\n  type: 'add' | 'edit';\n  isOpen: boolean;\n  onClose: () => void;\n  onUpdate:()=>void;\n};\nconst injectEditor = injectComponent(AIKnowledgeEditor);\nconst AddKnowledgeModal = ({\n  type, knowledge, isOpen, onClose, onUpdate,\n}: OwnProps) => {\n  const editorRef = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      injectEditor(editorRef.current, {\n        onClose,\n        onUpdate,\n        knowledge,\n        type,\n      });\n    }\n  }, [knowledge, onClose, onUpdate, type]);\n  return (\n    <Modal\n      title=\"Notes\"\n      hasCloseButton\n      isOpen={isOpen}\n      onClose={onClose}\n      dialogStyle=\"max-width: 1000px; width: 70vw; height: 60vh;\"\n    >\n      <div className=\"knowledge-editor\" ref={editorRef} />\n    </Modal>\n  );\n};\nexport default AddKnowledgeModal;\n","/* eslint-disable max-len */\nimport copy from 'copy-to-clipboard';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport AIKnowledgeEmpty from '../../../assets/ai-knowledge-empty.png';\n\nconst AIKnowledgeEmptyContent = ({ onAdd }:{ onAdd:NoneToVoidFunction }) => {\n  return (\n    <div className=\"flex flex-col justify-center items-center px-[30px] pt-[120px]\">\n      <img src={AIKnowledgeEmpty} alt=\"AIKnowledge\" className=\"w-[125px] h-[125px] mb-[12px]\" />\n      <span className=\"text-[14px] text-[#676B74]\">\n        You can store frequently used personal information, company details, and business materials here. During chats, the AI will use this content to generate intelligent responses.\n      </span>\n      <Button\n        round\n        color=\"translucent\"\n        className=\"!bg-[#8C42F0] flex flex-row items-center gap-[8px] !w-[148px] !h-[42px] !p-0 !rounded-[21px] mt-[20px]\"\n        onClick={onAdd}\n      >\n        <Icon className=\"text-white text-[14px]\" name=\"add\" />\n        <span className=\"text-white\">Add</span>\n      </Button>\n    </div>\n  );\n};\nconst AIKnowledgeList = ({ knowledgeList, onEdit, onDelete }:{\n  knowledgeList:any[];\n  onEdit:(knowledge:AiKnowledge)=>void;\n  onDelete:(id:string)=>void;\n}) => {\n  const { showNotification } = getActions();\n  const handleCopy = useCallback((knowledge:AiKnowledge) => {\n    copy(knowledge.plainText);\n    showNotification({\n      message: 'TextCopied',\n    });\n  }, []);\n  const handleEdit = useCallback((knowledge:AiKnowledge) => {\n    onEdit(knowledge);\n  }, [onEdit]);\n  const handleDelete = useCallback((knowledge:AiKnowledge) => {\n    onDelete(knowledge.id);\n  }, [onDelete]);\n  return (\n    <div className=\"px-[20px]\">\n      {knowledgeList.map((item) => (\n        <div key={item.id} className=\"bg-[#F7F7F7] rounded-[12px] px-[16px] py-[15px] mb-[12px]\">\n          <div className=\"white-space-pre-wrap line-clamp-3 overflow-hidden text-ellipsis\">\n            {item?.question || ''}\n          </div>\n          <div className=\"white-space-pre-wrap line-clamp-3 overflow-hidden text-ellipsis\">\n            {item.plainText.replace(/\\\\n/g, '')}\n          </div>\n          <div className=\"flex justify-end gap-[8px] items-center\">\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCopy(item)}\n            >\n              <Icon name=\"copy\" className=\"text-[14px]\" />\n            </Button>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleEdit(item)}\n            >\n              <Icon name=\"edit\" className=\"text-[14px]\" />\n            </Button>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleDelete(item)}\n            >\n              <Icon name=\"delete\" className=\"text-[14px]\" />\n            </Button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\nconst AIKnowledgeContent = ({\n  knowledgeList, onShowAddModal, onEdit, onDelete,\n}:{\n  knowledgeList:any[];\n  onShowAddModal:(type:'edit' | 'add')=>void ;\n  onEdit:(knowledge:AiKnowledge)=>void;\n  onDelete:(id:string)=>void;\n}) => {\n  const handleAdd = useCallback(() => {\n    onShowAddModal('add');\n  }, [onShowAddModal]);\n  return (\n    <div className=\"pt-[20px] h-full box-border\">\n      {knowledgeList.length === 0 ? (\n        <AIKnowledgeEmptyContent onAdd={handleAdd} />\n      ) : (\n        <AIKnowledgeList knowledgeList={knowledgeList} onEdit={onEdit} onDelete={onDelete} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(AIKnowledgeContent);\n","/* eslint-disable max-len */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  showAddButton:boolean;\n  onReset: () => void;\n  onShowAddModal:(type:'edit' | 'add') => void;\n};\nconst AIKnowledgeHeader: FC<OwnProps> = ({ onReset, showAddButton, onShowAddModal }) => {\n  const oldLang = useOldLang();\n\n  function renderHeaderContent() {\n    return <h3>{oldLang('AI Knowledge Base')}</h3>;\n  }\n  const handleAdd = useCallback(() => {\n    onShowAddModal('add');\n  }, [onShowAddModal]);\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      {showAddButton && (\n        <Button\n          round\n          color=\"translucent\"\n          className=\"!bg-[#8C42F0] flex flex-row items-center gap-[8px] !w-[92px] !h-[30px] !p-0 !rounded-[21px] !text-[14px]\"\n          onClick={handleAdd}\n        >\n          <Icon className=\"text-white text-[14px]\" name=\"add\" />\n          <span className=\"text-white\">Add</span>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AIKnowledgeHeader);\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\nimport { ChataiStores } from '../../chatAssistant/store';\nimport { knowledgeEmbeddingStore } from '../../chatAssistant/vector-store';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport AddKnowledgeModal from './AddKnowledgeModal';\nimport AIKnowledgeContent from './AIKnowledgeContent';\nimport AIKnowledgeHeader from './AIKnowledgeHeader';\n\nexport type OwnProps = {\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\nconst AIKnowledge:FC<OwnProps> = ({ onReset }) => {\n  const [knowledgeList, setKnowledgeList] = useState<AiKnowledge[]>([]);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [type, setType] = useState<'edit' | 'add'>('add');\n  const [editKnowledge, setEditKnowledge] = useState<AiKnowledge | null>(null);\n  useEffect(() => {\n    ChataiStores.knowledge?.getAllKnowledge().then((knowledge) => {\n      setKnowledgeList(knowledge || []);\n    });\n  }, []);\n  const handleReset = useLastCallback(() => {\n    onReset(true);\n  });\n  const handleCloseAddModal = useCallback(() => {\n    setShowAddModal(false);\n  }, []);\n  const handleShowAddModal = useCallback((type:'edit' | 'add') => {\n    setShowAddModal(true);\n    setType(type);\n  }, []);\n  const handleEdit = useCallback((knowledge:AiKnowledge) => {\n    setType('edit');\n    setEditKnowledge(knowledge);\n    setShowAddModal(true);\n  }, []);\n  const handleUpdate = useCallback(() => {\n    setEditKnowledge(null);\n    ChataiStores.knowledge?.getAllKnowledge().then((knowledge) => {\n      setKnowledgeList(knowledge || []);\n    });\n  }, []);\n  const handleDelete = useCallback((id:string) => {\n    ChataiStores.knowledge?.deleteKnowledge(id).then(() => {\n      setKnowledgeList((prev) => {\n        return prev.filter((item) => item.id !== id);\n      });\n    });\n    knowledgeEmbeddingStore.deleteText(id);\n  }, []);\n  function renderCurrentSection() {\n    return (\n      <>\n        <AIKnowledgeHeader\n          onReset={handleReset}\n          showAddButton={knowledgeList.length > 0}\n          onShowAddModal={handleShowAddModal}\n        />\n        <AIKnowledgeContent knowledgeList={knowledgeList} onShowAddModal={handleShowAddModal} onEdit={handleEdit} onDelete={handleDelete} />\n        {showAddModal && (\n          <AddKnowledgeModal type={type} isOpen={showAddModal} onClose={handleCloseAddModal} knowledge={editKnowledge} onUpdate={handleUpdate} />\n        )}\n      </>\n\n    );\n  }\n  return (\n    <Transition\n      id=\"AiKnowledge\"\n      name={LAYERS_ANIMATION_NAME}\n      activeKey={0}\n      renderCount={1}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(AIKnowledge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T_GGJ8J2\",\"item\":\"fe7VNmNB\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport { CHATAI_IDB_STORE } from '../../../util/browser/idb';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './AutoTranslateLanguage.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\nconst AutoTranslateLanguage: FC = () => {\n  const { setSettingOption } = getActions();\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string>('');\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffect(() => {\n    CHATAI_IDB_STORE.get('auto-translate-language').then((lan) => {\n      setDisplayedOptions(lan as string || language);\n    });\n  }, [language]);\n\n  const handleChange = useLastCallback((newSelectedIds: string) => {\n    setDisplayedOptions(newSelectedIds);\n    CHATAI_IDB_STORE.set('auto-translate-language', newSelectedIds);\n    setSettingOption({\n      autoTranslateLanguage: newSelectedIds,\n      translationLanguage: newSelectedIds,\n    });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValue={displayedOptions}\n          onSelectedValueChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable={false}\n          allowMultiple={false}\n          withDefaultPadding\n          itemInputType=\"radio\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AutoTranslateLanguage;\n","/* eslint-disable max-len */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { CHATAI_IDB_STORE } from '../../../util/browser/idb';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport AutoTranslateLanguage from './AutoTranslateLanguage';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst AITranslateContent: FC<OwnProps> = ({\n  isActive,\n  onReset,\n}) => {\n  const {\n    setSettingOption,\n    // openPremiumModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [autoTranslate, setAutoTranslate] = useState(false);\n\n  useEffect(() => {\n    CHATAI_IDB_STORE.get('auto-translate').then((value) => {\n      setAutoTranslate(value as boolean || false);\n    });\n  }, []);\n\n  const handleAutoTranslateChange = useLastCallback((newValue: boolean) => {\n    CHATAI_IDB_STORE.set('auto-translate', newValue);\n    setSettingOption({ autoTranslate: newValue });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('Auto Translate')}\n          checked={autoTranslate}\n          onCheck={handleAutoTranslateChange}\n        />\n      </div>\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        <AutoTranslateLanguage />\n      </div>\n    </div>\n  );\n};\n\nexport default AITranslateContent;\n","/* eslint-disable max-len */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  onReset: () => void;\n};\nconst AITranslateHeader: FC<OwnProps> = ({ onReset }) => {\n  const oldLang = useOldLang();\n\n  function renderHeaderContent() {\n    return <h3>{oldLang('AI Translate')}</h3>;\n  }\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n    </div>\n  );\n};\n\nexport default memo(AITranslateHeader);\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n} from '../../../lib/teact/teact';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport AITranslateContent from './AITranslateContent';\nimport AITranslateHeader from './AITranslateHeader';\n\nexport type OwnProps = {\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\nconst AITranslate:FC<OwnProps> = ({ onReset }) => {\n  function renderCurrentSection() {\n    return (\n      <>\n        <AITranslateHeader onReset={onReset} />\n        <AITranslateContent onReset={onReset} />\n      </>\n    );\n  }\n  return (\n    <Transition\n      id=\"AiTranslate\"\n      name={LAYERS_ANIMATION_NAME}\n      activeKey={0}\n      renderCount={1}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(AITranslate);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { sortUserIds } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterPeersByQuery({ ids: contactIds, query: filter, type: 'user' });\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <Icon name=\"add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { isUserBot } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds\n      ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <Icon name=\"arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport Icon from '../common/icons/Icon';\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen, undefined, undefined, false);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID)\n      .map((folderId) => {\n        const folder = foldersById ? foldersById[folderId] : undefined;\n        const label = folder ? renderTextWithEntities({\n          text: folder.title.text,\n          entities: folder.title.entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }) : '';\n        return {\n          label,\n          value: String(folderId),\n        };\n      }) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let mutedUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      mutedUntil = MAX_INT_32;\n    } else {\n      mutedUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, mutedUntil });\n    } else {\n      updateChatMutedState({ chatId, mutedUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeerPaidMessagesStars,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n    const paidMessagesStars = chatId ? selectPeerPaidMessagesStars(global, chatId) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: !paidMessagesStars && selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiBotCommand, ApiChat, ApiDisallowedGifts,\n} from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isSystemBot,\n  isUserId,\n  isUserRightBanned,\n} from '../../global/helpers';\nimport { getIsChatMuted } from '../../global/helpers/notifications';\nimport {\n  selectBot,\n  selectCanGift,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsRightColumnShown,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canDeleteChat?: boolean;\n  canReportChat?: boolean;\n  canGift?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n  disallowedGifts?: ApiDisallowedGifts;\n  isAccountFrozen?: boolean;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canReportChat,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canDeleteChat,\n  canGift,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n  disallowedGifts,\n  isAccountFrozen,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    openFrozenAccountModal,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n    reportMessages,\n    showNotification,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      setIsMenuOpen(false);\n      reportMessages({ chatId, messageIds: [] });\n    }\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      onClose();\n    } else {\n      setIsDeleteModalOpen(true);\n    }\n    setIsMenuOpen(false);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      sendBotCommand({ command: '/start' });\n    }\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      restartBot({ chatId });\n    }\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      updateChatMutedState({ chatId, isMuted: false });\n    }\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      closeMenu();\n    } else {\n      markRenderMuteModal();\n      setIsMuteModalOpen(true);\n    }\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openCreateTopicPanel({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      toggleManagement({ force: true });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openEditTopicPanel({ chatId, topicId: Number(threadId) });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    if (areAllGiftsDisallowed && chat) {\n      showNotification({ message: lang('SendDisallowError') });\n      return;\n    }\n    openGiftModal({ forUserId: chatId });\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openGiftModal({ forUserId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openAddContactDialog({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      onSubscribeChannel();\n    }\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    }\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      requestMasterAndRequestCall({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      enterMessageSelectMode();\n    }\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      blockUser({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      unblockUser({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {oldLang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || oldLang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {oldLang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, oldLang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return oldLang('Delete');\n    }\n\n    if (isPrivate) {\n      return oldLang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return oldLang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return oldLang('LeaveChannel');\n    }\n\n    return oldLang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, oldLang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {oldLang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {oldLang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? oldLang('lng_context_view_topic') : oldLang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {oldLang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {oldLang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {oldLang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? oldLang('SubscribeRequests') : oldLang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {oldLang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {oldLang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {oldLang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {oldLang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {oldLang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {oldLang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {oldLang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {oldLang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {oldLang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {oldLang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {oldLang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {oldLang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {oldLang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {oldLang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {oldLang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {oldLang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {oldLang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGift && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftClick}\n            >\n              {oldLang('ProfileSendAGift')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? oldLang('BotRestart') : oldLang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? oldLang('Unblock') : oldLang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n    const canReportChat = isMainThread && !user && (isChatChannel(chat) || isChatGroup(chat));\n\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGift = selectCanGift(global, chatId);\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canDeleteChat: getCanDeleteChat(chat),\n      canReportChat,\n      canGift,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog, getReactionKey, isSameReaction, isSystemBot,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldCancelSearchRef = useRef(false);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Reset focus on query result\n  useEffect(() => {\n    setFocusedIndex(-1);\n  }, [lastSearchQuery]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => {\n      if (shouldCancelSearchRef.current) return;\n      performMiddleSearch({ chatId, threadId, query });\n    });\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    shouldCancelSearchRef.current = false;\n\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n      shouldCancelSearchRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || isSystemBot(chatId) || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            itemSelector={`.${RESULT_ITEM_CLASS_NAME}`}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [Math.max(focusedIndex + 1, 1), totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <Icon name=\"recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <Icon name=\"favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed.slice();\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      positionY={story && 'bottom'}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <Icon\n                name=\"delete\"\n                className={buildClassName(styles.actionItem, styles.deleteFile)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <Icon\n            name={attachment.shouldSendAsSpoiler ? 'spoiler-disable' : 'spoiler'}\n            className={styles.actionItem}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            // eslint-disable-next-line react/jsx-no-bind\n            <Icon name=\"delete\" className={styles.actionItem} onClick={() => onDelete(index)} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","import isFullyVisible from './visibility/isFullyVisible';\nimport animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll({\n      container,\n      element: allElements[index],\n      position,\n      margin: SCROLL_MARGIN,\n    });\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"sendButtonStar\":\"C1OOt81o\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  canScheduleUntilOnline?: boolean;\n  canSchedule?: boolean;\n  onSendWhenOnline?: NoneToVoidFunction;\n  paidMessagesStars?: number;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  canScheduleUntilOnline,\n  canSchedule,\n  onSendWhenOnline,\n  paidMessagesStars,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [oldLang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  const attachmentsLength = renderingAttachments.length;\n  if (areAllPhotos) {\n    title = oldLang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', attachmentsLength, 'i');\n  } else if (areAllVideos) {\n    title = oldLang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', attachmentsLength, 'i');\n  } else if (areAllAudios) {\n    title = oldLang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', attachmentsLength, 'i');\n  } else {\n    title = oldLang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', attachmentsLength, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{oldLang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {oldLang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {oldLang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {oldLang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {oldLang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {oldLang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n  const buttonSendCaption = paidMessagesStars ? formatStarsAsIcon(lang,\n    attachmentsLength * paidMessagesStars,\n    {\n      className: styles.sendButtonStar,\n      asFont: true,\n    }) : oldLang('Send');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n      isLowStackPriority\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={oldLang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={oldLang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? oldLang('Next')\n                  : editingMessage ? oldLang('Save') : buttonSendCaption}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={canSchedule && isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                  onSendWhenOnline={onSendWhenOnline}\n                  canScheduleUntilOnline={canScheduleUntilOnline}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { shouldSuggestCustomEmoji } = global.settings.byKey;\n    const { language } = selectSharedSettings(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          maxLength={MAX_OPTION_LENGTH}\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        <div className=\"dialog-checkbox-group\">\n          {!shouldBeAnonymous && (\n            <Checkbox\n              label={lang('PollAnonymous')}\n              checked={isAnonymous}\n              onChange={handleIsAnonymousChange}\n            />\n          )}\n          <Checkbox\n            label={lang('PollMultiple')}\n            checked={isMultipleAnswers}\n            disabled={isQuizMode}\n            onChange={handleMultipleAnswersChange}\n          />\n          <Checkbox\n            label={lang('PollQuiz')}\n            checked={isQuizMode}\n            disabled={isMultipleAnswers || isQuiz !== undefined}\n            onChange={handleQuizModeChange}\n          />\n        </div>\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { IconName } from '../../../types/icons';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, IconName> = {\n  recent: 'recent',\n  people: 'smile',\n  nature: 'animals',\n  foods: 'eats',\n  activity: 'sport',\n  places: 'car',\n  objects: 'lamp',\n  symbols: 'language',\n  flags: 'flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <Icon name=\"close\" className=\"gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <Icon name=\"search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <Icon name=\"delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <Icon name=\"eye-crossed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <Icon name=\"bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <Icon name=\"italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <Icon name=\"underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <Icon name=\"strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <Icon name=\"monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <Icon name=\"link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <Icon name=\"check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/visibility/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult;\n  onClick: (result: ApiBotInlineResult | ApiBotInlineMediaResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, description,\n  } = inlineResult;\n\n  const url = 'url' in inlineResult ? inlineResult.url : undefined;\n  const webThumbnail = 'webThumbnail' in inlineResult ? inlineResult.webThumbnail : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineMediaResult | ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <Icon name=\"lock-badge\" className=\"send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(lang, postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(lang, postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && oldLang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: OldLangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: OldLangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.root, 'panel-content custom-scroll', isReady && styles.ready)}>\n      {statistics && (\n        <StatisticsOverview\n          statistics={statistics}\n          type={isGroup ? 'group' : 'channel'}\n          title={lang('StatisticOverview')}\n        />\n      )}\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics)?.recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiPoll } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectPollFromMessage, selectTabState,\n} from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  poll?: ApiPoll;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  poll,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !poll || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = poll;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${poll.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n    const poll = message && selectPollFromMessage(global, message);\n\n    return {\n      chat,\n      message,\n      poll,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"channel-title\"\n              label={lang('EnterChannelName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"channel-about\"\n              label={lang('DescriptionPlaceholder')}\n              onChange={handleAboutChange}\n              value={about}\n              maxLength={CHANNEL_MAX_DESCRIPTION}\n              maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <Icon name=\"add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info section-info_push\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <LinkField link={privateInviteLink} className=\"invite-link\" />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <div className=\"settings-input\">\n              <UsernameInput\n                asLink\n                currentUsername={currentUsername}\n                isLoading={isLoading}\n                isUsernameAvailable={isUsernameAvailable}\n                checkedUsername={checkedUsername}\n                onChange={handleUsernameChange}\n              />\n            </div>\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    return filterPeersByQuery({ ids: availableMemberIds, query: search, type: 'user' });\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <Icon name=\"add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"section-info section-info_push\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"group-title\"\n              label={lang('GroupName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === GROUP_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"group-about\"\n              label={lang('DescriptionPlaceholder')}\n              maxLength={GROUP_MAX_DESCRIPTION}\n              maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n              onChange={handleAboutChange}\n              value={about}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                subLabel={\n                  chatFullInfo.isPreHistoryHidden ? lang('ChatHistoryHiddenInfo2') : lang('ChatHistoryVisibleInfo')\n                }\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"panel-content custom-scroll\">\n        {canHideParticipants && !isChannel && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                  withPortalForMenu\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  DEFAULT_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PaidMessagePrice from '../../common/paidMessage/PaidMessagePrice';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  progress?: ManagementProgress;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n  arePaidMessagesAvailable?: boolean;\n  groupPeersPaidStars: number;\n  canChargeForMessages?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  progress,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n  arePaidMessagesAvailable,\n  canChargeForMessages,\n  groupPeersPaidStars,\n}) => {\n  const { updateChatDefaultBannedRights, updatePaidMessagesPrice } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const [isPriceForMessagesChanged, markPriceForMessagesChanged, unmarkPriceForMessagesChanged] = useFlag();\n  const [isPriceForMessagesOpen, setIsPriceForMessagesOpen] = useState(canChargeForMessages);\n  const [chargeForMessages, setChargeForMessages] = useState<number>(groupPeersPaidStars);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkPriceForMessagesChanged();\n    }\n  }, [progress]);\n\n  const handleSavePermissions = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  });\n\n  const handleUpdatePaidMessagesPrice = useLastCallback(() => {\n    if (!chat) return;\n    updatePaidMessagesPrice({\n      chatId: chat?.id,\n      paidMessagesStars: isPriceForMessagesOpen ? chargeForMessages : 0,\n    });\n  });\n\n  const handleUpdatePermissions = useLastCallback(() => {\n    if (isPriceForMessagesChanged) {\n      handleUpdatePaidMessagesPrice();\n    }\n    if (havePermissionChanged) {\n      handleSavePermissions();\n    }\n  });\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = oldLang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, oldLang]);\n\n  const handleChargeStarsForMessages = useLastCallback(() => {\n    setIsPriceForMessagesOpen(!isPriceForMessagesOpen);\n    markPriceForMessagesChanged();\n  });\n\n  const handleChargeForMessagesChange = useLastCallback((value: number) => {\n    setChargeForMessages(value);\n    markPriceForMessagesChanged();\n  });\n\n  const arePermissionsChanged = isPriceForMessagesChanged || havePermissionChanged;\n  const arePermissionsLoading = progress === ManagementProgress.InProgress || isLoading;\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        {arePaidMessagesAvailable && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem onClick={handleChargeStarsForMessages}>\n              <span>{lang('GroupMessagesChargePrice')}</span>\n              <Switcher\n                id=\"charge_for_messages\"\n                label={lang('GroupMessagesChargePrice')}\n                checked={isPriceForMessagesOpen}\n              />\n            </ListItem>\n            <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('RightsChargeStarsAbout')}\n            </p>\n          </div>\n        )}\n\n        {isPriceForMessagesOpen && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <PaidMessagePrice\n              canChangeChargeForMessages\n              isGroupChat\n              chargeForMessages={chargeForMessages}\n              onChange={handleChargeForMessagesChange}\n            />\n          </div>\n        )}\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={arePermissionsChanged}\n        onClick={handleUpdatePermissions}\n        ariaLabel={lang('Save')}\n        disabled={arePermissionsLoading}\n      >\n        {arePermissionsLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { progress } = selectTabState(global).management;\n\n    const paidMessagesStars = chat?.paidMessagesStars;\n    const configStarsPaidMessageCommissionPermille = global.appConfig?.starsPaidMessageCommissionPermille;\n\n    return {\n      chat,\n      progress,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n      arePaidMessagesAvailable: Boolean(fullInfo?.arePaidMessagesAvailable && configStarsPaidMessageCommissionPermille),\n      canChargeForMessages: Boolean(paidMessagesStars && configStarsPaidMessageCommissionPermille),\n      groupPeersPaidStars: paidMessagesStars || DEFAULT_CHARGE_FOR_MESSAGES,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"section-help hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-heading\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"section-help hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-heading\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"section-help hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"section-help\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"section-help\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"panel-content custom-scroll\">\n        {!invite && (\n          <p className=\"section-help\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <LinkField title={invite.title} link={invite.link} className=\"invite-link\" />\n              {Boolean(expireDate) && (\n                <p className=\"section-help\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p className=\"section-heading\">{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: oldLang('LinkCopied'),\n    });\n  }, [oldLang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = oldLang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = oldLang('PeopleJoined', usage);\n    } else {\n      text = oldLang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${oldLang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${oldLang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${oldLang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = expireDate - getServerTime();\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += oldLang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += oldLang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${oldLang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: oldLang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: oldLang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: oldLang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: oldLang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"section-help\">{isChannel ? oldLang('PrimaryLinkHelpChannel') : oldLang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <LinkField\n              className=\"settings-input\"\n              link={primaryInviteLink}\n              withShare\n              onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n              title={chat?.usernames ? oldLang('PublicLink') : oldLang('lng_create_permanent_link_title')}\n            />\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <ListItem icon=\"add\" withPrimaryColor key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {oldLang('CreateNewLink')}\n          </ListItem>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"section-help hint\" key=\"links-hint\">{oldLang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"section-help\" key=\"title\">{oldLang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{oldLang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={oldLang('DeleteAllRevokedLinks')}\n        text={oldLang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={oldLang('RevokeLink')}\n        text={oldLang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={oldLang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={oldLang('DeleteLink')}\n        text={oldLang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"section-help\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info section-info_push\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"user-first-name\"\n              label={lang('UserInfo.FirstNamePlaceholder')}\n              onChange={handleFirstNameChange}\n              value={firstName}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              id=\"user-last-name\"\n              label={lang('UserInfo.LastNamePlaceholder')}\n              onChange={handleLastNameChange}\n              value={lastName}\n            />\n          </div>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"section-help\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { RegularLangFnParameters } from '../../util/localization';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Partial<Record<string, RegularLangFnParameters>>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\",\"list\":\"l_wfiFG0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiLabeledPrice,\n  ApiPaymentCredentials,\n  ApiWebDocument,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { IconName } from '../../types/icons';\nimport type { LangFn } from '../../util/localization';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  title: string;\n  description: string;\n  photo?: ApiWebDocument;\n  invoice: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: ApiLabeledPrice[];\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  title,\n  description,\n  photo,\n  invoice,\n  shippingPrices,\n  checkoutInfo,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const ref = useMediaTransition<HTMLImageElement>(photoUrl);\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(lang, tipAmount!, invoice.currency)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(lang, tip, invoice.currency, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = oldLang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, oldLang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && (\n          <img\n            ref={ref}\n            className={styles.checkoutPicture}\n            src={photoUrl}\n            draggable={false}\n            width={photo!.dimensions?.width}\n            height={photo!.dimensions?.height}\n            alt=\"\"\n          />\n        )}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {description && (\n            <div className={styles.checkoutDescription}>\n              {renderText(description, ['br', 'links', 'emoji'])}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {invoice.prices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang, oldLang('Checkout.TotalAmount'), totalPrice, invoice.currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: oldLang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: oldLang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: oldLang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: oldLang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: oldLang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: oldLang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  lang: LangFn, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(lang, value, currency)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      className={styles.list}\n      narrow\n      multiline={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { RegularLangFnParameters } from '../../util/localization';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  errorKey?: RegularLangFnParameters;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  errorKey,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={errorKey && lang.withRegular(errorKey)}\n        hint={passwordHint}\n        description={oldLang('PaymentConfirmationMessage', cardName)}\n        placeholder={oldLang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    errorKey: payment.error?.messageKey,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.form?.type === 'regular' ? payment.form.savedCredentials : undefined,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{oldLang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber && lang.withRegular(formErrors.cardNumber)}\n        />\n        {needCardholderName && (\n          <InputText\n            label={oldLang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder && lang.withRegular(formErrors.cardholder)}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry && lang.withRegular(formErrors.expiry)}\n          />\n          <InputText\n            label={oldLang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv && lang.withRegular(formErrors.cvv)}\n            teactExperimentControlled\n          />\n        </section>\n        {needCountry || needZip ? (\n          <h5>{oldLang('PaymentBillingAddress')}</h5>\n        ) : undefined}\n        <section className=\"inline-inputs\">\n          {needCountry && (\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.billingCountry}\n              hasArrow={Boolean(true)}\n              id=\"billing-country\"\n              error={formErrors.billingCountry && lang.withRegular(formErrors.billingCountry)}\n              tabIndex={0}\n              ref={selectCountryRef}\n            >\n              {\n                countryList.map(({ defaultName, name }) => (\n                  <option\n                    value={defaultName}\n                    className=\"county-item\"\n                    selected={defaultName === state.billingCountry}\n                  >\n                    {defaultName || name}\n                  </option>\n                ))\n              }\n            </Select>\n          )}\n          {needZip && (\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handleBillingPostCodeChange}\n              value={state.billingZip}\n              inputMode=\"text\"\n              tabIndex={0}\n              maxLength={12}\n              error={formErrors.billingZip && lang.withRegular(formErrors.billingZip)}\n            />\n          )}\n        </section>\n        <div className=\"checkbox\">\n          <Checkbox\n            label={oldLang('PaymentCardSavePaymentInformation')}\n            checked={canSaveCredentials ? state.saveCredentials : false}\n            tabIndex={0}\n            subLabel={oldLang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n            onChange={handleChangeSaveCredentials}\n            disabled={!canSaveCredentials}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(lang, amount, currency),\n    value,\n  }))), [shippingOptions, currency, lang]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{oldLang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{oldLang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={oldLang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1 && lang.withRegular(formErrors.streetLine1)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2 && lang.withRegular(formErrors.streetLine2)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city && lang.withRegular(formErrors.city)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state && lang.withRegular(formErrors.state)}\n            />\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2 && lang.withRegular(formErrors.countryIso2)}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode && lang.withRegular(formErrors.postCode)}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{oldLang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={oldLang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName && lang.withRegular(formErrors.fullName)}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={oldLang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email && lang.withRegular(formErrors.email)}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={oldLang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone && lang.withRegular(formErrors.phone)}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={oldLang('PaymentShippingSave')}\n          subLabel={oldLang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountry, ApiInvoice, ApiLabeledPrice, ApiPaymentCredentials, ApiPaymentFormRegular,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  step?: PaymentStep;\n  chat?: ApiChat;\n  nativeProvider?: string;\n  invoice?: ApiInvoice;\n  form?: ApiPaymentFormRegular;\n  error?: TabState['payment']['error'];\n  prices?: ApiLabeledPrice[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  shippingOptions?: ShippingOption[];\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  form,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.messageKey,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (form?.savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = form.savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [form, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.descriptionKey ? lang.withRegular(error.descriptionKey) : lang('ErrorUnspecified')}</h4>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            title={form!.title}\n            description={form!.description}\n            photo={form!.photo}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice!}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!form!.isPasswordMissing && form!.canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            needEmail={Boolean(invoice?.isEmailRequested || invoice?.isEmailSentToProvider)}\n            needPhone={Boolean(invoice?.isPhoneRequested || invoice?.isPhoneSentToProvider)}\n            needName={Boolean(invoice?.isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={invoice!.currency}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (form?.savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (invoice?.isEmailRequested && !email)\n          || (invoice?.isPhoneRequested && !phone)\n          || (invoice?.isNameRequested && !fullName);\n\n        if ((invoice?.isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (invoice?.isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return oldLang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return oldLang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return oldLang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return oldLang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return oldLang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return oldLang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return oldLang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, oldLang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? oldLang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, invoice!.currency, oldLang.code))\n    : lang('PaymentInfoDone');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <Icon name={step === PaymentStep.Checkout ? 'close' : 'arrow-left'} />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            className=\"button-text\"\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      form,\n      step,\n      shippingOptions,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    const { invoice, nativeParams, nativeProvider } = form || {};\n    const countryList = global.countryList.general;\n\n    let providerName = form?.nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const bot = form?.botId ? selectUser(global, form.botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      nativeProvider: providerName,\n      isProviderError,\n      form,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: ApiLabeledPrice[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiReceiptRegular, ApiShippingAddress } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceiptRegular;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  receipt,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const prevReceipt = usePrevious(receipt);\n  const renderingReceipt = receipt || prevReceipt;\n\n  const checkoutInfo = useMemo(() => {\n    if (!renderingReceipt) return undefined;\n    return getCheckoutInfo(renderingReceipt.credentialsTitle, renderingReceipt.info, renderingReceipt.shippingMethod);\n  }, [renderingReceipt]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      {renderingReceipt && (\n        <>\n          <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            <Button\n              className=\"close-button\"\n              color=\"translucent\"\n              round\n              size=\"smaller\"\n              onClick={closeModal}\n              ariaLabel=\"Close\"\n            >\n              <Icon name=\"close\" />\n            </Button>\n            <h3> {lang('PaymentReceipt')} </h3>\n          </div>\n          <div className=\"receipt-content custom-scroll\">\n            <Checkout\n              shippingPrices={renderingReceipt.shippingPrices}\n              totalPrice={renderingReceipt.totalAmount}\n              tipAmount={renderingReceipt.tipAmount}\n              invoice={renderingReceipt.invoice}\n              checkoutInfo={checkoutInfo}\n              title={renderingReceipt.title}\n              description={renderingReceipt.description}\n              photo={renderingReceipt.photo}\n            />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    return {\n      receipt,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?: {\n    phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport Modal from '../ui/Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n};\n\nconst WebAppsCloseConfirmationModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { closeWebAppsCloseConfirmationModal, closeWebAppModal } = getActions();\n\n  const [shouldSkipInFuture, setShouldSkipInFuture] = useState(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onClose = useCallback(() => {\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const confirmHandler = useCallback(() => {\n    closeWebAppModal({ shouldSkipConfirmation: true });\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      title={lang('CloseMiniApps')}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <p>{lang('AreYouSureCloseMiniApps')}</p>\n      <Checkbox\n        className=\"dialog-checkbox\"\n        label={lang('DoNotAskAgain')}\n        checked={shouldSkipInFuture}\n        onCheck={setShouldSkipInFuture}\n      />\n      <div\n        className=\"dialog-buttons mt-2\"\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color=\"danger\"\n        >\n          {oldLang('Confirm')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {oldLang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(WebAppsCloseConfirmationModal);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { selectUser } from '../../../global/selectors';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport TableAboutModal, { type TableAboutData } from '../common/TableAboutModal';\n\nimport styles from './FrozenAccountModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['isFrozenAccountModalOpen'];\n};\n\ntype StateProps = {\n  freezeAppealUrl?: string;\n  botFreezeAppealUsername?: string;\n  freezeUntilDate?: number;\n};\n\nconst FrozenAccountModal = ({\n  modal,\n  freezeUntilDate,\n  freezeAppealUrl,\n  botFreezeAppealUsername,\n}: OwnProps & StateProps) => {\n  const {\n    closeFrozenAccountModal,\n    openUrl,\n  } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n\n  const handleClose = useLastCallback(() => {\n    closeFrozenAccountModal();\n  });\n\n  const handleAppeal = useLastCallback(() => {\n    closeFrozenAccountModal();\n    if (freezeAppealUrl) {\n      openUrl({ url: freezeAppealUrl });\n    }\n  });\n\n  const header = useMemo(() => {\n    return (\n      <div className={styles.header}>\n        <AnimatedIconWithPreview\n          size={160}\n          tgsUrl={LOCAL_TGS_URLS.BannedDuck}\n          noLoop\n        />\n        <div className={styles.title}>\n          {lang('FrozenAccountModalTitle')}\n        </div>\n      </div>\n    );\n  }, [lang]);\n\n  const footer = useMemo(() => {\n    if (!isOpen) return undefined;\n    return (\n      <div className={styles.footer}>\n        <Button\n          className={styles.buttonAppeal}\n          size=\"smaller\"\n          onClick={handleAppeal}\n          noForcedUpperCase\n        >\n          {lang('ButtonAppeal')}\n        </Button>\n        <Button\n          isText\n          size=\"smaller\"\n          onClick={handleClose}\n          noForcedUpperCase\n        >\n          {lang('ButtonUnderstood')}\n        </Button>\n      </div>\n    );\n  }, [lang, isOpen]);\n\n  if (!freezeUntilDate || !botFreezeAppealUsername) return undefined;\n\n  const date = new Date(freezeUntilDate * 1000);\n\n  const botLink = (\n    <Link onClick={handleAppeal} isPrimary>\n      {formatUsername(botFreezeAppealUsername)}\n    </Link>\n  );\n\n  const listItemData = [\n    ['hand-stop', lang('FrozenAccountViolationTitle'), lang('FrozenAccountViolationSubtitle')],\n    ['lock', lang('FrozenAccountReadOnlyTitle'), lang('FrozenAccountReadOnlySubtitle')],\n    ['frozen-time', lang('FrozenAccountAppealTitle'),\n      lang('FrozenAccountAppealSubtitle', {\n        botLink,\n        date: formatDateToString(date, lang.code),\n      }, {\n        withNodes: true,\n      })],\n  ] satisfies TableAboutData;\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={header}\n      listItemData={listItemData}\n      footer={footer}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const freezeUntilDate = global.appConfig?.freezeUntilDate;\n    const freezeAppealUrl = global.appConfig?.freezeAppealUrl;\n    const botFreezeAppealId = global.botFreezeAppealId;\n    const botFreezeAppealUsername = botFreezeAppealId\n      ? selectUser(global, botFreezeAppealId)?.usernames?.[0]?.username : undefined;\n\n    return {\n      freezeUntilDate,\n      freezeAppealUrl,\n      botFreezeAppealUsername,\n    };\n  },\n)(FrozenAccountModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"cW2rtp6M\",\"title\":\"qLSm0uyC\",\"footer\":\"Vj3QQ_JQ\",\"buttonAppeal\":\"anvg3JaY\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  const lang = useLang();\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n"],"names":["memo","StarTopupOptionList","isActive","className","options","selectedStarOption","selectedStarCount","starsNeeded","onClick","oldLang","useOldLang","lang","useLang","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","useFlag","useEffect","renderingOptions","canExtend","useMemo","undefined","maxOption","reduce","max","option","stars","forceShowAll","result","currentStackedStarsCount","canExtendOptions","forEach","index","isExtended","push","starsCount","Math","min","isWide","length","React","createElement","buildClassName","styles","map","isOdd","isActiveOption","perUserStarCount","winner","winners","find","opt","users","perUserStars","wideOption","active","key","optionTop","formatInteger","stackedStars","dir","isRtl","Array","from","StarIcon","stackedStar","type","size","optionBottom","formatCurrency","amount","currency","renderText","Button","moreOptions","isText","noForcedUpperCase","Icon","iconDown","name","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","PasswordMonkey","isPasswordVisible","isBig","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","isMobile","useAppLayout","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","useTimeout","handleFirstMonkeyLoad","useCallback","id","AnimatedSticker","STICKER_SIZE_TWO_FA","tgsUrl","LOCAL_TGS_URLS","MonkeyClose","playSegment","noLoop","onLoad","MonkeyPeek","TableAboutModal","isOpen","listItemData","headerIconName","header","footer","buttonText","hasBackdrop","withSeparator","onClose","onButtonClick","contentClassName","Modal","hasAbsoluteCloseButton","absoluteCloseButtonColor","icon","title","subtitle","ListItem","isStatic","multiline","iconClassName","Separator","getViewableMedia","params","media","mediaIndex","isSingle","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","webPageDocument","isDocumentMedia","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","getNodes","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","ChannelAvatar","SuggestedAvatar","StarsTransaction","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","container","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","onload","blurredDataUri","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","ReportAvatarModal","peerId","onCloseAnimationEnd","reportProfilePhoto","getActions","selectedReason","setSelectedReason","useState","description","setDescription","handleReport","useLastCallback","chatId","reason","handleSelectReason","value","handleDescriptionChange","e","target","REPORT_OPTIONS","label","onEnter","RadioGroup","onChange","selected","InputText","color","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","DeleteProfilePhotoModal","profileId","onConfirm","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","isUserId","withGlobal","global","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","chat","selectCurrentChat","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","MediaViewerActions","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","onTrigger","round","ariaLabel","renderDeleteModal","openDeleteModalHandler","messageIds","isSchedule","menuItems","isForwardingAllowed","content","children","href","download","destructive","DropdownMenu","trigger","positionX","MenuItem","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","getCurrentTime","setCurrentTime","useCurrentTimeSignal","MediaViewerFooter","text","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","stopPropagation","isRectangular","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","connector","request","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","SeekLine","duration","bufferedRanges","isReady","posterSize","playbackRate","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","start","end","PLAYBACK_RATES","VideoPlayerControls","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","ripple","RangeSlider","bold","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","VideoPlayer","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","timestamp","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","sponsoredMessage","textMessage","maxTimestamp","selectMessageTimestampableDuration","MediaViewerContent","withAnimation","isMoving","onFooterClick","updateLastPlaybackTimestamp","toggleControlsOnMove","updatePlaybackTimestamp","useThrottledCallback","MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION","isInAlbum","newTimestamp","PLAYBACK_SAVE_INTERVAL","useSignalEffect","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","MediaViewerSlides","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","closest","calculateOffsetBoundaries","offsetTop","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","dragOffsetX","dragOffsetY","cancelDrag","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","includes","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","toFixed","element","selector","matches","messageSender","selectSender","owner","SenderInfo","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getPeerTitle","Avatar","peer","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","MediaViewer","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsored","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","imageEl","messageListElement","getOffsetToContainer","scrollTop","offsetHeight","isMessageImageFullyVisible","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","HTMLElement","isFromMedia","isMedia","randomId","handleForward","fromChatId","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","StealthModeModal","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","isSlim","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterPeersByQuery","ids","query","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","usersById","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","getHours","expireDate","section","list","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","closeButton","headerTitle","renderHeaderContent","slideClassName","sender","fromPeerId","EmbeddedStoryForward","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","PeerColorWrapper","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","StoryFooter","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","userFullInfo","selectUserFullInfo","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","reportModal","giftInfoModal","isPaymentMessageConfirmDialogOpen","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","paidMessagesStars","selectPeerPaidMessagesStars","isAccountFrozen","selectIsCurrentUserFrozen","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","arePeerSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadPeerSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","inputPlaceholder","formatStarsAsIcon","asFont","withNodes","StoryProgress","formatRelativePastTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","transformX","getCurrentStoryRef","composer","focusEditableElement","disableScrolling","enableScrolling","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","scrollHeight","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","StoryView","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","viewsList","contactFilter","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","reportStory","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","openMessageReport","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","ChatOrUserPicker","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","isLowStackPriority","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","toLowerCase","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","RecipientPicker","API_CHAT_TYPES","onSelectRecipient","setSearch","priorityIds","isDeletedUser","chatFullInfo","selectChatFullInfo","sorted","sortChatIds","filterChatIdsByType","renderingIds","isForwarding","isManyMessages","isStory","ForwardRecipientPicker","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","DraftRecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","AttachBotRecipientPicker","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","Dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","messageList","getReadableErrorText","pick","Notifications","notifications","notification","Notification","localId","SafeLinkModal","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","withMarkdown","OpenMapModal","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","UrlAuthModal","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","CalendarModal","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","hours","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","HistoryCalendar","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","phoneCodeList","countryList","phoneCodes","NewContactModal","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","ResizeHandleType","resizeHandleSelectorsMap","Top","Bottom","Left","Right","topLeft","TopLeft","topRight","TopRight","bottomLeft","BottomLeft","bottomRight","BottomRight","resizeHandleSelectors","resizeTimeout","FULLSCREEN_POSITION","webApps","selectActiveWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","MinimizedWebAppModal","changeWebAppModalState","closeWebAppModal","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","state","activeTabName","botName","pluralValue","renderTitle","isPopularApp","requestMainWebView","theme","extractCurrentThemeParams","activeUserCount","botActiveUsers","badgeText","formatIntegerCompact","PeerBadge","avatarContainer","textClassName","badgeClassName","userCountBadge","badgeIconClassName","userBadgeIcon","badgeIcon","runThrottled","cb","globalSearch","popularBotApps","fetchingStatus","botApps","recentBotIds","topBotApps","MoreAppsTabContent","shouldShowMoreMine","setShouldShowMoreMine","searchPopularBotApps","handleToggleShowMoreMine","prev","filteredFoundIds","LoadMoreDirection","Backwards","handleSearchInputReset","noFastList","preloadBackwards","onReset","sectionTitle","showMoreLink","sectionContent","WebAppGridItem","FULLSCREEN_BUTTONS_AREA_HEIGHT","MAIN_BUTTON_ANIMATION_TIME","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeWebApp","activeWebAppKey","selectWebApp","activeBotId","attachBot","attachMenu","bots","botAppSettings","botInfo","appSettings","selectTheme","isPaymentModalOpen","regularPaymentStatus","payment","starsPaymentStatus","inputInvoice","starsInputInvoice","starsPayment","botAppPermissions","selectBotAppPermissions","paymentStatus","WebAppModalTabContent","webApp","registerSendEventCallback","registerReloadFrameCallback","isTransforming","isMultiTabSupported","onContextMenuButtonClick","modalHeight","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","resetPaymentStatus","openChatWithInfo","openEmojiStatusAccessModal","openLocationAccessModal","openPreparedInlineMessageModal","mainButton","setMainButton","secondaryButton","setSecondaryButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","requestedFileDownload","setRequestedFileDownload","bottomBarColor","setBottomBarColor","unlockPopupsAt","handlePopupOpened","handlePopupClosed","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerButtonRef","headerButtonCaptionRef","exitFullScreenCallback","fullscreenElementRef","activeWebAppName","appName","isBackButtonVisible","placeholderPath","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","isAvailable","IS_GEOLOCATION_SUPPORTED","isAccessRequested","geolocation","isAccessGranted","updateCurrentWebApp","updatedPartialWebApp","update","themeParams","secondary_bg_color","themeBackgroundColor","bg_color","backgroundColorFromEvent","setBackgroundColorFromEvent","backgroundColorFromSettings","backgroundColor","backgroundDarkColor","themeHeaderColor","headerColorFromEvent","setHeaderColorFromEvent","headerColorFromSettings","headerColor","headerDarkColor","frameRef","isSimple","reloadFrame","sendEvent","sendFullScreenChanged","sendViewport","sendSafeArea","sendTheme","useWebAppFrame","isSimpleView","onEvent","openInvoice","closeWebApp","openSuggestedStatusModal","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","eventType","eventData","is_fullscreen","forceReloadFrame","once","isNonStable","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","custom_emoji_id","BigInt","customEmojiId","plannedEvents","getIsWebAppsFullscreenSupported","exitIfFullscreenCallback","TME_LINK_PREFIX","path_full","shouldIgnoreCache","force_request","is_visible","isSettingsButtonVisible","validateHexColor","color_key","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","handleRejectFileDownload","fileUrl","handleCheckDownloadFile","file_name","access_requested","access_granted","geolocationData","getGeolocationStatus","accessRequested","accessGranted","latitude","longitude","altitude","course","heading","speed","horizontal_accuracy","accuracy","vertical_accuracy","altitudeAccuracy","handleRequestLocation","isMainButtonVisible","isSecondaryButtonVisible","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","handleSecondaryButtonClick","buttonId","button_id","handleAppPopupModalClose","sendThemeCallback","setFullscreenCallback","checkIfFullscreen","sendFullScreenChangedCallback","visibilityChangedCallBack","prevModalState","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","shouldCloseActive","handleAcceptWriteAccess","handleDownloadFile","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","secondaryButtonCurrentPosition","secondaryButtonCurrentColor","secondaryButtonCurrentTextColor","secondaryButtonCurrentIsActive","secondaryButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideMainButton","setShouldHideMainButton","shouldHideSecondaryButton","setShouldHideSecondaryButton","shouldShowMainButton","setShouldShowMainButton","shouldShowSecondaryButton","setShouldShowSecondaryButton","shouldShowAppNameInFullscreen","setShouldShowAppNameInFullscreen","backButtonTextWidth","setBackButtonTextWidth","isVerticalLayout","rowsCount","hideDirection","mainButtonChangeTimeout","mainButtonFastTimeout","secondaryButtonChangeTimeout","secondaryButtonFastTimeout","appNameDisplayTimeout","frameStyle","handleBackClick","handleCollapseClick","handleShowContextMenu","backIconClass","backButtonCaption","hasHeaderElement","viewBox","renderDefaultPlaceholder","sandbox","allow","allowFullScreen","hasCloseButton","filename","MINIMIZED_STATE_SIZE","DEFAULT_MAXIMIZED_STATE_SIZE","MAXIMIZED_STATE_MINIMUM_SIZE","miniAppsCachedPosition","miniAppsCachedSize","selectSharedSettings","cachedPosition","cachedSize","WebAppModal","prolongWebView","openWebAppTab","openMoreAppsTab","closeMoreAppsTab","updateMiniAppCachedPosition","updateMiniAppCachedSize","getMaximizedStateSize","setMaximizedStateSize","getSize","openedOrderedKeys","sessionKeys","isMoreAppsTabActive","tabs","isMaximizedState","isFullScreen","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","isDragging","draggableStyle","dragHandleElementRef","isDragEnabled","originalSize","minimumSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartTransform","setElementPositionOnStartTransform","getElementSizeOnStartTransform","setElementSizeOnStartTransform","getTransformStartPoint","setTransformStartPoint","elementPositionOnStartTransform","transformStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","startResizing","stopResizing","isWindowsResizing","startWindowResizing","stopWindowResizing","hitResizeHandle","setHitResizeHandle","getVisibleArea","innerWidth","innerHeight","updateCurrentPosition","getActualPosition","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleStartResize","targetElement","resizeHandle","RESIZE_HANDLE_SELECTOR","getResizeHandleFromTarget","handleDragRelease","handleResizeRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","originalWidth","originalHeight","adjustSizeWithinBounds","handleWindowResize","handleDrag","sizeOnStartTransform","pageVisibleX","pageVisibleY","maxX","maxY","newBounds","cleanups","resizeHandler","cursorStyle","actualPosition","useDraggable","getMinimumSize","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleCloseMoreAppsTab","handleTabClose","handleToggleClick","handleFullscreenClick","handleOpenMoreAppsTabClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","renderMoreMenu","anchor","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","fill","buildResizeHandleClass","handleClassName","RESIZE_HANDLE_CLASS_NAME","useHorizontalScroll","dialogRef","dialogStyle","dialogContent","shortName","renderActiveTab","noBackdropClose","BotTrustModal","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","AttachBotInstallModal","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","DeleteFolderDialog","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","PremiumFeatureItem","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","SliderDots","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","PremiumLimitsCompare","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","PremiumLimitPreview","colorStepProgress","lerp","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","play","isLowPriority","stickers","premium","PremiumFeaturePreviewStickers","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","AVATAR_SIZES","giant","PremiumFeaturePreviewVideo","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","moreAccounts","LIMITS_DESCRIPTIONS","PremiumFeatureModal","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","months","perMonthPrice","price","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","currentSection","hasHeaderBackdrop","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumFeaturePreviewStories","videoSections","videos","PREMIUM_BOTTOM_VIDEOS","PremiumSubscriptionOption","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","formatCurrencyAsString","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","PremiumMainModal","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","monthOption","subscribeButtonText","CustomEmoji","PremiumLogo","template","first","second","emoji","thumbCustomEmojiId","link","getHeaderText","statusText","entities","statusEntities","renderFooterText","ItemPicker","notFoundText","noScrollRestore","isViewOnly","itemClassName","forceRenderAllItems","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","CountryPickerModal","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","GiveawayChannelPickerModal","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","shouldAdaptToSearch","withFixedHeight","confirmButtonText","GiveawayTypeOption","isLink","onClickAction","userNames","selectedMemberIds","displayText","members","adminMembersById","GiveawayUserPickerModal","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredUserIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","gifts","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GiveawayModal","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedMonthOption","setSelectedMonthOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedGift","gift","selectedStarsGift","filteredGifts","STARS_CURRENCY_CODE","basicGift","userCountOptions","winnerCountOptions","quantity","handlePremiumClick","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","subLabelClassName","formatDateTimeToString","boosts","RangeSliderWithMarks","rangeCount","marks","match","Link","isPrimary","renderPremiumFeaturesLink","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","PremiumLimitReachedModal","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","maxDistance","StickerSetCover","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToSticker","IS_WEBM_SUPPORTED","firstStickerHash","getStickerMediaHash","firstStickerMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","StickerButton","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","withSparkles","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","until","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","Sparkles","preset","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","ReactionEmoji","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","collectibleStatuses","collectibleEmojiStatuses","statuses","StickerSet","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isStatusCollectible","COLLECTIBLE_STATUS_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","collectibleEmojiIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","isHqEmoji","canvasRef","HEADER_BUTTON_WIDTH","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","CustomEmojiPicker","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","collectibleStatusEmojis","collectibleStatusEmojiIds","prefix","canLoadAndPlay","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","uniqueByField","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","StatusPickerMenu","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CUSTOM_EMOJI_SIZE","SuggestedStatusModal","closeSuggestedStatusModal","sendWebAppEvent","renderingModal","mockPeerWithStatus","formatShortDuration","handleSetStatus","expires","referrerWebAppKey","loopLimit","PeerChip","mockPeer","withEmojiStatus","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","BoostModal","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","chatMessage","GiftCodeModal","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","tableData","isFromGiveaway","TableInfoModal","ChatlistAlready","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","isNew","alreadyPeerIds","newChatsCount","noCustomEmojiPlayback","noTitleAnimations","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","Badge","buttonBadge","isAlternateColor","ChatlistDelete","suggestedPeerIds","leaveChatlist","ChatlistNew","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","ChatlistInviteModal","renderingInfo","renderingFolderTitle","folderTabNumber","folderTitle","foldersWrapper","folders","Tab","badgeCount","isBadgeActive","ChatInviteModal","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","minLevelToRestrictAds","channelRestrictAdsLevelMin","AboutAdsModal","closeAboutAdsModal","moreMenuRef","canReport","additionalInfo","sponsorInfo","isMonetizationSharing","renderingIsNewDesign","regularAdContent","SafeLink","SponsoredMessageContextMenuContainer","triggerRef","shouldSkipAbout","onItemClick","AboutMonetizationModal","blockchainText","monetizationTitle","specialReplacement","twoFaSettings","hint","passwordHint","VerificationMonetizationModal","closeMonetizationVerificationModal","clearMonetizationVerificationError","processMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","handleClearError","PasswordForm","shouldShowSubmit","errorKey","withRegular","clearError","shouldResetValue","onChangePasswordVisibility","EmojiStatusAccessModal","closeEmojiStatusAccessModal","toggleUserEmojiStatusPermission","loadDefaultStatusIcons","currentStatusIndex","setCurrentStatusIndex","totalCount","prevIndex","renderPickerItem","chatItem","itemName","isBotAccessEmojiGranted","onCloseHandler","renderStatusText","LocationAccessModal","closeLocationAccessModal","toggleUserLocationPermission","renderInfo","ReportAdModal","reportSponsored","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","ReportModal","reportMessages","closeReportModal","openPreviousReportModal","setText","subject","handleTextChange","closeReportMessageModalHandler","sendMessageReportHandler","Report","TextArea","isOptional","maxLengthIndicator","noReplaceNewlines","isBlurred","isBackgroundBlurred","patternColor","background","customBackground","selectThemeValues","PreparedMessageModal","closePreparedInlineMessageModal","openSharePreparedMessageModal","customBackgroundValue","useCustomBackground","handleOpenClick","localMessage","getMockPreparedMessageFromResult","bgClassName","inert","Message","noComments","noReplies","appearanceOrder","isJustAdded","isFirstInGroup","isLastInGroup","isLastInList","isFirstInDocumentGroup","isLastInDocumentGroup","starsBalance","balance","isStarsBalanceModalOpen","starsBalanceModal","SharePreparedMessageModal","closeSharePreparedMessageModal","sendInlineBotResult","updateSharePreparedMessageModalSendArgs","pendingSendArgs","starsForSendMessage","closeConfirmDialog","closeConfirmModalPayForMessage","dialogHandler","paymentMessageConfirmDialogHandler","shouldAutoApprove","shouldPaidMessageAutoApprove","setAutoApprove","setShouldPaidMessageAutoApprove","handleWithConfirmation","handleActionWithPaymentConfirmation","usePaidMessageConfirmation","handleSend","handleSendWithPaymentConfirmation","handleClosePaymentMessageConfirmDialog","peerName","PaymentMessageConfirmDialog","userName","messagePriceInStars","messagesCount","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","PermissionCheckboxList","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","selectCanDeleteSelectedMessages","isSuperGroup","contactName","getPrivateChatUserId","chatBot","isSystemBot","selectBot","canBanUsers","getHasAdminRight","isCreator","isChatWithBot","selectIsChatWithBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","DeleteMessageModal","closeDeleteMessageModal","deleteMessages","reportChannelSpam","deleteChatMember","deleteScheduledMessages","exitMessageSelectMode","updateChatMemberBannedRights","deleteParticipantHistory","defaultBannedRights","peerIdsToDeleteAll","setPeerIdsToDeleteAll","peerIdsToBan","setPeerIdsToBan","peerIdsToReportSpam","setPeerIdsToReportSpam","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","shouldDeleteForAll","setShouldDeleteForAll","peerList","senderArray","getSendersFromSelectedMessages","buildNestedOptionListWithAvatars","member","peerListToDeleteAll","peerListToReportSpam","peerListToBan","isCurrentUserInList","isAdmin","shouldShowOption","peerNames","buildCollectionByCallback","ACTION_SPAM_OPTION","nestedOptions","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByPeerId","selectedMessageIdList","msgId","selectSenderFromMessage","handleReportSpam","userMessagesMap","messageIdList","participantId","handleDeleteMessages","filteredMessageIdList","handleDeleteAllPeerMessages","peerIdList","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageList","isNaN","CheckboxGroup","nestedCheckbox","isPrivateChat","canPinForAll","PinMessageModal","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","UnpinAllMessagesModal","pinnedMessagesCount","onUnpin","shouldWarnAboutSvg","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","selectedMessageIds","selectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","MessageSelectToolbar","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","setSharedSettingOption","handleCopy","useHotkeys","useCopySelectedMessages","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","handleExitMessageSelectMode","handleDelete","onBackspace","onEsc","handleMessageDownload","handleSvgConfirm","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","PrivacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","ReadTime","LastSeen","reactorModal","reactors","ReactorListModal","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","flatMap","peerReactions","reactor","seenByUser","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","EmojiInteractionAnimation","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","ChatLanguageModal","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","languages","listItem","highlight","CollectibleInfoModal","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","PureMultimodalInput","setMessages","textareaRef","adjustHeight","localStorageInput","setLocalStorageInput","useLocalStorage","inputValue","setInputValue","domValue","submitForm","Textarea","cx","rows","autoFocus","shiftKey","toast","StopButton","SendButton","AISearchInput","prevProps","nextProps","PureStopButton","messages","sanitizeUIMessages","StopIcon","PureSendButton","suggestions","props","SerenaIcon","GLOBAL_SEARCH_CHATID","injectMessageAI","injectComponent","AISearch","messageListRef","attachments","setAttachments","pageInfo","setPageInfo","lastTime","hasMore","append","setInput","useChat","api","sendExtraMessageFields","ChataiStores","getMessages","res","localChatAiMessages","parseStoreMessage2Message","parsedMessage","parseMessage2StoreMessage","storeMessages","Promise","resolve","searchGroup","similarItems","messageEmbeddingStore","similaritySearch","filterOptions","include","metadata","chatType","searchResult","chatIds","score","uuidv4","createdAt","annotations","searchUser","senderIds","searchMessage","senderName","random","isAuxiliary","toolsHitCheck","fetch","headers","json","toolResults","toolCall","toolName","keyword","scrollToBottom","sendGAEvent","AISearchSugesstions","Messages","AISearchWrapper","createMapStateToProps","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","AudioResults","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","getIsChatMuted","selectNotifyDefaults","selectNotifyException","canChangeFolder","chatFolders","LeftSearchResultChat","withUsername","withOpenAppButton","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","handleOpenApp","useSelectWithEnter","storyViewerOrigin","hasMainMiniApp","MuteChatModal","ChatFolderModal","BotAppResults","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","privateChatUserId","privateChatUser","ChatMessage","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","DateSuggest","searchDate","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","LeftSearchResultTopic","foundTopicIds","ChatMessageResults","dateSearchQuery","onSearchDateSelect","openThread","handleTopicClick","nothingFound","LeftSearchResultSponsored","sponsoredPeer","viewSponsored","useOnIntersect","intersectionRatio","handleBadgeClick","handleBadgeMouseDown","BadgeButton","topUserIds","topPeers","recentlyFoundChatIds","RecentContacts","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","ChatResults","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","searchContext","setSearchContext","context","handlePickerItemClick","getSearchContextCaption","handleClickContext","itemPlaceholderClass","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","shouldResetResultsByType","shouldCheckFetchingMessagesStatus","handleClickShowMoreLocal","handleClickShowMoreGlobal","actualFoundIds","isMessagesFetching","shouldRenderTopPeers","shouldRenderMessagesSection","noScrollRestoreOnTop","customIcon","shouldCleanup","CURRENT_TYPE","FileResults","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","LinkResults","WebLink","onMessageClick","MediaResults","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","AI","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","LeftSearch","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","INITIAL_STATE","email","twoFaReducer","payload","maxChats","selectCurrentLimit","SettingsFoldersChatFilters","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","el","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","SettingsFoldersEdit","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","typeKey","renderChatType","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","foldersById","recommended","recommendedChatFolders","folderIds","aiChatFolders","filterAIFolder","maxFolders","SettingsFoldersMain","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","PRESET_FOLDER_ID","UNREAD_FOLDER_ID","AI_FOLDER_ID","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","SettingsShareChatlist","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","pinnedChatIds","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","AnimatedIcon","FoldersShare","withShare","onRevoke","lockedUnselectedIds","SettingsFolders","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsPasswordForm","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","SettingsPasscodeCongratulations","fullReset","STICKER_SIZE_PASSCODE","Congratulations","SettingsPasscodeEnabled","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","SettingsPasscodeStart","passcode","SettingsPasscode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeForm","PasscodeEnabled","DEFAULT_POINTS","getProgress","points","pointIndex","findIndex","prevPoint","nextPoint","pointValue","PaidMessageSlider","readOnly","canChangeChargeForMessages","mainClassName","number","formatStarsAsText","step","starsUsdWithdrawRateX1000","starsUsdWithdrawRate","configStarsPaidMessageCommissionPermille","starsPaidMessageCommissionPermille","starsPaidMessageAmountMax","DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES","isGroupChat","chargeForMessages","handleChargeForMessagesChange","handleUnlockWithPremium","MINIMUM_CHARGE_FOR_MESSAGES","percent","formatPercent","premiumSection","handleOpenPremiumModal","nonContactPeersPaidStars","selectNonContactPeersPaidStars","noPaidReactionsForUsersCount","noPaidMessages","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","shouldChargeForMessages","DEFAULT_CHARGE_FOR_MESSAGES","canLimitNewMessagesWithoutPremium","canChargeForMessages","starsPaidMessagesAvailable","canChangeForContactsAndPremium","setChargeForMessages","PrivacyLockedOption","hidden","isCanCheckedInDisabled","updateGlobalPrivacySettingsWithDebounced","privacyDescription","PaidMessagePrice","itemSubtitle","PrivacyNoPaidMessages","renderSectionNoPaidMessagesForUsers","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","SettingsActiveSession","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","iconDevice","dateActive","box","appVersion","ip","region","getLocation","note","actionHeader","actionName","SettingsActiveSessions","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","SettingsActiveWebsite","terminateWebAuthorization","renderingBot","browser","SettingsActiveWebsites","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","StickerSetCard","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","byKey","customEmojiSetIds","canPlayAnimatedEmojis","SettingsCustomEmoji","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","SettingsDataStorage","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","SettingsDoNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","ManageUsernames","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","UsernameInput","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","SettingsEditProfile","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","SettingsExperimental","requestWave","snapButtonRef","isSnapButtonAnimating","setIsSnapButtonAnimating","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","handleRequestWave","startX","startY","handleRequestConfetti","handleSnap","animateSnap","Experimental","IS_WAVE_TRANSFORM_SUPPORTED","IS_SNAP_EFFECT_SUPPORTED","IS_ELECTRON","shouldUseSystemTheme","messageSendKeyCombo","messageTextSize","timeFormat","SettingsGeneral","isMobileDevice","timeFormatOptions","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","WallpaperTile","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","loadedWallpapers","SettingsGeneralBackground","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","SettingsHeader","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneNumberAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyGiftsAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","canTranslate","canTranslateChats","SettingsLanguage","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","sessionCount","SettingsMain","openSupportChat","openGiftRecipientPicker","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","languageInfo","formatStarsAmount","FAQ_URL","PRIVACY_URL","renderTextFilters","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","SettingsNotifications","notifyDefaults","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsMuted","mutedUntil","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","groups","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","hasPasscode","canDisplayChatInTitle","isCurrentUserFrozen","blockedCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","SettingsPrivacy","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","botsPrivacy","isVisibilityEverybody","shouldShowBotsString","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","conjunction","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","BlockUserModal","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","SettingsPrivacyBlockedUsers","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","disallowedGifts","SettingsAcceptedGift","handleOpenTelegramPremiumModal","actionText","handleLimitedEditionChange","shouldDisallowLimitedStarGifts","handleUnlimitedEditionChange","shouldDisallowUnlimitedStarGifts","handleUniqueChange","shouldDisallowUniqueStarGifts","handlePremiumSubscriptionChange","shouldDisallowPremiumGifts","selectShouldHideReadMarks","SettingsPrivacyLastSeen","canShowHideReadTime","handleChangeShouldHideReadMarks","SettingsPrivacyPublicProfilePhoto","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","headerText","prepareSubtitle","userIdsCount","chatIdsCount","isAllowBots","userCountString","chatCountString","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","shouldDisplayGiftsButton","addByPhone","phoneP2P","SettingsPrivacyVisibility","handleShowGiftIconInChats","secondaryScreen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","SettingsPrivacyVisibilityExceptionList","isAllowList","withPremiumCategory","withMiniAppsCategory","usersOnly","setPrivacySettings","customPeerBots","isCustomPeer","avatarIcon","isAvatarSquare","peerColorId","miniAppsCategory","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","SettingsQuickReaction","setDefaultReaction","emoticon","withIcon","addedSetIds","SettingsStickers","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","SettingsTwoFaCongratulations","recoveryEmail","animatedEmoji","selectAnimatedEmoji","codeLength","waitingEmailCodeLength","SettingsTwoFaEmailCode","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","SettingsTwoFaEnabled","SettingsTwoFaSkippableForm","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","SettingsTwoFaStart","SettingsTwoFa","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaPassword","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_GIFTS_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","PRIVACY_MESSAGES_SCREENS","Settings","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","useMarkScrolled","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsGeneralBackgroundColor","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","ErrorTip","injectEditor","knowledge","knowledgeId","richText","question","setQuestion","questionError","setQuestionError","valueError","setValueError","handleQuestionChange","handleSave","plainText","n","Node","string","knowledgeIdValue","addKnowledge","knowledgeEmbeddingStore","updateText","answer","DSlate","toolbar","Input","AddKnowledgeModal","editorRef","AIKnowledgeEmptyContent","onAdd","AIKnowledgeEmpty","AIKnowledgeList","knowledgeList","onEdit","copy","handleEdit","AIKnowledgeContent","onShowAddModal","handleAdd","AIKnowledgeHeader","showAddButton","AIKnowledge","setKnowledgeList","showAddModal","setShowAddModal","setType","editKnowledge","setEditKnowledge","getAllKnowledge","handleCloseAddModal","handleShowAddModal","deleteKnowledge","deleteText","AutoTranslateLanguage","CHATAI_IDB_STORE","lan","autoTranslateLanguage","AITranslateContent","autoTranslate","setAutoTranslate","handleAutoTranslateChange","AITranslateHeader","AITranslate","userStatusesById","ContactList","openNewContactDialog","isSearching","NewChatStep1","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","NewChatStep2","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","NewChat","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","ArchivedChats","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","canScheduleUntilOnline","selectCanScheduleUntilOnline","shouldSchedule","selectShouldSchedule","StickerSetModal","prevStickerSet","renderingStickerSet","isAdded","requestCalendar","calendar","useSchedule","isScheduleRequested","isPreloadedGlobally","scheduledAt","handleCopyLink","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","CustomEmojiSetsModal","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","currentChatId","currentThreadId","canReportChat","canGift","selectCanGift","canCreateTopic","isUserRightBanned","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","HeaderMenuContainer","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","openFrozenAccountModal","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openGiftModal","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","setIsMenuOpen","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","areAllGiftsDisallowed","closeMenu","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftClick","forUserId","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","MenuSeparator","DeleteChatModal","isSavedDialog","MiddleSearchResult","senderPeer","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","MiddleSearch","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","shouldCancelSearchRef","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","tag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","StickerPicker","isForEffects","loadRecentStickers","addRecentSticker","unfaveSticker","faveSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","maxUniqueReactions","enabledReactions","reactionsLimit","ReactionPickerLimited","isTouchScreen","currentReactions","shouldUseCurrentReactions","allAvailableReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","isForbidden","ReactionPicker","toggleReaction","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","addLocalPaidReaction","openPaidReactionModal","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","shouldAddToRecent","handleToggleReaction","handleReactionContextMenu","handleStoryReactionSelect","customEmojiMessage","parseHtmlAsFormattedText","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","div","BLUR_CANVAS_SIZE","AttachmentModalItem","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","isFullyVisible","isHorizontal","viewportY1","viewportY2","y2","findInViewport","selectorOrElements","shouldContainBottom","allElements","visibleIndexes","isFound","setTooltipItemVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","isSelectionOutOfRange","onUp","onDown","onTab","MentionTooltip","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","AttachmentModal","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onSend","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","canSchedule","onSendWhenOnline","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","attachmentsLength","isBottomDividerShown","buttonSendCaption","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","uniqueId","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","onSendSchedule","PollModal","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","newOptions","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","EmojiButton","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","EmojiCategory","category","allEmojis","emojisPerRow","displayedEmoji","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","EmojiPicker","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","GifButton","gif","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","GifPicker","canSendGifs","onGifSelect","loadSavedGifs","saveGif","debounceMs","shouldUnsave","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","SymbolMenuFooter","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","SymbolMenu","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","mobileClassName","onMouseEnter","ChatCommand","withAvatar","freezeWhenClosed","ChatCommandTooltip","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","BotCommandMenu","botCommand","StickerTooltip","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","onToggleReaction","isInSavedMessages","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","areItemsHidden","hideItems","showItems","markIsReady","unmarkIsReady","handleOpenMessageEffectsPicker","ReactionSelector","onShowMore","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","TextFormatter","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","EDITABLE_INPUT_ID","textFormat","tagName","restoreSelection","selection","getSelection","removeAllRanges","addRange","updateSelectedRange","getRangeAt","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","ApiMessageEntityTypes","Spoiler","execCommand","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","CustomEmojiButton","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","BaseResult","thumbnailDataUrl","getWebDocumentHash","decoding","ArticleResult","inlineResult","webThumbnail","GifResult","_gif","MediaResult","isForGallery","thumbnailBlobUrl","getPhotoMediaHash","StickerResult","STICKER_SIZE_INLINE_BOT_RESULT","InlineBotTooltip","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","SendAsMenu","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","membersCount","StickerSetResult","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","StickerSearch","loadFeaturedStickers","selectCurrentGifSearch","canPostInChat","GifSearch","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","StatisticsRecentMessage","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","Statistics","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentStory","StatisticsMessagePublicForward","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","voters","offsets","pollResults","PollAnswerResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","renderViewMoreButton","poll","selectPollFromMessage","PollResults","resultsByOption","buildCollectionByKey","ICON_SIZE","createTopicPanel","CreateTopic","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","noLoopLimit","editTopicPanel","EditTopic","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","ManageBot","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","ManageChannel","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","joinRequests","ManageChatAdministrators","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","ManageChatPrivacyType","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","RemoveGroupUserModal","loadMoreMembers","usersId","availableMemberIds","canDeleteMembers","removedMembers","ManageChatRemovedUsers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","forDiscussionIds","linkedChat","ManageDiscussion","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","ManageGroup","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","hasFullInfo","ManageGroupAdminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","ManageGroupMembers","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","arePaidMessagesAvailable","groupPeersPaidStars","ManageGroupPermissions","updateChatDefaultBannedRights","updatePaidMessagesPrice","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isPriceForMessagesChanged","markPriceForMessagesChanged","unmarkPriceForMessagesChanged","isPriceForMessagesOpen","setIsPriceForMessagesOpen","handleUpdatePaidMessagesPrice","handleUpdatePermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","handleChargeStarsForMessages","arePermissionsChanged","arePermissionsLoading","ManageGroupUserPermissions","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","ManageGroupUserPermissionsCreate","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","ManageInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","importers","requesters","ManageInviteInfo","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","ManageInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","withPrimaryColor","JoinRequest","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","ManageJoinRequests","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","ManageReactions","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","notPersonalPhoto","ManageUser","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","Management","GroupRecentActions","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","Checkout","invoice","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","useMediaTransition","handleTipsClick","tips","handlePaymentMethodClick","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","prices","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","ConfirmPayment","noRedirect","onPaymentFormSubmit","messageKey","form","PasswordConfirm","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","CardInput","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","ExpiryInput","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","Select","hasArrow","SavedPaymentCredentials","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","nativeParams","nativeProvider","providerName","isProviderError","smartGlocalToken","stripeId","passwordValidUntil","validUntil","PaymentModal","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","setStep","nextStep","field","savedInfo","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","shouldFillRequestedData","isEmailRequested","isPhoneRequested","isNameRequested","isShippingAddressRequested","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","isPasswordMissing","isEmailSentToProvider","isPhoneSentToProvider","renderModalContent","descriptionKey","renderError","optionId","receipt","ReceiptModal","prevReceipt","renderingReceipt","fullAddress","credentialsTitle","totalAmount","InviteViaLinkModal","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","OneTimeMediaModal","closeOneTimeMediaModal","handlePlayVoice","isOwn","isOwnMessage","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","WebAppsCloseConfirmationModal","closeWebAppsCloseConfirmationModal","shouldSkipInFuture","setShouldSkipInFuture","shouldSkipConfirmation","handleSelectWithEnter","freezeUntilDate","freezeAppealUrl","botFreezeAppealId","botFreezeAppealUsername","FrozenAccountModal","closeFrozenAccountModal","handleAppeal","BannedDuck","botLink","modalProps","hasButton","headerAvatarPeer","avatarPeer","avatarWebPhoto","clickable","webPhoto","badge"],"sourceRoot":""}