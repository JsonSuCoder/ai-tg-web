{"version":3,"file":"6218.33390809cb184d7597c9.js","mappings":"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","sources":["webpack://telegram-t/./node_modules/@cryptography/aes/dist/es/aes.js","webpack://telegram-t/./node_modules/os-browserify/browser.js","webpack://telegram-t/./node_modules/idb-keyval/dist/index.js","webpack://telegram-t/./node_modules/async-mutex/index.mjs","webpack://telegram-t/./node_modules/big-integer/BigInteger.js"],"sourcesContent":["var S = new Uint8Array(256);\nvar Si = new Uint8Array(256);\nvar T1 = new Uint32Array(256);\nvar T2 = new Uint32Array(256);\nvar T3 = new Uint32Array(256);\nvar T4 = new Uint32Array(256);\nvar T5 = new Uint32Array(256);\nvar T6 = new Uint32Array(256);\nvar T7 = new Uint32Array(256);\nvar T8 = new Uint32Array(256);\nfunction computeTables() {\n    var d = new Uint8Array(256);\n    var t = new Uint8Array(256);\n    var x2;\n    var x4;\n    var x8;\n    var s;\n    var tEnc;\n    var tDec;\n    var x = 0;\n    var xInv = 0;\n    // Compute double and third tables\n    for (var i = 0; i < 256; i++) {\n        d[i] = i << 1 ^ (i >> 7) * 283;\n        t[d[i] ^ i] = i;\n    }\n    for (; !S[x]; x ^= x2 || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        S[x] = s;\n        Si[s] = x;\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n        T1[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T2[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T3[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T4[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T5[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T6[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T7[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T8[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        xInv = t[xInv] || 1;\n    }\n}\n\n/**\n * Gets a uint32 from string in big-endian order order\n */\nfunction s2i(str, pos) {\n    return (str.charCodeAt(pos) << 24\n        ^ str.charCodeAt(pos + 1) << 16\n        ^ str.charCodeAt(pos + 2) << 8\n        ^ str.charCodeAt(pos + 3));\n}\n\n/* eslint-disable import/prefer-default-export */\n/**\n * Helper function for transforming string key to Uint32Array\n */\nfunction getWords(key) {\n    if (key instanceof Uint32Array) {\n        return key;\n    }\n    if (typeof key === 'string') {\n        if (key.length % 4 !== 0)\n            for (var i = key.length % 4; i <= 4; i++)\n                key += '\\0x00';\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4)\n            buf[i / 4] = s2i(key, i);\n        return buf;\n    }\n    if (key instanceof Uint8Array) {\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4) {\n            buf[i / 4] = (key[i] << 24\n                ^ key[i + 1] << 16\n                ^ key[i + 2] << 8\n                ^ key[i + 3]);\n        }\n        return buf;\n    }\n    throw new Error('Unable to create 32-bit words');\n}\nfunction xor(left, right, to) {\n    if (to === void 0) { to = left; }\n    for (var i = 0; i < left.length; i++)\n        to[i] = left[i] ^ right[i];\n}\n\ncomputeTables();\n/**\n * Low-level AES Cipher\n */\nvar AES = /** @class */ (function () {\n    function AES(_key) {\n        var key = getWords(_key);\n        if (key.length !== 4 && key.length !== 6 && key.length !== 8) {\n            throw new Error('Invalid key size');\n        }\n        this.encKey = new Uint32Array(4 * key.length + 28);\n        this.decKey = new Uint32Array(4 * key.length + 28);\n        this.encKey.set(key);\n        var rcon = 1;\n        var i = key.length;\n        var tmp;\n        // schedule encryption keys\n        for (; i < 4 * key.length + 28; i++) {\n            tmp = this.encKey[i - 1];\n            // apply sbox\n            if (i % key.length === 0 || (key.length === 8 && i % key.length === 4)) {\n                tmp = S[tmp >>> 24] << 24 ^ S[(tmp >> 16) & 255] << 16 ^ S[(tmp >> 8) & 255] << 8 ^ S[tmp & 255];\n                // shift rows and add rcon\n                if (i % key.length === 0) {\n                    tmp = tmp << 8 ^ tmp >>> 24 ^ (rcon << 24);\n                    rcon = rcon << 1 ^ (rcon >> 7) * 283;\n                }\n            }\n            this.encKey[i] = this.encKey[i - key.length] ^ tmp;\n        }\n        // schedule decryption keys\n        for (var j = 0; i; j++, i--) {\n            tmp = this.encKey[j & 3 ? i : i - 4];\n            if (i <= 4 || j < 4) {\n                this.decKey[j] = tmp;\n            }\n            else {\n                this.decKey[j] = (T5[S[tmp >>> 24]]\n                    ^ T6[S[(tmp >> 16) & 255]]\n                    ^ T7[S[(tmp >> 8) & 255]]\n                    ^ T8[S[tmp & 255]]);\n            }\n        }\n    }\n    AES.prototype.encrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.encKey[0];\n        var b = message[1] ^ this.encKey[1];\n        var c = message[2] ^ this.encKey[2];\n        var d = message[3] ^ this.encKey[3];\n        var rounds = this.encKey.length / 4 - 2;\n        var k = 4;\n        var a2;\n        var b2;\n        var c2;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T1[a >>> 24] ^ T2[(b >> 16) & 255] ^ T3[(c >> 8) & 255] ^ T4[d & 255] ^ this.encKey[k];\n            b2 = T1[b >>> 24] ^ T2[(c >> 16) & 255] ^ T3[(d >> 8) & 255] ^ T4[a & 255] ^ this.encKey[k + 1];\n            c2 = T1[c >>> 24] ^ T2[(d >> 16) & 255] ^ T3[(a >> 8) & 255] ^ T4[b & 255] ^ this.encKey[k + 2];\n            d = T1[d >>> 24] ^ T2[(a >> 16) & 255] ^ T3[(b >> 8) & 255] ^ T4[c & 255] ^ this.encKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n            // console.log(a, b, c, d);\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[i] = (S[a >>> 24] << 24\n                ^ S[(b >> 16) & 255] << 16\n                ^ S[(c >> 8) & 255] << 8\n                ^ S[d & 255]\n                ^ this.encKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    AES.prototype.decrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.decKey[0];\n        var b = message[3] ^ this.decKey[1];\n        var c = message[2] ^ this.decKey[2];\n        var d = message[1] ^ this.decKey[3];\n        var rounds = this.decKey.length / 4 - 2;\n        var a2;\n        var b2;\n        var c2;\n        var k = 4;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T5[a >>> 24] ^ T6[(b >> 16) & 255] ^ T7[(c >> 8) & 255] ^ T8[d & 255] ^ this.decKey[k];\n            b2 = T5[b >>> 24] ^ T6[(c >> 16) & 255] ^ T7[(d >> 8) & 255] ^ T8[a & 255] ^ this.decKey[k + 1];\n            c2 = T5[c >>> 24] ^ T6[(d >> 16) & 255] ^ T7[(a >> 8) & 255] ^ T8[b & 255] ^ this.decKey[k + 2];\n            d = T5[d >>> 24] ^ T6[(a >> 16) & 255] ^ T7[(b >> 8) & 255] ^ T8[c & 255] ^ this.decKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[3 & -i] = (Si[a >>> 24] << 24\n                ^ Si[(b >> 16) & 255] << 16\n                ^ Si[(c >> 8) & 255] << 8\n                ^ Si[d & 255]\n                ^ this.decKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    return AES;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE = /** @class */ (function () {\n    function AES_IGE(key, iv, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.key = getWords(key);\n        this.iv = getWords(iv);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var prevX = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevY = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = text.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.encrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                cipherText[j] = y[k];\n        }\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        var cipherText = getWords(message);\n        var text = buf || new Uint32Array(cipherText.length);\n        var prevY = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevX = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = cipherText.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.decrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                text[j] = y[k];\n        }\n        return text;\n    };\n    return AES_IGE;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE$1 = /** @class */ (function () {\n    function AES_IGE(key, counter, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.offset = 0;\n        this.key = getWords(key);\n        this.counter = getWords(counter);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n        if (this.counter.length !== 4) {\n            throw new Error('AES-CTR mode counter must be 16 bytes length');\n        }\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var offset = this.offset;\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = this.cipher.encrypt(this.counter);\n            for (var j = i, k = offset; j < text.length && k < this.blockSize; j++, k++)\n                cipherText[j] = x[k] ^ text[j];\n            if (text.length - i >= this.blockSize)\n                this.incrementCounter();\n            if (offset) {\n                i -= offset;\n                offset = 0;\n            }\n        }\n        this.offset = (this.offset + (text.length % 4)) % 4;\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        return this.encrypt(message, buf);\n    };\n    AES_IGE.prototype.incrementCounter = function () {\n        // increment counter\n        for (var carry = this.counter.length - 1; carry >= 0; carry--) {\n            if (++this.counter[carry] < 0xFFFFFFFF)\n                break; // If overflowing, it'll be 0 and we'll have to continue propagating the carry\n        }\n    };\n    return AES_IGE;\n}());\n\nexport default AES;\nexport { AES_IGE$1 as CTR, AES_IGE as IGE };\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    let dbp;\n    const getDB = () => {\n        if (dbp)\n            return dbp;\n        const request = indexedDB.open(dbName);\n        request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n        dbp = promisifyRequest(request);\n        dbp.then((db) => {\n            // It seems like Safari sometimes likes to just close the connection.\n            // It's supposed to fire this event when that happens. Let's hope it does!\n            db.onclose = () => (dbp = undefined);\n        }, () => { });\n        return dbp;\n    };\n    return (txMode, callback) => getDB().then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n","const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_value, _cancelError = E_CANCELED) {\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._weightedWaiters = [];\n    }\n    acquire(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve, reject) => {\n            const task = { resolve, reject, weight, priority };\n            const i = findIndexFromEnd(this._queue, (other) => priority <= other.priority);\n            if (i === -1 && weight <= this._value) {\n                // Needs immediate dispatch, skip the queue\n                this._dispatchItem(task);\n            }\n            else {\n                this._queue.splice(i + 1, 0, task);\n            }\n        });\n    }\n    runExclusive(callback_1) {\n        return __awaiter$2(this, arguments, void 0, function* (callback, weight = 1, priority = 0) {\n            const [value, release] = yield this.acquire(weight, priority);\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        if (this._couldLockImmediately(weight, priority)) {\n            return Promise.resolve();\n        }\n        else {\n            return new Promise((resolve) => {\n                if (!this._weightedWaiters[weight - 1])\n                    this._weightedWaiters[weight - 1] = [];\n                insertSorted(this._weightedWaiters[weight - 1], { resolve, priority });\n            });\n        }\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    getValue() {\n        return this._value;\n    }\n    setValue(value) {\n        this._value = value;\n        this._dispatchQueue();\n    }\n    release(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        this._value += weight;\n        this._dispatchQueue();\n    }\n    cancel() {\n        this._queue.forEach((entry) => entry.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatchQueue() {\n        this._drainUnlockWaiters();\n        while (this._queue.length > 0 && this._queue[0].weight <= this._value) {\n            this._dispatchItem(this._queue.shift());\n            this._drainUnlockWaiters();\n        }\n    }\n    _dispatchItem(item) {\n        const previousValue = this._value;\n        this._value -= item.weight;\n        item.resolve([previousValue, this._newReleaser(item.weight)]);\n    }\n    _newReleaser(weight) {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this.release(weight);\n        };\n    }\n    _drainUnlockWaiters() {\n        if (this._queue.length === 0) {\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                waiters.forEach((waiter) => waiter.resolve());\n                this._weightedWaiters[weight - 1] = [];\n            }\n        }\n        else {\n            const queuedPriority = this._queue[0].priority;\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                const i = waiters.findIndex((waiter) => waiter.priority <= queuedPriority);\n                (i === -1 ? waiters : waiters.splice(0, i))\n                    .forEach((waiter => waiter.resolve()));\n            }\n        }\n    }\n    _couldLockImmediately(weight, priority) {\n        return (this._queue.length === 0 || this._queue[0].priority < priority) &&\n            weight <= this._value;\n    }\n}\nfunction insertSorted(a, v) {\n    const i = findIndexFromEnd(a, (other) => v.priority <= other.priority);\n    a.splice(i + 1, 0, v);\n}\nfunction findIndexFromEnd(a, predicate) {\n    for (let i = a.length - 1; i >= 0; i--) {\n        if (predicate(a[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, arguments, void 0, function* (priority = 0) {\n            const [, releaser] = yield this._semaphore.acquire(1, priority);\n            return releaser;\n        });\n    }\n    runExclusive(callback, priority = 0) {\n        return this._semaphore.runExclusive(() => callback(), 1, priority);\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock(priority = 0) {\n        return this._semaphore.waitForUnlock(1, priority);\n    }\n    release() {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let isTimeout = false;\n                const handle = setTimeout(() => {\n                    isTimeout = true;\n                    reject(timeoutError);\n                }, timeout);\n                try {\n                    const ticket = yield (isSemaphore(sync)\n                        ? sync.acquire(weight, priority)\n                        : sync.acquire(priority));\n                    if (isTimeout) {\n                        const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                        release();\n                    }\n                    else {\n                        clearTimeout(handle);\n                        resolve(ticket);\n                    }\n                }\n                catch (e) {\n                    if (!isTimeout) {\n                        clearTimeout(handle);\n                        reject(e);\n                    }\n                }\n            }));\n        },\n        runExclusive(callback, weight, priority) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire(weight, priority);\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        release(weight) {\n            sync.release(weight);\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => {\n                const handle = setTimeout(() => reject(timeoutError), timeout);\n                (isSemaphore(sync)\n                    ? sync.waitForUnlock(weight, priority)\n                    : sync.waitForUnlock(priority)).then(() => {\n                    clearTimeout(handle);\n                    resolve();\n                });\n            });\n        },\n        isLocked: () => sync.isLocked(),\n        getValue: () => sync.getValue(),\n        setValue: (value) => sync.setValue(value),\n    };\n}\nfunction isSemaphore(sync) {\n    return sync.getValue !== undefined;\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = function(v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value << v.value)\r\n    }\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = function (v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value >> v.value)\r\n    }\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n"],"names":["S","Uint8Array","Si","T1","Uint32Array","T2","T3","T4","T5","T6","T7","T8","s2i","str","pos","charCodeAt","getWords","key","length","i","buf","Error","xor","left","right","to","x2","x4","s","tEnc","tDec","d","t","x","xInv","computeTables","AES","_key","this","encKey","decKey","set","tmp","rcon","j","prototype","encrypt","_message","a2","b2","c2","message","out","a","b","c","rounds","k","decrypt","AES_IGE","iv","blockSize","cipher","text","cipherText","prevX","subarray","prevY","yXOR","y","counter","offset","incrementCounter","carry","exports","endianness","hostname","location","loadavg","uptime","freemem","Number","MAX_VALUE","totalmem","cpus","type","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","promisifyRequest","request","Promise","resolve","reject","oncomplete","onsuccess","result","onabort","onerror","error","createStore","dbName","storeName","dbp","txMode","callback","indexedDB","open","onupgradeneeded","createObjectStore","then","db","onclose","undefined","getDB","transaction","objectStore","defaultGetStoreFunc","defaultGetStore","get","customStore","store","value","put","setMany","entries","forEach","entry","getMany","keys","all","map","update","updater","err","del","delete","delMany","clear","eachCursor","openCursor","continue","getAllKeys","items","cursor","push","values","getAll","E_CANCELED","Semaphore","constructor","_value","_cancelError","_queue","_weightedWaiters","acquire","weight","priority","task","findIndexFromEnd","other","_dispatchItem","splice","runExclusive","callback_1","thisArg","_arguments","arguments","generator","P","fulfilled","step","next","e","rejected","done","apply","waitForUnlock","_couldLockImmediately","v","insertSorted","isLocked","getValue","setValue","_dispatchQueue","cancel","_drainUnlockWaiters","shift","item","previousValue","_newReleaser","called","waiters","waiter","queuedPriority","findIndex","predicate","Mutex","cancelError","_semaphore","releaser","BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","n","Math","floor","arrayToSmall","arr","trim","compareAbs","createArray","Array","truncate","ceil","add","sum","l_a","l_b","r","base","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","multiplySmall","shiftLeft","concat","multiplyKaratsuba","max","slice","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","negate","abs","comparison","quotientDigit","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","bigInt","modPow","Object","create","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","modInv","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","bits","bitLength","logN","log","toJSNumber","isProbablePrime","iterations","rng","randBetween","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","LOBMASK_I","roughLOB","integerLogarithm","p","min","gcd","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","valueOf","neg","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","indexOf","test","parseNumberValue","toArray","toJSON","parseInt","minusOne","lcm","isInstance","usedRNG","random","low","range","restricted","top","fromArray","module","hasOwnProperty"],"sourceRoot":""}