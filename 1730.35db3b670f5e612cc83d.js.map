{"version":3,"file":"1730.35db3b670f5e612cc83d.js","mappings":"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B,EAC5BC,YACAC,cAAesK,GAAetK,EAC9BgJ,kBACA1I,iBACAzC,kBACAD,uBACAlX,iBAAkBrkC,GAAM8qD,iBAAc5qD,EAAY2mD,GAAcxiB,iBAChEE,iBACAC,YACAxa,wBACA+gC,YAAal6C,QAAQg2C,GACrB3I,yBACAC,sBAAsB4K,IAAYM,IAC5BpB,GAAejoD,GAAMsJ,KAAO0hD,EAAAA,KAAkC/B,IACpE1M,eAAgBvyB,MAAyBihC,EAAAA,EAAAA,KAA+B5sD,GACxEurD,uBACAvL,mBACAnhC,wBAAwBguC,EAAAA,EAAAA,KAA6B7sD,EAAQ0H,EAAQN,QACrEm4C,gBACAC,gBAAiBsM,KAAmBE,GACpCvM,kBAAmBqM,KAAmBE,GACtCc,oBAAqBhB,GACrB1lB,uBAAuB2mB,EAAAA,EAAAA,KAA4B/sD,GACnD49C,sBAAsBoP,EAAAA,EAAAA,KAA2BhtD,GACjDqmC,qBACAwjB,YACAW,iBACA/jB,mBAAoB+hB,GAAcyE,wBAClCpP,QACAC,SACAgE,eACAC,WACD,GAxKehiD,EA1pBoCmtD,EACtDt+C,WACAc,qBACAo2B,eACAC,sBACAxnB,SACA2pC,kBACAxgD,UACA6jD,sBACAvL,kBACAmN,QACAtP,OACAC,QACA7O,SACA8O,aACAgL,YACA/K,aACA0O,cACAzO,gBACAE,WACAC,gBACAC,qBACAI,SACAkB,oBACAjB,WACAC,YACAkB,wBACAl+C,OACAk9C,YACAiB,sBACAvB,UACAvY,mBACAE,iBACAC,aACAxa,wBACAizB,cACAV,iBACAY,kBACAC,oBACAC,WACAC,eACAC,aACAC,eACAC,cACAC,aACAC,gBACAlZ,yBACA+W,mBACAD,wBACAoL,mBACA9J,aACAoB,iBACA/gC,0BACA0gC,gBACAuN,uBACAtN,mBACAC,qBACA7B,wBACAvX,qBACAmkB,kBACA/jB,sBACAqb,gBACAC,WACA7gD,aACAof,WACAu7B,2BAEA,MAAM,WACJuR,GAAU,qBACVC,GAAoB,aACpBC,GAAY,WACZC,GAAU,gBACVC,GAAe,cACfC,GAAa,YACbC,GAAW,cACXC,GAAa,uBACbC,GAAsB,sBACtBC,GAAqB,kBACrBC,GAAiB,cACjBC,GAAa,oBACbC,GAAmB,WACnBC,GAAU,gBACVC,GAAe,qBACfC,GAAoB,aACpBC,GAAY,aACZC,GAAY,kBACZC,GAAiB,QACjBC,GAAO,aACPrM,GAAY,eACZsM,GAAc,UACdC,GAAS,eACT3iC,GAAc,0BACd4iC,GAAyB,oBACzBC,GAAmB,sBACnBC,GAAqB,0BACrBC,GAAyB,iBACzB3iC,GAAgB,mBAChB4iC,GAAkB,gBAClBC,GAAe,uBACfC,GAAsB,qBACtBjjC,GAAoB,sBACpBzD,GAAqB,eACrB2mC,GAAc,mBACd1hD,KACED,EAAAA,EAAAA,MAEE/L,IAAOC,EAAAA,EAAAA,MACL6O,IAAK+R,KAAiB2E,EAAAA,EAAAA,GAAkB,CAC9CxI,SACAs9B,uBACA36C,WAAW,KAENguD,GAAYC,KAAiBj3C,EAAAA,EAAAA,KAAS,IACtCk3C,GAAgBC,KAAqBn3C,EAAAA,EAAAA,KAAS,IAC9Co3C,GAAuBC,GAAqBC,KAAwBl8C,EAAAA,EAAAA,MACpEm8C,GAAsBC,KAA2Bx3C,EAAAA,EAAAA,IAAS+vC,KAC1DxoC,GAAiBkwC,KAAY/wC,EAAAA,EAAAA,GAAYC,GAAwByB,GAAS5Y,EAAQvD,MAGnFouB,QAAyC1wB,IAAxB0pD,GAAqC/4C,QAAQ+4C,EAAoBvkD,SAExF4P,EAAAA,EAAAA,KAAU,KACJgpC,IAAiBrhC,GACnB0vC,GAAW,CAAE7mD,OAAQM,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,IAC1D,GACC,CAACgjD,GAAY1vC,EAAQ7W,EAAQN,OAAQM,EAAQuD,GAAI20C,MAEpDhpC,EAAAA,EAAAA,KAAU,KACJumC,IAAmB5+B,GACrBuwC,GAAmB,CAAE1nD,OAAQM,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,IAClE,GACC,CAACkyC,GAAiB5+B,EAAQ7W,EAAQN,OAAQM,EAAQuD,GAAIvD,EAAQ41C,YAEjE1mC,EAAAA,EAAAA,KAAU,KACJipC,GAAyBthC,GAC3B8vC,GAAa,CAAEjnD,OAAQM,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,IAC5D,GACC,CAAC40C,EAAuBthC,EAAQ8vC,GAAc3mD,EAAQN,OAAQM,EAAQuD,MAEzE2L,EAAAA,EAAAA,KAAU,KACJ20C,GAAqBvkD,QAAUg5C,GAAiBh5C,SAAWukD,EAAoBvkD,QACjFukD,EAAoB//C,SAASrF,IAC3B+7C,GAAa,CAAE4B,eAAgB39C,GAAM,GAEzC,GACC,CAAColD,EAAqBvL,EAAiBkC,MAE1CtrC,EAAAA,EAAAA,KAAU,KACH81C,GAAgBvmB,KAAa5nB,GAChC6vC,GAAa,CAAEhnD,OAAQM,EAAQN,QACjC,GACC,CAACslD,EAAanuC,EAAQ4nB,GAAWioB,GAAc1mD,EAAQN,SAE1D,MAAM24C,IAAoBtvC,EAAAA,EAAAA,KAAQ,KAEhC,MAAMm/C,GAAY3iD,EAAAA,EAAAA,MAAY4iD,MAAMC,KAC9BC,GAAY9iD,EAAAA,EAAAA,MAAY0qC,MAAMmY,KACpC,GAAIpoD,EAAQ2H,WAAWkd,iBAAiBvlB,OAAQ,CAC9C,MAAMgpD,EAAiB,IAAI76B,IAAIztB,EAAQ2H,WAAWkd,iBAAiB/mB,KACjE,EAAGvF,YAAa8vD,EAAU9vD,IAAW2vD,EAAU3vD,MAGjD,OAAO4yB,MAAMiK,KAAKkzB,GAAgB5gC,OAAO5c,SAASnI,MAAM,EAAG4lD,EAAAA,IAC7D,CAEA,GAAKvoD,EAAQ86C,YAIb,OAAOgB,OAAOC,KAAK/7C,EAAQ86C,aAAan4C,MAAM,EAAG4lD,EAAAA,KAC9CzqD,KAAKyF,GAAO8kD,EAAU9kD,IAAO2kD,EAAU3kD,KACvCmkB,OAAO5c,QAAQ,GACjB,CAAC9K,EAAQ2H,WAAWkd,gBAAiB7kB,EAAQ86C,cAE1C9C,IAAgBjvC,EAAAA,EAAAA,KAAQ,KAC5B,GAAI08C,EACF,OAAOA,EAAMniD,SAASrE,MAAMupD,IAC1B,MAAMC,GAAoBC,EAAAA,EAAAA,IAA4BF,GACtD,QAAKC,IACEE,EAAAA,EAAAA,IAAiB/H,GAAiB6H,EAAkB,IAI/D,MAAMA,GAAoBC,EAAAA,EAAAA,IAA4B1oD,GACtD,QAAKyoD,IACEE,EAAAA,EAAAA,IAAiB/H,GAAiB6H,EAAkB,GAC1D,CAAC7H,GAAiB6E,EAAOzlD,IAEtB4oD,GAAiBnS,GAAY7N,IAAWG,WAAaH,GAAUI,WAAW,QAAK7uC,GAErF+U,EAAAA,EAAAA,KAAU,KACR,GAAIk2C,GAEF,YADA4C,GAAwBzH,IAS1B,IAL8BqI,IACxBA,GAAeC,YAChB/9C,QAAQ9K,EAAQuB,QAAQC,MAAMA,QCpXhC,SAAuCizC,GAC5C,MAAMqU,EAAWrU,EAAME,wBACjB/6B,EAAKkvC,EAAS9hB,WAAaC,KAAK8hB,UAClCD,EAAS/e,WACT+e,EAEJ,OAAOh+C,QAAQ8O,EAAGvL,QAAQ,8CACnBvD,QAAQ8O,EAAGvL,QAAQ,sBAAwBvD,QAAQ8O,EAAGvL,QAAQ,aACvE,CD6WS26C,CAA8BJ,IAIjC,YADAZ,GAAwBzH,IAI1B,MAAM0I,EAAgBzU,EAA4BoU,IAE5CM,EAAclpD,EAAQuB,QAAQC,KAAMA,KAAM5E,QAAQ,UAAW,KAElDqsD,EAAcznD,KAAKmlC,OAAOrnC,OAAS,GAC/C4pD,EAAY36B,SAAS06B,EAAcznD,MAMxCwmD,GAAwBY,GAAeO,aAJrCnB,GAAwBzH,GAIyB,GAClD,CACDqI,GAAgBA,IAAgBC,UAAWD,IAAgBO,YAAaP,IAAgBQ,UACxFhE,GAAqBplD,EAAQuB,QAAQC,OAGvC,MAAM6nD,IAAY79C,EAAAA,EAAAA,IAAgB,KAChCi8C,IAAc,GACd7uC,IAAS,IAGL0wC,IAAe99C,EAAAA,EAAAA,IAAgB,KACnCi8C,IAAc,GACd4B,KACA,MAAM7f,EAAaic,GAAOniD,SACtBmiD,EAAMniD,SAASxF,KAAI,EAAGyF,QAASA,IAC/B,CAACvD,EAAQuD,IACb+jD,GAAuB,CACrB5nD,OAAQM,EAAQN,OAChB8pC,aACA+f,WAAgC,cAApB/I,GACZ,IAGEgJ,IAAgBh+C,EAAAA,EAAAA,IAAgB,KACpCm8C,IAAkB,GAClB/uC,IAAS,IAGL6wC,IAAcj+C,EAAAA,EAAAA,IAAgB,KAClC,MAAMk+C,EAAY3B,KAAyBxH,IAAqBqI,GAC5DpU,EAA4BoU,SAAkBzuD,EAC7C2oD,GAKH6C,GAAqB,CACnBgE,aAAc3pD,EAAQuD,GACtBmmD,YACAE,YAAa7B,GACb8B,mBAAe1vD,IARjB4rD,GAAc,CACZ+D,WAAY9pD,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,GAAImmD,YAAWE,YAAa7B,KAU/EsB,IAAW,IAGPU,IAAmBv+C,EAAAA,EAAAA,IAAgB5J,UAEvC,GADAynD,KACIrpD,EAAQuB,QAAQC,MAAMA,KAAM,CAC9BmkD,GAAqB,CACnBgE,aAAc3pD,EAAQuD,GAAIsmD,mBAAe1vD,EAAWuvD,eAAWvvD,EAAWyvD,iBAAazvD,IAEzF,MAIM6vD,SAJ4BC,EAAAA,GAAwBC,iBAAiB,CACzEC,MAAOnqD,EAAQuB,QAAQC,MAAMA,QAGW4oD,aAAa,GACnDJ,GAAiBA,EAAcK,MAAQ,GACzC5pD,EAAAA,EAAaiF,KAAK,oBAAqBskD,EAAcM,SAASC,SAE9D9pD,EAAAA,EAAaiF,KAAK,uBAAuB,IACzC8kD,EAAAA,EAAAA,IAAe,CACb70B,KAAM,CACJryB,SAAU,CACR,CACEG,KAAM,SACNlC,QAAS,gFACTgC,GAAI,KAEN,CACEE,KAAM,OACNlC,QAAU,aAAYvB,EAAQuB,QAAQC,MAAMA,OAC5C+B,GAAI,OAIVknD,WAAaxb,IACXxuC,EAAAA,EAAaiF,KAAK,oBAAqBupC,EAAS,EAElDyb,SAAUA,KAER1pD,QAAQC,IAAI,SAAS,IAI7B,KAGI0pD,IAAwBn/C,EAAAA,EAAAA,IAAgB,KAC5C,MAAM9L,EAASM,EAAQN,OACjBkrD,EAAkBprD,EAAAA,EAAgBU,OAAO,CAAER,WAC3CqG,GAAOC,EAAAA,EAAAA,MACRD,IAASE,EAAAA,EAAAA,IAAaF,GAOzB6kD,EAAgBzsD,MAAM6B,IANtBoG,EAAAA,EAAAA,IAAuB,CACrBC,KAAMA,KACJukD,EAAgBzsD,MAAM6B,EAAQ,IAMpCqpD,IAAW,IAGPwB,IAAmBr/C,EAAAA,EAAAA,IAAgB,KACvCk6C,GAAW,CACThmD,OAAQM,EAAQN,OAChBwH,SAAUlH,EAAQuD,KAEpB8lD,IAAW,IAGPyB,IAAat/C,EAAAA,EAAAA,IAAgB,KACjCo6C,GAAa,CAAErlC,UAAWvgB,EAAQuD,KAClC8lD,IAAW,IAGP0B,IAAYv/C,EAAAA,EAAAA,IAAgB,KAChCi8C,IAAc,GACdE,IAAkB,EAAK,IAGnBqD,IAAcx/C,EAAAA,EAAAA,IAAgB,KAClCq6C,GAAW,CAAEnmD,OAAQM,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,GAAI0nD,SAAS,IACrE5B,IAAW,IAGP6B,IAAgB1/C,EAAAA,EAAAA,IAAgB,KAEpC,GADA69C,KACI5D,GAAOniD,SAAU,CACnB,MAAMkmC,EAAaic,EAAMniD,SAASxF,KAAI,EAAGyF,QAASA,IAClDuiD,GAAgB,CAAEgE,WAAY9pD,EAAQN,OAAQ8pC,cAChD,MACEsc,GAAgB,CAAEgE,WAAY9pD,EAAQN,OAAQ8pC,WAAY,CAACxpC,EAAQuD,KACrE,IAGI4nD,IAAoB3/C,EAAAA,EAAAA,IAAgB,KACxC69C,KACArD,GAAY,CAAE3tB,QAASr4B,EAAQuB,QAAQ82B,SAAW,IAG9C+yB,IAAsB5/C,EAAAA,EAAAA,IAAgB,KAC1C69C,KACApD,GAAc,CAAE5tB,QAASr4B,EAAQuB,QAAQ82B,SAAW,IAGhDgzB,IAAmB7/C,EAAAA,EAAAA,IAAgB,KACvC69C,KACAvC,GAAe,CAAEpnD,OAAQM,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,IAAK,IAG7D+nD,IAAkB9/C,EAAAA,EAAAA,IAAgB,KACtC69C,KACAtC,GAAU,CAAErnD,OAAQM,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,IAAK,IAGxDgoD,IAAsB//C,EAAAA,EAAAA,IAAgB,KAC1C,MAAMrL,EAASslD,GAAOniD,SAClB,CACAid,UAAWvgB,EAAQuD,GACnBioD,gBAAiB/F,EAAMniD,SAASxF,KAAI,EAAGyF,QAASA,IAChDkoD,WAAW,GAEX,CAAElrC,UAAWvgB,EAAQuD,GAAIkoD,WAAW,GAExCvF,GAAuB/lD,GACvBkpD,IAAW,IAGPqC,IAA6BlgD,EAAAA,EAAAA,IAAgB,KACjD26C,GAAsB,CAAEzmD,OAAQM,EAAQN,OAAQ6D,GAAIvD,EAAQuD,KAC5D8lD,IAAW,IAGPsC,IAA0BngD,EAAAA,EAAAA,IAAiBkM,IAC/C0uC,GAAkB,CAChB1mD,OAAQM,EAAQN,OAChB6gB,UAAWvgB,EAAQuD,GACnBmU,gBAEFkB,IAAS,IAGLgzC,IAAqBpgD,EAAAA,EAAAA,IAAgB,KACzCi8C,IAAc,GACd1vC,GAAgB4zC,GAAwB,IAGpCE,IAAwBrgD,EAAAA,EAAAA,IAAgB,KAC5C69C,KACA7C,GAAgB,CAAE9mD,OAAQM,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,IAAK,IAG9DuoD,IAA6BtgD,EAAAA,EAAAA,IAAgB,KACjD69C,KACA5C,GAAqB,CAAE/mD,OAAQM,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,IAAK,IAGnEwoD,IAAqBvgD,EAAAA,EAAAA,IAAiBg+B,IAC1Cod,GAAkB,CAAEpd,eACpB6f,IAAW,IAGP2C,IAAiBxgD,EAAAA,EAAAA,IAAgB,KACrC67C,GAAgB,CACd3nD,OAAQM,EAAQN,OAChB6gB,UAAWvgB,EAAQuD,GACnB0oD,oBAAqB/kD,IAAa0tB,EAAAA,GAClCs3B,sBAAsB,IAExB7C,IAAW,IAGP8C,IAAmB3gD,EAAAA,EAAAA,IAAgB,MACvCmyC,EAAAA,EAAAA,IAAoB39C,EAAQuB,QAAQy7C,QAASoP,aAC7C/C,IAAW,IAGPgD,IAAsB7gD,EAAAA,EAAAA,IAAgB,MACzCi6C,GAAOniD,UAAY,CAACtD,IAAU8D,SAAS0kD,IACtC,MAAMC,GAAoBC,EAAAA,EAAAA,IAA4BF,GACjDC,IAEDzQ,GACFsO,GAAoB,CAAEgG,MAAO7D,IAE7BpC,GAAc,CAAEiG,MAAO7D,EAAmB8D,cAAe/D,IAC3D,IAEFa,IAAW,IAGPmD,IAAgBhhD,EAAAA,EAAAA,IAAgB,KACpC,MAAMihD,GAAQC,EAAAA,EAAAA,IAAgB1sD,GAC9B6mD,GAAQ,CAAE8F,IAAKF,IACfpD,IAAW,IAGPuD,IAAuBphD,EAAAA,EAAAA,IAAiBrD,IACxCw2B,KAAsB1a,GACxBO,GAAiB,CACfsB,eAAgB,eAGlB1B,GAAe,CACb1kB,OAAQM,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,GAAI4E,WAAU0kD,mBAAmB,IAGhFxD,IAAW,IAGPyD,IAAyBthD,EAAAA,EAAAA,IAAgB,KAC7C6Y,GAAqB,CACnB3kB,OAAQM,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,GAAIjG,MAAO,IAExD+rD,IAAW,IAGP0D,IAA8BvhD,EAAAA,EAAAA,IAAgB,KAClDoV,GAAsB,CACpBlhB,OAAQM,EAAQN,OAChB6gB,UAAWvgB,EAAQuD,KAGrB8lD,IAAW,IAGP2D,IAA2BxhD,EAAAA,EAAAA,IAAiBu2B,IAChDolB,GAA0B,CAAEznD,OAAQM,EAAQN,OAAQ6gB,UAAWvgB,EAAQuD,GAAIw+B,YAAW,IAGlFkrB,IAAkBzhD,EAAAA,EAAAA,IAAgB,KACtCw7C,GAA0B,CACxBtnD,OAAQM,EAAQN,OAChB6D,GAAIvD,EAAQuD,KAEd8lD,IAAW,IAGP6D,IAAqB1hD,EAAAA,EAAAA,IAAgB,KACzCy7C,GAAoB,CAClBvnD,OAAQM,EAAQN,OAChB6D,GAAIvD,EAAQuD,KAEd8lD,IAAW,IAGP8D,IAAuB3hD,EAAAA,EAAAA,IAAgB,KAC3C07C,GAAsB,CACpBxnD,OAAQM,EAAQN,OAChB6gB,UAAWvgB,EAAQuD,KAErB8lD,IAAW,IAGP+D,IAAmBrkD,EAAAA,EAAAA,KAAQ,KAAO08C,EAAQA,EAAMniD,SAAW,CAACtD,IAAUlC,KAAI,EAAGyF,QAASA,KAAK,CAACkiD,EAAOzlD,IAEnGqtD,IAAe7hD,EAAAA,EAAAA,IAAgB,KAC9BvR,IACLwtD,IAAc,GACd7uC,KACA2uC,GAAe,CACb7nD,OAAQzF,EAAKsJ,GAAIimC,WAAY4jB,KAC7B,IAGEE,IAAkB9hD,EAAAA,EAAAA,IAAgB5J,UACtC,MAAM,MACJg7C,EAAK,SAAEphB,EAAQ,QAAE+xB,EAAO,MAAEC,EAAK,MAAEC,EAAK,KAAEjsD,EAAI,MAAEirD,GAC5CzsD,EAAQuB,QACNmsD,GAAQC,EAAAA,EAAAA,IAAWnsD,GAAMA,YACzBqE,GAAmB,CAAEnG,OAAQM,EAAQN,SACvCk9C,GACFgR,EAAAA,EAAAA,IAAa5tD,GACJutD,GAAWG,GACpBG,EAAAA,EAAAA,IAAe7tD,GACNw7B,GACTsyB,EAAAA,EAAAA,IAAgB9tD,GACPwtD,GACTO,EAAAA,EAAAA,IAAoB/tD,GACXytD,GACTO,EAAAA,EAAAA,IAAahuD,GACJysD,IACTwB,EAAAA,EAAAA,IAAajuD,GAEfqpD,IAAW,IAGb,GAAIhI,EAGF,YAFAgI,KAKF,MAAMjxC,GAAmB,IAAIxc,KAG7B,OAFAwc,GAAiBC,YAAYD,GAAiB3C,cAAgB,GAG5Dlb,EAAAA,GAAAC,cAAA,OAAKmO,IAAK+R,GAAclhB,WAAWyB,EAAAA,EAAAA,GAAe,uBAAwBzB,KACxEe,EAAAA,GAAAC,cAACy7C,GAAkB,CACjBC,qBAAsBA,GACtBluC,mBAAoBA,EACpBo2B,aAAcA,EACdC,oBAAqBA,EACrBU,mBAAoBA,GACpB/+B,QAASA,EACTy+B,UAAWA,GACXxa,qBAAsBA,GACtBuyB,cAAeA,GACf3/B,OAAQ2wC,GACRlpB,iBAAkBA,EAClBE,eAAgBA,EAChB+I,OAAQA,EACR8O,WAAYA,EACZ8B,sBAAuBA,EACvBC,oBAAqBA,EACrB9B,WAAYA,EACZC,cAAeA,EACfE,SAAUA,EACVC,cAAeA,EACfC,mBAAoBA,EACpBC,SAAUmR,KAAyBxH,GACnCtJ,UAAWA,EACXF,OAAQA,EACRI,UAAWA,EACXc,kBAAmBA,EACnBjB,SAAUA,EACVH,QAASA,EACTK,WAAYA,GACZE,eAAgBA,GAChBC,iBAAkBA,GAClBC,QAASA,GACTC,YAAaA,GACbC,UAAWA,GACXC,YAAaA,GACbC,WAAYA,GACZC,UAAWA,GACXC,aAAcA,GACdM,cAAeA,GACfL,aAAcA,GACdC,gBAAiBA,GACjBC,kBAAmBA,GACnBrZ,sBAAuBA,GACvB8W,qBAAsBA,GACtBC,gBAAiBA,GACjB5qB,eAAgBA,GAChBytB,gBAAiBA,EACjBN,cAAeA,GACfK,kBAAmBA,GACnB1Z,kBAAmBA,GACnBmY,UAAWA,GACXX,KAAMA,EACNC,MAAOA,EACPsC,aAAcmS,GACdtS,QAASkR,GACTjR,aAAcuR,GACdtR,eAAgBkS,GAChBhS,OAAQmS,GACRlS,MAAOmS,GACPlS,QAASmS,GACTlS,UAAWoS,GACXnS,SAAUuQ,GACVrQ,SAAUoU,GACVrU,cAAemS,GACfjS,gBAAiBkS,GACjBjS,SAAUoS,GACVnS,OAAQsS,GACRrS,aAAcuS,GACdhzC,QAASywC,GACT/P,WAAY0S,GACZlS,eAAgBiS,GAChBxS,aAAc4S,GACd3S,WAAY6S,GACZ5S,UAAW+S,GACX9S,aAAc2R,GACd1R,YAAakO,GACbjO,aAAciS,GACd3uB,iBAAkB0vB,GAClBzvB,mBAAoB2vB,GACpB1vB,wBAAyB2vB,GACzBlT,eAAgBiS,GAChB/R,qBAAsBiT,GACtBhT,YAAaiT,GACbhT,eAAgBiT,GAChBhT,iBAAkBiT,GAClBhT,YAAamT,GACblT,aAAcA,GACdC,QAASA,KAEX9/C,EAAAA,GAAAC,cAACy6C,EAAe,CACdp+B,OAAQ6wC,GACRnnC,UAAWvgB,EAAQuD,GACnB7D,OAAQM,EAAQN,OAChBkZ,QAAS4wC,KAEXjvD,EAAAA,GAAAC,cAAC0zD,EAAAA,EAAa,CACZr3C,OAAQ+wC,GACRhvC,QAASkvC,GACTtmD,KAAM3H,GAAK,0BACXs0D,aAAct0D,GAAK,uBACnBu0D,eAAgB9C,KAEjB/U,GAAiB0R,GACd,I","sources":["webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/chatAssistant/utils/schedule-meeting.ts","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/chatAssistant/utils/util.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/chatAssistant/utils/icons.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/components/chatAssistant/room-ai/room-ai-utils.ts","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/hooks/useCustomBackground.ts","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/chatAssistant/utils/google-auth.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/components/common/BadgeButton.module.scss?da7b","webpack://telegram-t/./src/components/common/BadgeButton.tsx","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/chatAssistant/utils/google-api.ts","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","/* eslint-disable no-null/no-null */\n/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport { DateTime, Interval } from 'luxon';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ICreateMeetResponse } from './google-api';\n\nimport eventEmitter, { Actions } from '../lib/EventEmitter';\nimport { selectCurrentChat } from '../../../global/selectors';\nimport { extractCalendlyLinks } from './util';\nimport { createMeetingTimeConfirmMessage } from '../room-ai/room-ai-utils';\nimport { ChataiStores } from '../store';\nimport { parseMessage2StoreMessage } from '../store/messages-store';\nimport { calendlyRanges } from './chat-api';\nimport {\n  createAuthConfirmModal,\n  createGoogleMeet,\n  getGoogleCalendarFreeBusy,\n} from './google-api';\nimport { getAuthState, isTokenValid } from './google-auth';\n\nexport function formatMeetingTimeRange(\n  startISO: string,\n  endISO: string,\n  timeZoneVisable?: boolean,\n) {\n  const startDate = new Date(startISO);\n  const endDate = new Date(endISO);\n\n  const dayFormatter = new Intl.DateTimeFormat('en-US', {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n  });\n\n  const timeFormatter = new Intl.DateTimeFormat('en-US', {\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true,\n  });\n\n  const formatTime = (date: Date) => {\n    return timeFormatter.format(date).toLowerCase().replace(' ', '');\n  };\n\n  const dateStr = dayFormatter.format(startDate);\n  const startTimeStr = formatTime(startDate);\n  const endTimeStr = formatTime(endDate);\n\n  // 方式一：取时区名称\n  const timeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  // 方式二：取 GMT 偏移\n  // const offsetMinutes = startDate.getTimezoneOffset();\n  // const sign = offsetMinutes <= 0 ? '+' : '-';\n  // const absMinutes = Math.abs(offsetMinutes);\n  // const hours = String(Math.floor(absMinutes / 60)).padStart(2, '0');\n  // const minutes = String(absMinutes % 60).padStart(2, '0');\n  // const gmtOffset = `GMT${sign}${hours}:${minutes}`;\n\n  // 任选一种\n  const tzString = timeZoneName;\n  // const tzString = gmtOffset;\n  if (timeZoneVisable) {\n    return `${dateStr}, ${startTimeStr}-${endTimeStr} ${tzString}`;\n  } else {\n    return `${dateStr}, ${startTimeStr}-${endTimeStr}`;\n  }\n}\n\nasync function getSuitableTime(calendlyUrl: string) {\n  const timeRanges = await calendlyRanges({ calendlyUrl });\n  const myBusyTimes = await getGoogleCalendarFreeBusy();\n  const availableSolts = getAvailableSlots(timeRanges, myBusyTimes);\n  return availableSolts;\n}\n\nfunction getAvailableSlots(\n  aFreeSlots: { start: string; end: string }[],\n  bBusySlots: { start: string; end: string }[],\n) {\n  const result = [];\n\n  for (const aSlot of aFreeSlots) {\n    const aStart = new Date(aSlot.start);\n    const aEnd = new Date(aSlot.end);\n\n    let hasConflict = false;\n\n    for (const bSlot of bBusySlots) {\n      const bStart = new Date(bSlot.start);\n      const bEnd = new Date(bSlot.end);\n\n      // 判断是否重叠\n      if (aStart < bEnd && aEnd > bStart) {\n        hasConflict = true;\n        break;\n      }\n    }\n\n    if (!hasConflict) {\n      result.push({\n        start: aStart.toISOString(),\n        end: aEnd.toISOString(),\n      });\n    }\n  }\n\n  return result;\n}\n\nfunction suggestFreeTimes(\n  busySlots: { start: string; end: string }[],\n  durationMinutes = 30,\n  count = 3,\n) {\n  const now = DateTime.utc();\n  const endRange = now.plus({ days: 3 });\n\n  // 转成 Interval[]\n  const busyIntervals = busySlots.map((slot) => Interval.fromDateTimes(\n    DateTime.fromISO(slot.start),\n    DateTime.fromISO(slot.end),\n  ));\n\n  const freeSlots: { start: string; end: string }[] = [];\n\n  let cursor = now;\n  let done = false;\n  while (cursor < endRange && !done) {\n    const dayStart = cursor.set({\n      hour: 9,\n      minute: 0,\n      second: 0,\n      millisecond: 0,\n    });\n    const dayEnd = cursor.set({\n      hour: 18,\n      minute: 0,\n      second: 0,\n      millisecond: 0,\n    });\n\n    let slotStart = dayStart;\n    while (slotStart.plus({ minutes: durationMinutes }) <= dayEnd) {\n      const slotEnd = slotStart.plus({ minutes: durationMinutes });\n\n      const slotInterval = Interval.fromDateTimes(slotStart, slotEnd);\n\n      const overlap = busyIntervals.some((b) => b.overlaps(slotInterval));\n      const slotPassed = slotEnd < now;\n\n      if (!overlap && !slotPassed) {\n        freeSlots.push({\n          start: slotStart.toISO(),\n          end: slotEnd.toISO(),\n        });\n        if (freeSlots.length >= count) {\n          done = true;\n          break;\n        }\n      }\n\n      slotStart = slotStart.plus({ minutes: durationMinutes });\n    }\n    cursor = cursor.plus({ days: 1 }).startOf('day');\n  }\n  return freeSlots;\n}\n\nasync function isTimeSlotAvailable(proposedSlot: {\n  start: string;\n  end: string;\n}) {\n  const myBusyTimes = await getGoogleCalendarFreeBusy();\n  const proposedStart = new Date(proposedSlot.start).getTime();\n  const proposedEnd = new Date(proposedSlot.end).getTime();\n\n  for (const busy of myBusyTimes) {\n    const busyStart = new Date(busy.start).getTime();\n    const busyEnd = new Date(busy.end).getTime();\n\n    if (proposedStart < busyEnd && busyStart < proposedEnd) {\n      // 有重叠\n      const suggestions = suggestFreeTimes(myBusyTimes);\n      return {\n        isAvailable: false,\n        suggestions,\n      };\n    }\n  }\n  // 没有重叠\n  return { isAvailable: true };\n}\n\nfunction getMeetParamsByAITools(message: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetch('https://telegpt-three.vercel.app/tool-check', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        messages: [\n          {\n            id: uuidv4(),\n            content: message,\n            role: 'user',\n          },\n        ],\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      }),\n    })\n      .then((res) => res.json())\n      .then((toolResults) => {\n        let email: string[] = [];\n        let date: string | null = null;\n        if (toolResults && toolResults.length > 0) {\n          toolResults.forEach((toolCall: any) => {\n            if (toolCall.toolName === 'parseTime') {\n              date = toolCall.result;\n            } else if (toolCall.toolName === 'extractEmail') {\n              email = toolCall.result || [];\n            }\n          });\n          resolve({\n            date,\n            email,\n          });\n        } else {\n          resolve({});\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n\ninterface ScheduleMeetingParams {\n  chatId: string;\n  email?: string[];\n  date?: { start: string; end: string }[];\n  hasConfirmed?: boolean;\n}\nclass ScheduleMeeting {\n  private static instances: Map<string, ScheduleMeeting> = new Map();\n\n  private chatId: string;\n\n  private hasConfirmed: boolean;\n\n  private email: string[];\n\n  private date: { start: string; end: string }[];\n\n  public timeout: NodeJS.Timeout | undefined = undefined;\n\n  private handlerRef: ({ message }: { message: ApiMessage }) => void;\n\n  constructor({\n    chatId,\n    email = [],\n    date = [],\n    hasConfirmed = false,\n  }: ScheduleMeetingParams) {\n    this.chatId = chatId;\n    this.email = email;\n    this.date = date;\n    this.hasConfirmed = hasConfirmed;\n    this.handlerRef = ({ message }) => this.handler({ message });\n  }\n\n  /**\n   * 创建或获取 ScheduleMeeting 实例\n   */\n  public static create(params: ScheduleMeetingParams): ScheduleMeeting {\n    const existing = ScheduleMeeting.instances.get(params.chatId);\n    if (existing) {\n      return existing;\n    } else {\n      const instance = new ScheduleMeeting(params);\n      ScheduleMeeting.instances.set(params.chatId, instance);\n      return instance;\n    }\n  }\n\n  /**\n   * 根据 chatId 获取 ScheduleMeeting 实例\n   */\n  public static get(chatId: string): ScheduleMeeting | undefined {\n    return ScheduleMeeting.instances.get(chatId);\n  }\n\n  public start(originalMessage?: ApiMessage) {\n    // 注册监听器\n    eventEmitter.on(Actions.NewTextMessage, this.handlerRef);\n\n    // 超时自动清理\n    this.timeout = setTimeout(() => {\n      this.cleanup();\n      console.log('已超过五分钟未完成输入，工作流已结束。');\n    }, 1000 * 60 * 5);\n\n    this.handler({ message: originalMessage });\n  }\n\n  private cleanup() {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    eventEmitter.off(Actions.NewTextMessage, this.handlerRef);\n    clearTimeout(this.timeout);\n    ScheduleMeeting.instances.delete(this.chatId);\n  }\n\n  private async handler({ message }: { message?: ApiMessage }) {\n    if (message && (message.isOutgoing || message.chatId !== this.chatId)) {\n      return;\n    }\n    if (this.email.length && this.date.length && this.hasConfirmed) {\n      this.handleGoogleAuthCheck();\n      return;\n    }\n    try {\n      if (message && message.content.text) {\n        const { text } = message.content.text;\n        if (!this.date.length) {\n          const calendlyUrl = extractCalendlyLinks(text)?.[0];\n          if (calendlyUrl) {\n            const suitableDates = await getSuitableTime(calendlyUrl);\n            if (suitableDates.length === 0) {\n              console.log(\n                'No available time slots found for the provided Calendly link.',\n              );\n            }\n            this.date = suitableDates.slice(0, 3);\n          }\n        }\n        const toolCheckRes = await getMeetParamsByAITools(text);\n        if (toolCheckRes.email) this.email = toolCheckRes.email;\n        if (!this.date.length && toolCheckRes.date) {\n          const dateRange = {\n            start: toolCheckRes.date,\n            end: new Date(\n              new Date(toolCheckRes.date).getTime() + 30 * 60 * 1000,\n            ).toISOString(),\n          };\n          const { isAvailable, suggestions } = await isTimeSlotAvailable(\n            dateRange,\n          );\n          if (isAvailable) {\n            this.date = [dateRange];\n            this.hasConfirmed = true; // 如果有时间回执，设置为已确认\n          } else {\n            this.sendMessage(\n              'The time you provided is not available. Could you please suggest another time?',\n            );\n            // 根据自己日历的时间，给出时间建议\n            await new Promise<void>((res) => {\n              void setTimeout(res, 1000);\n            });\n            this.sendMessage(\n              `Here are some available time slots you can choose from: \\n ${suggestions!\n                .map(\n                  (slot, index) => `${index + 1}.${formatMeetingTimeRange(\n                    slot.start,\n                    slot.end,\n                    true,\n                  )}`,\n                )\n                .join('\\n')}`,\n            );\n            return;\n          }\n        }\n      }\n      // 打开小助手，用户时间回执\n      if (this.date.length > 0 && !this.hasConfirmed) {\n        const meetingTimeConfirmMessage = createMeetingTimeConfirmMessage({\n          chatId: this.chatId,\n          date: this.date,\n          email: this.email,\n        });\n        ChataiStores?.message?.storeMessage(\n          parseMessage2StoreMessage(this.chatId, [meetingTimeConfirmMessage])[0],\n        );\n        this.cleanup();\n        // TODO: add meeting time confirm message and open ai room\n        const global = getGlobal();\n        const currentChat = selectCurrentChat(global);\n        if (currentChat && currentChat.id === this.chatId) {\n          eventEmitter.emit(\n            Actions.AddRoomAIMessage,\n            meetingTimeConfirmMessage,\n          );\n          getActions().openChatAIWithInfo({ chatId: this.chatId });\n        }\n        return;\n      }\n      if (!this.email.length && !this.date.length) {\n        this.sendMessage(\n          \"I'd like to schedule a meeting with you. Could you tell me what time would be good for you to have the meeting? Also, could I get your email address?\",\n        );\n        return;\n      } else if (!this.email.length) {\n        this.sendMessage('Could you please share your email address?');\n        return;\n      } else if (!this.date.length) {\n        this.sendMessage(\n          'Could you tell me what time would be good for you to have the meeting?',\n        );\n        return;\n      }\n      if (this.email.length && this.date.length) {\n        this.handleGoogleAuthCheck();\n      }\n    } catch (e) {\n      console.log(e);\n      this.cleanup();\n    }\n  }\n\n  private handleGoogleAuthCheck() {\n    this.cleanup();\n    const auth = getAuthState();\n    if (!auth || !isTokenValid(auth)) {\n      createAuthConfirmModal({\n        onOk: (accessToken: string) => {\n          this.handleCreateGoogleMeet(accessToken!);\n        },\n      });\n    } else {\n      this.handleCreateGoogleMeet(auth.accessToken!);\n    }\n  }\n\n  public handleCreateGoogleMeet(accessToken: string) {\n    this.sendMessage(\"I'll send you the meeting invitation later.\");\n    const date = this.date[0];\n    createGoogleMeet({\n      startDate: new Date(date.start),\n      endDate: new Date(date.end),\n      selectedTimezone: Intl.DateTimeFormat().resolvedOptions().timeZone, // Add timezone\n      emails: this.email!,\n      googleToken: accessToken as string,\n    }).then((createMeetResponse: ICreateMeetResponse) => {\n      console.log('createMeetResponse', createMeetResponse);\n      if (createMeetResponse) {\n        const eventMessage = `Event details \\n📝 Title\\n${\n          createMeetResponse.summary\n        }\\n👥 Guests\\n${createMeetResponse.attendees\n          .map((attendee) => attendee.email)\n          .join('\\\\n')}\\n📅 Time\\n${formatMeetingTimeRange(\n          createMeetResponse.start.dateTime,\n          createMeetResponse.end.dateTime,\n        )}\\n${createMeetResponse.start.timeZone}\\n🔗 Meeting link\\n${\n          createMeetResponse.hangoutLink\n        }\n            `;\n        this.sendMessage(eventMessage);\n      }\n    });\n  }\n\n  private sendMessage(message: string) {\n    getActions().sendMessage({\n      messageList: {\n        chatId: this.chatId,\n        threadId: '-1',\n        type: 'thread',\n      },\n      text: message,\n    });\n  }\n}\n\nexport default ScheduleMeeting;\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","/* eslint-disable max-len */\nimport type { CoreAssistantMessage, CoreToolMessage, Message } from 'ai';\nimport { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\nexport function formatTimestamp(timestamp: number): string {\n  const date = new Date(timestamp);\n  const now = new Date();\n\n  const isSameDay = date.toDateString() === now.toDateString();\n  const isSameYear = date.getFullYear() === now.getFullYear();\n\n  const hours = String(date.getHours()).padStart(2, '0');\n  const minutes = String(date.getMinutes()).padStart(2, '0');\n  const timePart = `${hours}:${minutes}`;\n\n  const monthNames = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December',\n  ];\n  const month = monthNames[date.getMonth()];\n  const day = date.getDate();\n\n  if (isSameDay) {\n    return timePart;\n  } else if (isSameYear) {\n    return `${month} ${day} / ${timePart}`;\n  } else {\n    return `${date.getFullYear()}/${month} ${day} / ${timePart}`;\n  }\n}\n\n/**\n * 时间戳专用时间范围格式化工具\n * @param {number} start 开始时间戳（支持毫秒/秒级）\n * @param {number} end 结束时间戳（支持毫秒/秒级）\n * @returns {string} 格式化后的时间范围字符串\n */\nexport function formatTimestampRange(start:number | undefined, end:number | undefined) {\n  // 时间戳标准化处理（自动识别秒/毫秒）\n  const normalizeTimestamp = (ts:number) => {\n    if (ts.toString().length <= 10) return ts * 1000; // 秒级转毫秒\n    return ts; // 毫秒级直接使用\n  };\n\n  const startDate = start ? new Date(normalizeTimestamp(start)) : undefined;\n  const endDate = end ? new Date(normalizeTimestamp(end)) : undefined;\n  const now = new Date();\n\n  // 日期比较函数\n  const isSameDay = (d1:Date, d2:Date) => d1.getFullYear() === d2.getFullYear()\n    && d1.getMonth() === d2.getMonth()\n    && d1.getDate() === d2.getDate();\n\n  const isToday = (date:Date) => isSameDay(date, now);\n\n  // 时间格式化组件\n  const formatTime = (date:Date) => {\n    const pad = (n:number) => String(n).padStart(2, '0');\n    return `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n  };\n\n  const formatDate = (date:Date) => {\n    const monthNames = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December',\n    ];\n    const month = monthNames[date.getMonth()];\n    const pad = (n:number) => String(n).padStart(2, '0');\n    return `${month} ${pad(date.getDate())} / ${formatTime(date)}`;\n  };\n\n  if (!startDate && !endDate) {\n    return '';\n  }\n  if (!startDate && endDate) {\n    return `${formatDate(endDate)}`;\n  }\n  if (startDate && !endDate) {\n    return `${formatDate(startDate)}`;\n  }\n  if (startDate && endDate) {\n    // 范围判断逻辑\n    if (isToday(startDate) && isToday(startDate)) {\n      return `${formatTime(startDate)} - ${formatTime(endDate)}`;\n    } else {\n      return `${formatDate(startDate)} - ${formatDate(endDate)}`;\n    }\n  }\n  return '';\n}\nexport function validateAndFixJsonStructure(jsonString:string) {\n  // 计数大括号和方括号的数量\n  let braceCount = 0;\n  let bracketCount = 0;\n\n  // 记录所有多余或缺失的闭合符号\n  let fixedJsonString = jsonString;\n\n  // 遍历 JSON 字符串，检查并计算每个括号\n  for (let i = 0; i < jsonString.length; i++) {\n    const char = jsonString[i];\n    if (char === '{') {\n      braceCount++;\n    } else if (char === '}') {\n      braceCount--;\n    } else if (char === '[') {\n      bracketCount++;\n    } else if (char === ']') {\n      bracketCount--;\n    }\n  }\n\n  // 如果大括号数量不匹配，补充缺失的大括号\n  while (braceCount > 0) {\n    fixedJsonString += '}'; // 补充闭合大括号\n    braceCount--;\n  }\n\n  while (braceCount < 0) {\n    fixedJsonString = `{${fixedJsonString}`; // 补充开始大括号\n    braceCount++;\n  }\n\n  // 如果方括号数量不匹配，补充缺失的方括号\n  while (bracketCount > 0) {\n    fixedJsonString += ']'; // 补充闭合方括号\n    bracketCount--;\n  }\n\n  while (bracketCount < 0) {\n    fixedJsonString = `[${fixedJsonString}`; // 补充开始方括号\n    bracketCount++;\n  }\n\n  // 最后尝试解析 JSON，检查是否格式正确\n  try {\n    const parsed = JSON.parse(fixedJsonString);\n    return { valid: true, parsed, fixedJson: fixedJsonString };\n  } catch (error) {\n    return { valid: false, error };\n  }\n}\n\ntype ResponseMessageWithoutId = CoreToolMessage | CoreAssistantMessage;\ntype ResponseMessage = ResponseMessageWithoutId & { id: string };\n\nexport function sanitizeResponseMessages({\n  messages,\n  reasoning,\n}: {\n  messages: Array<ResponseMessage>;\n  reasoning: string | undefined;\n}) {\n  const toolResultIds: Array<string> = [];\n\n  for (const message of messages) {\n    if (message.role === 'tool') {\n      for (const content of message.content) {\n        if (content.type === 'tool-result') {\n          toolResultIds.push(content.toolCallId);\n        }\n      }\n    }\n  }\n\n  const messagesBySanitizedContent = messages.map((message) => {\n    if (message.role !== 'assistant') return message;\n\n    if (typeof message.content === 'string') return message;\n\n    const sanitizedContent = message.content.filter((content) => (content.type === 'tool-call'\n      ? toolResultIds.includes(content.toolCallId)\n      : content.type === 'text'\n        ? content.text.length > 0\n        : true));\n\n    if (reasoning) {\n      // @ts-expect-error: reasoning message parts in sdk is wip\n      sanitizedContent.push({ type: 'reasoning', reasoning });\n    }\n\n    return {\n      ...message,\n      content: sanitizedContent,\n    };\n  });\n\n  return messagesBySanitizedContent.filter(\n    (message) => message.content.length > 0,\n  );\n}\n\nexport function sanitizeUIMessages(messages: Array<Message>): Array<Message> {\n  const messagesBySanitizedToolInvocations = messages.map((message) => {\n    if (message.role !== 'assistant') return message;\n\n    if (!message.toolInvocations) return message;\n\n    const toolResultIds: Array<string> = [];\n\n    for (const toolInvocation of message.toolInvocations) {\n      if (toolInvocation.state === 'result') {\n        toolResultIds.push(toolInvocation.toolCallId);\n      }\n    }\n\n    const sanitizedToolInvocations = message.toolInvocations.filter(\n      (toolInvocation) => toolInvocation.state === 'result'\n        || toolResultIds.includes(toolInvocation.toolCallId),\n    );\n\n    return {\n      ...message,\n      toolInvocations: sanitizedToolInvocations,\n    };\n  });\n\n  return messagesBySanitizedToolInvocations.filter(\n    (message) => message.content.length > 0\n      || (message.toolInvocations && message.toolInvocations.length > 0),\n  );\n}\n\nexport function extractCalendlyLinks(text: string): string[] {\n  const regex = /https:\\/\\/calendly\\.com\\/[^\\s?]+\\/[^\\s?]+(?:\\?[^\\s]*)?/g;\n  return text.match(regex) || [];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","import { SVGProps } from \"react\";\nimport React from \"../../../lib/teact/teact\";\n\nexport const SummarizeIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={18}\n    height={18}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M9.277 7.215a.567.567 0 0 1-.563-.563c0-.307.255-.562.563-.562h3.937a.562.562 0 1 1 0 1.125H9.277ZM4.943 7.62l-.563-.563a.566.566 0 0 1 0-.795.566.566 0 0 1 .795 0l.165.165 1.29-1.29a.566.566 0 0 1 .795 0 .566.566 0 0 1 0 .795L5.738 7.62a.562.562 0 0 1-.795 0ZM9.277 12.465a.567.567 0 0 1-.563-.563c0-.307.255-.562.563-.562h3.937a.562.562 0 1 1 0 1.125H9.277ZM4.943 12.87l-.563-.563a.566.566 0 0 1 0-.795.566.566 0 0 1 .795 0l.165.165 1.29-1.29a.566.566 0 0 1 .795 0 .566.566 0 0 1 0 .795L5.738 12.87a.562.562 0 0 1-.795 0Z\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6.75 17.063c-4.072 0-5.813-1.74-5.813-5.813v-4.5C.938 2.678 2.678.937 6.75.937h4.5c4.072 0 5.813 1.74 5.813 5.813v4.5c0 4.072-1.74 5.813-5.813 5.813h-4.5ZM2.062 6.75v4.5c0 3.457 1.23 4.688 4.688 4.688h4.5c3.457 0 4.688-1.23 4.688-4.688v-4.5c0-3.458-1.23-4.688-4.688-4.688h-4.5c-3.458 0-4.688 1.23-4.688 4.688Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nexport const AIReplyIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={20}\n    height={20}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M4.865 8.487c.158.408.533.675.975.675.442 0 .825-.267.975-.675l.592-1.6a.165.165 0 0 1 .116-.117l1.6-.592c.409-.158.675-.533.675-.975 0-.441-.266-.825-.675-.975l-1.6-.591a.2.2 0 0 1-.116-.117l-.592-1.6a1.036 1.036 0 0 0-.975-.675c-.442 0-.825.267-.975.675l-.592 1.6a.165.165 0 0 1-.116.117l-1.6.591a1.036 1.036 0 0 0-.675.975c0 .442.266.825.675.975l1.6.592a.2.2 0 0 1 .116.117l.592 1.6ZM4.59 5.595l-1.058-.392 1.058-.391c.4-.15.708-.459.858-.859l.392-1.058.392 1.058c.15.392.466.709.858.85l1.058.392-1.058.392c-.4.15-.708.458-.858.858L5.84 7.503l-.392-1.058a1.464 1.464 0 0 0-.858-.85Zm-.208 12.942a.63.63 0 0 0 .625.625h1.25l-.009.008c1.059 0 1.642 0 2.209-.233.566-.234.975-.642 1.725-1.392l6.791-6.792.039-.038c.45-.458.708-.72.87-1.044a2.259 2.259 0 0 0 0-2.017c-.152-.327-.403-.578-.849-1.023l-.06-.06-.039-.038c-.458-.452-.72-.709-1.044-.87a2.26 2.26 0 0 0-2.017 0c-.327.151-.578.402-1.023.847l-.06.061-1.233 1.233-5.55 5.55c-.742.742-1.159 1.159-1.392 1.725-.233.567-.233 1.15-.233 2.209v1.249Zm1.258-.625v-.617c0-.933 0-1.392.142-1.733.141-.342.466-.667 1.125-1.325l5.116-5.117.792.792a.629.629 0 0 0 .883 0 .629.629 0 0 0 0-.884l-.791-.791.791-.792c.375-.375.6-.6.75-.675.284-.142.625-.142.909 0 .15.075.375.3.75.675.375.375.6.6.675.75.141.283.141.625 0 .908-.075.15-.3.375-.675.75l-6.792 6.792c-.7.7-1 .992-1.325 1.125-.342.142-.808.142-1.733.142H5.64Z\"\n    />\n  </svg>\n);\n\nexport const MeetingIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={18}\n    height={18}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M5.438 3.75V1.5c0-.308.255-.563.562-.563.308 0 .563.255.563.563v2.25A.567.567 0 0 1 6 4.313a.567.567 0 0 1-.563-.563ZM11.438 3.75V1.5c0-.308.255-.563.562-.563.307 0 .563.255.563.563v2.25a.567.567 0 0 1-.563.563.567.567 0 0 1-.563-.563ZM6.09 10.815a.774.774 0 0 1-.247-.157.775.775 0 0 1-.218-.533c0-.097.022-.195.06-.285a.866.866 0 0 1 .158-.247.774.774 0 0 1 .247-.158.766.766 0 0 1 .817.158.789.789 0 0 1 .218.532c0 .045-.008.098-.015.15a.477.477 0 0 1-.045.135.568.568 0 0 1-.068.135c-.022.038-.06.075-.09.113a.789.789 0 0 1-.532.217.747.747 0 0 1-.285-.06ZM8.715 10.815a.774.774 0 0 1-.248-.157.775.775 0 0 1-.217-.533c0-.097.023-.195.06-.285a.866.866 0 0 1 .157-.247.774.774 0 0 1 .248-.158.752.752 0 0 1 .818.158.789.789 0 0 1 .217.532c0 .045-.008.098-.015.15a.477.477 0 0 1-.045.135.567.567 0 0 1-.067.135c-.023.038-.06.075-.09.113a.789.789 0 0 1-.533.217.746.746 0 0 1-.285-.06ZM11.34 10.815a.774.774 0 0 1-.248-.157l-.09-.113a.567.567 0 0 1-.067-.135.477.477 0 0 1-.045-.135 1.129 1.129 0 0 1-.015-.15c0-.195.082-.39.217-.532a.774.774 0 0 1 .248-.158.75.75 0 0 1 .818.158.789.789 0 0 1 .217.532c0 .045-.008.098-.015.15a.477.477 0 0 1-.045.135.567.567 0 0 1-.067.135c-.023.038-.06.075-.09.113a.789.789 0 0 1-.533.217.746.746 0 0 1-.285-.06ZM6.09 13.44a.866.866 0 0 1-.247-.158.789.789 0 0 1-.218-.532c0-.098.022-.195.06-.285a.7.7 0 0 1 .158-.248c.277-.277.787-.277 1.064 0a.789.789 0 0 1 .218.533c0 .195-.082.39-.218.532a.789.789 0 0 1-.532.218.747.747 0 0 1-.285-.06ZM8.467 13.282a.789.789 0 0 1-.217-.532c0-.098.023-.195.06-.285a.7.7 0 0 1 .157-.248c.278-.277.788-.277 1.066 0a.7.7 0 0 1 .157.248c.037.09.06.187.06.285 0 .195-.082.39-.217.532A.789.789 0 0 1 9 13.5a.789.789 0 0 1-.533-.218ZM11.092 13.282a.7.7 0 0 1-.157-.247.747.747 0 0 1-.06-.285c0-.098.023-.195.06-.285a.7.7 0 0 1 .157-.248.749.749 0 0 1 .818-.157c.045.015.09.037.135.067.037.023.075.06.113.09a.789.789 0 0 1 .217.533c0 .195-.082.39-.217.532a.789.789 0 0 1-.533.218.789.789 0 0 1-.533-.218ZM2.625 7.38a.567.567 0 0 1-.563-.563c0-.307.256-.562.563-.562h12.75c.307 0 .563.255.563.562a.567.567 0 0 1-.563.563H2.625Z\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6 17.063c-2.737 0-4.313-1.575-4.313-4.313V6.375c0-2.737 1.576-4.313 4.313-4.313h6c2.738 0 4.313 1.576 4.313 4.313v6.375c0 2.738-1.575 4.313-4.313 4.313H6ZM2.812 6.374v6.375c0 2.145 1.043 3.188 3.188 3.188h6c2.145 0 3.188-1.043 3.188-3.188V6.375c0-2.145-1.043-3.188-3.188-3.188H6c-2.145 0-3.188 1.043-3.188 3.188Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n)\n\nexport const AISettingIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={20}\n    height={20}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M18.333 5.417h-5M5 5.417H1.667\"\n    />\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M8.333 8.333a2.917 2.917 0 1 1 0-5.833 2.917 2.917 0 0 1 0 5.833Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M18.333 14.584H15M6.667 14.584h-5\"\n    />\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M11.667 17.5a2.917 2.917 0 1 1 0-5.833 2.917 2.917 0 0 1 0 5.833Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n)\n\nexport const RealTimeAIIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"m10 7-.516 1.394c-.676 1.828-1.014 2.742-1.681 3.409-.667.667-1.581 1.005-3.409 1.681L3 14l1.394.516c1.828.676 2.742 1.015 3.409 1.681.667.666 1.005 1.581 1.681 3.409L10 21l.516-1.394c.676-1.828 1.015-2.742 1.681-3.409.666-.667 1.581-1.005 3.409-1.681L17 14l-1.394-.516c-1.828-.676-2.742-1.014-3.409-1.681-.667-.667-1.005-1.581-1.681-3.409L10 7Zm8-4-.221.597c-.29.784-.435 1.176-.72 1.461-.286.286-.678.431-1.462.72L15 6l.598.221c.783.29 1.175.435 1.46.72.286.286.431.678.72 1.462L18 9l.221-.597c.29-.784.435-1.176.72-1.461.286-.286.678-.431 1.462-.72L21 6l-.598-.221c-.783-.29-1.175-.435-1.46-.72-.286-.286-.431-.678-.72-1.462L18 3Z\"\n    />\n  </svg>\n)\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = peer.usernames?.[0]?.username;\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","/* eslint-disable no-console */\n/* eslint-disable no-null/no-null */\nimport type { Message } from 'ai';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getGlobal } from '../../../global';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { selectChat, selectChatLastMessageId, selectUser } from '../../../global/selectors';\nimport { getActionItems, summaryMessage } from '../utils/chat-api';\nimport { fetchChatMessageByOffsetId, formateMessage2Summary } from '../utils/fetch-messages';\nimport { getAuthState, isTokenValid } from '../utils/google-auth';\n\nexport const createRoomDescriptionMessage = (chatId:string):Message => {\n  return {\n    role: 'assistant',\n    id: uuidv4(),\n    createdAt: new Date(),\n    content: chatId,\n    annotations: [{\n      type: 'room-ai-description',\n    }],\n  };\n};\nexport const createGoogleLoginMessage = ():Message => {\n  return {\n    role: 'assistant',\n    id: uuidv4(),\n    createdAt: new Date(),\n    content: 'Please login first',\n    annotations: [{\n      type: 'google-auth',\n    }],\n  };\n};\n\nexport const createGoogleMeetingMessage = ():Message => {\n  return {\n    role: 'assistant',\n    id: uuidv4(),\n    createdAt: new Date(),\n    content: '',\n    annotations: [{\n      type: 'google-event-insert',\n    }],\n  };\n};\n\nexport const scheduleGoogleMeeting = (insertMessage:(message:Message)=>void, callback?:()=>void) => {\n  const auth = getAuthState();\n  if (!auth || !isTokenValid(auth)) {\n    insertMessage(createGoogleLoginMessage());\n  } else {\n    insertMessage(createGoogleMeetingMessage());\n  }\n  callback?.();\n};\n\nexport const summaryRoomMessage = async (\n  chatId:string,\n  insertMessage:(message:Message)=>void,\n  callback?:()=>void,\n) => {\n  const global = getGlobal();\n  const { autoTranslateLanguage = 'en' } = global.settings.byKey;\n  const chat = selectChat(global, chatId);\n  const lastMessageId = selectChatLastMessageId(global, chatId, 'all') || 0;\n  if (chat) {\n    const messages = await fetchChatMessageByOffsetId({\n      chat,\n      offsetId: lastMessageId,\n      addOffset: -1,\n      sliceSize: 20,\n      threadId: MAIN_THREAD_ID,\n      maxCount: 20,\n    });\n    const formateMessages = formateMessage2Summary(messages);\n    if (!formateMessages.length) return;\n    const summaryInfo = {\n      summaryTime: new Date().getTime(),\n      messageCount: formateMessages.length,\n      userIds: Array.from(new Set(formateMessages.map((m) => m.senderId))),\n    };\n    summaryMessage({\n      messages: formateMessages,\n      language: new Intl.DisplayNames([autoTranslateLanguage], { type: 'language' }).of(autoTranslateLanguage),\n    }).then((res:any) => {\n      const content = {\n        ...res.data,\n        summaryInfo,\n      };\n      const newMessage = {\n        timestamp: new Date().getTime(),\n        content: JSON.stringify(content),\n        id: uuidv4(),\n        createdAt: new Date(),\n        role: 'assistant',\n        annotations: [{\n          type: 'room-summary',\n        }],\n      };\n      insertMessage(newMessage as Message);\n      callback?.();\n    }).catch((err) => {\n      console.log(err);\n      callback?.();\n    });\n  }\n};\n\nexport const generateRoomActionItems = async (\n  chatId:string,\n  insertMessage:(message:Message)=>void,\n  callback?:()=>void,\n) => {\n  const global = getGlobal();\n  const { autoTranslateLanguage } = global.settings.byKey;\n  const chat = selectChat(global, chatId);\n  const lastMessageId = selectChatLastMessageId(global, chatId, 'all') || 0;\n  if (chat) {\n    const messages = await fetchChatMessageByOffsetId({\n      chat,\n      offsetId: lastMessageId,\n      addOffset: -1,\n      sliceSize: 20,\n      threadId: MAIN_THREAD_ID,\n      maxCount: 20,\n    });\n    const formateMessages = messages.map((message) => {\n      if (message.content.text?.text) {\n        const peer = message.senderId ? selectUser(global, message.senderId) : undefined;\n        return {\n          senderId: message?.senderId || message?.chatId,\n          senderName: peer ? `${peer.firstName || ''} ${peer.lastName || ''}` : '',\n          date: message.date,\n          messageId: Math.floor(message.id),\n          content: message.content.text?.text ?? '',\n        };\n      }\n      return null;\n    }).filter(Boolean);\n    if (!formateMessages.length) return;\n    const summaryInfo = {\n      summaryTime: new Date().getTime(),\n      messageCount: formateMessages.length,\n      userIds: Array.from(new Set(formateMessages.map((m) => m.senderId))),\n    };\n    getActionItems({\n      messages: formateMessages,\n      language: autoTranslateLanguage,\n    }).then((res:any) => {\n      const content = {\n        ...res.data,\n        summaryInfo,\n      };\n      const newMessage = {\n        timestamp: new Date().getTime(),\n        content: JSON.stringify(content),\n        id: uuidv4(),\n        createdAt: new Date(),\n        role: 'assistant',\n        annotations: [{\n          type: 'room-actions',\n        }],\n      };\n      insertMessage(newMessage as Message);\n      callback?.();\n    }).catch((err) => {\n      console.log(err);\n      callback?.();\n    });\n  }\n};\n\nexport const createMeetingTimeConfirmMessage = ({\n  chatId,\n  date,\n  email,\n}:{\n  chatId:string;\n  date:{ start:string;end:string }[];\n  email:string[] | null;\n}):Message => {\n  return {\n    role: 'assistant',\n    id: uuidv4(),\n    createdAt: new Date(),\n    content: JSON.stringify({ chatId, date, email }),\n    annotations: [{\n      type: 'google-meet-time-confirm',\n    }],\n  };\n};\n\nexport const createMeetingMentionMessage = (chatId:string):Message => {\n  return {\n    role: 'assistant',\n    id: uuidv4(),\n    createdAt: new Date(),\n    content: chatId,\n    annotations: [{\n      type: 'google-meet-mention',\n    }],\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import { filterAITag, filterPresetTag } from \"../components/chatAssistant/ai-chatfolders/tag-filter\"\nimport { isChatBot } from \"../components/chatAssistant/ai-chatfolders/util\"\nimport { AI_FOLDER_ID, ALL_FOLDER_ID, PRESET_FOLDER_ID, UNREAD_FOLDER_ID } from \"../config\"\nimport { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  if (folderId === UNREAD_FOLDER_ID) {\n    return getUnreadChatsByFolderId()[ALL_FOLDER_ID]\n  }\n  if (folderId === PRESET_FOLDER_ID) {\n    return filterPresetTag(getOrderedIds(ALL_FOLDER_ID)?.filter(i => !isChatBot(i)))\n  }\n  if (folderId === AI_FOLDER_ID) {\n    return filterAITag(getOrderedIds(ALL_FOLDER_ID)?.filter(i => !isChatBot(i)))\n  }\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","/* eslint-disable no-null/no-null */\n// auth.ts\n\nexport interface AuthState {\n  accessToken?: string;\n  grantedScopes?: string;\n  expiresAt?: number;\n  isLoggedIn: boolean;\n  idToken?: string;\n}\n\nconst STORAGE_KEY = 'google_auth_state';\n\nexport function setAuthState(state: AuthState) {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n}\n\nexport function getAuthState(): AuthState | null {\n  const raw = localStorage.getItem(STORAGE_KEY);\n  return raw ? JSON.parse(raw) : null;\n}\n\nexport function clearAuthState() {\n  localStorage.removeItem(STORAGE_KEY);\n}\n\nexport function isTokenValid(state: AuthState | null): boolean {\n  if (!state || !state.accessToken || !state.expiresAt) return false;\n  return Date.now() < state.expiresAt - 60 * 1000;\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './browser/windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport { message as showMessage, Modal } from 'antd';\n\nimport type { AuthState } from './google-auth';\n\nimport { getAuthState, setAuthState } from './google-auth';\n\n// export const GOOGLE_APP_CLIENT_ID = '847573679345-qq64ofbqhv7gg61e04dbrk8b92djf1fb.apps.googleusercontent.com';\n// export const GOOGLE_APP_CLIENT_ID_PRO = '166854276552-euk0006iphou9bvqplmgmpc0vde8v1in.apps.googleusercontent.com';\nexport const GOOGLE_APP_CLIENT_ID_DEV = '545055439232-l17p8a5fs7b5377726doqt2cpd9qfta4.apps.googleusercontent.com';\nexport const GOOGLE_API_KEY_DEV = 'AIzaSyAc7yi96E4qjF16-n40wDm-Wz0MPZnLLs8';\nexport const GOOGLE_SCOPES = [\n  'openid',\n  'profile',\n  'email',\n  'https://www.googleapis.com/auth/calendar',\n  'https://www.googleapis.com/auth/calendar.events',\n  'https://www.googleapis.com/auth/calendar.readonly',\n  'https://www.googleapis.com/auth/calendar.events.freebusy',\n  'https://www.googleapis.com/auth/calendar.freebusy',\n];\n\nexport function loadGoogleSdk(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (window.google?.accounts?.oauth2) {\n      resolve();\n      return;\n    }\n\n    const script = document.createElement('script');\n    script.src = 'https://accounts.google.com/gsi/client';\n    script.async = true;\n    script.defer = true;\n    script.onload = () => resolve();\n    script.onerror = () => reject(new Error('Failed to load Google SDK'));\n    document.head.appendChild(script);\n  });\n}\n\nexport async function loginWithGoogle():Promise<AuthState> {\n  if (!window.google?.accounts?.oauth2) {\n    await loadGoogleSdk();\n  }\n  return new Promise((resolve, reject) => {\n    const client = window.google.accounts.oauth2.initTokenClient({\n      client_id: GOOGLE_APP_CLIENT_ID_DEV,\n      scope: GOOGLE_SCOPES.join(' '),\n      prompt: 'consent',\n      ux_mode: 'popup',\n      callback: (resp) => {\n        if (resp?.error) {\n          reject(resp.error);\n        }\n        const authState = {\n          isLoggedIn: true,\n          accessToken: resp.access_token,\n          idToken: resp.id_token,\n          grantedScopes: resp.scope,\n          expiresAt: Date.now() + resp.expires_in * 1000,\n        };\n        setAuthState(authState);\n        resolve(authState);\n      },\n    });\n\n    client.requestAccessToken();\n  });\n}\n\nexport const createAuthConfirmModal = (props:{ onOk?:(accessToken:string)=>void;onCancel?:()=>void }) => {\n  Modal.confirm({\n    title: 'Google authorization',\n    content: 'This service requires access to your Google Calendar.',\n    okText: 'Confirm',\n    cancelText: 'Cancel',\n    onOk: () => {\n      loginWithGoogle().then((authState) => {\n        props.onOk?.(authState.accessToken!);\n      }).catch((error) => {\n        console.error('Google login failed:', error);\n        showMessage.info('Google login failed');\n      });\n    },\n    onCancel: props?.onCancel,\n  });\n};\n\nexport interface ICreateMeetResponse {\n  summary: string;\n  start: { dateTime: string; timeZone: string };\n  end: { dateTime: string; timeZone: string };\n  attendees: { email: string }[];\n  reminders: {\n    useDefault: boolean;\n    overrides: { method: string; minutes: number }[];\n  };\n  conferenceData: {\n    createRequest: {\n      requestId: string;\n      conferenceSolutionKey: { type: string };\n    };\n  };\n  hangoutLink: string;\n}\nexport const createGoogleMeet = ({\n  title = 'Meeting Invitation',\n  startDate,\n  endDate,\n  selectedTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone,\n  emails = [],\n  googleToken,\n}: {\n  title?: string;\n  startDate: Date;\n  endDate: Date;\n  selectedTimezone: string;\n  emails: string[];\n  googleToken: string;\n}): Promise<ICreateMeetResponse> => {\n  return new Promise((resolve, reject) => {\n    const attendees = emails.map((email) => {\n      return {\n        email,\n      };\n    });\n    const event = {\n      summary: title,\n      start: { dateTime: new Date(startDate), timeZone: selectedTimezone },\n      end: { dateTime: new Date(endDate), timeZone: selectedTimezone },\n      attendees,\n      reminders: {\n        useDefault: false,\n        overrides: [\n          { method: 'email', minutes: 30 },\n          { method: 'popup', minutes: 10 },\n        ],\n      },\n      conferenceData: {\n        createRequest: {\n          requestId: `test-${Date.now()}`,\n          conferenceSolutionKey: { type: 'hangoutsMeet' },\n        },\n      },\n    };\n    fetch(\n      `https://www.googleapis.com/calendar/v3/calendars/primary/events?conferenceDataVersion=1&alt=json&key=${GOOGLE_API_KEY_DEV}`,\n      {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${googleToken}`,\n        },\n        body: JSON.stringify(event),\n      },\n    )\n      .then((response) => response.json())\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const getGoogleCalendarFreeBusy = ():Promise<{ start:string; end:string }[]> => {\n  const auth = getAuthState();\n  return new Promise((resolve, reject) => {\n    const params = {\n      timeMin: new Date().toISOString(), // 过去24小时\n      timeMax: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(), // 未来3天\n      items: [{ id: 'primary' }], // 查询主日历\n    };\n    fetch(`https://www.googleapis.com/calendar/v3/freeBusy?key=${GOOGLE_API_KEY_DEV}`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${auth?.accessToken}`,\n      },\n      body: JSON.stringify(params),\n    }).then((res) => res.json())\n      .then((res) => {\n        resolve(res?.calendars.primary.busy || []);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'premiumGiftStars') {\n    const {\n      months, userId, message,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'premiumGiftStars',\n      months,\n      message,\n      user,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, boostPeerId } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: boostPeerId,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import copy from 'copy-to-clipboard';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { selectChatTranslations } from '../../../../global/selectors';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n    const global = getGlobal();\n    const { id: messageId, chatId } = message;\n    const chatTranslations = selectChatTranslations(global, chatId);\n    const { autoTranslateLanguage } = global.settings.byKey;\n    const messageTranslation = autoTranslateLanguage && messageId\n      ? chatTranslations?.byLangCode[autoTranslateLanguage]?.[messageId] : undefined;\n    const { isPending, text: translatedText } = messageTranslation || {};\n    if (translatedText && !isPending) {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            copy(translatedText.text);\n          }\n          afterEffect?.();\n        },\n      });\n    } else {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          const messageIds = getMessageIdsForSelectedText();\n          if (messageIds?.length && onCopyMessages) {\n            onCopyMessages(messageIds);\n          } else if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            const clipboardText = renderMessageText(\n              { message, shouldRenderAsHtml: true },\n            );\n            if (clipboardText) {\n              copyHtmlToClipboard(\n                clipboardText.join(''),\n                getMessageTextWithSpoilers(message, statefulContent)!,\n              );\n            }\n          }\n\n          afterEffect?.();\n        },\n      });\n    }\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n  isUserId,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport ScheduleMeetingIcon from '../../chatAssistant/assets/schedule-meeting.png';\nimport SmartReplyIcon from '../../chatAssistant/assets/smart-reply.png';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\nimport SerenaPath from '../../chatAssistant/assets/serena.png';\nimport { AIReplyIcon, MeetingIcon, SummarizeIcon } from \"../../chatAssistant/utils/icons\"\nimport { canSummarize } from \"../../chatAssistant/utils/ai-analyse-message\"\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canSmartReply?: boolean;\n  canScheduleMeeting?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onSmartReply?: NoneToVoidFunction;\n  onScheduleMeet?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  onSummarize?: NoneToVoidFunction;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canSmartReply,\n  canScheduleMeeting,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onSmartReply,\n  onScheduleMeet,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  onSummarize,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n  const canAISummarize = canSummarize(message);\n  const canSerenaAI = canAISummarize || canScheduleMeeting || canSmartReply\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? lang('SendAnotherGift')\n                : lang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n\n        {canSerenaAI && <MenuItem\n          customIcon={(\n            <img\n              src={SerenaPath}\n              className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n              alt=\"\"\n            />\n            )}\n          submenu={\n            <>\n              {canScheduleMeeting && (\n                <MenuItem\n                  customIcon={(\n                    <div className=\"mr-[1.25rem]\">\n                      <MeetingIcon/>\n                    </div>\n                  )}\n                  onClick={onScheduleMeet}\n                >\n                  {lang('Schedule Meeting')}\n                </MenuItem>\n              )}\n              {canAISummarize && <MenuItem\n                customIcon={(\n                  <div className=\"mr-[1.25rem]\">\n                    <SummarizeIcon/>\n                  </div>\n                )}\n                onClick={onSummarize}\n              >\n                {lang('Summarize')}\n              </MenuItem>}\n              {canSmartReply && <MenuItem\n                customIcon={(\n                  <div className=\"mr-[1.25rem]\">\n                    <AIReplyIcon/>\n                  </div>\n                )}\n                onClick={onSmartReply}\n              >\n                {lang('AI Reply')}\n              </MenuItem>}\n            </>\n          }\n        >\n          {lang('SerenaAI')}\n        </MenuItem>}\n\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {/* {canSmartReply && (\n          <MenuItem\n            customIcon={(\n              <img\n                className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n                src={SmartReplyIcon}\n                alt=\"\"\n              />\n            )}\n            onClick={onSmartReply}\n          >\n            {lang('Smart Reply')}\n          </MenuItem>\n        )} */}\n        {/* {canScheduleMeeting && (\n          <MenuItem\n            customIcon={(\n              <img\n                className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n                src={ScheduleMeetingIcon}\n                alt=\"\"\n              />\n            )}\n            onClick={onScheduleMeet}\n          >\n            {lang('Schedule a Meeting')}\n          </MenuItem>\n        )} */}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageText,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport {\n  audioSummary, checkIsUrl, documentSummary, photoSummary, videoSummary, voiceToAudioSummary, webPageSummary,\n} from '../../chatAssistant/utils/ai-analyse-message';\nimport { chatAIGenerate } from '../../chatAssistant/utils/chat-api';\nimport { createAuthConfirmModal } from '../../chatAssistant/utils/google-api';\nimport { getAuthState, isTokenValid } from '../../chatAssistant/utils/google-auth';\nimport ScheduleMeeting from '../../chatAssistant/utils/schedule-meeting';\nimport { knowledgeEmbeddingStore } from '../../chatAssistant/vector-store';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport eventEmitter from '../../chatAssistant/lib/EventEmitter';\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canSmartReply?: boolean;\n  canScheduleMeeting?:boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canSmartReply,\n  canScheduleMeeting,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n    openChatAIWithInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text!.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSmartReply = useLastCallback(async () => {\n    closeMenu();\n    if (message.content.text?.text) {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n      });\n      const vectorSearchResults = await knowledgeEmbeddingStore.similaritySearch({\n        query: message.content.text?.text,\n      });\n      type Metadata = { answer: string }; // Define the type for metadata\n      const similarResult = vectorSearchResults.similarItems[0] as { metadata: Metadata; score: number } | undefined;\n      if (similarResult && similarResult.score > 0.8) {\n        eventEmitter.emit('update-input-text', similarResult.metadata.answer);\n      } else {\n        eventEmitter.emit('update-input-spiner', true);\n        chatAIGenerate({\n          data: {\n            messages: [\n              {\n                role: 'system',\n                content: '你是一个多语种智能助手。接收用户消息后，自动识别其使用的语言，并用相同的语言进行自然、得体的回复。你应该理解消息的语境，确保回复简洁、友好且符合语言习惯。',\n                id: '1',\n              },\n              {\n                role: 'user',\n                content: `请回复下面的消息: ${message.content.text?.text}`,\n                id: '2',\n              },\n            ],\n          },\n          onResponse: (response) => {\n            eventEmitter.emit('update-input-text', response);\n          },\n          onFinish: () => {\n            // eslint-disable-next-line no-console\n            console.log('Finish');\n          },\n        });\n      }\n    }\n  });\n\n  const handleScheduleMeeting = useLastCallback(() => {\n    const chatId = message.chatId;\n    const scheduleMeeting = ScheduleMeeting.create({ chatId });\n    const auth = getAuthState();\n    if (!auth || !isTokenValid(auth)) {\n      createAuthConfirmModal({\n        onOk: () => {\n          scheduleMeeting.start(message);\n        },\n      });\n    } else {\n      scheduleMeeting.start(message);\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  const handleSummarize = useLastCallback(async () => {\n    const {\n      photo, document, webPage, voice, audio, text, video\n    } = message.content;\n    const isUrl = checkIsUrl(text?.text);\n    await openChatAIWithInfo({ chatId: message.chatId });\n    if (photo) {\n      photoSummary(message);\n    } else if (webPage || isUrl) {\n      webPageSummary(message);\n    } else if (document) {\n      documentSummary(message);\n    } else if (voice) {\n      voiceToAudioSummary(message);\n    } else if (audio) {\n      audioSummary(message);\n    } else if (video) {\n      videoSummary(message);\n    }\n    closeMenu();\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canSmartReply={canSmartReply}\n        canScheduleMeeting={canScheduleMeeting}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onSmartReply={handleSmartReply}\n        onScheduleMeet={handleScheduleMeeting}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        onSummarize={handleSummarize}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation;\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n    const hasTextContent = hasMessageText(message);\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canSmartReply: !isPinned && !isScheduled && canReplyGlobally && canSendText && hasTextContent,\n      canScheduleMeeting: !isOwn && hasTextContent,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n"],"names":["memo","withGlobal","global","peerId","forceShowSelf","peer","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","title","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","className","withPeerColors","withEmojiStatus","onClick","itemClassName","lang","useOldLang","apiPeer","anyPeer","chat","isApiPeerChat","undefined","iconElement","titleElement","titleText","React","createElement","Icon","name","style","Avatar","size","getPeerTitle","FullNameTitle","fullClassName","buildClassName","isForum","isAvatarSquare","getPeerColorClass","dir","isRtl","formatMeetingTimeRange","startISO","endISO","timeZoneVisable","startDate","Date","endDate","dayFormatter","Intl","DateTimeFormat","weekday","month","day","timeFormatter","hour","minute","hour12","formatTime","date","format","toLowerCase","replace","dateStr","startTimeStr","endTimeStr","timeZoneName","resolvedOptions","timeZone","suggestFreeTimes","busySlots","durationMinutes","count","now","DateTime","utc","endRange","plus","days","busyIntervals","map","slot","Interval","fromDateTimes","fromISO","start","end","freeSlots","cursor","done","dayStart","set","second","millisecond","dayEnd","slotStart","minutes","slotEnd","slotInterval","some","b","overlaps","push","toISO","length","startOf","ScheduleMeeting","constructor","chatId","email","hasConfirmed","_defineProperty","this","handlerRef","message","handler","create","params","existing","instances","get","instance","originalMessage","eventEmitter","on","Actions","NewTextMessage","timeout","setTimeout","cleanup","console","log","off","clearTimeout","delete","isOutgoing","handleGoogleAuthCheck","content","text","calendlyUrl","extractCalendlyLinks","suitableDates","async","aFreeSlots","bBusySlots","result","aSlot","aStart","aEnd","hasConflict","bSlot","bStart","toISOString","getAvailableSlots","calendlyRanges","getGoogleCalendarFreeBusy","getSuitableTime","slice","toolCheckRes","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","messages","id","uuidv4","role","then","res","json","toolResults","forEach","toolCall","toolName","catch","err","getMeetParamsByAITools","dateRange","getTime","isAvailable","suggestions","proposedSlot","myBusyTimes","proposedStart","proposedEnd","busy","busyStart","isTimeSlotAvailable","sendMessage","index","join","meetingTimeConfirmMessage","createMeetingTimeConfirmMessage","ChataiStores","storeMessage","parseMessage2StoreMessage","getGlobal","currentChat","selectCurrentChat","emit","AddRoomAIMessage","getActions","openChatAIWithInfo","e","auth","getAuthState","isTokenValid","handleCreateGoogleMeet","accessToken","createAuthConfirmModal","onOk","createGoogleMeet","selectedTimezone","emails","googleToken","createMeetResponse","eventMessage","summary","attendees","attendee","dateTime","hangoutLink","messageList","threadId","type","Map","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","reaction","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","ref","useRef","isCustom","availableReaction","useMemo","find","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","documentId","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","Math","floor","random","isIntersecting","useIsIntersecting","mediaHashCenterIcon","getStickerHashById","mediaHashEffect","mediaDataCenterIcon","useMedia","mediaDataEffect","activeReaction","active","shouldPlayEffect","Boolean","shouldPlayCenter","shouldRender","shouldRenderEffect","transitionClassNames","animationClassNames","useShowTransitionDeprecated","shouldRenderCenter","centerAnimationClassNames","handleEnded","useLastCallback","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","useFlag","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","styles","root","animating","ReactionStaticEmoji","CustomEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","key","animatedIcon","roundToNearestEven","tgsUrl","play","noLoop","onLoad","onEnded","Fragment","effect","CustomEmojiEffect","particleSize","max","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","entry","lastHeight","current","newHeight","contentRect","height","isAnimatingScroll","container","target","closest","beginHeavyAnimation","resizeDiff","offsetHeight","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useResizeObserver","callback","delay","savedCallback","useEffect","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","tabIndex","value","onChange","MIN_PASSWORD_LENGTH","maxLength","Button","ripple","disabled","getOffsetToContainer","element","offsetTop","offsetLeft","contains","offsetParent","top","left","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","useMediaTransitionDeprecated","shouldApplySizeFix","shouldReplaceWithHeartIcon","src","blankUrl","alt","draggable","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","shiftX","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","min","newTailPosition","hasFloatingBadge","isProgressFull","buildStyle","width","viewBox","fill","d","cn","inputs","twMerge","clsx","formatTimestamp","timestamp","isSameDay","toDateString","isSameYear","getFullYear","timePart","String","getHours","padStart","getMinutes","getMonth","getDate","formatTimestampRange","normalizeTimestamp","ts","toString","isToday","d2","d1","pad","n","formatDate","match","props","isOpen","CalendarModal","useModuleLoader","Bundles","Extra","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onClose","onSecondButtonClick","AvatarList","peers","limit","badgeText","pxSize","AVATAR_SIZES","renderingBadgeText","MediaSpoiler","isVisible","withAnimation","thumbDataUri","canvasRef","useCanvasBlur","handleClick","el","rect","currentTarget","getBoundingClientRect","x","clientX","y","clientY","shiftY","setAttribute","usePrevious","prevRef","lastRef","useHorizontalScroll","containerRef","isDisabled","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","getStickerMediaHash","previewUrl","preloadImage","patternPositions","coordinates","ring","ringItemCount","ringProgress","ringRadius","angleShift","PI","i","angle","cos","sin","sizeFactor","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","isElementInViewport","display","windowHeight","windowSize","MAX_EFFECT_COUNT","IS_IOS","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","AnimatedIcon","LOCAL_TGS_URLS","StarReactionEffect","nonInteractive","quality","REACTION_SIZE","selectStarsState","stars","ReactionButton","isOwnMessage","recentReactors","chosenClassName","messageId","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","useLang","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","stopPropagation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","getComputedStyle","scale","cancel","animate","offset","duration","easing","prevAmount","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","chosen","onMouseDown","onContextMenu","Sparkles","preset","animatedEmoji","AnimatedCounter","formatIntegerCompact","paidCounter","counter","Reactions","maxWidth","metaChildren","noRecentReactors","isCurrentUserPremium","tags","isAccountFrozen","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","openPremiumModal","showNotification","openFrozenAccountModal","results","areTags","recentReactions","withServiceReactions","areReactionsPossible","totalCount","reduce","acc","recentReactorsByReactionKey","recentReaction","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","actionText","cacheBreaker","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","RADIUS","ITERATIONS","dataUri","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","fastBlur","onload","requestMeasure","PickerItem","subtitle","avatarElement","inputElement","inputPosition","inactive","titleClassName","subtitleClassName","onDisabledClick","isClickable","RippleEffect","SummarizeIcon","_extends","xmlns","fillRule","clipRule","AIReplyIcon","MeetingIcon","AISettingIcon","stroke","strokeLinecap","strokeLinejoin","strokeWidth","RealTimeAIIcon","renderMessageText","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","maxTimestamp","entities","contentNotSupportedText","getMessageText","trimText","renderTextWithEntities","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","getMessageSummaryText","renderText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","useEnsureMessage","replyOriginForId","loadMessage","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","timeoutId","window","lockedSelectedIdsSet","Set","lockedUnselectedIdsSet","unlockedSelectedIds","has","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","categoryType","newSelectedCategories","includes","splice","indexOf","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","username","usernames","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","Radio","checked","onlyInput","Checkbox","beforeChildren","pickerCategoryTitle","header","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","cb","DEFAULT_DURATION","stopById","animateHorizontalScroll","selectCanAnimateInterface","getAttribute","containerWidth","scrollWidth","dataset","scrollId","path","remainingPath","isStopped","scrollSnapType","startAt","t","currentPath","transition","CUSTOM_PEER_PREMIUM","isCustomPeer","titleKey","subtitleKey","avatarIcon","withPremiumGradient","CUSTOM_PEER_INCLUDED_CHAT_TYPES","peerColorId","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","createRoomDescriptionMessage","createdAt","annotations","createGoogleLoginMessage","createGoogleMeetingMessage","scheduleGoogleMeeting","insertMessage","summaryRoomMessage","autoTranslateLanguage","settings","byKey","selectChat","lastMessageId","selectChatLastMessageId","fetchChatMessageByOffsetId","offsetId","addOffset","sliceSize","MAIN_THREAD_ID","maxCount","formateMessages","formateMessage2Summary","summaryInfo","summaryTime","messageCount","userIds","from","m","senderId","summaryMessage","language","DisplayNames","of","data","newMessage","generateRoomActionItems","senderName","firstName","lastName","getActionItems","createMeetingMentionMessage","loadedPreviewUrls","otherProps","isThumbOpen","unmarkThumbOpen","thumbClassNames","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","add","handleAnimationReady","useCustomBackground","theme","settingValue","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","url","URL","createObjectURL","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","getStickerFromGift","gift","sticker","attributes","attr","getTotalGiftAvailability","availabilityTotal","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","characters","elements","textLength","prevTextLength","charIndex","prevTextCharIndex","unshift","renderAnimatedCharacters","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","preventDefaultForScrollKeys","HTMLElement","tagName","isTextBox","disableScrolling","_excludedClosestSelector","document","onkeydown","enableScrolling","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","UNREAD_FOLDER_ID","getUnreadChatsByFolderId","ALL_FOLDER_ID","PRESET_FOLDER_ID","filterPresetTag","getOrderedIds","isChatBot","AI_FOLDER_ID","filterAITag","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","ReactionSelectorCustomReaction","isReady","noAppearAnimation","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","createClassNameBuilder","ReactionSelector","allAvailableReactions","topReactions","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isPrivate","canPlayAnimatedEmojis","isInSavedMessages","isInStoryViewer","isForEffects","effectReactions","isWithPaidReaction","onShowMore","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","color","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","animateScroll","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","noLoad","forcePreview","thumbnail","localMediaHash","previewBlobUrl","ApiMediaFormat","BlobUrl","AnimatedIconWithPreview","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","priority","lastMessage","selectChatLastMessage","isVerified","STORAGE_KEY","setAuthState","state","localStorage","setItem","raw","getItem","parse","expiresAt","ENTITY_CLASS_BY_NODE_NAME","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","parseHtmlAsFormattedText","html","withMarkdownLinks","skipMarkdown","fragment","innerHTML","parsedHtml","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","trim","textIndex","recursionDeepness","addEntity","node","nodeType","Node","COMMENT_NODE","entity","rawText","entityType","nodeName","anchor","MentionName","Url","href","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","substring","userId","Timestamp","isNaN","getEntityDataFromNode","hasChildNodes","childNodes","querySelectorAll","replaceWith","ELEMENT_NODE","getMessageIdsForSelectedText","selection","getSelection","selectedFragments","rangeCount","getRangeAt","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageIds","children","classList","messageEl","firstChild","removeChild","pop","parentNode","BadgeButton","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","abs","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","isLottie","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","withSharedAnimation","onAnimationEnd","GOOGLE_APP_CLIENT_ID_DEV","GOOGLE_API_KEY_DEV","GOOGLE_SCOPES","loginWithGoogle","google","accounts","oauth2","script","defer","onerror","Error","head","appendChild","initTokenClient","client_id","scope","prompt","ux_mode","resp","authState","isLoggedIn","access_token","idToken","id_token","grantedScopes","expires_in","requestAccessToken","Modal","confirm","okText","cancelText","showMessage","info","reminders","useDefault","overrides","conferenceData","createRequest","requestId","conferenceSolutionKey","Authorization","response","timeMin","timeMax","calendars","primary","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","currency","purpose","hash","months","boostChannelId","option","users","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","savedId","buildStarsTransactionCustomPeer","customPeerAvatarColor","formatStarsTransactionAmount","starsAmount","nanos","number","formatStarsAmount","getStarsTransactionFromGift","transactionId","isGift","isMyGift","getPrizeStarsTransactionFromGiveaway","boostPeerId","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","getTriggerElement","getRootElement","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","onCloseAnimationEnd","MenuItem","destructive","div","ALLOWED_QUOTE_ENTITIES","getSelectionAsFormattedText","range","clonedSelection","commonAncestorContainer","currentElement","parentElement","wrapHtmlWithMarkupTags","getSelectionAsHtml","stripEntitiesForQuote","PinMessageModal","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","Transition","activeKey","handleOpenModal","isReadDate","MessageContextMenu","isReactionPickerOpen","poll","story","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canSmartReply","canScheduleMeeting","canQuote","canEdit","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","onReply","onSmartReply","onScheduleMeet","onOpenThread","onEdit","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","onSummarize","userFullName","canGift","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","scrollableRef","noReactions","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","canAISummarize","canSummarize","canSerenaAI","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","copyOptions","afterEffect","options","photo","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","label","mediaLoader","blobUrl","copyImageToClipboard","copyTextToClipboard","anchorNode","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","chatTranslations","selectChatTranslations","messageTranslation","byLangCode","isPending","translatedText","execCommand","copy","clipboardText","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","extraHeightAudioPlayer","middleColumn","getElementById","middleColumnComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","customIcon","SerenaPath","submenu","messagesCount","withPreventDefaultOnMouseDown","MenuSeparator","inline","withWrap","reactors","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","UNQUOTABLE_OFFSET","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","storyData","selectPeerStory","selectCanGift","hasTextContent","hasMessageText","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","ContextMenuContainer","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","reportMessages","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","calendar","chatsById","chats","byId","usersById","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","getMessageDownloadableMedia","getIsDownloading","selectionRange","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","startOffset","endOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","replyToPeerId","fromChatId","handleSmartReply","similarResult","knowledgeEmbeddingStore","similaritySearch","query","similarItems","score","metadata","answer","chatAIGenerate","onResponse","onFinish","handleScheduleMeeting","scheduleMeeting","handleOpenThread","handleEdit","handlePin","handleUnpin","isUnpin","handleForward","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","video","getMessageVideo","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","handleSummarize","webPage","voice","audio","isUrl","checkIsUrl","photoSummary","webPageSummary","documentSummary","voiceToAudioSummary","audioSummary","videoSummary","ConfirmDialog","confirmLabel","confirmHandler"],"sourceRoot":""}