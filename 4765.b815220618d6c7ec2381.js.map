{"version":3,"file":"4765.b815220618d6c7ec2381.js","mappings":"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","sources":["webpack://TeleGPT/./src/components/ui/placeholder/PlaceholderChatInfo.module.scss?3a84","webpack://TeleGPT/./src/components/ui/placeholder/PlaceholderChatInfo.tsx","webpack://TeleGPT/./src/components/ui/Toggle.module.scss?0590","webpack://TeleGPT/./src/components/ui/Toggle.tsx","webpack://TeleGPT/./src/components/ui/RadioGroup.tsx","webpack://TeleGPT/./src/components/ui/Modal.tsx","webpack://TeleGPT/./src/components/ui/RangeSliderWithMarks.module.scss?5535","webpack://TeleGPT/./src/components/ui/RangeSliderWithMarks.tsx","webpack://TeleGPT/./src/components/ui/FloatingActionButton.tsx","webpack://TeleGPT/./src/components/ui/RoundTimer.module.scss?7ffc","webpack://TeleGPT/./src/components/ui/RoundTimer.tsx","webpack://TeleGPT/./src/components/ui/Notification.tsx","webpack://TeleGPT/./src/components/ui/ListItem.tsx","webpack://TeleGPT/./src/components/ui/TabList.tsx","webpack://TeleGPT/./src/components/ui/Badge.module.scss?a5a8","webpack://TeleGPT/./src/components/ui/Badge.tsx","webpack://TeleGPT/./src/components/ui/Radio.tsx","webpack://TeleGPT/./src/components/ui/ShowTransition.tsx","webpack://TeleGPT/./src/components/ui/Separator.module.scss?e4cd","webpack://TeleGPT/./src/components/ui/Separator.tsx","webpack://TeleGPT/./src/components/ui/Tab.tsx","webpack://TeleGPT/./src/components/ui/ProgressSpinner.tsx","webpack://TeleGPT/./src/components/ui/SearchInput.tsx","webpack://TeleGPT/./src/components/ui/AvatarEditable.tsx","webpack://TeleGPT/./src/components/ui/InfiniteScroll.tsx","webpack://TeleGPT/./src/components/ui/placeholder/Skeleton.tsx","webpack://TeleGPT/./src/components/ui/ShowMoreButton.tsx","webpack://TeleGPT/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://TeleGPT/./src/components/ui/MenuSeparator.tsx","webpack://TeleGPT/./src/components/ui/TextTimer.tsx","webpack://TeleGPT/./src/components/ui/Switcher.tsx","webpack://TeleGPT/./src/components/ui/Select.tsx","webpack://TeleGPT/./src/components/ui/ResponsiveHoverButton.tsx","webpack://TeleGPT/./src/components/ui/CropModal.tsx","webpack://TeleGPT/./src/components/ui/CheckboxGroup.tsx","webpack://TeleGPT/./src/components/ui/Draggable.module.scss?804f","webpack://TeleGPT/./src/components/ui/Draggable.tsx","webpack://TeleGPT/./src/components/ui/RangeSlider.tsx","webpack://TeleGPT/./src/components/ui/SelectAvatar.module.scss?3384","webpack://TeleGPT/./src/components/ui/SelectAvatar.tsx","webpack://TeleGPT/./src/components/ui/TextArea.tsx","webpack://TeleGPT/./src/components/ui/ConfirmDialog.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Oob7moh7\",\"avatar\":\"ao0o6F_1\",\"info\":\"e94nYlC4\",\"title\":\"ANs9RCJu\",\"subtitle\":\"RSn3O5Rx\",\"animated\":\"AtWkrIxV\",\"slide\":\"_iiRl0o2\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './PlaceholderChatInfo.module.scss';\n\nconst PlaceholderChatInfo = () => {\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.avatar, styles.animated)} />\n      <div className={styles.info}>\n        <div className={buildClassName(styles.title, styles.animated)} />\n        <div className={buildClassName(styles.subtitle, styles.animated)} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PlaceholderChatInfo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eGD1rubd\",\"widget\":\"EXXsQxeq\",\"min\":\"C4vXj96y\",\"mid\":\"nRNm3LRD\",\"max\":\"LdztzMx0\",\"filler\":\"kudEBJOk\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Toggle.module.scss';\n\ninterface OwnProps {\n  value: 'min' | 'mid' | 'max';\n}\n\nfunction Toggle({ value }: OwnProps) {\n  return (\n    <div className={buildClassName(styles.root, 'Toggle')} aria-hidden>\n      <i className={buildClassName(styles.filler, styles[value])} />\n      <i className={buildClassName(styles.widget, styles[value])} />\n    </div>\n  );\n}\n\nexport default memo(Toggle);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Radio from './Radio';\n\nexport type IRadioOption<T = string> = {\n  label: TeactNode;\n  subLabel?: TeactNode;\n  value: T;\n  hidden?: boolean;\n  className?: string;\n  isCanCheckedInDisabled?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n  onClickAction?: (value: string) => void;\n  isLink?: boolean;\n  withIcon?: boolean;\n  subLabelClassName?: string;\n  subLabel?: TeactNode;\n  className?: string;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n  onClickAction,\n  subLabelClassName,\n  isLink,\n  withIcon,\n  subLabel,\n  className,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  const onSubLabelClick = useLastCallback((value: string) => () => {\n    onClickAction?.(value);\n  });\n\n  return (\n    <div id={id} className={buildClassName('radio-group', className)}>\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={subLabel || option.subLabel}\n          subLabelClassName={subLabelClassName}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          isCanCheckedInDisabled={option.isCanCheckedInDisabled}\n          disabled={disabled}\n          withIcon={withIcon}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          className={option.className}\n          onChange={handleChange}\n          onSubLabelClick={onSubLabelClick(option.value)}\n          isLink={isLink}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { beginHeavyAnimation, useEffect } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport freezeWhenClosed from '../../util/hoc/freezeWhenClosed';\nimport trapFocus from '../../util/trapFocus';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Icon from '../common/icons/Icon';\nimport Button, { type OwnProps as ButtonProps } from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nexport const ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  contentClassName?: string;\n  headerClassName?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  hasAbsoluteCloseButton?: boolean;\n  absoluteCloseButtonColor?: ButtonProps['color'];\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  dialogStyle?: string;\n  dialogRef?: React.RefObject<HTMLDivElement>;\n  isLowStackPriority?: boolean;\n  dialogContent?: React.ReactNode;\n  ignoreFreeze?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n};\n\nconst Modal: FC<OwnProps> = ({\n  dialogRef,\n  title,\n  className,\n  contentClassName,\n  headerClassName,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  hasAbsoluteCloseButton,\n  absoluteCloseButtonColor = 'translucent',\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  dialogStyle,\n  isLowStackPriority,\n  dialogContent,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n}) => {\n  const {\n    ref: modalRef,\n    shouldRender,\n  } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    withShouldRender: true,\n  });\n\n  const withCloseButton = hasCloseButton || hasAbsoluteCloseButton;\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useLastCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  });\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen, modalRef]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      beginHeavyAnimation(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useOldLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title && !withCloseButton) return undefined;\n    const closeButton = (\n      <Button\n        className={buildClassName(hasAbsoluteCloseButton && 'modal-absolute-close-button')}\n        round\n        color={absoluteCloseButtonColor}\n        size=\"smaller\"\n        ariaLabel={lang('Close')}\n        onClick={onClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n    );\n\n    if (hasAbsoluteCloseButton) {\n      return closeButton;\n    }\n\n    return (\n      <div className={buildClassName('modal-header', headerClassName)}>\n        {withCloseButton && closeButton}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n    isLowStackPriority && 'low-priority',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef} style={dialogStyle}>\n            {renderHeader()}\n            {dialogContent}\n            <div className={buildClassName('modal-content custom-scroll', contentClassName)} style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default freezeWhenClosed(Modal);\n","// extracted by mini-css-extract-plugin\nexport default {\"dotWrapper\":\"s8NMMSES\",\"sliderContainer\":\"i_wrxmyh\",\"marksContainer\":\"bVlnaLCI\",\"mark\":\"AFFaq4eZ\",\"active\":\"cuogxYPG\",\"slider\":\"H_rMZrqn\",\"tickMarks\":\"O7SI4r_Y\",\"tick\":\"b6UDc3zh\",\"filled\":\"VELPJsJ0\",\"tickUnfilled\":\"K8NtimIi\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './RangeSliderWithMarks.module.scss';\n\nexport type OwnProps = {\n  marks: number[];\n  onChange: (value: number) => void;\n  rangeCount: number;\n};\n\nconst RangeSliderWithMarks: FC<OwnProps> = ({ marks, onChange, rangeCount }) => {\n  // eslint-disable-next-line no-null/no-null\n  const sliderRef = useRef<HTMLInputElement | null>(null);\n\n  const rangeCountIndex = useMemo(() => marks.indexOf(rangeCount), [marks, rangeCount]);\n\n  const rangeValue = useMemo(() => {\n    return marks.indexOf(rangeCount).toString();\n  }, [marks, rangeCount]);\n\n  useLayoutEffect(() => {\n    if (sliderRef.current) {\n      const fillPercentage = (rangeCountIndex / (marks.length - 1)) * 100;\n      const thumbOffset = fillPercentage / 2;\n      sliderRef.current.style.setProperty('--fill-percentage', `${fillPercentage}%`);\n      sliderRef.current.style.setProperty('--thumb-offset', `${thumbOffset}%`);\n    }\n  }, [rangeCountIndex, marks]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const index = parseInt(event.target.value, 10);\n    const newValue = marks[index];\n    onChange(newValue);\n  };\n\n  return (\n    <div className={styles.dotWrapper}>\n      <form>\n        <div className={styles.sliderContainer}>\n          <div className={styles.tickMarks}>\n            {marks.map((mark, index) => {\n              const isFilled = index <= rangeCountIndex;\n              return (\n                <div\n                  key={mark}\n                  className={buildClassName(\n                    styles.tick,\n                    isFilled ? styles.filled : styles.tickUnfilled,\n                  )}\n                />\n              );\n            })}\n          </div>\n          <div className={styles.marksContainer}>\n            {marks.map((mark) => (\n              <div\n                key={mark}\n                className={buildClassName(styles.mark, rangeCount === mark && styles.active)}\n              >\n                {mark}\n              </div>\n            ))}\n          </div>\n          <input\n            ref={sliderRef}\n            type=\"range\"\n            className={styles.slider}\n            min=\"0\"\n            max={marks.length - 1}\n            value={rangeValue}\n            onChange={handleChange}\n            step=\"1\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(RangeSliderWithMarks);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useOldLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eldglPwL\",\"svg\":\"xhUfxjkV\",\"circle\":\"hsaty2zA\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatCountdownShort } from '../../util/dates/dateFormat';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\n\nimport styles from './RoundTimer.module.scss';\n\ntype OwnProps = {\n  duration: number;\n  className?: string;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 1000;\nconst TIMER_RADIUS = 14;\n\nconst RoundTimer = ({ duration, className, onEnd }: OwnProps) => {\n  const [timeLeft, setTimeLeft] = useState(duration);\n  const lang = useOldLang();\n\n  useInterval(\n    () => setTimeLeft((prev) => prev - 1),\n    timeLeft > 0 ? UPDATE_FREQUENCY : undefined,\n  );\n\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      onEnd?.();\n    }\n  }, [timeLeft, onEnd]);\n\n  useEffect(() => {\n    setTimeLeft(duration);\n  }, [duration]);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.svg} width=\"32px\" height=\"32px\">\n        <circle\n          cx=\"16\"\n          cy=\"16\"\n          r={TIMER_RADIUS}\n          transform=\"rotate(-90, 16, 16)\"\n          pathLength=\"100\"\n          stroke-dasharray=\"100\"\n          stroke-dashoffset={100 - ((timeLeft - 1) / duration) * 100} // Show it one step further due to animation\n          className={styles.circle}\n        />\n      </svg>\n      <AnimatedCounter className={styles.text} text={formatCountdownShort(lang, timeLeft * 1000)} />\n    </div>\n  );\n};\n\nexport default memo(RoundTimer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\nimport { isLangFnParam } from '../../util/localization/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { REM } from '../common/helpers/mediaDimensions';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmoji from '../common/CustomEmoji';\nimport Icon from '../common/icons/Icon';\nimport StarIcon from '../common/icons/StarIcon';\nimport Button from './Button';\nimport Portal from './Portal';\nimport RoundTimer from './RoundTimer';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  notification: ApiNotification;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\nconst CUSTOM_EMOJI_SIZE = 1.75 * REM;\n\nconst Notification: FC<OwnProps> = ({\n  notification,\n}) => {\n  const actions = getActions();\n\n  const lang = useLang();\n\n  const {\n    localId,\n    message,\n    action,\n    actionText,\n    cacheBreaker,\n    className,\n    disableClickDismiss,\n    dismissAction,\n    duration = DEFAULT_DURATION,\n    icon,\n    shouldUseCustomIcon,\n    customEmojiIconId,\n    shouldShowTimer,\n    title,\n    containerSelector,\n  } = notification;\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  const handleDismiss = useLastCallback(() => {\n    actions.dismissNotification({ localId });\n  });\n\n  const closeAndDismiss = useLastCallback((force?: boolean) => {\n    if (!force && disableClickDismiss) return;\n    setIsOpen(false);\n    setTimeout(handleDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    if (dismissAction) {\n      // @ts-ignore\n      actions[dismissAction.action](dismissAction.payload);\n    }\n  });\n\n  const handleActionClick = useLastCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    if (disableClickDismiss) {\n      setIsOpen(false);\n      setTimeout(handleDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    }\n    closeAndDismiss();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    closeAndDismiss();\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(() => closeAndDismiss(true), duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, cacheBreaker]); // Reset timer if `cacheBreaker` changes\n\n  const handleMouseEnter = useLastCallback(() => {\n    if (disableClickDismiss) return;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    if (disableClickDismiss) return;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  });\n\n  const renderedTitle = useMemo(() => {\n    if (!title) return undefined;\n    if (isLangFnParam(title)) {\n      return lang.with(title);\n    }\n\n    return renderText(title, ['simple_markdown', 'emoji', 'br', 'links']);\n  }, [lang, title]);\n\n  const renderedMessage = useMemo(() => {\n    if (isLangFnParam(message)) {\n      return lang.with(message);\n    }\n\n    if (typeof message === 'string') {\n      return renderText(message, ['simple_markdown', 'emoji', 'br', 'links']);\n    }\n\n    return message;\n  }, [lang, message]);\n\n  const renderedActionText = useMemo(() => {\n    if (!actionText) return undefined;\n    if (isLangFnParam(actionText)) {\n      return lang.with(actionText);\n    }\n\n    return actionText;\n  }, [lang, actionText]);\n\n  const renderedIcon = useMemo(() => {\n    if (customEmojiIconId) {\n      return (\n        <CustomEmoji\n          className=\"notification-emoji-icon\"\n          forceAlways\n          size={CUSTOM_EMOJI_SIZE}\n          documentId={customEmojiIconId}\n        />\n      );\n    }\n\n    if (shouldUseCustomIcon) {\n      if (icon === 'star') {\n        return (\n          <StarIcon type=\"gold\" className={buildClassName('notification-icon')} size=\"adaptive\" />\n        );\n      }\n    }\n    return <Icon name={icon || 'info-filled'} className=\"notification-icon\" />;\n  }, [customEmojiIconId, icon, shouldUseCustomIcon]);\n\n  return (\n    <Portal className=\"Notification-container\" containerSelector={containerSelector}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {renderedIcon}\n        <div className=\"content\">\n          {renderedTitle && (\n            <div className=\"notification-title\">{renderedTitle}</div>\n          )}\n          {renderedMessage}\n        </div>\n        {renderedActionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleActionClick}\n            className=\"notification-button\"\n          >\n            {renderedActionText}\n          </Button>\n        )}\n        {shouldShowTimer && (\n          <RoundTimer className=\"notification-timer\" key={cacheBreaker} duration={Math.ceil(duration / 1000)} />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport RippleEffect from './RippleEffect';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: IconName;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: IconName;\n  iconClassName?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: IconName;\n  secondaryIconClassName?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  withPrimaryColor?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  allowSelection?: boolean;\n  withColorTransition?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  menuBubbleClassName?: string;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n  nonInteractive?: boolean;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  iconClassName,\n  leftElement,\n  buttonClassName,\n  menuBubbleClassName,\n  secondaryIcon,\n  secondaryIconClassName,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  withPrimaryColor,\n  multiline,\n  isStatic,\n  allowSelection,\n  withColorTransition,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n  nonInteractive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useOldLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    allowSelection && 'allow-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuAnchor && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    withPrimaryColor && 'primary',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n    withColorTransition && 'with-color-transition',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {leftElement}\n        {icon && (\n          <Icon name={icon} className={buildClassName('ListItem-main-icon', iconClassName)} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {secondaryIcon && (\n          <Button\n            nonInteractive={nonInteractive}\n            className={buildClassName('secondary-icon', secondaryIconClassName)}\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <Icon name={secondaryIcon} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"ListItem-context-menu with-menu-transitions\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n          bubbleClassName={menuBubbleClassName}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                <span className=\"list-item-ellipsis\">\n                  {renderText(action.title)}\n                </span>\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { IS_ANDROID, IS_IOS } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: TeactNode;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  className?: string;\n  tabClassName?: string;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, onSwitchTab,\n  contextRootElementSelector, className, tabClassName,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePreviousDeprecated(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useOldLang();\n\n  return (\n    <div\n      className={buildClassName('TabList', 'no-scrollbar', className)}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id}\n          title={tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n          className={tabClassName}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Y3ZoW17O\",\"default\":\"DWjOG2Ze\",\"alternate\":\"Lq67O2D2\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { ChangeEvent, MouseEventHandler } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  label?: TeactNode;\n  subLabel?: TeactNode;\n  value?: string;\n  checked?: boolean;\n  disabled?: boolean;\n  isCanCheckedInDisabled?: boolean;\n  isLink?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  withIcon?: boolean;\n  className?: string;\n  onlyInput?: boolean;\n  subLabelClassName?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSubLabelClick?: MouseEventHandler<HTMLSpanElement> | undefined;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  subLabelClassName,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  className,\n  onlyInput,\n  withIcon,\n  isLink,\n  onChange,\n  onSubLabelClick,\n  isCanCheckedInDisabled,\n}) => {\n  const lang = useOldLang();\n\n  const fullClassName = buildClassName(\n    'Radio',\n    className,\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    withIcon && 'with-icon',\n    isLoading && 'loading',\n    onlyInput && 'onlyInput',\n    Boolean(subLabel) && 'withSubLabel',\n    isCanCheckedInDisabled && 'canCheckedInDisabled',\n  );\n\n  return (\n    <label className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel\n          && (\n            <span\n              className={buildClassName(subLabelClassName, 'subLabel', isLink ? 'subLabelLink' : undefined)}\n              dir={lang.isRtl ? 'auto' : undefined}\n              onClick={isLink ? onSubLabelClick : undefined}\n            >\n              {subLabel}\n            </span>\n          )}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../hooks/useShowTransition';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.RefObject<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref: externalRef,\n}) => {\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const prevChildren = usePreviousDeprecated(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n\n  const { ref, shouldRender } = useShowTransition({\n    isOpen: isOpen && !isHidden,\n    ref: externalRef,\n    noMountTransition: isFirstRender && !shouldAnimateFirstRender,\n    className: isCustom ? false : undefined,\n    noCloseTransition,\n    withShouldRender: true,\n  });\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={className}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","// extracted by mini-css-extract-plugin\nexport default {\"separator\":\"LxlpQKLr\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './Separator.module.scss';\n\ntype OwnProps = {\n  children?: React.ReactNode;\n  className?: string;\n};\n\nfunction Separator({ children, className }: OwnProps) {\n  const lang = useOldLang();\n\n  return (\n    <div\n      dir={lang.isRtl ? 'rtl' : undefined}\n      className={buildClassName(styles.separator, className)}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Separator;\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { MouseButton } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport AISearchTab from '../chatAssistant/assets/ai-search-tab.png';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Icon from '../common/icons/Icon';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: TeactNode;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuAnchor, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {typeof title === 'string' ? title === 'AI' ? (\n          <div className=\"flex items-center justify-center w-[30px] h-[24px]\">\n            <img className=\"w-[30px] h-[16px]\" src={AISearchTab} alt=\"ai\" />\n          </div>\n        ) : renderText(title) : title}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <Icon name=\"lock-badge\" className=\"blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { animate, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useDevicePixelRatio from '../../hooks/window/useDevicePixelRatio';\n\nimport Icon from '../common/icons/Icon';\n\nimport './ProgressSpinner.scss';\n\nconst SIZES = {\n  s: 42, m: 48, l: 54, xl: 52,\n};\nconst STROKE_WIDTH = 2;\nconst STROKE_WIDTH_XL = 3;\nconst PADDING = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\nconst GROW_DURATION = 600; // 0.6 s\nconst ROTATE_DURATION = 2000; // 2 s\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  rotationOffset?: number;\n  withColor?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  rotationOffset,\n  withColor,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const width = SIZES[size];\n  const progressRef = useStateRef(progress);\n\n  const dpr = useDevicePixelRatio();\n\n  const color = useDynamicColorListener(canvasRef, undefined, !withColor);\n\n  useEffect(() => {\n    let isFirst = true;\n    let growFrom = MIN_PROGRESS;\n    let growStartedAt: number | undefined;\n    let prevProgress: number | undefined;\n\n    animate(() => {\n      if (!canvasRef.current) {\n        return false;\n      }\n\n      if (progressRef.current !== prevProgress) {\n        growFrom = Math.min(Math.max(MIN_PROGRESS, prevProgress || 0), MAX_PROGRESS);\n        growStartedAt = Date.now();\n        prevProgress = progressRef.current;\n      }\n\n      const targetProgress = Math.min(Math.max(MIN_PROGRESS, progressRef.current), MAX_PROGRESS);\n      const t = Math.min(1, (Date.now() - growStartedAt!) / GROW_DURATION);\n      const animationFactor = timingFunctions.easeOutQuad(t);\n      const currentProgress = growFrom + (targetProgress - growFrom) * animationFactor;\n\n      drawSpinnerArc(\n        canvasRef.current,\n        width * dpr,\n        (size === 'xl' ? STROKE_WIDTH_XL : STROKE_WIDTH) * dpr,\n        color ?? 'white',\n        currentProgress,\n        dpr,\n        isFirst,\n        rotationOffset,\n      );\n\n      isFirst = false;\n\n      return currentProgress < 1;\n    }, requestMutation);\n  }, [progressRef, size, width, dpr, rotationOffset, color]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={onClick}\n    >\n      {!noCross && <Icon name=\"close\" />}\n      <canvas ref={canvasRef} className=\"ProgressSpinner_canvas\" style={`width: ${width}; height: ${width}px;`} />\n    </div>\n  );\n};\n\nfunction drawSpinnerArc(\n  canvas: HTMLCanvasElement,\n  size: number,\n  strokeWidth: number,\n  color: string,\n  progress: number,\n  dpr: number,\n  shouldInit = false,\n  rotationOffset?: number,\n) {\n  const centerCoordinate = size / 2;\n  const radius = (size - strokeWidth) / 2 - PADDING * dpr;\n  const offset = rotationOffset ?? (Date.now() % ROTATE_DURATION) / ROTATE_DURATION;\n  const startAngle = (2 * Math.PI) * offset;\n  const endAngle = startAngle + (2 * Math.PI) * progress;\n  const ctx = canvas.getContext('2d')!;\n\n  if (shouldInit) {\n    canvas.width = size;\n    canvas.height = size;\n\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = strokeWidth;\n  }\n\n  ctx.clearRect(0, 0, size, size);\n  ctx.beginPath();\n  ctx.arc(centerCoordinate, centerCoordinate, radius, startAngle, endAngle);\n  ctx.stroke();\n}\n\nexport default memo(ProgressSpinner);\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Loading from './Loading';\nimport Transition from './Transition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  resultsItemSelector?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  hasUpButton?: boolean;\n  hasDownButton?: boolean;\n  teactExperimentControlled?: boolean;\n  withBackIcon?: boolean;\n  onChange: (value: string) => void;\n  onStartBackspace?: NoneToVoidFunction;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n  onUpClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onDownClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  resultsItemSelector,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading = false,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  hasUpButton,\n  hasDownButton,\n  teactExperimentControlled,\n  withBackIcon,\n  onChange,\n  onStartBackspace,\n  onReset,\n  onFocus,\n  onBlur,\n  onClick,\n  onUpClick,\n  onDownClick,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n\n    if (!isInputFocused) {\n      handleFocus();\n    }\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    onFocus?.();\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    onBlur?.();\n  }\n\n  const handleKeyDown = useLastCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (!resultsItemSelector) return;\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(resultsItemSelector) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n\n    if (e.key === 'Backspace' && e.currentTarget.selectionStart === 0 && e.currentTarget.selectionEnd === 0) {\n      onStartBackspace?.();\n    }\n  });\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      onClick={onClick}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(!isLoading && !withBackIcon)}\n        className=\"icon-container-left\"\n        slideClassName=\"icon-container-slide\"\n      >\n        { isLoading && !withBackIcon ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : withBackIcon ? (\n          <Icon name=\"arrow-left\" className=\"back-icon\" onClick={onReset} />\n        ) : (\n          <Icon name=\"search\" className=\"search-icon\" />\n        )}\n      </Transition>\n      <div>{children}</div>\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || oldLang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        teactExperimentControlled={teactExperimentControlled}\n      />\n      {hasUpButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onUpClick}\n          disabled={!onUpClick}\n          ariaLabel={lang('AriaSearchOlderResult')}\n        >\n          <Icon name=\"up\" />\n        </Button>\n      )}\n      {hasDownButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onDownClick}\n          disabled={!onDownClick}\n          ariaLabel={lang('AriaSearchNewerResult')}\n        >\n          <Icon name=\"down\" />\n        </Button>\n      )}\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(isLoading)}\n        className=\"icon-container-right\"\n        slideClassName=\"icon-container-slide\"\n      >\n        {withBackIcon && isLoading ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : (\n          (value || canClose) && onReset && (\n            <Button\n              round\n              size=\"tiny\"\n              color=\"translucent\"\n              onClick={onReset}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          )\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Icon from '../common/icons/Icon';\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <Icon name=\"camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} draggable={false} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","import type { RefObject, UIEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { LoadMoreDirection } from '../../types';\n\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID } from '../../util/browser/windowEnvironment';\nimport buildStyle from '../../util/buildStyle';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce } from '../../util/schedulers';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  scrollContainerClosest?: string;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onWheel?: (e: React.WheelEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  scrollContainerClosest,\n  onLoadMore,\n  onScroll,\n  onWheel,\n  onClick,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n    if (!loadMoreBackwards || !scrollContainer) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = scrollContainer;\n    if (clientHeight && scrollHeight < clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards, scrollContainerClosest]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n\n    const container = containerRef.current!;\n\n    requestForcedReflow(() => {\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = scrollContainer;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = scrollContainer;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(scrollContainer, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [\n    items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning,\n    scrollContainerClosest,\n  ]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const scrollContainer = scrollContainerClosest\n        ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n        : containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = scrollContainer;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n    if (!scrollContainer) return undefined;\n\n    const handleNativeScroll = (e: Event) => handleScroll(e as unknown as UIEvent<HTMLDivElement>);\n\n    scrollContainer.addEventListener('scroll', handleNativeScroll);\n\n    return () => {\n      scrollContainer.removeEventListener('scroll', handleNativeScroll);\n    };\n  }, [handleScroll, scrollContainerClosest]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onWheel={onWheel}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onClick={onClick}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = buildStyle(\n    forceAspectRatio && aspectRatio,\n    Boolean(width) && `width: ${width}px`,\n    !forceAspectRatio && Boolean(height) && `height: ${height}px`,\n  );\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <Icon name=\"down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"h039vb1K\",\"thin\":\"NGKaFgra\",\"thick\":\"_BdnjPEa\"};","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'thin' | 'thick';\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className, size = 'thin' }) => {\n  return (\n    <div className={buildClassName(styles.root, styles[size], className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import React, { type FC, memo, useEffect } from '../../lib/teact/teact';\n\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useOldLang from '../../hooks/useOldLang';\n\ntype OwnProps = {\n  langKey: string;\n  endsAt: number;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 500; // Sometimes second gets skipped if using 1000\n\nconst TextTimer: FC<OwnProps> = ({ langKey, endsAt, onEnd }) => {\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const serverTime = getServerTime();\n  const isActive = serverTime < endsAt;\n  useInterval(forceUpdate, isActive ? UPDATE_FREQUENCY : undefined);\n\n  useEffect(() => {\n    if (!isActive) {\n      onEnd?.();\n    }\n  }, [isActive, onEnd]);\n\n  if (!isActive) return undefined;\n\n  const timeLeft = endsAt - serverTime;\n  const formattedTime = formatMediaDuration(timeLeft);\n\n  return (\n    <span>\n      {lang(langKey, formattedTime)}\n    </span>\n  );\n};\n\nexport default memo(TextTimer);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default ResponsiveHoverButton;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToDataUri, blobToFile } from '../../util/files';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Loading from './Loading';\nimport Modal from './Modal';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title={lang('CropperTitle')}\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropperApply')}\n      >\n        <Icon name=\"check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\n\nimport type { ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n  nestedOptions?: IRadioOption[];\n  user?: ApiUser;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  nestedCheckbox?: boolean;\n  loadingOptions?: string[];\n  isRound?: boolean;\n  onChange: (value: string[]) => void;\n  className?: string;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  nestedCheckbox,\n  loadingOptions,\n  isRound,\n  onChange,\n  className,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useLastCallback((event: ChangeEvent<HTMLInputElement>, nestedOptionList?: IRadioOption) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n\n    if (checked) {\n      newValues = [...values, value];\n      if (nestedOptionList && value) {\n        newValues.push(nestedOptionList.value);\n      }\n      if (nestedOptionList && value === nestedOptionList.value) {\n        nestedOptionList.nestedOptions?.forEach((nestedOption) => {\n          if (!newValues.includes(nestedOption.value)) {\n            newValues.push(nestedOption.value);\n          }\n        });\n      }\n    } else {\n      newValues = values.filter((v) => v !== value);\n      if (nestedOptionList && value === nestedOptionList.value) {\n        nestedOptionList.nestedOptions?.forEach((nestedOption) => {\n          newValues = newValues.filter((v) => v !== nestedOption.value);\n        });\n      } else if (nestedOptionList) {\n        const nestedOptionValues = nestedOptionList.nestedOptions?.map((nestedOption) => nestedOption.value) || [];\n        const hasOtherNestedValuesChecked = nestedOptionValues.some((nestedValue) => newValues.includes(nestedValue));\n        if (!hasOtherNestedValuesChecked) {\n          newValues = newValues.filter((v) => v !== nestedOptionList.value);\n        }\n      }\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  });\n  const getCheckedNestedCount = useLastCallback((nestedOptions: IRadioOption[]) => {\n    const checkedCount = nestedOptions?.filter((nestedOption) => values.includes(nestedOption.value)).length;\n    return checkedCount > 0 ? checkedCount : nestedOptions.length;\n  });\n\n  return (\n    <div id={id} className={buildClassName('radio-group', className)}>\n      {options.map((option) => {\n        return (\n          <Checkbox\n            label={option.label}\n            subLabel={option.subLabel}\n            value={option.value}\n            checked={selected.indexOf(option.value) !== -1}\n            disabled={option.disabled || disabled}\n            isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n            onChange={handleChange}\n            nestedCheckbox={nestedCheckbox}\n            nestedCheckboxCount={getCheckedNestedCount(option.nestedOptions ?? [])}\n            nestedOptionList={option}\n            values={values}\n            isRound={isRound}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kWQHzIMD\",\"isDragging\":\"k0c5WDAy\",\"knob\":\"UpzQzcvs\",\"icon\":\"JIThxQAL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\n\nimport styles from './Draggable.module.scss';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getClientCoordinate(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getClientCoordinate(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <Icon name=\"sort\" className={styles.icon} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n\nfunction getClientCoordinate(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  let x;\n  let y;\n\n  if ('touches' in e) {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  return { x, y };\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => TeactNode;\n  onChange: (value: number) => void;\n  isCenteredLayout?: boolean;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  readOnly,\n  bold,\n  className,\n  renderValue,\n  onChange,\n  isCenteredLayout,\n}) => {\n  const lang = useOldLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    readOnly && 'readOnly',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  function renderTopRow() {\n    if (isCenteredLayout) {\n      return (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {!options && (\n            <>\n              <span className=\"value-min\" dir=\"auto\">{min}</span>\n              <span className=\"label\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n              <span className=\"value-max\" dir=\"auto\">{max}</span>\n            </>\n          )}\n        </div>\n      );\n    }\n\n    if (!label) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"label\" dir=\"auto\">{label}</span>\n        {!options && (\n          <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={mainClassName}>\n      {renderTopRow()}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"axfkbhWJ\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { openSystemFilesDialog } from '../../util/systemFilesDialog';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: RefObject<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    openSystemFilesDialog('image/png, image/jpeg', ((event) => {\n      const target = event.target as HTMLInputElement;\n      if (!target?.files?.[0]) {\n        return;\n      }\n      setSelectedFile(target.files[0]);\n    }), true);\n  }, []);\n\n  return (\n    <>\n      <input ref={inputRef} className={styles.input} onClick={handleClick} />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useOldLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  const resizeHeight = useLastCallback((element: HTMLTextAreaElement) => {\n    requestMutation(() => {\n      element.style.height = '0';\n      requestForcedReflow(() => {\n        const newHeight = element.scrollHeight;\n        return () => {\n          element.style.height = `${newHeight}px`;\n        };\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    resizeHeight(textarea);\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    const target = e.currentTarget;\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = target.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      target.value = target.value.replace(/\\n/g, ' ');\n      target.selectionEnd = previousSelectionEnd;\n    }\n    resizeHeight(target);\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n  title?: string;\n  noDefaultTitle?: boolean;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: TeactNode;\n  confirmIsDestructive?: boolean;\n  isConfirmDisabled?: boolean;\n  isOnlyConfirm?: boolean;\n  areButtonsInColumn?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  confirmHandler: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  title,\n  noDefaultTitle,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmIsDestructive,\n  isConfirmDisabled,\n  isOnlyConfirm,\n  areButtonsInColumn,\n  className,\n  children,\n  confirmHandler,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm', className)}\n      title={(title || (!noDefaultTitle ? lang('Telegram') : undefined))}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n          disabled={isConfirmDisabled}\n        >\n          {confirmLabel}\n        </Button>\n        {!isOnlyConfirm && <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n"],"names":["memo","PlaceholderChatInfo","React","createElement","className","buildClassName","styles","value","root","filler","widget","RadioGroup","id","name","options","selected","disabled","loadingOption","onChange","onClickAction","subLabelClassName","isLink","withIcon","subLabel","handleChange","useCallback","event","currentTarget","onSubLabelClick","useLastCallback","map","option","Radio","label","checked","hidden","isCanCheckedInDisabled","isLoading","undefined","ANIMATION_DURATION","freezeWhenClosed","Modal","dialogRef","title","contentClassName","headerClassName","isOpen","isSlim","header","hasCloseButton","hasAbsoluteCloseButton","absoluteCloseButtonColor","noBackdrop","noBackdropClose","children","style","dialogStyle","isLowStackPriority","dialogContent","onClose","onCloseAnimationEnd","onEnter","ref","modalRef","shouldRender","useShowTransition","withShouldRender","withCloseButton","useEffect","disableDirectTextInput","enableDirectTextInput","handleEnter","e","preventDefault","captureKeyboardListeners","onEsc","current","trapFocus","useHistoryBack","isActive","onBack","useLayoutEffectWithPrevDeps","prevIsOpen","document","body","classList","toggle","Boolean","beginHeavyAnimation","remove","lang","useOldLang","fullClassName","Portal","tabIndex","role","onClick","closeButton","Button","round","color","size","ariaLabel","Icon","renderHeader","RangeSliderWithMarks","marks","rangeCount","sliderRef","useRef","rangeCountIndex","useMemo","indexOf","rangeValue","toString","useLayoutEffect","fillPercentage","length","thumbOffset","setProperty","mark","index","isFilled","key","type","min","max","parseInt","target","newValue","step","FloatingActionButton","isShown","buttonClassName","isRtl","RoundTimer","duration","onEnd","timeLeft","setTimeLeft","useState","useInterval","prev","svg","width","height","cx","cy","r","transform","pathLength","circle","AnimatedCounter","text","formatCountdownShort","DEFAULT_DURATION","CUSTOM_EMOJI_SIZE","REM","Notification","notification","actions","getActions","useLang","localId","message","action","actionText","cacheBreaker","disableClickDismiss","dismissAction","icon","shouldUseCustomIcon","customEmojiIconId","shouldShowTimer","containerSelector","setIsOpen","timerRef","transitionClassNames","useShowTransitionDeprecated","handleDismiss","dismissNotification","closeAndDismiss","force","setTimeout","ANIMATION_END_DELAY","payload","handleActionClick","Array","isArray","forEach","cb","handleClick","captureEscKeyListener","window","clearTimeout","handleMouseEnter","handleMouseLeave","renderedTitle","isLangFnParam","with","renderText","renderedMessage","renderedActionText","renderedIcon","CustomEmoji","forceAlways","documentId","StarIcon","onMouseEnter","onMouseLeave","Math","ceil","ListItem","buttonRef","iconClassName","leftElement","menuBubbleClassName","secondaryIcon","secondaryIconClassName","rightElement","allowDisabledClick","ripple","narrow","inactive","focus","destructive","withPrimaryColor","multiline","isStatic","allowSelection","withColorTransition","contextActions","withPortalForMenu","href","onMouseDown","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","nonInteractive","containerRef","isTouched","markIsTouched","unmarkIsTouched","useFlag","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","getLayout","withPortal","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","Main","Auxiliary","IS_TOUCH_ENV","requestMeasure","handleSecondaryIconClick","handleMouseDown","handleSecondaryIconMouseDown","useFastClick","stopPropagation","Secondary","ButtonElementTag","dir","RippleEffect","Menu","anchor","autoClose","bubbleClassName","MenuSeparator","MenuItem","handler","SCROLL_DURATION","IS_IOS","IS_ANDROID","TabList","tabs","activeTab","onSwitchTab","contextRootElementSelector","tabClassName","previousActiveTab","usePreviousDeprecated","useHorizontalScroll","container","scrollWidth","offsetWidth","scrollLeft","activeTabElement","childNodes","offsetLeft","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","abs","animateHorizontalScroll","tab","i","Tab","isBlocked","badgeCount","isBadgeActive","Badge","isAlternateColor","ShowTransition","onlyInput","Spinner","isHidden","isCustom","noCloseTransition","shouldAnimateFirstRender","externalRef","prevChildren","fromChildrenRef","isFirstRender","noMountTransition","classNames","tabRef","add","tabEl","prevTabEl","parentElement","contains","requestMutation","platformEl","prevPlatformEl","shiftLeft","scaleFactor","clientWidth","requestForcedReflow","forceReflow","src","AISearchTab","alt","SIZES","s","m","l","xl","MIN_PROGRESS","ProgressSpinner","progress","square","transparent","noCross","rotationOffset","withColor","canvasRef","progressRef","useStateRef","dpr","useDevicePixelRatio","useDynamicColorListener","growStartedAt","prevProgress","isFirst","growFrom","animate","Date","now","targetProgress","t","animationFactor","timingFunctions","easeOutQuad","currentProgress","canvas","strokeWidth","shouldInit","centerCoordinate","radius","offset","startAngle","PI","endAngle","ctx","getContext","lineCap","strokeStyle","lineWidth","clearRect","beginPath","arc","stroke","drawSpinnerArc","SearchInput","resultsItemSelector","inputId","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","canClose","autoFocusSearch","hasUpButton","hasDownButton","teactExperimentControlled","withBackIcon","onStartBackspace","onReset","onFocus","onBlur","onUpClick","onDownClick","onSpinnerClick","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","blur","oldLang","handleFocus","handleKeyDown","element","selectionStart","selectionEnd","Transition","shouldCleanup","activeKey","Number","slideClassName","Loading","backgroundColor","onKeyDown","AvatarEditable","isForForum","currentAvatarBlobUrl","selectedFile","setSelectedFile","croppedBlobUrl","setCroppedBlobUrl","handleAvatarCrop","croppedImg","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","files","accept","draggable","CropModal","file","InfiniteScroll","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","scrollContainerClosest","onLoadMore","onScroll","onWheel","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","direction","LoadMoreDirection","Backwards","Forwards","scrollContainer","scrollHeight","clientHeight","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","from","includes","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","handleNativeScroll","addEventListener","removeEventListener","teactFastList","buildStyle","Skeleton","variant","animation","forceAspectRatio","inline","aspectRatio","ShowMoreButton","count","itemName","itemPluralName","isText","TextTimer","langKey","endsAt","forceUpdate","useForceUpdate","serverTime","getServerTime","formattedTime","formatMediaDuration","Switcher","noAnimation","onCheck","props","hasArrow","error","labelText","htmlFor","openTimeout","isFirstTimeActivation","ResponsiveHoverButton","onActivate","buttonProps","isMouseInside","_extends","cropperResultOptions","quality","format","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","async","imgFile","cropContainer","getElementById","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","initCropper","default","ensureCroppie","then","handleCropClick","result","blobToFile","CheckboxGroup","nestedCheckbox","loadingOptions","isRound","values","setValues","nestedOptionList","newValues","push","nestedOptions","nestedOption","filter","v","some","nestedValue","getCheckedNestedCount","checkedCount","Checkbox","nestedCheckboxCount","ZERO_POINT","x","y","Draggable","onDrag","onDragEnd","externalStyle","knobStyle","isDisabled","setState","isDragging","origin","translation","getClientCoordinate","handleMouseMove","handleMouseUp","cssStyles","onTouchStart","touches","clientX","clientY","RangeSlider","readOnly","bold","renderValue","isCenteredLayout","mainClassName","trackWidth","Fragment","SelectAvatar","openSystemFilesDialog","TextArea","success","inputMode","maxLength","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","resizeHeight","newHeight","textarea","previousSelectionEnd","replace","ConfirmDialog","noDefaultTitle","textParts","confirmLabel","confirmIsDestructive","isConfirmDisabled","isOnlyConfirm","areButtonsInColumn","confirmHandler","handleSelectWithEnter","useKeyboardListNavigation","split","textPart"],"sourceRoot":""}