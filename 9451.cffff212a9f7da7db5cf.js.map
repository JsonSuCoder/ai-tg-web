{"version":3,"file":"9451.cffff212a9f7da7db5cf.js","mappings":"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","sources":["webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportAvatarModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.module.scss?b350","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.tsx","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.module.scss?8058","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.module.scss?77cd","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.module.scss?b66d","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.module.scss?4803","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.module.scss?843e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.module.scss?3c2e","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.tsx","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.module.scss?94bc","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.tsx","webpack://telegram-t/./src/components/modals/sharePreparedMessage/SharePreparedMessageModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/chatAssistant/ai-search/AISearchInput.tsx","webpack://telegram-t/./src/components/chatAssistant/ai-search/AISearch.tsx","webpack://telegram-t/./src/components/left/search/AISearchWrapper.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultSponsored.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/common/paidMessage/PaidMessageSlider.tsx","webpack://telegram-t/./src/components/common/paidMessage/PaidMessagePrice.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsAcceptedGift.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledgeEditor.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AddKnowledgeModal.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledgeContent.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledgeHeader.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledge.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AutoTranslateLanguage.module.scss?c18f","webpack://telegram-t/./src/components/left/aiTranslate/AutoTranslateLanguage.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AITranslateContent.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AITranslateHeader.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AITranslate.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/visibility/isFullyVisible.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.tsx","webpack://telegram-t/./src/components/modals/frozenAccount/FrozenAccountModal.tsx","webpack://telegram-t/./src/components/modals/frozenAccount/FrozenAccountModal.module.scss?86e3","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.type === 'chatEditPhoto' || action?.type === 'suggestProfilePhoto') {\n    return {\n      media: action.photo!,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo, document: webPageDocument } = webPage;\n    const isDocumentMedia = webPageDocument && (isDocumentPhoto(webPageDocument) || isDocumentVideo(webPageDocument));\n    const mediaDocument = isDocumentMedia ? webPageDocument : undefined;\n    const media = webPageVideo || mediaDocument || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport stopEvent from '../../../util/stopEvent';\nimport getOffsetToContainer from '../../../util/visibility/getOffsetToContainer';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [\n      MediaViewerOrigin.Inline,\n      MediaViewerOrigin.ScheduledInline,\n      MediaViewerOrigin.Album,\n      MediaViewerOrigin.ScheduledAlbum,\n    ].includes(origin)\n    && !isMessageImageFullyVisible(toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n\n  const { top } = getOffsetToContainer(imageEl, messageListElement);\n\n  return top > messageListElement.scrollTop\n    && top + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ChannelAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n    case MediaViewerOrigin.ChannelAvatar:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { IS_IOS, IS_PWA } from '../util/browser/windowEnvironment';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  peerId?: string;\n  photo?: ApiPhoto;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportAvatarModal: FC<OwnProps> = ({\n  isOpen,\n  peerId,\n  photo,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { reportProfilePhoto } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    reportProfilePhoto({\n      chatId: peerId, photo, reason: selectedReason, description,\n    });\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (!peerId || !photo) {\n    return undefined;\n  }\n\n  const title = lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAvatarModal);\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ActiveDownloads, MediaViewerOrigin, MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow, selectCurrentChat,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  chat?: ApiChat;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  chat,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <Icon name=\"download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <Icon name=\"download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message' && chat) {\n      openDeleteMessageModal({\n        chatId: chat?.id,\n        messageIds: [item.message.id],\n        isSchedule: messageListType === 'scheduled',\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon as IconName}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <Icon name=\"zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <Icon name=\"zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <Icon name=\"flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <Icon name=\"copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const chat = selectCurrentChat(global);\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      chat,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport { IS_ANDROID, IS_IOS } from '../../util/browser/windowEnvironment';\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { IconName } from '../../types/icons';\n\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon: IconName = useMemo(() => {\n    if (volume === 0 || isMuted) return 'muted';\n    if (volume < 0.3) return 'volume-1';\n    if (volume < 0.6) return 'volume-2';\n    return 'volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <Icon name={isPlaying ? 'pause' : 'play'} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <Icon name={volumeIcon} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <Icon name=\"pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/browser/windowEnvironment';\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  timestamp?: number;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  timestamp,\n  handleSponsoredClick,\n  onClose,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  useEffect(() => {\n    if (!timestamp) return;\n    videoRef.current!.currentTime = timestamp;\n    setCurrentTime(timestamp);\n  }, [setCurrentTime, timestamp]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <Icon name=\"play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION } from '../../config';\nimport {\n  selectIsMessageProtected, selectMessageTimestampableDuration, selectTabState,\n} from '../../global/selectors';\nimport { ARE_WEBCODECS_SUPPORTED } from '../../util/browser/globalEnvironment';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalEffect } from '../../hooks/useSignalEffect';\nimport useThrottledCallback from '../../hooks/useThrottledCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  threadId?: ThreadId;\n  timestamp?: number;\n  maxTimestamp?: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\nconst PLAYBACK_SAVE_INTERVAL = 1000;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  threadId,\n  timestamp,\n  maxTimestamp,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const { updateLastPlaybackTimestamp } = getActions();\n\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n  const [getCurrentTime] = useCurrentTimeSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const updatePlaybackTimestamp = useThrottledCallback(() => {\n    if (!isActive || !textMessage || media?.mediaType !== 'video') return;\n    if (media.duration < MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION) return;\n\n    const message = 'id' in textMessage ? textMessage : undefined;\n    const currentTime = getCurrentTime();\n    if (!currentTime || !message || message.isInAlbum) return;\n\n    // Reset timestamp if we are close to the end of the video\n    const newTimestamp = media.duration - currentTime > PLAYBACK_SAVE_INTERVAL / 1000 ? currentTime : undefined;\n    updateLastPlaybackTimestamp({ chatId: message.chatId, messageId: message.id, timestamp: newTimestamp });\n  }, [getCurrentTime, isActive, media, textMessage], PLAYBACK_SAVE_INTERVAL);\n\n  useSignalEffect(updatePlaybackTimestamp, [getCurrentTime]);\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({\n      message: textMessage, maxTimestamp, threadId, forcePlayback: true, isForMediaViewer: true,\n    }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n          timestamp={timestamp}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n      timestamp,\n      threadId,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    const maxTimestamp = message && selectMessageTimestampableDuration(global, message, true);\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n      threadId,\n      timestamp,\n      maxTimestamp,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getPeerTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Icon from '../common/icons/Icon';\nimport ReportAvatarModal from '../common/ReportAvatarModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsored,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target instanceof HTMLElement && e.target.closest('a')) return; // Prevent closing on timestamp click\n\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsored({ isMedia: isFromMedia, isFullscreen: true, randomId: sponsoredMessage.randomId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportAvatarModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport stopEvent from '../../../util/stopEvent';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <Icon name=\"eye-crossed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-past\" className={styles.icon} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-future\" className={styles.icon} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...selectedIds || [], ...contactIds], query: searchQuery, type: 'user' }));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...closeFriendIds, ...contactIds], query: searchQuery, type: 'user' }));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPrivacySettings, ApiStory, ApiUser, PrivacyVisibility,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getHours } from '../../util/dates/units';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getPeerTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? getHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <Icon name={option.icon} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <Icon name=\"next\" />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  isUserId,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { isChatChannel, isUserId } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectChat,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativePastTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  arePeerSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n  paidMessagesStars?: number;\n  isAccountFrozen?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  arePeerSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n  paidMessagesStars,\n  isAccountFrozen,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadPeerSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory && !isAccountFrozen;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !arePeerSettingsLoaded) {\n      loadPeerSettings({ peerId });\n    }\n  }, [arePeerSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getPeerTitle(oldLang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = oldLang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = oldLang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = oldLang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: oldLang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: oldLang('StealthModeOn'),\n        message: oldLang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: oldLang('StoryNotFound'),\n    });\n  }, [oldLang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={oldLang('AccDescrOpenMenu2')}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      );\n    };\n  }, [isMobile, oldLang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon: IconName = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <Icon name={privacyIcon} />\n        {isOut && <Icon name=\"next\" />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getPeerTitle(oldLang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getPeerTitle(oldLang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativePastTime(oldLang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{oldLang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={oldLang('Volume')}\n            >\n              <Icon name={(isMuted || noSound) ? 'speaker-muted-story' : 'speaker-story'} />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{oldLang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {oldLang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {oldLang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {oldLang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-crossed-outline\" onClick={handleOpenStealthModal}>\n                {oldLang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{oldLang('lng_report_story')}</MenuItem>}\n            {isOut && (\n              <MenuItem\n                icon=\"delete\"\n                destructive\n                onClick={handleDeleteStoryClick}\n              >{oldLang('Delete')}\n              </MenuItem>\n            )}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={oldLang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const inputPlaceholder = paidMessagesStars\n    ? lang('ComposerPlaceholderPaidReply', {\n      amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n    }, {\n      withNodes: true,\n    })\n    : oldLang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately');\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={oldLang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={oldLang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getPeerTitle(oldLang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={oldLang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={inputPlaceholder}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const userFullInfo = selectUserFullInfo(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n    reportModal,\n    giftInfoModal,\n    isPaymentMessageConfirmDialogOpen,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    isPaymentMessageConfirmDialogOpen\n    || viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || reportModal || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal || giftInfoModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n  const paidMessagesStars = selectPeerPaidMessagesStars(global, peerId);\n  const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    arePeerSettingsLoaded: Boolean(userFullInfo?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n    paidMessagesStars,\n    isAccountFrozen,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getStoryMediaHash } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <Icon name={areReactionsFirst ? 'heart-outline' : 'recent'} className={styles.iconSort} />\n        <Icon name=\"down\" className={styles.iconDown} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor, reportStory } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useLastCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  });\n\n  const handleCloseDeleteModal = useLastCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  });\n\n  const openMessageReport = useLastCallback(() => {\n    if (!storyId) return;\n    reportStory({ storyId, peerId });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openMessageReport}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterPeersByQuery } from '../../global/helpers/peers';\nimport {\n  filterChatIdsByType, selectChat, selectChatFullInfo, selectUser,\n} from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n\n    const peerIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = selectChat(global, id);\n      const user = selectUser(global, id);\n      if (user && !isDeletedUser(user)) return true;\n\n      const chatFullInfo = selectChatFullInfo(global, id);\n\n      return chat && (!chatFullInfo || getCanPostInChat(chat, undefined, undefined, chatFullInfo));\n    });\n\n    const sorted = sortChatIds(\n      filterPeersByQuery({\n        ids: unique([\n          ...(currentUserId ? [currentUserId] : []),\n          ...peerIds,\n          ...(contactIds || []),\n        ]),\n        query: search,\n      }),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: contactRequest,\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification key={notification.localId} notification={notification} />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/browser/url';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (!url) {\n      return;\n    }\n\n    window.open(ensureProtocol(url), '_blank', 'noopener noreferrer');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlText', { url: renderingUrl }, { withNodes: true, withMarkdown: true }))}\n      confirmLabel={lang('OpenUrlConfirm')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { IS_IOS, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport { prepareMapUrl } from '../../../util/map';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else if (currentAuth?.url) {\n      window.open(ensureProtocol(currentAuth.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <Icon name=\"previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <Icon name=\"next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: OldLangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text NewContactModal__help-text__negative\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useSignal, useState,\n} from '../lib/teact/teact';\n\nimport type { Point, Size } from '../types';\n\nimport { RESIZE_HANDLE_SELECTOR } from '../config';\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport enum ResizeHandleType {\n  Top,\n  Bottom,\n  Left,\n  Right,\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n}\n\ntype ResizeHandleSelectorType = 'top' | 'bottom' | 'left'\n| 'right' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nconst resizeHandleSelectorsMap: Record<ResizeHandleSelectorType, ResizeHandleType> = {\n  top: ResizeHandleType.Top,\n  bottom: ResizeHandleType.Bottom,\n  left: ResizeHandleType.Left,\n  right: ResizeHandleType.Right,\n  topLeft: ResizeHandleType.TopLeft,\n  topRight: ResizeHandleType.TopRight,\n  bottomLeft: ResizeHandleType.BottomLeft,\n  bottomRight: ResizeHandleType.BottomRight,\n};\n\nconst resizeHandleSelectors = Object.keys(resizeHandleSelectorsMap) as ResizeHandleSelectorType[];\n\nlet resizeTimeout: number | undefined;\nconst FULLSCREEN_POSITION = { x: 0, y: 0 };\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isDragEnabled: boolean = true,\n  originalSize: Size,\n  isFullscreen: boolean = false,\n  minimumSize: Size = { width: 0, height: 0 },\n  cachedPosition?: Point,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(cachedPosition);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartTransform, setElementPositionOnStartTransform] = useSignal({ x: 0, y: 0 });\n  const [getElementSizeOnStartTransform, setElementSizeOnStartTransform] = useSignal({ width: 0, height: 0 });\n  const [getTransformStartPoint, setTransformStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartTransform = getElementPositionOnStartTransform();\n  const transformStartPoint = getTransformStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isResizing, startResizing, stopResizing] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  const [hitResizeHandle, setHitResizeHandle] = useState<ResizeHandleType | undefined>(undefined);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const updateCurrentPosition = useLastCallback((position: Point) => {\n    if (!isFullscreen) setElementCurrentPosition({ x: position.x, y: position.y });\n  });\n\n  const getActualPosition = useLastCallback(() => {\n    return isFullscreen ? FULLSCREEN_POSITION : elementCurrentPosition;\n  });\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      updateCurrentPosition(centeredPosition);\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  function getResizeHandleFromTarget(targetElement: HTMLElement) {\n    const closest = (selector: string) => targetElement.closest(selector);\n\n    if (!closest(RESIZE_HANDLE_SELECTOR)) return undefined;\n    for (const selector of resizeHandleSelectors) {\n      if (closest(`.${selector}`)) { return resizeHandleSelectorsMap[selector]; }\n    }\n    return undefined;\n  }\n\n  const handleStartResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (!element || !targetElement) {\n      return;\n    }\n    const resizeHandle = getResizeHandleFromTarget(targetElement);\n\n    if (resizeHandle === undefined) return;\n    setHitResizeHandle(resizeHandle);\n\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const {\n      left, right, top, bottom,\n    } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setElementSizeOnStartTransform({ width: right - left, height: bottom - top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startResizing();\n  });\n\n  const handleDragRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  const handleResizeRelease = useLastCallback(() => {\n    stopResizing();\n  });\n\n  useEffect(() => {\n    if (!isDragEnabled) {\n      stopDragging();\n    }\n  }, [isDragEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    if (isFullscreen) return;\n    const position = !wasElementShown && !cachedPosition ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    updateCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    const originalWidth = originalSize.width;\n    const originalHeight = originalSize.height;\n    newSize.width = Math.min(visibleArea.width, Math.max(originalWidth, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalHeight, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize, isResizing]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize || isResizing) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize, isResizing]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - transformStartPoint.x;\n    const offsetY = pageY - transformStartPoint.y;\n\n    const newX = elementPositionOnStartTransform.x + offsetX;\n    const newY = elementPositionOnStartTransform.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  const handleResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isResizing || !element || hitResizeHandle === undefined) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n    const sizeOnStartTransform = getElementSizeOnStartTransform();\n\n    const pageVisibleX = Math.min(Math.max(0, pageX), getVisibleArea().width);\n    const pageVisibleY = Math.min(Math.max(0, pageY), getVisibleArea().height);\n\n    const offsetX = pageVisibleX - transformStartPoint.x;\n    const offsetY = pageVisibleY - transformStartPoint.y;\n\n    const maxX = elementPositionOnStartTransform.x + sizeOnStartTransform.width - minimumSize.width;\n    const maxY = elementPositionOnStartTransform.y + sizeOnStartTransform.height - minimumSize.height;\n\n    const originalBounds = {\n      x: elementPositionOnStartTransform.x,\n      y: elementPositionOnStartTransform.y,\n      width: sizeOnStartTransform.width,\n      height: sizeOnStartTransform.height,\n    };\n\n    const newBounds = { ...originalBounds };\n\n    if (hitResizeHandle === ResizeHandleType.Left\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width - offsetX, minimumSize.width);\n      newBounds.x = Math.min(newBounds.x + offsetX, maxX);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Right\n    || hitResizeHandle === ResizeHandleType.TopRight\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width + offsetX, minimumSize.width);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Top\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.TopRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height - offsetY, minimumSize.height);\n      newBounds.y = Math.min(newBounds.y + offsetY, maxY);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Bottom\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height + offsetY, minimumSize.height);\n    }\n\n    setElementCurrentSize({ width: newBounds.width, height: newBounds.height });\n    setElementCurrentPosition({ x: newBounds.x, y: newBounds.y });\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isDragEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleDragRelease,\n        onClick: handleDragRelease,\n        onDoubleClick: handleDragRelease,\n      });\n    }\n    return cleanup;\n  }, [isDragEnabled, dragHandleElement]);\n\n  useEffect(() => {\n    const cleanups: NoneToVoidFunction[] = [];\n    if (element && isDragEnabled) {\n      for (const selector of resizeHandleSelectors) {\n        const resizeHandler = element.querySelector(`.resizeHandle.${selector}`) as HTMLElement;\n\n        if (resizeHandler) {\n          const cleanup = captureEvents(resizeHandler, {\n            onCapture: handleStartResize,\n            onDrag: handleResize,\n            onRelease: handleResizeRelease,\n            onClick: handleResizeRelease,\n            onDoubleClick: handleResizeRelease,\n          });\n\n          if (cleanup) {\n            cleanups.push(cleanup);\n          }\n        }\n      }\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => cleanup());\n    };\n  }, [isDragEnabled, element]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  const actualPosition = getActualPosition();\n\n  if (!isInitiated || !elementCurrentSize || !actualPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${actualPosition.x}px;`,\n    `top: ${actualPosition.y}px;`,\n    !isFullscreen && `max-width: ${elementCurrentSize.width}px;`,\n    !isFullscreen && `max-height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isResizing || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    isResizing,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../types/webapp';\n\nimport { selectActiveWebApp, selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = peers.length > 0 && peers[0]?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        },\n        {\n          pluralValue: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = selectActiveWebApp(global) || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RFg0Ey2I\",\"user-count-badge\":\"UZtJ6ZXb\",\"userCountBadge\":\"UZtJ6ZXb\",\"user-badge-icon\":\"pTiZFhsG\",\"userBadgeIcon\":\"pTiZFhsG\",\"name\":\"TzA5nqCC\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PeerBadge from '../../common/PeerBadge';\n\nimport styles from './WebAppGridItem.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  chatId: string;\n  isPopularApp?: boolean;\n};\n\nexport type StateProps = {\n  user?: ApiUser;\n};\n\nfunction WebAppGridItem({ user, isPopularApp }: OwnProps & StateProps) {\n  const {\n    requestMainWebView,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleClick = useLastCallback(() => {\n    if (!user) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n    });\n  });\n\n  if (!user) return undefined;\n\n  // eslint-disable-next-line no-null/no-null\n\n  const title = user?.firstName;\n  const activeUserCount = user?.botActiveUsers;\n  const badgeText = activeUserCount && isPopularApp ? formatIntegerCompact(lang, activeUserCount) : undefined;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClick}\n    >\n      <PeerBadge\n        className={buildClassName(styles.avatarContainer, isPopularApp && 'PopularAppGridItem')}\n        textClassName={styles.name}\n        badgeClassName={styles.userCountBadge}\n        badgeIconClassName={styles.userBadgeIcon}\n        peer={user}\n        text={title}\n        badgeText={badgeText}\n        badgeIcon=\"user-filled\"\n      />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const user = selectUser(global, chatId);\n\n    return {\n      user,\n    };\n  },\n)(WebAppGridItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BJV09FsC\",\"search\":\"bdi8G7GR\",\"section-title\":\"ex3kxgWX\",\"sectionTitle\":\"ex3kxgWX\",\"section-content\":\"uIZzLhEh\",\"sectionContent\":\"uIZzLhEh\",\"showMoreLink\":\"h_Zs9ypA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport WebAppGridItem from './WebAppGridItem';\n\nimport styles from './MoreAppsTabContent.module.scss';\n\nconst POPULAR_APPS_SLICE = 30;\n\nexport type OwnProps = {\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\nconst LESS_GRID_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MoreAppsTabContent: FC<OwnProps & StateProps> = ({\n  foundIds,\n  recentBotIds,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n  const {\n    searchPopularBotApps,\n  } = getActions();\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n\n    return filterPeersByQuery({ ids: foundIds, query: searchQuery, type: 'user' });\n  }, [foundIds, searchQuery]);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleSearchInputReset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  return (\n    <InfiniteScroll\n      className={buildClassName(styles.root, 'custom-scroll')}\n      items={filteredFoundIds}\n      onLoadMore={handleLoadMore}\n      itemSelector=\".PopularAppGridItem\"\n      noFastList\n      preloadBackwards={POPULAR_APPS_SLICE}\n    >\n      <SearchInput\n        className={styles.search}\n        value={searchQuery}\n        onChange={setSearchQuery}\n        onReset={handleSearchInputReset}\n        placeholder={lang('SearchApps')}\n      />\n      {recentBotIds && !searchQuery && (\n        <div className={styles.section}>\n          <div className={styles.sectionTitle}>\n            <span>{oldLang('SearchAppsMine')}</span>\n            <span className={styles.showMoreLink} onClick={handleToggleShowMoreMine}>\n              {oldLang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n            </span>\n          </div>\n          <div className={styles.sectionContent}>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_GRID_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <WebAppGridItem\n                  chatId={id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className={styles.section}>\n        <div className={styles.sectionTitle}>\n          {searchQuery ? lang('Apps') : lang('PopularApps')}\n        </div>\n        <div className={styles.sectionContent}>\n          {filteredFoundIds && filteredFoundIds.map((id) => {\n            return (\n              <WebAppGridItem\n                chatId={id}\n                isPopularApp={!searchQuery}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(MoreAppsTabContent));\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp, WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { getWebAppKey } from '../../../../global/helpers';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\nconst FULLSCREEN_BUTTONS_AREA_HEIGHT = 3.675 * REM;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isFullscreen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n    openSuggestedStatusModal,\n    updateWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendFullScreenChanged = useCallback((value: boolean) => {\n    sendEvent({\n      eventType: 'fullscreen_changed',\n      eventData: {\n        is_fullscreen: value,\n      },\n    });\n  }, [sendEvent]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendSafeArea = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    sendEvent({\n      eventType: 'safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      },\n    });\n\n    sendEvent({\n      eventType: 'content_safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: isFullscreen ? FULLSCREEN_BUTTONS_AREA_HEIGHT : 0,\n        bottom: 0,\n      },\n    });\n  }, [sendEvent, isFullscreen, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) {\n          const key = getWebAppKey(webApp);\n          closeWebApp({ key, skipClosingConfirmation: true });\n        }\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_content_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_device_storage_clear'\n        || eventType === 'web_app_device_storage_get_key'\n        || eventType === 'web_app_device_storage_save_key') {\n        const { req_id } = eventData;\n        sendEvent({\n          eventType: 'device_storage_failed',\n          eventData: {\n            req_id,\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_secure_storage_clear'\n        || eventType === 'web_app_secure_storage_get_key'\n        || eventType === 'web_app_secure_storage_restore_key'\n        || eventType === 'web_app_secure_storage_save_key') {\n        const { req_id } = eventData;\n        sendEvent({\n          eventType: 'secure_storage_failed',\n          eventData: {\n            req_id,\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_accelerometer') {\n        sendEvent({\n          eventType: 'accelerometer_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_gyroscope') {\n        sendEvent({\n          eventType: 'gyroscope_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_device_orientation') {\n        sendEvent({\n          eventType: 'device_orientation_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_add_to_home_screen') {\n        sendEvent({\n          eventType: 'home_screen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_check_home_screen') {\n        sendEvent({\n          eventType: 'home_screen_checked',\n          eventData: {\n            status: 'unsupported',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_set_emoji_status') {\n        const { custom_emoji_id, duration } = eventData;\n\n        if (!custom_emoji_id || typeof custom_emoji_id !== 'string') {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'SUGGESTED_EMOJI_INVALID',\n            },\n          });\n          return;\n        }\n\n        if (duration) {\n          try {\n            BigInt(duration);\n          } catch (e) {\n            sendEvent({\n              eventType: 'emoji_status_failed',\n              eventData: {\n                error: 'DURATION_INVALID',\n              },\n            });\n            return;\n          }\n        }\n\n        if (!webApp) {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'UNKNOWN_ERROR',\n            },\n          });\n          return;\n        }\n\n        openSuggestedStatusModal({\n          webAppKey: getWebAppKey(webApp),\n          customEmojiId: custom_emoji_id,\n          duration: Number(duration),\n          botId: webApp.botId,\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, sendSafeArea, onLoad, windowSize.isResizing,\n    ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, sendSafeArea, windowSize]);\n\n  useEffect(() => {\n    if (!webApp?.plannedEvents?.length) return;\n    const events = webApp.plannedEvents;\n    events.forEach((event) => {\n      sendEvent(event);\n    });\n\n    updateWebApp({\n      key: getWebAppKey(webApp),\n      update: {\n        plannedEvents: [],\n      },\n    });\n  }, [sendEvent, webApp]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      sendSafeArea();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, isFullscreen, sendViewport, sendSafeArea, ref]);\n\n  return {\n    sendEvent, sendFullScreenChanged, reloadFrame, sendViewport, sendSafeArea, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loadingPlaceholder\":\"jEAibDyh\",\"placeholderPath\":\"Gx1BIECZ\",\"fadeOpacityBreath\":\"N5Blieah\",\"defaultPlaceholderGrid\":\"Ig_t1R7i\",\"placeholderSquare\":\"ablUg8HU\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"secondary-button\":\"ypxiUCFQ\",\"secondaryButton\":\"ypxiUCFQ\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"buttons-container\":\"mR_hsBdT\",\"buttonsContainer\":\"mR_hsBdT\",\"one-row\":\"YfQO314y\",\"oneRow\":\"YfQO314y\",\"two-rows\":\"gUldkEoy\",\"twoRows\":\"gUldkEoy\",\"left-to-right\":\"ntESqwQ_\",\"leftToRight\":\"ntESqwQ_\",\"right-to-left\":\"q6IUFEL0\",\"rightToLeft\":\"q6IUFEL0\",\"top-to-bottom\":\"gb4iHJ9H\",\"topToBottom\":\"gb4iHJ9H\",\"bottom-to-top\":\"R_bh3GF8\",\"bottomToTop\":\"R_bh3GF8\",\"hide-horizontal\":\"oYaRA7u4\",\"hideHorizontal\":\"oYaRA7u4\",\"secondary-button-spinner\":\"NYV0yA2J\",\"secondaryButtonSpinner\":\"NYV0yA2J\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\",\"closeIcon\":\"BvNtfigU\",\"state-back\":\"rC2wkMIk\",\"stateBack\":\"rC2wkMIk\",\"backIconContainer\":\"JXsuZ01s\",\"moreIcon\":\"T58ozRyW\",\"headerPanel\":\"eYrhewMy\",\"icon\":\"a0AI_he5\",\"headerSplitButton\":\"Tl4_05AQ\",\"headerButton\":\"MvCwTbk_\",\"left\":\"emOpAMBm\",\"right\":\"z4C5VD5o\",\"buttonCaptionContainer\":\"dpZR3YT7\",\"backButtonCaption\":\"dWDprnWa\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachBot, ApiBotAppSettings, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { BotAppPermissions, ThemeKey } from '../../../types';\nimport type {\n  PopupOptions,\n  WebApp,\n  WebAppInboundEvent,\n  WebAppModalStateType,\n  WebAppOutboundEvent,\n} from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectBotAppPermissions,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n  selectWebApp,\n} from '../../../global/selectors';\nimport { getGeolocationStatus, IS_GEOLOCATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport download from '../../../util/download';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useFullscreen, { checkIfFullscreen } from '../../../hooks/window/useFullscreen';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n  position?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  onContextMenuButtonClick: (e: React.MouseEvent) => void;\n  isTransforming?: boolean;\n  isMultiTabSupported? : boolean;\n  modalHeight: number;\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n  botAppSettings?: ApiBotAppSettings;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isPremium?: boolean;\n  modalState?: WebAppModalStateType;\n  botAppPermissions?: BotAppPermissions;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst COLLAPSING_WAIT = 350;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst APP_NAME_DISPLAY_DURATION = 3800;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isTransforming,\n  modalState,\n  isMultiTabSupported,\n  onContextMenuButtonClick,\n  botAppPermissions,\n  botAppSettings,\n  modalHeight,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n    resetPaymentStatus,\n    openChatWithInfo,\n    showNotification,\n    openEmojiStatusAccessModal,\n    openLocationAccessModal,\n    changeWebAppModalState,\n    closeWebAppModal,\n    openPreparedInlineMessageModal,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [secondaryButton, setSecondaryButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const [requestedFileDownload, setRequestedFileDownload] = useState<{ url: string; fileName: string } | undefined>();\n  const [bottomBarColor, setBottomBarColor] = useState<string | undefined>();\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonCaptionRef = useRef<HTMLDivElement>(null);\n\n  const isFullscreen = modalState === 'fullScreen';\n  const isMinimizedState = modalState === 'minimized';\n\n  const exitFullScreenCallback = useLastCallback(() => {\n    setTimeout(() => { changeWebAppModalState({ state: 'maximized' }); }, COLLAPSING_WAIT);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const fullscreenElementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    fullscreenElementRef.current = document.querySelector('#portals') as HTMLElement;\n  }, []);\n\n  const [, setFullscreen, exitFullscreen] = useFullscreen(fullscreenElementRef, exitFullScreenCallback);\n\n  const activeWebApp = modal?.activeWebAppKey ? modal.openedWebApps[modal.activeWebAppKey] : undefined;\n  const activeWebAppName = activeWebApp?.appName;\n  const {\n    url, buttonText, isBackButtonVisible,\n  } = webApp || {};\n\n  const {\n    placeholderPath,\n  } = botAppSettings || {};\n\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const isAvailable = IS_GEOLOCATION_SUPPORTED;\n  const isAccessRequested = botAppPermissions?.geolocation !== undefined;\n  const isAccessGranted = Boolean(botAppPermissions?.geolocation);\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webAppKey) return;\n    updateWebApp({ key: webAppKey, update: updatedPartialWebApp });\n  });\n\n  const themeParams = useMemo(() => {\n    return extractCurrentThemeParams();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [theme]);\n\n  useEffect(() => {\n    setBottomBarColor(themeParams.secondary_bg_color);\n  }, [themeParams]);\n\n  const themeBackgroundColor = themeParams.bg_color;\n  const [backgroundColorFromEvent, setBackgroundColorFromEvent] = useState<string | undefined>();\n  const backgroundColorFromSettings = theme === 'light' ? botAppSettings?.backgroundColor\n    : botAppSettings?.backgroundDarkColor;\n\n  useEffect(() => {\n    const color = backgroundColorFromEvent || backgroundColorFromSettings || themeBackgroundColor;\n\n    updateCurrentWebApp({ backgroundColor: color });\n  }, [themeBackgroundColor, backgroundColorFromEvent, backgroundColorFromSettings]);\n\n  const themeHeaderColor = themeParams.bg_color;\n  const [headerColorFromEvent, setHeaderColorFromEvent] = useState<string | undefined>();\n  const headerColorFromSettings = theme === 'light' ? botAppSettings?.headerColor\n    : botAppSettings?.headerDarkColor;\n\n  useEffect(() => {\n    const color = headerColorFromEvent || headerColorFromSettings || themeHeaderColor;\n\n    updateCurrentWebApp({ headerColor: color });\n  }, [themeHeaderColor, headerColorFromEvent, headerColorFromSettings]);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendFullScreenChanged, sendViewport, sendSafeArea, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isFullscreen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const isMainButtonVisible = isLoaded && mainButton?.isVisible && mainButton.text.trim().length > 0;\n  const isSecondaryButtonVisible = isLoaded && secondaryButton?.isVisible && secondaryButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSecondaryButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'secondary_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  const setFullscreenCallback = useLastCallback(() => {\n    if (!checkIfFullscreen() && isActive) {\n      setFullscreen?.();\n    }\n  });\n\n  const exitIfFullscreenCallback = useLastCallback(() => {\n    if (checkIfFullscreen() && isActive) {\n      exitFullscreen?.();\n    }\n  });\n\n  const sendFullScreenChangedCallback = useLastCallback(\n    (value: boolean) => { if (isActive) sendFullScreenChanged(value); },\n  );\n\n  useEffect(() => {\n    if (isFullscreen) {\n      setFullscreenCallback();\n      sendFullScreenChangedCallback(true);\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChangedCallback(false);\n    }\n  }, [isFullscreen]);\n\n  const visibilityChangedCallBack = useLastCallback((visibility: boolean) => {\n    sendEvent({\n      eventType: 'visibility_changed',\n      eventData: {\n        is_visible: visibility,\n      },\n    });\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n      visibilityChangedCallBack(Boolean(isActive));\n    }\n  }, [isActive, isLoaded]);\n\n  useEffectWithPrevDeps(([prevModalState]) => {\n    if (modalState === 'minimized') {\n      visibilityChangedCallBack(false);\n    }\n    if (modalState && prevModalState === 'minimized') {\n      visibilityChangedCallBack(true);\n    }\n  }, [modalState]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n      resetPaymentStatus();\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectFileDownload = useLastCallback((shouldCloseActive?: boolean) => {\n    if (shouldCloseActive) {\n      setRequestedFileDownload(undefined);\n      handlePopupClosed();\n    }\n\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    if (!bot) return;\n    const result = await callApi('allowBotSendMessages', { bot });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    if (!bot) return;\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleCheckDownloadFile(fileUrl: string, fileName: string) {\n    const canDownload = await callApi('checkBotDownloadFileParams', {\n      bot: bot!,\n      url: fileUrl,\n      fileName,\n    });\n\n    if (!canDownload) {\n      sendEvent({\n        eventType: 'file_download_requested',\n        eventData: {\n          status: 'cancelled',\n        },\n      });\n      return;\n    }\n\n    setRequestedFileDownload({ url: fileUrl, fileName });\n    handlePopupOpened();\n  }\n\n  const handleDownloadFile = useLastCallback(() => {\n    if (!requestedFileDownload) return;\n    setRequestedFileDownload(undefined);\n    handlePopupClosed();\n\n    download(requestedFileDownload.url, requestedFileDownload.fileName);\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'downloading',\n      },\n    });\n  });\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setSecondaryButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChatWithInfo({ id: bot!.id });\n  });\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n\n    if (eventType === 'web_app_request_fullscreen') {\n      if (getIsWebAppsFullscreenSupported()) {\n        changeWebAppModalState({ state: 'fullScreen' });\n      } else {\n        sendEvent({\n          eventType: 'fullscreen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n    }\n\n    if (eventType === 'web_app_exit_fullscreen') {\n      exitIfFullscreenCallback();\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl, shouldIgnoreCache: eventData.force_request });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      setBackgroundColorFromEvent(validateHexColor(eventData.color) ? eventData.color : undefined);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const key = eventData.color_key;\n      setHeaderColorFromEvent(eventData.color || (key ? themeParams[key] : undefined));\n    }\n\n    if (eventType === 'web_app_set_bottom_bar_color') {\n      setBottomBarColor(eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_secondary_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setSecondaryButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n        position: eventData.position,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n        || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n        || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n\n    if (eventType === 'web_app_request_file_download') {\n      if (requestedFileDownload || unlockPopupsAt > Date.now()) {\n        handleRejectFileDownload();\n        return;\n      }\n      handleCheckDownloadFile(eventData.url, eventData.file_name);\n    }\n\n    if (eventType === 'web_app_send_prepared_message') {\n      if (!bot || !webAppKey) return;\n      const { id } = eventData;\n      openPreparedInlineMessageModal({ botId: bot.id, messageId: id, webAppKey });\n    }\n\n    if (eventType === 'web_app_request_emoji_status_access') {\n      if (!bot) return;\n      openEmojiStatusAccessModal({ bot, webAppKey });\n    }\n\n    if (eventType === 'web_app_check_location') {\n      const handleGeolocationCheck = () => {\n        sendEvent({\n          eventType: 'location_checked',\n          eventData: {\n            available: isAvailable,\n            access_requested: isAccessRequested,\n            access_granted: isAccessGranted,\n          },\n        });\n      };\n\n      handleGeolocationCheck();\n    }\n\n    if (eventType === 'web_app_request_location') {\n      const handleRequestLocation = async () => {\n        const geolocationData = await getGeolocationStatus();\n        const { accessRequested, accessGranted, geolocation } = geolocationData;\n\n        if (!accessGranted || !accessRequested) {\n          sendEvent({\n            eventType: 'location_requested',\n            eventData: {\n              available: false,\n            },\n          });\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n          return;\n        }\n\n        if (isAvailable) {\n          if (isAccessRequested) {\n            sendEvent({\n              eventType: 'location_requested',\n              eventData: {\n                available: botAppPermissions?.geolocation!,\n                latitude: geolocation?.latitude,\n                longitude: geolocation?.longitude,\n                altitude: geolocation?.altitude,\n                course: geolocation?.heading,\n                speed: geolocation?.speed,\n                horizontal_accuracy: geolocation?.accuracy,\n                vertical_accuracy: geolocation?.altitudeAccuracy,\n              },\n            });\n          } else {\n            openLocationAccessModal({ bot, webAppKey });\n          }\n        } else {\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n        }\n      };\n\n      handleRequestLocation();\n    }\n\n    if (eventType === 'web_app_open_location_settings') {\n      handleOpenChat();\n    }\n  }\n\n  const mainButtonCurrentColor = useCurrentOrPrev(mainButton?.color, true);\n  const mainButtonCurrentTextColor = useCurrentOrPrev(mainButton?.textColor, true);\n  const mainButtonCurrentIsActive = useCurrentOrPrev(mainButton && Boolean(mainButton.isActive), true);\n  const mainButtonCurrentText = useCurrentOrPrev(mainButton?.text, true);\n\n  const secondaryButtonCurrentPosition = useCurrentOrPrev(secondaryButton?.position, true);\n  const secondaryButtonCurrentColor = useCurrentOrPrev(secondaryButton?.color, true);\n  const secondaryButtonCurrentTextColor = useCurrentOrPrev(secondaryButton?.textColor, true);\n  const secondaryButtonCurrentIsActive = useCurrentOrPrev(secondaryButton && Boolean(secondaryButton.isActive), true);\n  const secondaryButtonCurrentText = useCurrentOrPrev(secondaryButton?.text, true);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideMainButton, setShouldHideMainButton] = useState(true);\n  const [shouldHideSecondaryButton, setShouldHideSecondaryButton] = useState(true);\n  const [shouldShowMainButton, setShouldShowMainButton] = useState(false);\n  const [shouldShowSecondaryButton, setShouldShowSecondaryButton] = useState(false);\n\n  const [shouldShowAppNameInFullscreen, setShouldShowAppNameInFullscreen] = useState(false);\n\n  const [backButtonTextWidth, setBackButtonTextWidth] = useState(0);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n      sendSafeArea();\n    }, isTransforming ? 0 : ANIMATION_WAIT);\n  }, [shouldShowSecondaryButton, shouldHideSecondaryButton,\n    shouldShowMainButton, shouldShowMainButton,\n    secondaryButton?.position, sendViewport, isTransforming, modalHeight,\n    sendSafeArea]);\n\n  const isVerticalLayout = secondaryButtonCurrentPosition === 'top' || secondaryButtonCurrentPosition === 'bottom';\n  const isHorizontalLayout = !isVerticalLayout;\n\n  const rowsCount = (isVerticalLayout && shouldShowMainButton && shouldShowSecondaryButton) ? 2\n    : shouldShowMainButton || shouldShowSecondaryButton ? 1 : 0;\n\n  const hideDirection = (isHorizontalLayout\n    && (!shouldHideMainButton && !shouldHideSecondaryButton)) ? 'horizontal' : 'vertical';\n\n  const mainButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const mainButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const appNameDisplayTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (isFullscreen && isOpen && Boolean(activeWebAppName)) {\n      setShouldShowAppNameInFullscreen(true);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n\n      appNameDisplayTimeout.current = setTimeout(() => {\n        setShouldShowAppNameInFullscreen(false);\n        appNameDisplayTimeout.current = undefined;\n      }, APP_NAME_DISPLAY_DURATION);\n    } else {\n      setShouldShowAppNameInFullscreen(false);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n        appNameDisplayTimeout.current = undefined;\n      }\n    }\n\n    return () => {\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n    };\n  }, [isFullscreen, isOpen, activeWebAppName]);\n\n  useEffect(() => {\n    if (mainButtonChangeTimeout.current) clearTimeout(mainButtonChangeTimeout.current);\n    if (mainButtonFastTimeout.current) clearTimeout(mainButtonFastTimeout.current);\n\n    if (isMainButtonVisible) {\n      mainButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowMainButton(true);\n      }, 35);\n      setShouldHideMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isMainButtonVisible) {\n      setShouldShowMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideMainButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isMainButtonVisible]);\n\n  useEffect(() => {\n    if (secondaryButtonChangeTimeout.current) clearTimeout(secondaryButtonChangeTimeout.current);\n    if (secondaryButtonFastTimeout.current) clearTimeout(secondaryButtonFastTimeout.current);\n\n    if (isSecondaryButtonVisible) {\n      secondaryButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowSecondaryButton(true);\n      }, 35);\n      setShouldHideSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isSecondaryButtonVisible) {\n      setShouldShowSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideSecondaryButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isSecondaryButtonVisible]);\n\n  useEffect(() => {\n    if (!shouldShowSecondaryButton && !shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowSecondaryButton, shouldShowMainButton]);\n\n  const frameStyle = isTransforming ? 'pointer-events: none;' : '';\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChanged(false);\n      changeWebAppModalState({ state: 'maximized' });\n      closeWebAppModal();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    exitIfFullscreenCallback();\n  });\n\n  const handleShowContextMenu = useLastCallback((e: React.MouseEvent) => {\n    onContextMenuButtonClick(e);\n  });\n\n  const backIconClass = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n  const backButtonCaption = shouldShowAppNameInFullscreen ? activeWebAppName\n    : oldLang(isBackButtonVisible ? 'Back' : 'Close');\n\n  const hasHeaderElement = headerButtonCaptionRef?.current;\n\n  useEffect(() => {\n    const width = headerButtonCaptionRef?.current?.clientWidth || 0;\n    setBackButtonTextWidth(width);\n  }, [backButtonCaption, hasHeaderElement]);\n\n  function getBackButtonActiveKey() {\n    if (shouldShowAppNameInFullscreen) return 0;\n    return isBackButtonVisible ? 1 : 2;\n  }\n\n  function renderFullscreenBackButtonCaption() {\n    return (\n      <span\n        className={styles.buttonCaptionContainer}\n        style={\n          `width: ${backButtonTextWidth}px;`\n        }\n      >\n        <Transition\n          activeKey={getBackButtonActiveKey()}\n          name=\"slideFade\"\n        >\n          <div\n            ref={headerButtonCaptionRef}\n            className={styles.backButtonCaption}\n          >\n            {backButtonCaption}\n          </div>\n        </Transition>\n      </span>\n    );\n  }\n\n  function renderFullscreenHeaderPanel() {\n    return (\n      <div className={styles.headerPanel}>\n        <div ref={headerButtonRef} className={styles.headerButton} onClick={handleBackClick}>\n          <div className={styles.backIconContainer}>\n            <div className={backIconClass} />\n          </div>\n          {renderFullscreenBackButtonCaption()}\n        </div>\n        <div className={styles.headerSplitButton}>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.left,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-label={lang('WebAppCollapse')}\n            onClick={handleCollapseClick}\n          >\n            <Icon\n              name=\"down\"\n              className={styles.icon}\n            />\n          </div>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('AriaMoreButton')}\n            onClick={handleShowContextMenu}\n          >\n            <Icon\n              name=\"more\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderDefaultPlaceholder() {\n    const className = buildClassName(styles.loadingPlaceholder, styles.defaultPlaceholderGrid, isLoaded && styles.hide);\n    return (\n      <div className={className}>\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n      </div>\n    );\n  }\n\n  function renderPlaceholder() {\n    if (!placeholderPath) {\n      return renderDefaultPlaceholder();\n    }\n    return (\n      <svg\n        className={buildClassName(styles.loadingPlaceholder, isLoaded && styles.hide)}\n        viewBox=\"0 0 512 512\"\n      >\n        <path className={styles.placeholderPath} d={placeholderPath} />\n      </svg>\n    );\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isFullscreen && getIsWebAppsFullscreenSupported() && renderFullscreenHeaderPanel()}\n      {!isMinimizedState && renderPlaceholder()}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameStyle}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation; clipboard-write;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {!isMinimizedState && (\n        <div\n          style={`background-color: ${bottomBarColor};`}\n          className={buildClassName(\n            styles.buttonsContainer,\n            secondaryButtonCurrentPosition === 'left' && styles.leftToRight,\n            secondaryButtonCurrentPosition === 'right' && styles.rightToLeft,\n            secondaryButtonCurrentPosition === 'top' && styles.topToBottom,\n            secondaryButtonCurrentPosition === 'bottom' && styles.bottomToTop,\n            hideDirection === 'horizontal' && styles.hideHorizontal,\n            rowsCount === 1 && styles.oneRow,\n            rowsCount === 2 && styles.twoRows,\n          )}\n        >\n          <Button\n            className={buildClassName(\n              styles.secondaryButton,\n              shouldShowSecondaryButton && !shouldHideSecondaryButton && styles.visible,\n              shouldHideSecondaryButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${secondaryButtonCurrentColor}; color: ${secondaryButtonCurrentTextColor}`}\n            disabled={!secondaryButtonCurrentIsActive && !secondaryButton?.isProgressVisible}\n            nonInteractive={secondaryButton?.isProgressVisible}\n            onClick={handleSecondaryButtonClick}\n            size=\"smaller\"\n          >\n            {!secondaryButton?.isProgressVisible && secondaryButtonCurrentText}\n            {secondaryButton?.isProgressVisible\n              && <Spinner className={styles.mainButtonSpinner} color=\"blue\" />}\n          </Button>\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && !shouldHideMainButton && styles.visible,\n              shouldHideMainButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive && !mainButton?.isProgressVisible}\n            nonInteractive={mainButton?.isProgressVisible}\n            onClick={handleMainButtonClick}\n            size=\"smaller\"\n          >\n            {!mainButton?.isProgressVisible && mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </div>\n      ) }\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || oldLang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={oldLang('ShareYouPhoneNumberTitle')}\n        text={oldLang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={oldLang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={oldLang('lng_bot_allow_write_title')}\n        text={oldLang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={oldLang('lng_bot_allow_write_confirm')}\n      />\n      <ConfirmDialog\n        isOpen={Boolean(requestedFileDownload)}\n        title={oldLang('BotDownloadFileTitle')}\n        textParts={lang('BotDownloadFileDescription', {\n          bot: bot?.firstName,\n          filename: requestedFileDownload?.fileName,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n        })}\n        confirmLabel={oldLang('BotDownloadFileButton')}\n        onClose={handleRejectFileDownload}\n        confirmHandler={handleDownloadFile}\n      />\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={oldLang('lng_bot_close_warning_title')}\n        text={oldLang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={oldLang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={oldLang('BotRemoveFromMenuTitle')}\n        textParts={renderText(oldLang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n    const modalState = modal?.modalState;\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const userFullInfo = activeBotId ? selectUserFullInfo(global, activeBotId) : undefined;\n    const botAppSettings = userFullInfo?.botInfo?.appSettings;\n    const currentUser = global.currentUserId ? selectUser(global, global.currentUserId) : undefined;\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status: regularPaymentStatus } = selectTabState(global).payment;\n    const { status: starsPaymentStatus, inputInvoice: starsInputInvoice } = selectTabState(global).starsPayment;\n    const botAppPermissions = bot ? selectBotAppPermissions(global, bot.id) : undefined;\n\n    const paymentStatus = starsPaymentStatus || regularPaymentStatus;\n\n    return {\n      attachBot,\n      bot,\n      currentUser,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || Boolean(starsInputInvoice),\n      paymentStatus,\n      modalState,\n      botAppPermissions,\n      botAppSettings,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"fullScreen\":\"ciSTWz16\",\"tabs\":\"X18WbDa5\",\"tool-bar\":\"qK4q0Sat\",\"toolBar\":\"qK4q0Sat\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"more-apps-tab-icon\":\"Obu3ui67\",\"moreAppsTabIcon\":\"Obu3ui67\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"more-apps-button\":\"cEuW1_hJ\",\"moreAppsButton\":\"cEuW1_hJ\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"fullscreenButton\":\"otlJULGy\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { Point, Size, ThemeKey } from '../../../types';\nimport type { WebApp, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { RESIZE_HANDLE_CLASS_NAME } from '../../../config';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTheme, selectUser,\n  selectWebApp,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport windowSize from '../../../util/windowSize';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport MoreAppsTabContent from './MoreAppsTabContent';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  cachedSize?: Size;\n  cachedPosition?: Point;\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst MINIMIZED_STATE_SIZE = { width: 300, height: 40 };\nconst DEFAULT_MAXIMIZED_STATE_SIZE = { width: 420, height: 730 };\nconst MAXIMIZED_STATE_MINIMUM_SIZE = { width: 300, height: 300 };\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  cachedSize,\n  cachedPosition,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n    openMoreAppsTab,\n    closeMoreAppsTab,\n    updateMiniAppCachedPosition,\n    updateMiniAppCachedSize,\n  } = getActions();\n\n  const [getMaximizedStateSize, setMaximizedStateSize] = useSignal(cachedSize || DEFAULT_MAXIMIZED_STATE_SIZE);\n\n  function getSize() {\n    if (modal?.modalState === 'fullScreen') return windowSize.get();\n    if (modal?.modalState === 'maximized') return getMaximizedStateSize();\n    return MINIMIZED_STATE_SIZE;\n  }\n  function getMinimumSize() {\n    if (modal?.modalState === 'maximized') return MAXIMIZED_STATE_MINIMUM_SIZE;\n    return undefined;\n  }\n\n  const {\n    openedWebApps, activeWebAppKey, openedOrderedKeys, sessionKeys, isMoreAppsTabActive,\n  } = modal || {};\n  const activeWebApp = activeWebAppKey ? openedWebApps?.[activeWebAppKey] : undefined;\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n  const isMinimizedState = modal?.modalState === 'minimized';\n  const isFullScreen = modal?.modalState === 'fullScreen';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement && !isFullScreen));\n  }, [supportMultiTabMode, headerElement, containerElement, isFullScreen]);\n\n  useEffect(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  }, [supportMultiTabMode]);\n\n  const {\n    isDragging,\n    isResizing,\n    style: draggableStyle,\n    size,\n    position,\n  } = useDraggable(\n    ref,\n    headerRef,\n    isDraggingEnabled,\n    getSize(),\n    isFullScreen,\n    getMinimumSize(),\n    cachedPosition,\n  );\n\n  const x = position?.x;\n  const y = position?.y;\n  useEffect(() => {\n    if (!isDragging && x !== undefined && y !== undefined) {\n      updateMiniAppCachedPosition({ position: { x, y } });\n    }\n  }, [isDragging, x, y]);\n\n  useEffect(() => {\n    if (!isDragging && size && isMaximizedState) { updateMiniAppCachedSize({ size }); }\n  }, [isDragging, isMaximizedState, size]);\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n\n  useEffect(() => {\n    if (isResizing) {\n      setMaximizedStateSize({ width: currentWidth, height: currentHeight });\n    }\n  }, [currentHeight, currentWidth, isResizing, setMaximizedStateSize]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleCloseMoreAppsTab = useLastCallback(() => {\n    closeMoreAppsTab();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      const key = getWebAppKey(activeWebApp!);\n      updateWebApp({\n        key,\n        update: {\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'minimized' });\n  });\n\n  const handleFullscreenClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'fullScreen' });\n  });\n\n  const handleOpenMoreAppsTabClick = useLastCallback(() => {\n    openMoreAppsTab();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{oldLang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{oldLang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {oldLang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {oldLang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (isMoreAppsTabActive) return 'color-text';\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme, isMoreAppsTabActive]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsTab() {\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.moreAppsTabIcon}>\n            <Icon className={styles.icon} name=\"add\" />\n          </div>\n          {lang('OpenApp')}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleCloseMoreAppsTab}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsButton() {\n    return (\n      <Button\n        className={buildClassName(\n          styles.moreAppsButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleOpenMoreAppsTabClick}\n      >\n        <Icon className={styles.icon} name=\"add\" />\n      </Button>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || isMinimizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n        {isMoreAppsTabActive && renderMoreAppsTab()}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        <div className={styles.toolBar}>\n          {!isMoreAppsTabActive && renderMoreAppsButton()}\n\n          {!isMoreAppsTabActive && (\n            <Button\n              className={buildClassName(\n                styles.windowStateButton,\n                styles.fullscreenButton,\n                'no-drag',\n              )}\n              round\n              color=\"translucent\"\n              size=\"tiny\"\n              onClick={handleFullscreenClick}\n            >\n              <Icon className={styles.stateIcon} name=\"expand-modal\" />\n            </Button>\n          )}\n\n          <Button\n            className={buildClassName(\n              styles.windowStateButton,\n              'no-drag',\n            )}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            onClick={handleCollapseClick}\n          >\n            <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {!isMoreAppsTabActive && renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  function buildResizeHandleClass(handleClassName: string) {\n    return buildClassName(RESIZE_HANDLE_CLASS_NAME, handleClassName);\n  }\n\n  function renderResizeHandles() {\n    return (\n      <>\n        <div className={buildResizeHandleClass('top')} />\n        <div className={buildResizeHandleClass('bottom')} />\n        <div className={buildResizeHandleClass('left')} />\n        <div className={buildResizeHandleClass('right')} />\n        <div className={buildResizeHandleClass('topLeft')} />\n        <div className={buildResizeHandleClass('topRight')} />\n        <div className={buildResizeHandleClass('bottomLeft')} />\n        <div className={buildResizeHandleClass('bottomRight')} />\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        isMinimizedState && styles.minimized,\n        isFullScreen && styles.fullScreen,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      dialogContent={isDraggingEnabled && !isMinimizedState ? renderResizeHandles() : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {isFullScreen && renderMoreMenu()}\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isTransforming={isDragging || isResizing}\n          onContextMenuButtonClick={handleContextMenu}\n          isMultiTabSupported={supportMultiTabMode}\n          modalHeight={currentHeight}\n        />\n      ))}\n      { isMoreAppsTabActive && (<MoreAppsTabContent />)}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { miniAppsCachedPosition, miniAppsCachedSize } = selectSharedSettings(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      cachedPosition: miniAppsCachedPosition,\n      cachedSize: miniAppsCachedSize,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n} & ({\n  icon: IconName;\n  isFontIcon: true;\n} | {\n  icon: string;\n  isFontIcon?: false;\n});\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <Icon name={icon} className={styles.fontIcon} style={`--item-color: rgb(${r},${g},${b})`} />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <Icon name=\"previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <Icon name=\"next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar, { AVATAR_SIZES } from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS: Record<string, IconName> = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-crossed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = AVATAR_SIZES.giant + 0.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type {\n  ApiLimitTypeForPromo,\n  ApiPremiumPromo,\n  ApiPremiumSection,\n  ApiPremiumSubscriptionOption,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n  moreAccounts: 'ConnectedAccountsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n  moreAccounts: 'ConnectedAccountsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium\n      ? lang('OK')\n      : lang('SubscribeToPremium', { price: formatCurrency(lang, perMonthPrice, currency) }, { withNodes: true });\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  const currentSection = filteredSections[currentSlideIndex];\n  const hasHeaderBackdrop = currentSection !== 'double_limits' && currentSection !== 'stories';\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, hasHeaderBackdrop && styles.whiteBackButton)}\n        color={hasHeaderBackdrop ? 'translucent-white' : 'translucent'}\n        onClick={onBack}\n        ariaLabel={oldLang('Back')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={oldLang(LIMITS_TITLES[limit])}\n                        description={oldLang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {oldLang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumSubscriptionOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumSubscriptionOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const oldLang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={oldLang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {oldLang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrencyAsString(amount, currency, oldLang.code)} x ${users!}`\n            : oldLang('PricePerMonth', formatCurrencyAsString(perMonth, currency, oldLang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrencyAsString(amount, currency, oldLang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSection, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      lang,\n      perMonthPrice,\n      currency,\n    );\n  }, [selectedSubscriptionOption, lang]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return renderText(\n        fromUser?.id === currentUserId\n          ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n          : oldLang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]),\n        ['simple_markdown', 'emoji'],\n      );\n    }\n\n    if (fromUserStatusSet && fromUser) {\n      const template = oldLang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n      const [first, second] = template.split('{link}');\n\n      const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n        <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n      ) : undefined;\n      const link = (\n        <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n          {emoji}{renderText(fromUserStatusSet.title)}\n        </span>\n      );\n      return [renderText(first), link, renderText(second)];\n    }\n\n    return renderText(\n      fromUser\n        ? oldLang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n        : oldLang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium'),\n      ['simple_markdown', 'emoji'],\n    );\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : oldLang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return oldLang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? oldLang('TelegramPremiumUserDialogSubtitle')\n      : oldLang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={oldLang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={oldLang('Close')}\n            >\n              <Icon name=\"close\" />\n            </Button>\n            {(fromUserStatusEmoji && !isGift) ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {getHeaderText()}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {oldLang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={oldLang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={oldLang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {oldLang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  forceRenderAllItems?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  forceRenderAllItems,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(forceRenderAllItems || filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const foundChannelIds = channelIds ? filterPeersByQuery({ ids: channelIds, query: searchQuery, type: 'chat' }) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredUserIds = memberIds\n      ? filterPeersByQuery({ ids: memberIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(unique(filteredUserIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n  STARS_CURRENCY_CODE,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount && gift.currency !== STARS_CURRENCY_CODE);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.filter((gift) => gift.currency !== STARS_CURRENCY_CODE)\n      ?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftEnabled: global.appConfig?.isStarsGiftEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: OldLangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: OldLangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll({\n        container: containerRef.current!,\n        element: stickerSetEl,\n        position: 'start',\n        margin: FOCUS_MARGIN,\n        maxDistance: isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      });\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, undefined, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToSticker = !hasThumbnail\n    || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb && !hasStaticThumb);\n  const firstStickerHash = shouldFallbackToSticker && stickerSet.stickers?.[0]\n    && getStickerMediaHash(stickerSet.stickers[0], 'preview');\n  const firstStickerMediaData = useMedia(firstStickerHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !firstStickerHash) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || firstStickerMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, 'sticker-set-cover')}\n      style={`--_size: ${size}px`}\n    >\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToSticker) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || firstStickerMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport Sparkles from './Sparkles';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n  withSparkles?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n  withSparkles,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, undefined, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: { type: 'regular', documentId: sticker.id, until: getServerTime() + duration },\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {withSparkles && <Sparkles preset=\"button\" /> }\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiEmojiStatusType, ApiReactionWithPaid, ApiSticker,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  collectibleStatuses?: ApiEmojiStatusType[];\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps & StateProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  collectibleStatuses,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isStatusCollectible = stickerSet.id === COLLECTIBLE_STATUS_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const collectibleEmojiIdsSet = useMemo(() => (\n    collectibleStatuses ? new Set(collectibleStatuses.map(({ documentId }) => documentId)) : undefined\n  ), [collectibleStatuses]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && !isStatusCollectible\n   && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            const withSparkles = sticker.id === COLLECTIBLE_STATUS_SET_ID\n            || collectibleEmojiIdsSet?.has(sticker.id);\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n                withSparkles={withSparkles}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return { collectibleStatuses };\n  },\n)(StickerSet));\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiEmojiStatusType,\n  ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique, uniqueByField } from '../../util/iteratees';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  collectibleStatuses?: ApiEmojiStatusType[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  collectibleStatuses,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const collectibleStatusEmojis = useMemo(() => {\n    const collectibleStatusEmojiIds = collectibleStatuses?.map((status) => status.documentId);\n    return customEmojisById && collectibleStatusEmojiIds?.map((id) => customEmojisById[id]).filter(Boolean);\n  }, [customEmojisById, collectibleStatuses]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = uniqueByField(defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []), 'id');\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n          isEmoji: true,\n        });\n      }\n      if (collectibleStatusEmojis?.length) {\n        defaultSets.push({\n          id: COLLECTIBLE_STATUS_SET_ID,\n          accessHash: '',\n          count: collectibleStatusEmojis.length,\n          stickers: collectibleStatusEmojis,\n          title: lang('CollectibleStatusesCategory'),\n          isEmoji: true,\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: oldLang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, oldLang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction, collectibleStatusEmojis, lang,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{oldLang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      customEmojisById,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      collectibleStatuses: isStatusPicker ? collectibleStatuses : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"C9sWDINB\",\"topEmoji\":\"gdG3oY21\",\"description\":\"p7S4AH8A\",\"title\":\"KVpsce1g\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SuggestedStatusModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['suggestedStatusModal'];\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n};\n\nconst CUSTOM_EMOJI_SIZE = 6 * REM;\n\nconst SuggestedStatusModal = ({ modal, currentUser, bot }: OwnProps & StateProps) => {\n  const { setEmojiStatus, closeSuggestedStatusModal, sendWebAppEvent } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !renderingModal) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: renderingModal.customEmojiId,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, renderingModal]);\n\n  const description = useMemo(() => {\n    if (!renderingModal || !bot) return undefined;\n\n    const botName = getUserFullName(bot);\n\n    if (renderingModal.duration) {\n      return lang('BotSuggestedStatusFor', {\n        bot: botName,\n        duration: formatShortDuration(lang, renderingModal.duration),\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('BotSuggestedStatus', { bot: botName }, { withNodes: true, withMarkdown: true });\n  }, [bot, lang, renderingModal]);\n\n  const handleClose = useLastCallback(() => {\n    const webAppKey = renderingModal?.webAppKey;\n\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n      });\n    }\n\n    closeSuggestedStatusModal();\n  });\n\n  const handleSetStatus = useLastCallback(() => {\n    if (!renderingModal) return;\n\n    const expires = renderingModal.duration ? getServerTime() + renderingModal.duration : undefined;\n\n    setEmojiStatus({\n      referrerWebAppKey: renderingModal.webAppKey,\n      emojiStatus: { type: 'regular', documentId: renderingModal.customEmojiId, until: expires },\n    });\n    closeSuggestedStatusModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {renderingModal && (\n        <CustomEmoji\n          className={styles.topEmoji}\n          documentId={renderingModal.customEmojiId}\n          size={CUSTOM_EMOJI_SIZE}\n          loopLimit={1}\n          forceAlways\n        />\n      )}\n      <div>\n        <h3 className={styles.title}>{lang('BotSuggestedStatusTitle')}</h3>\n        <p className={styles.description}>{description}</p>\n      </div>\n      {mockPeerWithStatus && (\n        <PeerChip\n          mockPeer={mockPeerWithStatus}\n          withEmojiStatus\n        />\n      )}\n      <Button size=\"smaller\" onClick={handleSetStatus}>\n        {lang('GeneralConfirm')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const bot = modal?.botId ? selectUser(global, modal.botId) : undefined;\n\n    return {\n      currentUser,\n      bot,\n    };\n  },\n)(SuggestedStatusModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, chat);\n  }, [chat, oldLang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, prevBoostedChat);\n  }, [prevBoostedChat, oldLang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: oldLang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = oldLang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? oldLang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = oldLang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? oldLang('BoostChannel') : oldLang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = oldLang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = oldLang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = oldLang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = oldLang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, oldLang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {oldLang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {oldLang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : oldLang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {oldLang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(\n              oldLang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {oldLang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {oldLang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={oldLang('OK')}\n          title={oldLang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            oldLang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatShortDuration(lang, boost!.cooldownUntil - getServerTime()),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={oldLang('Common.Yes')}\n          title={oldLang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(oldLang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const isNew = invite.alreadyPeerIds.length === 0;\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = isNew ? lang('FolderLinkSubtitleNew')\n    : newChatsCount ? lang('FolderLinkSubtitleAdd', {\n      chats: lang('FolderLinkSubtitleAddCount', { count: newChatsCount }, { pluralValue: newChatsCount }),\n      title: renderTextWithEntities({\n        text: folder.title.text,\n        entities: folder.title.entities,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n      }),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    }) : lang('FolderLinkSubtitleAlready');\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {oldLang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length\n                  ? oldLang('DeselectAll') : oldLang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && oldLang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {oldLang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>([]);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {lang('FolderLinkSubtitleNew')}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? oldLang('DeselectAll') : oldLang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkAddFolder')}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) {\n      return renderTextWithEntities({\n        text: renderingFolder.title.text,\n        entities: renderingFolder.title.entities,\n        noCustomEmojiPlayback: renderingFolder.noTitleAnimations,\n      });\n    }\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) {\n      return renderTextWithEntities({\n        text: renderingInfo.invite.title.text,\n        entities: renderingInfo.invite.title.entities,\n        noCustomEmojiPlayback: renderingInfo.invite.noTitleAnimations,\n      });\n    }\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: TeactNode) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab\n            className={styles.folder}\n            isActive\n            badgeCount={folderTabNumber}\n            isBadgeActive\n            title={folderTitle}\n          />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFkgLoAk\",\"title\":\"La4sUYaq\",\"description\":\"Bn5kz5br\",\"moreButton\":\"JdN5pGTw\",\"secondary\":\"hbsLlXSH\",\"content\":\"TZE15Pt_\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { TableAboutData } from '../common/TableAboutModal';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredContextMenuContainer';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport TableAboutModal from '../common/TableAboutModal';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  modal: TabState['aboutAdsModal'];\n};\n\ntype StateProps = {\n  minLevelToRestrictAds?: number;\n};\n\nconst AboutAdsModal = ({ modal, minLevelToRestrictAds }: OwnProps & StateProps) => {\n  const { closeAboutAdsModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const moreMenuRef = useRef<HTMLButtonElement>(null);\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n  const {\n    canReport, randomId, additionalInfo, sponsorInfo,\n  } = renderingModal || {};\n  const isMonetizationSharing = canReport;\n\n  const renderingIsNewDesign = useCurrentOrPrev(isMonetizationSharing);\n\n  const oldLang = useOldLang();\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(moreMenuRef, !renderingIsNewDesign);\n\n  const handleClose = useLastCallback(() => {\n    closeAboutAdsModal();\n    handleContextMenuClose();\n    handleContextMenuHide();\n  });\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <Button\n          ref={moreMenuRef}\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          className={styles.moreButton}\n          onClick={handleContextMenu}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, handleContextMenu, minLevelToRestrictAds]);\n\n  if (renderingIsNewDesign) {\n    return (\n      <>\n        <TableAboutModal\n          isOpen={isOpen}\n          listItemData={modalData?.listItemData}\n          headerIconName=\"channel\"\n          withSeparator\n          header={modalData?.header}\n          footer={modalData?.footer}\n          buttonText={oldLang('RevenueSharingAdsUnderstood')}\n          onClose={handleClose}\n        />\n        {contextMenuAnchor && randomId && (\n          <SponsoredMessageContextMenuContainer\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            triggerRef={moreMenuRef}\n            randomId={randomId}\n            additionalInfo={additionalInfo}\n            canReport={canReport}\n            sponsorInfo={sponsorInfo}\n            shouldSkipAbout\n            onItemClick={handleClose}\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={handleClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const minLevelToRestrictAds = global.appConfig?.channelRestrictAdsLevelMin;\n\n    return {\n      minLevelToRestrictAds,\n    };\n  },\n)(AboutAdsModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      withSeparator\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['monetizationVerificationModal'];\n};\n\ntype StateProps = {\n  passwordHint?: string;\n};\n\nconst VerificationMonetizationModal = ({\n  modal,\n  passwordHint,\n}: OwnProps & StateProps) => {\n  const {\n    closeMonetizationVerificationModal, clearMonetizationVerificationError, processMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    if (!renderingModal) return;\n    processMonetizationRevenueWithdrawalUrl({\n      peerId: renderingModal.chatId,\n      currentPassword: password,\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationVerificationError();\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeMonetizationVerificationModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('CheckPasswordTitle')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('CheckPasswordPlaceholder')}\n            error={renderingModal?.errorKey && lang.withRegular(renderingModal.errorKey)}\n            description={lang('CheckPasswordDescription')}\n            clearError={handleClearError}\n            isLoading={renderingModal?.isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      passwordHint,\n    };\n  },\n)(VerificationMonetizationModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MKdSUg2P\",\"chatItem\":\"qEIwBtp0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserFrozen, selectIsCurrentUserPremium, selectStickerSet, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './EmojiStatusAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['emojiStatusAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n  stickerSet?: ApiStickerSet;\n  isPremium?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst INTERVAL = 3200;\n\nconst EmojiStatusAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n  stickerSet,\n  isPremium,\n  isAccountFrozen,\n}) => {\n  const {\n    closeEmojiStatusAccessModal,\n    toggleUserEmojiStatusPermission,\n    sendWebAppEvent,\n    openPremiumModal,\n    loadDefaultStatusIcons,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [currentStatusIndex, setCurrentStatusIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (isOpen && !stickerSet?.stickers && !isAccountFrozen) {\n      loadDefaultStatusIcons();\n    }\n  }, [isOpen, stickerSet, isAccountFrozen]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !stickerSet?.stickers) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: stickerSet.stickers[currentStatusIndex].id,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, stickerSet, currentStatusIndex]);\n\n  const totalCount = stickerSet?.stickers?.length;\n  useInterval(\n    () => {\n      if (!totalCount) return;\n      setCurrentStatusIndex((prevIndex) => (prevIndex + 1) % totalCount);\n    },\n    totalCount ? INTERVAL : undefined,\n  );\n\n  const renderPickerItem = useLastCallback(() => {\n    return (\n      <PeerChip\n        withEmojiStatus\n        className={styles.chatItem}\n        itemClassName={styles.itemName}\n        mockPeer={mockPeerWithStatus}\n      />\n    );\n  });\n\n  const confirmHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      if (isPremium) {\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'allowed',\n            },\n          },\n        });\n        toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: true, isBotAccessEmojiGranted: true });\n      } else {\n        openPremiumModal();\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'cancelled',\n            },\n          },\n        });\n      }\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'emoji_status_access_requested',\n          eventData: {\n            status: 'cancelled',\n          },\n        },\n      });\n    }\n    if (isPremium) {\n      toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: false });\n    }\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('EmojiStatusAccessText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      contentClassName={styles.content}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderPickerItem()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const isPremium = selectIsCurrentUserPremium(global);\n    const stickerSet = global.defaultStatusIconsId ? selectStickerSet(global, global.defaultStatusIconsId) : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      currentUser,\n      stickerSet,\n      isPremium,\n      isAccountFrozen,\n    };\n  },\n)(EmojiStatusAccessModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { getGeolocationStatus } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './LocationAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['locationAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst LocationAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n}) => {\n  const {\n    closeLocationAccessModal, toggleUserLocationPermission, sendWebAppEvent,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const confirmHandler = useLastCallback(async () => {\n    const geolocationData = await getGeolocationStatus();\n    const { geolocation } = geolocationData;\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: true,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: true,\n            latitude: geolocation?.latitude,\n            longitude: geolocation?.longitude,\n            altitude: geolocation?.altitude,\n            course: geolocation?.heading,\n            speed: geolocation?.speed,\n            horizontal_accuracy: geolocation?.accuracy,\n            vertical_accuracy: geolocation?.accuracy,\n          },\n        },\n      });\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: false,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: false,\n          },\n        },\n      });\n    }\n  });\n\n  const renderInfo = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return (\n      <div className={styles.avatars}>\n        <Avatar\n          size=\"large\"\n          peer={currentUser}\n        />\n        <Icon name=\"next\" className={styles.arrow} />\n        <Avatar\n          size=\"large\"\n          peer={modal.bot}\n        />\n      </div>\n    );\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('LocationPermissionText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderInfo()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n\n    return {\n      currentUser,\n    };\n  },\n)(LocationAccessModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatars\":\"CGPoDaLo\",\"arrow\":\"pzERgD5x\"};","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"root\":\"njPBcVYr\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 56;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsored, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsored({ peerId: chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        text={lang('lng_report_sponsored_reported_link')}\n        url={lang('ReportAd.Help_URL')}\n      />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      className={styles.root}\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"kq9LwNTZ\",\"root\":\"E1bGWeON\",\"content\":\"tNysQgHL\",\"modalTitle\":\"Lj_ezEWU\",\"header\":\"AlMDkK7c\",\"optionText\":\"FU8m6NUU\",\"option\":\"RoxwMzvA\",\"optionButton\":\"Z6skYdvb\",\"sectionTitle\":\"GSfUuTet\",\"description\":\"zwfjNhF9\",\"title\":\"QawchdxB\",\"hasDepth\":\"CV7kzv9H\",\"titleMultiline\":\"OYFbu8fQ\",\"subtitle\":\"OUFckTb7\",\"transition\":\"n2VxPirU\",\"block\":\"KpptZ3Mk\",\"optionInfo\":\"yc3szGcx\",\"reportIcon\":\"kO8JC4gK\"};","import type { ChangeEvent } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport TextArea from '../../ui/TextArea';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportModal.module.scss';\n\nconst MAX_DESCRIPTION = 512;\nconst ADDED_PADDING = 20;\n\nexport type OwnProps = {\n  modal: TabState['reportModal'];\n};\n\nconst ReportModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportMessages, reportStory, closeReportModal, openPreviousReportModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const [text, setText] = useState('');\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    if (!messageIds) return;\n    switch (subject) {\n      case 'message':\n        reportMessages({ chatId: chatId!, messageIds, option });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds[0], peerId: peerId!, option,\n        });\n        break;\n    }\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal?.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    openPreviousReportModal();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeReportModal();\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        {renderingDepth ? (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Back')}\n            onClick={handleBackClick}\n          >\n            <Icon name=\"arrow-left\" />\n          </Button>\n        ) : (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleCloseClick}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={buildClassName(styles.title, renderingDepth && styles.hasDepth)}>\n            {renderingSection?.options\n              ? lang(modal?.subject === 'story' ? 'ReportStory' : 'Report') : renderingSection?.title}\n          </h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.options, renderingSection?.subtitle, renderingSection?.title]);\n\n  const handleTextChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  });\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  const closeReportMessageModalHandler = useLastCallback(() => {\n    setText('');\n    closeReportModal();\n  });\n\n  const sendMessageReportHandler = useLastCallback(() => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    switch (subject) {\n      case 'message':\n        reportMessages({\n          chatId: chatId!, messageIds, option: renderingSection?.option, description: text,\n        });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds?.[0], peerId: peerId!, option: renderingSection?.option, description: text,\n        });\n        break;\n    }\n    closeReportMessageModalHandler();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      header={header}\n      onClose={closeReportMessageModalHandler}\n      contentClassName={styles.content}\n      className={buildClassName(styles.root, modal?.subject === 'story' && 'component-theme-dark')}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          {renderingSection?.options\n            ? <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3> : undefined}\n          {renderingSection?.options?.map((option) => (\n            <ListItem\n              narrow\n              nonInteractive\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n          {renderingSection?.option ? (\n            <div className={styles.block}>\n              <AnimatedIconWithPreview\n                tgsUrl={LOCAL_TGS_URLS.Report}\n                size={100}\n                className={styles.reportIcon}\n                nonInteractive\n                forceAlways\n                noLoop={false}\n              />\n              <TextArea\n                id=\"option\"\n                className={styles.optionInfo}\n                label={renderingSection.isOptional ? lang('Report2CommentOptional') : lang('Report2Comment')}\n                onChange={handleTextChange}\n                value={text}\n                maxLength={MAX_DESCRIPTION}\n                maxLengthIndicator={(MAX_DESCRIPTION - text.length).toString()}\n                noReplaceNewlines\n              />\n              <Button\n                size=\"smaller\"\n                onClick={sendMessageReportHandler}\n                disabled={!renderingSection.isOptional ? !text.length : undefined}\n              >{lang('ReportSend')}\n              </Button>\n            </div>\n          ) : undefined}\n        </div>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Rzj2LMLf\",\"content\":\"Ve4u2KVI\",\"modalTitle\":\"E42tgAwD\",\"container\":\"pNSCKAVN\",\"header\":\"P1fPh6h8\",\"actionMessageView\":\"McJgXCtB\",\"info\":\"xWnXsG7q\",\"background\":\"_6w75ldP\",\"customBgImage\":\"CZkpv8n0\",\"customBgColor\":\"VJAYrDF_\",\"withTransition\":\"lElCwweL\",\"blurred\":\"m8xzfVvU\",\"withRightColumn\":\"rJCyBVMB\"};","import React, {\n  type FC,\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { getMockPreparedMessageFromResult, getUserFullName } from '../../../global/helpers';\nimport { selectTheme, selectThemeValues, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Message from '../../middle/message/Message';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PreparedMessageModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['preparedMessageModal'];\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  bot?: ApiUser;\n};\n\nconst PreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  customBackground,\n  backgroundColor,\n  bot,\n}) => {\n  const {\n    closePreparedInlineMessageModal, sendWebAppEvent, openSharePreparedMessageModal,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const { webAppKey, message, botId } = modal || {};\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  const handleOpenClick = useLastCallback(() => {\n    if (webAppKey && botId && message) {\n      openSharePreparedMessageModal({\n        webAppKey,\n        message,\n      });\n      closePreparedInlineMessageModal();\n    }\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closePreparedInlineMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.header}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang('Close')}\n          onClick={handleCloseClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={buildClassName('modal-title', styles.modalTitle)}>\n          {lang('BotShareMessage')}\n        </h3>\n      </div>\n    );\n  }, [lang, modal]);\n\n  const localMessage = useMemo(() => {\n    if (!botId || !message || !webAppKey) return undefined;\n    return getMockPreparedMessageFromResult(botId, message);\n  }, [botId, message, webAppKey]);\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  return (\n    <Modal\n      dialogRef={containerRef}\n      isOpen={isOpen}\n      header={header}\n      onClose={handleCloseClick}\n      className={styles.root}\n      contentClassName={styles.content}\n    >\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        {localMessage && (\n          <Message\n            key={botId}\n            message={localMessage}\n            threadId={MAIN_THREAD_ID}\n            messageListType=\"thread\"\n            noComments\n            noReplies\n            appearanceOrder={0}\n            isJustAdded={false}\n            isFirstInGroup\n            isLastInGroup\n            isLastInList={false}\n            isFirstInDocumentGroup={false}\n            isLastInDocumentGroup={false}\n          />\n        )}\n      </div>\n      <div className={styles.container}>\n        <p className={styles.info}>\n          {lang('WebAppShareMessageInfo', { user: getUserFullName(bot) })}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={handleOpenClick}\n        >\n          {lang('BotShareMessageShare')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }) => {\n    const theme = selectTheme(global);\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = selectThemeValues(global, theme) || {};\n    const bot = modal ? selectUser(global, modal?.botId) : undefined;\n\n    return {\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      bot,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PreparedMessageModal));\n","import React, {\n  type FC,\n  memo, useEffect,\n} from '../../../lib/teact/teact';\nimport {\n  getActions, getGlobal, withGlobal,\n} from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer, selectTabState,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePaidMessageConfirmation from '../../middle/composer/hooks/usePaidMessageConfirmation';\n\nimport PaymentMessageConfirmDialog from '../../common/PaymentMessageConfirmDialog';\nimport RecipientPicker from '../../common/RecipientPicker';\n\nexport type OwnProps = {\n  modal: TabState['sharePreparedMessageModal'];\n};\n\ntype StateProps = {\n  isPaymentMessageConfirmDialogOpen: boolean;\n  starsBalance: number;\n  isStarsBalanceModalOpen: boolean;\n};\n\nexport type SendParams = {\n  peerName?: string;\n  starsForSendMessage: number;\n};\n\nconst SharePreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal, isPaymentMessageConfirmDialogOpen, isStarsBalanceModalOpen, starsBalance,\n}) => {\n  const {\n    closeSharePreparedMessageModal,\n    sendInlineBotResult,\n    sendWebAppEvent,\n    showNotification,\n    updateSharePreparedMessageModalSendArgs,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const {\n    message, filter, webAppKey, pendingSendArgs,\n  } = modal || {};\n\n  const {\n    starsForSendMessage,\n  } = pendingSendArgs || {};\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForSendMessage || 0, isStarsBalanceModalOpen, starsBalance);\n\n  const handleClose = useLastCallback(() => {\n    closeSharePreparedMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const handleSend = useLastCallback((id: string, threadId?: ThreadId) => {\n    if (message && webAppKey) {\n      const global = getGlobal();\n      const peer = selectPeer(global, id);\n      sendInlineBotResult({\n        chatId: id,\n        threadId: threadId || MAIN_THREAD_ID,\n        id: message.result.id,\n        queryId: message.result.queryId,\n      });\n      if (!starsForSendMessage) {\n        showNotification({\n          message: lang('BotSharedToOne', getPeerTitle(lang, peer!)),\n        });\n      }\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_sent',\n        },\n      });\n      closeSharePreparedMessageModal();\n      updateSharePreparedMessageModalSendArgs({ args: undefined });\n    }\n  });\n\n  const handleSelectRecipient = useLastCallback((id: string, threadId?: ThreadId) => {\n    updateSharePreparedMessageModalSendArgs({ args: { peerId: id, threadId } });\n  });\n\n  const handleSendWithPaymentConfirmation = useLastCallback(() => {\n    if (pendingSendArgs) {\n      handleActionWithPaymentConfirmation(handleSend, pendingSendArgs.peerId, pendingSendArgs.threadId);\n    }\n  });\n\n  const handleClosePaymentMessageConfirmDialog = useLastCallback(() => {\n    closeConfirmModalPayForMessage();\n    updateSharePreparedMessageModalSendArgs({ args: undefined });\n  });\n\n  useEffect(() => {\n    if (pendingSendArgs) {\n      handleSendWithPaymentConfirmation();\n    }\n  }, [pendingSendArgs]);\n\n  const global = getGlobal();\n  const peer = pendingSendArgs ? selectPeer(global, pendingSendArgs.peerId) : undefined;\n  const peerName = peer ? getPeerTitle(lang, peer) : undefined;\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <>\n      <RecipientPicker\n        isOpen={isOpen}\n        searchPlaceholder={lang('Search')}\n        filter={filter}\n        onSelectRecipient={handleSelectRecipient}\n        onClose={handleClose}\n        onCloseAnimationEnd={unmarkIsShown}\n        isLowStackPriority\n      />\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={handleClosePaymentMessageConfirmDialog}\n        userName={peerName}\n        messagePriceInStars={starsForSendMessage || 0}\n        messagesCount={1}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { isPaymentMessageConfirmDialogOpen } = tabState;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    return {\n      isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n    };\n  },\n)(SharePreparedMessageModal));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"_YNfwDqt\",\"root\":\"SeaF_shb\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"button\":\"goI3MITH\",\"options\":\"b6847Kh3\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"proceedButtons\":\"L4YzeG91\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  getSendersFromSelectedMessages,\n  selectBot,\n  selectCanDeleteSelectedMessages,\n  selectChat,\n  selectChatFullInfo, selectIsChatWithBot,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport AvatarList from './AvatarList';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  messageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  onConfirm?: NoneToVoidFunction;\n  canBanUsers?: boolean;\n  isCreator?: boolean;\n  linkedChatId?: string;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isSuperGroup,\n  isSchedule,\n  currentUserId,\n  messageIds,\n  isCreator,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  chatBot,\n  adminMembersById,\n  canBanUsers,\n  linkedChatId,\n}) => {\n  const {\n    closeDeleteMessageModal,\n    deleteMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n    deleteParticipantHistory,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [peerIdsToDeleteAll, setPeerIdsToDeleteAll] = useState<string[] | undefined>(undefined);\n  const [peerIdsToBan, setPeerIdsToBan] = useState<string[] | undefined>(undefined);\n  const [peerIdsToReportSpam, setPeerIdsToReportSpam] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const [shouldDeleteForAll, setShouldDeleteForAll] = useState(true);\n\n  const peerList = useMemo(() => {\n    if (isChannel || !messageIds || !chat) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n    const senderArray = getSendersFromSelectedMessages(global, chat.id, messageIds);\n    return senderArray ? unique(senderArray)\n      .filter((peer) => peer?.id !== chat?.id && peer?.id !== linkedChatId) : MEMO_EMPTY_ARRAY;\n  }, [chat, isChannel, linkedChatId, messageIds]);\n\n  const buildNestedOptionListWithAvatars = useLastCallback(() => {\n    return peerList.map((member) => {\n      return {\n        value: `${member.id}`,\n        label: getPeerTitle(lang, member) || '',\n        leftElement: <Avatar size=\"small\" peer={member} />,\n      };\n    });\n  });\n\n  const peerListToDeleteAll = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== linkedChatId && peer.id !== currentUserId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToReportSpam = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== currentUserId && peer.id !== linkedChatId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToBan = useMemo(() => {\n    const isCurrentUserInList = peerList.some((peer) => peer.id === currentUserId);\n    const shouldReturnEmpty = !canBanUsers || isCurrentUserInList;\n\n    if (shouldReturnEmpty) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return peerList.filter((peer) => {\n      const isAdmin = adminMembersById?.[peer.id];\n      return isCreator || !isAdmin;\n    });\n  }, [peerList, isCreator, currentUserId, canBanUsers, adminMembersById]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return Boolean(peerListToDeleteAll.length || peerListToReportSpam.length || peerListToBan.length);\n  }, [peerListToDeleteAll, peerListToReportSpam, peerListToBan]);\n\n  const shouldShowOption = shouldShowAdditionalOptions\n    && !canDeleteForAll && !isSchedule && isSuperGroup;\n\n  const peerNames = useMemo(() => {\n    if (!peerList || isSchedule) return {};\n    return buildCollectionByCallback(peerList, (peer) => [peer.id, getPeerTitle(lang, peer)]);\n  }, [isSchedule, lang, peerList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'spam' : peerList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, linkedChatId, currentUserId]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'delete_all' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(peerNames)[0]),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, peerNames, linkedChatId, currentUserId]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'ban' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(peerNames)[0])),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, messageIds, peerList, peerNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const filterMessageIdByPeerId = useLastCallback((peerIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(global, chat.id, msgId);\n      return sender && peerIds.includes(sender.id);\n    });\n  });\n\n  const handleReportSpam = useLastCallback((userMessagesMap: Record<string, number[]>) => {\n    Object.entries(userMessagesMap).forEach(([userId, messageIdList]) => {\n      if (messageIdList.length) {\n        reportChannelSpam({\n          participantId: userId,\n          chatId: chat!.id,\n          messageIds: messageIdList,\n        });\n      }\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteAllPeerMessages = useLastCallback((peerIdList: string[]) => {\n    if (!chat) return;\n    peerIdList.forEach((peerId) => {\n      deleteParticipantHistory({ peerId, chatId: chat.id });\n    });\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageList = useLastCallback(() => {\n    if (!chat || !messageIds) return;\n\n    onConfirm?.();\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (shouldShowOption) {\n      if (peerIdsToReportSpam) {\n        const global = getGlobal();\n        const peerIdList = peerIdsToReportSpam.filter((option) => !Number.isNaN(Number(option)));\n        const messageList = messageIds!.reduce<Record<string, number[]>>((acc, msgId) => {\n          const peer = selectSenderFromMessage(global, chat.id, msgId);\n          if (peer && peerIdList.includes(peer.id)) {\n            if (!acc[peer.id]) {\n              acc[peer.id] = [];\n            }\n            acc[peer.id].push(Number(msgId));\n          }\n          return acc;\n        }, {});\n\n        handleReportSpam(messageList);\n      }\n\n      if (peerIdsToDeleteAll) {\n        const peerIdList = peerIdsToDeleteAll.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteAllPeerMessages(peerIdList);\n      }\n\n      if (peerIdsToBan && !havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteMember(peerIdList);\n        const filteredMessageIdList = filterMessageIdByPeerId(peerIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (peerIdsToBan && havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleUpdateChatMemberBannedRights(peerIdList);\n      }\n\n      if (!peerIdsToReportSpam || !peerIdsToDeleteAll || !peerIdsToBan) {\n        deleteMessages({ messageIds, shouldDeleteForAll });\n      }\n    } else {\n      deleteMessages({ messageIds, shouldDeleteForAll });\n    }\n\n    closeDeleteMessageModal();\n    exitMessageSelectMode();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setPeerIdsToReportSpam(undefined);\n      setPeerIdsToDeleteAll(undefined);\n      setPeerIdsToBan(undefined);\n      setShouldDeleteForAll(true);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOption && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOption && (\n          <AvatarList\n            size=\"small\"\n            peers={peerList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOption ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', messageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={setPeerIdsToReportSpam}\n          selected={peerIdsToReportSpam}\n          nestedCheckbox={messageIds && peerList.length >= 2}\n        />\n        {peerListToDeleteAll?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_DELETE_OPTION}\n            onChange={setPeerIdsToDeleteAll}\n            selected={peerIdsToDeleteAll}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n        {peerListToBan?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={setPeerIdsToBan}\n            selected={peerIdsToBan}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', peerList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageList}\n      className={styles.root}\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {shouldShowOption && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              peerIdsToBan && canBanUsers ? (\n                <ListItem\n                  narrow\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(canDeleteForAll || chatBot || !shouldShowOption) && (\n          <>\n            <p>{messageIds && messageIds.length > 1\n              ? lang('AreYouSureDeleteFewMessages') : lang('AreYouSureDeleteSingleMessage')}\n            </p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{oldLang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{oldLang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        {canDeleteForAll && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={contactName ? renderText(oldLang('DeleteMessagesOptionAlso', contactName))\n              : oldLang('Conversation.DeleteMessagesForEveryone')}\n            checked={shouldDeleteForAll}\n            onCheck={setShouldDeleteForAll}\n          />\n        )}\n        <div className={buildClassName('dialog-buttons',\n          isMediaDropdownOpen ? styles.dialogButtons : styles.proceedButtons)}\n        >\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageList}>\n            {shouldShowOption ? oldLang('DeleteProceedBtn') : lang('Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const messageIds = deleteMessageModal?.messageIds;\n    const chatId = deleteMessageModal?.chatId;\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global, messageIds);\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const linkedChatId = chatFullInfo?.linkedChatId;\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const isSchedule = deleteMessageModal?.isSchedule;\n    const onConfirm = deleteMessageModal?.onConfirm;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const chatBot = Boolean(chat && !isSystemBot(chat.id) && selectBot(global, chat.id));\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && getHasAdminRight(chat, 'banUsers');\n    const isCreator = chat?.isCreator;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && (isChatSuperGroup(chat) || isChannel);\n\n    return {\n      chat,\n      isChannel,\n      isSuperGroup,\n      messageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      canBanUsers,\n      linkedChatId,\n      isSchedule,\n      isCreator,\n      onConfirm,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages, selectCurrentChat,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n  shouldWarnAboutSvg?: boolean;\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  chat,\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n    reportMessages,\n    openDeleteMessageModal,\n    setSharedSettingOption,\n  } = getActions();\n  const lang = useOldLang();\n\n  useCopySelectedMessages(isActive);\n\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    openDeleteMessageModal({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n      isSchedule,\n    });\n  });\n\n  useEffect(() => {\n    return isActive && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? handleDelete : undefined,\n        onDelete: canDeleteMessages ? handleDelete : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, handleDelete, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const handleMessageDownload = useLastCallback(() => {\n    if (shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: false });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const openMessageReport = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    reportMessages({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n    });\n    exitMessageSelectMode();\n  });\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <Icon name={icon} />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className={className}>\n        <div className=\"MessageSelectToolbar-inner\">\n          <Button\n            color=\"translucent\"\n            round\n            onClick={handleExitMessageSelectMode}\n            ariaLabel=\"Exit select mode\"\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n            {formattedMessagesCount}\n          </span>\n\n          {Boolean(selectedMessagesCount) && (\n            <div className=\"MessageSelectToolbar-actions\">\n              {messageListType !== 'scheduled' && canForwardMessages && (\n                renderButton(\n                  'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n                )\n              )}\n              {canReportMessages && (\n                renderButton('flag', lang('Conversation.ReportMessages'), openMessageReport)\n              )}\n              {canDownloadMessages && !hasProtectedMessage && (\n                renderButton('download', lang('lng_media_download'), handleMessageDownload)\n              )}\n              {!hasProtectedMessage && (\n                renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n              )}\n              {canDeleteMessages && (\n                renderButton('delete', lang('EditAdminGroupDeleteMessages'), handleDelete, true)\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const chat = selectCurrentChat(global);\n\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall || tabState.reportModal\n      || tabState.deleteMessageModal);\n\n    return {\n      chat,\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n      shouldWarnAboutSvg,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport Icon from '../common/icons/Icon';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={oldLang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <Icon name=\"heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(lang, reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(lang, count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={oldLang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <Icon name=\"heart-outline\" className=\"status-icon\" />\n                          {formatDateAtTime(oldLang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(oldLang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {oldLang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport { IS_ANDROID } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PeerChip\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","/* eslint-disable no-null/no-null */\n/* eslint-disable consistent-return */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-no-bind */\n/* eslint-disable no-console */\n\nimport React, { useState } from 'react';\nimport {\n  type Dispatch,\n  memo,\n  type SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\nimport type { UseChatHelpers } from '@ai-sdk/react';\nimport type {\n  Message,\n} from 'ai';\nimport cx from 'classnames';\nimport { toast } from 'sonner';\nimport { useLocalStorage, useWindowSize } from 'usehooks-ts';\n\nimport { sanitizeUIMessages } from '../../../lib/utils';\nimport { AITextarea } from '../component/AITextarea';\nimport { Button } from '../component/button';\nimport { StopIcon } from '../icons';\n\nfunction PureMultimodalInput({\n  status,\n  stop,\n  setMessages,\n  handleSearch,\n  className,\n}: {\n  status: UseChatHelpers['status'];\n  stop: () => void;\n  setMessages: Dispatch<SetStateAction<Array<Message>>>;\n  handleSearch: (inputValue:string)=>void;\n  className?: string;\n}) {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const { width } = useWindowSize();\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      adjustHeight();\n    }\n  }, []);\n\n  const adjustHeight = () => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${Math.min(200, Math.max(90, textareaRef.current.scrollHeight + 2))}px`;\n    }\n  };\n\n  const resetHeight = () => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = '90px';\n    }\n  };\n\n  const [localStorageInput, setLocalStorageInput] = useLocalStorage(\n    'input',\n    '',\n  );\n\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      const domValue = textareaRef.current.value;\n      // Prefer DOM value over localStorage to handle hydration\n      const finalValue = domValue || localStorageInput || '';\n      // setInput(finalValue);\n      setInputValue(finalValue);\n      adjustHeight();\n    }\n    // Only run once after hydration\n    // eslint-disable-next-line react-hooks/exhaustive-deps, react-hooks-static-deps/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLocalStorageInput(inputValue);\n  }, [inputValue, setLocalStorageInput]);\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setInputValue(event.target.value);\n    adjustHeight();\n  };\n\n  const submitForm = useCallback(() => {\n    if (!inputValue) {\n      return;\n    }\n    handleSearch(inputValue);\n    setInputValue('');\n    setLocalStorageInput('');\n    resetHeight();\n\n    if (width && width > 768) {\n      textareaRef.current?.focus();\n    }\n  }, [handleSearch, inputValue, setLocalStorageInput, width]);\n\n  return (\n    <div className=\"relative w-full mx-[22px] flex flex-col gap-4\">\n      <AITextarea\n        ref={textareaRef}\n        placeholder=\"Send a message...\"\n        value={inputValue}\n        onChange={handleInput}\n        className={cx(\n          'h-[90px] overflow-y-auto border-[#7D40FF] resize-none rounded-2xl !text-base pb-10 focus-visible:!ring-0 !ring-offset-0',\n          className,\n        )}\n        rows={2}\n        autoFocus\n        onKeyDown={(event) => {\n          if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n\n            if (status !== 'ready') {\n              toast.error('Please wait for the model to finish its response!');\n            } else {\n              submitForm();\n            }\n          }\n        }}\n      />\n\n      <div className=\"absolute bottom-0 right-0 p-2 w-fit flex flex-col justify-end\">\n        {status === 'submitted' ? (\n          <StopButton stop={stop} setMessages={setMessages} />\n        ) : (\n          <SendButton\n            input={inputValue}\n            submitForm={submitForm}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport const AISearchInput = memo(\n  PureMultimodalInput,\n  (prevProps, nextProps) => {\n    if (prevProps.status !== nextProps.status) return false;\n\n    return true;\n  },\n);\n\nfunction PureStopButton({\n  stop,\n  setMessages,\n}: {\n  stop: () => void;\n  setMessages: Dispatch<SetStateAction<Array<Message>>>;\n}) {\n  return (\n    <Button\n      className=\"rounded-full p-1.5 h-fit border dark:border-zinc-600\"\n      onClick={(event) => {\n        event.preventDefault();\n        stop();\n        setMessages((messages) => sanitizeUIMessages(messages));\n      }}\n    >\n      <StopIcon size={14} />\n    </Button>\n  );\n}\n\nconst StopButton = memo(PureStopButton);\n\nfunction PureSendButton({\n  submitForm,\n  input,\n}: {\n  submitForm: () => void;\n  input: string;\n}) {\n  return (\n    <Button\n      className=\"!px-0 !py-0 !w-[24px] !h-[24px] !bg-transparent \"\n      onClick={(event) => {\n        event.preventDefault();\n        submitForm();\n      }}\n      disabled={input.length === 0}\n    >\n      {/* <ArrowUpIcon size={14} /> */}\n      <i className=\"icon icon-send text-[#B27AFF] text-[24px]\" />\n    </Button>\n  );\n}\n\nconst SendButton = memo(PureSendButton, (prevProps, nextProps) => {\n  if (prevProps.input !== nextProps.input) return false;\n  return true;\n});\n","/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, {\n  useCallback, useEffect, useRef, useState,\n} from 'react';\nimport { useChat } from '@ai-sdk/react';\nimport type { Message, UIMessage } from 'ai';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getGlobal } from '../../../global';\n\nimport { SERVER_API_URL } from '../../../config';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport { useScrollToBottom } from '../hook/use-scroll-to-bottom';\nimport { Messages } from '../messages';\nimport { ChataiStores } from '../store';\nimport { parseMessage2StoreMessage, parseStoreMessage2Message } from '../store/messages-store';\nimport { sendGAEvent } from '../utils/analytics';\nimport { messageEmbeddingStore } from '../vector-store';\n\nimport { AISearchInput } from './AISearchInput';\n\nconst GLOBAL_SEARCH_CHATID = '777889';\n\nexport const AISearch = () => {\n  const global = getGlobal();\n  const [pageInfo, setPageInfo] = useState<{ lastTime: number | undefined; hasMore: boolean }>({ lastTime: undefined, hasMore: true });\n  const {\n    scrollToBottom, scrollLocked, isScrollLock,\n  } = useScrollToBottom();\n  const {\n    messages, setMessages, append, status, stop,\n  } = useChat({\n    id: GLOBAL_SEARCH_CHATID,\n    api: `${SERVER_API_URL}/chat`,\n    sendExtraMessageFields: true,\n  });\n\n  useEffect(() => {\n    if (!isScrollLock) {\n      scrollToBottom();\n    }\n  }, [isScrollLock, messages, scrollToBottom]);\n\n  useEffect(() => {\n    ChataiStores.message?.getMessages(GLOBAL_SEARCH_CHATID, undefined, 20)?.then((res) => {\n      if (res.messages.length > 0) {\n        const localChatAiMessages = parseStoreMessage2Message(res.messages);\n        setMessages((prev) => [...localChatAiMessages, ...prev]);\n      } else {\n        const suggestionMessage:Message = {\n          role: 'assistant',\n          id: uuidv4(),\n          createdAt: new Date(),\n          content: '',\n          annotations: [{\n            type: 'ai-search-sugesstion',\n          }],\n        };\n        setMessages([suggestionMessage]);\n      }\n      setPageInfo({\n        lastTime: res.lastTime,\n        hasMore: res.hasMore,\n      });\n    });\n    return () => {\n      setMessages([]);\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (messages.length > 0 && status === 'ready') {\n      const parsedMessage = parseMessage2StoreMessage(GLOBAL_SEARCH_CHATID, messages);\n      ChataiStores.message?.storeMessages([...parsedMessage]);\n    }\n  }, [status, messages]);\n\n  const handleLoadMore = useCallback(() => {\n    scrollLocked();\n    return new Promise<void>((resolve) => {\n      ChataiStores.message?.getMessages(GLOBAL_SEARCH_CHATID, pageInfo?.lastTime, 20)?.then((res) => {\n        if (res.messages) {\n          const localChatAiMessages = parseStoreMessage2Message(res.messages);\n          setMessages((prev) => [...localChatAiMessages, ...prev]);\n        }\n        setPageInfo({\n          lastTime: res.lastTime,\n          hasMore: res.hasMore,\n        });\n        resolve();\n      });\n    });\n  }, [pageInfo?.lastTime, scrollLocked, setMessages]);\n\n  //   const deleteMessage = useCallback((messageId: string) => {\n  //     ChataiStores.message?.delMessage(messageId).then(() => {\n  //       setLocalChatAiMessages((prev) => prev.filter((message) => message.id !== messageId));\n  //       setMessages((prev) => prev.filter((message) => message.id !== messageId));\n  //     });\n  //   }, [setMessages]);\n\n  const searchGroup = useCallback(async (query: string) => {\n    const vectorSearchResults = await messageEmbeddingStore.similaritySearch({\n      query,\n      k: 100,\n      filterOptions: {\n        include: {\n          metadata: {\n            chatType: 'group',\n          },\n        },\n      },\n    });\n    const similarItems = vectorSearchResults.similarItems;\n    let searchResult = null;\n    if (similarItems.length > 0) {\n      const chatIds = Array.from(new Set(similarItems.map((item:any) => {\n        if (item.score > 0.7) {\n          return (item?.metadata as { chatId: string })?.chatId;\n        }\n        return undefined;\n      }).filter(Boolean)));\n      if (chatIds.length > 0) {\n        searchResult = JSON.stringify(chatIds);\n      }\n    }\n    if (searchResult) {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: searchResult,\n        createdAt: new Date(),\n        parts: [],\n        annotations: [{\n          type: 'group-search',\n        }],\n      };\n      setMessages((prev) => [...prev, message]);\n    } else {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: 'No relevant group was found',\n        createdAt: new Date(),\n        parts: [],\n      };\n      setMessages((prev) => [...prev, message]);\n    }\n  }, [setMessages]);\n\n  const searchUser = useCallback(async (query: string) => {\n    const vectorSearchResults = await messageEmbeddingStore.similaritySearch({\n      query,\n      k: 100,\n      filterOptions: {\n        include: {\n          metadata: {\n            chatType: 'private',\n          },\n        },\n      },\n    });\n    const similarItems = vectorSearchResults.similarItems;\n    let searchResult = null;\n    if (similarItems.length > 0) {\n      const senderIds = Array.from(new Set(similarItems.map((item:any) => {\n        if (item.score > 0.7) {\n          return (item?.metadata as { senderId: string })?.senderId;\n        }\n        return undefined;\n      }).filter(Boolean)));\n      if (senderIds.length > 0) {\n        searchResult = JSON.stringify(senderIds);\n      }\n    }\n    if (searchResult) {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: searchResult,\n        createdAt: new Date(),\n        parts: [],\n        annotations: [{\n          type: 'user-search',\n        }],\n      };\n      setMessages((prev) => [...prev, message]);\n    } else {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: 'No relevant users was found',\n        createdAt: new Date(),\n        parts: [],\n      };\n      setMessages((prev) => [...prev, message]);\n    }\n  }, [setMessages]);\n  const searchMessage = useCallback(async (query: string) => {\n    const vectorSearchResults = await messageEmbeddingStore.similaritySearch({\n      query,\n      k: 100,\n    });\n    const similarItems = vectorSearchResults.similarItems;\n    if (similarItems.length > 0) {\n      const messageList = similarItems.map((item:any) => {\n        const { chatId, senderId } = item.metadata as { chatId:string;senderId:string };\n        const chat = selectChat(global, chatId);\n        if (chat) {\n          const peer = senderId ? selectUser(global, senderId) : undefined;\n          return {\n            chatId,\n            chatTitle: chat?.title ?? 'Unknown',\n            senderName: peer ? `${peer.firstName || ''} ${peer.lastName || ''}` : '',\n            content: item.text,\n          };\n        }\n        return null;\n      });\n      append({\n        role: 'user',\n        content: `你是一个专业的聊天记录分析师,用户输入的关键词是${query},下面是根据关键词检索出来的相关的聊天记录,请对此加以总结:\n          # 总结消息偏好:\n              ## 根据消息的内容选择合适的语种进行总结\n              ## 过滤所有的无意义消息；\n              ## 尽量提取关键信息(如任务、问题、请求等),并简要总结。\n              ## 为保证输出内容的完整性,尽量精简总结内容；\n              ## 主话题不超过5个,子话题总数不超过15个\n          # 消息内容\n          ${JSON.stringify(messageList)}\n        `,\n        id: Math.random().toString(),\n        annotations: [{\n          isAuxiliary: true,\n        }],\n      });\n      scrollToBottom();\n    }\n  }, [append, global, scrollToBottom]);\n\n  const toolsHitCheck = useCallback((inputValue: string) => {\n    fetch(`${SERVER_API_URL}/tool-check`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        messages: [{\n          id: uuidv4(),\n          content: inputValue,\n          role: 'user',\n        }],\n      }),\n    }).then((res) => res.json())\n      .then((toolResults) => {\n        if (toolResults && toolResults.length > 0) {\n          toolResults.forEach((toolCall: any) => {\n            if (toolCall.toolName === 'checkIsSearchGroup') {\n              searchGroup(toolCall.result.keyword);\n            } else if (toolCall.toolName === 'checkIsSearchUser') {\n              searchUser(toolCall.result.keyword);\n            } else if (toolCall.toolName === 'nullTool') {\n              // eslint-disable-next-line no-console\n              console.log('没有命中工具');\n              searchMessage(inputValue);\n            }\n          });\n        }\n      });\n  }, [searchGroup, searchMessage, searchUser]);\n\n  const handleSearch = useCallback((query: string) => {\n    setMessages((messages) => {\n      return [...messages, {\n        role: 'user',\n        content: query,\n        id: Math.random().toString(),\n        createdAt: new Date(),\n      }];\n    });\n    toolsHitCheck(query);\n    sendGAEvent('ai_search');\n  }, [setMessages, toolsHitCheck]);\n\n  return (\n    <div className=\"pb-[28px] flex-1 flex flex-col h-full gap-[8px] overflow-hidden\">\n      <Messages\n        className=\"chat-ai-output-wrapper flex-1\"\n        status={status}\n        messages={messages}\n        loadMore={handleLoadMore}\n        hasMore={pageInfo.hasMore}\n        chatId={GLOBAL_SEARCH_CHATID!}\n      />\n      <form className=\"flex mx-auto gap-2 w-full\">\n        <AISearchInput\n          status={status}\n          stop={stop}\n          setMessages={setMessages}\n          handleSearch={handleSearch}\n        />\n      </form>\n    </div>\n  );\n};\n","/* eslint-disable no-null/no-null */\nimport React, { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport { injectComponent } from '../../../lib/injectComponent';\nimport { AISearch } from '../../chatAssistant/ai-search/AISearch';\n\nconst injectMessageAI = injectComponent(AISearch);\nexport const AISearchWrapper = () => {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    let injected: { unmount: () => void } | undefined;\n    if (containerRef.current) {\n      injected = injectMessageAI(containerRef.current);\n    }\n    return () => {\n      injected?.unmount();\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"LeftSearch--content\" ref={containerRef} />\n  );\n};\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ThemeKey } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\nimport { selectSharedSettings } from '../../../../global/selectors/sharedState';\n\nexport type StateProps = {\n  theme: ThemeKey;\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyDefaults, selectNotifyException, selectUser,\n} from '../../../global/selectors';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  withOpenAppButton?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  withOpenAppButton,\n  onClick,\n}) => {\n  const { requestMainWebView } = getActions();\n  const oldLang = useOldLang();\n\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useLastCallback(() => {\n    onClick(chatId);\n  });\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chatId,\n      peerId: chatId,\n      theme,\n    });\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {withOpenAppButton && user?.hasMainMiniApp && (\n        <Button\n          className=\"ChatBadge miniapp\"\n          pill\n          fluid\n          size=\"tiny\"\n          onClick={handleOpenApp}\n        >\n          {oldLang('BotOpen')}\n        </Button>\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    return filterPeersByQuery({ ids: withoutRecent, query: searchQuery, type: 'user' });\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: OldLangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <Icon name=\"calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredPeer } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId } from '../../../global/helpers';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { type ObserveFn, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport BadgeButton from '../../common/BadgeButton';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredContextMenuContainer';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  sponsoredPeer: ApiSponsoredPeer;\n  observeIntersection?: ObserveFn;\n};\n\nconst LeftSearchResultSponsored: FC<OwnProps> = ({\n  sponsoredPeer,\n  observeIntersection,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const { clickSponsored, viewSponsored, openChat } = getActions();\n  const lang = useLang();\n\n  const {\n    peerId, randomId, additionalInfo, sponsorInfo,\n  } = sponsoredPeer;\n\n  useOnIntersect(ref, observeIntersection, (entry) => {\n    if (entry.intersectionRatio === 1) {\n      viewSponsored({ randomId });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    clickSponsored({ randomId });\n    openChat({ id: peerId });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const {\n    handleClick: handleBadgeClick,\n    handleMouseDown: handleBadgeMouseDown,\n  } = useFastClick((e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleContextMenu(e);\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      ref={ref}\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      buttonRef={buttonRef}\n    >\n      {isUserId(peerId) ? (\n        <PrivateChatInfo\n          userId={peerId}\n          withUsername\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={peerId}\n          withUsername\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      <BadgeButton className=\"search-sponsored-badge\" onMouseDown={handleBadgeMouseDown} onClick={handleBadgeClick}>\n        {lang('SponsoredPeerBadge')}\n        <Icon name=\"more\" />\n      </BadgeButton>\n      {contextMenuAnchor && (\n        <SponsoredMessageContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          triggerRef={ref}\n          randomId={randomId}\n          additionalInfo={additionalInfo}\n          canReport\n          sponsorInfo={sponsorInfo}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(LeftSearchResultSponsored);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              withOpenAppButton\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageSearchContext, ApiSponsoredPeer } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  isChatChannel,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PeerChip from '../../common/PeerChip';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Transition from '../../ui/Transition';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport LeftSearchResultSponsored from './LeftSearchResultSponsored';\nimport RecentContacts from './RecentContacts';\n\nimport './ChatResults.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  sponsoredPeer?: ApiSponsoredPeer;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  sponsoredPeer,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal,\n    setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n  const [searchContext, setSearchContext] = useState<ApiMessageSearchContext>('all');\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n          context: searchContext,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery, searchContext]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  function getSearchContextCaption(context: ApiMessageSearchContext) {\n    if (context === 'users') return lang('PrivateChatsSearchContext');\n    if (context === 'groups') return lang('GroupChatsSearchContext');\n    if (context === 'channels') return lang('ChannelsSearchContext');\n    return lang('AllChatsSearchContext');\n  }\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.chatResultsContextMenu .bubble'));\n  const getTriggerElement = useLastCallback(() => ref.current!.querySelector('.menuTrigger'));\n\n  const handleClickContext = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const itemPlaceholderClass = buildClassName('icon', 'iconPlaceholder');\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"chatResultsContextMenu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          <MenuItem\n            icon={searchContext === 'all' ? 'check' : undefined}\n            customIcon={searchContext !== 'all' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('all')}\n          >\n            {getSearchContextCaption('all')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'users' ? 'check' : undefined}\n            customIcon={searchContext !== 'users' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('users')}\n          >\n            {getSearchContextCaption('users')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'groups' ? 'check' : undefined}\n            customIcon={searchContext !== 'groups' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('groups')}\n          >\n            {getSearchContextCaption('groups')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'channels' ? 'check' : undefined}\n            customIcon={searchContext !== 'channels' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('channels')}\n          >\n            {getSearchContextCaption('channels')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterPeersByQuery({ ids: filteredChatIds, query: searchQuery, type: 'chat' });\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterPeersByQuery({\n      ids: contactIdsWithMe, query: searchQuery, type: 'user',\n    });\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    searchMessagesGlobal({\n      type: isChannelList ? 'channels' : 'text',\n      context: searchContext,\n      shouldResetResultsByType: true,\n      shouldCheckFetchingMessagesStatus: true,\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [searchContext]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(oldLang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const actualFoundIds = foundMessages;\n\n  const nothingFound = searchContext === 'all' && fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !actualFoundIds.length;\n  const isMessagesFetching = fetchingStatus?.messages;\n\n  const shouldRenderTopPeers = !searchQuery && !searchDate && !isChannelList;\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n    isDisabled: !shouldRenderTopPeers,\n  });\n\n  if (shouldRenderTopPeers) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  const shouldRenderMessagesSection = searchContext === 'all' ? Boolean(actualFoundIds.length) : true;\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"LeftSearch--content custom-scroll\"\n      items={actualFoundIds}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={oldLang('ChatList.Search.NoResults')}\n          description={oldLang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={oldLang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PeerChip\n              peerId={id}\n              className=\"left-search-local-suggestion\"\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {oldLang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                withOpenAppButton\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {oldLang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {sponsoredPeer && (\n            <LeftSearchResultSponsored sponsoredPeer={sponsoredPeer} observeIntersection={observe} />\n          )}\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {oldLang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      <div className=\"menuOwner\" ref={ref}>\n        {renderContextMenu()}\n        {shouldRenderMessagesSection && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n              {!isChannelList && (\n                <Link className=\"Link menuTrigger dropDownLink\" onClick={handleClickContext}>\n                  {lang('SearchContextCaption', {\n                    type: getSearchContextCaption(searchContext),\n                  }, {\n                    withNodes: true,\n                  })}\n\n                  <Transition\n                    name=\"fade\"\n                    shouldCleanup\n                    activeKey={Number(isMessagesFetching)}\n                    className=\"iconContainer\"\n                    slideClassName=\"iconContainerSlide\"\n                  >\n                    {isMessagesFetching && (<Loading />)}\n                    {!isMessagesFetching && <Icon name=\"down\" />}\n                  </Transition>\n                </Link>\n              )}\n              {oldLang('SearchMessages')}\n            </h3>\n            {actualFoundIds.map(renderFoundMessage)}\n          </div>\n        )}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType, sponsoredPeer,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      sponsoredPeer,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { RegularLangKey } from '../../../types/language';\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport { AISearchWrapper } from './AISearchWrapper';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\ntype TabInfo = {\n  type: GlobalSearchContent;\n  key: RegularLangKey;\n};\n\nconst TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabChats' },\n  { type: GlobalSearchContent.AI, key: 'SearchTabAI' },\n  { type: GlobalSearchContent.ChannelList, key: 'SearchTabChannels' },\n  { type: GlobalSearchContent.BotApps, key: 'SearchTabApps' },\n  { type: GlobalSearchContent.Media, key: 'SearchTabMedia' },\n  { type: GlobalSearchContent.Links, key: 'SearchTabLinks' },\n  { type: GlobalSearchContent.Files, key: 'SearchTabFiles' },\n  { type: GlobalSearchContent.Music, key: 'SearchTabMusic' },\n  { type: GlobalSearchContent.Voice, key: 'SearchTabVoice' },\n];\n\nconst CHAT_TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabMessages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = useMemo(() => {\n    const arr = chatId ? CHAT_TABS : TABS;\n    return arr.map((tab) => ({\n      ...tab,\n      title: lang(tab.key),\n    }));\n  }, [chatId, lang]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.AI:\n              return (\n                <AISearchWrapper />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterPeersByQuery({ ids: chatIds, query: chatFilter, type: 'chat' }),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport Icon from '../../../common/icons/Icon';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIconWithPreview\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title.text}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { AI_FOLDER_ID, ALL_FOLDER_ID, PRESET_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS, UNREAD_FOLDER_ID } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\nimport { selectSharedSettings } from \"../../../../global/selectors/sharedState\"\nimport { filterAIFolder } from \"../../../chatAssistant/ai-chatfolders/util\"\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 56;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: lang('FilterAllChats'),\n            entities: [],\n          },\n        };\n      } else if (id === PRESET_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: 'Preset',\n            entities: [],\n          },\n        };\n      } else if (id === UNREAD_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: 'Unread',\n            entities: [],\n          },\n        };\n      } else if (id === AI_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: 'AI',\n            entities: [],\n          },\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n        noTitleAnimations: folder.noTitleAnimations,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIconWithPreview\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"settings-button with-icon\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <Icon name=\"add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID || folder.id === PRESET_FOLDER_ID || folder.id === UNREAD_FOLDER_ID || folder.id === AI_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {renderTextWithEntities({\n                        text: folder.title.text,\n                        entities: folder.title.entities,\n                        noCustomEmojiPlayback: folder.noTitleAnimations,\n                      })}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                    {isBlocked && <Icon name=\"lock-badge\" className=\"settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <Icon name=\"link\" className=\"mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                  </span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    let folderIds = global.chatFolders.orderedIds;\n    const { aiChatFolders } = selectSharedSettings(global);\n    if (aiChatFolders !== true) {\n      folderIds = filterAIFolder(folderIds);\n    }\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Icon from '../../../common/icons/Icon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  folder?: ApiChatFolder;\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  folder,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (folder?.includedChatIds || []).concat(folder?.pinnedChatIds || []);\n  }, [folder?.includedChatIds, folder?.pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        {folder && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('FolderLinkTitleDescription', {\n              folder: renderTextWithEntities({\n                text: folder.title.text,\n                entities: folder.title.entities,\n                noCustomEmojiPlayback: folder.noTitleAnimations,\n              }),\n              chats: lang('FolderLinkTitleDescriptionChats', { count: chatsCount }, { pluralValue: chatsCount }),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n          </p>\n        )}\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? oldLang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      folder,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsText } from '../../../util/localization/format';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../icons/Icon';\n\ntype OwnProps = {\n  min?: number;\n  max: number;\n  value: number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  bold?: boolean;\n  className?: string;\n  defaultValue: number;\n  onChange: (value: number) => void;\n  canChangeChargeForMessages?: boolean;\n};\n\nconst DEFAULT_POINTS = [50, 100, 500, 1000, 2000, 5000, 10000];\n\nconst PaidMessageSlider: FC<OwnProps> = ({\n  min = 0,\n  max,\n  value,\n  disabled,\n  readOnly,\n  bold,\n  className,\n  defaultValue,\n  onChange,\n  canChangeChargeForMessages,\n}) => {\n  const lang = useLang();\n\n  const points = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < DEFAULT_POINTS.length; i++) {\n      if (DEFAULT_POINTS[i] < max) {\n        result.push(DEFAULT_POINTS[i]);\n      }\n\n      if (DEFAULT_POINTS[i] >= max) {\n        result.push(max);\n        break;\n      }\n    }\n\n    return result;\n  }, [max]);\n\n  const handleChange = useLastCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.currentTarget.value);\n    onChange(getValue(points, newValue));\n  });\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    readOnly && 'readOnly',\n    bold && 'bold',\n  );\n\n  function renderTopRow() {\n    return (\n      <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"value-min\" dir=\"auto\">{lang.number(min)}</span>\n        <span className=\"settings-range-value\">\n          {!canChangeChargeForMessages && (<Icon name=\"lock-badge\" />)}\n          {formatStarsAsText(lang, getValue(points, getProgress(points, value)))}\n        </span>\n        <span className=\"value-max\" dir=\"auto\">{lang.number(max)}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className={mainClassName}>\n      {renderTopRow()}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${(getProgress(points, value) / points.length) * 100}%`}\n        />\n        <input\n          min={0}\n          max={points.length}\n          defaultValue={getProgress(points, defaultValue)}\n          step=\"any\"\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction getProgress(points: number[], value: number) {\n  const pointIndex = points.findIndex((point) => value <= point);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const progress = (value - prevPoint) / (nextPoint - prevPoint);\n  return pointIndex + progress;\n}\n\nfunction getValue(points: number[], progress: number) {\n  const pointIndex = Math.floor(progress);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const pointValue = prevPoint + (nextPoint - prevPoint) * (progress - pointIndex);\n  return pointValue < 100 ? Math.round(pointValue) : Math.round(pointValue / 10) * 10;\n}\n\nexport default memo(PaidMessageSlider);\n","import React, {\n  memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n  MINIMUM_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPercent } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Icon from '../icons/Icon';\nimport PaidMessageSlider from './PaidMessageSlider';\n\ntype OwnProps = {\n  chargeForMessages: number;\n  canChangeChargeForMessages?: boolean;\n  isGroupChat?: boolean;\n  onChange: (value: number) => void;\n};\n\ntype StateProps = {\n  starsUsdWithdrawRate: number;\n  starsPaidMessageAmountMax: number;\n  starsPaidMessageCommissionPermille: number;\n};\n\nfunction PaidMessagePrice({\n  starsUsdWithdrawRate,\n  starsPaidMessageAmountMax,\n  starsPaidMessageCommissionPermille,\n  canChangeChargeForMessages,\n  isGroupChat,\n  chargeForMessages,\n  onChange,\n}: OwnProps & StateProps) {\n  const { openPremiumModal } = getActions();\n\n  const lang = useLang();\n\n  const handleChargeForMessagesChange = useLastCallback((value: number) => {\n    onChange?.(value);\n  });\n\n  const handleUnlockWithPremium = useLastCallback(() => {\n    openPremiumModal({ initialSection: 'message_privacy' });\n  });\n\n  return (\n    <>\n      <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('SectionTitleStarsForForMessages')}\n      </h4>\n      <PaidMessageSlider\n        defaultValue={chargeForMessages}\n        min={MINIMUM_CHARGE_FOR_MESSAGES}\n        max={starsPaidMessageAmountMax}\n        value={chargeForMessages}\n        onChange={handleChargeForMessagesChange}\n        canChangeChargeForMessages={canChangeChargeForMessages}\n        readOnly={!canChangeChargeForMessages}\n      />\n      {!canChangeChargeForMessages && (\n        <Button\n          color=\"primary\"\n          fluid\n          size=\"smaller\"\n          noForcedUpperCase\n          className=\"settings-unlock-button\"\n          onClick={handleUnlockWithPremium}\n        >\n          <span className=\"settings-unlock-button-title\">\n            {lang('UnlockButtonTitle')}\n            <Icon name=\"lock-badge\" className=\"settings-unlock-button-icon\" />\n          </span>\n        </Button>\n      )}\n      {canChangeChargeForMessages && (\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang(isGroupChat ? 'SetPriceGroupDescription' : 'SectionDescriptionStarsForForMessages', {\n            percent: formatPercent(starsPaidMessageCommissionPermille * 100),\n            amount: formatCurrencyAsString(\n              chargeForMessages * starsUsdWithdrawRate * starsPaidMessageCommissionPermille,\n              'USD',\n              lang.code,\n            ),\n          }, {\n            withNodes: true,\n          })}\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const starsUsdWithdrawRateX1000 = global.appConfig?.starsUsdWithdrawRateX1000;\n    const starsUsdWithdrawRate = starsUsdWithdrawRateX1000 ? starsUsdWithdrawRateX1000 / 1000 : 1;\n    const configStarsPaidMessageCommissionPermille = global.appConfig?.starsPaidMessageCommissionPermille;\n    const starsPaidMessageCommissionPermille = configStarsPaidMessageCommissionPermille\n      ? configStarsPaidMessageCommissionPermille / 1000 : 100;\n\n    return {\n      starsPaidMessageCommissionPermille,\n      starsUsdWithdrawRate,\n      starsPaidMessageAmountMax: global.appConfig?.starsPaidMessageAmountMax || DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n    };\n  },\n)(PaidMessagePrice));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n  isChecked?: boolean;\n};\n\nfunction PrivacyLockedOption({ label, isChecked }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isChecked && styles.checked,\n      )}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sBptmiga\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\",\"checked\":\"U_6O1ebL\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  DEFAULT_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectNewNoncontactPeersRequirePremium,\n  selectNonContactPeersPaidStars,\n} from '../../../global/selectors';\n\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PaidMessagePrice from '../../common/paidMessage/PaidMessagePrice';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  canChargeForMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  nonContactPeersPaidStars: number;\n  noPaidReactionsForUsersCount: number;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  canChargeForMessages,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  nonContactPeersPaidStars,\n  isCurrentUserPremium,\n  noPaidReactionsForUsersCount,\n  onReset,\n  onScreenSelect,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const canChangeForContactsAndPremium = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n  const canChangeChargeForMessages = isCurrentUserPremium && canChargeForMessages;\n  const [chargeForMessages, setChargeForMessages] = useState<number>(nonContactPeersPaidStars);\n\n  const selectedValue = useMemo(() => {\n    if (shouldChargeForMessages) return 'charge_for_messages';\n    if (shouldNewNonContactPeersRequirePremium) return 'contacts_and_premium';\n    return 'everybody';\n  }, [shouldChargeForMessages, shouldNewNonContactPeersRequirePremium]);\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChangeForContactsAndPremium ? (\n          oldLang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption\n            label={oldLang('PrivacyMessagesContactsAndPremium')}\n            isChecked={selectedValue === 'contacts_and_premium'}\n          />\n        ),\n        hidden: !canChangeForContactsAndPremium,\n        isCanCheckedInDisabled: true,\n      },\n      {\n        value: 'charge_for_messages',\n        label: canChangeChargeForMessages ? (\n          lang('PrivacyChargeForMessages')\n        ) : (\n          <PrivacyLockedOption\n            label={lang('PrivacyChargeForMessages')}\n            isChecked={selectedValue === 'charge_for_messages'}\n          />\n        ),\n        hidden: !canChangeChargeForMessages,\n        isCanCheckedInDisabled: true,\n      },\n    ];\n  }, [oldLang, lang, canChangeForContactsAndPremium, canChangeChargeForMessages, selectedValue]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({\n      shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium',\n      // eslint-disable-next-line no-null/no-null\n      nonContactPeersPaidStars: privacy === 'charge_for_messages' ? chargeForMessages : null,\n    });\n  });\n\n  const updateGlobalPrivacySettingsWithDebounced = useDebouncedCallback((value: number) => {\n    updateGlobalPrivacySettings({\n      nonContactPeersPaidStars: value,\n    });\n  }, [updateGlobalPrivacySettings], 300, true);\n\n  const handleChargeForMessagesChange = useCallback((value: number) => {\n    setChargeForMessages(value);\n    updateGlobalPrivacySettingsWithDebounced(value);\n  }, [setChargeForMessages, updateGlobalPrivacySettingsWithDebounced]);\n\n  function renderSectionNoPaidMessagesForUsers() {\n    const itemSubtitle = !noPaidReactionsForUsersCount ? lang('SubtitlePrivacyAddUsers')\n      : oldLang('Users', noPaidReactionsForUsersCount, 'i');\n\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {lang('RemoveFeeTitle')}\n        </h4>\n        <ListItem\n          narrow\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => {\n            onScreenSelect(SettingsScreens.PrivacyNoPaidMessages);\n          }}\n        >\n          <div className=\"multiline-item full-size\">\n            <span className=\"title\">{lang('ExceptionTitlePrivacyChargeForMessages')}</span>\n            <span className=\"subtitle\">{\n              itemSubtitle\n            }\n            </span>\n          </div>\n        </ListItem>\n      </div>\n    );\n  }\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const privacyDescription = useMemo(() => {\n    if (shouldChargeForMessages) return lang('PrivacyDescriptionChargeForMessages');\n    return lang('PrivacyDescriptionMessagesContactsAndPremium');\n  }, [shouldChargeForMessages, lang]);\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={selectedValue}\n        />\n        <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {privacyDescription}\n        </p>\n      </div>\n      {selectedValue === 'charge_for_messages' && (\n        <div className=\"settings-item fluid-container\">\n          <PaidMessagePrice\n            canChangeChargeForMessages={canChangeChargeForMessages}\n            chargeForMessages={chargeForMessages}\n            onChange={handleChargeForMessagesChange}\n          />\n        </div>\n      )}\n      {canChangeChargeForMessages && selectedValue === 'charge_for_messages' && renderSectionNoPaidMessagesForUsers()}\n      {!isCurrentUserPremium && selectedValue !== 'charge_for_messages'\n      && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const nonContactPeersPaidStars = selectNonContactPeersPaidStars(global);\n\n  const noPaidReactionsForUsersCount = global.settings.privacy.noPaidMessages?.allowUserIds.length || 0;\n\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    shouldChargeForMessages: Boolean(nonContactPeersPaidStars),\n    nonContactPeersPaidStars: nonContactPeersPaidStars || DEFAULT_CHARGE_FOR_MESSAGES,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n    canChargeForMessages: global.appConfig?.starsPaidMessagesAvailable,\n    noPaidReactionsForUsersCount,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { AccountSettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', {\n      limit: lang('FileSizeMB', { count: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] }),\n    });\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettingsContacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsPrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsGroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsChannels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadFilesTitle'),\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 56;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-item\">\n          <div className=\"settings-input\">\n            <AvatarEditable\n              currentAvatarBlobUrl={currentAvatarBlobUrl}\n              onChange={handlePhotoChange}\n              title=\"Edit your profile photo\"\n              disabled={isLoading}\n            />\n            <InputText\n              value={firstName}\n              onChange={handleFirstNameChange}\n              label={lang('FirstName')}\n              disabled={isLoading}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              value={lastName}\n              onChange={handleLastNameChange}\n              label={lang('LastName')}\n              disabled={isLoading}\n            />\n            <TextArea\n              value={bio}\n              onChange={handleBioChange}\n              label={lang('UserBio')}\n              disabled={isLoading}\n              maxLength={maxBioLength}\n              maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n            />\n          </div>\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <div className=\"settings-input\">\n            <UsernameInput\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n          </div>\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ELECTRON,\n  IS_SNAP_EFFECT_SUPPORTED,\n  IS_WAVE_TRANSFORM_SUPPORTED,\n} from '../../../util/browser/windowEnvironment';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSharedSettingOption, requestWave } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const snapButtonRef = useRef<HTMLDivElement>(null);\n  const [isSnapButtonAnimating, setIsSnapButtonAnimating] = useState(false);\n\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  const handleRequestWave = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    requestWave({ startX: e.clientX, startY: e.clientY });\n  });\n\n  const handleRequestConfetti = useLastCallback(() => {\n    requestConfetti({ withStars: true });\n  });\n\n  const handleSnap = useLastCallback(() => {\n    const button = snapButtonRef.current;\n    if (!button) return;\n\n    if (animateSnap(button)) {\n      setIsSnapButtonAnimating(true);\n      // Manual reset for debug\n      setTimeout(() => {\n        setIsSnapButtonAnimating(false);\n      }, 1500);\n    }\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          onClick={handleRequestConfetti}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n        <ListItem\n          onClick={handleRequestWave}\n          icon=\"story-expired\"\n          disabled={!IS_WAVE_TRANSFORM_SUPPORTED}\n        >\n          <div className=\"title\">Start wave</div>\n        </ListItem>\n        <ListItem\n          ref={snapButtonRef}\n          onClick={handleSnap}\n          icon=\"spoiler\"\n          disabled={!IS_SNAP_EFFECT_SUPPORTED}\n          style={isSnapButtonAnimating ? 'visibility: hidden' : ''}\n        >\n          <div className=\"title\">Vaporize this button</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      shouldForceHttpTransport,\n      shouldAllowHttpTransport,\n      shouldCollectDebugLogs,\n      shouldDebugExportedSenders,\n    } = selectSharedSettings(global);\n\n    return {\n      shouldForceHttpTransport,\n      shouldAllowHttpTransport,\n      shouldCollectDebugLogs,\n      shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { SharedSettings, ThemeKey, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/browser/windowEnvironment';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<SharedSettings, (\n    'messageTextSize' |\n    'messageSendKeyCombo' |\n    'timeFormat' |\n    'theme' |\n    'shouldUseSystemTheme'\n  )>;\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    setSharedSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const timeFormatOptions: IRadioOption[] = [{\n    label: lang('SettingsTimeFormat12'),\n    value: '12h',\n  }, {\n    label: lang('SettingsTimeFormat24'),\n    value: '24h',\n  }];\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChatAppearanceLight'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChatAppearanceDark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChatAppearanceSystem'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('SettingsSendEnter'), subLabel: lang('SettingsSendEnterDescription') },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'SettingsSendCmdenter' : 'SettingsSendCtrlenter'),\n      subLabel: lang('SettingsSendPlusEnterDescription'),\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSharedSettingOption({ messageTextSize: newSize });\n  }, []);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ThemeKey;\n\n    setSharedSettingOption({ theme: newTheme });\n    setSharedSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, []);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSharedSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSharedSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, []);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSharedSettingOption({ messageSendKeyCombo: newCombo as SharedSettings['messageSendKeyCombo'] });\n  }, []);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Settings')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('SettingsTray')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsTimeFormat')}\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={timeFormatOptions}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SettingsKeyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      theme,\n      shouldUseSystemTheme,\n      messageSendKeyCombo,\n      messageTextSize,\n      timeFormat,\n    } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      messageTextSize,\n      timeFormat,\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme, selectThemeValues } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = selectThemeValues(global, theme) || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme, selectThemeValues } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = selectThemeValues(global, theme) || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{oldLang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{oldLang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{oldLang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{oldLang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{oldLang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{oldLang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{oldLang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{oldLang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{oldLang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{oldLang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{oldLang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{oldLang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{oldLang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{oldLang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{oldLang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{oldLang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{oldLang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{oldLang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyGifts:\n        return <h3>{lang('PrivacyGifts')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{oldLang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{oldLang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{oldLang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{oldLang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{oldLang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{oldLang('AlwaysShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{oldLang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{oldLang('AlwaysAllow')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{oldLang('NeverAllow')}</h3>;\n\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return <h3>{lang('RemoveFeeTitle')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('MenuAnimations')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{oldLang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{oldLang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{oldLang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{oldLang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{oldLang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{oldLang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{oldLang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{oldLang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{oldLang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{oldLang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{oldLang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{oldLang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{oldLang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{oldLang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{oldLang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{oldLang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {oldLang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {oldLang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {oldLang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={oldLang('lng_settings_information')}\n            >\n              <Icon name=\"edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{oldLang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={oldLang('lng_sure_logout')}\n        confirmLabel={oldLang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings, LangCode, SharedSettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<AccountSettings, 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>\n& Pick<SharedSettings, 'language' | 'languages'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n    setSharedSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSharedSettingOption({ language: langCode as LangCode });\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            forceRenderAllItems\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n    const { language, languages } = selectSharedSettings(global);\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: ApiStarsAmount;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openGiftRecipientPicker,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu self-profile\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('TelegramGeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('MenuAnimations')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.languageInfo.nativeName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('MenuStickers')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openStarsBalanceModal({})}\n        >\n          {lang('MenuStars')}\n          {Boolean(starsBalance) && (\n            <span className=\"settings-item__current-value\">\n              {formatStarsAmount(lang, starsBalance)}\n            </span>\n          )}\n        </ListItem>\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openGiftRecipientPicker()}\n          >\n            {lang('MenuSendGift')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('MenuTelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('MenuPrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('OK')}\n        title={lang('AskAQuestion')}\n        textParts={lang('MenuAskText', undefined, { withNodes: true, renderTextFilters: ['br'] })}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiNotifyPeerType, ApiPeerNotifySettings } from '../../../api/types';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  notifyDefaults?: Record<ApiNotifyPeerType, ApiPeerNotifySettings>;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  notifyDefaults,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: ApiNotifyPeerType,\n    setting: 'mute' | 'showPreviews',\n  ) => {\n    const currentIsMuted = Boolean(notifyDefaults?.[peerType]?.mutedUntil);\n    const currentShouldShowPreviews = Boolean(notifyDefaults?.[peerType]?.shouldShowPreviews);\n\n    updateNotificationSettings({\n      peerType,\n      isMuted: setting === 'mute' ? !e.target.checked : currentIsMuted,\n      shouldShowPreviews: setting === 'showPreviews' ? e.target.checked : currentShouldShowPreviews,\n    });\n  }, [notifyDefaults]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'mute');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('NotificationsWeb')}\n        </h4>\n        <Checkbox\n          label={lang('NotificationsWeb')}\n          subLabel={lang(hasWebNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label={lang('NotificationsOffline')}\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          subLabel={areOfflineNotificationsSupported\n            ? lang(hasPushNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')\n            : lang('SettingsOfflineNotificationUnsupported')}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label={lang('NotificationsSound')}\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          subLabel={lang(notifyDefaults?.users?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.mutedUntil)}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.users?.mutedUntil}\n          subLabel={lang(notifyDefaults?.users?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.shouldShowPreviews)}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(notifyDefaults?.groups?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.mutedUntil)}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.groups?.mutedUntil}\n          subLabel={lang(notifyDefaults?.groups?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.shouldShowPreviews)}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          subLabel={lang(notifyDefaults?.channels?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.mutedUntil)}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.channels?.mutedUntil}\n          subLabel={lang(notifyDefaults?.channels?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.shouldShowPreviews)}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED, IS_SNAP_EFFECT_SUPPORTED } from '../../../util/browser/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [RegularLangKey, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: RegularLangKey;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderMedium',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderCustom',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['SettingsPerformanceInterfaceAnimations', [\n    { key: 'pageTransitions', label: 'SettingsPerformancePageTransitions' },\n    { key: 'messageSendingAnimations', label: 'SettingsPerformanceSending' },\n    { key: 'mediaViewerAnimations', label: 'SettingsPerformanceMediaViewer' },\n    { key: 'messageComposerAnimations', label: 'SettingsPerformanceComposer' },\n    { key: 'contextMenuAnimations', label: 'SettingsPerformanceContextAnimation' },\n    { key: 'contextMenuBlur', label: 'SettingsPerformanceContextBlur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'SettingsPerformanceRightColumn' },\n    { key: 'snapEffect', label: 'SettingsPerformanceThanos' },\n  ]],\n  ['SettingsPerformanceStickers', [\n    { key: 'animatedEmoji', label: 'SettingsPerformanceAnimatedEmoji' },\n    { key: 'loopAnimatedStickers', label: 'SettingsPerformanceLoopStickers' },\n    { key: 'reactionEffects', label: 'SettingsPerformanceReactionEffects' },\n    { key: 'stickerEffects', label: 'SettingsPerformanceStickerEffects' },\n  ]],\n  ['SettingsPerformanceMediaAutoplay', [\n    { key: 'autoplayGifs', label: 'SettingsPerformanceAutoplayGif' },\n    { key: 'autoplayVideos', label: 'SettingsPerformanceAutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSharedSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n\n  const animationLevelOptions = useMemo(() => {\n    const options = animationLevelState === ANIMATION_LEVEL_CUSTOM\n      ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n      : ANIMATION_LEVEL_OPTIONS;\n\n    return options.map((option) => lang(option));\n  }, [animationLevelState, lang]);\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSharedSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, []);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderTitle')}\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderSubtitle')}\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => {\n                    if (key === 'snapEffect' && !IS_SNAP_EFFECT_SUPPORTED) return undefined;\n                    return (\n                      <Checkbox\n                        key={key}\n                        name={key}\n                        checked={performanceSettings[key]}\n                        label={lang(label)}\n                        disabled={disabled}\n                        onChange={handlePropertyChange}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  selectCanSetPasscode, selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages: boolean;\n  canDisplayChatInTitle?: boolean;\n  isCurrentUserFrozen?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n  isCurrentUserFrozen,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSharedSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    if (!isCurrentUserFrozen) {\n      loadBlockedUsers();\n      loadPrivacySettings();\n      loadContentSettings();\n      loadWebAuthorizations();\n    }\n  }, [isCurrentUserFrozen]);\n\n  useEffect(() => {\n    if (isActive && !isCurrentUserFrozen) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, isCurrentUserFrozen, loadGlobalPrivacySettings]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSharedSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return oldLang('Loading');\n\n    const { visibility, shouldAllowPremium, botsPrivacy } = setting;\n\n    const isAllowBots = botsPrivacy === 'allow';\n    const isVisibilityEverybody = visibility === 'everybody';\n    const shouldShowBotsString = isAllowBots && !isVisibilityEverybody;\n\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount && !isVisibilityEverybody) total.push(`+${allowCount}`);\n\n    const botPrivacyString = shouldShowBotsString ? lang('PrivacyValueBots') : '';\n    const totalString = lang.conjunction(total);\n\n    const exceptionString = [botPrivacyString, totalString].filter(Boolean).join(' ');\n    if (shouldShowBotsString && !isVisibilityEverybody) return exceptionString;\n\n    if (shouldAllowPremium) {\n      return oldLang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${oldLang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${oldLang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${oldLang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {oldLang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-item\">\n              <span className=\"title\">{oldLang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {oldLang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {oldLang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {oldLang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{oldLang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGifts)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{lang('PrivacyGifts')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.gifts)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldChargeForMessages ? lang('PrivacyPaidMessagesValue')\n                : shouldNewNonContactPeersRequirePremium\n                  ? oldLang('PrivacyMessagesContactsAndPremium')\n                  : oldLang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={oldLang('lng_settings_sensitive_disable_filtering')}\n            subLabel={oldLang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={oldLang('ArchiveAndMute')}\n            subLabel={oldLang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={oldLang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          shouldNewNonContactPeersRequirePremium, nonContactPeersPaidStars,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    const { canDisplayChatInTitle } = selectSharedSettings(global);\n    const shouldChargeForMessages = Boolean(nonContactPeersPaidStars);\n    const isCurrentUserFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      shouldChargeForMessages,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n      isCurrentUserFrozen,\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterPeersByQuery({ ids: availableContactIds, query: search, type: 'user' })\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <Icon name=\"add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyGifts:\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return 'gifts';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return 'noPaidMessages';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiDisallowedGiftsSettings } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport Switcher from '../../ui/Switcher';\n\ntype StateProps = {\n  disallowedGifts?: ApiDisallowedGiftsSettings;\n  isCurrentUserPremium: boolean;\n};\n\nconst SettingsAcceptedGift = ({\n  disallowedGifts, isCurrentUserPremium,\n}: StateProps) => {\n  const { showNotification, updateGlobalPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const handleOpenTelegramPremiumModal = useLastCallback(() => {\n    showNotification({\n      message: lang('PrivacySubscribeToTelegramPremium'),\n      action: {\n        action: 'openPremiumModal',\n        payload: {},\n      },\n      actionText: { key: 'Open' },\n      icon: 'star',\n    });\n  });\n\n  const handleLimitedEditionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowLimitedStarGifts: !disallowedGifts?.shouldDisallowLimitedStarGifts || undefined,\n      },\n    });\n  });\n\n  const handleUnlimitedEditionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowUnlimitedStarGifts: !disallowedGifts?.shouldDisallowUnlimitedStarGifts || undefined,\n      },\n    });\n  });\n\n  const handleUniqueChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowUniqueStarGifts: !disallowedGifts?.shouldDisallowUniqueStarGifts || undefined,\n      },\n    });\n  });\n\n  const handlePremiumSubscriptionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowPremiumGifts: !disallowedGifts?.shouldDisallowPremiumGifts || undefined,\n      },\n    });\n  });\n\n  return (\n    <div className=\"settings-item\">\n      <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('PrivacyAcceptedGiftTitle')}\n      </h4>\n      <ListItem onClick={handleLimitedEditionChange}>\n        <span>{lang('PrivacyGiftLimitedEdition')}</span>\n        <Switcher\n          id=\"limited_edition\"\n          label={disallowedGifts?.shouldDisallowLimitedStarGifts ? lang('PrivacyDisableLimitedEditionStarGifts')\n            : lang('PrivacyEnableLimitedEditionStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowLimitedStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handleUnlimitedEditionChange}>\n        <span>{lang('PrivacyGiftUnlimited')}</span>\n        <Switcher\n          id=\"unlimited\"\n          label={disallowedGifts?.shouldDisallowUnlimitedStarGifts ? lang('PrivacyDisableUnlimitedStarGifts')\n            : lang('PrivacyEnableUnlimitedStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowUnlimitedStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handleUniqueChange}>\n        <span>{lang('PrivacyGiftUnique')}</span>\n        <Switcher\n          id=\"unique\"\n          label={disallowedGifts?.shouldDisallowUniqueStarGifts ? lang('PrivacyDisableUniqueStarGifts')\n            : lang('PrivacyEnableUniqueStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowUniqueStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handlePremiumSubscriptionChange}>\n        <span>{lang('PrivacyGiftPremiumSubscription')}</span>\n        <Switcher\n          id=\"premium_subscription\"\n          label={disallowedGifts?.shouldDisallowPremiumGifts ? lang('PrivacyDisablePremiumGifts')\n            : lang('PrivacyEnablePremiumGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowPremiumGifts}\n        />\n      </ListItem>\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('PrivacyAcceptedGiftInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          disallowedGifts,\n        },\n      },\n    } = global;\n\n    return {\n      disallowedGifts,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsAcceptedGift));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiPrivacySettings, BotsPrivacyType } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Switcher from '../../ui/Switcher';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsAcceptedGift from './SettingsAcceptedGift';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  shouldDisplayGiftsButton?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n  shouldDisplayGiftsButton,\n  isCurrentUserPremium,\n}) => {\n  const lang = useLang();\n\n  const { updateGlobalPrivacySettings, showNotification } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleShowGiftIconInChats = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('PrivacySubscribeToTelegramPremium'),\n        action: {\n          action: 'openPremiumModal',\n          payload: {},\n        },\n        actionText: { key: 'Open' },\n        icon: 'star',\n      });\n      return;\n    }\n    updateGlobalPrivacySettings({\n      shouldDisplayGiftsButton: !shouldDisplayGiftsButton,\n    });\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {screen === SettingsScreens.PrivacyGifts && (\n        <div className=\"settings-item\">\n          <ListItem onClick={handleShowGiftIconInChats}>\n            <span>{lang('PrivacyDisplayGiftsButton')}</span>\n            <Switcher\n              id=\"gift\"\n              disabled={!isCurrentUserPremium}\n              label={shouldDisplayGiftsButton ? lang('HideGiftsButton') : lang('DisplayGiftsButton')}\n              checked={shouldDisplayGiftsButton}\n            />\n          </ListItem>\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyDisplayGiftIconInChats', {\n              icon: <Icon name=\"gift\" className=\"gift-icon\" />,\n              gift: lang('PrivacyDisplayGift'),\n            }, {\n              withNodes: true,\n            })}\n          </p>\n        </div>\n      )}\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {screen === SettingsScreens.PrivacyGifts && (\n        <SettingsAcceptedGift />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PContacts')} />\n        ) : (\n          oldLang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PNobody')} />\n        ) : (\n          oldLang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [oldLang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsInfo');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? oldLang('PrivacyPhoneInfo') : oldLang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return oldLang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return oldLang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return oldLang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return oldLang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return oldLang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return oldLang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return oldLang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return oldLang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return oldLang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen]);\n\n  const prepareSubtitle = useLastCallback(\n    (userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean, botsPrivacy?: BotsPrivacyType) => {\n      const userIdsCount = userIds?.length || 0;\n      const chatIdsCount = chatIds?.length || 0;\n      const isAllowBots = botsPrivacy === 'allow';\n      const hasPeers = userIdsCount || chatIdsCount;\n\n      if (!hasPeers && !isAllowBots) {\n        return shouldAllowPremium ? oldLang('PrivacyPremium') : oldLang('EditAdminAddUsers');\n      } else if (shouldAllowPremium) {\n        return oldLang('ContactsAndPremium');\n      }\n\n      const userCountString = userIdsCount > 0 ? oldLang('Users', userIdsCount) : undefined;\n      const chatCountString = chatIdsCount > 0 ? oldLang('Chats', chatIdsCount) : undefined;\n\n      const botPrivacyString = isAllowBots ? lang('PrivacyValueBots') : '';\n      const peersString = lang.conjunction([userCountString, chatCountString].filter(Boolean));\n\n      return [botPrivacyString, peersString].filter(Boolean).join(' ');\n    },\n  );\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(\n      privacy?.allowUserIds,\n      privacy?.allowChatIds,\n      privacy?.shouldAllowPremium,\n      privacy?.botsPrivacy,\n    );\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: {\n        privacy,\n        byKey: {\n          shouldDisplayGiftsButton,\n        },\n      },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyGifts:\n        primaryPrivacy = privacy.gifts;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n      shouldDisplayGiftsButton,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  withMiniAppsCategory?: boolean;\n  usersOnly?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  withMiniAppsCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  usersOnly = false,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const customPeerBots : UniqueCustomPeer = useMemo(() => {\n    return {\n      isCustomPeer: true,\n      type: 'bots',\n      title: lang('PrivacyValueBots'),\n      avatarIcon: 'bots',\n      isAvatarSquare: true,\n      peerColorId: 6,\n    };\n  }, [lang]);\n\n  const miniAppsCategory = useMemo(() => {\n    return [customPeerBots];\n  }, [customPeerBots]);\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n    if (settings.shouldAllowPremium) { return [CUSTOM_PEER_PREMIUM.type]; }\n    if (settings.botsPrivacy === 'allow' && isAllowList) { return [customPeerBots.type]; }\n    return [];\n  }, [settings, isAllowList, customPeerBots]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return (!usersOnly || user)\n          && chatId !== currentUserId\n          && chatId !== SERVICE_NOTIFICATIONS_USER_ID\n          && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterPeersByQuery({ ids: chatIds, query: searchQuery });\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...chatIds,\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, searchQuery, currentUserId, usersOnly]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n      botsPrivacy: (!withMiniAppsCategory) ? 'none'\n        : (newSelectedCategoryTypes.includes(customPeerBots.type) ? 'allow' : 'disallow'),\n    });\n\n    onReset();\n  }, [\n    isAllowList,\n    withMiniAppsCategory,\n    newSelectedCategoryTypes,\n    newSelectedContactIds,\n    onReset,\n    screen,\n    customPeerBots,\n  ]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function getCustomCategory() {\n    if (withPremiumCategory) return PREMIUM_CATEGORY;\n    if (withMiniAppsCategory && isAllowList) return miniAppsCategory;\n    return undefined;\n  }\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={getCustomCategory()}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? oldLang('AlwaysAllowPlaceholder') : oldLang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? oldLang('AlwaysAllow') : oldLang('NeverAllow')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return privacy.gifts;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return privacy.noPaidMessages;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { AccountSettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<AccountSettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji, selectTabState } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n  recoveryEmail: string;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n  recoveryEmail,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {recoveryEmail && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('TwoStepAuth.ConfirmEmailDescription', recoveryEmail)}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const tabState = selectTabState(global);\n  const recoveryEmail = tabState.recoveryEmail;\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n    recoveryEmail,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {type === 'email' && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('RecoveryEmailSubtitle')}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  errorKey,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          placeholder={oldLang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={oldLang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMarkScrolled from '../../../hooks/useMarkScrolled/useMarkScrolled';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_GIFTS_SCREENS = [\n  SettingsScreens.PrivacyGiftsAllowedContacts,\n  SettingsScreens.PrivacyGiftsDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nconst PRIVACY_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyNoPaidMessages,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  useMarkScrolled({\n    containerRef,\n    selector: '.settings-content',\n  }, [currentScreen]);\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGifts]: PRIVACY_GIFTS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyMessages]: PRIVACY_MESSAGES_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyGifts:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            usersOnly={currentScreen === SettingsScreens.PrivacyNoPaidMessages}\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            withMiniAppsCategory={currentScreen === SettingsScreens.PrivacyGiftsAllowedContacts}\n            screen={currentScreen}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      ref={containerRef}\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n// Import React dependencies.\nimport React, {\n  useCallback, useRef, useState,\n} from 'react';\nimport type { DSlateRef } from '@dslate/antd';\nimport DSlate from '@dslate/antd';\nimport { Button, Input } from 'antd';\nimport type { Descendant } from 'slate';\nimport { Node } from 'slate';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport { ChataiStores } from '../../chatAssistant/store';\nimport { knowledgeEmbeddingStore } from '../../chatAssistant/vector-store';\n\ntype OwnProps = {\n  knowledge?:AiKnowledge | null;\n  type: 'add' | 'edit';\n  onClose: () => void;\n  onUpdate:()=>void;\n};\n\nconst ErrorTip = ({ message }:{ message:string }) => {\n  return (\n    <div className=\"text-[12px] leading-[18px] text-red-400\">{message}</div>\n  );\n};\n\nconst AIKnowledgeEditor = (props: OwnProps) => {\n  const {\n    type, knowledge, onClose, onUpdate,\n  } = props;\n  const knowledgeId = useRef(uuidv4());\n  const [value, setValue] = useState<Descendant[]>(knowledge?.richText || [\n    {\n      type: 'paragraph',\n      children: [{ text: '' }],\n    },\n  ]);\n  const [question, setQuestion] = useState<string>(knowledge?.question || '');\n  const [questionError, setQuestionError] = useState<string>('');\n  const [valueError, setValueError] = useState<string>('');\n  const ref = useRef<DSlateRef>(null);\n  const handleQuestionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  }, []);\n  const serialize = (nodes: Descendant[]) => {\n    return nodes.map((n) => Node.string(n)).join('\\n');\n  };\n  const handleSave = useCallback(() => {\n    const plainText = serialize(value);\n    if (!plainText) {\n      setValueError('Please enter your notes');\n      return;\n    } else {\n      setValueError('');\n    }\n    if (!question) {\n      setQuestionError('Please enter a question');\n      return;\n    } else {\n      setQuestionError('');\n    }\n    const knowledgeIdValue = type === 'add' ? knowledgeId.current : knowledge?.id as string;\n    ChataiStores.knowledge?.addKnowledge({\n      id: knowledgeIdValue,\n      richText: value,\n      plainText,\n      question,\n    }).then(() => {\n      onClose();\n      onUpdate();\n    });\n    knowledgeEmbeddingStore.updateText(question, knowledgeIdValue, {\n      answer: plainText,\n    });\n  }, [knowledge?.id, onClose, onUpdate, question, type, value]);\n  return (\n    <div className=\"flex flex-col gap-[20px] h-full\">\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <DSlate className=\"flex-1 flex flex-col overflow-hidden\" ref={ref} value={value} onChange={setValue} toolbar={['history', 'bold', 'italic', 'decoration', 'text-align', 'list']} />\n        {valueError && <ErrorTip message={valueError} />}\n      </div>\n      <div className=\"flex flex-col gap-[8px]\">\n        <div>Preset standard questions <span className=\"text-[#FF543D]\">*</span></div>\n        <Input value={question} onChange={handleQuestionChange} />\n        {questionError && <ErrorTip message={questionError} />}\n      </div>\n      <div className=\"flex flex-row gap-8 justify-end\">\n        <Button className=\"!w-[120px] !h-[42px]\" onClick={onClose}>Cancel</Button>\n        <Button type=\"primary\" className=\"!w-[120px] !h-[42px]\" onClick={handleSave}>Add</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AIKnowledgeEditor;\n","/* eslint-disable no-null/no-null */\n/* eslint-disable max-len */\nimport React, {\n  useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport { injectComponent } from '../../../lib/injectComponent';\n\nimport Modal from '../../ui/Modal';\nimport AIKnowledgeEditor from './AIKnowledgeEditor';\n\nimport './AIKnowledgeEditor.scss';\n\ntype OwnProps = {\n  knowledge?:AiKnowledge | null;\n  type: 'add' | 'edit';\n  isOpen: boolean;\n  onClose: () => void;\n  onUpdate:()=>void;\n};\nconst injectEditor = injectComponent(AIKnowledgeEditor);\nconst AddKnowledgeModal = ({\n  type, knowledge, isOpen, onClose, onUpdate,\n}: OwnProps) => {\n  const editorRef = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    let injected: { unmount: () => void } | undefined;\n    if (editorRef.current) {\n      injected = injectEditor(editorRef.current, {\n        onClose,\n        onUpdate,\n        knowledge,\n        type,\n      });\n    }\n    return () => {\n      injected?.unmount();\n    };\n  }, [knowledge, onClose, onUpdate, type]);\n  return (\n    <Modal\n      title=\"Notes\"\n      hasCloseButton\n      isOpen={isOpen}\n      onClose={onClose}\n      dialogStyle=\"max-width: 1000px; width: 70vw; height: 60vh;\"\n    >\n      <div className=\"knowledge-editor\" ref={editorRef} />\n    </Modal>\n  );\n};\nexport default AddKnowledgeModal;\n","/* eslint-disable max-len */\nimport copy from 'copy-to-clipboard';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport AIKnowledgeEmpty from '../../../assets/ai-knowledge-empty.png';\n\nconst AIKnowledgeEmptyContent = ({ onAdd }:{ onAdd:NoneToVoidFunction }) => {\n  return (\n    <div className=\"flex flex-col justify-center items-center px-[30px] pt-[120px]\">\n      <img src={AIKnowledgeEmpty} alt=\"AIKnowledge\" className=\"w-[125px] h-[125px] mb-[12px]\" />\n      <span className=\"text-[14px] text-[#676B74]\">\n        You can store frequently used personal information, company details, and business materials here. During chats, the AI will use this content to generate intelligent responses.\n      </span>\n      <Button\n        round\n        color=\"translucent\"\n        className=\"!bg-[#8C42F0] flex flex-row items-center gap-[8px] !w-[148px] !h-[42px] !p-0 !rounded-[21px] mt-[20px]\"\n        onClick={onAdd}\n      >\n        <Icon className=\"text-white text-[14px]\" name=\"add\" />\n        <span className=\"text-white\">Add</span>\n      </Button>\n    </div>\n  );\n};\nconst AIKnowledgeList = ({ knowledgeList, onEdit, onDelete }:{\n  knowledgeList:any[];\n  onEdit:(knowledge:AiKnowledge)=>void;\n  onDelete:(id:string)=>void;\n}) => {\n  const { showNotification } = getActions();\n  const handleCopy = useCallback((knowledge:AiKnowledge) => {\n    copy(knowledge.plainText);\n    showNotification({\n      message: 'TextCopied',\n    });\n  }, []);\n  const handleEdit = useCallback((knowledge:AiKnowledge) => {\n    onEdit(knowledge);\n  }, [onEdit]);\n  const handleDelete = useCallback((knowledge:AiKnowledge) => {\n    onDelete(knowledge.id);\n  }, [onDelete]);\n  return (\n    <div className=\"px-[20px]\">\n      {knowledgeList.map((item) => (\n        <div key={item.id} className=\"bg-[#F7F7F7] rounded-[12px] px-[16px] py-[15px] mb-[12px]\">\n          <div className=\"white-space-pre-wrap line-clamp-3 overflow-hidden text-ellipsis\">\n            {item?.question || ''}\n          </div>\n          <div className=\"white-space-pre-wrap line-clamp-3 overflow-hidden text-ellipsis\">\n            {item.plainText.replace(/\\\\n/g, '')}\n          </div>\n          <div className=\"flex justify-end gap-[8px] items-center\">\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCopy(item)}\n            >\n              <Icon name=\"copy\" className=\"text-[14px]\" />\n            </Button>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleEdit(item)}\n            >\n              <Icon name=\"edit\" className=\"text-[14px]\" />\n            </Button>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleDelete(item)}\n            >\n              <Icon name=\"delete\" className=\"text-[14px]\" />\n            </Button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\nconst AIKnowledgeContent = ({\n  knowledgeList, onShowAddModal, onEdit, onDelete,\n}:{\n  knowledgeList:any[];\n  onShowAddModal:(type:'edit' | 'add')=>void ;\n  onEdit:(knowledge:AiKnowledge)=>void;\n  onDelete:(id:string)=>void;\n}) => {\n  const handleAdd = useCallback(() => {\n    onShowAddModal('add');\n  }, [onShowAddModal]);\n  return (\n    <div className=\"pt-[20px] h-full box-border\">\n      {knowledgeList.length === 0 ? (\n        <AIKnowledgeEmptyContent onAdd={handleAdd} />\n      ) : (\n        <AIKnowledgeList knowledgeList={knowledgeList} onEdit={onEdit} onDelete={onDelete} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(AIKnowledgeContent);\n","/* eslint-disable max-len */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  showAddButton:boolean;\n  onReset: () => void;\n  onShowAddModal:(type:'edit' | 'add') => void;\n};\nconst AIKnowledgeHeader: FC<OwnProps> = ({ onReset, showAddButton, onShowAddModal }) => {\n  const oldLang = useOldLang();\n\n  function renderHeaderContent() {\n    return <h3>{oldLang('AI Knowledge Base')}</h3>;\n  }\n  const handleAdd = useCallback(() => {\n    onShowAddModal('add');\n  }, [onShowAddModal]);\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      {showAddButton && (\n        <Button\n          round\n          color=\"translucent\"\n          className=\"!bg-[#8C42F0] flex flex-row items-center gap-[8px] !w-[92px] !h-[30px] !p-0 !rounded-[21px] !text-[14px]\"\n          onClick={handleAdd}\n        >\n          <Icon className=\"text-white text-[14px]\" name=\"add\" />\n          <span className=\"text-white\">Add</span>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AIKnowledgeHeader);\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\nimport { ChataiStores } from '../../chatAssistant/store';\nimport { knowledgeEmbeddingStore } from '../../chatAssistant/vector-store';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport AddKnowledgeModal from './AddKnowledgeModal';\nimport AIKnowledgeContent from './AIKnowledgeContent';\nimport AIKnowledgeHeader from './AIKnowledgeHeader';\n\nexport type OwnProps = {\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\nconst AIKnowledge:FC<OwnProps> = ({ onReset }) => {\n  const [knowledgeList, setKnowledgeList] = useState<AiKnowledge[]>([]);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [type, setType] = useState<'edit' | 'add'>('add');\n  const [editKnowledge, setEditKnowledge] = useState<AiKnowledge | null>(null);\n  useEffect(() => {\n    ChataiStores.knowledge?.getAllKnowledge().then((knowledge) => {\n      setKnowledgeList(knowledge || []);\n    });\n  }, []);\n  const handleReset = useLastCallback(() => {\n    onReset(true);\n  });\n  const handleCloseAddModal = useCallback(() => {\n    setShowAddModal(false);\n  }, []);\n  const handleShowAddModal = useCallback((type:'edit' | 'add') => {\n    setShowAddModal(true);\n    setType(type);\n  }, []);\n  const handleEdit = useCallback((knowledge:AiKnowledge) => {\n    setType('edit');\n    setEditKnowledge(knowledge);\n    setShowAddModal(true);\n  }, []);\n  const handleUpdate = useCallback(() => {\n    setEditKnowledge(null);\n    ChataiStores.knowledge?.getAllKnowledge().then((knowledge) => {\n      setKnowledgeList(knowledge || []);\n    });\n  }, []);\n  const handleDelete = useCallback((id:string) => {\n    ChataiStores.knowledge?.deleteKnowledge(id).then(() => {\n      setKnowledgeList((prev) => {\n        return prev.filter((item) => item.id !== id);\n      });\n    });\n    knowledgeEmbeddingStore.deleteText(id);\n  }, []);\n  function renderCurrentSection() {\n    return (\n      <>\n        <AIKnowledgeHeader\n          onReset={handleReset}\n          showAddButton={knowledgeList.length > 0}\n          onShowAddModal={handleShowAddModal}\n        />\n        <AIKnowledgeContent knowledgeList={knowledgeList} onShowAddModal={handleShowAddModal} onEdit={handleEdit} onDelete={handleDelete} />\n        {showAddModal && (\n          <AddKnowledgeModal type={type} isOpen={showAddModal} onClose={handleCloseAddModal} knowledge={editKnowledge} onUpdate={handleUpdate} />\n        )}\n      </>\n\n    );\n  }\n  return (\n    <Transition\n      id=\"AiKnowledge\"\n      name={LAYERS_ANIMATION_NAME}\n      activeKey={0}\n      renderCount={1}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(AIKnowledge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T_GGJ8J2\",\"item\":\"fe7VNmNB\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { telegptSettings } from '../../chatAssistant/api/user-settings';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './AutoTranslateLanguage.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype StateProps = { autoTranslateLanguage:string | undefined };\nconst AutoTranslateLanguage: FC<StateProps> = ({ autoTranslateLanguage }) => {\n  const { setSettingOption } = getActions();\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string | undefined>(autoTranslateLanguage);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  const handleChange = useLastCallback((newSelectedIds: string) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      autoTranslateLanguage: newSelectedIds,\n      translationLanguage: newSelectedIds,\n    });\n    telegptSettings.setSettingOption({\n      autotranslatelanguage: newSelectedIds,\n    });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValue={displayedOptions}\n          onSelectedValueChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable={false}\n          allowMultiple={false}\n          withDefaultPadding\n          itemInputType=\"radio\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      autoTranslateLanguage,\n    } = global.settings.byKey;\n\n    return {\n      autoTranslateLanguage,\n    };\n  },\n)(AutoTranslateLanguage));\n","/* eslint-disable max-len */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { telegptSettings } from '../../chatAssistant/api/user-settings';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport AutoTranslateLanguage from './AutoTranslateLanguage';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\ntype StateProps = { autoTranslate:boolean | undefined };\n\nconst AITranslateContent: FC<OwnProps & StateProps> = ({\n  autoTranslate,\n  isActive,\n  onReset,\n}) => {\n  const {\n    setSettingOption,\n    // openPremiumModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [displayAutoTranslate, setDisplayAutoTranslate] = useState(autoTranslate);\n\n  const handleAutoTranslateChange = useLastCallback((newValue: boolean) => {\n    setDisplayAutoTranslate(newValue);\n    setSettingOption({ autoTranslate: newValue });\n    telegptSettings.setSettingOption({\n      autotranslate: newValue,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('Auto Translate')}\n          checked={displayAutoTranslate}\n          onCheck={handleAutoTranslateChange}\n        />\n      </div>\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        <AutoTranslateLanguage />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      autoTranslate,\n    } = global.settings.byKey;\n\n    return {\n      autoTranslate,\n    };\n  },\n)(AITranslateContent));\n","/* eslint-disable max-len */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  onReset: () => void;\n};\nconst AITranslateHeader: FC<OwnProps> = ({ onReset }) => {\n  const oldLang = useOldLang();\n\n  function renderHeaderContent() {\n    return <h3>{oldLang('AI Translate')}</h3>;\n  }\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n    </div>\n  );\n};\n\nexport default memo(AITranslateHeader);\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n} from '../../../lib/teact/teact';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport AITranslateContent from './AITranslateContent';\nimport AITranslateHeader from './AITranslateHeader';\n\nexport type OwnProps = {\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\nconst AITranslate:FC<OwnProps> = ({ onReset }) => {\n  function renderCurrentSection() {\n    return (\n      <>\n        <AITranslateHeader onReset={onReset} />\n        <AITranslateContent onReset={onReset} />\n      </>\n    );\n  }\n  return (\n    <Transition\n      id=\"AiTranslate\"\n      name={LAYERS_ANIMATION_NAME}\n      activeKey={0}\n      renderCount={1}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(AITranslate);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { sortUserIds } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterPeersByQuery({ ids: contactIds, query: filter, type: 'user' });\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <Icon name=\"add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { isUserBot } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds\n      ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <Icon name=\"arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport Icon from '../common/icons/Icon';\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen, undefined, undefined, false);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID)\n      .map((folderId) => {\n        const folder = foldersById ? foldersById[folderId] : undefined;\n        const label = folder ? renderTextWithEntities({\n          text: folder.title.text,\n          entities: folder.title.entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }) : '';\n        return {\n          label,\n          value: String(folderId),\n        };\n      }) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let mutedUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      mutedUntil = MAX_INT_32;\n    } else {\n      mutedUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, mutedUntil });\n    } else {\n      updateChatMutedState({ chatId, mutedUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeerPaidMessagesStars,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n    const paidMessagesStars = chatId ? selectPeerPaidMessagesStars(global, chatId) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: !paidMessagesStars && selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiBotCommand, ApiChat, ApiDisallowedGifts,\n} from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isSystemBot,\n  isUserId,\n  isUserRightBanned,\n} from '../../global/helpers';\nimport { getIsChatMuted } from '../../global/helpers/notifications';\nimport {\n  selectBot,\n  selectCanGift,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsRightColumnShown,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canDeleteChat?: boolean;\n  canReportChat?: boolean;\n  canGift?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n  disallowedGifts?: ApiDisallowedGifts;\n  isAccountFrozen?: boolean;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canReportChat,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canDeleteChat,\n  canGift,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n  disallowedGifts,\n  isAccountFrozen,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    openFrozenAccountModal,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n    reportMessages,\n    showNotification,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      setIsMenuOpen(false);\n      reportMessages({ chatId, messageIds: [] });\n    }\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      onClose();\n    } else {\n      setIsDeleteModalOpen(true);\n    }\n    setIsMenuOpen(false);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      sendBotCommand({ command: '/start' });\n    }\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      restartBot({ chatId });\n    }\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      updateChatMutedState({ chatId, isMuted: false });\n    }\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      closeMenu();\n    } else {\n      markRenderMuteModal();\n      setIsMuteModalOpen(true);\n    }\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openCreateTopicPanel({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      toggleManagement({ force: true });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openEditTopicPanel({ chatId, topicId: Number(threadId) });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    if (areAllGiftsDisallowed && chat) {\n      showNotification({ message: lang('SendDisallowError') });\n      return;\n    }\n    openGiftModal({ forUserId: chatId });\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openGiftModal({ forUserId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openAddContactDialog({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      onSubscribeChannel();\n    }\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    }\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      requestMasterAndRequestCall({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      enterMessageSelectMode();\n    }\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      blockUser({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      unblockUser({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {oldLang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || oldLang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {oldLang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, oldLang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return oldLang('Delete');\n    }\n\n    if (isPrivate) {\n      return oldLang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return oldLang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return oldLang('LeaveChannel');\n    }\n\n    return oldLang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, oldLang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {oldLang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {oldLang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? oldLang('lng_context_view_topic') : oldLang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {oldLang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {oldLang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {oldLang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? oldLang('SubscribeRequests') : oldLang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {oldLang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {oldLang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {oldLang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {oldLang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {oldLang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {oldLang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {oldLang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {oldLang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {oldLang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {oldLang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {oldLang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {oldLang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {oldLang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {oldLang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {oldLang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {oldLang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {oldLang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGift && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftClick}\n            >\n              {oldLang('ProfileSendAGift')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? oldLang('BotRestart') : oldLang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? oldLang('Unblock') : oldLang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n    const canReportChat = isMainThread && !user && (isChatChannel(chat) || isChatGroup(chat));\n\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGift = selectCanGift(global, chatId);\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canDeleteChat: getCanDeleteChat(chat),\n      canReportChat,\n      canGift,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog, getReactionKey, isSameReaction, isSystemBot,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldCancelSearchRef = useRef(false);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Reset focus on query result\n  useEffect(() => {\n    setFocusedIndex(-1);\n  }, [lastSearchQuery]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => {\n      if (shouldCancelSearchRef.current) return;\n      performMiddleSearch({ chatId, threadId, query });\n    });\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    shouldCancelSearchRef.current = false;\n\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n      shouldCancelSearchRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || isSystemBot(chatId) || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            itemSelector={`.${RESULT_ITEM_CLASS_NAME}`}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [Math.max(focusedIndex + 1, 1), totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <Icon name=\"recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <Icon name=\"favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed.slice();\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      positionY={story && 'bottom'}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <Icon\n                name=\"delete\"\n                className={buildClassName(styles.actionItem, styles.deleteFile)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <Icon\n            name={attachment.shouldSendAsSpoiler ? 'spoiler-disable' : 'spoiler'}\n            className={styles.actionItem}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            // eslint-disable-next-line react/jsx-no-bind\n            <Icon name=\"delete\" className={styles.actionItem} onClick={() => onDelete(index)} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","import isFullyVisible from './visibility/isFullyVisible';\nimport animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll({\n      container,\n      element: allElements[index],\n      position,\n      margin: SCROLL_MARGIN,\n    });\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"sendButtonStar\":\"C1OOt81o\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  canScheduleUntilOnline?: boolean;\n  canSchedule?: boolean;\n  onSendWhenOnline?: NoneToVoidFunction;\n  paidMessagesStars?: number;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  canScheduleUntilOnline,\n  canSchedule,\n  onSendWhenOnline,\n  paidMessagesStars,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [oldLang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  const attachmentsLength = renderingAttachments.length;\n  if (areAllPhotos) {\n    title = oldLang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', attachmentsLength, 'i');\n  } else if (areAllVideos) {\n    title = oldLang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', attachmentsLength, 'i');\n  } else if (areAllAudios) {\n    title = oldLang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', attachmentsLength, 'i');\n  } else {\n    title = oldLang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', attachmentsLength, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{oldLang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {oldLang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {oldLang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {oldLang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {oldLang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {oldLang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n  const buttonSendCaption = paidMessagesStars ? formatStarsAsIcon(lang,\n    attachmentsLength * paidMessagesStars,\n    {\n      className: styles.sendButtonStar,\n      asFont: true,\n    }) : oldLang('Send');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n      isLowStackPriority\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={oldLang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={oldLang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? oldLang('Next')\n                  : editingMessage ? oldLang('Save') : buttonSendCaption}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={canSchedule && isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                  onSendWhenOnline={onSendWhenOnline}\n                  canScheduleUntilOnline={canScheduleUntilOnline}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { shouldSuggestCustomEmoji } = global.settings.byKey;\n    const { language } = selectSharedSettings(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          maxLength={MAX_OPTION_LENGTH}\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        <div className=\"dialog-checkbox-group\">\n          {!shouldBeAnonymous && (\n            <Checkbox\n              label={lang('PollAnonymous')}\n              checked={isAnonymous}\n              onChange={handleIsAnonymousChange}\n            />\n          )}\n          <Checkbox\n            label={lang('PollMultiple')}\n            checked={isMultipleAnswers}\n            disabled={isQuizMode}\n            onChange={handleMultipleAnswersChange}\n          />\n          <Checkbox\n            label={lang('PollQuiz')}\n            checked={isQuizMode}\n            disabled={isMultipleAnswers || isQuiz !== undefined}\n            onChange={handleQuizModeChange}\n          />\n        </div>\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { IconName } from '../../../types/icons';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, IconName> = {\n  recent: 'recent',\n  people: 'smile',\n  nature: 'animals',\n  foods: 'eats',\n  activity: 'sport',\n  places: 'car',\n  objects: 'lamp',\n  symbols: 'language',\n  flags: 'flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <Icon name=\"close\" className=\"gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <Icon name=\"search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <Icon name=\"delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <Icon name=\"eye-crossed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <Icon name=\"bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <Icon name=\"italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <Icon name=\"underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <Icon name=\"strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <Icon name=\"monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <Icon name=\"link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <Icon name=\"check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/visibility/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult;\n  onClick: (result: ApiBotInlineResult | ApiBotInlineMediaResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, description,\n  } = inlineResult;\n\n  const url = 'url' in inlineResult ? inlineResult.url : undefined;\n  const webThumbnail = 'webThumbnail' in inlineResult ? inlineResult.webThumbnail : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineMediaResult | ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <Icon name=\"lock-badge\" className=\"send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(lang, postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(lang, postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && oldLang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: OldLangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: OldLangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.root, 'panel-content custom-scroll', isReady && styles.ready)}>\n      {statistics && (\n        <StatisticsOverview\n          statistics={statistics}\n          type={isGroup ? 'group' : 'channel'}\n          title={lang('StatisticOverview')}\n        />\n      )}\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics)?.recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiPoll } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectPollFromMessage, selectTabState,\n} from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  poll?: ApiPoll;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  poll,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !poll || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = poll;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${poll.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n    const poll = message && selectPollFromMessage(global, message);\n\n    return {\n      chat,\n      message,\n      poll,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"channel-title\"\n              label={lang('EnterChannelName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"channel-about\"\n              label={lang('DescriptionPlaceholder')}\n              onChange={handleAboutChange}\n              value={about}\n              maxLength={CHANNEL_MAX_DESCRIPTION}\n              maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <Icon name=\"add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info section-info_push\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <LinkField link={privateInviteLink} className=\"invite-link\" />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <div className=\"settings-input\">\n              <UsernameInput\n                asLink\n                currentUsername={currentUsername}\n                isLoading={isLoading}\n                isUsernameAvailable={isUsernameAvailable}\n                checkedUsername={checkedUsername}\n                onChange={handleUsernameChange}\n              />\n            </div>\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    return filterPeersByQuery({ ids: availableMemberIds, query: search, type: 'user' });\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <Icon name=\"add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"section-info section-info_push\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"group-title\"\n              label={lang('GroupName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === GROUP_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"group-about\"\n              label={lang('DescriptionPlaceholder')}\n              maxLength={GROUP_MAX_DESCRIPTION}\n              maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n              onChange={handleAboutChange}\n              value={about}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                subLabel={\n                  chatFullInfo.isPreHistoryHidden ? lang('ChatHistoryHiddenInfo2') : lang('ChatHistoryVisibleInfo')\n                }\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"panel-content custom-scroll\">\n        {canHideParticipants && !isChannel && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                  withPortalForMenu\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  DEFAULT_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PaidMessagePrice from '../../common/paidMessage/PaidMessagePrice';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  progress?: ManagementProgress;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n  arePaidMessagesAvailable?: boolean;\n  groupPeersPaidStars: number;\n  canChargeForMessages?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  progress,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n  arePaidMessagesAvailable,\n  canChargeForMessages,\n  groupPeersPaidStars,\n}) => {\n  const { updateChatDefaultBannedRights, updatePaidMessagesPrice } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const [isPriceForMessagesChanged, markPriceForMessagesChanged, unmarkPriceForMessagesChanged] = useFlag();\n  const [isPriceForMessagesOpen, setIsPriceForMessagesOpen] = useState(canChargeForMessages);\n  const [chargeForMessages, setChargeForMessages] = useState<number>(groupPeersPaidStars);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkPriceForMessagesChanged();\n    }\n  }, [progress]);\n\n  const handleSavePermissions = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  });\n\n  const handleUpdatePaidMessagesPrice = useLastCallback(() => {\n    if (!chat) return;\n    updatePaidMessagesPrice({\n      chatId: chat?.id,\n      paidMessagesStars: isPriceForMessagesOpen ? chargeForMessages : 0,\n    });\n  });\n\n  const handleUpdatePermissions = useLastCallback(() => {\n    if (isPriceForMessagesChanged) {\n      handleUpdatePaidMessagesPrice();\n    }\n    if (havePermissionChanged) {\n      handleSavePermissions();\n    }\n  });\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = oldLang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, oldLang]);\n\n  const handleChargeStarsForMessages = useLastCallback(() => {\n    setIsPriceForMessagesOpen(!isPriceForMessagesOpen);\n    markPriceForMessagesChanged();\n  });\n\n  const handleChargeForMessagesChange = useLastCallback((value: number) => {\n    setChargeForMessages(value);\n    markPriceForMessagesChanged();\n  });\n\n  const arePermissionsChanged = isPriceForMessagesChanged || havePermissionChanged;\n  const arePermissionsLoading = progress === ManagementProgress.InProgress || isLoading;\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        {arePaidMessagesAvailable && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem onClick={handleChargeStarsForMessages}>\n              <span>{lang('GroupMessagesChargePrice')}</span>\n              <Switcher\n                id=\"charge_for_messages\"\n                label={lang('GroupMessagesChargePrice')}\n                checked={isPriceForMessagesOpen}\n              />\n            </ListItem>\n            <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('RightsChargeStarsAbout')}\n            </p>\n          </div>\n        )}\n\n        {isPriceForMessagesOpen && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <PaidMessagePrice\n              canChangeChargeForMessages\n              isGroupChat\n              chargeForMessages={chargeForMessages}\n              onChange={handleChargeForMessagesChange}\n            />\n          </div>\n        )}\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={arePermissionsChanged}\n        onClick={handleUpdatePermissions}\n        ariaLabel={lang('Save')}\n        disabled={arePermissionsLoading}\n      >\n        {arePermissionsLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { progress } = selectTabState(global).management;\n\n    const paidMessagesStars = chat?.paidMessagesStars;\n    const configStarsPaidMessageCommissionPermille = global.appConfig?.starsPaidMessageCommissionPermille;\n\n    return {\n      chat,\n      progress,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n      arePaidMessagesAvailable: Boolean(fullInfo?.arePaidMessagesAvailable && configStarsPaidMessageCommissionPermille),\n      canChargeForMessages: Boolean(paidMessagesStars && configStarsPaidMessageCommissionPermille),\n      groupPeersPaidStars: paidMessagesStars || DEFAULT_CHARGE_FOR_MESSAGES,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"section-help hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-heading\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"section-help hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-heading\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"section-help hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"section-help\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"section-help\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"panel-content custom-scroll\">\n        {!invite && (\n          <p className=\"section-help\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <LinkField title={invite.title} link={invite.link} className=\"invite-link\" />\n              {Boolean(expireDate) && (\n                <p className=\"section-help\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p className=\"section-heading\">{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: oldLang('LinkCopied'),\n    });\n  }, [oldLang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = oldLang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = oldLang('PeopleJoined', usage);\n    } else {\n      text = oldLang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${oldLang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${oldLang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${oldLang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = expireDate - getServerTime();\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += oldLang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += oldLang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${oldLang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: oldLang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: oldLang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: oldLang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: oldLang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"section-help\">{isChannel ? oldLang('PrimaryLinkHelpChannel') : oldLang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <LinkField\n              className=\"settings-input\"\n              link={primaryInviteLink}\n              withShare\n              onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n              title={chat?.usernames ? oldLang('PublicLink') : oldLang('lng_create_permanent_link_title')}\n            />\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <ListItem icon=\"add\" withPrimaryColor key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {oldLang('CreateNewLink')}\n          </ListItem>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"section-help hint\" key=\"links-hint\">{oldLang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"section-help\" key=\"title\">{oldLang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{oldLang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={oldLang('DeleteAllRevokedLinks')}\n        text={oldLang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={oldLang('RevokeLink')}\n        text={oldLang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={oldLang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={oldLang('DeleteLink')}\n        text={oldLang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"section-help\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info section-info_push\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"user-first-name\"\n              label={lang('UserInfo.FirstNamePlaceholder')}\n              onChange={handleFirstNameChange}\n              value={firstName}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              id=\"user-last-name\"\n              label={lang('UserInfo.LastNamePlaceholder')}\n              onChange={handleLastNameChange}\n              value={lastName}\n            />\n          </div>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"section-help\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { RegularLangFnParameters } from '../../util/localization';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Partial<Record<string, RegularLangFnParameters>>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\",\"list\":\"l_wfiFG0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiLabeledPrice,\n  ApiPaymentCredentials,\n  ApiWebDocument,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { IconName } from '../../types/icons';\nimport type { LangFn } from '../../util/localization';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  title: string;\n  description: string;\n  photo?: ApiWebDocument;\n  invoice: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: ApiLabeledPrice[];\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  title,\n  description,\n  photo,\n  invoice,\n  shippingPrices,\n  checkoutInfo,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const ref = useMediaTransition<HTMLImageElement>(photoUrl);\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(lang, tipAmount!, invoice.currency)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(lang, tip, invoice.currency, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = oldLang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, oldLang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && (\n          <img\n            ref={ref}\n            className={styles.checkoutPicture}\n            src={photoUrl}\n            draggable={false}\n            width={photo!.dimensions?.width}\n            height={photo!.dimensions?.height}\n            alt=\"\"\n          />\n        )}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {description && (\n            <div className={styles.checkoutDescription}>\n              {renderText(description, ['br', 'links', 'emoji'])}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {invoice.prices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang, oldLang('Checkout.TotalAmount'), totalPrice, invoice.currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: oldLang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: oldLang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: oldLang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: oldLang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: oldLang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: oldLang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  lang: LangFn, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(lang, value, currency)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      className={styles.list}\n      narrow\n      multiline={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { RegularLangFnParameters } from '../../util/localization';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  errorKey?: RegularLangFnParameters;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  errorKey,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={errorKey && lang.withRegular(errorKey)}\n        hint={passwordHint}\n        description={oldLang('PaymentConfirmationMessage', cardName)}\n        placeholder={oldLang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    errorKey: payment.error?.messageKey,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.form?.type === 'regular' ? payment.form.savedCredentials : undefined,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{oldLang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber && lang.withRegular(formErrors.cardNumber)}\n        />\n        {needCardholderName && (\n          <InputText\n            label={oldLang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder && lang.withRegular(formErrors.cardholder)}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry && lang.withRegular(formErrors.expiry)}\n          />\n          <InputText\n            label={oldLang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv && lang.withRegular(formErrors.cvv)}\n            teactExperimentControlled\n          />\n        </section>\n        {needCountry || needZip ? (\n          <h5>{oldLang('PaymentBillingAddress')}</h5>\n        ) : undefined}\n        <section className=\"inline-inputs\">\n          {needCountry && (\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.billingCountry}\n              hasArrow={Boolean(true)}\n              id=\"billing-country\"\n              error={formErrors.billingCountry && lang.withRegular(formErrors.billingCountry)}\n              tabIndex={0}\n              ref={selectCountryRef}\n            >\n              {\n                countryList.map(({ defaultName, name }) => (\n                  <option\n                    value={defaultName}\n                    className=\"county-item\"\n                    selected={defaultName === state.billingCountry}\n                  >\n                    {defaultName || name}\n                  </option>\n                ))\n              }\n            </Select>\n          )}\n          {needZip && (\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handleBillingPostCodeChange}\n              value={state.billingZip}\n              inputMode=\"text\"\n              tabIndex={0}\n              maxLength={12}\n              error={formErrors.billingZip && lang.withRegular(formErrors.billingZip)}\n            />\n          )}\n        </section>\n        <div className=\"checkbox\">\n          <Checkbox\n            label={oldLang('PaymentCardSavePaymentInformation')}\n            checked={canSaveCredentials ? state.saveCredentials : false}\n            tabIndex={0}\n            subLabel={oldLang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n            onChange={handleChangeSaveCredentials}\n            disabled={!canSaveCredentials}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(lang, amount, currency),\n    value,\n  }))), [shippingOptions, currency, lang]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{oldLang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{oldLang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={oldLang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1 && lang.withRegular(formErrors.streetLine1)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2 && lang.withRegular(formErrors.streetLine2)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city && lang.withRegular(formErrors.city)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state && lang.withRegular(formErrors.state)}\n            />\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2 && lang.withRegular(formErrors.countryIso2)}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode && lang.withRegular(formErrors.postCode)}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{oldLang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={oldLang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName && lang.withRegular(formErrors.fullName)}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={oldLang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email && lang.withRegular(formErrors.email)}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={oldLang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone && lang.withRegular(formErrors.phone)}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={oldLang('PaymentShippingSave')}\n          subLabel={oldLang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountry, ApiInvoice, ApiLabeledPrice, ApiPaymentCredentials, ApiPaymentFormRegular,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  step?: PaymentStep;\n  chat?: ApiChat;\n  nativeProvider?: string;\n  invoice?: ApiInvoice;\n  form?: ApiPaymentFormRegular;\n  error?: TabState['payment']['error'];\n  prices?: ApiLabeledPrice[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  shippingOptions?: ShippingOption[];\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  form,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.messageKey,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (form?.savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = form.savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [form, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.descriptionKey ? lang.withRegular(error.descriptionKey) : lang('ErrorUnspecified')}</h4>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            title={form!.title}\n            description={form!.description}\n            photo={form!.photo}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice!}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!form!.isPasswordMissing && form!.canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            needEmail={Boolean(invoice?.isEmailRequested || invoice?.isEmailSentToProvider)}\n            needPhone={Boolean(invoice?.isPhoneRequested || invoice?.isPhoneSentToProvider)}\n            needName={Boolean(invoice?.isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={invoice!.currency}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (form?.savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (invoice?.isEmailRequested && !email)\n          || (invoice?.isPhoneRequested && !phone)\n          || (invoice?.isNameRequested && !fullName);\n\n        if ((invoice?.isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (invoice?.isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return oldLang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return oldLang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return oldLang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return oldLang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return oldLang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return oldLang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return oldLang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, oldLang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? oldLang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, invoice!.currency, oldLang.code))\n    : lang('PaymentInfoDone');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <Icon name={step === PaymentStep.Checkout ? 'close' : 'arrow-left'} />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            className=\"button-text\"\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      form,\n      step,\n      shippingOptions,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    const { invoice, nativeParams, nativeProvider } = form || {};\n    const countryList = global.countryList.general;\n\n    let providerName = form?.nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const bot = form?.botId ? selectUser(global, form.botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      nativeProvider: providerName,\n      isProviderError,\n      form,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: ApiLabeledPrice[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiReceiptRegular, ApiShippingAddress } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceiptRegular;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  receipt,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const prevReceipt = usePrevious(receipt);\n  const renderingReceipt = receipt || prevReceipt;\n\n  const checkoutInfo = useMemo(() => {\n    if (!renderingReceipt) return undefined;\n    return getCheckoutInfo(renderingReceipt.credentialsTitle, renderingReceipt.info, renderingReceipt.shippingMethod);\n  }, [renderingReceipt]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      {renderingReceipt && (\n        <>\n          <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            <Button\n              className=\"close-button\"\n              color=\"translucent\"\n              round\n              size=\"smaller\"\n              onClick={closeModal}\n              ariaLabel=\"Close\"\n            >\n              <Icon name=\"close\" />\n            </Button>\n            <h3> {lang('PaymentReceipt')} </h3>\n          </div>\n          <div className=\"receipt-content custom-scroll\">\n            <Checkout\n              shippingPrices={renderingReceipt.shippingPrices}\n              totalPrice={renderingReceipt.totalAmount}\n              tipAmount={renderingReceipt.tipAmount}\n              invoice={renderingReceipt.invoice}\n              checkoutInfo={checkoutInfo}\n              title={renderingReceipt.title}\n              description={renderingReceipt.description}\n              photo={renderingReceipt.photo}\n            />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    return {\n      receipt,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?: {\n    phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport Modal from '../ui/Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n};\n\nconst WebAppsCloseConfirmationModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { closeWebAppsCloseConfirmationModal, closeWebAppModal } = getActions();\n\n  const [shouldSkipInFuture, setShouldSkipInFuture] = useState(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onClose = useCallback(() => {\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const confirmHandler = useCallback(() => {\n    closeWebAppModal({ shouldSkipConfirmation: true });\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      title={lang('CloseMiniApps')}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <p>{lang('AreYouSureCloseMiniApps')}</p>\n      <Checkbox\n        className=\"dialog-checkbox\"\n        label={lang('DoNotAskAgain')}\n        checked={shouldSkipInFuture}\n        onCheck={setShouldSkipInFuture}\n      />\n      <div\n        className=\"dialog-buttons mt-2\"\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color=\"danger\"\n        >\n          {oldLang('Confirm')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {oldLang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(WebAppsCloseConfirmationModal);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { selectUser } from '../../../global/selectors';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport TableAboutModal, { type TableAboutData } from '../common/TableAboutModal';\n\nimport styles from './FrozenAccountModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['isFrozenAccountModalOpen'];\n};\n\ntype StateProps = {\n  freezeAppealUrl?: string;\n  botFreezeAppealUsername?: string;\n  freezeUntilDate?: number;\n};\n\nconst FrozenAccountModal = ({\n  modal,\n  freezeUntilDate,\n  freezeAppealUrl,\n  botFreezeAppealUsername,\n}: OwnProps & StateProps) => {\n  const {\n    closeFrozenAccountModal,\n    openUrl,\n  } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n\n  const handleClose = useLastCallback(() => {\n    closeFrozenAccountModal();\n  });\n\n  const handleAppeal = useLastCallback(() => {\n    closeFrozenAccountModal();\n    if (freezeAppealUrl) {\n      openUrl({ url: freezeAppealUrl });\n    }\n  });\n\n  const header = useMemo(() => {\n    return (\n      <div className={styles.header}>\n        <AnimatedIconWithPreview\n          size={160}\n          tgsUrl={LOCAL_TGS_URLS.BannedDuck}\n          noLoop\n        />\n        <div className={styles.title}>\n          {lang('FrozenAccountModalTitle')}\n        </div>\n      </div>\n    );\n  }, [lang]);\n\n  const footer = useMemo(() => {\n    if (!isOpen) return undefined;\n    return (\n      <div className={styles.footer}>\n        <Button\n          className={styles.buttonAppeal}\n          size=\"smaller\"\n          onClick={handleAppeal}\n          noForcedUpperCase\n        >\n          {lang('ButtonAppeal')}\n        </Button>\n        <Button\n          isText\n          size=\"smaller\"\n          onClick={handleClose}\n          noForcedUpperCase\n        >\n          {lang('ButtonUnderstood')}\n        </Button>\n      </div>\n    );\n  }, [lang, isOpen]);\n\n  if (!freezeUntilDate || !botFreezeAppealUsername) return undefined;\n\n  const date = new Date(freezeUntilDate * 1000);\n\n  const botLink = (\n    <Link onClick={handleAppeal} isPrimary>\n      {formatUsername(botFreezeAppealUsername)}\n    </Link>\n  );\n\n  const listItemData = [\n    ['hand-stop', lang('FrozenAccountViolationTitle'), lang('FrozenAccountViolationSubtitle')],\n    ['lock', lang('FrozenAccountReadOnlyTitle'), lang('FrozenAccountReadOnlySubtitle')],\n    ['frozen-time', lang('FrozenAccountAppealTitle'),\n      lang('FrozenAccountAppealSubtitle', {\n        botLink,\n        date: formatDateToString(date, lang.code),\n      }, {\n        withNodes: true,\n      })],\n  ] satisfies TableAboutData;\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={header}\n      listItemData={listItemData}\n      footer={footer}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const freezeUntilDate = global.appConfig?.freezeUntilDate;\n    const freezeAppealUrl = global.appConfig?.freezeAppealUrl;\n    const botFreezeAppealId = global.botFreezeAppealId;\n    const botFreezeAppealUsername = botFreezeAppealId\n      ? selectUser(global, botFreezeAppealId)?.usernames?.[0]?.username : undefined;\n\n    return {\n      freezeUntilDate,\n      freezeAppealUrl,\n      botFreezeAppealUsername,\n    };\n  },\n)(FrozenAccountModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"cW2rtp6M\",\"title\":\"qLSm0uyC\",\"footer\":\"Vj3QQ_JQ\",\"buttonAppeal\":\"anvg3JaY\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  const lang = useLang();\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n"],"names":["memo","StarTopupOptionList","isActive","className","options","selectedStarOption","selectedStarCount","starsNeeded","onClick","oldLang","useOldLang","lang","useLang","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","useFlag","useEffect","renderingOptions","canExtend","useMemo","undefined","maxOption","reduce","max","option","stars","forceShowAll","result","currentStackedStarsCount","canExtendOptions","forEach","index","isExtended","push","starsCount","Math","min","isWide","length","React","createElement","buildClassName","styles","map","isOdd","isActiveOption","perUserStarCount","winner","winners","find","opt","users","perUserStars","wideOption","active","key","optionTop","formatInteger","stackedStars","dir","isRtl","Array","from","StarIcon","stackedStar","type","size","optionBottom","formatCurrency","amount","currency","renderText","Button","moreOptions","isText","noForcedUpperCase","Icon","iconDown","name","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","PasswordMonkey","isPasswordVisible","isBig","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","isMobile","useAppLayout","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","useTimeout","handleFirstMonkeyLoad","useCallback","id","AnimatedSticker","STICKER_SIZE_TWO_FA","tgsUrl","LOCAL_TGS_URLS","MonkeyClose","playSegment","noLoop","onLoad","MonkeyPeek","TableAboutModal","isOpen","listItemData","headerIconName","header","footer","buttonText","hasBackdrop","withSeparator","onClose","onButtonClick","contentClassName","Modal","hasAbsoluteCloseButton","absoluteCloseButtonColor","icon","title","subtitle","ListItem","isStatic","multiline","iconClassName","Separator","PickerModal","confirmButtonText","isConfirmDisabled","shouldAdaptToSearch","withFixedHeight","onConfirm","withPremiumGradient","modalProps","hasButton","Boolean","_extends","isSlim","headerClassName","children","color","disabled","getViewableMedia","params","media","mediaIndex","isSingle","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","webPageDocument","isDocumentMedia","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","getNodes","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","ChannelAvatar","SuggestedAvatar","StarsTransaction","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","container","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","onload","blurredDataUri","clear","set","window","setTimeout","useBlur","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","ReportAvatarModal","peerId","onCloseAnimationEnd","reportProfilePhoto","getActions","selectedReason","setSelectedReason","useState","description","setDescription","handleReport","useLastCallback","chatId","reason","handleSelectReason","value","handleDescriptionChange","e","target","REPORT_OPTIONS","label","onEnter","RadioGroup","onChange","selected","InputText","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","DeleteProfilePhotoModal","profileId","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","isUserId","withGlobal","global","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","chat","selectCurrentChat","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","MediaViewerActions","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","onTrigger","round","ariaLabel","renderDeleteModal","openDeleteModalHandler","messageIds","isSchedule","menuItems","isForwardingAllowed","content","href","download","destructive","DropdownMenu","trigger","positionX","MenuItem","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","getCurrentTime","setCurrentTime","useCurrentTimeSignal","MediaViewerFooter","text","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","stopPropagation","isRectangular","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","connector","request","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","SeekLine","duration","bufferedRanges","isReady","posterSize","playbackRate","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","start","end","PLAYBACK_RATES","VideoPlayerControls","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","ripple","RangeSlider","bold","renderTime","formatFileSize","Menu","positionY","autoClose","rate","VideoPlayer","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","timestamp","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","sponsoredMessage","textMessage","maxTimestamp","selectMessageTimestampableDuration","MediaViewerContent","withAnimation","isMoving","onFooterClick","updateLastPlaybackTimestamp","toggleControlsOnMove","updatePlaybackTimestamp","useThrottledCallback","MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION","isInAlbum","newTimestamp","PLAYBACK_SAVE_INTERVAL","useSignalEffect","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","MediaViewerSlides","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","closest","calculateOffsetBoundaries","offsetTop","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","dragOffsetX","dragOffsetY","cancelDrag","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","includes","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","toFixed","element","selector","matches","messageSender","selectSender","owner","SenderInfo","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getPeerTitle","Avatar","peer","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","MediaViewer","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsored","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","imageEl","messageListElement","getOffsetToContainer","scrollTop","offsetHeight","isMessageImageFullyVisible","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","HTMLElement","isFromMedia","isMedia","randomId","handleForward","fromChatId","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","StealthModeModal","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","inactive","leftElement","isShiny","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterPeersByQuery","ids","query","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","usersById","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","getHours","expireDate","section","list","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","closeButton","headerTitle","renderHeaderContent","slideClassName","sender","fromPeerId","EmbeddedStoryForward","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","PeerColorWrapper","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","StoryFooter","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","userFullInfo","selectUserFullInfo","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","reportModal","giftInfoModal","isPaymentMessageConfirmDialogOpen","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","paidMessagesStars","selectPeerPaidMessagesStars","isAccountFrozen","selectIsCurrentUserFrozen","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","arePeerSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadPeerSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","inputPlaceholder","formatStarsAsIcon","asFont","withNodes","StoryProgress","formatRelativePastTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","transformX","getCurrentStoryRef","composer","focusEditableElement","disableScrolling","enableScrolling","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","scrollHeight","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","StoryView","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","viewsList","contactFilter","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","reportStory","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","openMessageReport","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","ChatOrUserPicker","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","isLowStackPriority","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","toLowerCase","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","RecipientPicker","API_CHAT_TYPES","onSelectRecipient","setSearch","priorityIds","isDeletedUser","chatFullInfo","selectChatFullInfo","sorted","sortChatIds","filterChatIdsByType","renderingIds","isForwarding","isManyMessages","isStory","ForwardRecipientPicker","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","DraftRecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","AttachBotRecipientPicker","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","Dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","messageList","getReadableErrorText","pick","Notifications","notifications","notification","Notification","localId","SafeLinkModal","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","withMarkdown","OpenMapModal","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","UrlAuthModal","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","CalendarModal","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","hours","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","HistoryCalendar","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","phoneCodeList","countryList","phoneCodes","NewContactModal","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","ResizeHandleType","resizeHandleSelectorsMap","Top","Bottom","Left","Right","topLeft","TopLeft","topRight","TopRight","bottomLeft","BottomLeft","bottomRight","BottomRight","resizeHandleSelectors","resizeTimeout","FULLSCREEN_POSITION","webApps","selectActiveWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","MinimizedWebAppModal","changeWebAppModalState","closeWebAppModal","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","state","activeTabName","botName","pluralValue","renderTitle","isPopularApp","requestMainWebView","theme","extractCurrentThemeParams","activeUserCount","botActiveUsers","badgeText","formatIntegerCompact","PeerBadge","avatarContainer","textClassName","badgeClassName","userCountBadge","badgeIconClassName","userBadgeIcon","badgeIcon","runThrottled","cb","globalSearch","popularBotApps","fetchingStatus","botApps","recentBotIds","topBotApps","MoreAppsTabContent","shouldShowMoreMine","setShouldShowMoreMine","searchPopularBotApps","handleToggleShowMoreMine","prev","filteredFoundIds","LoadMoreDirection","Backwards","handleSearchInputReset","noFastList","preloadBackwards","onReset","sectionTitle","showMoreLink","sectionContent","WebAppGridItem","FULLSCREEN_BUTTONS_AREA_HEIGHT","MAIN_BUTTON_ANIMATION_TIME","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeWebApp","activeWebAppKey","selectWebApp","activeBotId","attachBot","attachMenu","bots","botAppSettings","botInfo","appSettings","selectTheme","isPaymentModalOpen","regularPaymentStatus","payment","starsPaymentStatus","inputInvoice","starsInputInvoice","starsPayment","botAppPermissions","selectBotAppPermissions","paymentStatus","WebAppModalTabContent","webApp","registerSendEventCallback","registerReloadFrameCallback","isTransforming","isMultiTabSupported","onContextMenuButtonClick","modalHeight","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","resetPaymentStatus","openChatWithInfo","openEmojiStatusAccessModal","openLocationAccessModal","openPreparedInlineMessageModal","mainButton","setMainButton","secondaryButton","setSecondaryButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","requestedFileDownload","setRequestedFileDownload","bottomBarColor","setBottomBarColor","unlockPopupsAt","handlePopupOpened","handlePopupClosed","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerButtonRef","headerButtonCaptionRef","exitFullScreenCallback","fullscreenElementRef","activeWebAppName","appName","isBackButtonVisible","placeholderPath","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","isAvailable","IS_GEOLOCATION_SUPPORTED","isAccessRequested","geolocation","isAccessGranted","updateCurrentWebApp","updatedPartialWebApp","update","themeParams","secondary_bg_color","themeBackgroundColor","bg_color","backgroundColorFromEvent","setBackgroundColorFromEvent","backgroundColorFromSettings","backgroundColor","backgroundDarkColor","themeHeaderColor","headerColorFromEvent","setHeaderColorFromEvent","headerColorFromSettings","headerColor","headerDarkColor","frameRef","isSimple","reloadFrame","sendEvent","sendFullScreenChanged","sendViewport","sendSafeArea","sendTheme","useWebAppFrame","isSimpleView","onEvent","openInvoice","closeWebApp","openSuggestedStatusModal","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","eventType","eventData","is_fullscreen","forceReloadFrame","once","isNonStable","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","custom_emoji_id","BigInt","customEmojiId","plannedEvents","getIsWebAppsFullscreenSupported","exitIfFullscreenCallback","TME_LINK_PREFIX","path_full","shouldIgnoreCache","force_request","is_visible","isSettingsButtonVisible","validateHexColor","color_key","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","handleRejectFileDownload","fileUrl","handleCheckDownloadFile","file_name","access_requested","access_granted","geolocationData","getGeolocationStatus","accessRequested","accessGranted","latitude","longitude","altitude","course","heading","speed","horizontal_accuracy","accuracy","vertical_accuracy","altitudeAccuracy","handleRequestLocation","isMainButtonVisible","isSecondaryButtonVisible","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","handleSecondaryButtonClick","buttonId","button_id","handleAppPopupModalClose","sendThemeCallback","setFullscreenCallback","checkIfFullscreen","sendFullScreenChangedCallback","visibilityChangedCallBack","prevModalState","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","shouldCloseActive","handleAcceptWriteAccess","handleDownloadFile","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","secondaryButtonCurrentPosition","secondaryButtonCurrentColor","secondaryButtonCurrentTextColor","secondaryButtonCurrentIsActive","secondaryButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideMainButton","setShouldHideMainButton","shouldHideSecondaryButton","setShouldHideSecondaryButton","shouldShowMainButton","setShouldShowMainButton","shouldShowSecondaryButton","setShouldShowSecondaryButton","shouldShowAppNameInFullscreen","setShouldShowAppNameInFullscreen","backButtonTextWidth","setBackButtonTextWidth","isVerticalLayout","rowsCount","hideDirection","mainButtonChangeTimeout","mainButtonFastTimeout","secondaryButtonChangeTimeout","secondaryButtonFastTimeout","appNameDisplayTimeout","frameStyle","handleBackClick","handleCollapseClick","handleShowContextMenu","backIconClass","backButtonCaption","hasHeaderElement","viewBox","renderDefaultPlaceholder","sandbox","allow","allowFullScreen","hasCloseButton","filename","MINIMIZED_STATE_SIZE","DEFAULT_MAXIMIZED_STATE_SIZE","MAXIMIZED_STATE_MINIMUM_SIZE","miniAppsCachedPosition","miniAppsCachedSize","selectSharedSettings","cachedPosition","cachedSize","WebAppModal","prolongWebView","openWebAppTab","openMoreAppsTab","closeMoreAppsTab","updateMiniAppCachedPosition","updateMiniAppCachedSize","getMaximizedStateSize","setMaximizedStateSize","getSize","openedOrderedKeys","sessionKeys","isMoreAppsTabActive","tabs","isMaximizedState","isFullScreen","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","isDragging","draggableStyle","dragHandleElementRef","isDragEnabled","originalSize","minimumSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartTransform","setElementPositionOnStartTransform","getElementSizeOnStartTransform","setElementSizeOnStartTransform","getTransformStartPoint","setTransformStartPoint","elementPositionOnStartTransform","transformStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","startResizing","stopResizing","isWindowsResizing","startWindowResizing","stopWindowResizing","hitResizeHandle","setHitResizeHandle","getVisibleArea","innerWidth","innerHeight","updateCurrentPosition","getActualPosition","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleStartResize","targetElement","resizeHandle","RESIZE_HANDLE_SELECTOR","getResizeHandleFromTarget","handleDragRelease","handleResizeRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","originalWidth","originalHeight","adjustSizeWithinBounds","handleWindowResize","handleDrag","sizeOnStartTransform","pageVisibleX","pageVisibleY","maxX","maxY","newBounds","cleanups","resizeHandler","cursorStyle","actualPosition","useDraggable","getMinimumSize","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleCloseMoreAppsTab","handleTabClose","handleToggleClick","handleFullscreenClick","handleOpenMoreAppsTabClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","renderMoreMenu","anchor","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","fill","buildResizeHandleClass","handleClassName","RESIZE_HANDLE_CLASS_NAME","useHorizontalScroll","dialogRef","dialogStyle","dialogContent","shortName","renderActiveTab","noBackdropClose","BotTrustModal","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","AttachBotInstallModal","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","DeleteFolderDialog","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","PremiumFeatureItem","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","SliderDots","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","PremiumLimitsCompare","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","PremiumLimitPreview","colorStepProgress","lerp","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","play","isLowPriority","stickers","premium","PremiumFeaturePreviewStickers","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","AVATAR_SIZES","giant","PremiumFeaturePreviewVideo","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","moreAccounts","LIMITS_DESCRIPTIONS","PremiumFeatureModal","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","months","perMonthPrice","price","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","currentSection","hasHeaderBackdrop","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumFeaturePreviewStories","videoSections","videos","PREMIUM_BOTTOM_VIDEOS","PremiumSubscriptionOption","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","formatCurrencyAsString","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","PremiumMainModal","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","monthOption","subscribeButtonText","CustomEmoji","PremiumLogo","template","first","second","emoji","thumbCustomEmojiId","link","getHeaderText","statusText","entities","statusEntities","renderFooterText","ItemPicker","notFoundText","noScrollRestore","isViewOnly","itemClassName","forceRenderAllItems","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","CountryPickerModal","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","GiveawayChannelPickerModal","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","GiveawayTypeOption","isLink","onClickAction","userNames","selectedMemberIds","displayText","members","adminMembersById","GiveawayUserPickerModal","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredUserIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","gifts","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GiveawayModal","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedMonthOption","setSelectedMonthOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedGift","gift","selectedStarsGift","filteredGifts","STARS_CURRENCY_CODE","basicGift","userCountOptions","winnerCountOptions","quantity","handlePremiumClick","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","subLabelClassName","formatDateTimeToString","boosts","RangeSliderWithMarks","rangeCount","marks","match","Link","isPrimary","renderPremiumFeaturesLink","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","PremiumLimitReachedModal","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","maxDistance","StickerSetCover","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToSticker","IS_WEBM_SUPPORTED","firstStickerHash","getStickerMediaHash","firstStickerMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","StickerButton","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","withSparkles","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","until","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","Sparkles","preset","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","ReactionEmoji","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","collectibleStatuses","collectibleEmojiStatuses","statuses","StickerSet","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isStatusCollectible","COLLECTIBLE_STATUS_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","collectibleEmojiIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","isHqEmoji","canvasRef","HEADER_BUTTON_WIDTH","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","CustomEmojiPicker","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","collectibleStatusEmojis","collectibleStatusEmojiIds","prefix","canLoadAndPlay","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","uniqueByField","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","StatusPickerMenu","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CUSTOM_EMOJI_SIZE","SuggestedStatusModal","closeSuggestedStatusModal","sendWebAppEvent","renderingModal","mockPeerWithStatus","formatShortDuration","handleSetStatus","expires","referrerWebAppKey","loopLimit","PeerChip","mockPeer","withEmojiStatus","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","BoostModal","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","chatMessage","GiftCodeModal","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","tableData","isFromGiveaway","TableInfoModal","ChatlistAlready","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","isNew","alreadyPeerIds","newChatsCount","noCustomEmojiPlayback","noTitleAnimations","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","Badge","buttonBadge","isAlternateColor","ChatlistDelete","suggestedPeerIds","leaveChatlist","ChatlistNew","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","ChatlistInviteModal","renderingInfo","renderingFolderTitle","folderTabNumber","folderTitle","foldersWrapper","folders","Tab","badgeCount","isBadgeActive","ChatInviteModal","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","minLevelToRestrictAds","channelRestrictAdsLevelMin","AboutAdsModal","closeAboutAdsModal","moreMenuRef","canReport","additionalInfo","sponsorInfo","isMonetizationSharing","renderingIsNewDesign","regularAdContent","SafeLink","SponsoredMessageContextMenuContainer","triggerRef","shouldSkipAbout","onItemClick","AboutMonetizationModal","blockchainText","monetizationTitle","specialReplacement","twoFaSettings","hint","passwordHint","VerificationMonetizationModal","closeMonetizationVerificationModal","clearMonetizationVerificationError","processMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","handleClearError","PasswordForm","shouldShowSubmit","errorKey","withRegular","clearError","shouldResetValue","onChangePasswordVisibility","EmojiStatusAccessModal","closeEmojiStatusAccessModal","toggleUserEmojiStatusPermission","loadDefaultStatusIcons","currentStatusIndex","setCurrentStatusIndex","totalCount","prevIndex","renderPickerItem","chatItem","itemName","isBotAccessEmojiGranted","onCloseHandler","renderStatusText","LocationAccessModal","closeLocationAccessModal","toggleUserLocationPermission","renderInfo","ReportAdModal","reportSponsored","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","ReportModal","reportMessages","closeReportModal","openPreviousReportModal","setText","subject","handleTextChange","closeReportMessageModalHandler","sendMessageReportHandler","Report","TextArea","isOptional","maxLengthIndicator","noReplaceNewlines","isBlurred","isBackgroundBlurred","patternColor","background","customBackground","selectThemeValues","PreparedMessageModal","closePreparedInlineMessageModal","openSharePreparedMessageModal","customBackgroundValue","useCustomBackground","handleOpenClick","localMessage","getMockPreparedMessageFromResult","bgClassName","inert","Message","noComments","noReplies","appearanceOrder","isJustAdded","isFirstInGroup","isLastInGroup","isLastInList","isFirstInDocumentGroup","isLastInDocumentGroup","starsBalance","balance","isStarsBalanceModalOpen","starsBalanceModal","SharePreparedMessageModal","closeSharePreparedMessageModal","sendInlineBotResult","updateSharePreparedMessageModalSendArgs","pendingSendArgs","starsForSendMessage","closeConfirmDialog","closeConfirmModalPayForMessage","dialogHandler","paymentMessageConfirmDialogHandler","shouldAutoApprove","shouldPaidMessageAutoApprove","setAutoApprove","setShouldPaidMessageAutoApprove","handleWithConfirmation","handleActionWithPaymentConfirmation","usePaidMessageConfirmation","handleSend","handleSendWithPaymentConfirmation","handleClosePaymentMessageConfirmDialog","peerName","PaymentMessageConfirmDialog","userName","messagePriceInStars","messagesCount","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","PermissionCheckboxList","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","selectCanDeleteSelectedMessages","isSuperGroup","contactName","getPrivateChatUserId","chatBot","isSystemBot","selectBot","canBanUsers","getHasAdminRight","isCreator","isChatWithBot","selectIsChatWithBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","DeleteMessageModal","closeDeleteMessageModal","deleteMessages","reportChannelSpam","deleteChatMember","deleteScheduledMessages","exitMessageSelectMode","updateChatMemberBannedRights","deleteParticipantHistory","defaultBannedRights","peerIdsToDeleteAll","setPeerIdsToDeleteAll","peerIdsToBan","setPeerIdsToBan","peerIdsToReportSpam","setPeerIdsToReportSpam","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","shouldDeleteForAll","setShouldDeleteForAll","peerList","senderArray","getSendersFromSelectedMessages","buildNestedOptionListWithAvatars","member","peerListToDeleteAll","peerListToReportSpam","peerListToBan","isCurrentUserInList","isAdmin","shouldShowOption","peerNames","buildCollectionByCallback","ACTION_SPAM_OPTION","nestedOptions","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByPeerId","selectedMessageIdList","msgId","selectSenderFromMessage","handleReportSpam","userMessagesMap","messageIdList","participantId","handleDeleteMessages","filteredMessageIdList","handleDeleteAllPeerMessages","peerIdList","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageList","isNaN","CheckboxGroup","nestedCheckbox","isPrivateChat","canPinForAll","PinMessageModal","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","UnpinAllMessagesModal","pinnedMessagesCount","onUnpin","shouldWarnAboutSvg","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","selectedMessageIds","selectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","MessageSelectToolbar","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","setSharedSettingOption","handleCopy","useHotkeys","useCopySelectedMessages","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","handleExitMessageSelectMode","handleDelete","onBackspace","onEsc","handleMessageDownload","handleSvgConfirm","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","PrivacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","ReadTime","LastSeen","reactorModal","reactors","ReactorListModal","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","flatMap","peerReactions","reactor","seenByUser","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","EmojiInteractionAnimation","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","ChatLanguageModal","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","CollectibleInfoModal","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","PureMultimodalInput","setMessages","textareaRef","adjustHeight","localStorageInput","setLocalStorageInput","useLocalStorage","inputValue","setInputValue","domValue","submitForm","AITextarea","cx","rows","autoFocus","shiftKey","toast","StopButton","SendButton","AISearchInput","prevProps","nextProps","PureStopButton","messages","sanitizeUIMessages","StopIcon","PureSendButton","GLOBAL_SEARCH_CHATID","injectMessageAI","injectComponent","AISearch","pageInfo","setPageInfo","lastTime","hasMore","scrollToBottom","scrollLocked","isScrollLock","useScrollToBottom","append","useChat","api","SERVER_API_URL","sendExtraMessageFields","ChataiStores","getMessages","res","localChatAiMessages","parseStoreMessage2Message","suggestionMessage","uuidv4","createdAt","annotations","parsedMessage","parseMessage2StoreMessage","storeMessages","Promise","resolve","searchGroup","similarItems","messageEmbeddingStore","similaritySearch","filterOptions","include","metadata","chatType","searchResult","chatIds","score","searchUser","senderIds","searchMessage","senderName","random","isAuxiliary","toolsHitCheck","fetch","headers","json","toolResults","toolCall","toolName","keyword","sendGAEvent","Messages","AISearchWrapper","injected","unmount","createMapStateToProps","props","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","AudioResults","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","getIsChatMuted","selectNotifyDefaults","selectNotifyException","canChangeFolder","chatFolders","LeftSearchResultChat","withUsername","withOpenAppButton","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","handleOpenApp","useSelectWithEnter","storyViewerOrigin","hasMainMiniApp","MuteChatModal","ChatFolderModal","BotAppResults","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","privateChatUserId","privateChatUser","ChatMessage","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","DateSuggest","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","LeftSearchResultTopic","foundTopicIds","ChatMessageResults","dateSearchQuery","onSearchDateSelect","openThread","handleTopicClick","nothingFound","LeftSearchResultSponsored","sponsoredPeer","viewSponsored","useOnIntersect","intersectionRatio","handleBadgeClick","handleBadgeMouseDown","BadgeButton","topUserIds","topPeers","recentlyFoundChatIds","RecentContacts","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","ChatResults","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","searchContext","setSearchContext","context","handlePickerItemClick","getSearchContextCaption","handleClickContext","itemPlaceholderClass","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","shouldResetResultsByType","shouldCheckFetchingMessagesStatus","handleClickShowMoreLocal","handleClickShowMoreGlobal","actualFoundIds","isMessagesFetching","shouldRenderTopPeers","shouldRenderMessagesSection","noScrollRestoreOnTop","customIcon","shouldCleanup","CURRENT_TYPE","FileResults","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","LinkResults","WebLink","onMessageClick","MediaResults","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","AI","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","LeftSearch","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","INITIAL_STATE","email","twoFaReducer","payload","maxChats","selectCurrentLimit","SettingsFoldersChatFilters","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","el","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","SettingsFoldersEdit","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","typeKey","renderChatType","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","foldersById","recommended","recommendedChatFolders","folderIds","aiChatFolders","filterAIFolder","maxFolders","SettingsFoldersMain","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","PRESET_FOLDER_ID","UNREAD_FOLDER_ID","AI_FOLDER_ID","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","SettingsShareChatlist","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","pinnedChatIds","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","AnimatedIcon","FoldersShare","withShare","onRevoke","lockedUnselectedIds","SettingsFolders","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsPasswordForm","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","SettingsPasscodeCongratulations","fullReset","STICKER_SIZE_PASSCODE","Congratulations","SettingsPasscodeEnabled","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","SettingsPasscodeStart","passcode","SettingsPasscode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeForm","PasscodeEnabled","DEFAULT_POINTS","getProgress","points","pointIndex","findIndex","prevPoint","nextPoint","pointValue","PaidMessageSlider","readOnly","canChangeChargeForMessages","mainClassName","number","formatStarsAsText","step","starsUsdWithdrawRateX1000","starsUsdWithdrawRate","configStarsPaidMessageCommissionPermille","starsPaidMessageCommissionPermille","starsPaidMessageAmountMax","DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES","isGroupChat","chargeForMessages","handleChargeForMessagesChange","handleUnlockWithPremium","MINIMUM_CHARGE_FOR_MESSAGES","percent","formatPercent","premiumSection","handleOpenPremiumModal","nonContactPeersPaidStars","selectNonContactPeersPaidStars","noPaidReactionsForUsersCount","noPaidMessages","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","shouldChargeForMessages","DEFAULT_CHARGE_FOR_MESSAGES","canLimitNewMessagesWithoutPremium","canChargeForMessages","starsPaidMessagesAvailable","canChangeForContactsAndPremium","setChargeForMessages","PrivacyLockedOption","hidden","isCanCheckedInDisabled","updateGlobalPrivacySettingsWithDebounced","privacyDescription","PaidMessagePrice","itemSubtitle","PrivacyNoPaidMessages","renderSectionNoPaidMessagesForUsers","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","SettingsActiveSession","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","iconDevice","dateActive","box","appVersion","ip","region","getLocation","note","actionHeader","actionName","SettingsActiveSessions","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","SettingsActiveWebsite","terminateWebAuthorization","renderingBot","browser","SettingsActiveWebsites","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","StickerSetCard","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","byKey","customEmojiSetIds","canPlayAnimatedEmojis","SettingsCustomEmoji","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","SettingsDataStorage","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","SettingsDoNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","ManageUsernames","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","UsernameInput","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","SettingsEditProfile","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","SettingsExperimental","requestWave","snapButtonRef","isSnapButtonAnimating","setIsSnapButtonAnimating","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","handleRequestWave","startX","startY","handleRequestConfetti","handleSnap","animateSnap","Experimental","IS_WAVE_TRANSFORM_SUPPORTED","IS_SNAP_EFFECT_SUPPORTED","IS_ELECTRON","shouldUseSystemTheme","messageSendKeyCombo","messageTextSize","timeFormat","SettingsGeneral","isMobileDevice","timeFormatOptions","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","WallpaperTile","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","loadedWallpapers","SettingsGeneralBackground","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","SettingsHeader","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneNumberAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyGiftsAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","canTranslate","canTranslateChats","languages","SettingsLanguage","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","sessionCount","SettingsMain","openSupportChat","openGiftRecipientPicker","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","languageInfo","formatStarsAmount","FAQ_URL","PRIVACY_URL","renderTextFilters","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","SettingsNotifications","notifyDefaults","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsMuted","mutedUntil","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","groups","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","hasPasscode","canDisplayChatInTitle","isCurrentUserFrozen","blockedCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","SettingsPrivacy","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","botsPrivacy","isVisibilityEverybody","shouldShowBotsString","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","conjunction","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","BlockUserModal","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","SettingsPrivacyBlockedUsers","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","disallowedGifts","SettingsAcceptedGift","handleOpenTelegramPremiumModal","actionText","handleLimitedEditionChange","shouldDisallowLimitedStarGifts","handleUnlimitedEditionChange","shouldDisallowUnlimitedStarGifts","handleUniqueChange","shouldDisallowUniqueStarGifts","handlePremiumSubscriptionChange","shouldDisallowPremiumGifts","selectShouldHideReadMarks","SettingsPrivacyLastSeen","canShowHideReadTime","handleChangeShouldHideReadMarks","SettingsPrivacyPublicProfilePhoto","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","headerText","prepareSubtitle","userIdsCount","chatIdsCount","isAllowBots","userCountString","chatCountString","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","shouldDisplayGiftsButton","addByPhone","phoneP2P","SettingsPrivacyVisibility","handleShowGiftIconInChats","secondaryScreen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","SettingsPrivacyVisibilityExceptionList","isAllowList","withPremiumCategory","withMiniAppsCategory","usersOnly","setPrivacySettings","customPeerBots","isCustomPeer","avatarIcon","isAvatarSquare","peerColorId","miniAppsCategory","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","SettingsQuickReaction","setDefaultReaction","emoticon","withIcon","addedSetIds","SettingsStickers","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","SettingsTwoFaCongratulations","recoveryEmail","animatedEmoji","selectAnimatedEmoji","codeLength","waitingEmailCodeLength","SettingsTwoFaEmailCode","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","SettingsTwoFaEnabled","SettingsTwoFaSkippableForm","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","SettingsTwoFaStart","SettingsTwoFa","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaPassword","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_GIFTS_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","PRIVACY_MESSAGES_SCREENS","Settings","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","useMarkScrolled","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsGeneralBackgroundColor","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","ErrorTip","injectEditor","knowledge","knowledgeId","richText","question","setQuestion","questionError","setQuestionError","valueError","setValueError","handleQuestionChange","handleSave","plainText","n","Node","string","knowledgeIdValue","addKnowledge","knowledgeEmbeddingStore","updateText","answer","DSlate","toolbar","Input","AddKnowledgeModal","editorRef","AIKnowledgeEmptyContent","onAdd","AIKnowledgeEmpty","AIKnowledgeList","knowledgeList","onEdit","copy","handleEdit","AIKnowledgeContent","onShowAddModal","handleAdd","AIKnowledgeHeader","showAddButton","AIKnowledge","setKnowledgeList","showAddModal","setShowAddModal","setType","editKnowledge","setEditKnowledge","getAllKnowledge","handleCloseAddModal","handleShowAddModal","deleteKnowledge","deleteText","autoTranslateLanguage","AutoTranslateLanguage","telegptSettings","autotranslatelanguage","autoTranslate","AITranslateContent","displayAutoTranslate","setDisplayAutoTranslate","handleAutoTranslateChange","autotranslate","AITranslateHeader","AITranslate","userStatusesById","ContactList","openNewContactDialog","isSearching","NewChatStep1","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","NewChatStep2","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","NewChat","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","ArchivedChats","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","canScheduleUntilOnline","selectCanScheduleUntilOnline","shouldSchedule","selectShouldSchedule","StickerSetModal","prevStickerSet","renderingStickerSet","isAdded","requestCalendar","calendar","useSchedule","isScheduleRequested","isPreloadedGlobally","scheduledAt","handleCopyLink","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","CustomEmojiSetsModal","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","currentChatId","currentThreadId","canReportChat","canGift","selectCanGift","canCreateTopic","isUserRightBanned","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","HeaderMenuContainer","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","openFrozenAccountModal","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openGiftModal","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","setIsMenuOpen","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","areAllGiftsDisallowed","closeMenu","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftClick","forUserId","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","MenuSeparator","DeleteChatModal","isSavedDialog","MiddleSearchResult","senderPeer","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","MiddleSearch","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","shouldCancelSearchRef","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","tag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","StickerPicker","isForEffects","loadRecentStickers","addRecentSticker","unfaveSticker","faveSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","maxUniqueReactions","enabledReactions","reactionsLimit","ReactionPickerLimited","isTouchScreen","currentReactions","shouldUseCurrentReactions","allAvailableReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","isForbidden","ReactionPicker","toggleReaction","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","addLocalPaidReaction","openPaidReactionModal","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","shouldAddToRecent","handleToggleReaction","handleReactionContextMenu","handleStoryReactionSelect","customEmojiMessage","parseHtmlAsFormattedText","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","div","BLUR_CANVAS_SIZE","AttachmentModalItem","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","isFullyVisible","isHorizontal","viewportY1","viewportY2","y2","findInViewport","selectorOrElements","shouldContainBottom","allElements","visibleIndexes","isFound","setTooltipItemVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","isSelectionOutOfRange","onUp","onDown","onTab","MentionTooltip","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","AttachmentModal","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onSend","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","canSchedule","onSendWhenOnline","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","attachmentsLength","isBottomDividerShown","buttonSendCaption","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","uniqueId","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","onSendSchedule","PollModal","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","newOptions","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","EmojiButton","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","EmojiCategory","category","allEmojis","emojisPerRow","displayedEmoji","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","EmojiPicker","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","GifButton","gif","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","GifPicker","canSendGifs","onGifSelect","loadSavedGifs","saveGif","debounceMs","shouldUnsave","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","SymbolMenuFooter","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","SymbolMenu","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","mobileClassName","onMouseEnter","ChatCommand","withAvatar","freezeWhenClosed","ChatCommandTooltip","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","BotCommandMenu","botCommand","StickerTooltip","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","onToggleReaction","isInSavedMessages","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","areItemsHidden","hideItems","showItems","markIsReady","unmarkIsReady","handleOpenMessageEffectsPicker","ReactionSelector","onShowMore","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","TextFormatter","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","EDITABLE_INPUT_ID","textFormat","tagName","restoreSelection","selection","getSelection","removeAllRanges","addRange","updateSelectedRange","getRangeAt","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","ApiMessageEntityTypes","Spoiler","execCommand","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","CustomEmojiButton","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","BaseResult","thumbnailDataUrl","getWebDocumentHash","decoding","ArticleResult","inlineResult","webThumbnail","GifResult","_gif","MediaResult","isForGallery","thumbnailBlobUrl","getPhotoMediaHash","StickerResult","STICKER_SIZE_INLINE_BOT_RESULT","InlineBotTooltip","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","SendAsMenu","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","membersCount","StickerSetResult","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","StickerSearch","loadFeaturedStickers","selectCurrentGifSearch","canPostInChat","GifSearch","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","StatisticsRecentMessage","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","Statistics","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentStory","StatisticsMessagePublicForward","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","voters","offsets","pollResults","PollAnswerResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","renderViewMoreButton","poll","selectPollFromMessage","PollResults","resultsByOption","buildCollectionByKey","ICON_SIZE","createTopicPanel","CreateTopic","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","noLoopLimit","editTopicPanel","EditTopic","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","ManageBot","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","ManageChannel","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","joinRequests","ManageChatAdministrators","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","ManageChatPrivacyType","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","RemoveGroupUserModal","loadMoreMembers","usersId","availableMemberIds","canDeleteMembers","removedMembers","ManageChatRemovedUsers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","forDiscussionIds","linkedChat","ManageDiscussion","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","ManageGroup","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","hasFullInfo","ManageGroupAdminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","ManageGroupMembers","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","arePaidMessagesAvailable","groupPeersPaidStars","ManageGroupPermissions","updateChatDefaultBannedRights","updatePaidMessagesPrice","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isPriceForMessagesChanged","markPriceForMessagesChanged","unmarkPriceForMessagesChanged","isPriceForMessagesOpen","setIsPriceForMessagesOpen","handleUpdatePaidMessagesPrice","handleUpdatePermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","handleChargeStarsForMessages","arePermissionsChanged","arePermissionsLoading","ManageGroupUserPermissions","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","ManageGroupUserPermissionsCreate","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","ManageInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","importers","requesters","ManageInviteInfo","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","ManageInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","withPrimaryColor","JoinRequest","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","ManageJoinRequests","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","ManageReactions","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","notPersonalPhoto","ManageUser","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","Management","GroupRecentActions","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","Checkout","invoice","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","useMediaTransition","handleTipsClick","tips","handlePaymentMethodClick","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","prices","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","ConfirmPayment","noRedirect","onPaymentFormSubmit","messageKey","form","PasswordConfirm","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","CardInput","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","ExpiryInput","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","Select","hasArrow","SavedPaymentCredentials","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","nativeParams","nativeProvider","providerName","isProviderError","smartGlocalToken","stripeId","passwordValidUntil","validUntil","PaymentModal","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","setStep","nextStep","field","savedInfo","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","shouldFillRequestedData","isEmailRequested","isPhoneRequested","isNameRequested","isShippingAddressRequested","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","isPasswordMissing","isEmailSentToProvider","isPhoneSentToProvider","renderModalContent","descriptionKey","renderError","optionId","receipt","ReceiptModal","prevReceipt","renderingReceipt","fullAddress","credentialsTitle","totalAmount","InviteViaLinkModal","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","OneTimeMediaModal","closeOneTimeMediaModal","handlePlayVoice","isOwn","isOwnMessage","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","WebAppsCloseConfirmationModal","closeWebAppsCloseConfirmationModal","shouldSkipInFuture","setShouldSkipInFuture","shouldSkipConfirmation","handleSelectWithEnter","freezeUntilDate","freezeAppealUrl","botFreezeAppealId","botFreezeAppealUsername","FrozenAccountModal","closeFrozenAccountModal","handleAppeal","BannedDuck","botLink","headerAvatarPeer","avatarPeer","avatarWebPhoto","clickable","webPhoto","badge"],"sourceRoot":""}