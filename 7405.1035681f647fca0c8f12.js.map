{"version":3,"file":"7405.1035681f647fca0c8f12.js","mappings":"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","sources":["webpack://TeleGPT/./src/components/common/PasswordMonkey.tsx","webpack://TeleGPT/./src/util/directInputManager.ts","webpack://TeleGPT/./src/hooks/schedulers/useTimeout.ts","webpack://TeleGPT/./src/components/common/PasswordForm.tsx","webpack://TeleGPT/./src/util/trapFocus.ts","webpack://TeleGPT/./src/components/common/TrackingMonkey.tsx","webpack://TeleGPT/./src/components/auth/AuthCode.tsx","webpack://TeleGPT/./src/components/auth/AuthPassword.tsx","webpack://TeleGPT/./src/components/auth/AuthRegister.tsx","webpack://TeleGPT/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://TeleGPT/./src/util/hoc/freezeWhenClosed.ts"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  code: string;\n  codeLength: number;\n  trackingDirection: number;\n  isTracking: boolean;\n  isBig?: boolean;\n};\n\nconst TRACKING_START_FRAME = 15;\nconst TRACKING_END_FRAME = 180;\n\nconst TrackingMonkey: FC<OwnProps> = ({\n  code,\n  codeLength,\n  trackingDirection,\n  isTracking,\n  isBig,\n}) => {\n  const [isFirstMonkeyLoaded, setIsFirstMonkeyLoaded] = useState(false);\n  const { isMobile } = useAppLayout();\n  const trackningFramesPerSymbol = (TRACKING_END_FRAME - TRACKING_START_FRAME) / codeLength;\n  const stickerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  const handleFirstMonkeyLoad = useCallback(() => setIsFirstMonkeyLoaded(true), []);\n\n  function getTrackingFrames(): [number, number] {\n    const startFrame = (code && code.length > 1) || trackingDirection < 0\n      ? TRACKING_START_FRAME + trackningFramesPerSymbol * (code.length - 1)\n      : 0;\n    const endFrame = code.length === codeLength\n      ? TRACKING_END_FRAME\n      : TRACKING_START_FRAME + trackningFramesPerSymbol * code.length;\n\n    if (trackingDirection < 1) {\n      return [\n        endFrame,\n        startFrame,\n      ];\n    }\n\n    return [\n      startFrame,\n      endFrame,\n    ];\n  }\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={isTracking ? 'hidden' : undefined}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyIdle}\n        play={!isTracking}\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={!isTracking ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyTracking}\n        playSegment={isTracking ? getTrackingFrames() : undefined}\n        speed={2}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(TrackingMonkey);\n","import type { FormEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport { pick } from '../../util/iteratees';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport Icon from '../common/icons/Icon';\nimport TrackingMonkey from '../common/TrackingMonkey';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\n\ntype StateProps = Pick<GlobalState, 'authPhoneNumber' | 'authIsCodeViaApp' | 'authIsLoading' | 'authErrorKey'>;\n\nconst CODE_LENGTH = 5;\n\nconst AuthCode: FC<StateProps> = ({\n  authPhoneNumber,\n  authIsCodeViaApp,\n  authIsLoading,\n  authErrorKey,\n}) => {\n  const {\n    setAuthCode,\n    returnToAuthPhoneNumber,\n    clearAuthErrorKey,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [code, setCode] = useState<string>('');\n  const [isTracking, setIsTracking] = useState(false);\n  const [trackingDirection, setTrackingDirection] = useState(1);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, []);\n\n  useHistoryBack({\n    isActive: true,\n    onBack: returnToAuthPhoneNumber,\n  });\n\n  const onCodeChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n    if (authErrorKey) {\n      clearAuthErrorKey();\n    }\n\n    const { currentTarget: target } = e;\n    target.value = target.value.replace(/[^\\d]+/, '').substr(0, CODE_LENGTH);\n\n    if (target.value === code) {\n      return;\n    }\n\n    setCode(target.value);\n\n    if (!isTracking) {\n      setIsTracking(true);\n    } else if (!target.value.length) {\n      setIsTracking(false);\n    }\n\n    if (code && code.length > target.value.length) {\n      setTrackingDirection(-1);\n    } else {\n      setTrackingDirection(1);\n    }\n\n    if (target.value.length === CODE_LENGTH) {\n      setAuthCode({ code: target.value });\n    }\n  }, [authErrorKey, code, isTracking, setAuthCode]);\n\n  function handleReturnToAuthPhoneNumber() {\n    returnToAuthPhoneNumber();\n  }\n\n  return (\n    <div id=\"auth-code-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <TrackingMonkey\n          code={code}\n          codeLength={CODE_LENGTH}\n          isTracking={isTracking}\n          trackingDirection={trackingDirection}\n        />\n        <h1>\n          {authPhoneNumber}\n          <div\n            className=\"auth-number-edit div-button\"\n            onClick={handleReturnToAuthPhoneNumber}\n            role=\"button\"\n            tabIndex={0}\n            title={lang('WrongNumber')}\n            aria-label={lang('WrongNumber')}\n          >\n            <Icon name=\"edit\" />\n          </div>\n        </h1>\n        <p className=\"note\">\n          {lang(authIsCodeViaApp ? 'SentAppCode' : 'LoginJustSentSms', undefined, {\n            withNodes: true,\n            withMarkdown: true,\n          })}\n        </p>\n        <InputText\n          ref={inputRef}\n          id=\"sign-in-code\"\n          label={lang('Code')}\n          onInput={onCodeChange}\n          value={code}\n          error={authErrorKey && lang.withRegular(authErrorKey)}\n          autoComplete=\"off\"\n          inputMode=\"numeric\"\n        />\n        {authIsLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authPhoneNumber', 'authIsCodeViaApp', 'authIsLoading', 'authErrorKey']),\n)(AuthCode));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\n\nimport useLang from '../../hooks/useLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport MonkeyPassword from '../common/PasswordMonkey';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authErrorKey' | 'authHint'>;\n\nconst AuthPassword: FC<StateProps> = ({\n  authIsLoading, authErrorKey, authHint,\n}) => {\n  const { setAuthPassword, clearAuthErrorKey } = getActions();\n\n  const lang = useLang();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleSubmit = useCallback((password: string) => {\n    setAuthPassword({ password });\n  }, [setAuthPassword]);\n\n  return (\n    <div id=\"auth-password-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <MonkeyPassword isPasswordVisible={showPassword} />\n        <h1>{lang('LoginHeaderPassword')}</h1>\n        <p className=\"note\">{lang('LoginEnterPasswordDescription')}</p>\n        <PasswordForm\n          clearError={clearAuthErrorKey}\n          error={authErrorKey && lang.withRegular(authErrorKey)}\n          hint={authHint}\n          isLoading={authIsLoading}\n          isPasswordVisible={showPassword}\n          onChangePasswordVisibility={handleChangePasswordVisibility}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authErrorKey', 'authHint']),\n)(AuthPassword));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\n\nimport useLang from '../../hooks/useLang';\n\nimport AvatarEditable from '../ui/AvatarEditable';\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authErrorKey'>;\n\nconst AuthRegister: FC<StateProps> = ({\n  authIsLoading, authErrorKey,\n}) => {\n  const { signUp, clearAuthErrorKey, uploadProfilePhoto } = getActions();\n\n  const lang = useLang();\n  const [isButtonShown, setIsButtonShown] = useState(false);\n  const [croppedFile, setCroppedFile] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const handleFirstNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (authErrorKey) {\n      clearAuthErrorKey();\n    }\n\n    const { target } = event;\n\n    setFirstName(target.value);\n    setIsButtonShown(target.value.length > 0);\n  }, [authErrorKey]);\n\n  const handleLastNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    setLastName(target.value);\n  }, []);\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    signUp({ firstName, lastName });\n\n    if (croppedFile) {\n      uploadProfilePhoto({ file: croppedFile });\n    }\n  }\n\n  return (\n    <div id=\"auth-registration-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <form action=\"\" method=\"post\" onSubmit={handleSubmit}>\n          <AvatarEditable onChange={setCroppedFile} />\n          <h2>{lang('YourName')}</h2>\n          <p className=\"note\">{lang('LoginRegisterDesc')}</p>\n          <InputText\n            id=\"registration-first-name\"\n            label={lang('LoginRegisterFirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={authErrorKey && lang.withRegular(authErrorKey)}\n            autoComplete=\"given-name\"\n          />\n          <InputText\n            id=\"registration-last-name\"\n            label={lang('LoginRegisterLastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n            autoComplete=\"family-name\"\n          />\n          {isButtonShown && (\n            <Button size=\"smaller\" type=\"submit\" ripple isLoading={authIsLoading}>{lang('Next')}</Button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authErrorKey']),\n)(AuthRegister));\n","import { useLayoutEffect, useRef } from '../lib/teact/teact';\n\nconst useLayoutEffectWithPrevDeps = <const T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDepsRef = useRef<T>();\n\n  return useLayoutEffect(() => {\n    const prevDeps = prevDepsRef.current;\n    prevDepsRef.current = dependencies;\n\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import { type FC, type Props, useRef } from '../../lib/teact/teact';\n\ntype InjectProps<T extends FC, P extends Props> = FC<Parameters<T>[0] & P>;\n\ntype OwnProps = {\n  ignoreFreeze?: boolean;\n};\n\nexport default function freezeWhenClosed<T extends FC>(Component: T): InjectProps<T, OwnProps> {\n  function ComponentWrapper(props: Props) {\n    const newProps = useRef(props);\n\n    if (props.ignoreFreeze) return Component(props);\n\n    if (props.isOpen) {\n      newProps.current = props;\n    } else {\n      newProps.current = {\n        ...newProps.current,\n        isOpen: false,\n      };\n    }\n\n    return Component(newProps.current);\n  }\n\n  return ComponentWrapper as T;\n}\n"],"names":["SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","memo","PasswordMonkey","isPasswordVisible","isBig","isFirstMonkeyLoaded","markFirstMonkeyLoaded","useFlag","isPeekShown","markPeekShown","isMobile","useAppLayout","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","useTimeout","handleFirstMonkeyLoad","useCallback","React","createElement","id","className","AnimatedSticker","size","STICKER_SIZE_TWO_FA","tgsUrl","LOCAL_TGS_URLS","MonkeyClose","playSegment","noLoop","onLoad","MonkeyPeek","counter","disableDirectTextInput","enableDirectTextInput","getIsDirectTextInputDisabled","callback","delay","savedCallback","useLastCallback","useEffect","setTimeout","clearTimeout","PasswordForm","isLoading","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","useRef","lang","useOldLang","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","IS_TOUCH_ENV","current","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","buildClassName","dir","isRtl","undefined","type","tabIndex","ref","value","onChange","e","target","length","MIN_PASSWORD_LENGTH","maxLength","onClick","role","title","Icon","name","Button","ripple","disabled","trapFocus","element","handleKeyDown","key","stopPropagation","focusableElements","Array","from","querySelectorAll","currentFocusedIndex","findIndex","em","isSameNode","document","activeElement","newFocusedIndex","shiftKey","addEventListener","removeEventListener","TrackingMonkey","code","codeLength","trackingDirection","isTracking","setIsFirstMonkeyLoaded","trackningFramesPerSymbol","stickerSize","MonkeyIdle","play","MonkeyTracking","startFrame","endFrame","getTrackingFrames","speed","withGlobal","global","pick","AuthCode","authPhoneNumber","authIsCodeViaApp","authIsLoading","authErrorKey","setAuthCode","returnToAuthPhoneNumber","clearAuthErrorKey","getActions","useLang","setCode","setIsTracking","setTrackingDirection","useHistoryBack","isActive","onBack","onCodeChange","currentTarget","replace","substr","withNodes","withMarkdown","InputText","label","onInput","withRegular","inputMode","Loading","AuthPassword","authHint","setAuthPassword","showPassword","setShowPassword","handleChangePasswordVisibility","isVisible","handleSubmit","MonkeyPassword","AuthRegister","signUp","uploadProfilePhoto","isButtonShown","setIsButtonShown","croppedFile","setCroppedFile","firstName","setFirstName","lastName","setLastName","handleFirstNameChange","handleLastNameChange","method","file","AvatarEditable","useLayoutEffectWithPrevDeps","cb","dependencies","debugKey","prevDepsRef","useLayoutEffect","prevDeps","freezeWhenClosed","Component","props","newProps","ignoreFreeze","isOpen"],"sourceRoot":""}