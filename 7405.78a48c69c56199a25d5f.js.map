{"version":3,"file":"7405.78a48c69c56199a25d5f.js","mappings":"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","sources":["webpack://TeleGPT/./src/hooks/useImageLoader.ts","webpack://TeleGPT/./src/components/common/PasswordMonkey.tsx","webpack://TeleGPT/./src/util/directInputManager.ts","webpack://TeleGPT/./src/hooks/schedulers/useTimeout.ts","webpack://TeleGPT/./src/components/common/PasswordForm.tsx","webpack://TeleGPT/./src/util/events/getPointerPosition.ts","webpack://TeleGPT/./src/util/trapFocus.ts","webpack://TeleGPT/./src/components/auth/AuthPassword.tsx","webpack://TeleGPT/./src/components/auth/AuthRegister.tsx","webpack://TeleGPT/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://TeleGPT/./src/components/auth/AuthCode.tsx","webpack://TeleGPT/./src/global/helpers/payments.ts","webpack://TeleGPT/./src/util/hoc/freezeWhenClosed.ts","webpack://TeleGPT/./src/components/common/TrackingMonkey.tsx"],"sourcesContent":["import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { preloadImage } from '../util/files';\nimport useAsync from './useAsync';\n\nexport type UseImageLoaderResult = {\n  image?: HTMLImageElement;\n};\n\nexport default function useImageLoader(file?: Blob): UseImageLoaderResult {\n  const urlRef = useRef<string | undefined>();\n\n  const { result: image } = useAsync(() => {\n    if (!file) {\n      return Promise.resolve(undefined);\n    }\n\n    if (urlRef.current) {\n      URL.revokeObjectURL(urlRef.current);\n    }\n\n    const url = URL.createObjectURL(file);\n    urlRef.current = url;\n\n    return preloadImage(url);\n  }, [file]);\n\n  useEffect(() => {\n    return () => {\n      if (urlRef.current) {\n        URL.revokeObjectURL(urlRef.current);\n        urlRef.current = undefined;\n      }\n    };\n  }, []);\n\n  return { image };\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import React from '@teact';\nimport type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  const inputRef = useRef<HTMLInputElement>();\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getPointerPosition(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  if ('touches' in e) {\n    return {\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n    };\n  }\n\n  return {\n    x: e.clientX,\n    y: e.clientY,\n  };\n}\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll<HTMLElement>('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    );\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\n\nimport useLang from '../../hooks/useLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport MonkeyPassword from '../common/PasswordMonkey';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authErrorKey' | 'authHint'>;\n\nconst AuthPassword: FC<StateProps> = ({\n  authIsLoading, authErrorKey, authHint,\n}) => {\n  const { setAuthPassword, clearAuthErrorKey } = getActions();\n\n  const lang = useLang();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleSubmit = useCallback((password: string) => {\n    setAuthPassword({ password });\n  }, [setAuthPassword]);\n\n  return (\n    <div id=\"auth-password-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <MonkeyPassword isPasswordVisible={showPassword} />\n        <h1>{lang('LoginHeaderPassword')}</h1>\n        <p className=\"note\">{lang('LoginEnterPasswordDescription')}</p>\n        <PasswordForm\n          clearError={clearAuthErrorKey}\n          error={authErrorKey && lang.withRegular(authErrorKey)}\n          hint={authHint}\n          isLoading={authIsLoading}\n          isPasswordVisible={showPassword}\n          onChangePasswordVisibility={handleChangePasswordVisibility}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authErrorKey', 'authHint']),\n)(AuthPassword));\n","import React from '@teact';\nimport type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\n\nimport useLang from '../../hooks/useLang';\n\nimport AvatarEditable from '../ui/AvatarEditable';\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authErrorKey'>;\n\nconst AuthRegister: FC<StateProps> = ({\n  authIsLoading, authErrorKey,\n}) => {\n  const { signUp, clearAuthErrorKey, uploadProfilePhoto } = getActions();\n\n  const lang = useLang();\n  const [isButtonShown, setIsButtonShown] = useState(false);\n  const [croppedFile, setCroppedFile] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const handleFirstNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (authErrorKey) {\n      clearAuthErrorKey();\n    }\n\n    const { target } = event;\n\n    setFirstName(target.value);\n    setIsButtonShown(target.value.length > 0);\n  }, [authErrorKey]);\n\n  const handleLastNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    setLastName(target.value);\n  }, []);\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    signUp({ firstName, lastName });\n\n    if (croppedFile) {\n      uploadProfilePhoto({ file: croppedFile });\n    }\n  }\n\n  return (\n    <div id=\"auth-registration-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <form action=\"\" method=\"post\" onSubmit={handleSubmit}>\n          <AvatarEditable onChange={setCroppedFile} />\n          <h2>{lang('YourName')}</h2>\n          <p className=\"note\">{lang('LoginRegisterDesc')}</p>\n          <InputText\n            id=\"registration-first-name\"\n            label={lang('LoginRegisterFirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={authErrorKey && lang.withRegular(authErrorKey)}\n            autoComplete=\"given-name\"\n          />\n          <InputText\n            id=\"registration-last-name\"\n            label={lang('LoginRegisterLastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n            autoComplete=\"family-name\"\n          />\n          {isButtonShown && (\n            <Button size=\"smaller\" type=\"submit\" ripple isLoading={authIsLoading}>{lang('Next')}</Button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authErrorKey']),\n)(AuthRegister));\n","import { useLayoutEffect, useRef } from '../lib/teact/teact';\n\nconst useLayoutEffectWithPrevDeps = <const T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDepsRef = useRef<T>();\n\n  return useLayoutEffect(() => {\n    const prevDeps = prevDepsRef.current;\n    prevDepsRef.current = dependencies;\n\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import type { FormEvent } from 'react';\nimport React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport { pick } from '../../util/iteratees';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport Icon from '../common/icons/Icon';\nimport TrackingMonkey from '../common/TrackingMonkey';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\n\ntype StateProps = Pick<GlobalState, 'authPhoneNumber' | 'authIsCodeViaApp' | 'authIsLoading' | 'authErrorKey'>;\n\nconst CODE_LENGTH = 5;\n\nconst AuthCode: FC<StateProps> = ({\n  authPhoneNumber,\n  authIsCodeViaApp,\n  authIsLoading,\n  authErrorKey,\n}) => {\n  const {\n    setAuthCode,\n    returnToAuthPhoneNumber,\n    clearAuthErrorKey,\n  } = getActions();\n\n  const lang = useLang();\n  const inputRef = useRef<HTMLInputElement>();\n\n  const [code, setCode] = useState<string>('');\n  const [isTracking, setIsTracking] = useState(false);\n  const [trackingDirection, setTrackingDirection] = useState(1);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, []);\n\n  useHistoryBack({\n    isActive: true,\n    onBack: returnToAuthPhoneNumber,\n  });\n\n  const onCodeChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n    if (authErrorKey) {\n      clearAuthErrorKey();\n    }\n\n    const { currentTarget: target } = e;\n    target.value = target.value.replace(/[^\\d]+/, '').substr(0, CODE_LENGTH);\n\n    if (target.value === code) {\n      return;\n    }\n\n    setCode(target.value);\n\n    if (!isTracking) {\n      setIsTracking(true);\n    } else if (!target.value.length) {\n      setIsTracking(false);\n    }\n\n    if (code && code.length > target.value.length) {\n      setTrackingDirection(-1);\n    } else {\n      setTrackingDirection(1);\n    }\n\n    if (target.value.length === CODE_LENGTH) {\n      setAuthCode({ code: target.value });\n    }\n  }, [authErrorKey, code, isTracking, setAuthCode]);\n\n  function handleReturnToAuthPhoneNumber() {\n    returnToAuthPhoneNumber();\n  }\n\n  return (\n    <div id=\"auth-code-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <TrackingMonkey\n          code={code}\n          codeLength={CODE_LENGTH}\n          isTracking={isTracking}\n          trackingDirection={trackingDirection}\n        />\n        <h1>\n          {authPhoneNumber}\n          <div\n            className=\"auth-number-edit div-button\"\n            onClick={handleReturnToAuthPhoneNumber}\n            role=\"button\"\n            tabIndex={0}\n            title={lang('WrongNumber')}\n            aria-label={lang('WrongNumber')}\n          >\n            <Icon name=\"edit\" />\n          </div>\n        </h1>\n        <p className=\"note\">\n          {lang(authIsCodeViaApp ? 'SentAppCode' : 'LoginJustSentSms', undefined, {\n            withNodes: true,\n            withMarkdown: true,\n          })}\n        </p>\n        <InputText\n          ref={inputRef}\n          id=\"sign-in-code\"\n          label={lang('Code')}\n          onInput={onCodeChange}\n          value={code}\n          error={authErrorKey && lang.withRegular(authErrorKey)}\n          autoComplete=\"off\"\n          inputMode=\"numeric\"\n        />\n        {authIsLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authPhoneNumber', 'authIsCodeViaApp', 'authIsLoading', 'authErrorKey']),\n)(AuthCode));\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiTypeCurrencyAmount,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport { STARS_CURRENCY_CODE, TON_CURRENCY_CODE } from '../../config';\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { convertTonFromNanos } from '../../util/formatCurrency';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargiftResale') {\n    const {\n      slug,\n      peerId,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargiftResale',\n      slug,\n      peer,\n      currency: inputInvoice.currency,\n    };\n  }\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'premiumGiftStars') {\n    const {\n      months, userId, message,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'premiumGiftStars',\n      months,\n      message,\n      user,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function shouldUseCustomPeer(transaction: ApiStarsTransaction) {\n  return transaction.peer.type !== 'peer' || Boolean(transaction.isPostsSearch);\n}\n\nexport function buildStarsTransactionCustomPeer(\n  transaction: ApiStarsTransaction,\n): CustomPeer {\n  const { peer } = transaction;\n  const isForTon = transaction.amount.currency === TON_CURRENCY_CODE;\n\n  if (transaction.isPostsSearch) {\n    return {\n      avatarIcon: 'search',\n      isCustomPeer: true,\n      title: '',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    if (isForTon) {\n      return {\n        avatarIcon: 'fragment',\n        isCustomPeer: true,\n        titleKey: 'Stars.Gift.Received.Title',\n        subtitleKey: 'Stars.Intro.Transaction.Gift.UnknownUser',\n        customPeerAvatarColor: '#000000',\n      };\n    }\n    return {\n      avatarIcon: 'fragment',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, currencyAmount: ApiTypeCurrencyAmount) {\n  if (currencyAmount.currency === STARS_CURRENCY_CODE) {\n    const amount = currencyAmount.amount + currencyAmount.nanos / 1e9;\n    if (amount < 0) {\n      return `- ${lang.number(Math.abs(amount))}`;\n    }\n\n    return `+ ${lang.number(amount)}`;\n  }\n\n  if (currencyAmount.currency === TON_CURRENCY_CODE) {\n    const amount = convertTonFromNanos(currencyAmount.amount);\n    const absAmount = Math.abs(amount);\n\n    if (amount < 0) {\n      return `- ${lang.preciseNumber(absAmount)}`;\n    }\n\n    return `+ ${lang.preciseNumber(absAmount)}`;\n  }\n\n  return undefined;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type === 'giftStars') {\n    const { transactionId, stars } = action;\n\n    return {\n      id: transactionId,\n      amount: {\n        currency: STARS_CURRENCY_CODE,\n        amount: stars,\n        nanos: 0,\n      },\n      peer: {\n        type: 'peer',\n        id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n      },\n      date: message.date,\n      isGift: true,\n      isMyGift: message.isOutgoing || undefined,\n    };\n  }\n\n  if (action?.type === 'giftTon') {\n    const { transactionId, cryptoAmount } = action;\n\n    return {\n      id: transactionId,\n      amount: {\n        currency: TON_CURRENCY_CODE,\n        amount: cryptoAmount,\n      },\n      peer: {\n        type: 'fragment',\n      },\n      date: message.date,\n      isGift: true,\n      isMyGift: message.isOutgoing || undefined,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, boostPeerId } = action;\n\n  return {\n    id: transactionId,\n    amount: {\n      currency: STARS_CURRENCY_CODE,\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: boostPeerId,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","import { type FC, type Props, useRef } from '../../lib/teact/teact';\n\ntype InjectProps<T extends FC, P extends Props> = FC<Parameters<T>[0] & P>;\n\ntype OwnProps = {\n  ignoreFreeze?: boolean;\n};\n\nexport default function freezeWhenClosed<T extends FC>(Component: T): InjectProps<T, OwnProps> {\n  function ComponentWrapper(props: Props) {\n    const newProps = useRef(props);\n\n    if (props.ignoreFreeze) return Component(props);\n\n    if (props.isOpen) {\n      newProps.current = props;\n    } else {\n      newProps.current = {\n        ...newProps.current,\n        isOpen: false,\n      };\n    }\n\n    return Component(newProps.current);\n  }\n\n  return ComponentWrapper as T;\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  code: string;\n  codeLength: number;\n  trackingDirection: number;\n  isTracking: boolean;\n  isBig?: boolean;\n};\n\nconst TRACKING_START_FRAME = 15;\nconst TRACKING_END_FRAME = 180;\n\nconst TrackingMonkey: FC<OwnProps> = ({\n  code,\n  codeLength,\n  trackingDirection,\n  isTracking,\n  isBig,\n}) => {\n  const [isFirstMonkeyLoaded, setIsFirstMonkeyLoaded] = useState(false);\n  const { isMobile } = useAppLayout();\n  const trackningFramesPerSymbol = (TRACKING_END_FRAME - TRACKING_START_FRAME) / codeLength;\n  const stickerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  const handleFirstMonkeyLoad = useCallback(() => setIsFirstMonkeyLoaded(true), []);\n\n  function getTrackingFrames(): [number, number] {\n    const startFrame = (code && code.length > 1) || trackingDirection < 0\n      ? TRACKING_START_FRAME + trackningFramesPerSymbol * (code.length - 1)\n      : 0;\n    const endFrame = code.length === codeLength\n      ? TRACKING_END_FRAME\n      : TRACKING_START_FRAME + trackningFramesPerSymbol * code.length;\n\n    if (trackingDirection < 1) {\n      return [\n        endFrame,\n        startFrame,\n      ];\n    }\n\n    return [\n      startFrame,\n      endFrame,\n    ];\n  }\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={isTracking ? 'hidden' : undefined}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyIdle}\n        play={!isTracking}\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={!isTracking ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyTracking}\n        playSegment={isTracking ? getTrackingFrames() : undefined}\n        speed={2}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(TrackingMonkey);\n"],"names":["useImageLoader","file","urlRef","useRef","result","image","useAsync","Promise","resolve","undefined","current","URL","revokeObjectURL","url","createObjectURL","preloadImage","useEffect","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","memo","PasswordMonkey","isPasswordVisible","isBig","isFirstMonkeyLoaded","markFirstMonkeyLoaded","useFlag","isPeekShown","markPeekShown","isMobile","useAppLayout","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","useTimeout","handleFirstMonkeyLoad","useCallback","React","id","className","AnimatedSticker","size","STICKER_SIZE_TWO_FA","tgsUrl","LOCAL_TGS_URLS","MonkeyClose","playSegment","noLoop","onLoad","MonkeyPeek","counter","disableDirectTextInput","enableDirectTextInput","getIsDirectTextInputDisabled","callback","delay","savedCallback","useLastCallback","setTimeout","clearTimeout","PasswordForm","isLoading","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","lang","useOldLang","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","buildClassName","dir","isRtl","type","tabIndex","ref","value","onChange","e","target","length","MIN_PASSWORD_LENGTH","maxLength","onClick","role","title","Icon","name","Button","ripple","disabled","getPointerPosition","x","touches","clientX","y","clientY","trapFocus","element","handleKeyDown","key","stopPropagation","focusableElements","Array","from","querySelectorAll","currentFocusedIndex","findIndex","em","isSameNode","document","activeElement","newFocusedIndex","shiftKey","addEventListener","removeEventListener","AuthPassword","authIsLoading","authErrorKey","authHint","setAuthPassword","clearAuthErrorKey","getActions","useLang","showPassword","setShowPassword","handleChangePasswordVisibility","isVisible","handleSubmit","MonkeyPassword","withRegular","withGlobal","global","pick","AuthRegister","signUp","uploadProfilePhoto","isButtonShown","setIsButtonShown","croppedFile","setCroppedFile","firstName","setFirstName","lastName","setLastName","handleFirstNameChange","handleLastNameChange","method","AvatarEditable","InputText","label","useLayoutEffectWithPrevDeps","cb","dependencies","debugKey","prevDepsRef","useLayoutEffect","prevDeps","CODE_LENGTH","AuthCode","authPhoneNumber","authIsCodeViaApp","setAuthCode","returnToAuthPhoneNumber","code","setCode","isTracking","setIsTracking","trackingDirection","setTrackingDirection","useHistoryBack","isActive","onBack","onCodeChange","currentTarget","replace","substr","TrackingMonkey","codeLength","withNodes","withMarkdown","onInput","inputMode","Loading","getRequestInputInvoice","inputInvoice","slug","peerId","peer","selectPeer","currency","shouldHideName","giftId","message","shouldUpgrade","userId","stars","amount","user","selectUser","purpose","hash","chat","selectChat","chatId","messageId","months","userIds","boostChannelId","option","users","map","filter","Boolean","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","savedId","shouldUseCustomPeer","transaction","isPostsSearch","buildStarsTransactionCustomPeer","isForTon","TON_CURRENCY_CODE","avatarIcon","isCustomPeer","peerColorId","titleKey","subtitleKey","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","currencyAmount","STARS_CURRENCY_CODE","nanos","number","Math","abs","convertTonFromNanos","absAmount","preciseNumber","formatStarsAmount","starsAmount","getStarsTransactionFromGift","content","transactionId","isOutgoing","senderId","date","isGift","isMyGift","cryptoAmount","getPrizeStarsTransactionFromGiveaway","boostPeerId","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","freezeWhenClosed","Component","props","newProps","ignoreFreeze","isOpen","setIsFirstMonkeyLoaded","trackningFramesPerSymbol","stickerSize","MonkeyIdle","play","MonkeyTracking","startFrame","endFrame","getTrackingFrames","speed"],"sourceRoot":""}