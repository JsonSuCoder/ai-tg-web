{"version":3,"file":"9451.17c5bf450791d4a6c87a.js","mappings":"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","sources":["webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportAvatarModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.module.scss?b350","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.tsx","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.module.scss?8058","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.module.scss?77cd","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.module.scss?b66d","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.module.scss?4803","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.module.scss?843e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.module.scss?3c2e","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.tsx","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.module.scss?94bc","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.tsx","webpack://telegram-t/./src/components/modals/sharePreparedMessage/SharePreparedMessageModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/chatAssistant/ai-search/AISearchInput.tsx","webpack://telegram-t/./src/components/chatAssistant/ai-search/AISearchSugesstions.tsx","webpack://telegram-t/./src/components/chatAssistant/ai-search/AISearch.tsx","webpack://telegram-t/./src/components/left/search/AISearchWrapper.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultSponsored.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/common/paidMessage/PaidMessageSlider.tsx","webpack://telegram-t/./src/components/common/paidMessage/PaidMessagePrice.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsAcceptedGift.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledgeEditor.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AddKnowledgeModal.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledgeContent.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledgeHeader.tsx","webpack://telegram-t/./src/components/left/aiKnowledge/AIKnowledge.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AutoTranslateLanguage.module.scss?c18f","webpack://telegram-t/./src/components/left/aiTranslate/AutoTranslateLanguage.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AITranslateContent.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AITranslateHeader.tsx","webpack://telegram-t/./src/components/left/aiTranslate/AITranslate.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/visibility/isFullyVisible.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.tsx","webpack://telegram-t/./src/components/modals/frozenAccount/FrozenAccountModal.tsx","webpack://telegram-t/./src/components/modals/frozenAccount/FrozenAccountModal.module.scss?86e3","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.type === 'chatEditPhoto' || action?.type === 'suggestProfilePhoto') {\n    return {\n      media: action.photo!,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo, document: webPageDocument } = webPage;\n    const isDocumentMedia = webPageDocument && (isDocumentPhoto(webPageDocument) || isDocumentVideo(webPageDocument));\n    const mediaDocument = isDocumentMedia ? webPageDocument : undefined;\n    const media = webPageVideo || mediaDocument || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport stopEvent from '../../../util/stopEvent';\nimport getOffsetToContainer from '../../../util/visibility/getOffsetToContainer';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [\n      MediaViewerOrigin.Inline,\n      MediaViewerOrigin.ScheduledInline,\n      MediaViewerOrigin.Album,\n      MediaViewerOrigin.ScheduledAlbum,\n    ].includes(origin)\n    && !isMessageImageFullyVisible(toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n\n  const { top } = getOffsetToContainer(imageEl, messageListElement);\n\n  return top > messageListElement.scrollTop\n    && top + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ChannelAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n    case MediaViewerOrigin.ChannelAvatar:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { IS_IOS, IS_PWA } from '../util/browser/windowEnvironment';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  peerId?: string;\n  photo?: ApiPhoto;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportAvatarModal: FC<OwnProps> = ({\n  isOpen,\n  peerId,\n  photo,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { reportProfilePhoto } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    reportProfilePhoto({\n      chatId: peerId, photo, reason: selectedReason, description,\n    });\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (!peerId || !photo) {\n    return undefined;\n  }\n\n  const title = lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAvatarModal);\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ActiveDownloads, MediaViewerOrigin, MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow, selectCurrentChat,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  chat?: ApiChat;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  chat,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <Icon name=\"download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <Icon name=\"download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message' && chat) {\n      openDeleteMessageModal({\n        chatId: chat?.id,\n        messageIds: [item.message.id],\n        isSchedule: messageListType === 'scheduled',\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon as IconName}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <Icon name=\"zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <Icon name=\"zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <Icon name=\"flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <Icon name=\"copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const chat = selectCurrentChat(global);\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      chat,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport { IS_ANDROID, IS_IOS } from '../../util/browser/windowEnvironment';\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { IconName } from '../../types/icons';\n\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon: IconName = useMemo(() => {\n    if (volume === 0 || isMuted) return 'muted';\n    if (volume < 0.3) return 'volume-1';\n    if (volume < 0.6) return 'volume-2';\n    return 'volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <Icon name={isPlaying ? 'pause' : 'play'} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <Icon name={volumeIcon} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <Icon name=\"pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/browser/windowEnvironment';\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  timestamp?: number;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  timestamp,\n  handleSponsoredClick,\n  onClose,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  useEffect(() => {\n    if (!timestamp) return;\n    videoRef.current!.currentTime = timestamp;\n    setCurrentTime(timestamp);\n  }, [setCurrentTime, timestamp]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <Icon name=\"play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION } from '../../config';\nimport {\n  selectIsMessageProtected, selectMessageTimestampableDuration, selectTabState,\n} from '../../global/selectors';\nimport { ARE_WEBCODECS_SUPPORTED } from '../../util/browser/globalEnvironment';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalEffect } from '../../hooks/useSignalEffect';\nimport useThrottledCallback from '../../hooks/useThrottledCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  threadId?: ThreadId;\n  timestamp?: number;\n  maxTimestamp?: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\nconst PLAYBACK_SAVE_INTERVAL = 1000;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  threadId,\n  timestamp,\n  maxTimestamp,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const { updateLastPlaybackTimestamp } = getActions();\n\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n  const [getCurrentTime] = useCurrentTimeSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const updatePlaybackTimestamp = useThrottledCallback(() => {\n    if (!isActive || !textMessage || media?.mediaType !== 'video') return;\n    if (media.duration < MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION) return;\n\n    const message = 'id' in textMessage ? textMessage : undefined;\n    const currentTime = getCurrentTime();\n    if (!currentTime || !message || message.isInAlbum) return;\n\n    // Reset timestamp if we are close to the end of the video\n    const newTimestamp = media.duration - currentTime > PLAYBACK_SAVE_INTERVAL / 1000 ? currentTime : undefined;\n    updateLastPlaybackTimestamp({ chatId: message.chatId, messageId: message.id, timestamp: newTimestamp });\n  }, [getCurrentTime, isActive, media, textMessage], PLAYBACK_SAVE_INTERVAL);\n\n  useSignalEffect(updatePlaybackTimestamp, [getCurrentTime]);\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({\n      message: textMessage, maxTimestamp, threadId, forcePlayback: true, isForMediaViewer: true,\n    }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n          timestamp={timestamp}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n      timestamp,\n      threadId,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    const maxTimestamp = message && selectMessageTimestampableDuration(global, message, true);\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n      threadId,\n      timestamp,\n      maxTimestamp,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getPeerTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Icon from '../common/icons/Icon';\nimport ReportAvatarModal from '../common/ReportAvatarModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsored,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target instanceof HTMLElement && e.target.closest('a')) return; // Prevent closing on timestamp click\n\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsored({ isMedia: isFromMedia, isFullscreen: true, randomId: sponsoredMessage.randomId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportAvatarModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport stopEvent from '../../../util/stopEvent';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <Icon name=\"eye-crossed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-past\" className={styles.icon} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-future\" className={styles.icon} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...selectedIds || [], ...contactIds], query: searchQuery, type: 'user' }));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...closeFriendIds, ...contactIds], query: searchQuery, type: 'user' }));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPrivacySettings, ApiStory, ApiUser, PrivacyVisibility,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getHours } from '../../util/dates/units';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getPeerTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? getHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <Icon name={option.icon} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <Icon name=\"next\" />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  isUserId,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { isChatChannel, isUserId } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectChat,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativePastTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  arePeerSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n  paidMessagesStars?: number;\n  isAccountFrozen?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  arePeerSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n  paidMessagesStars,\n  isAccountFrozen,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadPeerSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory && !isAccountFrozen;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !arePeerSettingsLoaded) {\n      loadPeerSettings({ peerId });\n    }\n  }, [arePeerSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getPeerTitle(oldLang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = oldLang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = oldLang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = oldLang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: oldLang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: oldLang('StealthModeOn'),\n        message: oldLang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: oldLang('StoryNotFound'),\n    });\n  }, [oldLang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={oldLang('AccDescrOpenMenu2')}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      );\n    };\n  }, [isMobile, oldLang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon: IconName = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <Icon name={privacyIcon} />\n        {isOut && <Icon name=\"next\" />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getPeerTitle(oldLang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getPeerTitle(oldLang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativePastTime(oldLang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{oldLang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={oldLang('Volume')}\n            >\n              <Icon name={(isMuted || noSound) ? 'speaker-muted-story' : 'speaker-story'} />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{oldLang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {oldLang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {oldLang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {oldLang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-crossed-outline\" onClick={handleOpenStealthModal}>\n                {oldLang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{oldLang('lng_report_story')}</MenuItem>}\n            {isOut && (\n              <MenuItem\n                icon=\"delete\"\n                destructive\n                onClick={handleDeleteStoryClick}\n              >{oldLang('Delete')}\n              </MenuItem>\n            )}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={oldLang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const inputPlaceholder = paidMessagesStars\n    ? lang('ComposerPlaceholderPaidReply', {\n      amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n    }, {\n      withNodes: true,\n    })\n    : oldLang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately');\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={oldLang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={oldLang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getPeerTitle(oldLang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={oldLang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={inputPlaceholder}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const userFullInfo = selectUserFullInfo(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n    reportModal,\n    giftInfoModal,\n    isPaymentMessageConfirmDialogOpen,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    isPaymentMessageConfirmDialogOpen\n    || viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || reportModal || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal || giftInfoModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n  const paidMessagesStars = selectPeerPaidMessagesStars(global, peerId);\n  const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    arePeerSettingsLoaded: Boolean(userFullInfo?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n    paidMessagesStars,\n    isAccountFrozen,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getStoryMediaHash } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <Icon name={areReactionsFirst ? 'heart-outline' : 'recent'} className={styles.iconSort} />\n        <Icon name=\"down\" className={styles.iconDown} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor, reportStory } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useLastCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  });\n\n  const handleCloseDeleteModal = useLastCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  });\n\n  const openMessageReport = useLastCallback(() => {\n    if (!storyId) return;\n    reportStory({ storyId, peerId });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openMessageReport}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterPeersByQuery } from '../../global/helpers/peers';\nimport {\n  filterChatIdsByType, selectChat, selectChatFullInfo, selectUser,\n} from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n\n    const peerIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = selectChat(global, id);\n      const user = selectUser(global, id);\n      if (user && !isDeletedUser(user)) return true;\n\n      const chatFullInfo = selectChatFullInfo(global, id);\n\n      return chat && (!chatFullInfo || getCanPostInChat(chat, undefined, undefined, chatFullInfo));\n    });\n\n    const sorted = sortChatIds(\n      filterPeersByQuery({\n        ids: unique([\n          ...(currentUserId ? [currentUserId] : []),\n          ...peerIds,\n          ...(contactIds || []),\n        ]),\n        query: search,\n      }),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: contactRequest,\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification key={notification.localId} notification={notification} />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/browser/url';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (!url) {\n      return;\n    }\n\n    window.open(ensureProtocol(url), '_blank', 'noopener noreferrer');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlText', { url: renderingUrl }, { withNodes: true, withMarkdown: true }))}\n      confirmLabel={lang('OpenUrlConfirm')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { IS_IOS, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport { prepareMapUrl } from '../../../util/map';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else if (currentAuth?.url) {\n      window.open(ensureProtocol(currentAuth.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <Icon name=\"previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <Icon name=\"next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: OldLangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text NewContactModal__help-text__negative\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useSignal, useState,\n} from '../lib/teact/teact';\n\nimport type { Point, Size } from '../types';\n\nimport { RESIZE_HANDLE_SELECTOR } from '../config';\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport enum ResizeHandleType {\n  Top,\n  Bottom,\n  Left,\n  Right,\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n}\n\ntype ResizeHandleSelectorType = 'top' | 'bottom' | 'left'\n| 'right' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nconst resizeHandleSelectorsMap: Record<ResizeHandleSelectorType, ResizeHandleType> = {\n  top: ResizeHandleType.Top,\n  bottom: ResizeHandleType.Bottom,\n  left: ResizeHandleType.Left,\n  right: ResizeHandleType.Right,\n  topLeft: ResizeHandleType.TopLeft,\n  topRight: ResizeHandleType.TopRight,\n  bottomLeft: ResizeHandleType.BottomLeft,\n  bottomRight: ResizeHandleType.BottomRight,\n};\n\nconst resizeHandleSelectors = Object.keys(resizeHandleSelectorsMap) as ResizeHandleSelectorType[];\n\nlet resizeTimeout: number | undefined;\nconst FULLSCREEN_POSITION = { x: 0, y: 0 };\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isDragEnabled: boolean = true,\n  originalSize: Size,\n  isFullscreen: boolean = false,\n  minimumSize: Size = { width: 0, height: 0 },\n  cachedPosition?: Point,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(cachedPosition);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartTransform, setElementPositionOnStartTransform] = useSignal({ x: 0, y: 0 });\n  const [getElementSizeOnStartTransform, setElementSizeOnStartTransform] = useSignal({ width: 0, height: 0 });\n  const [getTransformStartPoint, setTransformStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartTransform = getElementPositionOnStartTransform();\n  const transformStartPoint = getTransformStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isResizing, startResizing, stopResizing] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  const [hitResizeHandle, setHitResizeHandle] = useState<ResizeHandleType | undefined>(undefined);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const updateCurrentPosition = useLastCallback((position: Point) => {\n    if (!isFullscreen) setElementCurrentPosition({ x: position.x, y: position.y });\n  });\n\n  const getActualPosition = useLastCallback(() => {\n    return isFullscreen ? FULLSCREEN_POSITION : elementCurrentPosition;\n  });\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      updateCurrentPosition(centeredPosition);\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  function getResizeHandleFromTarget(targetElement: HTMLElement) {\n    const closest = (selector: string) => targetElement.closest(selector);\n\n    if (!closest(RESIZE_HANDLE_SELECTOR)) return undefined;\n    for (const selector of resizeHandleSelectors) {\n      if (closest(`.${selector}`)) { return resizeHandleSelectorsMap[selector]; }\n    }\n    return undefined;\n  }\n\n  const handleStartResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (!element || !targetElement) {\n      return;\n    }\n    const resizeHandle = getResizeHandleFromTarget(targetElement);\n\n    if (resizeHandle === undefined) return;\n    setHitResizeHandle(resizeHandle);\n\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const {\n      left, right, top, bottom,\n    } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setElementSizeOnStartTransform({ width: right - left, height: bottom - top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startResizing();\n  });\n\n  const handleDragRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  const handleResizeRelease = useLastCallback(() => {\n    stopResizing();\n  });\n\n  useEffect(() => {\n    if (!isDragEnabled) {\n      stopDragging();\n    }\n  }, [isDragEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    if (isFullscreen) return;\n    const position = !wasElementShown && !cachedPosition ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    updateCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    const originalWidth = originalSize.width;\n    const originalHeight = originalSize.height;\n    newSize.width = Math.min(visibleArea.width, Math.max(originalWidth, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalHeight, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize, isResizing]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize || isResizing) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize, isResizing]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - transformStartPoint.x;\n    const offsetY = pageY - transformStartPoint.y;\n\n    const newX = elementPositionOnStartTransform.x + offsetX;\n    const newY = elementPositionOnStartTransform.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  const handleResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isResizing || !element || hitResizeHandle === undefined) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n    const sizeOnStartTransform = getElementSizeOnStartTransform();\n\n    const pageVisibleX = Math.min(Math.max(0, pageX), getVisibleArea().width);\n    const pageVisibleY = Math.min(Math.max(0, pageY), getVisibleArea().height);\n\n    const offsetX = pageVisibleX - transformStartPoint.x;\n    const offsetY = pageVisibleY - transformStartPoint.y;\n\n    const maxX = elementPositionOnStartTransform.x + sizeOnStartTransform.width - minimumSize.width;\n    const maxY = elementPositionOnStartTransform.y + sizeOnStartTransform.height - minimumSize.height;\n\n    const originalBounds = {\n      x: elementPositionOnStartTransform.x,\n      y: elementPositionOnStartTransform.y,\n      width: sizeOnStartTransform.width,\n      height: sizeOnStartTransform.height,\n    };\n\n    const newBounds = { ...originalBounds };\n\n    if (hitResizeHandle === ResizeHandleType.Left\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width - offsetX, minimumSize.width);\n      newBounds.x = Math.min(newBounds.x + offsetX, maxX);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Right\n    || hitResizeHandle === ResizeHandleType.TopRight\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width + offsetX, minimumSize.width);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Top\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.TopRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height - offsetY, minimumSize.height);\n      newBounds.y = Math.min(newBounds.y + offsetY, maxY);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Bottom\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height + offsetY, minimumSize.height);\n    }\n\n    setElementCurrentSize({ width: newBounds.width, height: newBounds.height });\n    setElementCurrentPosition({ x: newBounds.x, y: newBounds.y });\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isDragEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleDragRelease,\n        onClick: handleDragRelease,\n        onDoubleClick: handleDragRelease,\n      });\n    }\n    return cleanup;\n  }, [isDragEnabled, dragHandleElement]);\n\n  useEffect(() => {\n    const cleanups: NoneToVoidFunction[] = [];\n    if (element && isDragEnabled) {\n      for (const selector of resizeHandleSelectors) {\n        const resizeHandler = element.querySelector(`.resizeHandle.${selector}`) as HTMLElement;\n\n        if (resizeHandler) {\n          const cleanup = captureEvents(resizeHandler, {\n            onCapture: handleStartResize,\n            onDrag: handleResize,\n            onRelease: handleResizeRelease,\n            onClick: handleResizeRelease,\n            onDoubleClick: handleResizeRelease,\n          });\n\n          if (cleanup) {\n            cleanups.push(cleanup);\n          }\n        }\n      }\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => cleanup());\n    };\n  }, [isDragEnabled, element]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  const actualPosition = getActualPosition();\n\n  if (!isInitiated || !elementCurrentSize || !actualPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${actualPosition.x}px;`,\n    `top: ${actualPosition.y}px;`,\n    !isFullscreen && `max-width: ${elementCurrentSize.width}px;`,\n    !isFullscreen && `max-height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isResizing || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    isResizing,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../types/webapp';\n\nimport { selectActiveWebApp, selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = peers.length > 0 && peers[0]?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        },\n        {\n          pluralValue: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = selectActiveWebApp(global) || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RFg0Ey2I\",\"user-count-badge\":\"UZtJ6ZXb\",\"userCountBadge\":\"UZtJ6ZXb\",\"user-badge-icon\":\"pTiZFhsG\",\"userBadgeIcon\":\"pTiZFhsG\",\"name\":\"TzA5nqCC\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PeerBadge from '../../common/PeerBadge';\n\nimport styles from './WebAppGridItem.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  chatId: string;\n  isPopularApp?: boolean;\n};\n\nexport type StateProps = {\n  user?: ApiUser;\n};\n\nfunction WebAppGridItem({ user, isPopularApp }: OwnProps & StateProps) {\n  const {\n    requestMainWebView,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleClick = useLastCallback(() => {\n    if (!user) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n    });\n  });\n\n  if (!user) return undefined;\n\n  // eslint-disable-next-line no-null/no-null\n\n  const title = user?.firstName;\n  const activeUserCount = user?.botActiveUsers;\n  const badgeText = activeUserCount && isPopularApp ? formatIntegerCompact(lang, activeUserCount) : undefined;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClick}\n    >\n      <PeerBadge\n        className={buildClassName(styles.avatarContainer, isPopularApp && 'PopularAppGridItem')}\n        textClassName={styles.name}\n        badgeClassName={styles.userCountBadge}\n        badgeIconClassName={styles.userBadgeIcon}\n        peer={user}\n        text={title}\n        badgeText={badgeText}\n        badgeIcon=\"user-filled\"\n      />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const user = selectUser(global, chatId);\n\n    return {\n      user,\n    };\n  },\n)(WebAppGridItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BJV09FsC\",\"search\":\"bdi8G7GR\",\"section-title\":\"ex3kxgWX\",\"sectionTitle\":\"ex3kxgWX\",\"section-content\":\"uIZzLhEh\",\"sectionContent\":\"uIZzLhEh\",\"showMoreLink\":\"h_Zs9ypA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport WebAppGridItem from './WebAppGridItem';\n\nimport styles from './MoreAppsTabContent.module.scss';\n\nconst POPULAR_APPS_SLICE = 30;\n\nexport type OwnProps = {\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\nconst LESS_GRID_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MoreAppsTabContent: FC<OwnProps & StateProps> = ({\n  foundIds,\n  recentBotIds,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n  const {\n    searchPopularBotApps,\n  } = getActions();\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n\n    return filterPeersByQuery({ ids: foundIds, query: searchQuery, type: 'user' });\n  }, [foundIds, searchQuery]);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleSearchInputReset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  return (\n    <InfiniteScroll\n      className={buildClassName(styles.root, 'custom-scroll')}\n      items={filteredFoundIds}\n      onLoadMore={handleLoadMore}\n      itemSelector=\".PopularAppGridItem\"\n      noFastList\n      preloadBackwards={POPULAR_APPS_SLICE}\n    >\n      <SearchInput\n        className={styles.search}\n        value={searchQuery}\n        onChange={setSearchQuery}\n        onReset={handleSearchInputReset}\n        placeholder={lang('SearchApps')}\n      />\n      {recentBotIds && !searchQuery && (\n        <div className={styles.section}>\n          <div className={styles.sectionTitle}>\n            <span>{oldLang('SearchAppsMine')}</span>\n            <span className={styles.showMoreLink} onClick={handleToggleShowMoreMine}>\n              {oldLang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n            </span>\n          </div>\n          <div className={styles.sectionContent}>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_GRID_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <WebAppGridItem\n                  chatId={id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className={styles.section}>\n        <div className={styles.sectionTitle}>\n          {searchQuery ? lang('Apps') : lang('PopularApps')}\n        </div>\n        <div className={styles.sectionContent}>\n          {filteredFoundIds && filteredFoundIds.map((id) => {\n            return (\n              <WebAppGridItem\n                chatId={id}\n                isPopularApp={!searchQuery}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(MoreAppsTabContent));\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp, WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { getWebAppKey } from '../../../../global/helpers';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\nconst FULLSCREEN_BUTTONS_AREA_HEIGHT = 3.675 * REM;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isFullscreen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n    openSuggestedStatusModal,\n    updateWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendFullScreenChanged = useCallback((value: boolean) => {\n    sendEvent({\n      eventType: 'fullscreen_changed',\n      eventData: {\n        is_fullscreen: value,\n      },\n    });\n  }, [sendEvent]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendSafeArea = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    sendEvent({\n      eventType: 'safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      },\n    });\n\n    sendEvent({\n      eventType: 'content_safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: isFullscreen ? FULLSCREEN_BUTTONS_AREA_HEIGHT : 0,\n        bottom: 0,\n      },\n    });\n  }, [sendEvent, isFullscreen, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) {\n          const key = getWebAppKey(webApp);\n          closeWebApp({ key, skipClosingConfirmation: true });\n        }\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_content_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_device_storage_clear'\n        || eventType === 'web_app_device_storage_get_key'\n        || eventType === 'web_app_device_storage_save_key') {\n        const { req_id } = eventData;\n        sendEvent({\n          eventType: 'device_storage_failed',\n          eventData: {\n            req_id,\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_secure_storage_clear'\n        || eventType === 'web_app_secure_storage_get_key'\n        || eventType === 'web_app_secure_storage_restore_key'\n        || eventType === 'web_app_secure_storage_save_key') {\n        const { req_id } = eventData;\n        sendEvent({\n          eventType: 'secure_storage_failed',\n          eventData: {\n            req_id,\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_accelerometer') {\n        sendEvent({\n          eventType: 'accelerometer_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_gyroscope') {\n        sendEvent({\n          eventType: 'gyroscope_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_start_device_orientation') {\n        sendEvent({\n          eventType: 'device_orientation_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_add_to_home_screen') {\n        sendEvent({\n          eventType: 'home_screen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_check_home_screen') {\n        sendEvent({\n          eventType: 'home_screen_checked',\n          eventData: {\n            status: 'unsupported',\n          },\n        });\n      }\n\n      if (eventType === 'web_app_set_emoji_status') {\n        const { custom_emoji_id, duration } = eventData;\n\n        if (!custom_emoji_id || typeof custom_emoji_id !== 'string') {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'SUGGESTED_EMOJI_INVALID',\n            },\n          });\n          return;\n        }\n\n        if (duration) {\n          try {\n            BigInt(duration);\n          } catch (e) {\n            sendEvent({\n              eventType: 'emoji_status_failed',\n              eventData: {\n                error: 'DURATION_INVALID',\n              },\n            });\n            return;\n          }\n        }\n\n        if (!webApp) {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'UNKNOWN_ERROR',\n            },\n          });\n          return;\n        }\n\n        openSuggestedStatusModal({\n          webAppKey: getWebAppKey(webApp),\n          customEmojiId: custom_emoji_id,\n          duration: Number(duration),\n          botId: webApp.botId,\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, sendSafeArea, onLoad, windowSize.isResizing,\n    ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, sendSafeArea, windowSize]);\n\n  useEffect(() => {\n    if (!webApp?.plannedEvents?.length) return;\n    const events = webApp.plannedEvents;\n    events.forEach((event) => {\n      sendEvent(event);\n    });\n\n    updateWebApp({\n      key: getWebAppKey(webApp),\n      update: {\n        plannedEvents: [],\n      },\n    });\n  }, [sendEvent, webApp]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      sendSafeArea();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, isFullscreen, sendViewport, sendSafeArea, ref]);\n\n  return {\n    sendEvent, sendFullScreenChanged, reloadFrame, sendViewport, sendSafeArea, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loadingPlaceholder\":\"jEAibDyh\",\"placeholderPath\":\"Gx1BIECZ\",\"fadeOpacityBreath\":\"N5Blieah\",\"defaultPlaceholderGrid\":\"Ig_t1R7i\",\"placeholderSquare\":\"ablUg8HU\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"secondary-button\":\"ypxiUCFQ\",\"secondaryButton\":\"ypxiUCFQ\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"buttons-container\":\"mR_hsBdT\",\"buttonsContainer\":\"mR_hsBdT\",\"one-row\":\"YfQO314y\",\"oneRow\":\"YfQO314y\",\"two-rows\":\"gUldkEoy\",\"twoRows\":\"gUldkEoy\",\"left-to-right\":\"ntESqwQ_\",\"leftToRight\":\"ntESqwQ_\",\"right-to-left\":\"q6IUFEL0\",\"rightToLeft\":\"q6IUFEL0\",\"top-to-bottom\":\"gb4iHJ9H\",\"topToBottom\":\"gb4iHJ9H\",\"bottom-to-top\":\"R_bh3GF8\",\"bottomToTop\":\"R_bh3GF8\",\"hide-horizontal\":\"oYaRA7u4\",\"hideHorizontal\":\"oYaRA7u4\",\"secondary-button-spinner\":\"NYV0yA2J\",\"secondaryButtonSpinner\":\"NYV0yA2J\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\",\"closeIcon\":\"BvNtfigU\",\"state-back\":\"rC2wkMIk\",\"stateBack\":\"rC2wkMIk\",\"backIconContainer\":\"JXsuZ01s\",\"moreIcon\":\"T58ozRyW\",\"headerPanel\":\"eYrhewMy\",\"icon\":\"a0AI_he5\",\"headerSplitButton\":\"Tl4_05AQ\",\"headerButton\":\"MvCwTbk_\",\"left\":\"emOpAMBm\",\"right\":\"z4C5VD5o\",\"buttonCaptionContainer\":\"dpZR3YT7\",\"backButtonCaption\":\"dWDprnWa\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachBot, ApiBotAppSettings, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { BotAppPermissions, ThemeKey } from '../../../types';\nimport type {\n  PopupOptions,\n  WebApp,\n  WebAppInboundEvent,\n  WebAppModalStateType,\n  WebAppOutboundEvent,\n} from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectBotAppPermissions,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n  selectWebApp,\n} from '../../../global/selectors';\nimport { getGeolocationStatus, IS_GEOLOCATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport download from '../../../util/download';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useFullscreen, { checkIfFullscreen } from '../../../hooks/window/useFullscreen';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n  position?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  onContextMenuButtonClick: (e: React.MouseEvent) => void;\n  isTransforming?: boolean;\n  isMultiTabSupported? : boolean;\n  modalHeight: number;\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n  botAppSettings?: ApiBotAppSettings;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isPremium?: boolean;\n  modalState?: WebAppModalStateType;\n  botAppPermissions?: BotAppPermissions;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst COLLAPSING_WAIT = 350;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst APP_NAME_DISPLAY_DURATION = 3800;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isTransforming,\n  modalState,\n  isMultiTabSupported,\n  onContextMenuButtonClick,\n  botAppPermissions,\n  botAppSettings,\n  modalHeight,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n    resetPaymentStatus,\n    openChatWithInfo,\n    showNotification,\n    openEmojiStatusAccessModal,\n    openLocationAccessModal,\n    changeWebAppModalState,\n    closeWebAppModal,\n    openPreparedInlineMessageModal,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [secondaryButton, setSecondaryButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const [requestedFileDownload, setRequestedFileDownload] = useState<{ url: string; fileName: string } | undefined>();\n  const [bottomBarColor, setBottomBarColor] = useState<string | undefined>();\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonCaptionRef = useRef<HTMLDivElement>(null);\n\n  const isFullscreen = modalState === 'fullScreen';\n  const isMinimizedState = modalState === 'minimized';\n\n  const exitFullScreenCallback = useLastCallback(() => {\n    setTimeout(() => { changeWebAppModalState({ state: 'maximized' }); }, COLLAPSING_WAIT);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const fullscreenElementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    fullscreenElementRef.current = document.querySelector('#portals') as HTMLElement;\n  }, []);\n\n  const [, setFullscreen, exitFullscreen] = useFullscreen(fullscreenElementRef, exitFullScreenCallback);\n\n  const activeWebApp = modal?.activeWebAppKey ? modal.openedWebApps[modal.activeWebAppKey] : undefined;\n  const activeWebAppName = activeWebApp?.appName;\n  const {\n    url, buttonText, isBackButtonVisible,\n  } = webApp || {};\n\n  const {\n    placeholderPath,\n  } = botAppSettings || {};\n\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const isAvailable = IS_GEOLOCATION_SUPPORTED;\n  const isAccessRequested = botAppPermissions?.geolocation !== undefined;\n  const isAccessGranted = Boolean(botAppPermissions?.geolocation);\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webAppKey) return;\n    updateWebApp({ key: webAppKey, update: updatedPartialWebApp });\n  });\n\n  const themeParams = useMemo(() => {\n    return extractCurrentThemeParams();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [theme]);\n\n  useEffect(() => {\n    setBottomBarColor(themeParams.secondary_bg_color);\n  }, [themeParams]);\n\n  const themeBackgroundColor = themeParams.bg_color;\n  const [backgroundColorFromEvent, setBackgroundColorFromEvent] = useState<string | undefined>();\n  const backgroundColorFromSettings = theme === 'light' ? botAppSettings?.backgroundColor\n    : botAppSettings?.backgroundDarkColor;\n\n  useEffect(() => {\n    const color = backgroundColorFromEvent || backgroundColorFromSettings || themeBackgroundColor;\n\n    updateCurrentWebApp({ backgroundColor: color });\n  }, [themeBackgroundColor, backgroundColorFromEvent, backgroundColorFromSettings]);\n\n  const themeHeaderColor = themeParams.bg_color;\n  const [headerColorFromEvent, setHeaderColorFromEvent] = useState<string | undefined>();\n  const headerColorFromSettings = theme === 'light' ? botAppSettings?.headerColor\n    : botAppSettings?.headerDarkColor;\n\n  useEffect(() => {\n    const color = headerColorFromEvent || headerColorFromSettings || themeHeaderColor;\n\n    updateCurrentWebApp({ headerColor: color });\n  }, [themeHeaderColor, headerColorFromEvent, headerColorFromSettings]);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendFullScreenChanged, sendViewport, sendSafeArea, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isFullscreen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const isMainButtonVisible = isLoaded && mainButton?.isVisible && mainButton.text.trim().length > 0;\n  const isSecondaryButtonVisible = isLoaded && secondaryButton?.isVisible && secondaryButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSecondaryButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'secondary_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  const setFullscreenCallback = useLastCallback(() => {\n    if (!checkIfFullscreen() && isActive) {\n      setFullscreen?.();\n    }\n  });\n\n  const exitIfFullscreenCallback = useLastCallback(() => {\n    if (checkIfFullscreen() && isActive) {\n      exitFullscreen?.();\n    }\n  });\n\n  const sendFullScreenChangedCallback = useLastCallback(\n    (value: boolean) => { if (isActive) sendFullScreenChanged(value); },\n  );\n\n  useEffect(() => {\n    if (isFullscreen) {\n      setFullscreenCallback();\n      sendFullScreenChangedCallback(true);\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChangedCallback(false);\n    }\n  }, [isFullscreen]);\n\n  const visibilityChangedCallBack = useLastCallback((visibility: boolean) => {\n    sendEvent({\n      eventType: 'visibility_changed',\n      eventData: {\n        is_visible: visibility,\n      },\n    });\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n      visibilityChangedCallBack(Boolean(isActive));\n    }\n  }, [isActive, isLoaded]);\n\n  useEffectWithPrevDeps(([prevModalState]) => {\n    if (modalState === 'minimized') {\n      visibilityChangedCallBack(false);\n    }\n    if (modalState && prevModalState === 'minimized') {\n      visibilityChangedCallBack(true);\n    }\n  }, [modalState]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n      resetPaymentStatus();\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectFileDownload = useLastCallback((shouldCloseActive?: boolean) => {\n    if (shouldCloseActive) {\n      setRequestedFileDownload(undefined);\n      handlePopupClosed();\n    }\n\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    if (!bot) return;\n    const result = await callApi('allowBotSendMessages', { bot });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    if (!bot) return;\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleCheckDownloadFile(fileUrl: string, fileName: string) {\n    const canDownload = await callApi('checkBotDownloadFileParams', {\n      bot: bot!,\n      url: fileUrl,\n      fileName,\n    });\n\n    if (!canDownload) {\n      sendEvent({\n        eventType: 'file_download_requested',\n        eventData: {\n          status: 'cancelled',\n        },\n      });\n      return;\n    }\n\n    setRequestedFileDownload({ url: fileUrl, fileName });\n    handlePopupOpened();\n  }\n\n  const handleDownloadFile = useLastCallback(() => {\n    if (!requestedFileDownload) return;\n    setRequestedFileDownload(undefined);\n    handlePopupClosed();\n\n    download(requestedFileDownload.url, requestedFileDownload.fileName);\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'downloading',\n      },\n    });\n  });\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setSecondaryButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChatWithInfo({ id: bot!.id });\n  });\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n\n    if (eventType === 'web_app_request_fullscreen') {\n      if (getIsWebAppsFullscreenSupported()) {\n        changeWebAppModalState({ state: 'fullScreen' });\n      } else {\n        sendEvent({\n          eventType: 'fullscreen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n    }\n\n    if (eventType === 'web_app_exit_fullscreen') {\n      exitIfFullscreenCallback();\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl, shouldIgnoreCache: eventData.force_request });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      setBackgroundColorFromEvent(validateHexColor(eventData.color) ? eventData.color : undefined);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const key = eventData.color_key;\n      setHeaderColorFromEvent(eventData.color || (key ? themeParams[key] : undefined));\n    }\n\n    if (eventType === 'web_app_set_bottom_bar_color') {\n      setBottomBarColor(eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_secondary_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setSecondaryButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n        position: eventData.position,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n        || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n        || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n\n    if (eventType === 'web_app_request_file_download') {\n      if (requestedFileDownload || unlockPopupsAt > Date.now()) {\n        handleRejectFileDownload();\n        return;\n      }\n      handleCheckDownloadFile(eventData.url, eventData.file_name);\n    }\n\n    if (eventType === 'web_app_send_prepared_message') {\n      if (!bot || !webAppKey) return;\n      const { id } = eventData;\n      openPreparedInlineMessageModal({ botId: bot.id, messageId: id, webAppKey });\n    }\n\n    if (eventType === 'web_app_request_emoji_status_access') {\n      if (!bot) return;\n      openEmojiStatusAccessModal({ bot, webAppKey });\n    }\n\n    if (eventType === 'web_app_check_location') {\n      const handleGeolocationCheck = () => {\n        sendEvent({\n          eventType: 'location_checked',\n          eventData: {\n            available: isAvailable,\n            access_requested: isAccessRequested,\n            access_granted: isAccessGranted,\n          },\n        });\n      };\n\n      handleGeolocationCheck();\n    }\n\n    if (eventType === 'web_app_request_location') {\n      const handleRequestLocation = async () => {\n        const geolocationData = await getGeolocationStatus();\n        const { accessRequested, accessGranted, geolocation } = geolocationData;\n\n        if (!accessGranted || !accessRequested) {\n          sendEvent({\n            eventType: 'location_requested',\n            eventData: {\n              available: false,\n            },\n          });\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n          return;\n        }\n\n        if (isAvailable) {\n          if (isAccessRequested) {\n            sendEvent({\n              eventType: 'location_requested',\n              eventData: {\n                available: botAppPermissions?.geolocation!,\n                latitude: geolocation?.latitude,\n                longitude: geolocation?.longitude,\n                altitude: geolocation?.altitude,\n                course: geolocation?.heading,\n                speed: geolocation?.speed,\n                horizontal_accuracy: geolocation?.accuracy,\n                vertical_accuracy: geolocation?.altitudeAccuracy,\n              },\n            });\n          } else {\n            openLocationAccessModal({ bot, webAppKey });\n          }\n        } else {\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n        }\n      };\n\n      handleRequestLocation();\n    }\n\n    if (eventType === 'web_app_open_location_settings') {\n      handleOpenChat();\n    }\n  }\n\n  const mainButtonCurrentColor = useCurrentOrPrev(mainButton?.color, true);\n  const mainButtonCurrentTextColor = useCurrentOrPrev(mainButton?.textColor, true);\n  const mainButtonCurrentIsActive = useCurrentOrPrev(mainButton && Boolean(mainButton.isActive), true);\n  const mainButtonCurrentText = useCurrentOrPrev(mainButton?.text, true);\n\n  const secondaryButtonCurrentPosition = useCurrentOrPrev(secondaryButton?.position, true);\n  const secondaryButtonCurrentColor = useCurrentOrPrev(secondaryButton?.color, true);\n  const secondaryButtonCurrentTextColor = useCurrentOrPrev(secondaryButton?.textColor, true);\n  const secondaryButtonCurrentIsActive = useCurrentOrPrev(secondaryButton && Boolean(secondaryButton.isActive), true);\n  const secondaryButtonCurrentText = useCurrentOrPrev(secondaryButton?.text, true);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideMainButton, setShouldHideMainButton] = useState(true);\n  const [shouldHideSecondaryButton, setShouldHideSecondaryButton] = useState(true);\n  const [shouldShowMainButton, setShouldShowMainButton] = useState(false);\n  const [shouldShowSecondaryButton, setShouldShowSecondaryButton] = useState(false);\n\n  const [shouldShowAppNameInFullscreen, setShouldShowAppNameInFullscreen] = useState(false);\n\n  const [backButtonTextWidth, setBackButtonTextWidth] = useState(0);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n      sendSafeArea();\n    }, isTransforming ? 0 : ANIMATION_WAIT);\n  }, [shouldShowSecondaryButton, shouldHideSecondaryButton,\n    shouldShowMainButton, shouldShowMainButton,\n    secondaryButton?.position, sendViewport, isTransforming, modalHeight,\n    sendSafeArea]);\n\n  const isVerticalLayout = secondaryButtonCurrentPosition === 'top' || secondaryButtonCurrentPosition === 'bottom';\n  const isHorizontalLayout = !isVerticalLayout;\n\n  const rowsCount = (isVerticalLayout && shouldShowMainButton && shouldShowSecondaryButton) ? 2\n    : shouldShowMainButton || shouldShowSecondaryButton ? 1 : 0;\n\n  const hideDirection = (isHorizontalLayout\n    && (!shouldHideMainButton && !shouldHideSecondaryButton)) ? 'horizontal' : 'vertical';\n\n  const mainButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const mainButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const appNameDisplayTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (isFullscreen && isOpen && Boolean(activeWebAppName)) {\n      setShouldShowAppNameInFullscreen(true);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n\n      appNameDisplayTimeout.current = setTimeout(() => {\n        setShouldShowAppNameInFullscreen(false);\n        appNameDisplayTimeout.current = undefined;\n      }, APP_NAME_DISPLAY_DURATION);\n    } else {\n      setShouldShowAppNameInFullscreen(false);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n        appNameDisplayTimeout.current = undefined;\n      }\n    }\n\n    return () => {\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n    };\n  }, [isFullscreen, isOpen, activeWebAppName]);\n\n  useEffect(() => {\n    if (mainButtonChangeTimeout.current) clearTimeout(mainButtonChangeTimeout.current);\n    if (mainButtonFastTimeout.current) clearTimeout(mainButtonFastTimeout.current);\n\n    if (isMainButtonVisible) {\n      mainButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowMainButton(true);\n      }, 35);\n      setShouldHideMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isMainButtonVisible) {\n      setShouldShowMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideMainButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isMainButtonVisible]);\n\n  useEffect(() => {\n    if (secondaryButtonChangeTimeout.current) clearTimeout(secondaryButtonChangeTimeout.current);\n    if (secondaryButtonFastTimeout.current) clearTimeout(secondaryButtonFastTimeout.current);\n\n    if (isSecondaryButtonVisible) {\n      secondaryButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowSecondaryButton(true);\n      }, 35);\n      setShouldHideSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isSecondaryButtonVisible) {\n      setShouldShowSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideSecondaryButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isSecondaryButtonVisible]);\n\n  useEffect(() => {\n    if (!shouldShowSecondaryButton && !shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowSecondaryButton, shouldShowMainButton]);\n\n  const frameStyle = isTransforming ? 'pointer-events: none;' : '';\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChanged(false);\n      changeWebAppModalState({ state: 'maximized' });\n      closeWebAppModal();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    exitIfFullscreenCallback();\n  });\n\n  const handleShowContextMenu = useLastCallback((e: React.MouseEvent) => {\n    onContextMenuButtonClick(e);\n  });\n\n  const backIconClass = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n  const backButtonCaption = shouldShowAppNameInFullscreen ? activeWebAppName\n    : oldLang(isBackButtonVisible ? 'Back' : 'Close');\n\n  const hasHeaderElement = headerButtonCaptionRef?.current;\n\n  useEffect(() => {\n    const width = headerButtonCaptionRef?.current?.clientWidth || 0;\n    setBackButtonTextWidth(width);\n  }, [backButtonCaption, hasHeaderElement]);\n\n  function getBackButtonActiveKey() {\n    if (shouldShowAppNameInFullscreen) return 0;\n    return isBackButtonVisible ? 1 : 2;\n  }\n\n  function renderFullscreenBackButtonCaption() {\n    return (\n      <span\n        className={styles.buttonCaptionContainer}\n        style={\n          `width: ${backButtonTextWidth}px;`\n        }\n      >\n        <Transition\n          activeKey={getBackButtonActiveKey()}\n          name=\"slideFade\"\n        >\n          <div\n            ref={headerButtonCaptionRef}\n            className={styles.backButtonCaption}\n          >\n            {backButtonCaption}\n          </div>\n        </Transition>\n      </span>\n    );\n  }\n\n  function renderFullscreenHeaderPanel() {\n    return (\n      <div className={styles.headerPanel}>\n        <div ref={headerButtonRef} className={styles.headerButton} onClick={handleBackClick}>\n          <div className={styles.backIconContainer}>\n            <div className={backIconClass} />\n          </div>\n          {renderFullscreenBackButtonCaption()}\n        </div>\n        <div className={styles.headerSplitButton}>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.left,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-label={lang('WebAppCollapse')}\n            onClick={handleCollapseClick}\n          >\n            <Icon\n              name=\"down\"\n              className={styles.icon}\n            />\n          </div>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('AriaMoreButton')}\n            onClick={handleShowContextMenu}\n          >\n            <Icon\n              name=\"more\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderDefaultPlaceholder() {\n    const className = buildClassName(styles.loadingPlaceholder, styles.defaultPlaceholderGrid, isLoaded && styles.hide);\n    return (\n      <div className={className}>\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n      </div>\n    );\n  }\n\n  function renderPlaceholder() {\n    if (!placeholderPath) {\n      return renderDefaultPlaceholder();\n    }\n    return (\n      <svg\n        className={buildClassName(styles.loadingPlaceholder, isLoaded && styles.hide)}\n        viewBox=\"0 0 512 512\"\n      >\n        <path className={styles.placeholderPath} d={placeholderPath} />\n      </svg>\n    );\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isFullscreen && getIsWebAppsFullscreenSupported() && renderFullscreenHeaderPanel()}\n      {!isMinimizedState && renderPlaceholder()}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameStyle}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation; clipboard-write;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {!isMinimizedState && (\n        <div\n          style={`background-color: ${bottomBarColor};`}\n          className={buildClassName(\n            styles.buttonsContainer,\n            secondaryButtonCurrentPosition === 'left' && styles.leftToRight,\n            secondaryButtonCurrentPosition === 'right' && styles.rightToLeft,\n            secondaryButtonCurrentPosition === 'top' && styles.topToBottom,\n            secondaryButtonCurrentPosition === 'bottom' && styles.bottomToTop,\n            hideDirection === 'horizontal' && styles.hideHorizontal,\n            rowsCount === 1 && styles.oneRow,\n            rowsCount === 2 && styles.twoRows,\n          )}\n        >\n          <Button\n            className={buildClassName(\n              styles.secondaryButton,\n              shouldShowSecondaryButton && !shouldHideSecondaryButton && styles.visible,\n              shouldHideSecondaryButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${secondaryButtonCurrentColor}; color: ${secondaryButtonCurrentTextColor}`}\n            disabled={!secondaryButtonCurrentIsActive && !secondaryButton?.isProgressVisible}\n            nonInteractive={secondaryButton?.isProgressVisible}\n            onClick={handleSecondaryButtonClick}\n            size=\"smaller\"\n          >\n            {!secondaryButton?.isProgressVisible && secondaryButtonCurrentText}\n            {secondaryButton?.isProgressVisible\n              && <Spinner className={styles.mainButtonSpinner} color=\"blue\" />}\n          </Button>\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && !shouldHideMainButton && styles.visible,\n              shouldHideMainButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive && !mainButton?.isProgressVisible}\n            nonInteractive={mainButton?.isProgressVisible}\n            onClick={handleMainButtonClick}\n            size=\"smaller\"\n          >\n            {!mainButton?.isProgressVisible && mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </div>\n      ) }\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || oldLang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={oldLang('ShareYouPhoneNumberTitle')}\n        text={oldLang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={oldLang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={oldLang('lng_bot_allow_write_title')}\n        text={oldLang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={oldLang('lng_bot_allow_write_confirm')}\n      />\n      <ConfirmDialog\n        isOpen={Boolean(requestedFileDownload)}\n        title={oldLang('BotDownloadFileTitle')}\n        textParts={lang('BotDownloadFileDescription', {\n          bot: bot?.firstName,\n          filename: requestedFileDownload?.fileName,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n        })}\n        confirmLabel={oldLang('BotDownloadFileButton')}\n        onClose={handleRejectFileDownload}\n        confirmHandler={handleDownloadFile}\n      />\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={oldLang('lng_bot_close_warning_title')}\n        text={oldLang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={oldLang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={oldLang('BotRemoveFromMenuTitle')}\n        textParts={renderText(oldLang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n    const modalState = modal?.modalState;\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const userFullInfo = activeBotId ? selectUserFullInfo(global, activeBotId) : undefined;\n    const botAppSettings = userFullInfo?.botInfo?.appSettings;\n    const currentUser = global.currentUserId ? selectUser(global, global.currentUserId) : undefined;\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status: regularPaymentStatus } = selectTabState(global).payment;\n    const { status: starsPaymentStatus, inputInvoice: starsInputInvoice } = selectTabState(global).starsPayment;\n    const botAppPermissions = bot ? selectBotAppPermissions(global, bot.id) : undefined;\n\n    const paymentStatus = starsPaymentStatus || regularPaymentStatus;\n\n    return {\n      attachBot,\n      bot,\n      currentUser,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || Boolean(starsInputInvoice),\n      paymentStatus,\n      modalState,\n      botAppPermissions,\n      botAppSettings,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"fullScreen\":\"ciSTWz16\",\"tabs\":\"X18WbDa5\",\"tool-bar\":\"qK4q0Sat\",\"toolBar\":\"qK4q0Sat\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"more-apps-tab-icon\":\"Obu3ui67\",\"moreAppsTabIcon\":\"Obu3ui67\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"more-apps-button\":\"cEuW1_hJ\",\"moreAppsButton\":\"cEuW1_hJ\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"fullscreenButton\":\"otlJULGy\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { Point, Size, ThemeKey } from '../../../types';\nimport type { WebApp, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { RESIZE_HANDLE_CLASS_NAME } from '../../../config';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTheme, selectUser,\n  selectWebApp,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport windowSize from '../../../util/windowSize';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport MoreAppsTabContent from './MoreAppsTabContent';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  cachedSize?: Size;\n  cachedPosition?: Point;\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst MINIMIZED_STATE_SIZE = { width: 300, height: 40 };\nconst DEFAULT_MAXIMIZED_STATE_SIZE = { width: 420, height: 730 };\nconst MAXIMIZED_STATE_MINIMUM_SIZE = { width: 300, height: 300 };\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  cachedSize,\n  cachedPosition,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n    openMoreAppsTab,\n    closeMoreAppsTab,\n    updateMiniAppCachedPosition,\n    updateMiniAppCachedSize,\n  } = getActions();\n\n  const [getMaximizedStateSize, setMaximizedStateSize] = useSignal(cachedSize || DEFAULT_MAXIMIZED_STATE_SIZE);\n\n  function getSize() {\n    if (modal?.modalState === 'fullScreen') return windowSize.get();\n    if (modal?.modalState === 'maximized') return getMaximizedStateSize();\n    return MINIMIZED_STATE_SIZE;\n  }\n  function getMinimumSize() {\n    if (modal?.modalState === 'maximized') return MAXIMIZED_STATE_MINIMUM_SIZE;\n    return undefined;\n  }\n\n  const {\n    openedWebApps, activeWebAppKey, openedOrderedKeys, sessionKeys, isMoreAppsTabActive,\n  } = modal || {};\n  const activeWebApp = activeWebAppKey ? openedWebApps?.[activeWebAppKey] : undefined;\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n  const isMinimizedState = modal?.modalState === 'minimized';\n  const isFullScreen = modal?.modalState === 'fullScreen';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement && !isFullScreen));\n  }, [supportMultiTabMode, headerElement, containerElement, isFullScreen]);\n\n  useEffect(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  }, [supportMultiTabMode]);\n\n  const {\n    isDragging,\n    isResizing,\n    style: draggableStyle,\n    size,\n    position,\n  } = useDraggable(\n    ref,\n    headerRef,\n    isDraggingEnabled,\n    getSize(),\n    isFullScreen,\n    getMinimumSize(),\n    cachedPosition,\n  );\n\n  const x = position?.x;\n  const y = position?.y;\n  useEffect(() => {\n    if (!isDragging && x !== undefined && y !== undefined) {\n      updateMiniAppCachedPosition({ position: { x, y } });\n    }\n  }, [isDragging, x, y]);\n\n  useEffect(() => {\n    if (!isDragging && size && isMaximizedState) { updateMiniAppCachedSize({ size }); }\n  }, [isDragging, isMaximizedState, size]);\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n\n  useEffect(() => {\n    if (isResizing) {\n      setMaximizedStateSize({ width: currentWidth, height: currentHeight });\n    }\n  }, [currentHeight, currentWidth, isResizing, setMaximizedStateSize]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleCloseMoreAppsTab = useLastCallback(() => {\n    closeMoreAppsTab();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      const key = getWebAppKey(activeWebApp!);\n      updateWebApp({\n        key,\n        update: {\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'minimized' });\n  });\n\n  const handleFullscreenClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'fullScreen' });\n  });\n\n  const handleOpenMoreAppsTabClick = useLastCallback(() => {\n    openMoreAppsTab();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{oldLang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{oldLang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {oldLang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {oldLang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (isMoreAppsTabActive) return 'color-text';\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme, isMoreAppsTabActive]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsTab() {\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.moreAppsTabIcon}>\n            <Icon className={styles.icon} name=\"add\" />\n          </div>\n          {lang('OpenApp')}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleCloseMoreAppsTab}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsButton() {\n    return (\n      <Button\n        className={buildClassName(\n          styles.moreAppsButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleOpenMoreAppsTabClick}\n      >\n        <Icon className={styles.icon} name=\"add\" />\n      </Button>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || isMinimizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n        {isMoreAppsTabActive && renderMoreAppsTab()}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        <div className={styles.toolBar}>\n          {!isMoreAppsTabActive && renderMoreAppsButton()}\n\n          {!isMoreAppsTabActive && (\n            <Button\n              className={buildClassName(\n                styles.windowStateButton,\n                styles.fullscreenButton,\n                'no-drag',\n              )}\n              round\n              color=\"translucent\"\n              size=\"tiny\"\n              onClick={handleFullscreenClick}\n            >\n              <Icon className={styles.stateIcon} name=\"expand-modal\" />\n            </Button>\n          )}\n\n          <Button\n            className={buildClassName(\n              styles.windowStateButton,\n              'no-drag',\n            )}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            onClick={handleCollapseClick}\n          >\n            <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {!isMoreAppsTabActive && renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  function buildResizeHandleClass(handleClassName: string) {\n    return buildClassName(RESIZE_HANDLE_CLASS_NAME, handleClassName);\n  }\n\n  function renderResizeHandles() {\n    return (\n      <>\n        <div className={buildResizeHandleClass('top')} />\n        <div className={buildResizeHandleClass('bottom')} />\n        <div className={buildResizeHandleClass('left')} />\n        <div className={buildResizeHandleClass('right')} />\n        <div className={buildResizeHandleClass('topLeft')} />\n        <div className={buildResizeHandleClass('topRight')} />\n        <div className={buildResizeHandleClass('bottomLeft')} />\n        <div className={buildResizeHandleClass('bottomRight')} />\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        isMinimizedState && styles.minimized,\n        isFullScreen && styles.fullScreen,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      dialogContent={isDraggingEnabled && !isMinimizedState ? renderResizeHandles() : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {isFullScreen && renderMoreMenu()}\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isTransforming={isDragging || isResizing}\n          onContextMenuButtonClick={handleContextMenu}\n          isMultiTabSupported={supportMultiTabMode}\n          modalHeight={currentHeight}\n        />\n      ))}\n      { isMoreAppsTabActive && (<MoreAppsTabContent />)}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { miniAppsCachedPosition, miniAppsCachedSize } = selectSharedSettings(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      cachedPosition: miniAppsCachedPosition,\n      cachedSize: miniAppsCachedSize,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n} & ({\n  icon: IconName;\n  isFontIcon: true;\n} | {\n  icon: string;\n  isFontIcon?: false;\n});\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <Icon name={icon} className={styles.fontIcon} style={`--item-color: rgb(${r},${g},${b})`} />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <Icon name=\"previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <Icon name=\"next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar, { AVATAR_SIZES } from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS: Record<string, IconName> = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-crossed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = AVATAR_SIZES.giant + 0.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type {\n  ApiLimitTypeForPromo,\n  ApiPremiumPromo,\n  ApiPremiumSection,\n  ApiPremiumSubscriptionOption,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n  moreAccounts: 'ConnectedAccountsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n  moreAccounts: 'ConnectedAccountsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium\n      ? lang('OK')\n      : lang('SubscribeToPremium', { price: formatCurrency(lang, perMonthPrice, currency) }, { withNodes: true });\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  const currentSection = filteredSections[currentSlideIndex];\n  const hasHeaderBackdrop = currentSection !== 'double_limits' && currentSection !== 'stories';\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, hasHeaderBackdrop && styles.whiteBackButton)}\n        color={hasHeaderBackdrop ? 'translucent-white' : 'translucent'}\n        onClick={onBack}\n        ariaLabel={oldLang('Back')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={oldLang(LIMITS_TITLES[limit])}\n                        description={oldLang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {oldLang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumSubscriptionOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumSubscriptionOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const oldLang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={oldLang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {oldLang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrencyAsString(amount, currency, oldLang.code)} x ${users!}`\n            : oldLang('PricePerMonth', formatCurrencyAsString(perMonth, currency, oldLang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrencyAsString(amount, currency, oldLang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSection, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      lang,\n      perMonthPrice,\n      currency,\n    );\n  }, [selectedSubscriptionOption, lang]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return renderText(\n        fromUser?.id === currentUserId\n          ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n          : oldLang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]),\n        ['simple_markdown', 'emoji'],\n      );\n    }\n\n    if (fromUserStatusSet && fromUser) {\n      const template = oldLang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n      const [first, second] = template.split('{link}');\n\n      const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n        <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n      ) : undefined;\n      const link = (\n        <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n          {emoji}{renderText(fromUserStatusSet.title)}\n        </span>\n      );\n      return [renderText(first), link, renderText(second)];\n    }\n\n    return renderText(\n      fromUser\n        ? oldLang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n        : oldLang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium'),\n      ['simple_markdown', 'emoji'],\n    );\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : oldLang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return oldLang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? oldLang('TelegramPremiumUserDialogSubtitle')\n      : oldLang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={oldLang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={oldLang('Close')}\n            >\n              <Icon name=\"close\" />\n            </Button>\n            {(fromUserStatusEmoji && !isGift) ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {getHeaderText()}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {oldLang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={oldLang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={oldLang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {oldLang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  forceRenderAllItems?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  forceRenderAllItems,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(forceRenderAllItems || filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const foundChannelIds = channelIds ? filterPeersByQuery({ ids: channelIds, query: searchQuery, type: 'chat' }) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredUserIds = memberIds\n      ? filterPeersByQuery({ ids: memberIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(unique(filteredUserIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n  STARS_CURRENCY_CODE,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount && gift.currency !== STARS_CURRENCY_CODE);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.filter((gift) => gift.currency !== STARS_CURRENCY_CODE)\n      ?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftEnabled: global.appConfig?.isStarsGiftEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: OldLangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: OldLangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll({\n        container: containerRef.current!,\n        element: stickerSetEl,\n        position: 'start',\n        margin: FOCUS_MARGIN,\n        maxDistance: isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      });\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, undefined, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToSticker = !hasThumbnail\n    || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb && !hasStaticThumb);\n  const firstStickerHash = shouldFallbackToSticker && stickerSet.stickers?.[0]\n    && getStickerMediaHash(stickerSet.stickers[0], 'preview');\n  const firstStickerMediaData = useMedia(firstStickerHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !firstStickerHash) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || firstStickerMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, 'sticker-set-cover')}\n      style={`--_size: ${size}px`}\n    >\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToSticker) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || firstStickerMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport Sparkles from './Sparkles';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n  withSparkles?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n  withSparkles,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, undefined, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: { type: 'regular', documentId: sticker.id, until: getServerTime() + duration },\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {withSparkles && <Sparkles preset=\"button\" /> }\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiEmojiStatusType, ApiReactionWithPaid, ApiSticker,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  collectibleStatuses?: ApiEmojiStatusType[];\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps & StateProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  collectibleStatuses,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isStatusCollectible = stickerSet.id === COLLECTIBLE_STATUS_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const collectibleEmojiIdsSet = useMemo(() => (\n    collectibleStatuses ? new Set(collectibleStatuses.map(({ documentId }) => documentId)) : undefined\n  ), [collectibleStatuses]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && !isStatusCollectible\n   && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            const withSparkles = sticker.id === COLLECTIBLE_STATUS_SET_ID\n            || collectibleEmojiIdsSet?.has(sticker.id);\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n                withSparkles={withSparkles}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return { collectibleStatuses };\n  },\n)(StickerSet));\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiEmojiStatusType,\n  ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique, uniqueByField } from '../../util/iteratees';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  collectibleStatuses?: ApiEmojiStatusType[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  collectibleStatuses,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const collectibleStatusEmojis = useMemo(() => {\n    const collectibleStatusEmojiIds = collectibleStatuses?.map((status) => status.documentId);\n    return customEmojisById && collectibleStatusEmojiIds?.map((id) => customEmojisById[id]).filter(Boolean);\n  }, [customEmojisById, collectibleStatuses]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = uniqueByField(defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []), 'id');\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n          isEmoji: true,\n        });\n      }\n      if (collectibleStatusEmojis?.length) {\n        defaultSets.push({\n          id: COLLECTIBLE_STATUS_SET_ID,\n          accessHash: '',\n          count: collectibleStatusEmojis.length,\n          stickers: collectibleStatusEmojis,\n          title: lang('CollectibleStatusesCategory'),\n          isEmoji: true,\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: oldLang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, oldLang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction, collectibleStatusEmojis, lang,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{oldLang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      customEmojisById,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      collectibleStatuses: isStatusPicker ? collectibleStatuses : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"C9sWDINB\",\"topEmoji\":\"gdG3oY21\",\"description\":\"p7S4AH8A\",\"title\":\"KVpsce1g\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SuggestedStatusModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['suggestedStatusModal'];\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n};\n\nconst CUSTOM_EMOJI_SIZE = 6 * REM;\n\nconst SuggestedStatusModal = ({ modal, currentUser, bot }: OwnProps & StateProps) => {\n  const { setEmojiStatus, closeSuggestedStatusModal, sendWebAppEvent } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !renderingModal) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: renderingModal.customEmojiId,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, renderingModal]);\n\n  const description = useMemo(() => {\n    if (!renderingModal || !bot) return undefined;\n\n    const botName = getUserFullName(bot);\n\n    if (renderingModal.duration) {\n      return lang('BotSuggestedStatusFor', {\n        bot: botName,\n        duration: formatShortDuration(lang, renderingModal.duration),\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('BotSuggestedStatus', { bot: botName }, { withNodes: true, withMarkdown: true });\n  }, [bot, lang, renderingModal]);\n\n  const handleClose = useLastCallback(() => {\n    const webAppKey = renderingModal?.webAppKey;\n\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n      });\n    }\n\n    closeSuggestedStatusModal();\n  });\n\n  const handleSetStatus = useLastCallback(() => {\n    if (!renderingModal) return;\n\n    const expires = renderingModal.duration ? getServerTime() + renderingModal.duration : undefined;\n\n    setEmojiStatus({\n      referrerWebAppKey: renderingModal.webAppKey,\n      emojiStatus: { type: 'regular', documentId: renderingModal.customEmojiId, until: expires },\n    });\n    closeSuggestedStatusModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {renderingModal && (\n        <CustomEmoji\n          className={styles.topEmoji}\n          documentId={renderingModal.customEmojiId}\n          size={CUSTOM_EMOJI_SIZE}\n          loopLimit={1}\n          forceAlways\n        />\n      )}\n      <div>\n        <h3 className={styles.title}>{lang('BotSuggestedStatusTitle')}</h3>\n        <p className={styles.description}>{description}</p>\n      </div>\n      {mockPeerWithStatus && (\n        <PeerChip\n          mockPeer={mockPeerWithStatus}\n          withEmojiStatus\n        />\n      )}\n      <Button size=\"smaller\" onClick={handleSetStatus}>\n        {lang('GeneralConfirm')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const bot = modal?.botId ? selectUser(global, modal.botId) : undefined;\n\n    return {\n      currentUser,\n      bot,\n    };\n  },\n)(SuggestedStatusModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, chat);\n  }, [chat, oldLang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, prevBoostedChat);\n  }, [prevBoostedChat, oldLang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: oldLang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = oldLang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? oldLang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = oldLang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? oldLang('BoostChannel') : oldLang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = oldLang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = oldLang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = oldLang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = oldLang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, oldLang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {oldLang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {oldLang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : oldLang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {oldLang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(\n              oldLang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {oldLang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {oldLang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={oldLang('OK')}\n          title={oldLang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            oldLang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatShortDuration(lang, boost!.cooldownUntil - getServerTime()),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={oldLang('Common.Yes')}\n          title={oldLang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(oldLang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const isNew = invite.alreadyPeerIds.length === 0;\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = isNew ? lang('FolderLinkSubtitleNew')\n    : newChatsCount ? lang('FolderLinkSubtitleAdd', {\n      chats: lang('FolderLinkSubtitleAddCount', { count: newChatsCount }, { pluralValue: newChatsCount }),\n      title: renderTextWithEntities({\n        text: folder.title.text,\n        entities: folder.title.entities,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n      }),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    }) : lang('FolderLinkSubtitleAlready');\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {oldLang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length\n                  ? oldLang('DeselectAll') : oldLang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && oldLang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {oldLang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>([]);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {lang('FolderLinkSubtitleNew')}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? oldLang('DeselectAll') : oldLang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkAddFolder')}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) {\n      return renderTextWithEntities({\n        text: renderingFolder.title.text,\n        entities: renderingFolder.title.entities,\n        noCustomEmojiPlayback: renderingFolder.noTitleAnimations,\n      });\n    }\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) {\n      return renderTextWithEntities({\n        text: renderingInfo.invite.title.text,\n        entities: renderingInfo.invite.title.entities,\n        noCustomEmojiPlayback: renderingInfo.invite.noTitleAnimations,\n      });\n    }\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: TeactNode) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab\n            className={styles.folder}\n            isActive\n            badgeCount={folderTabNumber}\n            isBadgeActive\n            title={folderTitle}\n          />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFkgLoAk\",\"title\":\"La4sUYaq\",\"description\":\"Bn5kz5br\",\"moreButton\":\"JdN5pGTw\",\"secondary\":\"hbsLlXSH\",\"content\":\"TZE15Pt_\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { TableAboutData } from '../common/TableAboutModal';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredContextMenuContainer';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport TableAboutModal from '../common/TableAboutModal';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  modal: TabState['aboutAdsModal'];\n};\n\ntype StateProps = {\n  minLevelToRestrictAds?: number;\n};\n\nconst AboutAdsModal = ({ modal, minLevelToRestrictAds }: OwnProps & StateProps) => {\n  const { closeAboutAdsModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const moreMenuRef = useRef<HTMLButtonElement>(null);\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n  const {\n    canReport, randomId, additionalInfo, sponsorInfo,\n  } = renderingModal || {};\n  const isMonetizationSharing = canReport;\n\n  const renderingIsNewDesign = useCurrentOrPrev(isMonetizationSharing);\n\n  const oldLang = useOldLang();\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(moreMenuRef, !renderingIsNewDesign);\n\n  const handleClose = useLastCallback(() => {\n    closeAboutAdsModal();\n    handleContextMenuClose();\n    handleContextMenuHide();\n  });\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <Button\n          ref={moreMenuRef}\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          className={styles.moreButton}\n          onClick={handleContextMenu}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, handleContextMenu, minLevelToRestrictAds]);\n\n  if (renderingIsNewDesign) {\n    return (\n      <>\n        <TableAboutModal\n          isOpen={isOpen}\n          listItemData={modalData?.listItemData}\n          headerIconName=\"channel\"\n          withSeparator\n          header={modalData?.header}\n          footer={modalData?.footer}\n          buttonText={oldLang('RevenueSharingAdsUnderstood')}\n          onClose={handleClose}\n        />\n        {contextMenuAnchor && randomId && (\n          <SponsoredMessageContextMenuContainer\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            triggerRef={moreMenuRef}\n            randomId={randomId}\n            additionalInfo={additionalInfo}\n            canReport={canReport}\n            sponsorInfo={sponsorInfo}\n            shouldSkipAbout\n            onItemClick={handleClose}\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={handleClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const minLevelToRestrictAds = global.appConfig?.channelRestrictAdsLevelMin;\n\n    return {\n      minLevelToRestrictAds,\n    };\n  },\n)(AboutAdsModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      withSeparator\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['monetizationVerificationModal'];\n};\n\ntype StateProps = {\n  passwordHint?: string;\n};\n\nconst VerificationMonetizationModal = ({\n  modal,\n  passwordHint,\n}: OwnProps & StateProps) => {\n  const {\n    closeMonetizationVerificationModal, clearMonetizationVerificationError, processMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    if (!renderingModal) return;\n    processMonetizationRevenueWithdrawalUrl({\n      peerId: renderingModal.chatId,\n      currentPassword: password,\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationVerificationError();\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeMonetizationVerificationModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('CheckPasswordTitle')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('CheckPasswordPlaceholder')}\n            error={renderingModal?.errorKey && lang.withRegular(renderingModal.errorKey)}\n            description={lang('CheckPasswordDescription')}\n            clearError={handleClearError}\n            isLoading={renderingModal?.isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      passwordHint,\n    };\n  },\n)(VerificationMonetizationModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MKdSUg2P\",\"chatItem\":\"qEIwBtp0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserFrozen, selectIsCurrentUserPremium, selectStickerSet, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './EmojiStatusAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['emojiStatusAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n  stickerSet?: ApiStickerSet;\n  isPremium?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst INTERVAL = 3200;\n\nconst EmojiStatusAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n  stickerSet,\n  isPremium,\n  isAccountFrozen,\n}) => {\n  const {\n    closeEmojiStatusAccessModal,\n    toggleUserEmojiStatusPermission,\n    sendWebAppEvent,\n    openPremiumModal,\n    loadDefaultStatusIcons,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [currentStatusIndex, setCurrentStatusIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (isOpen && !stickerSet?.stickers && !isAccountFrozen) {\n      loadDefaultStatusIcons();\n    }\n  }, [isOpen, stickerSet, isAccountFrozen]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !stickerSet?.stickers) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: stickerSet.stickers[currentStatusIndex].id,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, stickerSet, currentStatusIndex]);\n\n  const totalCount = stickerSet?.stickers?.length;\n  useInterval(\n    () => {\n      if (!totalCount) return;\n      setCurrentStatusIndex((prevIndex) => (prevIndex + 1) % totalCount);\n    },\n    totalCount ? INTERVAL : undefined,\n  );\n\n  const renderPickerItem = useLastCallback(() => {\n    return (\n      <PeerChip\n        withEmojiStatus\n        className={styles.chatItem}\n        itemClassName={styles.itemName}\n        mockPeer={mockPeerWithStatus}\n      />\n    );\n  });\n\n  const confirmHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      if (isPremium) {\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'allowed',\n            },\n          },\n        });\n        toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: true, isBotAccessEmojiGranted: true });\n      } else {\n        openPremiumModal();\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'cancelled',\n            },\n          },\n        });\n      }\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'emoji_status_access_requested',\n          eventData: {\n            status: 'cancelled',\n          },\n        },\n      });\n    }\n    if (isPremium) {\n      toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: false });\n    }\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('EmojiStatusAccessText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      contentClassName={styles.content}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderPickerItem()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const isPremium = selectIsCurrentUserPremium(global);\n    const stickerSet = global.defaultStatusIconsId ? selectStickerSet(global, global.defaultStatusIconsId) : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      currentUser,\n      stickerSet,\n      isPremium,\n      isAccountFrozen,\n    };\n  },\n)(EmojiStatusAccessModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { getGeolocationStatus } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './LocationAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['locationAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst LocationAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n}) => {\n  const {\n    closeLocationAccessModal, toggleUserLocationPermission, sendWebAppEvent,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const confirmHandler = useLastCallback(async () => {\n    const geolocationData = await getGeolocationStatus();\n    const { geolocation } = geolocationData;\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: true,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: true,\n            latitude: geolocation?.latitude,\n            longitude: geolocation?.longitude,\n            altitude: geolocation?.altitude,\n            course: geolocation?.heading,\n            speed: geolocation?.speed,\n            horizontal_accuracy: geolocation?.accuracy,\n            vertical_accuracy: geolocation?.accuracy,\n          },\n        },\n      });\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: false,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: false,\n          },\n        },\n      });\n    }\n  });\n\n  const renderInfo = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return (\n      <div className={styles.avatars}>\n        <Avatar\n          size=\"large\"\n          peer={currentUser}\n        />\n        <Icon name=\"next\" className={styles.arrow} />\n        <Avatar\n          size=\"large\"\n          peer={modal.bot}\n        />\n      </div>\n    );\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('LocationPermissionText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderInfo()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n\n    return {\n      currentUser,\n    };\n  },\n)(LocationAccessModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatars\":\"CGPoDaLo\",\"arrow\":\"pzERgD5x\"};","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"root\":\"njPBcVYr\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 56;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsored, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsored({ peerId: chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        text={lang('lng_report_sponsored_reported_link')}\n        url={lang('ReportAd.Help_URL')}\n      />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      className={styles.root}\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"kq9LwNTZ\",\"root\":\"E1bGWeON\",\"content\":\"tNysQgHL\",\"modalTitle\":\"Lj_ezEWU\",\"header\":\"AlMDkK7c\",\"optionText\":\"FU8m6NUU\",\"option\":\"RoxwMzvA\",\"optionButton\":\"Z6skYdvb\",\"sectionTitle\":\"GSfUuTet\",\"description\":\"zwfjNhF9\",\"title\":\"QawchdxB\",\"hasDepth\":\"CV7kzv9H\",\"titleMultiline\":\"OYFbu8fQ\",\"subtitle\":\"OUFckTb7\",\"transition\":\"n2VxPirU\",\"block\":\"KpptZ3Mk\",\"optionInfo\":\"yc3szGcx\",\"reportIcon\":\"kO8JC4gK\"};","import type { ChangeEvent } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport TextArea from '../../ui/TextArea';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportModal.module.scss';\n\nconst MAX_DESCRIPTION = 512;\nconst ADDED_PADDING = 20;\n\nexport type OwnProps = {\n  modal: TabState['reportModal'];\n};\n\nconst ReportModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportMessages, reportStory, closeReportModal, openPreviousReportModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const [text, setText] = useState('');\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    if (!messageIds) return;\n    switch (subject) {\n      case 'message':\n        reportMessages({ chatId: chatId!, messageIds, option });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds[0], peerId: peerId!, option,\n        });\n        break;\n    }\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal?.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    openPreviousReportModal();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeReportModal();\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        {renderingDepth ? (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Back')}\n            onClick={handleBackClick}\n          >\n            <Icon name=\"arrow-left\" />\n          </Button>\n        ) : (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleCloseClick}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={buildClassName(styles.title, renderingDepth && styles.hasDepth)}>\n            {renderingSection?.options\n              ? lang(modal?.subject === 'story' ? 'ReportStory' : 'Report') : renderingSection?.title}\n          </h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.options, renderingSection?.subtitle, renderingSection?.title]);\n\n  const handleTextChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  });\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  const closeReportMessageModalHandler = useLastCallback(() => {\n    setText('');\n    closeReportModal();\n  });\n\n  const sendMessageReportHandler = useLastCallback(() => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    switch (subject) {\n      case 'message':\n        reportMessages({\n          chatId: chatId!, messageIds, option: renderingSection?.option, description: text,\n        });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds?.[0], peerId: peerId!, option: renderingSection?.option, description: text,\n        });\n        break;\n    }\n    closeReportMessageModalHandler();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      header={header}\n      onClose={closeReportMessageModalHandler}\n      contentClassName={styles.content}\n      className={buildClassName(styles.root, modal?.subject === 'story' && 'component-theme-dark')}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          {renderingSection?.options\n            ? <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3> : undefined}\n          {renderingSection?.options?.map((option) => (\n            <ListItem\n              narrow\n              nonInteractive\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n          {renderingSection?.option ? (\n            <div className={styles.block}>\n              <AnimatedIconWithPreview\n                tgsUrl={LOCAL_TGS_URLS.Report}\n                size={100}\n                className={styles.reportIcon}\n                nonInteractive\n                forceAlways\n                noLoop={false}\n              />\n              <TextArea\n                id=\"option\"\n                className={styles.optionInfo}\n                label={renderingSection.isOptional ? lang('Report2CommentOptional') : lang('Report2Comment')}\n                onChange={handleTextChange}\n                value={text}\n                maxLength={MAX_DESCRIPTION}\n                maxLengthIndicator={(MAX_DESCRIPTION - text.length).toString()}\n                noReplaceNewlines\n              />\n              <Button\n                size=\"smaller\"\n                onClick={sendMessageReportHandler}\n                disabled={!renderingSection.isOptional ? !text.length : undefined}\n              >{lang('ReportSend')}\n              </Button>\n            </div>\n          ) : undefined}\n        </div>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Rzj2LMLf\",\"content\":\"Ve4u2KVI\",\"modalTitle\":\"E42tgAwD\",\"container\":\"pNSCKAVN\",\"header\":\"P1fPh6h8\",\"actionMessageView\":\"McJgXCtB\",\"info\":\"xWnXsG7q\",\"background\":\"_6w75ldP\",\"customBgImage\":\"CZkpv8n0\",\"customBgColor\":\"VJAYrDF_\",\"withTransition\":\"lElCwweL\",\"blurred\":\"m8xzfVvU\",\"withRightColumn\":\"rJCyBVMB\"};","import React, {\n  type FC,\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { getMockPreparedMessageFromResult, getUserFullName } from '../../../global/helpers';\nimport { selectTheme, selectThemeValues, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Message from '../../middle/message/Message';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PreparedMessageModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['preparedMessageModal'];\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  bot?: ApiUser;\n};\n\nconst PreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  customBackground,\n  backgroundColor,\n  bot,\n}) => {\n  const {\n    closePreparedInlineMessageModal, sendWebAppEvent, openSharePreparedMessageModal,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const { webAppKey, message, botId } = modal || {};\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  const handleOpenClick = useLastCallback(() => {\n    if (webAppKey && botId && message) {\n      openSharePreparedMessageModal({\n        webAppKey,\n        message,\n      });\n      closePreparedInlineMessageModal();\n    }\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closePreparedInlineMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.header}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang('Close')}\n          onClick={handleCloseClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={buildClassName('modal-title', styles.modalTitle)}>\n          {lang('BotShareMessage')}\n        </h3>\n      </div>\n    );\n  }, [lang, modal]);\n\n  const localMessage = useMemo(() => {\n    if (!botId || !message || !webAppKey) return undefined;\n    return getMockPreparedMessageFromResult(botId, message);\n  }, [botId, message, webAppKey]);\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  return (\n    <Modal\n      dialogRef={containerRef}\n      isOpen={isOpen}\n      header={header}\n      onClose={handleCloseClick}\n      className={styles.root}\n      contentClassName={styles.content}\n    >\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        {localMessage && (\n          <Message\n            key={botId}\n            message={localMessage}\n            threadId={MAIN_THREAD_ID}\n            messageListType=\"thread\"\n            noComments\n            noReplies\n            appearanceOrder={0}\n            isJustAdded={false}\n            isFirstInGroup\n            isLastInGroup\n            isLastInList={false}\n            isFirstInDocumentGroup={false}\n            isLastInDocumentGroup={false}\n          />\n        )}\n      </div>\n      <div className={styles.container}>\n        <p className={styles.info}>\n          {lang('WebAppShareMessageInfo', { user: getUserFullName(bot) })}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={handleOpenClick}\n        >\n          {lang('BotShareMessageShare')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }) => {\n    const theme = selectTheme(global);\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = selectThemeValues(global, theme) || {};\n    const bot = modal ? selectUser(global, modal?.botId) : undefined;\n\n    return {\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      bot,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PreparedMessageModal));\n","import React, {\n  type FC,\n  memo, useEffect,\n} from '../../../lib/teact/teact';\nimport {\n  getActions, getGlobal, withGlobal,\n} from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer, selectTabState,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePaidMessageConfirmation from '../../middle/composer/hooks/usePaidMessageConfirmation';\n\nimport PaymentMessageConfirmDialog from '../../common/PaymentMessageConfirmDialog';\nimport RecipientPicker from '../../common/RecipientPicker';\n\nexport type OwnProps = {\n  modal: TabState['sharePreparedMessageModal'];\n};\n\ntype StateProps = {\n  isPaymentMessageConfirmDialogOpen: boolean;\n  starsBalance: number;\n  isStarsBalanceModalOpen: boolean;\n};\n\nexport type SendParams = {\n  peerName?: string;\n  starsForSendMessage: number;\n};\n\nconst SharePreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal, isPaymentMessageConfirmDialogOpen, isStarsBalanceModalOpen, starsBalance,\n}) => {\n  const {\n    closeSharePreparedMessageModal,\n    sendInlineBotResult,\n    sendWebAppEvent,\n    showNotification,\n    updateSharePreparedMessageModalSendArgs,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const {\n    message, filter, webAppKey, pendingSendArgs,\n  } = modal || {};\n\n  const {\n    starsForSendMessage,\n  } = pendingSendArgs || {};\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForSendMessage || 0, isStarsBalanceModalOpen, starsBalance);\n\n  const handleClose = useLastCallback(() => {\n    closeSharePreparedMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const handleSend = useLastCallback((id: string, threadId?: ThreadId) => {\n    if (message && webAppKey) {\n      const global = getGlobal();\n      const peer = selectPeer(global, id);\n      sendInlineBotResult({\n        chatId: id,\n        threadId: threadId || MAIN_THREAD_ID,\n        id: message.result.id,\n        queryId: message.result.queryId,\n      });\n      if (!starsForSendMessage) {\n        showNotification({\n          message: lang('BotSharedToOne', getPeerTitle(lang, peer!)),\n        });\n      }\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_sent',\n        },\n      });\n      closeSharePreparedMessageModal();\n      updateSharePreparedMessageModalSendArgs({ args: undefined });\n    }\n  });\n\n  const handleSelectRecipient = useLastCallback((id: string, threadId?: ThreadId) => {\n    updateSharePreparedMessageModalSendArgs({ args: { peerId: id, threadId } });\n  });\n\n  const handleSendWithPaymentConfirmation = useLastCallback(() => {\n    if (pendingSendArgs) {\n      handleActionWithPaymentConfirmation(handleSend, pendingSendArgs.peerId, pendingSendArgs.threadId);\n    }\n  });\n\n  const handleClosePaymentMessageConfirmDialog = useLastCallback(() => {\n    closeConfirmModalPayForMessage();\n    updateSharePreparedMessageModalSendArgs({ args: undefined });\n  });\n\n  useEffect(() => {\n    if (pendingSendArgs) {\n      handleSendWithPaymentConfirmation();\n    }\n  }, [pendingSendArgs]);\n\n  const global = getGlobal();\n  const peer = pendingSendArgs ? selectPeer(global, pendingSendArgs.peerId) : undefined;\n  const peerName = peer ? getPeerTitle(lang, peer) : undefined;\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <>\n      <RecipientPicker\n        isOpen={isOpen}\n        searchPlaceholder={lang('Search')}\n        filter={filter}\n        onSelectRecipient={handleSelectRecipient}\n        onClose={handleClose}\n        onCloseAnimationEnd={unmarkIsShown}\n        isLowStackPriority\n      />\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={handleClosePaymentMessageConfirmDialog}\n        userName={peerName}\n        messagePriceInStars={starsForSendMessage || 0}\n        messagesCount={1}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { isPaymentMessageConfirmDialogOpen } = tabState;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    return {\n      isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n    };\n  },\n)(SharePreparedMessageModal));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"_YNfwDqt\",\"root\":\"SeaF_shb\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"button\":\"goI3MITH\",\"options\":\"b6847Kh3\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"proceedButtons\":\"L4YzeG91\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  getSendersFromSelectedMessages,\n  selectBot,\n  selectCanDeleteSelectedMessages,\n  selectChat,\n  selectChatFullInfo, selectIsChatWithBot,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport AvatarList from './AvatarList';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  messageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  onConfirm?: NoneToVoidFunction;\n  canBanUsers?: boolean;\n  isCreator?: boolean;\n  linkedChatId?: string;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isSuperGroup,\n  isSchedule,\n  currentUserId,\n  messageIds,\n  isCreator,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  chatBot,\n  adminMembersById,\n  canBanUsers,\n  linkedChatId,\n}) => {\n  const {\n    closeDeleteMessageModal,\n    deleteMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n    deleteParticipantHistory,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [peerIdsToDeleteAll, setPeerIdsToDeleteAll] = useState<string[] | undefined>(undefined);\n  const [peerIdsToBan, setPeerIdsToBan] = useState<string[] | undefined>(undefined);\n  const [peerIdsToReportSpam, setPeerIdsToReportSpam] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const [shouldDeleteForAll, setShouldDeleteForAll] = useState(true);\n\n  const peerList = useMemo(() => {\n    if (isChannel || !messageIds || !chat) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n    const senderArray = getSendersFromSelectedMessages(global, chat.id, messageIds);\n    return senderArray ? unique(senderArray)\n      .filter((peer) => peer?.id !== chat?.id && peer?.id !== linkedChatId) : MEMO_EMPTY_ARRAY;\n  }, [chat, isChannel, linkedChatId, messageIds]);\n\n  const buildNestedOptionListWithAvatars = useLastCallback(() => {\n    return peerList.map((member) => {\n      return {\n        value: `${member.id}`,\n        label: getPeerTitle(lang, member) || '',\n        leftElement: <Avatar size=\"small\" peer={member} />,\n      };\n    });\n  });\n\n  const peerListToDeleteAll = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== linkedChatId && peer.id !== currentUserId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToReportSpam = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== currentUserId && peer.id !== linkedChatId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToBan = useMemo(() => {\n    const isCurrentUserInList = peerList.some((peer) => peer.id === currentUserId);\n    const shouldReturnEmpty = !canBanUsers || isCurrentUserInList;\n\n    if (shouldReturnEmpty) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return peerList.filter((peer) => {\n      const isAdmin = adminMembersById?.[peer.id];\n      return isCreator || !isAdmin;\n    });\n  }, [peerList, isCreator, currentUserId, canBanUsers, adminMembersById]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return Boolean(peerListToDeleteAll.length || peerListToReportSpam.length || peerListToBan.length);\n  }, [peerListToDeleteAll, peerListToReportSpam, peerListToBan]);\n\n  const shouldShowOption = shouldShowAdditionalOptions\n    && !canDeleteForAll && !isSchedule && isSuperGroup;\n\n  const peerNames = useMemo(() => {\n    if (!peerList || isSchedule) return {};\n    return buildCollectionByCallback(peerList, (peer) => [peer.id, getPeerTitle(lang, peer)]);\n  }, [isSchedule, lang, peerList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'spam' : peerList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, linkedChatId, currentUserId]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'delete_all' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(peerNames)[0]),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, peerNames, linkedChatId, currentUserId]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'ban' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(peerNames)[0])),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, messageIds, peerList, peerNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const filterMessageIdByPeerId = useLastCallback((peerIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(global, chat.id, msgId);\n      return sender && peerIds.includes(sender.id);\n    });\n  });\n\n  const handleReportSpam = useLastCallback((userMessagesMap: Record<string, number[]>) => {\n    Object.entries(userMessagesMap).forEach(([userId, messageIdList]) => {\n      if (messageIdList.length) {\n        reportChannelSpam({\n          participantId: userId,\n          chatId: chat!.id,\n          messageIds: messageIdList,\n        });\n      }\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteAllPeerMessages = useLastCallback((peerIdList: string[]) => {\n    if (!chat) return;\n    peerIdList.forEach((peerId) => {\n      deleteParticipantHistory({ peerId, chatId: chat.id });\n    });\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageList = useLastCallback(() => {\n    if (!chat || !messageIds) return;\n\n    onConfirm?.();\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (shouldShowOption) {\n      if (peerIdsToReportSpam) {\n        const global = getGlobal();\n        const peerIdList = peerIdsToReportSpam.filter((option) => !Number.isNaN(Number(option)));\n        const messageList = messageIds!.reduce<Record<string, number[]>>((acc, msgId) => {\n          const peer = selectSenderFromMessage(global, chat.id, msgId);\n          if (peer && peerIdList.includes(peer.id)) {\n            if (!acc[peer.id]) {\n              acc[peer.id] = [];\n            }\n            acc[peer.id].push(Number(msgId));\n          }\n          return acc;\n        }, {});\n\n        handleReportSpam(messageList);\n      }\n\n      if (peerIdsToDeleteAll) {\n        const peerIdList = peerIdsToDeleteAll.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteAllPeerMessages(peerIdList);\n      }\n\n      if (peerIdsToBan && !havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteMember(peerIdList);\n        const filteredMessageIdList = filterMessageIdByPeerId(peerIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (peerIdsToBan && havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleUpdateChatMemberBannedRights(peerIdList);\n      }\n\n      if (!peerIdsToReportSpam || !peerIdsToDeleteAll || !peerIdsToBan) {\n        deleteMessages({ messageIds, shouldDeleteForAll });\n      }\n    } else {\n      deleteMessages({ messageIds, shouldDeleteForAll });\n    }\n\n    closeDeleteMessageModal();\n    exitMessageSelectMode();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setPeerIdsToReportSpam(undefined);\n      setPeerIdsToDeleteAll(undefined);\n      setPeerIdsToBan(undefined);\n      setShouldDeleteForAll(true);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOption && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOption && (\n          <AvatarList\n            size=\"small\"\n            peers={peerList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOption ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', messageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={setPeerIdsToReportSpam}\n          selected={peerIdsToReportSpam}\n          nestedCheckbox={messageIds && peerList.length >= 2}\n        />\n        {peerListToDeleteAll?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_DELETE_OPTION}\n            onChange={setPeerIdsToDeleteAll}\n            selected={peerIdsToDeleteAll}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n        {peerListToBan?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={setPeerIdsToBan}\n            selected={peerIdsToBan}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', peerList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageList}\n      className={styles.root}\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {shouldShowOption && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              peerIdsToBan && canBanUsers ? (\n                <ListItem\n                  narrow\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(canDeleteForAll || chatBot || !shouldShowOption) && (\n          <>\n            <p>{messageIds && messageIds.length > 1\n              ? lang('AreYouSureDeleteFewMessages') : lang('AreYouSureDeleteSingleMessage')}\n            </p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{oldLang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{oldLang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        {canDeleteForAll && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={contactName ? renderText(oldLang('DeleteMessagesOptionAlso', contactName))\n              : oldLang('Conversation.DeleteMessagesForEveryone')}\n            checked={shouldDeleteForAll}\n            onCheck={setShouldDeleteForAll}\n          />\n        )}\n        <div className={buildClassName('dialog-buttons',\n          isMediaDropdownOpen ? styles.dialogButtons : styles.proceedButtons)}\n        >\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageList}>\n            {shouldShowOption ? oldLang('DeleteProceedBtn') : lang('Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const messageIds = deleteMessageModal?.messageIds;\n    const chatId = deleteMessageModal?.chatId;\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global, messageIds);\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const linkedChatId = chatFullInfo?.linkedChatId;\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const isSchedule = deleteMessageModal?.isSchedule;\n    const onConfirm = deleteMessageModal?.onConfirm;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const chatBot = Boolean(chat && !isSystemBot(chat.id) && selectBot(global, chat.id));\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && getHasAdminRight(chat, 'banUsers');\n    const isCreator = chat?.isCreator;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && (isChatSuperGroup(chat) || isChannel);\n\n    return {\n      chat,\n      isChannel,\n      isSuperGroup,\n      messageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      canBanUsers,\n      linkedChatId,\n      isSchedule,\n      isCreator,\n      onConfirm,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages, selectCurrentChat,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n  shouldWarnAboutSvg?: boolean;\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  chat,\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n    reportMessages,\n    openDeleteMessageModal,\n    setSharedSettingOption,\n  } = getActions();\n  const lang = useOldLang();\n\n  useCopySelectedMessages(isActive);\n\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    openDeleteMessageModal({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n      isSchedule,\n    });\n  });\n\n  useEffect(() => {\n    return isActive && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? handleDelete : undefined,\n        onDelete: canDeleteMessages ? handleDelete : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, handleDelete, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const handleMessageDownload = useLastCallback(() => {\n    if (shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: false });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const openMessageReport = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    reportMessages({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n    });\n    exitMessageSelectMode();\n  });\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <Icon name={icon} />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className={className}>\n        <div className=\"MessageSelectToolbar-inner\">\n          <Button\n            color=\"translucent\"\n            round\n            onClick={handleExitMessageSelectMode}\n            ariaLabel=\"Exit select mode\"\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n            {formattedMessagesCount}\n          </span>\n\n          {Boolean(selectedMessagesCount) && (\n            <div className=\"MessageSelectToolbar-actions\">\n              {messageListType !== 'scheduled' && canForwardMessages && (\n                renderButton(\n                  'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n                )\n              )}\n              {canReportMessages && (\n                renderButton('flag', lang('Conversation.ReportMessages'), openMessageReport)\n              )}\n              {canDownloadMessages && !hasProtectedMessage && (\n                renderButton('download', lang('lng_media_download'), handleMessageDownload)\n              )}\n              {!hasProtectedMessage && (\n                renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n              )}\n              {canDeleteMessages && (\n                renderButton('delete', lang('EditAdminGroupDeleteMessages'), handleDelete, true)\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const chat = selectCurrentChat(global);\n\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall || tabState.reportModal\n      || tabState.deleteMessageModal);\n\n    return {\n      chat,\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n      shouldWarnAboutSvg,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport Icon from '../common/icons/Icon';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={oldLang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <Icon name=\"heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(lang, reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(lang, count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={oldLang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <Icon name=\"heart-outline\" className=\"status-icon\" />\n                          {formatDateAtTime(oldLang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(oldLang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {oldLang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport { IS_ANDROID } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PeerChip\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","/* eslint-disable no-null/no-null */\n/* eslint-disable consistent-return */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable max-len */\n/* eslint-disable react/jsx-no-bind */\n/* eslint-disable no-console */\n\nimport React, { useState } from 'react';\nimport {\n  type Dispatch,\n  memo,\n  type SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\nimport type { UseChatHelpers } from '@ai-sdk/react';\nimport type {\n  Message,\n} from 'ai';\nimport cx from 'classnames';\nimport { toast } from 'sonner';\nimport { useLocalStorage, useWindowSize } from 'usehooks-ts';\n\nimport { sanitizeUIMessages } from '../../../lib/utils';\nimport { Button } from '../component/button';\nimport { Textarea } from '../component/textarea';\nimport { StopIcon } from '../icons';\n\nfunction PureMultimodalInput({\n  status,\n  stop,\n  setMessages,\n  handleSearch,\n  className,\n}: {\n  status: UseChatHelpers['status'];\n  stop: () => void;\n  setMessages: Dispatch<SetStateAction<Array<Message>>>;\n  handleSearch: (inputValue:string)=>void;\n  className?: string;\n}) {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const { width } = useWindowSize();\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      adjustHeight();\n    }\n  }, []);\n\n  const adjustHeight = () => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight + 2}px`;\n    }\n  };\n\n  const resetHeight = () => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = '98px';\n    }\n  };\n\n  const [localStorageInput, setLocalStorageInput] = useLocalStorage(\n    'input',\n    '',\n  );\n\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      const domValue = textareaRef.current.value;\n      // Prefer DOM value over localStorage to handle hydration\n      const finalValue = domValue || localStorageInput || '';\n      // setInput(finalValue);\n      setInputValue(finalValue);\n      adjustHeight();\n    }\n    // Only run once after hydration\n    // eslint-disable-next-line react-hooks/exhaustive-deps, react-hooks-static-deps/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLocalStorageInput(inputValue);\n  }, [inputValue, setLocalStorageInput]);\n\n  const handleInput = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setInputValue(event.target.value);\n    adjustHeight();\n  };\n\n  const submitForm = useCallback(() => {\n    if (!inputValue) {\n      return;\n    }\n    handleSearch(inputValue);\n    setInputValue('');\n    setLocalStorageInput('');\n    resetHeight();\n\n    if (width && width > 768) {\n      textareaRef.current?.focus();\n    }\n  }, [handleSearch, inputValue, setLocalStorageInput, width]);\n\n  return (\n    <div className=\"relative w-full mx-[22px] flex flex-col gap-4\">\n      <Textarea\n        ref={textareaRef}\n        placeholder=\"Send a message...\"\n        value={inputValue}\n        onChange={handleInput}\n        className={cx(\n          'min-h-[24px] h-[76px] overflow-hidden resize-none rounded-2xl !text-base bg-muted pb-10 focus-visible:!ring-0 !ring-offset-0',\n          className,\n        )}\n        rows={2}\n        autoFocus\n        onKeyDown={(event) => {\n          if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n\n            if (status !== 'ready') {\n              toast.error('Please wait for the model to finish its response!');\n            } else {\n              submitForm();\n            }\n          }\n        }}\n      />\n\n      <div className=\"absolute bottom-0 right-0 p-2 w-fit flex flex-col justify-end\">\n        {status === 'submitted' ? (\n          <StopButton stop={stop} setMessages={setMessages} />\n        ) : (\n          <SendButton\n            input={inputValue}\n            submitForm={submitForm}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport const AISearchInput = memo(\n  PureMultimodalInput,\n  (prevProps, nextProps) => {\n    if (prevProps.status !== nextProps.status) return false;\n\n    return true;\n  },\n);\n\nfunction PureStopButton({\n  stop,\n  setMessages,\n}: {\n  stop: () => void;\n  setMessages: Dispatch<SetStateAction<Array<Message>>>;\n}) {\n  return (\n    <Button\n      className=\"rounded-full p-1.5 h-fit border dark:border-zinc-600\"\n      onClick={(event) => {\n        event.preventDefault();\n        stop();\n        setMessages((messages) => sanitizeUIMessages(messages));\n      }}\n    >\n      <StopIcon size={14} />\n    </Button>\n  );\n}\n\nconst StopButton = memo(PureStopButton);\n\nfunction PureSendButton({\n  submitForm,\n  input,\n}: {\n  submitForm: () => void;\n  input: string;\n}) {\n  return (\n    <Button\n      className=\"!px-0 !py-0 !w-[24px] !h-[24px] !bg-transparent \"\n      onClick={(event) => {\n        event.preventDefault();\n        submitForm();\n      }}\n      disabled={input.length === 0}\n    >\n      {/* <ArrowUpIcon size={14} /> */}\n      <i className=\"icon icon-send text-[#B27AFF] text-[24px]\" />\n    </Button>\n  );\n}\n\nconst SendButton = memo(PureSendButton, (prevProps, nextProps) => {\n  if (prevProps.input !== nextProps.input) return false;\n  return true;\n});\n","/* eslint-disable max-len */\nimport React from 'react';\n\nimport SerenaIcon from '../assets/serena.png';\n\nconst suggestions = [\n  'Who is interested in early investments in GameFi projects?',\n  'Which meme KOLs are worth following?',\n  'Which of my contacts interacts with Paulo the most?',\n  'Which friends do Paulo and I share?',\n  'Find messages about Twitter Space collaboration.',\n];\nconst AISearchSugesstions = (props:{ handleSearch: (query:string)=>void }) => {\n  const { handleSearch } = props;\n  return (\n    <div className=\"flex flex-col mx-[22px]\">\n      <img className=\"w-[52px] h-[52px] rounded-full\" src={SerenaIcon} alt=\"\" />\n      <span className=\"font-bold text-[24px]\">AI Search</span>\n      <span className=\"mb-[12px] text-[14px]\">Intelligent deep search experience.</span>\n      {suggestions.map((item) => {\n        return (\n          <div className=\"px-[10px] py-[6px] mb-[8px] rounded-[8px] bg-[#F8F2FF] text-[14px]\" onClick={() => handleSearch(item)}>\n            {item}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AISearchSugesstions;\n","/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, {\n  useCallback, useEffect, useRef, useState,\n} from 'react';\nimport { useChat } from '@ai-sdk/react';\nimport type { Attachment, UIMessage } from 'ai';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getGlobal } from '../../../global';\n\nimport type { InfiniteScrollRef } from '../component/InfiniteScroll';\n\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport { Messages } from '../messages';\nimport { ChataiStores } from '../store';\nimport { parseMessage2StoreMessage, parseStoreMessage2Message } from '../store/messages-store';\nimport { sendGAEvent } from '../utils/analytics';\nimport { messageEmbeddingStore } from '../vector-store';\n\nimport { InfiniteScroll } from '../component/InfiniteScroll';\nimport { AISearchInput } from './AISearchInput';\nimport AISearchSugesstions from './AISearchSugesstions';\n\nconst GLOBAL_SEARCH_CHATID = '777889';\n\nexport const AISearch = () => {\n  const global = getGlobal();\n  const messageListRef = useRef<InfiniteScrollRef | null>(null);\n  const [attachments, setAttachments] = useState<Array<Attachment>>([]);\n  const [pageInfo, setPageInfo] = useState<{ lastTime: number | undefined; hasMore: boolean }>({ lastTime: undefined, hasMore: true });\n  const {\n    messages, setMessages, append, status, input, setInput, stop, handleSubmit,\n  } = useChat({\n    id: GLOBAL_SEARCH_CHATID,\n    api: 'https://telegpt-three.vercel.app/chat',\n    sendExtraMessageFields: true,\n  });\n\n  useEffect(() => {\n    ChataiStores.message?.getMessages(GLOBAL_SEARCH_CHATID, undefined, 20)?.then((res) => {\n      if (res.messages) {\n        const localChatAiMessages = parseStoreMessage2Message(res.messages);\n        setMessages((prev) => [...localChatAiMessages, ...prev]);\n      }\n      setPageInfo({\n        lastTime: res.lastTime,\n        hasMore: res.hasMore,\n      });\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (messages.length > 0 && status === 'ready') {\n      const parsedMessage = parseMessage2StoreMessage(GLOBAL_SEARCH_CHATID, messages);\n      ChataiStores.message?.storeMessages([...parsedMessage]);\n    }\n  }, [status, messages]);\n\n  const handleLoadMore = useCallback(() => {\n    return new Promise<void>((resolve) => {\n      ChataiStores.message?.getMessages(GLOBAL_SEARCH_CHATID, pageInfo?.lastTime, 20)?.then((res) => {\n        if (res.messages) {\n          const localChatAiMessages = parseStoreMessage2Message(res.messages);\n          setMessages((prev) => [...localChatAiMessages, ...prev]);\n        }\n        setPageInfo({\n          lastTime: res.lastTime,\n          hasMore: res.hasMore,\n        });\n        resolve();\n      });\n    });\n  }, [pageInfo?.lastTime, setMessages]);\n\n  //   const deleteMessage = useCallback((messageId: string) => {\n  //     ChataiStores.message?.delMessage(messageId).then(() => {\n  //       setLocalChatAiMessages((prev) => prev.filter((message) => message.id !== messageId));\n  //       setMessages((prev) => prev.filter((message) => message.id !== messageId));\n  //     });\n  //   }, [setMessages]);\n\n  const searchGroup = useCallback(async (query: string) => {\n    const vectorSearchResults = await messageEmbeddingStore.similaritySearch({\n      query,\n      k: 100,\n      filterOptions: {\n        include: {\n          metadata: {\n            chatType: 'group',\n          },\n        },\n      },\n    });\n    const similarItems = vectorSearchResults.similarItems;\n    let searchResult = null;\n    if (similarItems.length > 0) {\n      const chatIds = Array.from(new Set(similarItems.map((item) => {\n        if (item.score > 0.7) {\n          return (item?.metadata as { chatId: string })?.chatId;\n        }\n        return undefined;\n      }).filter(Boolean)));\n      if (chatIds.length > 0) {\n        searchResult = JSON.stringify(chatIds);\n      }\n    }\n    if (searchResult) {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: searchResult,\n        createdAt: new Date(),\n        parts: [],\n        annotations: [{\n          type: 'group-search',\n        }],\n      };\n      setMessages((prev) => [...prev, message]);\n    } else {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: 'No relevant group was found',\n        createdAt: new Date(),\n        parts: [],\n      };\n      setMessages((prev) => [...prev, message]);\n    }\n  }, [setMessages]);\n\n  const searchUser = useCallback(async (query: string) => {\n    const vectorSearchResults = await messageEmbeddingStore.similaritySearch({\n      query,\n      k: 100,\n      filterOptions: {\n        include: {\n          metadata: {\n            chatType: 'private',\n          },\n        },\n      },\n    });\n    const similarItems = vectorSearchResults.similarItems;\n    let searchResult = null;\n    if (similarItems.length > 0) {\n      const senderIds = Array.from(new Set(similarItems.map((item) => {\n        if (item.score > 0.7) {\n          return (item?.metadata as { senderId: string })?.senderId;\n        }\n        return undefined;\n      }).filter(Boolean)));\n      if (senderIds.length > 0) {\n        searchResult = JSON.stringify(senderIds);\n      }\n    }\n    if (searchResult) {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: searchResult,\n        createdAt: new Date(),\n        parts: [],\n        annotations: [{\n          type: 'user-search',\n        }],\n      };\n      setMessages((prev) => [...prev, message]);\n    } else {\n      const message: UIMessage = {\n        id: uuidv4(),\n        role: 'assistant',\n        content: 'No relevant users was found',\n        createdAt: new Date(),\n        parts: [],\n      };\n      setMessages((prev) => [...prev, message]);\n    }\n  }, [setMessages]);\n  const searchMessage = useCallback(async (query: string) => {\n    const vectorSearchResults = await messageEmbeddingStore.similaritySearch({\n      query,\n      k: 100,\n    });\n    const similarItems = vectorSearchResults.similarItems;\n    if (similarItems.length > 0) {\n      const messageList = similarItems.map((item) => {\n        const { chatId, senderId } = item.metadata as { chatId:string;senderId:string };\n        const chat = selectChat(global, chatId);\n        if (chat) {\n          const peer = senderId ? selectUser(global, senderId) : undefined;\n          return {\n            chatId,\n            chatTitle: chat?.title ?? 'Unknown',\n            senderName: peer ? `${peer.firstName || ''} ${peer.lastName || ''}` : '',\n            content: item.text,\n          };\n        }\n        return null;\n      });\n      append({\n        role: 'user',\n        content: `你是一个专业的聊天记录分析师,用户输入的关键词是${query},下面是根据关键词检索出来的相关的聊天记录,请对此加以总结:\n          # 总结消息偏好:\n              ## 根据消息的内容选择合适的语种进行总结\n              ## 过滤所有的无意义消息；\n              ## 尽量提取关键信息(如任务、问题、请求等),并简要总结。\n              ## 为保证输出内容的完整性,尽量精简总结内容；\n              ## 主话题不超过5个,子话题总数不超过15个\n          # 消息内容\n          ${JSON.stringify(messageList)}  \n        `,\n        id: Math.random().toString(),\n        annotations: [{\n          isAuxiliary: true,\n        }],\n      });\n    }\n  }, [append, global]);\n\n  const toolsHitCheck = useCallback((inputValue: string) => {\n    fetch('https://telegpt-three.vercel.app/tool-check', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        messages: [{\n          id: uuidv4(),\n          content: inputValue,\n          role: 'user',\n        }],\n      }),\n    }).then((res) => res.json())\n      .then((toolResults) => {\n        if (toolResults && toolResults.length > 0) {\n          toolResults.forEach((toolCall: any) => {\n            if (toolCall.toolName === 'checkIsSearchGroup') {\n              searchGroup(toolCall.result.keyword);\n            } else if (toolCall.toolName === 'checkIsSearchUser') {\n              searchUser(toolCall.result.keyword);\n            } else if (toolCall.toolName === 'nullTool') {\n              // eslint-disable-next-line no-console\n              console.log('没有命中工具');\n              searchMessage(inputValue);\n            }\n          });\n        }\n      });\n  }, [searchGroup, searchMessage, searchUser]);\n\n  const handleSearch = useCallback((query: string) => {\n    setMessages((messages) => {\n      return [...messages, {\n        role: 'user',\n        content: query,\n        id: Math.random().toString(),\n        createdAt: new Date(),\n      }];\n    });\n    toolsHitCheck(query);\n    messageListRef.current?.scrollToBottom();\n    sendGAEvent('ai_search');\n  }, [setMessages, toolsHitCheck]);\n\n  return (\n    <div className=\"pb-[28px] flex-1 flex flex-col h-full gap-[8px] overflow-hidden\">\n      <InfiniteScroll\n        className=\"chat-ai-output-wrapper flex-1\"\n        loadMore={handleLoadMore}\n        hasMore={pageInfo.hasMore}\n        ref={messageListRef}\n      >\n        {!pageInfo.hasMore && (\n          <AISearchSugesstions handleSearch={handleSearch} />\n        )}\n        <Messages\n          status={status}\n          messages={messages}\n        />\n      </InfiniteScroll>\n      <form className=\"flex mx-auto gap-2 w-full\">\n        <AISearchInput\n          status={status}\n          stop={stop}\n          setMessages={setMessages}\n          handleSearch={handleSearch}\n        />\n      </form>\n    </div>\n  );\n};\n","/* eslint-disable no-null/no-null */\nimport React, { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport { injectComponent } from '../../../lib/injectComponent';\nimport { AISearch } from '../../chatAssistant/ai-search/AISearch';\n\nconst injectMessageAI = injectComponent(AISearch);\nexport const AISearchWrapper = () => {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    let injected: { unmount: () => void } | undefined;\n    if (containerRef.current) {\n      injected = injectMessageAI(containerRef.current);\n    }\n    return () => {\n      injected?.unmount();\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"LeftSearch--content\" ref={containerRef} />\n  );\n};\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ThemeKey } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\nimport { selectSharedSettings } from '../../../../global/selectors/sharedState';\n\nexport type StateProps = {\n  theme: ThemeKey;\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyDefaults, selectNotifyException, selectUser,\n} from '../../../global/selectors';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  withOpenAppButton?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  withOpenAppButton,\n  onClick,\n}) => {\n  const { requestMainWebView } = getActions();\n  const oldLang = useOldLang();\n\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useLastCallback(() => {\n    onClick(chatId);\n  });\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chatId,\n      peerId: chatId,\n      theme,\n    });\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {withOpenAppButton && user?.hasMainMiniApp && (\n        <Button\n          className=\"ChatBadge miniapp\"\n          pill\n          fluid\n          size=\"tiny\"\n          onClick={handleOpenApp}\n        >\n          {oldLang('BotOpen')}\n        </Button>\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    return filterPeersByQuery({ ids: withoutRecent, query: searchQuery, type: 'user' });\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: OldLangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <Icon name=\"calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredPeer } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId } from '../../../global/helpers';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { type ObserveFn, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport BadgeButton from '../../common/BadgeButton';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredContextMenuContainer';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  sponsoredPeer: ApiSponsoredPeer;\n  observeIntersection?: ObserveFn;\n};\n\nconst LeftSearchResultSponsored: FC<OwnProps> = ({\n  sponsoredPeer,\n  observeIntersection,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const { clickSponsored, viewSponsored, openChat } = getActions();\n  const lang = useLang();\n\n  const {\n    peerId, randomId, additionalInfo, sponsorInfo,\n  } = sponsoredPeer;\n\n  useOnIntersect(ref, observeIntersection, (entry) => {\n    if (entry.intersectionRatio === 1) {\n      viewSponsored({ randomId });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    clickSponsored({ randomId });\n    openChat({ id: peerId });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const {\n    handleClick: handleBadgeClick,\n    handleMouseDown: handleBadgeMouseDown,\n  } = useFastClick((e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleContextMenu(e);\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      ref={ref}\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      buttonRef={buttonRef}\n    >\n      {isUserId(peerId) ? (\n        <PrivateChatInfo\n          userId={peerId}\n          withUsername\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={peerId}\n          withUsername\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      <BadgeButton className=\"search-sponsored-badge\" onMouseDown={handleBadgeMouseDown} onClick={handleBadgeClick}>\n        {lang('SponsoredPeerBadge')}\n        <Icon name=\"more\" />\n      </BadgeButton>\n      {contextMenuAnchor && (\n        <SponsoredMessageContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          triggerRef={ref}\n          randomId={randomId}\n          additionalInfo={additionalInfo}\n          canReport\n          sponsorInfo={sponsorInfo}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(LeftSearchResultSponsored);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              withOpenAppButton\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageSearchContext, ApiSponsoredPeer } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  isChatChannel,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PeerChip from '../../common/PeerChip';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Transition from '../../ui/Transition';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport LeftSearchResultSponsored from './LeftSearchResultSponsored';\nimport RecentContacts from './RecentContacts';\n\nimport './ChatResults.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  sponsoredPeer?: ApiSponsoredPeer;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  sponsoredPeer,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal,\n    setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n  const [searchContext, setSearchContext] = useState<ApiMessageSearchContext>('all');\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n          context: searchContext,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery, searchContext]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  function getSearchContextCaption(context: ApiMessageSearchContext) {\n    if (context === 'users') return lang('PrivateChatsSearchContext');\n    if (context === 'groups') return lang('GroupChatsSearchContext');\n    if (context === 'channels') return lang('ChannelsSearchContext');\n    return lang('AllChatsSearchContext');\n  }\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.chatResultsContextMenu .bubble'));\n  const getTriggerElement = useLastCallback(() => ref.current!.querySelector('.menuTrigger'));\n\n  const handleClickContext = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const itemPlaceholderClass = buildClassName('icon', 'iconPlaceholder');\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"chatResultsContextMenu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          <MenuItem\n            icon={searchContext === 'all' ? 'check' : undefined}\n            customIcon={searchContext !== 'all' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('all')}\n          >\n            {getSearchContextCaption('all')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'users' ? 'check' : undefined}\n            customIcon={searchContext !== 'users' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('users')}\n          >\n            {getSearchContextCaption('users')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'groups' ? 'check' : undefined}\n            customIcon={searchContext !== 'groups' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('groups')}\n          >\n            {getSearchContextCaption('groups')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'channels' ? 'check' : undefined}\n            customIcon={searchContext !== 'channels' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('channels')}\n          >\n            {getSearchContextCaption('channels')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterPeersByQuery({ ids: filteredChatIds, query: searchQuery, type: 'chat' });\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterPeersByQuery({\n      ids: contactIdsWithMe, query: searchQuery, type: 'user',\n    });\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    searchMessagesGlobal({\n      type: isChannelList ? 'channels' : 'text',\n      context: searchContext,\n      shouldResetResultsByType: true,\n      shouldCheckFetchingMessagesStatus: true,\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [searchContext]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(oldLang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const actualFoundIds = foundMessages;\n\n  const nothingFound = searchContext === 'all' && fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !actualFoundIds.length;\n  const isMessagesFetching = fetchingStatus?.messages;\n\n  const shouldRenderTopPeers = !searchQuery && !searchDate && !isChannelList;\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n    isDisabled: !shouldRenderTopPeers,\n  });\n\n  if (shouldRenderTopPeers) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  const shouldRenderMessagesSection = searchContext === 'all' ? Boolean(actualFoundIds.length) : true;\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"LeftSearch--content custom-scroll\"\n      items={actualFoundIds}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={oldLang('ChatList.Search.NoResults')}\n          description={oldLang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={oldLang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PeerChip\n              peerId={id}\n              className=\"left-search-local-suggestion\"\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {oldLang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                withOpenAppButton\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {oldLang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {sponsoredPeer && (\n            <LeftSearchResultSponsored sponsoredPeer={sponsoredPeer} observeIntersection={observe} />\n          )}\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {oldLang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      <div className=\"menuOwner\" ref={ref}>\n        {renderContextMenu()}\n        {shouldRenderMessagesSection && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n              {!isChannelList && (\n                <Link className=\"Link menuTrigger dropDownLink\" onClick={handleClickContext}>\n                  {lang('SearchContextCaption', {\n                    type: getSearchContextCaption(searchContext),\n                  }, {\n                    withNodes: true,\n                  })}\n\n                  <Transition\n                    name=\"fade\"\n                    shouldCleanup\n                    activeKey={Number(isMessagesFetching)}\n                    className=\"iconContainer\"\n                    slideClassName=\"iconContainerSlide\"\n                  >\n                    {isMessagesFetching && (<Loading />)}\n                    {!isMessagesFetching && <Icon name=\"down\" />}\n                  </Transition>\n                </Link>\n              )}\n              {oldLang('SearchMessages')}\n            </h3>\n            {actualFoundIds.map(renderFoundMessage)}\n          </div>\n        )}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType, sponsoredPeer,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      sponsoredPeer,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { RegularLangKey } from '../../../types/language';\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport { AISearchWrapper } from './AISearchWrapper';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\ntype TabInfo = {\n  type: GlobalSearchContent;\n  key: RegularLangKey;\n};\n\nconst TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabChats' },\n  { type: GlobalSearchContent.AI, key: 'SearchTabAI' },\n  { type: GlobalSearchContent.ChannelList, key: 'SearchTabChannels' },\n  { type: GlobalSearchContent.BotApps, key: 'SearchTabApps' },\n  { type: GlobalSearchContent.Media, key: 'SearchTabMedia' },\n  { type: GlobalSearchContent.Links, key: 'SearchTabLinks' },\n  { type: GlobalSearchContent.Files, key: 'SearchTabFiles' },\n  { type: GlobalSearchContent.Music, key: 'SearchTabMusic' },\n  { type: GlobalSearchContent.Voice, key: 'SearchTabVoice' },\n];\n\nconst CHAT_TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabMessages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = useMemo(() => {\n    const arr = chatId ? CHAT_TABS : TABS;\n    return arr.map((tab) => ({\n      ...tab,\n      title: lang(tab.key),\n    }));\n  }, [chatId, lang]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.AI:\n              return (\n                <AISearchWrapper />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterPeersByQuery({ ids: chatIds, query: chatFilter, type: 'chat' }),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport Icon from '../../../common/icons/Icon';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIconWithPreview\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title.text}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { AI_FOLDER_ID, ALL_FOLDER_ID, PRESET_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS, UNREAD_FOLDER_ID } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\nimport { selectSharedSettings } from \"../../../../global/selectors/sharedState\"\nimport { filterAIFolder } from \"../../../chatAssistant/ai-chatfolders/util\"\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 56;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: lang('FilterAllChats'),\n            entities: [],\n          },\n        };\n      } else if (id === PRESET_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: 'Preset',\n            entities: [],\n          },\n        };\n      } else if (id === UNREAD_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: 'Unread',\n            entities: [],\n          },\n        };\n      } else if (id === AI_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: 'AI',\n            entities: [],\n          },\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n        noTitleAnimations: folder.noTitleAnimations,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIconWithPreview\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"settings-button with-icon\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <Icon name=\"add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID || folder.id === PRESET_FOLDER_ID || folder.id === UNREAD_FOLDER_ID || folder.id === AI_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {renderTextWithEntities({\n                        text: folder.title.text,\n                        entities: folder.title.entities,\n                        noCustomEmojiPlayback: folder.noTitleAnimations,\n                      })}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                    {isBlocked && <Icon name=\"lock-badge\" className=\"settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <Icon name=\"link\" className=\"mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                  </span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    let folderIds = global.chatFolders.orderedIds;\n    const { aiChatFolders } = selectSharedSettings(global);\n    if (aiChatFolders !== true) {\n      folderIds = filterAIFolder(folderIds);\n    }\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Icon from '../../../common/icons/Icon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  folder?: ApiChatFolder;\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  folder,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (folder?.includedChatIds || []).concat(folder?.pinnedChatIds || []);\n  }, [folder?.includedChatIds, folder?.pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        {folder && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('FolderLinkTitleDescription', {\n              folder: renderTextWithEntities({\n                text: folder.title.text,\n                entities: folder.title.entities,\n                noCustomEmojiPlayback: folder.noTitleAnimations,\n              }),\n              chats: lang('FolderLinkTitleDescriptionChats', { count: chatsCount }, { pluralValue: chatsCount }),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n          </p>\n        )}\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? oldLang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      folder,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsText } from '../../../util/localization/format';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../icons/Icon';\n\ntype OwnProps = {\n  min?: number;\n  max: number;\n  value: number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  bold?: boolean;\n  className?: string;\n  defaultValue: number;\n  onChange: (value: number) => void;\n  canChangeChargeForMessages?: boolean;\n};\n\nconst DEFAULT_POINTS = [50, 100, 500, 1000, 2000, 5000, 10000];\n\nconst PaidMessageSlider: FC<OwnProps> = ({\n  min = 0,\n  max,\n  value,\n  disabled,\n  readOnly,\n  bold,\n  className,\n  defaultValue,\n  onChange,\n  canChangeChargeForMessages,\n}) => {\n  const lang = useLang();\n\n  const points = useMemo(() => {\n    const result = [];\n    for (let i = 0; i < DEFAULT_POINTS.length; i++) {\n      if (DEFAULT_POINTS[i] < max) {\n        result.push(DEFAULT_POINTS[i]);\n      }\n\n      if (DEFAULT_POINTS[i] >= max) {\n        result.push(max);\n        break;\n      }\n    }\n\n    return result;\n  }, [max]);\n\n  const handleChange = useLastCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = Number(event.currentTarget.value);\n    onChange(getValue(points, newValue));\n  });\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    readOnly && 'readOnly',\n    bold && 'bold',\n  );\n\n  function renderTopRow() {\n    return (\n      <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"value-min\" dir=\"auto\">{lang.number(min)}</span>\n        <span className=\"settings-range-value\">\n          {!canChangeChargeForMessages && (<Icon name=\"lock-badge\" />)}\n          {formatStarsAsText(lang, getValue(points, getProgress(points, value)))}\n        </span>\n        <span className=\"value-max\" dir=\"auto\">{lang.number(max)}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className={mainClassName}>\n      {renderTopRow()}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${(getProgress(points, value) / points.length) * 100}%`}\n        />\n        <input\n          min={0}\n          max={points.length}\n          defaultValue={getProgress(points, defaultValue)}\n          step=\"any\"\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction getProgress(points: number[], value: number) {\n  const pointIndex = points.findIndex((point) => value <= point);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const progress = (value - prevPoint) / (nextPoint - prevPoint);\n  return pointIndex + progress;\n}\n\nfunction getValue(points: number[], progress: number) {\n  const pointIndex = Math.floor(progress);\n  const prevPoint = points[pointIndex - 1] || 1;\n  const nextPoint = points[pointIndex] || points[points.length - 1];\n  const pointValue = prevPoint + (nextPoint - prevPoint) * (progress - pointIndex);\n  return pointValue < 100 ? Math.round(pointValue) : Math.round(pointValue / 10) * 10;\n}\n\nexport default memo(PaidMessageSlider);\n","import React, {\n  memo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n  MINIMUM_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPercent } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport Icon from '../icons/Icon';\nimport PaidMessageSlider from './PaidMessageSlider';\n\ntype OwnProps = {\n  chargeForMessages: number;\n  canChangeChargeForMessages?: boolean;\n  isGroupChat?: boolean;\n  onChange: (value: number) => void;\n};\n\ntype StateProps = {\n  starsUsdWithdrawRate: number;\n  starsPaidMessageAmountMax: number;\n  starsPaidMessageCommissionPermille: number;\n};\n\nfunction PaidMessagePrice({\n  starsUsdWithdrawRate,\n  starsPaidMessageAmountMax,\n  starsPaidMessageCommissionPermille,\n  canChangeChargeForMessages,\n  isGroupChat,\n  chargeForMessages,\n  onChange,\n}: OwnProps & StateProps) {\n  const { openPremiumModal } = getActions();\n\n  const lang = useLang();\n\n  const handleChargeForMessagesChange = useLastCallback((value: number) => {\n    onChange?.(value);\n  });\n\n  const handleUnlockWithPremium = useLastCallback(() => {\n    openPremiumModal({ initialSection: 'message_privacy' });\n  });\n\n  return (\n    <>\n      <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('SectionTitleStarsForForMessages')}\n      </h4>\n      <PaidMessageSlider\n        defaultValue={chargeForMessages}\n        min={MINIMUM_CHARGE_FOR_MESSAGES}\n        max={starsPaidMessageAmountMax}\n        value={chargeForMessages}\n        onChange={handleChargeForMessagesChange}\n        canChangeChargeForMessages={canChangeChargeForMessages}\n        readOnly={!canChangeChargeForMessages}\n      />\n      {!canChangeChargeForMessages && (\n        <Button\n          color=\"primary\"\n          fluid\n          size=\"smaller\"\n          noForcedUpperCase\n          className=\"settings-unlock-button\"\n          onClick={handleUnlockWithPremium}\n        >\n          <span className=\"settings-unlock-button-title\">\n            {lang('UnlockButtonTitle')}\n            <Icon name=\"lock-badge\" className=\"settings-unlock-button-icon\" />\n          </span>\n        </Button>\n      )}\n      {canChangeChargeForMessages && (\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang(isGroupChat ? 'SetPriceGroupDescription' : 'SectionDescriptionStarsForForMessages', {\n            percent: formatPercent(starsPaidMessageCommissionPermille * 100),\n            amount: formatCurrencyAsString(\n              chargeForMessages * starsUsdWithdrawRate * starsPaidMessageCommissionPermille,\n              'USD',\n              lang.code,\n            ),\n          }, {\n            withNodes: true,\n          })}\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const starsUsdWithdrawRateX1000 = global.appConfig?.starsUsdWithdrawRateX1000;\n    const starsUsdWithdrawRate = starsUsdWithdrawRateX1000 ? starsUsdWithdrawRateX1000 / 1000 : 1;\n    const configStarsPaidMessageCommissionPermille = global.appConfig?.starsPaidMessageCommissionPermille;\n    const starsPaidMessageCommissionPermille = configStarsPaidMessageCommissionPermille\n      ? configStarsPaidMessageCommissionPermille / 1000 : 100;\n\n    return {\n      starsPaidMessageCommissionPermille,\n      starsUsdWithdrawRate,\n      starsPaidMessageAmountMax: global.appConfig?.starsPaidMessageAmountMax || DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n    };\n  },\n)(PaidMessagePrice));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n  isChecked?: boolean;\n};\n\nfunction PrivacyLockedOption({ label, isChecked }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isChecked && styles.checked,\n      )}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sBptmiga\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\",\"checked\":\"U_6O1ebL\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  DEFAULT_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectNewNoncontactPeersRequirePremium,\n  selectNonContactPeersPaidStars,\n} from '../../../global/selectors';\n\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PaidMessagePrice from '../../common/paidMessage/PaidMessagePrice';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  canChargeForMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  nonContactPeersPaidStars: number;\n  noPaidReactionsForUsersCount: number;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  canChargeForMessages,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  nonContactPeersPaidStars,\n  isCurrentUserPremium,\n  noPaidReactionsForUsersCount,\n  onReset,\n  onScreenSelect,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const canChangeForContactsAndPremium = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n  const canChangeChargeForMessages = isCurrentUserPremium && canChargeForMessages;\n  const [chargeForMessages, setChargeForMessages] = useState<number>(nonContactPeersPaidStars);\n\n  const selectedValue = useMemo(() => {\n    if (shouldChargeForMessages) return 'charge_for_messages';\n    if (shouldNewNonContactPeersRequirePremium) return 'contacts_and_premium';\n    return 'everybody';\n  }, [shouldChargeForMessages, shouldNewNonContactPeersRequirePremium]);\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChangeForContactsAndPremium ? (\n          oldLang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption\n            label={oldLang('PrivacyMessagesContactsAndPremium')}\n            isChecked={selectedValue === 'contacts_and_premium'}\n          />\n        ),\n        hidden: !canChangeForContactsAndPremium,\n        isCanCheckedInDisabled: true,\n      },\n      {\n        value: 'charge_for_messages',\n        label: canChangeChargeForMessages ? (\n          lang('PrivacyChargeForMessages')\n        ) : (\n          <PrivacyLockedOption\n            label={lang('PrivacyChargeForMessages')}\n            isChecked={selectedValue === 'charge_for_messages'}\n          />\n        ),\n        hidden: !canChangeChargeForMessages,\n        isCanCheckedInDisabled: true,\n      },\n    ];\n  }, [oldLang, lang, canChangeForContactsAndPremium, canChangeChargeForMessages, selectedValue]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({\n      shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium',\n      // eslint-disable-next-line no-null/no-null\n      nonContactPeersPaidStars: privacy === 'charge_for_messages' ? chargeForMessages : null,\n    });\n  });\n\n  const updateGlobalPrivacySettingsWithDebounced = useDebouncedCallback((value: number) => {\n    updateGlobalPrivacySettings({\n      nonContactPeersPaidStars: value,\n    });\n  }, [updateGlobalPrivacySettings], 300, true);\n\n  const handleChargeForMessagesChange = useCallback((value: number) => {\n    setChargeForMessages(value);\n    updateGlobalPrivacySettingsWithDebounced(value);\n  }, [setChargeForMessages, updateGlobalPrivacySettingsWithDebounced]);\n\n  function renderSectionNoPaidMessagesForUsers() {\n    const itemSubtitle = !noPaidReactionsForUsersCount ? lang('SubtitlePrivacyAddUsers')\n      : oldLang('Users', noPaidReactionsForUsersCount, 'i');\n\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {lang('RemoveFeeTitle')}\n        </h4>\n        <ListItem\n          narrow\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => {\n            onScreenSelect(SettingsScreens.PrivacyNoPaidMessages);\n          }}\n        >\n          <div className=\"multiline-item full-size\">\n            <span className=\"title\">{lang('ExceptionTitlePrivacyChargeForMessages')}</span>\n            <span className=\"subtitle\">{\n              itemSubtitle\n            }\n            </span>\n          </div>\n        </ListItem>\n      </div>\n    );\n  }\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const privacyDescription = useMemo(() => {\n    if (shouldChargeForMessages) return lang('PrivacyDescriptionChargeForMessages');\n    return lang('PrivacyDescriptionMessagesContactsAndPremium');\n  }, [shouldChargeForMessages, lang]);\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={selectedValue}\n        />\n        <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {privacyDescription}\n        </p>\n      </div>\n      {selectedValue === 'charge_for_messages' && (\n        <div className=\"settings-item fluid-container\">\n          <PaidMessagePrice\n            canChangeChargeForMessages={canChangeChargeForMessages}\n            chargeForMessages={chargeForMessages}\n            onChange={handleChargeForMessagesChange}\n          />\n        </div>\n      )}\n      {canChangeChargeForMessages && selectedValue === 'charge_for_messages' && renderSectionNoPaidMessagesForUsers()}\n      {!isCurrentUserPremium && selectedValue !== 'charge_for_messages'\n      && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const nonContactPeersPaidStars = selectNonContactPeersPaidStars(global);\n\n  const noPaidReactionsForUsersCount = global.settings.privacy.noPaidMessages?.allowUserIds.length || 0;\n\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    shouldChargeForMessages: Boolean(nonContactPeersPaidStars),\n    nonContactPeersPaidStars: nonContactPeersPaidStars || DEFAULT_CHARGE_FOR_MESSAGES,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n    canChargeForMessages: global.appConfig?.starsPaidMessagesAvailable,\n    noPaidReactionsForUsersCount,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { AccountSettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', {\n      limit: lang('FileSizeMB', { count: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] }),\n    });\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettingsContacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsPrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsGroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsChannels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadFilesTitle'),\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<AccountSettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 56;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-item\">\n          <div className=\"settings-input\">\n            <AvatarEditable\n              currentAvatarBlobUrl={currentAvatarBlobUrl}\n              onChange={handlePhotoChange}\n              title=\"Edit your profile photo\"\n              disabled={isLoading}\n            />\n            <InputText\n              value={firstName}\n              onChange={handleFirstNameChange}\n              label={lang('FirstName')}\n              disabled={isLoading}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              value={lastName}\n              onChange={handleLastNameChange}\n              label={lang('LastName')}\n              disabled={isLoading}\n            />\n            <TextArea\n              value={bio}\n              onChange={handleBioChange}\n              label={lang('UserBio')}\n              disabled={isLoading}\n              maxLength={maxBioLength}\n              maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n            />\n          </div>\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <div className=\"settings-input\">\n            <UsernameInput\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n          </div>\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ELECTRON,\n  IS_SNAP_EFFECT_SUPPORTED,\n  IS_WAVE_TRANSFORM_SUPPORTED,\n} from '../../../util/browser/windowEnvironment';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSharedSettingOption, requestWave } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const snapButtonRef = useRef<HTMLDivElement>(null);\n  const [isSnapButtonAnimating, setIsSnapButtonAnimating] = useState(false);\n\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  const handleRequestWave = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    requestWave({ startX: e.clientX, startY: e.clientY });\n  });\n\n  const handleRequestConfetti = useLastCallback(() => {\n    requestConfetti({ withStars: true });\n  });\n\n  const handleSnap = useLastCallback(() => {\n    const button = snapButtonRef.current;\n    if (!button) return;\n\n    if (animateSnap(button)) {\n      setIsSnapButtonAnimating(true);\n      // Manual reset for debug\n      setTimeout(() => {\n        setIsSnapButtonAnimating(false);\n      }, 1500);\n    }\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          onClick={handleRequestConfetti}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n        <ListItem\n          onClick={handleRequestWave}\n          icon=\"story-expired\"\n          disabled={!IS_WAVE_TRANSFORM_SUPPORTED}\n        >\n          <div className=\"title\">Start wave</div>\n        </ListItem>\n        <ListItem\n          ref={snapButtonRef}\n          onClick={handleSnap}\n          icon=\"spoiler\"\n          disabled={!IS_SNAP_EFFECT_SUPPORTED}\n          style={isSnapButtonAnimating ? 'visibility: hidden' : ''}\n        >\n          <div className=\"title\">Vaporize this button</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSharedSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      shouldForceHttpTransport,\n      shouldAllowHttpTransport,\n      shouldCollectDebugLogs,\n      shouldDebugExportedSenders,\n    } = selectSharedSettings(global);\n\n    return {\n      shouldForceHttpTransport,\n      shouldAllowHttpTransport,\n      shouldCollectDebugLogs,\n      shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { SharedSettings, ThemeKey, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/browser/windowEnvironment';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<SharedSettings, (\n    'messageTextSize' |\n    'messageSendKeyCombo' |\n    'timeFormat' |\n    'theme' |\n    'shouldUseSystemTheme'\n  )>;\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    setSharedSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const timeFormatOptions: IRadioOption[] = [{\n    label: lang('SettingsTimeFormat12'),\n    value: '12h',\n  }, {\n    label: lang('SettingsTimeFormat24'),\n    value: '24h',\n  }];\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChatAppearanceLight'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChatAppearanceDark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChatAppearanceSystem'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('SettingsSendEnter'), subLabel: lang('SettingsSendEnterDescription') },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'SettingsSendCmdenter' : 'SettingsSendCtrlenter'),\n      subLabel: lang('SettingsSendPlusEnterDescription'),\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSharedSettingOption({ messageTextSize: newSize });\n  }, []);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ThemeKey;\n\n    setSharedSettingOption({ theme: newTheme });\n    setSharedSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, []);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSharedSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSharedSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, []);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSharedSettingOption({ messageSendKeyCombo: newCombo as SharedSettings['messageSendKeyCombo'] });\n  }, []);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Settings')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('SettingsTray')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsTimeFormat')}\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={timeFormatOptions}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SettingsKeyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      theme,\n      shouldUseSystemTheme,\n      messageSendKeyCombo,\n      messageTextSize,\n      timeFormat,\n    } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      messageTextSize,\n      timeFormat,\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme, selectThemeValues } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = selectThemeValues(global, theme) || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme, selectThemeValues } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = selectThemeValues(global, theme) || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{oldLang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{oldLang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{oldLang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{oldLang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{oldLang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{oldLang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{oldLang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{oldLang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{oldLang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{oldLang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{oldLang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{oldLang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{oldLang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{oldLang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{oldLang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{oldLang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{oldLang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{oldLang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyGifts:\n        return <h3>{lang('PrivacyGifts')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{oldLang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{oldLang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{oldLang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{oldLang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{oldLang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{oldLang('AlwaysShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{oldLang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{oldLang('AlwaysAllow')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{oldLang('NeverAllow')}</h3>;\n\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return <h3>{lang('RemoveFeeTitle')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('MenuAnimations')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{oldLang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{oldLang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{oldLang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{oldLang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{oldLang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{oldLang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{oldLang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{oldLang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{oldLang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{oldLang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{oldLang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{oldLang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{oldLang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{oldLang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{oldLang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{oldLang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {oldLang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {oldLang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {oldLang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={oldLang('lng_settings_information')}\n            >\n              <Icon name=\"edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{oldLang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={oldLang('lng_sure_logout')}\n        confirmLabel={oldLang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AccountSettings, LangCode, SharedSettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<AccountSettings, 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>\n& Pick<SharedSettings, 'language' | 'languages'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n    setSharedSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSharedSettingOption({ language: langCode as LangCode });\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            forceRenderAllItems\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n    const { language, languages } = selectSharedSettings(global);\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: ApiStarsAmount;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openGiftRecipientPicker,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu self-profile\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('TelegramGeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('MenuAnimations')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.languageInfo.nativeName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('MenuStickers')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openStarsBalanceModal({})}\n        >\n          {lang('MenuStars')}\n          {Boolean(starsBalance) && (\n            <span className=\"settings-item__current-value\">\n              {formatStarsAmount(lang, starsBalance)}\n            </span>\n          )}\n        </ListItem>\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openGiftRecipientPicker()}\n          >\n            {lang('MenuSendGift')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('MenuTelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('MenuPrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('OK')}\n        title={lang('AskAQuestion')}\n        textParts={lang('MenuAskText', undefined, { withNodes: true, renderTextFilters: ['br'] })}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiNotifyPeerType, ApiPeerNotifySettings } from '../../../api/types';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  notifyDefaults?: Record<ApiNotifyPeerType, ApiPeerNotifySettings>;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  notifyDefaults,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: ApiNotifyPeerType,\n    setting: 'mute' | 'showPreviews',\n  ) => {\n    const currentIsMuted = Boolean(notifyDefaults?.[peerType]?.mutedUntil);\n    const currentShouldShowPreviews = Boolean(notifyDefaults?.[peerType]?.shouldShowPreviews);\n\n    updateNotificationSettings({\n      peerType,\n      isMuted: setting === 'mute' ? !e.target.checked : currentIsMuted,\n      shouldShowPreviews: setting === 'showPreviews' ? e.target.checked : currentShouldShowPreviews,\n    });\n  }, [notifyDefaults]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'mute');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('NotificationsWeb')}\n        </h4>\n        <Checkbox\n          label={lang('NotificationsWeb')}\n          subLabel={lang(hasWebNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label={lang('NotificationsOffline')}\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          subLabel={areOfflineNotificationsSupported\n            ? lang(hasPushNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')\n            : lang('SettingsOfflineNotificationUnsupported')}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label={lang('NotificationsSound')}\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          subLabel={lang(notifyDefaults?.users?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.mutedUntil)}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.users?.mutedUntil}\n          subLabel={lang(notifyDefaults?.users?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.shouldShowPreviews)}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(notifyDefaults?.groups?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.mutedUntil)}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.groups?.mutedUntil}\n          subLabel={lang(notifyDefaults?.groups?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.shouldShowPreviews)}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          subLabel={lang(notifyDefaults?.channels?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.mutedUntil)}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.channels?.mutedUntil}\n          subLabel={lang(notifyDefaults?.channels?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.shouldShowPreviews)}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED, IS_SNAP_EFFECT_SUPPORTED } from '../../../util/browser/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [RegularLangKey, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: RegularLangKey;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderMedium',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderCustom',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['SettingsPerformanceInterfaceAnimations', [\n    { key: 'pageTransitions', label: 'SettingsPerformancePageTransitions' },\n    { key: 'messageSendingAnimations', label: 'SettingsPerformanceSending' },\n    { key: 'mediaViewerAnimations', label: 'SettingsPerformanceMediaViewer' },\n    { key: 'messageComposerAnimations', label: 'SettingsPerformanceComposer' },\n    { key: 'contextMenuAnimations', label: 'SettingsPerformanceContextAnimation' },\n    { key: 'contextMenuBlur', label: 'SettingsPerformanceContextBlur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'SettingsPerformanceRightColumn' },\n    { key: 'snapEffect', label: 'SettingsPerformanceThanos' },\n  ]],\n  ['SettingsPerformanceStickers', [\n    { key: 'animatedEmoji', label: 'SettingsPerformanceAnimatedEmoji' },\n    { key: 'loopAnimatedStickers', label: 'SettingsPerformanceLoopStickers' },\n    { key: 'reactionEffects', label: 'SettingsPerformanceReactionEffects' },\n    { key: 'stickerEffects', label: 'SettingsPerformanceStickerEffects' },\n  ]],\n  ['SettingsPerformanceMediaAutoplay', [\n    { key: 'autoplayGifs', label: 'SettingsPerformanceAutoplayGif' },\n    { key: 'autoplayVideos', label: 'SettingsPerformanceAutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSharedSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n\n  const animationLevelOptions = useMemo(() => {\n    const options = animationLevelState === ANIMATION_LEVEL_CUSTOM\n      ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n      : ANIMATION_LEVEL_OPTIONS;\n\n    return options.map((option) => lang(option));\n  }, [animationLevelState, lang]);\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSharedSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, []);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderTitle')}\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderSubtitle')}\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => {\n                    if (key === 'snapEffect' && !IS_SNAP_EFFECT_SUPPORTED) return undefined;\n                    return (\n                      <Checkbox\n                        key={key}\n                        name={key}\n                        checked={performanceSettings[key]}\n                        label={lang(label)}\n                        disabled={disabled}\n                        onChange={handlePropertyChange}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  selectCanSetPasscode, selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages: boolean;\n  canDisplayChatInTitle?: boolean;\n  isCurrentUserFrozen?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n  isCurrentUserFrozen,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSharedSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    if (!isCurrentUserFrozen) {\n      loadBlockedUsers();\n      loadPrivacySettings();\n      loadContentSettings();\n      loadWebAuthorizations();\n    }\n  }, [isCurrentUserFrozen]);\n\n  useEffect(() => {\n    if (isActive && !isCurrentUserFrozen) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, isCurrentUserFrozen, loadGlobalPrivacySettings]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSharedSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return oldLang('Loading');\n\n    const { visibility, shouldAllowPremium, botsPrivacy } = setting;\n\n    const isAllowBots = botsPrivacy === 'allow';\n    const isVisibilityEverybody = visibility === 'everybody';\n    const shouldShowBotsString = isAllowBots && !isVisibilityEverybody;\n\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount && !isVisibilityEverybody) total.push(`+${allowCount}`);\n\n    const botPrivacyString = shouldShowBotsString ? lang('PrivacyValueBots') : '';\n    const totalString = lang.conjunction(total);\n\n    const exceptionString = [botPrivacyString, totalString].filter(Boolean).join(' ');\n    if (shouldShowBotsString && !isVisibilityEverybody) return exceptionString;\n\n    if (shouldAllowPremium) {\n      return oldLang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${oldLang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${oldLang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${oldLang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {oldLang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-item\">\n              <span className=\"title\">{oldLang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {oldLang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {oldLang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {oldLang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{oldLang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGifts)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{lang('PrivacyGifts')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.gifts)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldChargeForMessages ? lang('PrivacyPaidMessagesValue')\n                : shouldNewNonContactPeersRequirePremium\n                  ? oldLang('PrivacyMessagesContactsAndPremium')\n                  : oldLang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={oldLang('lng_settings_sensitive_disable_filtering')}\n            subLabel={oldLang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={oldLang('ArchiveAndMute')}\n            subLabel={oldLang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={oldLang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          shouldNewNonContactPeersRequirePremium, nonContactPeersPaidStars,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    const { canDisplayChatInTitle } = selectSharedSettings(global);\n    const shouldChargeForMessages = Boolean(nonContactPeersPaidStars);\n    const isCurrentUserFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      shouldChargeForMessages,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n      isCurrentUserFrozen,\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterPeersByQuery({ ids: availableContactIds, query: search, type: 'user' })\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <Icon name=\"add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyGifts:\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return 'gifts';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return 'noPaidMessages';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiDisallowedGiftsSettings } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport Switcher from '../../ui/Switcher';\n\ntype StateProps = {\n  disallowedGifts?: ApiDisallowedGiftsSettings;\n  isCurrentUserPremium: boolean;\n};\n\nconst SettingsAcceptedGift = ({\n  disallowedGifts, isCurrentUserPremium,\n}: StateProps) => {\n  const { showNotification, updateGlobalPrivacySettings } = getActions();\n\n  const lang = useLang();\n\n  const handleOpenTelegramPremiumModal = useLastCallback(() => {\n    showNotification({\n      message: lang('PrivacySubscribeToTelegramPremium'),\n      action: {\n        action: 'openPremiumModal',\n        payload: {},\n      },\n      actionText: { key: 'Open' },\n      icon: 'star',\n    });\n  });\n\n  const handleLimitedEditionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowLimitedStarGifts: !disallowedGifts?.shouldDisallowLimitedStarGifts || undefined,\n      },\n    });\n  });\n\n  const handleUnlimitedEditionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowUnlimitedStarGifts: !disallowedGifts?.shouldDisallowUnlimitedStarGifts || undefined,\n      },\n    });\n  });\n\n  const handleUniqueChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowUniqueStarGifts: !disallowedGifts?.shouldDisallowUniqueStarGifts || undefined,\n      },\n    });\n  });\n\n  const handlePremiumSubscriptionChange = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      handleOpenTelegramPremiumModal();\n      return;\n    }\n    updateGlobalPrivacySettings({\n      disallowedGifts: {\n        ...disallowedGifts,\n        shouldDisallowPremiumGifts: !disallowedGifts?.shouldDisallowPremiumGifts || undefined,\n      },\n    });\n  });\n\n  return (\n    <div className=\"settings-item\">\n      <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('PrivacyAcceptedGiftTitle')}\n      </h4>\n      <ListItem onClick={handleLimitedEditionChange}>\n        <span>{lang('PrivacyGiftLimitedEdition')}</span>\n        <Switcher\n          id=\"limited_edition\"\n          label={disallowedGifts?.shouldDisallowLimitedStarGifts ? lang('PrivacyDisableLimitedEditionStarGifts')\n            : lang('PrivacyEnableLimitedEditionStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowLimitedStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handleUnlimitedEditionChange}>\n        <span>{lang('PrivacyGiftUnlimited')}</span>\n        <Switcher\n          id=\"unlimited\"\n          label={disallowedGifts?.shouldDisallowUnlimitedStarGifts ? lang('PrivacyDisableUnlimitedStarGifts')\n            : lang('PrivacyEnableUnlimitedStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowUnlimitedStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handleUniqueChange}>\n        <span>{lang('PrivacyGiftUnique')}</span>\n        <Switcher\n          id=\"unique\"\n          label={disallowedGifts?.shouldDisallowUniqueStarGifts ? lang('PrivacyDisableUniqueStarGifts')\n            : lang('PrivacyEnableUniqueStarGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowUniqueStarGifts}\n        />\n      </ListItem>\n      <ListItem onClick={handlePremiumSubscriptionChange}>\n        <span>{lang('PrivacyGiftPremiumSubscription')}</span>\n        <Switcher\n          id=\"premium_subscription\"\n          label={disallowedGifts?.shouldDisallowPremiumGifts ? lang('PrivacyDisablePremiumGifts')\n            : lang('PrivacyEnablePremiumGifts')}\n          disabled={!isCurrentUserPremium}\n          checked={!isCurrentUserPremium ? true : !disallowedGifts?.shouldDisallowPremiumGifts}\n        />\n      </ListItem>\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('PrivacyAcceptedGiftInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          disallowedGifts,\n        },\n      },\n    } = global;\n\n    return {\n      disallowedGifts,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsAcceptedGift));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiPrivacySettings, BotsPrivacyType } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Switcher from '../../ui/Switcher';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsAcceptedGift from './SettingsAcceptedGift';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  shouldDisplayGiftsButton?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n  shouldDisplayGiftsButton,\n  isCurrentUserPremium,\n}) => {\n  const lang = useLang();\n\n  const { updateGlobalPrivacySettings, showNotification } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleShowGiftIconInChats = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('PrivacySubscribeToTelegramPremium'),\n        action: {\n          action: 'openPremiumModal',\n          payload: {},\n        },\n        actionText: { key: 'Open' },\n        icon: 'star',\n      });\n      return;\n    }\n    updateGlobalPrivacySettings({\n      shouldDisplayGiftsButton: !shouldDisplayGiftsButton,\n    });\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {screen === SettingsScreens.PrivacyGifts && (\n        <div className=\"settings-item\">\n          <ListItem onClick={handleShowGiftIconInChats}>\n            <span>{lang('PrivacyDisplayGiftsButton')}</span>\n            <Switcher\n              id=\"gift\"\n              disabled={!isCurrentUserPremium}\n              label={shouldDisplayGiftsButton ? lang('HideGiftsButton') : lang('DisplayGiftsButton')}\n              checked={shouldDisplayGiftsButton}\n            />\n          </ListItem>\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyDisplayGiftIconInChats', {\n              icon: <Icon name=\"gift\" className=\"gift-icon\" />,\n              gift: lang('PrivacyDisplayGift'),\n            }, {\n              withNodes: true,\n            })}\n          </p>\n        </div>\n      )}\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {screen === SettingsScreens.PrivacyGifts && (\n        <SettingsAcceptedGift />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PContacts')} />\n        ) : (\n          oldLang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PNobody')} />\n        ) : (\n          oldLang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [oldLang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsInfo');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? oldLang('PrivacyPhoneInfo') : oldLang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return oldLang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return oldLang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return oldLang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return oldLang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return oldLang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return oldLang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return oldLang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return oldLang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return oldLang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen]);\n\n  const prepareSubtitle = useLastCallback(\n    (userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean, botsPrivacy?: BotsPrivacyType) => {\n      const userIdsCount = userIds?.length || 0;\n      const chatIdsCount = chatIds?.length || 0;\n      const isAllowBots = botsPrivacy === 'allow';\n      const hasPeers = userIdsCount || chatIdsCount;\n\n      if (!hasPeers && !isAllowBots) {\n        return shouldAllowPremium ? oldLang('PrivacyPremium') : oldLang('EditAdminAddUsers');\n      } else if (shouldAllowPremium) {\n        return oldLang('ContactsAndPremium');\n      }\n\n      const userCountString = userIdsCount > 0 ? oldLang('Users', userIdsCount) : undefined;\n      const chatCountString = chatIdsCount > 0 ? oldLang('Chats', chatIdsCount) : undefined;\n\n      const botPrivacyString = isAllowBots ? lang('PrivacyValueBots') : '';\n      const peersString = lang.conjunction([userCountString, chatCountString].filter(Boolean));\n\n      return [botPrivacyString, peersString].filter(Boolean).join(' ');\n    },\n  );\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(\n      privacy?.allowUserIds,\n      privacy?.allowChatIds,\n      privacy?.shouldAllowPremium,\n      privacy?.botsPrivacy,\n    );\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: {\n        privacy,\n        byKey: {\n          shouldDisplayGiftsButton,\n        },\n      },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyGifts:\n        primaryPrivacy = privacy.gifts;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n      shouldDisplayGiftsButton,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  withMiniAppsCategory?: boolean;\n  usersOnly?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  withMiniAppsCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  usersOnly = false,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const customPeerBots : UniqueCustomPeer = useMemo(() => {\n    return {\n      isCustomPeer: true,\n      type: 'bots',\n      title: lang('PrivacyValueBots'),\n      avatarIcon: 'bots',\n      isAvatarSquare: true,\n      peerColorId: 6,\n    };\n  }, [lang]);\n\n  const miniAppsCategory = useMemo(() => {\n    return [customPeerBots];\n  }, [customPeerBots]);\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n    if (settings.shouldAllowPremium) { return [CUSTOM_PEER_PREMIUM.type]; }\n    if (settings.botsPrivacy === 'allow' && isAllowList) { return [customPeerBots.type]; }\n    return [];\n  }, [settings, isAllowList, customPeerBots]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return (!usersOnly || user)\n          && chatId !== currentUserId\n          && chatId !== SERVICE_NOTIFICATIONS_USER_ID\n          && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterPeersByQuery({ ids: chatIds, query: searchQuery });\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...chatIds,\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, searchQuery, currentUserId, usersOnly]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n      botsPrivacy: (!withMiniAppsCategory) ? 'none'\n        : (newSelectedCategoryTypes.includes(customPeerBots.type) ? 'allow' : 'disallow'),\n    });\n\n    onReset();\n  }, [\n    isAllowList,\n    withMiniAppsCategory,\n    newSelectedCategoryTypes,\n    newSelectedContactIds,\n    onReset,\n    screen,\n    customPeerBots,\n  ]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function getCustomCategory() {\n    if (withPremiumCategory) return PREMIUM_CATEGORY;\n    if (withMiniAppsCategory && isAllowList) return miniAppsCategory;\n    return undefined;\n  }\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={getCustomCategory()}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? oldLang('AlwaysAllowPlaceholder') : oldLang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? oldLang('AlwaysAllow') : oldLang('NeverAllow')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return privacy.gifts;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return privacy.noPaidMessages;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { AccountSettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<AccountSettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji, selectTabState } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n  recoveryEmail: string;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n  recoveryEmail,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {recoveryEmail && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('TwoStepAuth.ConfirmEmailDescription', recoveryEmail)}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const tabState = selectTabState(global);\n  const recoveryEmail = tabState.recoveryEmail;\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n    recoveryEmail,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {type === 'email' && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('RecoveryEmailSubtitle')}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  errorKey,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          placeholder={oldLang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={oldLang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMarkScrolled from '../../../hooks/useMarkScrolled/useMarkScrolled';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_GIFTS_SCREENS = [\n  SettingsScreens.PrivacyGiftsAllowedContacts,\n  SettingsScreens.PrivacyGiftsDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nconst PRIVACY_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyNoPaidMessages,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  useMarkScrolled({\n    containerRef,\n    selector: '.settings-content',\n  }, [currentScreen]);\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGifts]: PRIVACY_GIFTS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyMessages]: PRIVACY_MESSAGES_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyGifts:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            usersOnly={currentScreen === SettingsScreens.PrivacyNoPaidMessages}\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            withMiniAppsCategory={currentScreen === SettingsScreens.PrivacyGiftsAllowedContacts}\n            screen={currentScreen}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      ref={containerRef}\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n// Import React dependencies.\nimport React, {\n  useCallback, useRef, useState,\n} from 'react';\nimport type { DSlateRef } from '@dslate/antd';\nimport DSlate from '@dslate/antd';\nimport { Button, Input } from 'antd';\nimport type { Descendant } from 'slate';\nimport { Node } from 'slate';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport { ChataiStores } from '../../chatAssistant/store';\nimport { knowledgeEmbeddingStore } from '../../chatAssistant/vector-store';\n\ntype OwnProps = {\n  knowledge?:AiKnowledge | null;\n  type: 'add' | 'edit';\n  onClose: () => void;\n  onUpdate:()=>void;\n};\n\nconst ErrorTip = ({ message }:{ message:string }) => {\n  return (\n    <div className=\"text-[12px] leading-[18px] text-red-400\">{message}</div>\n  );\n};\n\nconst AIKnowledgeEditor = (props: OwnProps) => {\n  const {\n    type, knowledge, onClose, onUpdate,\n  } = props;\n  const knowledgeId = useRef(uuidv4());\n  const [value, setValue] = useState<Descendant[]>(knowledge?.richText || [\n    {\n      type: 'paragraph',\n      children: [{ text: '' }],\n    },\n  ]);\n  const [question, setQuestion] = useState<string>(knowledge?.question || '');\n  const [questionError, setQuestionError] = useState<string>('');\n  const [valueError, setValueError] = useState<string>('');\n  const ref = useRef<DSlateRef>(null);\n  const handleQuestionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  }, []);\n  const serialize = (nodes: Descendant[]) => {\n    return nodes.map((n) => Node.string(n)).join('\\n');\n  };\n  const handleSave = useCallback(() => {\n    const plainText = serialize(value);\n    if (!plainText) {\n      setValueError('Please enter your notes');\n      return;\n    } else {\n      setValueError('');\n    }\n    if (!question) {\n      setQuestionError('Please enter a question');\n      return;\n    } else {\n      setQuestionError('');\n    }\n    const knowledgeIdValue = type === 'add' ? knowledgeId.current : knowledge?.id as string;\n    ChataiStores.knowledge?.addKnowledge({\n      id: knowledgeIdValue,\n      richText: value,\n      plainText,\n      question,\n    }).then(() => {\n      onClose();\n      onUpdate();\n    });\n    knowledgeEmbeddingStore.updateText(question, knowledgeIdValue, {\n      answer: plainText,\n    });\n  }, [knowledge?.id, onClose, onUpdate, question, type, value]);\n  return (\n    <div className=\"flex flex-col gap-[20px] h-full\">\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        <DSlate className=\"flex-1 flex flex-col overflow-hidden\" ref={ref} value={value} onChange={setValue} toolbar={['history', 'bold', 'italic', 'decoration', 'text-align', 'list']} />\n        {valueError && <ErrorTip message={valueError} />}\n      </div>\n      <div className=\"flex flex-col gap-[8px]\">\n        <div>Preset standard questions <span className=\"text-[#FF543D]\">*</span></div>\n        <Input value={question} onChange={handleQuestionChange} />\n        {questionError && <ErrorTip message={questionError} />}\n      </div>\n      <div className=\"flex flex-row gap-8 justify-end\">\n        <Button className=\"!w-[120px] !h-[42px]\" onClick={onClose}>Cancel</Button>\n        <Button type=\"primary\" className=\"!w-[120px] !h-[42px]\" onClick={handleSave}>Add</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AIKnowledgeEditor;\n","/* eslint-disable no-null/no-null */\n/* eslint-disable max-len */\nimport React, {\n  useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport { injectComponent } from '../../../lib/injectComponent';\n\nimport Modal from '../../ui/Modal';\nimport AIKnowledgeEditor from './AIKnowledgeEditor';\n\nimport './AIKnowledgeEditor.scss';\n\ntype OwnProps = {\n  knowledge?:AiKnowledge | null;\n  type: 'add' | 'edit';\n  isOpen: boolean;\n  onClose: () => void;\n  onUpdate:()=>void;\n};\nconst injectEditor = injectComponent(AIKnowledgeEditor);\nconst AddKnowledgeModal = ({\n  type, knowledge, isOpen, onClose, onUpdate,\n}: OwnProps) => {\n  const editorRef = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    let injected: { unmount: () => void } | undefined;\n    if (editorRef.current) {\n      injected = injectEditor(editorRef.current, {\n        onClose,\n        onUpdate,\n        knowledge,\n        type,\n      });\n    }\n    return () => {\n      injected?.unmount();\n    };\n  }, [knowledge, onClose, onUpdate, type]);\n  return (\n    <Modal\n      title=\"Notes\"\n      hasCloseButton\n      isOpen={isOpen}\n      onClose={onClose}\n      dialogStyle=\"max-width: 1000px; width: 70vw; height: 60vh;\"\n    >\n      <div className=\"knowledge-editor\" ref={editorRef} />\n    </Modal>\n  );\n};\nexport default AddKnowledgeModal;\n","/* eslint-disable max-len */\nimport copy from 'copy-to-clipboard';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport AIKnowledgeEmpty from '../../../assets/ai-knowledge-empty.png';\n\nconst AIKnowledgeEmptyContent = ({ onAdd }:{ onAdd:NoneToVoidFunction }) => {\n  return (\n    <div className=\"flex flex-col justify-center items-center px-[30px] pt-[120px]\">\n      <img src={AIKnowledgeEmpty} alt=\"AIKnowledge\" className=\"w-[125px] h-[125px] mb-[12px]\" />\n      <span className=\"text-[14px] text-[#676B74]\">\n        You can store frequently used personal information, company details, and business materials here. During chats, the AI will use this content to generate intelligent responses.\n      </span>\n      <Button\n        round\n        color=\"translucent\"\n        className=\"!bg-[#8C42F0] flex flex-row items-center gap-[8px] !w-[148px] !h-[42px] !p-0 !rounded-[21px] mt-[20px]\"\n        onClick={onAdd}\n      >\n        <Icon className=\"text-white text-[14px]\" name=\"add\" />\n        <span className=\"text-white\">Add</span>\n      </Button>\n    </div>\n  );\n};\nconst AIKnowledgeList = ({ knowledgeList, onEdit, onDelete }:{\n  knowledgeList:any[];\n  onEdit:(knowledge:AiKnowledge)=>void;\n  onDelete:(id:string)=>void;\n}) => {\n  const { showNotification } = getActions();\n  const handleCopy = useCallback((knowledge:AiKnowledge) => {\n    copy(knowledge.plainText);\n    showNotification({\n      message: 'TextCopied',\n    });\n  }, []);\n  const handleEdit = useCallback((knowledge:AiKnowledge) => {\n    onEdit(knowledge);\n  }, [onEdit]);\n  const handleDelete = useCallback((knowledge:AiKnowledge) => {\n    onDelete(knowledge.id);\n  }, [onDelete]);\n  return (\n    <div className=\"px-[20px]\">\n      {knowledgeList.map((item) => (\n        <div key={item.id} className=\"bg-[#F7F7F7] rounded-[12px] px-[16px] py-[15px] mb-[12px]\">\n          <div className=\"white-space-pre-wrap line-clamp-3 overflow-hidden text-ellipsis\">\n            {item?.question || ''}\n          </div>\n          <div className=\"white-space-pre-wrap line-clamp-3 overflow-hidden text-ellipsis\">\n            {item.plainText.replace(/\\\\n/g, '')}\n          </div>\n          <div className=\"flex justify-end gap-[8px] items-center\">\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCopy(item)}\n            >\n              <Icon name=\"copy\" className=\"text-[14px]\" />\n            </Button>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleEdit(item)}\n            >\n              <Icon name=\"edit\" className=\"text-[14px]\" />\n            </Button>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleDelete(item)}\n            >\n              <Icon name=\"delete\" className=\"text-[14px]\" />\n            </Button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\nconst AIKnowledgeContent = ({\n  knowledgeList, onShowAddModal, onEdit, onDelete,\n}:{\n  knowledgeList:any[];\n  onShowAddModal:(type:'edit' | 'add')=>void ;\n  onEdit:(knowledge:AiKnowledge)=>void;\n  onDelete:(id:string)=>void;\n}) => {\n  const handleAdd = useCallback(() => {\n    onShowAddModal('add');\n  }, [onShowAddModal]);\n  return (\n    <div className=\"pt-[20px] h-full box-border\">\n      {knowledgeList.length === 0 ? (\n        <AIKnowledgeEmptyContent onAdd={handleAdd} />\n      ) : (\n        <AIKnowledgeList knowledgeList={knowledgeList} onEdit={onEdit} onDelete={onDelete} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(AIKnowledgeContent);\n","/* eslint-disable max-len */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  showAddButton:boolean;\n  onReset: () => void;\n  onShowAddModal:(type:'edit' | 'add') => void;\n};\nconst AIKnowledgeHeader: FC<OwnProps> = ({ onReset, showAddButton, onShowAddModal }) => {\n  const oldLang = useOldLang();\n\n  function renderHeaderContent() {\n    return <h3>{oldLang('AI Knowledge Base')}</h3>;\n  }\n  const handleAdd = useCallback(() => {\n    onShowAddModal('add');\n  }, [onShowAddModal]);\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      {showAddButton && (\n        <Button\n          round\n          color=\"translucent\"\n          className=\"!bg-[#8C42F0] flex flex-row items-center gap-[8px] !w-[92px] !h-[30px] !p-0 !rounded-[21px] !text-[14px]\"\n          onClick={handleAdd}\n        >\n          <Icon className=\"text-white text-[14px]\" name=\"add\" />\n          <span className=\"text-white\">Add</span>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AIKnowledgeHeader);\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\n\nimport type { AiKnowledge } from '../../chatAssistant/store/knowledge-store';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\nimport { ChataiStores } from '../../chatAssistant/store';\nimport { knowledgeEmbeddingStore } from '../../chatAssistant/vector-store';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport AddKnowledgeModal from './AddKnowledgeModal';\nimport AIKnowledgeContent from './AIKnowledgeContent';\nimport AIKnowledgeHeader from './AIKnowledgeHeader';\n\nexport type OwnProps = {\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\nconst AIKnowledge:FC<OwnProps> = ({ onReset }) => {\n  const [knowledgeList, setKnowledgeList] = useState<AiKnowledge[]>([]);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [type, setType] = useState<'edit' | 'add'>('add');\n  const [editKnowledge, setEditKnowledge] = useState<AiKnowledge | null>(null);\n  useEffect(() => {\n    ChataiStores.knowledge?.getAllKnowledge().then((knowledge) => {\n      setKnowledgeList(knowledge || []);\n    });\n  }, []);\n  const handleReset = useLastCallback(() => {\n    onReset(true);\n  });\n  const handleCloseAddModal = useCallback(() => {\n    setShowAddModal(false);\n  }, []);\n  const handleShowAddModal = useCallback((type:'edit' | 'add') => {\n    setShowAddModal(true);\n    setType(type);\n  }, []);\n  const handleEdit = useCallback((knowledge:AiKnowledge) => {\n    setType('edit');\n    setEditKnowledge(knowledge);\n    setShowAddModal(true);\n  }, []);\n  const handleUpdate = useCallback(() => {\n    setEditKnowledge(null);\n    ChataiStores.knowledge?.getAllKnowledge().then((knowledge) => {\n      setKnowledgeList(knowledge || []);\n    });\n  }, []);\n  const handleDelete = useCallback((id:string) => {\n    ChataiStores.knowledge?.deleteKnowledge(id).then(() => {\n      setKnowledgeList((prev) => {\n        return prev.filter((item) => item.id !== id);\n      });\n    });\n    knowledgeEmbeddingStore.deleteText(id);\n  }, []);\n  function renderCurrentSection() {\n    return (\n      <>\n        <AIKnowledgeHeader\n          onReset={handleReset}\n          showAddButton={knowledgeList.length > 0}\n          onShowAddModal={handleShowAddModal}\n        />\n        <AIKnowledgeContent knowledgeList={knowledgeList} onShowAddModal={handleShowAddModal} onEdit={handleEdit} onDelete={handleDelete} />\n        {showAddModal && (\n          <AddKnowledgeModal type={type} isOpen={showAddModal} onClose={handleCloseAddModal} knowledge={editKnowledge} onUpdate={handleUpdate} />\n        )}\n      </>\n\n    );\n  }\n  return (\n    <Transition\n      id=\"AiKnowledge\"\n      name={LAYERS_ANIMATION_NAME}\n      activeKey={0}\n      renderCount={1}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(AIKnowledge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T_GGJ8J2\",\"item\":\"fe7VNmNB\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport { CHATAI_IDB_STORE } from '../../../util/browser/idb';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './AutoTranslateLanguage.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\nconst AutoTranslateLanguage: FC = () => {\n  const { setSettingOption } = getActions();\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string>('');\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffect(() => {\n    CHATAI_IDB_STORE.get('auto-translate-language').then((lan) => {\n      setDisplayedOptions(lan as string || language);\n    });\n  }, [language]);\n\n  const handleChange = useLastCallback((newSelectedIds: string) => {\n    setDisplayedOptions(newSelectedIds);\n    CHATAI_IDB_STORE.set('auto-translate-language', newSelectedIds);\n    setSettingOption({\n      autoTranslateLanguage: newSelectedIds,\n      translationLanguage: newSelectedIds,\n    });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValue={displayedOptions}\n          onSelectedValueChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable={false}\n          allowMultiple={false}\n          withDefaultPadding\n          itemInputType=\"radio\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AutoTranslateLanguage;\n","/* eslint-disable max-len */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { CHATAI_IDB_STORE } from '../../../util/browser/idb';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport AutoTranslateLanguage from './AutoTranslateLanguage';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst AITranslateContent: FC<OwnProps> = ({\n  isActive,\n  onReset,\n}) => {\n  const {\n    setSettingOption,\n    // openPremiumModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [autoTranslate, setAutoTranslate] = useState(false);\n\n  useEffect(() => {\n    CHATAI_IDB_STORE.get('auto-translate').then((value) => {\n      setAutoTranslate(value as boolean || false);\n    });\n  }, []);\n\n  const handleAutoTranslateChange = useLastCallback((newValue: boolean) => {\n    CHATAI_IDB_STORE.set('auto-translate', newValue);\n    setSettingOption({ autoTranslate: newValue });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('Auto Translate')}\n          checked={autoTranslate}\n          onCheck={handleAutoTranslateChange}\n        />\n      </div>\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        <AutoTranslateLanguage />\n      </div>\n    </div>\n  );\n};\n\nexport default AITranslateContent;\n","/* eslint-disable max-len */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  onReset: () => void;\n};\nconst AITranslateHeader: FC<OwnProps> = ({ onReset }) => {\n  const oldLang = useOldLang();\n\n  function renderHeaderContent() {\n    return <h3>{oldLang('AI Translate')}</h3>;\n  }\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n    </div>\n  );\n};\n\nexport default memo(AITranslateHeader);\n","/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/no-shadow */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n} from '../../../lib/teact/teact';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport AITranslateContent from './AITranslateContent';\nimport AITranslateHeader from './AITranslateHeader';\n\nexport type OwnProps = {\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\nconst AITranslate:FC<OwnProps> = ({ onReset }) => {\n  function renderCurrentSection() {\n    return (\n      <>\n        <AITranslateHeader onReset={onReset} />\n        <AITranslateContent onReset={onReset} />\n      </>\n    );\n  }\n  return (\n    <Transition\n      id=\"AiTranslate\"\n      name={LAYERS_ANIMATION_NAME}\n      activeKey={0}\n      renderCount={1}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(AITranslate);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { sortUserIds } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterPeersByQuery({ ids: contactIds, query: filter, type: 'user' });\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <Icon name=\"add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { isUserBot } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds\n      ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <Icon name=\"arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/browser/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport Icon from '../common/icons/Icon';\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen, undefined, undefined, false);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID)\n      .map((folderId) => {\n        const folder = foldersById ? foldersById[folderId] : undefined;\n        const label = folder ? renderTextWithEntities({\n          text: folder.title.text,\n          entities: folder.title.entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }) : '';\n        return {\n          label,\n          value: String(folderId),\n        };\n      }) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let mutedUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      mutedUntil = MAX_INT_32;\n    } else {\n      mutedUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, mutedUntil });\n    } else {\n      updateChatMutedState({ chatId, mutedUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeerPaidMessagesStars,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n    const paidMessagesStars = chatId ? selectPeerPaidMessagesStars(global, chatId) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: !paidMessagesStars && selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiBotCommand, ApiChat, ApiDisallowedGifts,\n} from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isSystemBot,\n  isUserId,\n  isUserRightBanned,\n} from '../../global/helpers';\nimport { getIsChatMuted } from '../../global/helpers/notifications';\nimport {\n  selectBot,\n  selectCanGift,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsRightColumnShown,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canDeleteChat?: boolean;\n  canReportChat?: boolean;\n  canGift?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n  disallowedGifts?: ApiDisallowedGifts;\n  isAccountFrozen?: boolean;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canReportChat,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canDeleteChat,\n  canGift,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n  disallowedGifts,\n  isAccountFrozen,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    openFrozenAccountModal,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n    reportMessages,\n    showNotification,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      setIsMenuOpen(false);\n      reportMessages({ chatId, messageIds: [] });\n    }\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      onClose();\n    } else {\n      setIsDeleteModalOpen(true);\n    }\n    setIsMenuOpen(false);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      sendBotCommand({ command: '/start' });\n    }\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      restartBot({ chatId });\n    }\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      updateChatMutedState({ chatId, isMuted: false });\n    }\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      closeMenu();\n    } else {\n      markRenderMuteModal();\n      setIsMuteModalOpen(true);\n    }\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openCreateTopicPanel({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      toggleManagement({ force: true });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openEditTopicPanel({ chatId, topicId: Number(threadId) });\n      setShouldCloseFast(!isRightColumnShown);\n    }\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    if (areAllGiftsDisallowed && chat) {\n      showNotification({ message: lang('SendDisallowError') });\n      return;\n    }\n    openGiftModal({ forUserId: chatId });\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openGiftModal({ forUserId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      openAddContactDialog({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      onSubscribeChannel();\n    }\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    }\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      requestMasterAndRequestCall({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      enterMessageSelectMode();\n    }\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      blockUser({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n    } else {\n      unblockUser({ userId: chatId });\n    }\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {oldLang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || oldLang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {oldLang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, oldLang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return oldLang('Delete');\n    }\n\n    if (isPrivate) {\n      return oldLang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return oldLang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return oldLang('LeaveChannel');\n    }\n\n    return oldLang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, oldLang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {oldLang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {oldLang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? oldLang('lng_context_view_topic') : oldLang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {oldLang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {oldLang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {oldLang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? oldLang('SubscribeRequests') : oldLang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {oldLang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {oldLang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {oldLang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {oldLang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {oldLang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {oldLang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {oldLang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {oldLang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {oldLang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {oldLang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {oldLang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {oldLang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {oldLang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {oldLang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {oldLang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {oldLang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {oldLang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGift && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftClick}\n            >\n              {oldLang('ProfileSendAGift')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? oldLang('BotRestart') : oldLang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? oldLang('Unblock') : oldLang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n    const canReportChat = isMainThread && !user && (isChatChannel(chat) || isChatGroup(chat));\n\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGift = selectCanGift(global, chatId);\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canDeleteChat: getCanDeleteChat(chat),\n      canReportChat,\n      canGift,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog, getReactionKey, isSameReaction, isSystemBot,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldCancelSearchRef = useRef(false);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Reset focus on query result\n  useEffect(() => {\n    setFocusedIndex(-1);\n  }, [lastSearchQuery]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => {\n      if (shouldCancelSearchRef.current) return;\n      performMiddleSearch({ chatId, threadId, query });\n    });\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    shouldCancelSearchRef.current = false;\n\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n      shouldCancelSearchRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || isSystemBot(chatId) || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            itemSelector={`.${RESULT_ITEM_CLASS_NAME}`}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [Math.max(focusedIndex + 1, 1), totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <Icon name=\"recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <Icon name=\"favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed.slice();\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      positionY={story && 'bottom'}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <Icon\n                name=\"delete\"\n                className={buildClassName(styles.actionItem, styles.deleteFile)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <Icon\n            name={attachment.shouldSendAsSpoiler ? 'spoiler-disable' : 'spoiler'}\n            className={styles.actionItem}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            // eslint-disable-next-line react/jsx-no-bind\n            <Icon name=\"delete\" className={styles.actionItem} onClick={() => onDelete(index)} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","import isFullyVisible from './visibility/isFullyVisible';\nimport animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll({\n      container,\n      element: allElements[index],\n      position,\n      margin: SCROLL_MARGIN,\n    });\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"sendButtonStar\":\"C1OOt81o\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  canScheduleUntilOnline?: boolean;\n  canSchedule?: boolean;\n  onSendWhenOnline?: NoneToVoidFunction;\n  paidMessagesStars?: number;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  canScheduleUntilOnline,\n  canSchedule,\n  onSendWhenOnline,\n  paidMessagesStars,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [oldLang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  const attachmentsLength = renderingAttachments.length;\n  if (areAllPhotos) {\n    title = oldLang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', attachmentsLength, 'i');\n  } else if (areAllVideos) {\n    title = oldLang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', attachmentsLength, 'i');\n  } else if (areAllAudios) {\n    title = oldLang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', attachmentsLength, 'i');\n  } else {\n    title = oldLang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', attachmentsLength, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{oldLang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {oldLang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {oldLang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {oldLang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {oldLang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {oldLang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n  const buttonSendCaption = paidMessagesStars ? formatStarsAsIcon(lang,\n    attachmentsLength * paidMessagesStars,\n    {\n      className: styles.sendButtonStar,\n      asFont: true,\n    }) : oldLang('Send');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n      isLowStackPriority\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={oldLang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={oldLang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? oldLang('Next')\n                  : editingMessage ? oldLang('Save') : buttonSendCaption}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={canSchedule && isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                  onSendWhenOnline={onSendWhenOnline}\n                  canScheduleUntilOnline={canScheduleUntilOnline}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { shouldSuggestCustomEmoji } = global.settings.byKey;\n    const { language } = selectSharedSettings(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          maxLength={MAX_OPTION_LENGTH}\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        <div className=\"dialog-checkbox-group\">\n          {!shouldBeAnonymous && (\n            <Checkbox\n              label={lang('PollAnonymous')}\n              checked={isAnonymous}\n              onChange={handleIsAnonymousChange}\n            />\n          )}\n          <Checkbox\n            label={lang('PollMultiple')}\n            checked={isMultipleAnswers}\n            disabled={isQuizMode}\n            onChange={handleMultipleAnswersChange}\n          />\n          <Checkbox\n            label={lang('PollQuiz')}\n            checked={isQuizMode}\n            disabled={isMultipleAnswers || isQuiz !== undefined}\n            onChange={handleQuizModeChange}\n          />\n        </div>\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { IconName } from '../../../types/icons';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, IconName> = {\n  recent: 'recent',\n  people: 'smile',\n  nature: 'animals',\n  foods: 'eats',\n  activity: 'sport',\n  places: 'car',\n  objects: 'lamp',\n  symbols: 'language',\n  flags: 'flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <Icon name=\"close\" className=\"gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <Icon name=\"search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <Icon name=\"delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <Icon name=\"eye-crossed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <Icon name=\"bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <Icon name=\"italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <Icon name=\"underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <Icon name=\"strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <Icon name=\"monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <Icon name=\"link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <Icon name=\"check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/visibility/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult;\n  onClick: (result: ApiBotInlineResult | ApiBotInlineMediaResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, description,\n  } = inlineResult;\n\n  const url = 'url' in inlineResult ? inlineResult.url : undefined;\n  const webThumbnail = 'webThumbnail' in inlineResult ? inlineResult.webThumbnail : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineMediaResult | ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <Icon name=\"lock-badge\" className=\"send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(lang, postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(lang, postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && oldLang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: OldLangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: OldLangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.root, 'panel-content custom-scroll', isReady && styles.ready)}>\n      {statistics && (\n        <StatisticsOverview\n          statistics={statistics}\n          type={isGroup ? 'group' : 'channel'}\n          title={lang('StatisticOverview')}\n        />\n      )}\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics)?.recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiPoll } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectPollFromMessage, selectTabState,\n} from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  poll?: ApiPoll;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  poll,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !poll || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = poll;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${poll.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n    const poll = message && selectPollFromMessage(global, message);\n\n    return {\n      chat,\n      message,\n      poll,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"channel-title\"\n              label={lang('EnterChannelName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"channel-about\"\n              label={lang('DescriptionPlaceholder')}\n              onChange={handleAboutChange}\n              value={about}\n              maxLength={CHANNEL_MAX_DESCRIPTION}\n              maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <Icon name=\"add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info section-info_push\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <LinkField link={privateInviteLink} className=\"invite-link\" />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <div className=\"settings-input\">\n              <UsernameInput\n                asLink\n                currentUsername={currentUsername}\n                isLoading={isLoading}\n                isUsernameAvailable={isUsernameAvailable}\n                checkedUsername={checkedUsername}\n                onChange={handleUsernameChange}\n              />\n            </div>\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    return filterPeersByQuery({ ids: availableMemberIds, query: search, type: 'user' });\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <Icon name=\"add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"section-info section-info_push\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"group-title\"\n              label={lang('GroupName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === GROUP_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"group-about\"\n              label={lang('DescriptionPlaceholder')}\n              maxLength={GROUP_MAX_DESCRIPTION}\n              maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n              onChange={handleAboutChange}\n              value={about}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                subLabel={\n                  chatFullInfo.isPreHistoryHidden ? lang('ChatHistoryHiddenInfo2') : lang('ChatHistoryVisibleInfo')\n                }\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"panel-content custom-scroll\">\n        {canHideParticipants && !isChannel && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                  withPortalForMenu\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  DEFAULT_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PaidMessagePrice from '../../common/paidMessage/PaidMessagePrice';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  progress?: ManagementProgress;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n  arePaidMessagesAvailable?: boolean;\n  groupPeersPaidStars: number;\n  canChargeForMessages?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  progress,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n  arePaidMessagesAvailable,\n  canChargeForMessages,\n  groupPeersPaidStars,\n}) => {\n  const { updateChatDefaultBannedRights, updatePaidMessagesPrice } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const [isPriceForMessagesChanged, markPriceForMessagesChanged, unmarkPriceForMessagesChanged] = useFlag();\n  const [isPriceForMessagesOpen, setIsPriceForMessagesOpen] = useState(canChargeForMessages);\n  const [chargeForMessages, setChargeForMessages] = useState<number>(groupPeersPaidStars);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkPriceForMessagesChanged();\n    }\n  }, [progress]);\n\n  const handleSavePermissions = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  });\n\n  const handleUpdatePaidMessagesPrice = useLastCallback(() => {\n    if (!chat) return;\n    updatePaidMessagesPrice({\n      chatId: chat?.id,\n      paidMessagesStars: isPriceForMessagesOpen ? chargeForMessages : 0,\n    });\n  });\n\n  const handleUpdatePermissions = useLastCallback(() => {\n    if (isPriceForMessagesChanged) {\n      handleUpdatePaidMessagesPrice();\n    }\n    if (havePermissionChanged) {\n      handleSavePermissions();\n    }\n  });\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = oldLang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, oldLang]);\n\n  const handleChargeStarsForMessages = useLastCallback(() => {\n    setIsPriceForMessagesOpen(!isPriceForMessagesOpen);\n    markPriceForMessagesChanged();\n  });\n\n  const handleChargeForMessagesChange = useLastCallback((value: number) => {\n    setChargeForMessages(value);\n    markPriceForMessagesChanged();\n  });\n\n  const arePermissionsChanged = isPriceForMessagesChanged || havePermissionChanged;\n  const arePermissionsLoading = progress === ManagementProgress.InProgress || isLoading;\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        {arePaidMessagesAvailable && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem onClick={handleChargeStarsForMessages}>\n              <span>{lang('GroupMessagesChargePrice')}</span>\n              <Switcher\n                id=\"charge_for_messages\"\n                label={lang('GroupMessagesChargePrice')}\n                checked={isPriceForMessagesOpen}\n              />\n            </ListItem>\n            <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('RightsChargeStarsAbout')}\n            </p>\n          </div>\n        )}\n\n        {isPriceForMessagesOpen && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <PaidMessagePrice\n              canChangeChargeForMessages\n              isGroupChat\n              chargeForMessages={chargeForMessages}\n              onChange={handleChargeForMessagesChange}\n            />\n          </div>\n        )}\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={arePermissionsChanged}\n        onClick={handleUpdatePermissions}\n        ariaLabel={lang('Save')}\n        disabled={arePermissionsLoading}\n      >\n        {arePermissionsLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { progress } = selectTabState(global).management;\n\n    const paidMessagesStars = chat?.paidMessagesStars;\n    const configStarsPaidMessageCommissionPermille = global.appConfig?.starsPaidMessageCommissionPermille;\n\n    return {\n      chat,\n      progress,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n      arePaidMessagesAvailable: Boolean(fullInfo?.arePaidMessagesAvailable && configStarsPaidMessageCommissionPermille),\n      canChargeForMessages: Boolean(paidMessagesStars && configStarsPaidMessageCommissionPermille),\n      groupPeersPaidStars: paidMessagesStars || DEFAULT_CHARGE_FOR_MESSAGES,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"section-help hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-heading\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"section-help hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-heading\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"section-help hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"section-help\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"section-help\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"panel-content custom-scroll\">\n        {!invite && (\n          <p className=\"section-help\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <LinkField title={invite.title} link={invite.link} className=\"invite-link\" />\n              {Boolean(expireDate) && (\n                <p className=\"section-help\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p className=\"section-heading\">{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: oldLang('LinkCopied'),\n    });\n  }, [oldLang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = oldLang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = oldLang('PeopleJoined', usage);\n    } else {\n      text = oldLang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${oldLang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${oldLang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${oldLang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = expireDate - getServerTime();\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += oldLang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += oldLang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${oldLang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: oldLang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: oldLang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: oldLang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: oldLang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"section-help\">{isChannel ? oldLang('PrimaryLinkHelpChannel') : oldLang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <LinkField\n              className=\"settings-input\"\n              link={primaryInviteLink}\n              withShare\n              onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n              title={chat?.usernames ? oldLang('PublicLink') : oldLang('lng_create_permanent_link_title')}\n            />\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <ListItem icon=\"add\" withPrimaryColor key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {oldLang('CreateNewLink')}\n          </ListItem>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"section-help hint\" key=\"links-hint\">{oldLang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"section-help\" key=\"title\">{oldLang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{oldLang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={oldLang('DeleteAllRevokedLinks')}\n        text={oldLang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={oldLang('RevokeLink')}\n        text={oldLang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={oldLang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={oldLang('DeleteLink')}\n        text={oldLang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"section-help\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info section-info_push\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"user-first-name\"\n              label={lang('UserInfo.FirstNamePlaceholder')}\n              onChange={handleFirstNameChange}\n              value={firstName}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              id=\"user-last-name\"\n              label={lang('UserInfo.LastNamePlaceholder')}\n              onChange={handleLastNameChange}\n              value={lastName}\n            />\n          </div>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"section-help\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { RegularLangFnParameters } from '../../util/localization';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Partial<Record<string, RegularLangFnParameters>>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\",\"list\":\"l_wfiFG0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiLabeledPrice,\n  ApiPaymentCredentials,\n  ApiWebDocument,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { IconName } from '../../types/icons';\nimport type { LangFn } from '../../util/localization';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  title: string;\n  description: string;\n  photo?: ApiWebDocument;\n  invoice: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: ApiLabeledPrice[];\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  title,\n  description,\n  photo,\n  invoice,\n  shippingPrices,\n  checkoutInfo,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const ref = useMediaTransition<HTMLImageElement>(photoUrl);\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(lang, tipAmount!, invoice.currency)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(lang, tip, invoice.currency, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = oldLang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, oldLang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && (\n          <img\n            ref={ref}\n            className={styles.checkoutPicture}\n            src={photoUrl}\n            draggable={false}\n            width={photo!.dimensions?.width}\n            height={photo!.dimensions?.height}\n            alt=\"\"\n          />\n        )}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {description && (\n            <div className={styles.checkoutDescription}>\n              {renderText(description, ['br', 'links', 'emoji'])}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {invoice.prices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang, oldLang('Checkout.TotalAmount'), totalPrice, invoice.currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: oldLang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: oldLang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: oldLang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: oldLang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: oldLang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: oldLang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  lang: LangFn, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(lang, value, currency)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      className={styles.list}\n      narrow\n      multiline={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { RegularLangFnParameters } from '../../util/localization';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  errorKey?: RegularLangFnParameters;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  errorKey,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={errorKey && lang.withRegular(errorKey)}\n        hint={passwordHint}\n        description={oldLang('PaymentConfirmationMessage', cardName)}\n        placeholder={oldLang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    errorKey: payment.error?.messageKey,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.form?.type === 'regular' ? payment.form.savedCredentials : undefined,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{oldLang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber && lang.withRegular(formErrors.cardNumber)}\n        />\n        {needCardholderName && (\n          <InputText\n            label={oldLang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder && lang.withRegular(formErrors.cardholder)}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry && lang.withRegular(formErrors.expiry)}\n          />\n          <InputText\n            label={oldLang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv && lang.withRegular(formErrors.cvv)}\n            teactExperimentControlled\n          />\n        </section>\n        {needCountry || needZip ? (\n          <h5>{oldLang('PaymentBillingAddress')}</h5>\n        ) : undefined}\n        <section className=\"inline-inputs\">\n          {needCountry && (\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.billingCountry}\n              hasArrow={Boolean(true)}\n              id=\"billing-country\"\n              error={formErrors.billingCountry && lang.withRegular(formErrors.billingCountry)}\n              tabIndex={0}\n              ref={selectCountryRef}\n            >\n              {\n                countryList.map(({ defaultName, name }) => (\n                  <option\n                    value={defaultName}\n                    className=\"county-item\"\n                    selected={defaultName === state.billingCountry}\n                  >\n                    {defaultName || name}\n                  </option>\n                ))\n              }\n            </Select>\n          )}\n          {needZip && (\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handleBillingPostCodeChange}\n              value={state.billingZip}\n              inputMode=\"text\"\n              tabIndex={0}\n              maxLength={12}\n              error={formErrors.billingZip && lang.withRegular(formErrors.billingZip)}\n            />\n          )}\n        </section>\n        <div className=\"checkbox\">\n          <Checkbox\n            label={oldLang('PaymentCardSavePaymentInformation')}\n            checked={canSaveCredentials ? state.saveCredentials : false}\n            tabIndex={0}\n            subLabel={oldLang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n            onChange={handleChangeSaveCredentials}\n            disabled={!canSaveCredentials}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(lang, amount, currency),\n    value,\n  }))), [shippingOptions, currency, lang]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{oldLang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{oldLang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={oldLang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1 && lang.withRegular(formErrors.streetLine1)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2 && lang.withRegular(formErrors.streetLine2)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city && lang.withRegular(formErrors.city)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state && lang.withRegular(formErrors.state)}\n            />\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2 && lang.withRegular(formErrors.countryIso2)}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode && lang.withRegular(formErrors.postCode)}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{oldLang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={oldLang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName && lang.withRegular(formErrors.fullName)}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={oldLang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email && lang.withRegular(formErrors.email)}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={oldLang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone && lang.withRegular(formErrors.phone)}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={oldLang('PaymentShippingSave')}\n          subLabel={oldLang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountry, ApiInvoice, ApiLabeledPrice, ApiPaymentCredentials, ApiPaymentFormRegular,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  step?: PaymentStep;\n  chat?: ApiChat;\n  nativeProvider?: string;\n  invoice?: ApiInvoice;\n  form?: ApiPaymentFormRegular;\n  error?: TabState['payment']['error'];\n  prices?: ApiLabeledPrice[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  shippingOptions?: ShippingOption[];\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  form,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.messageKey,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (form?.savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = form.savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [form, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.descriptionKey ? lang.withRegular(error.descriptionKey) : lang('ErrorUnspecified')}</h4>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            title={form!.title}\n            description={form!.description}\n            photo={form!.photo}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice!}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!form!.isPasswordMissing && form!.canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            needEmail={Boolean(invoice?.isEmailRequested || invoice?.isEmailSentToProvider)}\n            needPhone={Boolean(invoice?.isPhoneRequested || invoice?.isPhoneSentToProvider)}\n            needName={Boolean(invoice?.isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={invoice!.currency}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (form?.savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (invoice?.isEmailRequested && !email)\n          || (invoice?.isPhoneRequested && !phone)\n          || (invoice?.isNameRequested && !fullName);\n\n        if ((invoice?.isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (invoice?.isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return oldLang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return oldLang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return oldLang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return oldLang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return oldLang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return oldLang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return oldLang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, oldLang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? oldLang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, invoice!.currency, oldLang.code))\n    : lang('PaymentInfoDone');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <Icon name={step === PaymentStep.Checkout ? 'close' : 'arrow-left'} />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            className=\"button-text\"\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      form,\n      step,\n      shippingOptions,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    const { invoice, nativeParams, nativeProvider } = form || {};\n    const countryList = global.countryList.general;\n\n    let providerName = form?.nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const bot = form?.botId ? selectUser(global, form.botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      nativeProvider: providerName,\n      isProviderError,\n      form,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: ApiLabeledPrice[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiReceiptRegular, ApiShippingAddress } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceiptRegular;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  receipt,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const prevReceipt = usePrevious(receipt);\n  const renderingReceipt = receipt || prevReceipt;\n\n  const checkoutInfo = useMemo(() => {\n    if (!renderingReceipt) return undefined;\n    return getCheckoutInfo(renderingReceipt.credentialsTitle, renderingReceipt.info, renderingReceipt.shippingMethod);\n  }, [renderingReceipt]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      {renderingReceipt && (\n        <>\n          <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            <Button\n              className=\"close-button\"\n              color=\"translucent\"\n              round\n              size=\"smaller\"\n              onClick={closeModal}\n              ariaLabel=\"Close\"\n            >\n              <Icon name=\"close\" />\n            </Button>\n            <h3> {lang('PaymentReceipt')} </h3>\n          </div>\n          <div className=\"receipt-content custom-scroll\">\n            <Checkout\n              shippingPrices={renderingReceipt.shippingPrices}\n              totalPrice={renderingReceipt.totalAmount}\n              tipAmount={renderingReceipt.tipAmount}\n              invoice={renderingReceipt.invoice}\n              checkoutInfo={checkoutInfo}\n              title={renderingReceipt.title}\n              description={renderingReceipt.description}\n              photo={renderingReceipt.photo}\n            />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    return {\n      receipt,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?: {\n    phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport Modal from '../ui/Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n};\n\nconst WebAppsCloseConfirmationModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { closeWebAppsCloseConfirmationModal, closeWebAppModal } = getActions();\n\n  const [shouldSkipInFuture, setShouldSkipInFuture] = useState(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onClose = useCallback(() => {\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const confirmHandler = useCallback(() => {\n    closeWebAppModal({ shouldSkipConfirmation: true });\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      title={lang('CloseMiniApps')}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <p>{lang('AreYouSureCloseMiniApps')}</p>\n      <Checkbox\n        className=\"dialog-checkbox\"\n        label={lang('DoNotAskAgain')}\n        checked={shouldSkipInFuture}\n        onCheck={setShouldSkipInFuture}\n      />\n      <div\n        className=\"dialog-buttons mt-2\"\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color=\"danger\"\n        >\n          {oldLang('Confirm')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {oldLang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(WebAppsCloseConfirmationModal);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { selectUser } from '../../../global/selectors';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport TableAboutModal, { type TableAboutData } from '../common/TableAboutModal';\n\nimport styles from './FrozenAccountModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['isFrozenAccountModalOpen'];\n};\n\ntype StateProps = {\n  freezeAppealUrl?: string;\n  botFreezeAppealUsername?: string;\n  freezeUntilDate?: number;\n};\n\nconst FrozenAccountModal = ({\n  modal,\n  freezeUntilDate,\n  freezeAppealUrl,\n  botFreezeAppealUsername,\n}: OwnProps & StateProps) => {\n  const {\n    closeFrozenAccountModal,\n    openUrl,\n  } = getActions();\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n\n  const handleClose = useLastCallback(() => {\n    closeFrozenAccountModal();\n  });\n\n  const handleAppeal = useLastCallback(() => {\n    closeFrozenAccountModal();\n    if (freezeAppealUrl) {\n      openUrl({ url: freezeAppealUrl });\n    }\n  });\n\n  const header = useMemo(() => {\n    return (\n      <div className={styles.header}>\n        <AnimatedIconWithPreview\n          size={160}\n          tgsUrl={LOCAL_TGS_URLS.BannedDuck}\n          noLoop\n        />\n        <div className={styles.title}>\n          {lang('FrozenAccountModalTitle')}\n        </div>\n      </div>\n    );\n  }, [lang]);\n\n  const footer = useMemo(() => {\n    if (!isOpen) return undefined;\n    return (\n      <div className={styles.footer}>\n        <Button\n          className={styles.buttonAppeal}\n          size=\"smaller\"\n          onClick={handleAppeal}\n          noForcedUpperCase\n        >\n          {lang('ButtonAppeal')}\n        </Button>\n        <Button\n          isText\n          size=\"smaller\"\n          onClick={handleClose}\n          noForcedUpperCase\n        >\n          {lang('ButtonUnderstood')}\n        </Button>\n      </div>\n    );\n  }, [lang, isOpen]);\n\n  if (!freezeUntilDate || !botFreezeAppealUsername) return undefined;\n\n  const date = new Date(freezeUntilDate * 1000);\n\n  const botLink = (\n    <Link onClick={handleAppeal} isPrimary>\n      {formatUsername(botFreezeAppealUsername)}\n    </Link>\n  );\n\n  const listItemData = [\n    ['hand-stop', lang('FrozenAccountViolationTitle'), lang('FrozenAccountViolationSubtitle')],\n    ['lock', lang('FrozenAccountReadOnlyTitle'), lang('FrozenAccountReadOnlySubtitle')],\n    ['frozen-time', lang('FrozenAccountAppealTitle'),\n      lang('FrozenAccountAppealSubtitle', {\n        botLink,\n        date: formatDateToString(date, lang.code),\n      }, {\n        withNodes: true,\n      })],\n  ] satisfies TableAboutData;\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      header={header}\n      listItemData={listItemData}\n      footer={footer}\n      hasBackdrop\n      onClose={handleClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const freezeUntilDate = global.appConfig?.freezeUntilDate;\n    const freezeAppealUrl = global.appConfig?.freezeAppealUrl;\n    const botFreezeAppealId = global.botFreezeAppealId;\n    const botFreezeAppealUsername = botFreezeAppealId\n      ? selectUser(global, botFreezeAppealId)?.usernames?.[0]?.username : undefined;\n\n    return {\n      freezeUntilDate,\n      freezeAppealUrl,\n      botFreezeAppealUsername,\n    };\n  },\n)(FrozenAccountModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"cW2rtp6M\",\"title\":\"qLSm0uyC\",\"footer\":\"Vj3QQ_JQ\",\"buttonAppeal\":\"anvg3JaY\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  const lang = useLang();\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n"],"names":["memo","StarTopupOptionList","isActive","className","options","selectedStarOption","selectedStarCount","starsNeeded","onClick","oldLang","useOldLang","lang","useLang","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","useFlag","useEffect","renderingOptions","canExtend","useMemo","undefined","maxOption","reduce","max","option","stars","forceShowAll","result","currentStackedStarsCount","canExtendOptions","forEach","index","isExtended","push","starsCount","Math","min","isWide","length","React","createElement","buildClassName","styles","map","isOdd","isActiveOption","perUserStarCount","winner","winners","find","opt","users","perUserStars","wideOption","active","key","optionTop","formatInteger","stackedStars","dir","isRtl","Array","from","StarIcon","stackedStar","type","size","optionBottom","formatCurrency","amount","currency","renderText","Button","moreOptions","isText","noForcedUpperCase","Icon","iconDown","name","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","PasswordMonkey","isPasswordVisible","isBig","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","isMobile","useAppLayout","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","useTimeout","handleFirstMonkeyLoad","useCallback","id","AnimatedSticker","STICKER_SIZE_TWO_FA","tgsUrl","LOCAL_TGS_URLS","MonkeyClose","playSegment","noLoop","onLoad","MonkeyPeek","TableAboutModal","isOpen","listItemData","headerIconName","header","footer","buttonText","hasBackdrop","withSeparator","onClose","onButtonClick","contentClassName","Modal","hasAbsoluteCloseButton","absoluteCloseButtonColor","icon","title","subtitle","ListItem","isStatic","multiline","iconClassName","Separator","PickerModal","confirmButtonText","isConfirmDisabled","shouldAdaptToSearch","withFixedHeight","onConfirm","withPremiumGradient","modalProps","hasButton","Boolean","_extends","isSlim","headerClassName","children","color","disabled","TableInfoModal","tableData","headerAvatarPeer","modalHeader","openChat","getActions","handleOpenChat","useLastCallback","peerId","hasCloseButton","Avatar","peer","label","value","Fragment","PeerChip","chatId","forceShowSelf","withEmojiStatus","clickArg","getViewableMedia","params","media","mediaIndex","isSingle","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","webPageDocument","isDocumentMedia","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","getNodes","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","ChannelAvatar","SuggestedAvatar","StarsTransaction","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","container","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","onload","blurredDataUri","clear","set","window","setTimeout","useBlur","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","ReportAvatarModal","onCloseAnimationEnd","reportProfilePhoto","selectedReason","setSelectedReason","useState","description","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","e","target","REPORT_OPTIONS","onEnter","RadioGroup","onChange","selected","InputText","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","DeleteProfilePhotoModal","profileId","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","isUserId","withGlobal","global","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","chat","selectCurrentChat","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","MediaViewerActions","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","onTrigger","round","ariaLabel","renderDeleteModal","openDeleteModalHandler","messageIds","isSchedule","menuItems","isForwardingAllowed","content","href","download","destructive","DropdownMenu","trigger","positionX","MenuItem","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","getCurrentTime","setCurrentTime","useCurrentTimeSignal","MediaViewerFooter","text","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","stopPropagation","isRectangular","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","connector","request","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","SeekLine","duration","bufferedRanges","isReady","posterSize","playbackRate","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","start","end","PLAYBACK_RATES","VideoPlayerControls","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","ripple","RangeSlider","bold","renderTime","formatFileSize","Menu","positionY","autoClose","rate","VideoPlayer","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","timestamp","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","sponsoredMessage","textMessage","maxTimestamp","selectMessageTimestampableDuration","MediaViewerContent","withAnimation","isMoving","onFooterClick","updateLastPlaybackTimestamp","toggleControlsOnMove","updatePlaybackTimestamp","useThrottledCallback","MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION","isInAlbum","newTimestamp","PLAYBACK_SAVE_INTERVAL","useSignalEffect","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","MediaViewerSlides","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","closest","calculateOffsetBoundaries","offsetTop","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","dragOffsetX","dragOffsetY","cancelDrag","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","includes","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","toFixed","element","selector","matches","messageSender","selectSender","owner","SenderInfo","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getPeerTitle","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","MediaViewer","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsored","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","imageEl","messageListElement","getOffsetToContainer","scrollTop","offsetHeight","isMessageImageFullyVisible","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","HTMLElement","isFromMedia","isMedia","randomId","handleForward","fromChatId","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","StealthModeModal","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","inactive","leftElement","isShiny","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterPeersByQuery","ids","query","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","usersById","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","getHours","expireDate","section","list","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","closeButton","headerTitle","renderHeaderContent","slideClassName","sender","fromPeerId","EmbeddedStoryForward","openStoryViewer","loadPeerStoriesByIds","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","PeerColorWrapper","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","StoryFooter","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","userFullInfo","selectUserFullInfo","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","reportModal","giftInfoModal","isPaymentMessageConfirmDialogOpen","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","paidMessagesStars","selectPeerPaidMessagesStars","isAccountFrozen","selectIsCurrentUserFrozen","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","arePeerSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadPeerSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","inputPlaceholder","formatStarsAsIcon","asFont","withNodes","StoryProgress","formatRelativePastTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","transformX","getCurrentStoryRef","composer","focusEditableElement","disableScrolling","enableScrolling","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","scrollHeight","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","StoryView","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","viewsList","contactFilter","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","reportStory","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","openMessageReport","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","ChatOrUserPicker","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","isLowStackPriority","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","toLowerCase","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","RecipientPicker","API_CHAT_TYPES","onSelectRecipient","setSearch","priorityIds","isDeletedUser","chatFullInfo","selectChatFullInfo","sorted","sortChatIds","filterChatIdsByType","renderingIds","isForwarding","isManyMessages","isStory","ForwardRecipientPicker","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","DraftRecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","AttachBotRecipientPicker","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","Dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","messageList","getReadableErrorText","pick","Notifications","notifications","notification","Notification","localId","SafeLinkModal","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","withMarkdown","OpenMapModal","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","UrlAuthModal","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","CalendarModal","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","hours","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","HistoryCalendar","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","phoneCodeList","countryList","phoneCodes","NewContactModal","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","ResizeHandleType","resizeHandleSelectorsMap","Top","Bottom","Left","Right","topLeft","TopLeft","topRight","TopRight","bottomLeft","BottomLeft","bottomRight","BottomRight","resizeHandleSelectors","resizeTimeout","FULLSCREEN_POSITION","webApps","selectActiveWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","MinimizedWebAppModal","changeWebAppModalState","closeWebAppModal","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","state","activeTabName","botName","pluralValue","renderTitle","isPopularApp","requestMainWebView","theme","extractCurrentThemeParams","activeUserCount","botActiveUsers","badgeText","formatIntegerCompact","PeerBadge","avatarContainer","textClassName","badgeClassName","userCountBadge","badgeIconClassName","userBadgeIcon","badgeIcon","runThrottled","cb","globalSearch","popularBotApps","fetchingStatus","botApps","recentBotIds","topBotApps","MoreAppsTabContent","shouldShowMoreMine","setShouldShowMoreMine","searchPopularBotApps","handleToggleShowMoreMine","prev","filteredFoundIds","LoadMoreDirection","Backwards","handleSearchInputReset","noFastList","preloadBackwards","onReset","sectionTitle","showMoreLink","sectionContent","WebAppGridItem","FULLSCREEN_BUTTONS_AREA_HEIGHT","MAIN_BUTTON_ANIMATION_TIME","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeWebApp","activeWebAppKey","selectWebApp","activeBotId","attachBot","attachMenu","bots","botAppSettings","botInfo","appSettings","selectTheme","isPaymentModalOpen","regularPaymentStatus","payment","starsPaymentStatus","inputInvoice","starsInputInvoice","starsPayment","botAppPermissions","selectBotAppPermissions","paymentStatus","WebAppModalTabContent","webApp","registerSendEventCallback","registerReloadFrameCallback","isTransforming","isMultiTabSupported","onContextMenuButtonClick","modalHeight","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","resetPaymentStatus","openChatWithInfo","openEmojiStatusAccessModal","openLocationAccessModal","openPreparedInlineMessageModal","mainButton","setMainButton","secondaryButton","setSecondaryButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","requestedFileDownload","setRequestedFileDownload","bottomBarColor","setBottomBarColor","unlockPopupsAt","handlePopupOpened","handlePopupClosed","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerButtonRef","headerButtonCaptionRef","exitFullScreenCallback","fullscreenElementRef","activeWebAppName","appName","isBackButtonVisible","placeholderPath","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","isAvailable","IS_GEOLOCATION_SUPPORTED","isAccessRequested","geolocation","isAccessGranted","updateCurrentWebApp","updatedPartialWebApp","update","themeParams","secondary_bg_color","themeBackgroundColor","bg_color","backgroundColorFromEvent","setBackgroundColorFromEvent","backgroundColorFromSettings","backgroundColor","backgroundDarkColor","themeHeaderColor","headerColorFromEvent","setHeaderColorFromEvent","headerColorFromSettings","headerColor","headerDarkColor","frameRef","isSimple","reloadFrame","sendEvent","sendFullScreenChanged","sendViewport","sendSafeArea","sendTheme","useWebAppFrame","isSimpleView","onEvent","openInvoice","closeWebApp","openSuggestedStatusModal","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","eventType","eventData","is_fullscreen","forceReloadFrame","once","isNonStable","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","custom_emoji_id","BigInt","customEmojiId","plannedEvents","getIsWebAppsFullscreenSupported","exitIfFullscreenCallback","TME_LINK_PREFIX","path_full","shouldIgnoreCache","force_request","is_visible","isSettingsButtonVisible","validateHexColor","color_key","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","handleRejectFileDownload","fileUrl","handleCheckDownloadFile","file_name","access_requested","access_granted","geolocationData","getGeolocationStatus","accessRequested","accessGranted","latitude","longitude","altitude","course","heading","speed","horizontal_accuracy","accuracy","vertical_accuracy","altitudeAccuracy","handleRequestLocation","isMainButtonVisible","isSecondaryButtonVisible","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","handleSecondaryButtonClick","buttonId","button_id","handleAppPopupModalClose","sendThemeCallback","setFullscreenCallback","checkIfFullscreen","sendFullScreenChangedCallback","visibilityChangedCallBack","prevModalState","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","shouldCloseActive","handleAcceptWriteAccess","handleDownloadFile","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","secondaryButtonCurrentPosition","secondaryButtonCurrentColor","secondaryButtonCurrentTextColor","secondaryButtonCurrentIsActive","secondaryButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideMainButton","setShouldHideMainButton","shouldHideSecondaryButton","setShouldHideSecondaryButton","shouldShowMainButton","setShouldShowMainButton","shouldShowSecondaryButton","setShouldShowSecondaryButton","shouldShowAppNameInFullscreen","setShouldShowAppNameInFullscreen","backButtonTextWidth","setBackButtonTextWidth","isVerticalLayout","rowsCount","hideDirection","mainButtonChangeTimeout","mainButtonFastTimeout","secondaryButtonChangeTimeout","secondaryButtonFastTimeout","appNameDisplayTimeout","frameStyle","handleBackClick","handleCollapseClick","handleShowContextMenu","backIconClass","backButtonCaption","hasHeaderElement","viewBox","renderDefaultPlaceholder","sandbox","allow","allowFullScreen","filename","MINIMIZED_STATE_SIZE","DEFAULT_MAXIMIZED_STATE_SIZE","MAXIMIZED_STATE_MINIMUM_SIZE","miniAppsCachedPosition","miniAppsCachedSize","selectSharedSettings","cachedPosition","cachedSize","WebAppModal","prolongWebView","openWebAppTab","openMoreAppsTab","closeMoreAppsTab","updateMiniAppCachedPosition","updateMiniAppCachedSize","getMaximizedStateSize","setMaximizedStateSize","getSize","openedOrderedKeys","sessionKeys","isMoreAppsTabActive","tabs","isMaximizedState","isFullScreen","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","isDragging","draggableStyle","dragHandleElementRef","isDragEnabled","originalSize","minimumSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartTransform","setElementPositionOnStartTransform","getElementSizeOnStartTransform","setElementSizeOnStartTransform","getTransformStartPoint","setTransformStartPoint","elementPositionOnStartTransform","transformStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","startResizing","stopResizing","isWindowsResizing","startWindowResizing","stopWindowResizing","hitResizeHandle","setHitResizeHandle","getVisibleArea","innerWidth","innerHeight","updateCurrentPosition","getActualPosition","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleStartResize","targetElement","resizeHandle","RESIZE_HANDLE_SELECTOR","getResizeHandleFromTarget","handleDragRelease","handleResizeRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","originalWidth","originalHeight","adjustSizeWithinBounds","handleWindowResize","handleDrag","sizeOnStartTransform","pageVisibleX","pageVisibleY","maxX","maxY","newBounds","cleanups","resizeHandler","cursorStyle","actualPosition","useDraggable","getMinimumSize","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleCloseMoreAppsTab","handleTabClose","handleToggleClick","handleFullscreenClick","handleOpenMoreAppsTabClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","renderMoreMenu","anchor","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","fill","buildResizeHandleClass","handleClassName","RESIZE_HANDLE_CLASS_NAME","useHorizontalScroll","dialogRef","dialogStyle","dialogContent","shortName","renderActiveTab","noBackdropClose","BotTrustModal","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","AttachBotInstallModal","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","DeleteFolderDialog","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","PremiumFeatureItem","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","SliderDots","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","PremiumLimitsCompare","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","PremiumLimitPreview","colorStepProgress","lerp","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","play","isLowPriority","stickers","premium","PremiumFeaturePreviewStickers","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","AVATAR_SIZES","giant","PremiumFeaturePreviewVideo","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","moreAccounts","LIMITS_DESCRIPTIONS","PremiumFeatureModal","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","months","perMonthPrice","price","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","currentSection","hasHeaderBackdrop","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumFeaturePreviewStories","videoSections","videos","PREMIUM_BOTTOM_VIDEOS","PremiumSubscriptionOption","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","formatCurrencyAsString","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","PremiumMainModal","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","monthOption","subscribeButtonText","CustomEmoji","PremiumLogo","template","first","second","emoji","thumbCustomEmojiId","link","getHeaderText","statusText","entities","statusEntities","renderFooterText","ItemPicker","notFoundText","noScrollRestore","isViewOnly","itemClassName","forceRenderAllItems","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","CountryPickerModal","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","GiveawayChannelPickerModal","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","GiveawayTypeOption","isLink","onClickAction","userNames","selectedMemberIds","displayText","members","adminMembersById","GiveawayUserPickerModal","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredUserIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","gifts","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GiveawayModal","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedMonthOption","setSelectedMonthOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedGift","gift","selectedStarsGift","filteredGifts","STARS_CURRENCY_CODE","basicGift","userCountOptions","winnerCountOptions","quantity","handlePremiumClick","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","subLabelClassName","formatDateTimeToString","boosts","RangeSliderWithMarks","rangeCount","marks","match","Link","isPrimary","renderPremiumFeaturesLink","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","PremiumLimitReachedModal","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","maxDistance","StickerSetCover","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToSticker","IS_WEBM_SUPPORTED","firstStickerHash","getStickerMediaHash","firstStickerMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","StickerButton","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","withSparkles","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","until","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","Sparkles","preset","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","ReactionEmoji","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","collectibleStatuses","collectibleEmojiStatuses","statuses","StickerSet","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isStatusCollectible","COLLECTIBLE_STATUS_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","collectibleEmojiIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","isHqEmoji","canvasRef","HEADER_BUTTON_WIDTH","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","CustomEmojiPicker","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","collectibleStatusEmojis","collectibleStatusEmojiIds","prefix","canLoadAndPlay","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","uniqueByField","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","StatusPickerMenu","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CUSTOM_EMOJI_SIZE","SuggestedStatusModal","closeSuggestedStatusModal","sendWebAppEvent","renderingModal","mockPeerWithStatus","formatShortDuration","handleSetStatus","expires","referrerWebAppKey","loopLimit","mockPeer","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","BoostModal","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","chatMessage","GiftCodeModal","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","isFromGiveaway","ChatlistAlready","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","isNew","alreadyPeerIds","newChatsCount","noCustomEmojiPlayback","noTitleAnimations","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","Badge","buttonBadge","isAlternateColor","ChatlistDelete","suggestedPeerIds","leaveChatlist","ChatlistNew","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","ChatlistInviteModal","renderingInfo","renderingFolderTitle","folderTabNumber","folderTitle","foldersWrapper","folders","Tab","badgeCount","isBadgeActive","ChatInviteModal","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","minLevelToRestrictAds","channelRestrictAdsLevelMin","AboutAdsModal","closeAboutAdsModal","moreMenuRef","canReport","additionalInfo","sponsorInfo","isMonetizationSharing","renderingIsNewDesign","regularAdContent","SafeLink","SponsoredMessageContextMenuContainer","triggerRef","shouldSkipAbout","onItemClick","AboutMonetizationModal","blockchainText","monetizationTitle","specialReplacement","twoFaSettings","hint","passwordHint","VerificationMonetizationModal","closeMonetizationVerificationModal","clearMonetizationVerificationError","processMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","handleClearError","PasswordForm","shouldShowSubmit","errorKey","withRegular","clearError","shouldResetValue","onChangePasswordVisibility","EmojiStatusAccessModal","closeEmojiStatusAccessModal","toggleUserEmojiStatusPermission","loadDefaultStatusIcons","currentStatusIndex","setCurrentStatusIndex","totalCount","prevIndex","renderPickerItem","chatItem","itemName","isBotAccessEmojiGranted","onCloseHandler","renderStatusText","LocationAccessModal","closeLocationAccessModal","toggleUserLocationPermission","renderInfo","ReportAdModal","reportSponsored","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","ReportModal","reportMessages","closeReportModal","openPreviousReportModal","setText","subject","handleTextChange","closeReportMessageModalHandler","sendMessageReportHandler","Report","TextArea","isOptional","maxLengthIndicator","noReplaceNewlines","isBlurred","isBackgroundBlurred","patternColor","background","customBackground","selectThemeValues","PreparedMessageModal","closePreparedInlineMessageModal","openSharePreparedMessageModal","customBackgroundValue","useCustomBackground","handleOpenClick","localMessage","getMockPreparedMessageFromResult","bgClassName","inert","Message","noComments","noReplies","appearanceOrder","isJustAdded","isFirstInGroup","isLastInGroup","isLastInList","isFirstInDocumentGroup","isLastInDocumentGroup","starsBalance","balance","isStarsBalanceModalOpen","starsBalanceModal","SharePreparedMessageModal","closeSharePreparedMessageModal","sendInlineBotResult","updateSharePreparedMessageModalSendArgs","pendingSendArgs","starsForSendMessage","closeConfirmDialog","closeConfirmModalPayForMessage","dialogHandler","paymentMessageConfirmDialogHandler","shouldAutoApprove","shouldPaidMessageAutoApprove","setAutoApprove","setShouldPaidMessageAutoApprove","handleWithConfirmation","handleActionWithPaymentConfirmation","usePaidMessageConfirmation","handleSend","handleSendWithPaymentConfirmation","handleClosePaymentMessageConfirmDialog","peerName","PaymentMessageConfirmDialog","userName","messagePriceInStars","messagesCount","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","PermissionCheckboxList","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","selectCanDeleteSelectedMessages","isSuperGroup","contactName","getPrivateChatUserId","chatBot","isSystemBot","selectBot","canBanUsers","getHasAdminRight","isCreator","isChatWithBot","selectIsChatWithBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","DeleteMessageModal","closeDeleteMessageModal","deleteMessages","reportChannelSpam","deleteChatMember","deleteScheduledMessages","exitMessageSelectMode","updateChatMemberBannedRights","deleteParticipantHistory","defaultBannedRights","peerIdsToDeleteAll","setPeerIdsToDeleteAll","peerIdsToBan","setPeerIdsToBan","peerIdsToReportSpam","setPeerIdsToReportSpam","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","shouldDeleteForAll","setShouldDeleteForAll","peerList","senderArray","getSendersFromSelectedMessages","buildNestedOptionListWithAvatars","member","peerListToDeleteAll","peerListToReportSpam","peerListToBan","isCurrentUserInList","isAdmin","shouldShowOption","peerNames","buildCollectionByCallback","ACTION_SPAM_OPTION","nestedOptions","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByPeerId","selectedMessageIdList","msgId","selectSenderFromMessage","handleReportSpam","userMessagesMap","messageIdList","participantId","handleDeleteMessages","filteredMessageIdList","handleDeleteAllPeerMessages","peerIdList","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageList","isNaN","CheckboxGroup","nestedCheckbox","isPrivateChat","canPinForAll","PinMessageModal","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","UnpinAllMessagesModal","pinnedMessagesCount","onUnpin","shouldWarnAboutSvg","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","selectedMessageIds","selectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","MessageSelectToolbar","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","setSharedSettingOption","handleCopy","useHotkeys","useCopySelectedMessages","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","handleExitMessageSelectMode","handleDelete","onBackspace","onEsc","handleMessageDownload","handleSvgConfirm","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","PrivacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","ReadTime","LastSeen","reactorModal","reactors","ReactorListModal","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","flatMap","peerReactions","reactor","seenByUser","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","EmojiInteractionAnimation","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","ChatLanguageModal","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","CollectibleInfoModal","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","PureMultimodalInput","setMessages","textareaRef","adjustHeight","localStorageInput","setLocalStorageInput","useLocalStorage","inputValue","setInputValue","domValue","submitForm","Textarea","cx","rows","autoFocus","shiftKey","toast","StopButton","SendButton","AISearchInput","prevProps","nextProps","PureStopButton","messages","sanitizeUIMessages","StopIcon","PureSendButton","suggestions","props","SerenaIcon","GLOBAL_SEARCH_CHATID","injectMessageAI","injectComponent","AISearch","messageListRef","attachments","setAttachments","pageInfo","setPageInfo","lastTime","hasMore","append","setInput","useChat","api","sendExtraMessageFields","ChataiStores","getMessages","res","localChatAiMessages","parseStoreMessage2Message","parsedMessage","parseMessage2StoreMessage","storeMessages","Promise","resolve","searchGroup","similarItems","messageEmbeddingStore","similaritySearch","filterOptions","include","metadata","chatType","searchResult","chatIds","score","uuidv4","createdAt","annotations","searchUser","senderIds","searchMessage","senderName","random","isAuxiliary","toolsHitCheck","fetch","headers","json","toolResults","toolCall","toolName","keyword","scrollToBottom","sendGAEvent","AISearchSugesstions","Messages","AISearchWrapper","injected","unmount","createMapStateToProps","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","AudioResults","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","getIsChatMuted","selectNotifyDefaults","selectNotifyException","canChangeFolder","chatFolders","LeftSearchResultChat","withUsername","withOpenAppButton","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","handleOpenApp","useSelectWithEnter","storyViewerOrigin","hasMainMiniApp","MuteChatModal","ChatFolderModal","BotAppResults","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","privateChatUserId","privateChatUser","ChatMessage","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","DateSuggest","searchDate","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","LeftSearchResultTopic","foundTopicIds","ChatMessageResults","dateSearchQuery","onSearchDateSelect","openThread","handleTopicClick","nothingFound","LeftSearchResultSponsored","sponsoredPeer","viewSponsored","useOnIntersect","intersectionRatio","handleBadgeClick","handleBadgeMouseDown","BadgeButton","topUserIds","topPeers","recentlyFoundChatIds","RecentContacts","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","ChatResults","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","searchContext","setSearchContext","context","handlePickerItemClick","getSearchContextCaption","handleClickContext","itemPlaceholderClass","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","shouldResetResultsByType","shouldCheckFetchingMessagesStatus","handleClickShowMoreLocal","handleClickShowMoreGlobal","actualFoundIds","isMessagesFetching","shouldRenderTopPeers","shouldRenderMessagesSection","noScrollRestoreOnTop","customIcon","shouldCleanup","CURRENT_TYPE","FileResults","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","LinkResults","WebLink","onMessageClick","MediaResults","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","AI","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","LeftSearch","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","INITIAL_STATE","email","twoFaReducer","payload","maxChats","selectCurrentLimit","SettingsFoldersChatFilters","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","el","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","SettingsFoldersEdit","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","typeKey","renderChatType","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","foldersById","recommended","recommendedChatFolders","folderIds","aiChatFolders","filterAIFolder","maxFolders","SettingsFoldersMain","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","PRESET_FOLDER_ID","UNREAD_FOLDER_ID","AI_FOLDER_ID","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","SettingsShareChatlist","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","pinnedChatIds","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","AnimatedIcon","FoldersShare","withShare","onRevoke","lockedUnselectedIds","SettingsFolders","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsPasswordForm","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","SettingsPasscodeCongratulations","fullReset","STICKER_SIZE_PASSCODE","Congratulations","SettingsPasscodeEnabled","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","SettingsPasscodeStart","passcode","SettingsPasscode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeForm","PasscodeEnabled","DEFAULT_POINTS","getProgress","points","pointIndex","findIndex","prevPoint","nextPoint","pointValue","PaidMessageSlider","readOnly","canChangeChargeForMessages","mainClassName","number","formatStarsAsText","step","starsUsdWithdrawRateX1000","starsUsdWithdrawRate","configStarsPaidMessageCommissionPermille","starsPaidMessageCommissionPermille","starsPaidMessageAmountMax","DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES","isGroupChat","chargeForMessages","handleChargeForMessagesChange","handleUnlockWithPremium","MINIMUM_CHARGE_FOR_MESSAGES","percent","formatPercent","premiumSection","handleOpenPremiumModal","nonContactPeersPaidStars","selectNonContactPeersPaidStars","noPaidReactionsForUsersCount","noPaidMessages","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","shouldChargeForMessages","DEFAULT_CHARGE_FOR_MESSAGES","canLimitNewMessagesWithoutPremium","canChargeForMessages","starsPaidMessagesAvailable","canChangeForContactsAndPremium","setChargeForMessages","PrivacyLockedOption","hidden","isCanCheckedInDisabled","updateGlobalPrivacySettingsWithDebounced","privacyDescription","PaidMessagePrice","itemSubtitle","PrivacyNoPaidMessages","renderSectionNoPaidMessagesForUsers","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","SettingsActiveSession","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","iconDevice","dateActive","box","appVersion","ip","region","getLocation","note","actionHeader","actionName","SettingsActiveSessions","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","SettingsActiveWebsite","terminateWebAuthorization","renderingBot","browser","SettingsActiveWebsites","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","StickerSetCard","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","byKey","customEmojiSetIds","canPlayAnimatedEmojis","SettingsCustomEmoji","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","SettingsDataStorage","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","SettingsDoNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","ManageUsernames","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","UsernameInput","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","SettingsEditProfile","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","SettingsExperimental","requestWave","snapButtonRef","isSnapButtonAnimating","setIsSnapButtonAnimating","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","handleRequestWave","startX","startY","handleRequestConfetti","handleSnap","animateSnap","Experimental","IS_WAVE_TRANSFORM_SUPPORTED","IS_SNAP_EFFECT_SUPPORTED","IS_ELECTRON","shouldUseSystemTheme","messageSendKeyCombo","messageTextSize","timeFormat","SettingsGeneral","isMobileDevice","timeFormatOptions","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","WallpaperTile","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","loadedWallpapers","SettingsGeneralBackground","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","SettingsHeader","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneNumberAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyGiftsAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","canTranslate","canTranslateChats","languages","SettingsLanguage","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","sessionCount","SettingsMain","openSupportChat","openGiftRecipientPicker","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","languageInfo","formatStarsAmount","FAQ_URL","PRIVACY_URL","renderTextFilters","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","SettingsNotifications","notifyDefaults","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsMuted","mutedUntil","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","groups","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","hasPasscode","canDisplayChatInTitle","isCurrentUserFrozen","blockedCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","SettingsPrivacy","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","botsPrivacy","isVisibilityEverybody","shouldShowBotsString","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","conjunction","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","BlockUserModal","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","SettingsPrivacyBlockedUsers","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","disallowedGifts","SettingsAcceptedGift","handleOpenTelegramPremiumModal","actionText","handleLimitedEditionChange","shouldDisallowLimitedStarGifts","handleUnlimitedEditionChange","shouldDisallowUnlimitedStarGifts","handleUniqueChange","shouldDisallowUniqueStarGifts","handlePremiumSubscriptionChange","shouldDisallowPremiumGifts","selectShouldHideReadMarks","SettingsPrivacyLastSeen","canShowHideReadTime","handleChangeShouldHideReadMarks","SettingsPrivacyPublicProfilePhoto","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","headerText","prepareSubtitle","userIdsCount","chatIdsCount","isAllowBots","userCountString","chatCountString","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","shouldDisplayGiftsButton","addByPhone","phoneP2P","SettingsPrivacyVisibility","handleShowGiftIconInChats","secondaryScreen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","SettingsPrivacyVisibilityExceptionList","isAllowList","withPremiumCategory","withMiniAppsCategory","usersOnly","setPrivacySettings","customPeerBots","isCustomPeer","avatarIcon","isAvatarSquare","peerColorId","miniAppsCategory","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","SettingsQuickReaction","setDefaultReaction","emoticon","withIcon","addedSetIds","SettingsStickers","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","SettingsTwoFaCongratulations","recoveryEmail","animatedEmoji","selectAnimatedEmoji","codeLength","waitingEmailCodeLength","SettingsTwoFaEmailCode","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","SettingsTwoFaEnabled","SettingsTwoFaSkippableForm","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","SettingsTwoFaStart","SettingsTwoFa","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaPassword","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_GIFTS_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","PRIVACY_MESSAGES_SCREENS","Settings","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","useMarkScrolled","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsGeneralBackgroundColor","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","ErrorTip","injectEditor","knowledge","knowledgeId","richText","question","setQuestion","questionError","setQuestionError","valueError","setValueError","handleQuestionChange","handleSave","plainText","n","Node","string","knowledgeIdValue","addKnowledge","knowledgeEmbeddingStore","updateText","answer","DSlate","toolbar","Input","AddKnowledgeModal","editorRef","AIKnowledgeEmptyContent","onAdd","AIKnowledgeEmpty","AIKnowledgeList","knowledgeList","onEdit","copy","handleEdit","AIKnowledgeContent","onShowAddModal","handleAdd","AIKnowledgeHeader","showAddButton","AIKnowledge","setKnowledgeList","showAddModal","setShowAddModal","setType","editKnowledge","setEditKnowledge","getAllKnowledge","handleCloseAddModal","handleShowAddModal","deleteKnowledge","deleteText","AutoTranslateLanguage","CHATAI_IDB_STORE","lan","autoTranslateLanguage","AITranslateContent","autoTranslate","setAutoTranslate","handleAutoTranslateChange","AITranslateHeader","AITranslate","userStatusesById","ContactList","openNewContactDialog","isSearching","NewChatStep1","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","NewChatStep2","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","NewChat","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","ArchivedChats","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","canScheduleUntilOnline","selectCanScheduleUntilOnline","shouldSchedule","selectShouldSchedule","StickerSetModal","prevStickerSet","renderingStickerSet","isAdded","requestCalendar","calendar","useSchedule","isScheduleRequested","isPreloadedGlobally","scheduledAt","handleCopyLink","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","CustomEmojiSetsModal","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","currentChatId","currentThreadId","canReportChat","canGift","selectCanGift","canCreateTopic","isUserRightBanned","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","HeaderMenuContainer","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","openFrozenAccountModal","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openGiftModal","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","setIsMenuOpen","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","areAllGiftsDisallowed","closeMenu","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftClick","forUserId","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","MenuSeparator","DeleteChatModal","isSavedDialog","MiddleSearchResult","senderPeer","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","MiddleSearch","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","shouldCancelSearchRef","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","tag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","StickerPicker","isForEffects","loadRecentStickers","addRecentSticker","unfaveSticker","faveSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","maxUniqueReactions","enabledReactions","reactionsLimit","ReactionPickerLimited","isTouchScreen","currentReactions","shouldUseCurrentReactions","allAvailableReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","isForbidden","ReactionPicker","toggleReaction","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","addLocalPaidReaction","openPaidReactionModal","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","shouldAddToRecent","handleToggleReaction","handleReactionContextMenu","handleStoryReactionSelect","customEmojiMessage","parseHtmlAsFormattedText","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","div","BLUR_CANVAS_SIZE","AttachmentModalItem","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","isFullyVisible","isHorizontal","viewportY1","viewportY2","y2","findInViewport","selectorOrElements","shouldContainBottom","allElements","visibleIndexes","isFound","setTooltipItemVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","isSelectionOutOfRange","onUp","onDown","onTab","MentionTooltip","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","AttachmentModal","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onSend","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","canSchedule","onSendWhenOnline","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","attachmentsLength","isBottomDividerShown","buttonSendCaption","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","uniqueId","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","onSendSchedule","PollModal","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","newOptions","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","EmojiButton","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","EmojiCategory","category","allEmojis","emojisPerRow","displayedEmoji","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","EmojiPicker","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","GifButton","gif","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","GifPicker","canSendGifs","onGifSelect","loadSavedGifs","saveGif","debounceMs","shouldUnsave","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","SymbolMenuFooter","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","SymbolMenu","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","mobileClassName","onMouseEnter","ChatCommand","withAvatar","freezeWhenClosed","ChatCommandTooltip","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","BotCommandMenu","botCommand","StickerTooltip","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","onToggleReaction","isInSavedMessages","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","areItemsHidden","hideItems","showItems","markIsReady","unmarkIsReady","handleOpenMessageEffectsPicker","ReactionSelector","onShowMore","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","TextFormatter","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","EDITABLE_INPUT_ID","textFormat","tagName","restoreSelection","selection","getSelection","removeAllRanges","addRange","updateSelectedRange","getRangeAt","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","ApiMessageEntityTypes","Spoiler","execCommand","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","CustomEmojiButton","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","BaseResult","thumbnailDataUrl","getWebDocumentHash","decoding","ArticleResult","inlineResult","webThumbnail","GifResult","_gif","MediaResult","isForGallery","thumbnailBlobUrl","getPhotoMediaHash","StickerResult","STICKER_SIZE_INLINE_BOT_RESULT","InlineBotTooltip","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","SendAsMenu","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","membersCount","StickerSetResult","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","StickerSearch","loadFeaturedStickers","selectCurrentGifSearch","canPostInChat","GifSearch","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","StatisticsRecentMessage","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","Statistics","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentStory","StatisticsMessagePublicForward","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","voters","offsets","pollResults","PollAnswerResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","renderViewMoreButton","poll","selectPollFromMessage","PollResults","resultsByOption","buildCollectionByKey","ICON_SIZE","createTopicPanel","CreateTopic","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","noLoopLimit","editTopicPanel","EditTopic","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","ManageBot","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","ManageChannel","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","joinRequests","ManageChatAdministrators","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","ManageChatPrivacyType","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","RemoveGroupUserModal","loadMoreMembers","usersId","availableMemberIds","canDeleteMembers","removedMembers","ManageChatRemovedUsers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","forDiscussionIds","linkedChat","ManageDiscussion","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","ManageGroup","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","hasFullInfo","ManageGroupAdminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","ManageGroupMembers","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","arePaidMessagesAvailable","groupPeersPaidStars","ManageGroupPermissions","updateChatDefaultBannedRights","updatePaidMessagesPrice","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","isPriceForMessagesChanged","markPriceForMessagesChanged","unmarkPriceForMessagesChanged","isPriceForMessagesOpen","setIsPriceForMessagesOpen","handleUpdatePaidMessagesPrice","handleUpdatePermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","handleChargeStarsForMessages","arePermissionsChanged","arePermissionsLoading","ManageGroupUserPermissions","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","ManageGroupUserPermissionsCreate","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","ManageInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","importers","requesters","ManageInviteInfo","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","ManageInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","withPrimaryColor","JoinRequest","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","ManageJoinRequests","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","ManageReactions","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","notPersonalPhoto","ManageUser","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","Management","GroupRecentActions","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","Checkout","invoice","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","useMediaTransition","handleTipsClick","tips","handlePaymentMethodClick","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","prices","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","ConfirmPayment","noRedirect","onPaymentFormSubmit","messageKey","form","PasswordConfirm","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","CardInput","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","ExpiryInput","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","Select","hasArrow","SavedPaymentCredentials","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","nativeParams","nativeProvider","providerName","isProviderError","smartGlocalToken","stripeId","passwordValidUntil","validUntil","PaymentModal","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","setStep","nextStep","field","savedInfo","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","shouldFillRequestedData","isEmailRequested","isPhoneRequested","isNameRequested","isShippingAddressRequested","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","isPasswordMissing","isEmailSentToProvider","isPhoneSentToProvider","renderModalContent","descriptionKey","renderError","optionId","receipt","ReceiptModal","prevReceipt","renderingReceipt","fullAddress","credentialsTitle","totalAmount","InviteViaLinkModal","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","OneTimeMediaModal","closeOneTimeMediaModal","handlePlayVoice","isOwn","isOwnMessage","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","WebAppsCloseConfirmationModal","closeWebAppsCloseConfirmationModal","shouldSkipInFuture","setShouldSkipInFuture","shouldSkipConfirmation","handleSelectWithEnter","freezeUntilDate","freezeAppealUrl","botFreezeAppealId","botFreezeAppealUsername","FrozenAccountModal","closeFrozenAccountModal","handleAppeal","BannedDuck","botLink","avatarPeer","avatarWebPhoto","clickable","webPhoto","badge"],"sourceRoot":""}