{"version":3,"file":"4376.3593740cf9d096bc7bec.js","mappings":"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GAAezK,EAClCC,QAAUiM,KAAmBr4B,IAAeosB,EAC5CC,aAAcuK,GAAevK,EAC7BC,YACAC,aAAcvsB,IAAeusB,EAC7BC,YAAaxsB,IAAewsB,EAC5BC,YACAC,cAAekK,GAAelK,EAC9B4I,kBACAtI,iBACAzC,kBACAD,uBACA5W,iBAAkB7gC,GAAM4mD,iBAAc1mD,EAAYyiD,GAAc9hB,iBAChEE,iBACAC,YACAvZ,wBACAo/B,YAAaj4C,QAAQ+zC,GACrBvI,yBACAC,sBAAsBwK,IAAYM,IAC5BpB,GAAe/jD,GAAM7I,KAAO2vD,EAAAA,KAAkC/B,IACpEtM,eAAgBhxB,MAAyBs/B,EAAAA,EAAAA,KAA+BnpD,GACxE8nD,uBACAnL,mBACA1/B,wBAAwBmsC,EAAAA,EAAAA,KAA6BppD,EAAQnH,EAAQM,QACrE+iD,gBACAC,gBAAiBkM,KAAmBE,GACpCnM,kBAAmBiM,KAAmBE,GACtCc,oBAAqBhB,GACrBhlB,uBAAuBimB,EAAAA,EAAAA,KAA4BtpD,GACnDu6C,sBAAsBgP,EAAAA,EAAAA,KAA2BvpD,GACjDsjC,qBACA8iB,YACAW,iBACArjB,mBAAoBqhB,GAAcyE,wBAClChP,QACAC,SACAgE,eACAC,WACD,GAxKej+C,EA1pBoCgpD,EACtDl8C,WACAa,qBACA20B,eACAC,sBACArmB,SACA8nC,kBACA5rD,UACAivD,sBACAnL,kBACA+M,QACAlP,OACAC,QACAzO,SACA0O,aACA4K,YACA3K,aACAsO,cACArO,gBACAE,WACAC,gBACAC,qBACAI,SACAkB,oBACAjB,WACAC,YACAkB,wBACAp6C,OACAo5C,YACAiB,sBACAvB,UACAjY,mBACAE,iBACAC,aACAvZ,wBACA0xB,cACAV,iBACAY,kBACAC,oBACAC,WACAC,eACAC,aACAC,eACAC,cACAC,aACAC,gBACA5Y,yBACAyW,mBACAD,wBACAgL,mBACA1J,aACAoB,iBACAt/B,0BACAi/B,gBACAmN,uBACAlN,mBACAC,qBACA7B,wBACAjX,qBACAyjB,kBACArjB,sBACA+a,gBACAC,WACA/8C,aACA+c,WACA85B,2BAEA,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","sources":["webpack://telegram-t/./src/components/chatAssistant/utils/ai-analyse-message.ts","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/chatAssistant/utils/schedule-meeting.ts","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/chatAssistant/utils/util.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/chatAssistant/utils/icons.tsx","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/components/chatAssistant/room-ai/room-ai-utils.ts","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/hooks/useCustomBackground.ts","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/chatAssistant/utils/google-auth.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/components/common/BadgeButton.module.scss?da7b","webpack://telegram-t/./src/components/common/BadgeButton.tsx","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/chatAssistant/utils/google-api.ts","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts"],"sourcesContent":["/* eslint-disable */\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ApiMessage } from \"../../../api/types\";\nimport eventEmitter, { Actions } from \"../lib/EventEmitter\";\nimport { ChataiStores } from \"../store\";\nimport { StoreMessage } from \"../store/messages-store\";\nimport {\n  audioAISummary,\n  documentAISummary,\n  imageAISummary,\n  mentionReply,\n  webPageAISummary,\n} from \"./chat-api\";\nimport { sleep } from \"../ai-chatfolders/util\";\nimport { getMediaHash } from \"../../../global/helpers\";\nimport * as mediaLoader from \"../../../util/mediaLoader\";\nimport { message as showMessage } from \"antd\";\nimport * as pdfjsLib from \"pdfjs-dist/legacy/build/pdf\";\nimport { getActions, getGlobal } from \"../../../global\";\nimport { selectChatMessage } from \"../../../global/selectors\";\n\npdfjsLib.GlobalWorkerOptions.workerSrc = \"pdf.worker.min.js\";\n\nconst mammoth = require(\"mammoth\");\n\nexport async function replyToMention(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  if (!message.isMentioned || !message.content?.text?.text) return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-reply-mention\" }],\n    content: JSON.stringify({\n      messageId: message.id,\n      content: message.content.text?.text,\n      isAuto,\n      status: \"loading\",\n    }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  mentionReply({\n    message: message.content.text?.text,\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            messageId: message.id,\n            content: message.content.text?.text,\n            replys: response.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function photoSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const photo = message.content?.photo;\n  if (!photo) return;\n  const mediaHash = getMediaHash(photo, \"download\");\n  if (!mediaHash) return;\n  const mimeType = \"image/jpeg\";\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  await handleImageToSummaryText({\n    mimeType,\n    mediaHash,\n    message,\n    newMessage,\n    isAuto,\n  });\n}\n\nexport async function webPageSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const webPage = message.content?.webPage;\n  const url = webPage ? webPage?.url : message.content?.text?.text;\n  if (!url || url === \"\") return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  webPageAISummary({\n    url,\n    text: message.content?.text?.text || \"\",\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response?.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            message,\n            summaryInfo: response?.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function documentSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const document = message.content?.document;\n  if (!document) return;\n\n  const mediaHash = getMediaHash(document, \"download\");\n  if (!mediaHash) return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  // image\n  if (checkIsImage(document.mimeType)) {\n    handleImageToSummaryText({\n      mimeType: document.mimeType,\n      mediaHash,\n      message,\n      newMessage,\n      isAuto,\n    });\n    return;\n  }\n  // video\n  if (checkIsVideo(document.mimeType)) {\n    await handleAudioToSummaryText({\n      mediaHash,\n      mimeType: document?.mimeType,\n      filename: document?.fileName,\n      size: document?.size,\n      newMessage,\n      message,\n      isAuto,\n    });\n    return;\n  }\n\n  await mediaLoader.fetch(mediaHash, 0);\n  const blobUrl = mediaLoader.getFromMemory(mediaHash);\n  if (!blobUrl) return;\n\n  const response = await fetch(blobUrl);\n  const blob = await response.blob();\n\n  const arrayBuffer = await blob.arrayBuffer();\n  let text = \"\";\n  switch (document.mimeType) {\n    case \"text/plain\":\n      text = new TextDecoder().decode(arrayBuffer);\n      break;\n    case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\n    case \"application/msword\":\n      const result = await mammoth.extractRawText({ arrayBuffer });\n      text = result.value;\n      break;\n    case \"application/pdf\":\n      const pdf = await pdfjsLib.getDocument({ data: arrayBuffer }).promise;\n      let pdfText = \"\";\n      for (let i = 1; i <= pdf.numPages; i++) {\n        const page = await pdf.getPage(i);\n        const content = await page.getTextContent();\n        const pageText = content.items.map((item: any) => item.str).join(\" \");\n        pdfText += pageText + \"\\n\";\n      }\n      text = pdfText;\n      break;\n    default:\n      await sendErrorMessage(newMessage, message, isAuto);\n      return;\n  }\n  if (text === \"\") {\n    await sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n\n  documentAISummary({\n    content: text,\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response?.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            message: message,\n            summaryInfo: response?.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function voiceSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const voice = message.content?.voice;\n  if (!voice) return;\n\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  let text = \"\";\n  const global = getGlobal();\n  const { isTranscriptionError, transcriptionId } = message;\n  if (isTranscriptionError) {\n    sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n  if (transcriptionId && transcriptionId !== \"\") {\n    text = global?.transcriptions?.[transcriptionId]?.text;\n  } else {\n    await getActions().transcribeAudio({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    await sleep(2000);\n    const newGlobal = getGlobal();\n    const currentMessage = selectChatMessage(\n      newGlobal,\n      message.chatId,\n      message.id\n    );\n    if (currentMessage?.isTranscriptionError) {\n      sendErrorMessage(newMessage, message, isAuto);\n      return;\n    }\n    if (\n      currentMessage?.transcriptionId &&\n      currentMessage?.transcriptionId !== \"\"\n    ) {\n      text = newGlobal.transcriptions?.[currentMessage?.transcriptionId]?.text;\n    }\n  }\n  if (text === \"\") {\n    await sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n  documentAISummary({\n    content: text,\n    language: getAutoTransLang(),\n  })\n    .then((response: any) => {\n      if (response?.text) {\n        newMessage = {\n          ...newMessage,\n          content: JSON.stringify({\n            message: message,\n            summaryInfo: response?.text,\n            isAuto,\n            status: \"success\",\n          }),\n        };\n        sendMessageToAIRoom(newMessage);\n      } else {\n        sendErrorMessage(newMessage, message, isAuto);\n      }\n    })\n    .catch((err) => {\n      console.log(\"error\", err);\n      sendErrorMessage(newMessage, message, isAuto);\n    });\n}\n\nexport async function voiceToAudioSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const voice = message.content?.voice;\n  if (!voice) return;\n  const mediaHash = getMediaHash(voice, \"download\");\n  if (!mediaHash) return;\n  const maxBase64Length = Math.floor(4 * 1024 * 1024);\n  if (\n    message.content.audio?.size &&\n    message.content.audio?.size * (4 / 3) > maxBase64Length\n  ) {\n    showMessage.info(\"File size exceeds limit (4 MB)\");\n    return;\n  }\n  //\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  await handleAudioToSummaryText({\n    mediaHash,\n    mimeType: \"audio/ogg\",\n    filename: voice?.id + \".ogg\",\n    size: voice?.size,\n    newMessage,\n    message,\n    isAuto,\n  });\n}\n\nexport async function audioSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const audio = message.content?.audio;\n  if (!audio) return;\n  const mediaHash = getMediaHash(audio, \"download\");\n  if (!mediaHash) return;\n  //\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n\n  await handleAudioToSummaryText({\n    mediaHash,\n    mimeType: audio?.mimeType,\n    filename: audio?.fileName,\n    size: audio?.size,\n    newMessage,\n    message,\n    isAuto,\n  });\n}\n\nexport async function videoSummary(\n  message: ApiMessage,\n  isAuto: boolean = false\n) {\n  const video = message.content?.video;\n  if (!video) return;\n  const mediaHash = getMediaHash(video, \"download\");\n  if (!mediaHash) return;\n  //\n  let newMessage: StoreMessage = {\n    chatId: message.chatId,\n    timestamp: new Date().getTime(),\n    id: uuidv4(),\n    createdAt: new Date(),\n    role: \"assistant\",\n    annotations: [{ type: \"room-ai-media-summary\" }],\n    content: JSON.stringify({ message, isAuto, status: \"loading\" }),\n  };\n  await sendMessageToAIRoom(newMessage);\n  if (video?.mimeType !== \"video/mp4\") {\n    await sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n\n  await handleAudioToSummaryText({\n    mediaHash,\n    mimeType: video?.mimeType,\n    filename: video?.fileName,\n    size: video?.size,\n    newMessage,\n    message,\n    isAuto,\n  });\n}\n\nasync function sendMessageToAIRoom(newMessage: StoreMessage) {\n  await ChataiStores.message?.storeMessage(newMessage);\n  await eventEmitter.emit(Actions.AddRoomAIMessage, newMessage);\n}\n\nasync function handleAudioToSummaryText({\n  mediaHash,\n  mimeType,\n  filename,\n  size,\n  newMessage,\n  message,\n  isAuto,\n}: {\n  mediaHash: string;\n  mimeType?: string;\n  filename?: string;\n  size?: number;\n  newMessage: StoreMessage;\n  message: ApiMessage;\n  isAuto: boolean;\n}) {\n  try {\n    // check size\n    if (size && size > 4.5 * 1024 * 1024) {\n      showMessage.info(\"File size exceeds limit (4.5 MB)\");\n      newMessage = {\n        ...newMessage,\n        content: JSON.stringify({\n          message,\n          errorMsg: \"File size exceeds limit (4.5 MB)\",\n          isAuto,\n          status: \"error\",\n        }),\n      };\n      await sendMessageToAIRoom(newMessage);\n      return;\n    }\n    // download\n    await mediaLoader.fetch(mediaHash, 0);\n    const blobUrl = mediaLoader.getFromMemory(mediaHash);\n    if (!blobUrl) {\n      sendErrorMessage(newMessage, message, isAuto);\n      return;\n    }\n\n    const response = await fetch(blobUrl);\n    const blob = await response.blob();\n    //\n    const formData = new FormData();\n    formData.append(\"file\", blob, filename || \"audio.ogg\");\n    formData.append(\"language\", getAutoTransLang());\n    if (mimeType) formData.append(\"mimeType\", mimeType);\n\n    const summaryResponse: any = await audioAISummary(formData);\n    if (summaryResponse?.text) {\n      newMessage = {\n        ...newMessage,\n        content: JSON.stringify({\n          message,\n          summaryInfo: summaryResponse?.text,\n          isAuto,\n          status: \"success\",\n        }),\n      };\n      sendMessageToAIRoom(newMessage);\n    } else {\n      sendErrorMessage(newMessage, message, isAuto);\n    }\n  } catch (err) {\n    console.log(\"error\", err);\n    sendErrorMessage(newMessage, message, isAuto);\n  }\n}\n\nasync function handleImageToSummaryText({\n  mimeType,\n  mediaHash,\n  message,\n  newMessage,\n  isAuto,\n}: {\n  mimeType: string;\n  mediaHash: string;\n  message: ApiMessage;\n  newMessage: StoreMessage;\n  isAuto: boolean;\n}) {\n  // download\n  await mediaLoader.fetch(mediaHash, 0);\n  const blobUrl = mediaLoader.getFromMemory(mediaHash);\n  if (!blobUrl) {\n    sendErrorMessage(newMessage, message, isAuto);\n    return;\n  }\n\n  const response = await fetch(blobUrl);\n  const blob = await response.blob();\n\n  const reader = new FileReader();\n  reader.onloadend = function () {\n    const base64Data = reader.result?.toString().split(\",\")[1] || \"\";\n    imageAISummary({\n      image: `data:${mimeType};base64,` + base64Data,\n      language: getAutoTransLang(),\n    })\n      .then((response: any) => {\n        if (response?.text) {\n          newMessage = {\n            ...newMessage,\n            content: JSON.stringify({\n              message,\n              summaryInfo: JSON.stringify({ text: response?.text }),\n              isAuto,\n              status: \"success\",\n            }),\n          };\n          sendMessageToAIRoom(newMessage);\n        } else {\n          sendErrorMessage(newMessage, message, isAuto);\n        }\n      })\n      .catch((err) => {\n        console.log(\"error\", err);\n        sendErrorMessage(newMessage, message, isAuto);\n      });\n  };\n  reader.readAsDataURL(blob);\n}\n\nexport function canSummarize(message: ApiMessage) {\n  const { photo, document, webPage, voice, audio, text, video } =\n    message?.content;\n  const isUrl = checkIsUrl(text?.text);\n  const hasText = text?.text && text.text.trim() !== \"\";\n\n  return photo || document || (webPage && !hasText) || voice || audio || isUrl || video;\n}\n\nexport function isHasUrl(text?: string) {\n  const urls = extractUrls(text);\n  const hasUrl = urls.length > 0;\n\n  return hasUrl;\n}\n\nexport function checkIsUrl(text?: string) {\n  return (\n    typeof text === \"string\" &&\n    /^https?:\\/\\/[\\w\\-._~:/?#[\\]@!$&'()*+,;=%]+$/i.test(text)\n  );\n}\n\nexport function checkIsImage(mimeType: string) {\n  return mimeType.startsWith(\"image/\");\n}\n\nasync function sendErrorMessage(\n  newMessage: StoreMessage,\n  message: ApiMessage,\n  isAuto: boolean\n) {\n  newMessage = {\n    ...newMessage,\n    content: JSON.stringify({\n      message,\n      isAuto,\n      status: \"error\",\n    }),\n  };\n  await sendMessageToAIRoom(newMessage);\n}\n\nexport function getAutoTransLang() {\n  const global = getGlobal();\n  const { autoTranslateLanguage = \"en\" } = global.settings.byKey;\n\n  return (\n    new Intl.DisplayNames([autoTranslateLanguage], { type: \"language\" }).of(\n      autoTranslateLanguage\n    ) || \"en\"\n  );\n}\n\nexport function extractUrls(text?: string): string[] {\n  if (typeof text !== \"string\") return [];\n\n  const urlRegex = /https?:\\/\\/[\\w\\-._~:/?#[\\]@!$&'()*+,;=%]+/gi;\n  return text.match(urlRegex) || [];\n}\n\nexport function checkIsVideo(mimeType: string) {\n  return ['video/mp4'].indexOf(mimeType) >= 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","/* eslint-disable no-null/no-null */\n/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport { DateTime, Interval } from 'luxon';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ICreateMeetResponse } from './google-api';\n\nimport eventEmitter, { Actions } from '../lib/EventEmitter';\nimport { selectCurrentChat } from '../../../global/selectors';\nimport { extractCalendlyLinks } from './util';\nimport { createMeetingTimeConfirmMessage } from '../room-ai/room-ai-utils';\nimport { ChataiStores } from '../store';\nimport { parseMessage2StoreMessage } from '../store/messages-store';\nimport { calendlyRanges } from './chat-api';\nimport {\n  createAuthConfirmModal,\n  createGoogleMeet,\n  getGoogleCalendarFreeBusy,\n} from './google-api';\nimport { getAuthState, isTokenValid } from './google-auth';\n\nexport function formatMeetingTimeRange(\n  startISO: string,\n  endISO: string,\n  timeZoneVisable?: boolean,\n) {\n  const startDate = new Date(startISO);\n  const endDate = new Date(endISO);\n\n  const dayFormatter = new Intl.DateTimeFormat('en-US', {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n  });\n\n  const timeFormatter = new Intl.DateTimeFormat('en-US', {\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true,\n  });\n\n  const formatTime = (date: Date) => {\n    return timeFormatter.format(date).toLowerCase().replace(' ', '');\n  };\n\n  const dateStr = dayFormatter.format(startDate);\n  const startTimeStr = formatTime(startDate);\n  const endTimeStr = formatTime(endDate);\n\n  // 方式一：取时区名称\n  const timeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  // 方式二：取 GMT 偏移\n  // const offsetMinutes = startDate.getTimezoneOffset();\n  // const sign = offsetMinutes <= 0 ? '+' : '-';\n  // const absMinutes = Math.abs(offsetMinutes);\n  // const hours = String(Math.floor(absMinutes / 60)).padStart(2, '0');\n  // const minutes = String(absMinutes % 60).padStart(2, '0');\n  // const gmtOffset = `GMT${sign}${hours}:${minutes}`;\n\n  // 任选一种\n  const tzString = timeZoneName;\n  // const tzString = gmtOffset;\n  if (timeZoneVisable) {\n    return `${dateStr}, ${startTimeStr}-${endTimeStr} ${tzString}`;\n  } else {\n    return `${dateStr}, ${startTimeStr}-${endTimeStr}`;\n  }\n}\n\nasync function getSuitableTime(calendlyUrl: string) {\n  const timeRanges = await calendlyRanges({ calendlyUrl });\n  const myBusyTimes = await getGoogleCalendarFreeBusy();\n  const availableSolts = getAvailableSlots(timeRanges, myBusyTimes);\n  return availableSolts;\n}\n\nfunction getAvailableSlots(\n  aFreeSlots: { start: string; end: string }[],\n  bBusySlots: { start: string; end: string }[],\n) {\n  const result = [];\n\n  for (const aSlot of aFreeSlots) {\n    const aStart = new Date(aSlot.start);\n    const aEnd = new Date(aSlot.end);\n\n    let hasConflict = false;\n\n    for (const bSlot of bBusySlots) {\n      const bStart = new Date(bSlot.start);\n      const bEnd = new Date(bSlot.end);\n\n      // 判断是否重叠\n      if (aStart < bEnd && aEnd > bStart) {\n        hasConflict = true;\n        break;\n      }\n    }\n\n    if (!hasConflict) {\n      result.push({\n        start: aStart.toISOString(),\n        end: aEnd.toISOString(),\n      });\n    }\n  }\n\n  return result;\n}\n\nfunction suggestFreeTimes(\n  busySlots: { start: string; end: string }[],\n  durationMinutes = 30,\n  count = 3,\n) {\n  const now = DateTime.utc();\n  const endRange = now.plus({ days: 3 });\n\n  // 转成 Interval[]\n  const busyIntervals = busySlots.map((slot) => Interval.fromDateTimes(\n    DateTime.fromISO(slot.start),\n    DateTime.fromISO(slot.end),\n  ));\n\n  const freeSlots: { start: string; end: string }[] = [];\n\n  let cursor = now;\n  let done = false;\n  while (cursor < endRange && !done) {\n    const dayStart = cursor.set({\n      hour: 9,\n      minute: 0,\n      second: 0,\n      millisecond: 0,\n    });\n    const dayEnd = cursor.set({\n      hour: 18,\n      minute: 0,\n      second: 0,\n      millisecond: 0,\n    });\n\n    let slotStart = dayStart;\n    while (slotStart.plus({ minutes: durationMinutes }) <= dayEnd) {\n      const slotEnd = slotStart.plus({ minutes: durationMinutes });\n\n      const slotInterval = Interval.fromDateTimes(slotStart, slotEnd);\n\n      const overlap = busyIntervals.some((b) => b.overlaps(slotInterval));\n      const slotPassed = slotEnd < now;\n\n      if (!overlap && !slotPassed) {\n        freeSlots.push({\n          start: slotStart.toISO(),\n          end: slotEnd.toISO(),\n        });\n        if (freeSlots.length >= count) {\n          done = true;\n          break;\n        }\n      }\n\n      slotStart = slotStart.plus({ minutes: durationMinutes });\n    }\n    cursor = cursor.plus({ days: 1 }).startOf('day');\n  }\n  return freeSlots;\n}\n\nasync function isTimeSlotAvailable(proposedSlot: {\n  start: string;\n  end: string;\n}) {\n  const myBusyTimes = await getGoogleCalendarFreeBusy();\n  const proposedStart = new Date(proposedSlot.start).getTime();\n  const proposedEnd = new Date(proposedSlot.end).getTime();\n\n  for (const busy of myBusyTimes) {\n    const busyStart = new Date(busy.start).getTime();\n    const busyEnd = new Date(busy.end).getTime();\n\n    if (proposedStart < busyEnd && busyStart < proposedEnd) {\n      // 有重叠\n      const suggestions = suggestFreeTimes(myBusyTimes);\n      return {\n        isAvailable: false,\n        suggestions,\n      };\n    }\n  }\n  // 没有重叠\n  return { isAvailable: true };\n}\n\nfunction getMeetParamsByAITools(message: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetch('https://telegpt-three.vercel.app/tool-check', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        messages: [\n          {\n            id: uuidv4(),\n            content: message,\n            role: 'user',\n          },\n        ],\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      }),\n    })\n      .then((res) => res.json())\n      .then((toolResults) => {\n        let email: string[] = [];\n        let date: string | null = null;\n        if (toolResults && toolResults.length > 0) {\n          toolResults.forEach((toolCall: any) => {\n            if (toolCall.toolName === 'parseTime') {\n              date = toolCall.result;\n            } else if (toolCall.toolName === 'extractEmail') {\n              email = toolCall.result || [];\n            }\n          });\n          resolve({\n            date,\n            email,\n          });\n        } else {\n          resolve({});\n        }\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n\ninterface ScheduleMeetingParams {\n  chatId: string;\n  email?: string[];\n  date?: { start: string; end: string }[];\n  hasConfirmed?: boolean;\n}\nclass ScheduleMeeting {\n  private static instances: Map<string, ScheduleMeeting> = new Map();\n\n  private chatId: string;\n\n  private hasConfirmed: boolean;\n\n  private email: string[];\n\n  private date: { start: string; end: string }[];\n\n  public timeout: NodeJS.Timeout | undefined = undefined;\n\n  private handlerRef: ({ message }: { message: ApiMessage }) => void;\n\n  constructor({\n    chatId,\n    email = [],\n    date = [],\n    hasConfirmed = false,\n  }: ScheduleMeetingParams) {\n    this.chatId = chatId;\n    this.email = email;\n    this.date = date;\n    this.hasConfirmed = hasConfirmed;\n    this.handlerRef = ({ message }) => this.handler({ message });\n  }\n\n  /**\n   * 创建或获取 ScheduleMeeting 实例\n   */\n  public static create(params: ScheduleMeetingParams): ScheduleMeeting {\n    const existing = ScheduleMeeting.instances.get(params.chatId);\n    if (existing) {\n      return existing;\n    } else {\n      const instance = new ScheduleMeeting(params);\n      ScheduleMeeting.instances.set(params.chatId, instance);\n      return instance;\n    }\n  }\n\n  /**\n   * 根据 chatId 获取 ScheduleMeeting 实例\n   */\n  public static get(chatId: string): ScheduleMeeting | undefined {\n    return ScheduleMeeting.instances.get(chatId);\n  }\n\n  public start(originalMessage?: ApiMessage) {\n    // 注册监听器\n    eventEmitter.on(Actions.NewTextMessage, this.handlerRef);\n\n    // 超时自动清理\n    this.timeout = setTimeout(() => {\n      this.cleanup();\n      console.log('已超过五分钟未完成输入，工作流已结束。');\n    }, 1000 * 60 * 5);\n\n    this.handler({ message: originalMessage });\n  }\n\n  private cleanup() {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    eventEmitter.off(Actions.NewTextMessage, this.handlerRef);\n    clearTimeout(this.timeout);\n    ScheduleMeeting.instances.delete(this.chatId);\n  }\n\n  private async handler({ message }: { message?: ApiMessage }) {\n    if (message && (message.isOutgoing || message.chatId !== this.chatId)) {\n      return;\n    }\n    if (this.email.length && this.date.length && this.hasConfirmed) {\n      this.handleGoogleAuthCheck();\n      return;\n    }\n    try {\n      if (message && message.content.text) {\n        const { text } = message.content.text;\n        if (!this.date.length) {\n          const calendlyUrl = extractCalendlyLinks(text)?.[0];\n          if (calendlyUrl) {\n            const suitableDates = await getSuitableTime(calendlyUrl);\n            if (suitableDates.length === 0) {\n              console.log(\n                'No available time slots found for the provided Calendly link.',\n              );\n            }\n            this.date = suitableDates.slice(0, 3);\n          }\n        }\n        const toolCheckRes = await getMeetParamsByAITools(text);\n        if (toolCheckRes.email) this.email = toolCheckRes.email;\n        if (!this.date.length && toolCheckRes.date) {\n          const dateRange = {\n            start: toolCheckRes.date,\n            end: new Date(\n              new Date(toolCheckRes.date).getTime() + 30 * 60 * 1000,\n            ).toISOString(),\n          };\n          const { isAvailable, suggestions } = await isTimeSlotAvailable(\n            dateRange,\n          );\n          if (isAvailable) {\n            this.date = [dateRange];\n            this.hasConfirmed = true; // 如果有时间回执，设置为已确认\n          } else {\n            this.sendMessage(\n              'The time you provided is not available. Could you please suggest another time?',\n            );\n            // 根据自己日历的时间，给出时间建议\n            await new Promise<void>((res) => {\n              void setTimeout(res, 1000);\n            });\n            this.sendMessage(\n              `Here are some available time slots you can choose from: \\n ${suggestions!\n                .map(\n                  (slot, index) => `${index + 1}.${formatMeetingTimeRange(\n                    slot.start,\n                    slot.end,\n                    true,\n                  )}`,\n                )\n                .join('\\n')}`,\n            );\n            return;\n          }\n        }\n      }\n      // 打开小助手，用户时间回执\n      if (this.date.length > 0 && !this.hasConfirmed) {\n        const meetingTimeConfirmMessage = createMeetingTimeConfirmMessage({\n          chatId: this.chatId,\n          date: this.date,\n          email: this.email,\n        });\n        ChataiStores?.message?.storeMessage(\n          parseMessage2StoreMessage(this.chatId, [meetingTimeConfirmMessage])[0],\n        );\n        this.cleanup();\n        // TODO: add meeting time confirm message and open ai room\n        const global = getGlobal();\n        const currentChat = selectCurrentChat(global);\n        if (currentChat && currentChat.id === this.chatId) {\n          eventEmitter.emit(\n            Actions.AddRoomAIMessage,\n            meetingTimeConfirmMessage,\n          );\n          getActions().openChatAIWithInfo({ chatId: this.chatId });\n        }\n        return;\n      }\n      if (!this.email.length && !this.date.length) {\n        this.sendMessage(\n          \"I'd like to schedule a meeting with you. Could you tell me what time would be good for you to have the meeting? Also, could I get your email address?\",\n        );\n        return;\n      } else if (!this.email.length) {\n        this.sendMessage('Could you please share your email address?');\n        return;\n      } else if (!this.date.length) {\n        this.sendMessage(\n          'Could you tell me what time would be good for you to have the meeting?',\n        );\n        return;\n      }\n      if (this.email.length && this.date.length) {\n        this.handleGoogleAuthCheck();\n      }\n    } catch (e) {\n      console.log(e);\n      this.cleanup();\n    }\n  }\n\n  private handleGoogleAuthCheck() {\n    this.cleanup();\n    const auth = getAuthState();\n    if (!auth || !isTokenValid(auth)) {\n      createAuthConfirmModal({\n        onOk: (accessToken: string) => {\n          this.handleCreateGoogleMeet(accessToken!);\n        },\n      });\n    } else {\n      this.handleCreateGoogleMeet(auth.accessToken!);\n    }\n  }\n\n  public handleCreateGoogleMeet(accessToken: string) {\n    this.sendMessage(\"I'll send you the meeting invitation later.\");\n    const date = this.date[0];\n    createGoogleMeet({\n      startDate: new Date(date.start),\n      endDate: new Date(date.end),\n      selectedTimezone: Intl.DateTimeFormat().resolvedOptions().timeZone, // Add timezone\n      emails: this.email!,\n      googleToken: accessToken as string,\n    }).then((createMeetResponse: ICreateMeetResponse) => {\n      console.log('createMeetResponse', createMeetResponse);\n      if (createMeetResponse) {\n        const eventMessage = `Event details \\n📝 Title\\n${\n          createMeetResponse.summary\n        }\\n👥 Guests\\n${createMeetResponse.attendees\n          .map((attendee) => attendee.email)\n          .join('\\\\n')}\\n📅 Time\\n${formatMeetingTimeRange(\n          createMeetResponse.start.dateTime,\n          createMeetResponse.end.dateTime,\n        )}\\n${createMeetResponse.start.timeZone}\\n🔗 Meeting link\\n${\n          createMeetResponse.hangoutLink\n        }\n            `;\n        this.sendMessage(eventMessage);\n      }\n    });\n  }\n\n  private sendMessage(message: string) {\n    getActions().sendMessage({\n      messageList: {\n        chatId: this.chatId,\n        threadId: '-1',\n        type: 'thread',\n      },\n      text: message,\n    });\n  }\n}\n\nexport default ScheduleMeeting;\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","/* eslint-disable max-len */\nimport type { CoreAssistantMessage, CoreToolMessage, Message } from 'ai';\nimport { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\nexport function formatTimestamp(timestamp: number): string {\n  const date = new Date(timestamp);\n  const now = new Date();\n\n  const isSameDay = date.toDateString() === now.toDateString();\n  const isSameYear = date.getFullYear() === now.getFullYear();\n\n  const hours = String(date.getHours()).padStart(2, '0');\n  const minutes = String(date.getMinutes()).padStart(2, '0');\n  const timePart = `${hours}:${minutes}`;\n\n  const monthNames = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December',\n  ];\n  const month = monthNames[date.getMonth()];\n  const day = date.getDate();\n\n  if (isSameDay) {\n    return timePart;\n  } else if (isSameYear) {\n    return `${month} ${day} / ${timePart}`;\n  } else {\n    return `${date.getFullYear()}/${month} ${day} / ${timePart}`;\n  }\n}\n\n/**\n * 时间戳专用时间范围格式化工具\n * @param {number} start 开始时间戳（支持毫秒/秒级）\n * @param {number} end 结束时间戳（支持毫秒/秒级）\n * @returns {string} 格式化后的时间范围字符串\n */\nexport function formatTimestampRange(start:number | undefined, end:number | undefined) {\n  // 时间戳标准化处理（自动识别秒/毫秒）\n  const normalizeTimestamp = (ts:number) => {\n    if (ts.toString().length <= 10) return ts * 1000; // 秒级转毫秒\n    return ts; // 毫秒级直接使用\n  };\n\n  const startDate = start ? new Date(normalizeTimestamp(start)) : undefined;\n  const endDate = end ? new Date(normalizeTimestamp(end)) : undefined;\n  const now = new Date();\n\n  // 日期比较函数\n  const isSameDay = (d1:Date, d2:Date) => d1.getFullYear() === d2.getFullYear()\n    && d1.getMonth() === d2.getMonth()\n    && d1.getDate() === d2.getDate();\n\n  const isToday = (date:Date) => isSameDay(date, now);\n\n  // 时间格式化组件\n  const formatTime = (date:Date) => {\n    const pad = (n:number) => String(n).padStart(2, '0');\n    return `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n  };\n\n  const formatDate = (date:Date) => {\n    const monthNames = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December',\n    ];\n    const month = monthNames[date.getMonth()];\n    const pad = (n:number) => String(n).padStart(2, '0');\n    return `${month} ${pad(date.getDate())} / ${formatTime(date)}`;\n  };\n\n  if (!startDate && !endDate) {\n    return '';\n  }\n  if (!startDate && endDate) {\n    return `${formatDate(endDate)}`;\n  }\n  if (startDate && !endDate) {\n    return `${formatDate(startDate)}`;\n  }\n  if (startDate && endDate) {\n    // 范围判断逻辑\n    if (isToday(startDate) && isToday(startDate)) {\n      return `${formatTime(startDate)} - ${formatTime(endDate)}`;\n    } else {\n      return `${formatDate(startDate)} - ${formatDate(endDate)}`;\n    }\n  }\n  return '';\n}\nexport function validateAndFixJsonStructure(jsonString:string) {\n  // 计数大括号和方括号的数量\n  let braceCount = 0;\n  let bracketCount = 0;\n\n  // 记录所有多余或缺失的闭合符号\n  let fixedJsonString = jsonString;\n\n  // 遍历 JSON 字符串，检查并计算每个括号\n  for (let i = 0; i < jsonString.length; i++) {\n    const char = jsonString[i];\n    if (char === '{') {\n      braceCount++;\n    } else if (char === '}') {\n      braceCount--;\n    } else if (char === '[') {\n      bracketCount++;\n    } else if (char === ']') {\n      bracketCount--;\n    }\n  }\n\n  // 如果大括号数量不匹配，补充缺失的大括号\n  while (braceCount > 0) {\n    fixedJsonString += '}'; // 补充闭合大括号\n    braceCount--;\n  }\n\n  while (braceCount < 0) {\n    fixedJsonString = `{${fixedJsonString}`; // 补充开始大括号\n    braceCount++;\n  }\n\n  // 如果方括号数量不匹配，补充缺失的方括号\n  while (bracketCount > 0) {\n    fixedJsonString += ']'; // 补充闭合方括号\n    bracketCount--;\n  }\n\n  while (bracketCount < 0) {\n    fixedJsonString = `[${fixedJsonString}`; // 补充开始方括号\n    bracketCount++;\n  }\n\n  // 最后尝试解析 JSON，检查是否格式正确\n  try {\n    const parsed = JSON.parse(fixedJsonString);\n    return { valid: true, parsed, fixedJson: fixedJsonString };\n  } catch (error) {\n    return { valid: false, error };\n  }\n}\n\ntype ResponseMessageWithoutId = CoreToolMessage | CoreAssistantMessage;\ntype ResponseMessage = ResponseMessageWithoutId & { id: string };\n\nexport function sanitizeResponseMessages({\n  messages,\n  reasoning,\n}: {\n  messages: Array<ResponseMessage>;\n  reasoning: string | undefined;\n}) {\n  const toolResultIds: Array<string> = [];\n\n  for (const message of messages) {\n    if (message.role === 'tool') {\n      for (const content of message.content) {\n        if (content.type === 'tool-result') {\n          toolResultIds.push(content.toolCallId);\n        }\n      }\n    }\n  }\n\n  const messagesBySanitizedContent = messages.map((message) => {\n    if (message.role !== 'assistant') return message;\n\n    if (typeof message.content === 'string') return message;\n\n    const sanitizedContent = message.content.filter((content) => (content.type === 'tool-call'\n      ? toolResultIds.includes(content.toolCallId)\n      : content.type === 'text'\n        ? content.text.length > 0\n        : true));\n\n    if (reasoning) {\n      // @ts-expect-error: reasoning message parts in sdk is wip\n      sanitizedContent.push({ type: 'reasoning', reasoning });\n    }\n\n    return {\n      ...message,\n      content: sanitizedContent,\n    };\n  });\n\n  return messagesBySanitizedContent.filter(\n    (message) => message.content.length > 0,\n  );\n}\n\nexport function sanitizeUIMessages(messages: Array<Message>): Array<Message> {\n  const messagesBySanitizedToolInvocations = messages.map((message) => {\n    if (message.role !== 'assistant') return message;\n\n    if (!message.toolInvocations) return message;\n\n    const toolResultIds: Array<string> = [];\n\n    for (const toolInvocation of message.toolInvocations) {\n      if (toolInvocation.state === 'result') {\n        toolResultIds.push(toolInvocation.toolCallId);\n      }\n    }\n\n    const sanitizedToolInvocations = message.toolInvocations.filter(\n      (toolInvocation) => toolInvocation.state === 'result'\n        || toolResultIds.includes(toolInvocation.toolCallId),\n    );\n\n    return {\n      ...message,\n      toolInvocations: sanitizedToolInvocations,\n    };\n  });\n\n  return messagesBySanitizedToolInvocations.filter(\n    (message) => message.content.length > 0\n      || (message.toolInvocations && message.toolInvocations.length > 0),\n  );\n}\n\nexport function extractCalendlyLinks(text: string): string[] {\n  const regex = /https:\\/\\/calendly\\.com\\/[^\\s?]+\\/[^\\s?]+(?:\\?[^\\s]*)?/g;\n  return text.match(regex) || [];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","import { SVGProps } from \"react\";\nimport React from \"../../../lib/teact/teact\";\n\nexport const SummarizeIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={18}\n    height={18}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M9.277 7.215a.567.567 0 0 1-.563-.563c0-.307.255-.562.563-.562h3.937a.562.562 0 1 1 0 1.125H9.277ZM4.943 7.62l-.563-.563a.566.566 0 0 1 0-.795.566.566 0 0 1 .795 0l.165.165 1.29-1.29a.566.566 0 0 1 .795 0 .566.566 0 0 1 0 .795L5.738 7.62a.562.562 0 0 1-.795 0ZM9.277 12.465a.567.567 0 0 1-.563-.563c0-.307.255-.562.563-.562h3.937a.562.562 0 1 1 0 1.125H9.277ZM4.943 12.87l-.563-.563a.566.566 0 0 1 0-.795.566.566 0 0 1 .795 0l.165.165 1.29-1.29a.566.566 0 0 1 .795 0 .566.566 0 0 1 0 .795L5.738 12.87a.562.562 0 0 1-.795 0Z\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6.75 17.063c-4.072 0-5.813-1.74-5.813-5.813v-4.5C.938 2.678 2.678.937 6.75.937h4.5c4.072 0 5.813 1.74 5.813 5.813v4.5c0 4.072-1.74 5.813-5.813 5.813h-4.5ZM2.062 6.75v4.5c0 3.457 1.23 4.688 4.688 4.688h4.5c3.457 0 4.688-1.23 4.688-4.688v-4.5c0-3.458-1.23-4.688-4.688-4.688h-4.5c-3.458 0-4.688 1.23-4.688 4.688Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nexport const AIReplyIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={20}\n    height={20}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M4.865 8.487c.158.408.533.675.975.675.442 0 .825-.267.975-.675l.592-1.6a.165.165 0 0 1 .116-.117l1.6-.592c.409-.158.675-.533.675-.975 0-.441-.266-.825-.675-.975l-1.6-.591a.2.2 0 0 1-.116-.117l-.592-1.6a1.036 1.036 0 0 0-.975-.675c-.442 0-.825.267-.975.675l-.592 1.6a.165.165 0 0 1-.116.117l-1.6.591a1.036 1.036 0 0 0-.675.975c0 .442.266.825.675.975l1.6.592a.2.2 0 0 1 .116.117l.592 1.6ZM4.59 5.595l-1.058-.392 1.058-.391c.4-.15.708-.459.858-.859l.392-1.058.392 1.058c.15.392.466.709.858.85l1.058.392-1.058.392c-.4.15-.708.458-.858.858L5.84 7.503l-.392-1.058a1.464 1.464 0 0 0-.858-.85Zm-.208 12.942a.63.63 0 0 0 .625.625h1.25l-.009.008c1.059 0 1.642 0 2.209-.233.566-.234.975-.642 1.725-1.392l6.791-6.792.039-.038c.45-.458.708-.72.87-1.044a2.259 2.259 0 0 0 0-2.017c-.152-.327-.403-.578-.849-1.023l-.06-.06-.039-.038c-.458-.452-.72-.709-1.044-.87a2.26 2.26 0 0 0-2.017 0c-.327.151-.578.402-1.023.847l-.06.061-1.233 1.233-5.55 5.55c-.742.742-1.159 1.159-1.392 1.725-.233.567-.233 1.15-.233 2.209v1.249Zm1.258-.625v-.617c0-.933 0-1.392.142-1.733.141-.342.466-.667 1.125-1.325l5.116-5.117.792.792a.629.629 0 0 0 .883 0 .629.629 0 0 0 0-.884l-.791-.791.791-.792c.375-.375.6-.6.75-.675.284-.142.625-.142.909 0 .15.075.375.3.75.675.375.375.6.6.675.75.141.283.141.625 0 .908-.075.15-.3.375-.675.75l-6.792 6.792c-.7.7-1 .992-1.325 1.125-.342.142-.808.142-1.733.142H5.64Z\"\n    />\n  </svg>\n);\n\nexport const MeetingIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={18}\n    height={18}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M5.438 3.75V1.5c0-.308.255-.563.562-.563.308 0 .563.255.563.563v2.25A.567.567 0 0 1 6 4.313a.567.567 0 0 1-.563-.563ZM11.438 3.75V1.5c0-.308.255-.563.562-.563.307 0 .563.255.563.563v2.25a.567.567 0 0 1-.563.563.567.567 0 0 1-.563-.563ZM6.09 10.815a.774.774 0 0 1-.247-.157.775.775 0 0 1-.218-.533c0-.097.022-.195.06-.285a.866.866 0 0 1 .158-.247.774.774 0 0 1 .247-.158.766.766 0 0 1 .817.158.789.789 0 0 1 .218.532c0 .045-.008.098-.015.15a.477.477 0 0 1-.045.135.568.568 0 0 1-.068.135c-.022.038-.06.075-.09.113a.789.789 0 0 1-.532.217.747.747 0 0 1-.285-.06ZM8.715 10.815a.774.774 0 0 1-.248-.157.775.775 0 0 1-.217-.533c0-.097.023-.195.06-.285a.866.866 0 0 1 .157-.247.774.774 0 0 1 .248-.158.752.752 0 0 1 .818.158.789.789 0 0 1 .217.532c0 .045-.008.098-.015.15a.477.477 0 0 1-.045.135.567.567 0 0 1-.067.135c-.023.038-.06.075-.09.113a.789.789 0 0 1-.533.217.746.746 0 0 1-.285-.06ZM11.34 10.815a.774.774 0 0 1-.248-.157l-.09-.113a.567.567 0 0 1-.067-.135.477.477 0 0 1-.045-.135 1.129 1.129 0 0 1-.015-.15c0-.195.082-.39.217-.532a.774.774 0 0 1 .248-.158.75.75 0 0 1 .818.158.789.789 0 0 1 .217.532c0 .045-.008.098-.015.15a.477.477 0 0 1-.045.135.567.567 0 0 1-.067.135c-.023.038-.06.075-.09.113a.789.789 0 0 1-.533.217.746.746 0 0 1-.285-.06ZM6.09 13.44a.866.866 0 0 1-.247-.158.789.789 0 0 1-.218-.532c0-.098.022-.195.06-.285a.7.7 0 0 1 .158-.248c.277-.277.787-.277 1.064 0a.789.789 0 0 1 .218.533c0 .195-.082.39-.218.532a.789.789 0 0 1-.532.218.747.747 0 0 1-.285-.06ZM8.467 13.282a.789.789 0 0 1-.217-.532c0-.098.023-.195.06-.285a.7.7 0 0 1 .157-.248c.278-.277.788-.277 1.066 0a.7.7 0 0 1 .157.248c.037.09.06.187.06.285 0 .195-.082.39-.217.532A.789.789 0 0 1 9 13.5a.789.789 0 0 1-.533-.218ZM11.092 13.282a.7.7 0 0 1-.157-.247.747.747 0 0 1-.06-.285c0-.098.023-.195.06-.285a.7.7 0 0 1 .157-.248.749.749 0 0 1 .818-.157c.045.015.09.037.135.067.037.023.075.06.113.09a.789.789 0 0 1 .217.533c0 .195-.082.39-.217.532a.789.789 0 0 1-.533.218.789.789 0 0 1-.533-.218ZM2.625 7.38a.567.567 0 0 1-.563-.563c0-.307.256-.562.563-.562h12.75c.307 0 .563.255.563.562a.567.567 0 0 1-.563.563H2.625Z\"\n    />\n    <path\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n      d=\"M6 17.063c-2.737 0-4.313-1.575-4.313-4.313V6.375c0-2.737 1.576-4.313 4.313-4.313h6c2.738 0 4.313 1.576 4.313 4.313v6.375c0 2.738-1.575 4.313-4.313 4.313H6ZM2.812 6.374v6.375c0 2.145 1.043 3.188 3.188 3.188h6c2.145 0 3.188-1.043 3.188-3.188V6.375c0-2.145-1.043-3.188-3.188-3.188H6c-2.145 0-3.188 1.043-3.188 3.188Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n)\n\nexport const AISettingIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={20}\n    height={20}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M18.333 5.417h-5M5 5.417H1.667\"\n    />\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M8.333 8.333a2.917 2.917 0 1 1 0-5.833 2.917 2.917 0 0 1 0 5.833Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M18.333 14.584H15M6.667 14.584h-5\"\n    />\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M11.667 17.5a2.917 2.917 0 1 1 0-5.833 2.917 2.917 0 0 1 0 5.833Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n)\n\nexport const RealTimeAIIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={24}\n    height={24}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"m10 7-.516 1.394c-.676 1.828-1.014 2.742-1.681 3.409-.667.667-1.581 1.005-3.409 1.681L3 14l1.394.516c1.828.676 2.742 1.015 3.409 1.681.667.666 1.005 1.581 1.681 3.409L10 21l.516-1.394c.676-1.828 1.015-2.742 1.681-3.409.666-.667 1.581-1.005 3.409-1.681L17 14l-1.394-.516c-1.828-.676-2.742-1.014-3.409-1.681-.667-.667-1.005-1.581-1.681-3.409L10 7Zm8-4-.221.597c-.29.784-.435 1.176-.72 1.461-.286.286-.678.431-1.462.72L15 6l.598.221c.783.29 1.175.435 1.46.72.286.286.431.678.72 1.462L18 9l.221-.597c.29-.784.435-1.176.72-1.461.286-.286.678-.431 1.462-.72L21 6l-.598-.221c-.783-.29-1.175-.435-1.46-.72-.286-.286-.431-.678-.72-1.462L18 3Z\"\n    />\n  </svg>\n)\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = peer.usernames?.[0]?.username;\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","/* eslint-disable no-console */\n/* eslint-disable no-null/no-null */\nimport type { Message } from 'ai';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getGlobal } from '../../../global';\n\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { selectChat, selectChatLastMessageId, selectUser } from '../../../global/selectors';\nimport { getActionItems, summaryMessage } from '../utils/chat-api';\nimport { fetchChatMessageByOffsetId, formateMessage2Summary } from '../utils/fetch-messages';\nimport { getAuthState, isTokenValid } from '../utils/google-auth';\n\nexport const createRoomDescriptionMessage = (chatId:string):Message => {\n  return {\n    role: 'assistant',\n    id: uuidv4(),\n    createdAt: new Date(),\n    content: chatId,\n    annotations: [{\n      type: 'room-ai-description',\n    }],\n  };\n};\nexport const createGoogleLoginMessage = ():Message => {\n  return {\n    role: 'assistant',\n    id: uuidv4(),\n    createdAt: new Date(),\n    content: 'Please login first',\n    annotations: [{\n      type: 'google-auth',\n    }],\n  };\n};\n\nexport const createGoogleMeetingMessage = ():Message => {\n  return {\n    role: 'assistant',\n    id: uuidv4(),\n    createdAt: new Date(),\n    content: '',\n    annotations: [{\n      type: 'google-event-insert',\n    }],\n  };\n};\n\nexport const scheduleGoogleMeeting = (insertMessage:(message:Message)=>void, callback?:()=>void) => {\n  const auth = getAuthState();\n  if (!auth || !isTokenValid(auth)) {\n    insertMessage(createGoogleLoginMessage());\n  } else {\n    insertMessage(createGoogleMeetingMessage());\n  }\n  callback?.();\n};\n\nexport const summaryRoomMessage = async (\n  chatId:string,\n  insertMessage:(message:Message)=>void,\n  callback?:()=>void,\n) => {\n  const global = getGlobal();\n  const { autoTranslateLanguage = 'en' } = global.settings.byKey;\n  const chat = selectChat(global, chatId);\n  const lastMessageId = selectChatLastMessageId(global, chatId, 'all') || 0;\n  if (chat) {\n    const messages = await fetchChatMessageByOffsetId({\n      chat,\n      offsetId: lastMessageId,\n      addOffset: -1,\n      sliceSize: 20,\n      threadId: MAIN_THREAD_ID,\n      maxCount: 20,\n    });\n    const formateMessages = formateMessage2Summary(messages);\n    if (!formateMessages.length) {\n      callback?.();\n      const newMessage = {\n        timestamp: new Date().getTime(),\n        content: 'No significant topics or valid data detected. We will continue monitoring.',\n        id: uuidv4(),\n        createdAt: new Date(),\n        role: 'assistant',\n      };\n      insertMessage(newMessage as Message);\n      return;\n    }\n    const summaryInfo = {\n      summaryTime: new Date().getTime(),\n      messageCount: formateMessages.length,\n      userIds: Array.from(new Set(formateMessages.map((m) => m.senderId))),\n    };\n    summaryMessage({\n      messages: formateMessages,\n      language: new Intl.DisplayNames([autoTranslateLanguage], { type: 'language' }).of(autoTranslateLanguage),\n    }).then((res:any) => {\n      const content = {\n        ...res.data,\n        summaryInfo,\n      };\n      const newMessage = {\n        timestamp: new Date().getTime(),\n        content: JSON.stringify(content),\n        id: uuidv4(),\n        createdAt: new Date(),\n        role: 'assistant',\n        annotations: [{\n          type: 'room-summary',\n        }],\n      };\n      insertMessage(newMessage as Message);\n      callback?.();\n    }).catch((err) => {\n      console.log(err);\n      callback?.();\n      const newMessage = {\n        timestamp: new Date().getTime(),\n        content: 'Summarization failed. Try again later.',\n        id: uuidv4(),\n        createdAt: new Date(),\n        role: 'assistant',\n      };\n      insertMessage(newMessage as Message);\n    });\n  }\n};\n\nexport const generateRoomActionItems = async (\n  chatId:string,\n  insertMessage:(message:Message)=>void,\n  callback?:()=>void,\n) => {\n  const global = getGlobal();\n  const { autoTranslateLanguage } = global.settings.byKey;\n  const chat = selectChat(global, chatId);\n  const lastMessageId = selectChatLastMessageId(global, chatId, 'all') || 0;\n  if (chat) {\n    const messages = await fetchChatMessageByOffsetId({\n      chat,\n      offsetId: lastMessageId,\n      addOffset: -1,\n      sliceSize: 20,\n      threadId: MAIN_THREAD_ID,\n      maxCount: 20,\n    });\n    const formateMessages = messages.map((message) => {\n      if (message.content.text?.text) {\n        const peer = message.senderId ? selectUser(global, message.senderId) : undefined;\n        return {\n          senderId: message?.senderId || message?.chatId,\n          senderName: peer ? `${peer.firstName || ''} ${peer.lastName || ''}` : '',\n          date: message.date,\n          messageId: Math.floor(message.id),\n          content: message.content.text?.text ?? '',\n        };\n      }\n      return null;\n    }).filter(Boolean);\n    if (!formateMessages.length) return;\n    const summaryInfo = {\n      summaryTime: new Date().getTime(),\n      messageCount: formateMessages.length,\n      userIds: Array.from(new Set(formateMessages.map((m) => m.senderId))),\n    };\n    getActionItems({\n      messages: formateMessages,\n      language: autoTranslateLanguage,\n    }).then((res:any) => {\n      const content = {\n        ...res.data,\n        summaryInfo,\n      };\n      const newMessage = {\n        timestamp: new Date().getTime(),\n        content: JSON.stringify(content),\n        id: uuidv4(),\n        createdAt: new Date(),\n        role: 'assistant',\n        annotations: [{\n          type: 'room-actions',\n        }],\n      };\n      insertMessage(newMessage as Message);\n      callback?.();\n    }).catch((err) => {\n      console.log(err);\n      callback?.();\n    });\n  }\n};\n\nexport const createMeetingTimeConfirmMessage = ({\n  chatId,\n  date,\n  email,\n}:{\n  chatId:string;\n  date:{ start:string;end:string }[];\n  email:string[] | null;\n}):Message => {\n  return {\n    role: 'assistant',\n    id: uuidv4(),\n    createdAt: new Date(),\n    content: JSON.stringify({ chatId, date, email }),\n    annotations: [{\n      type: 'google-meet-time-confirm',\n    }],\n  };\n};\n\nexport const createMeetingMentionMessage = (chatId:string):Message => {\n  return {\n    role: 'assistant',\n    id: uuidv4(),\n    createdAt: new Date(),\n    content: chatId,\n    annotations: [{\n      type: 'google-meet-mention',\n    }],\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import { filterAITag, filterPresetTag } from \"../components/chatAssistant/ai-chatfolders/tag-filter\"\nimport { isChatBot } from \"../components/chatAssistant/ai-chatfolders/util\"\nimport { AI_FOLDER_ID, ALL_FOLDER_ID, PRESET_FOLDER_ID, UNREAD_FOLDER_ID } from \"../config\"\nimport { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  if (folderId === UNREAD_FOLDER_ID) {\n    return getUnreadChatsByFolderId()[ALL_FOLDER_ID]\n  }\n  if (folderId === PRESET_FOLDER_ID) {\n    return filterPresetTag(getOrderedIds(ALL_FOLDER_ID)?.filter(i => !isChatBot(i)))\n  }\n  if (folderId === AI_FOLDER_ID) {\n    return filterAITag(getOrderedIds(ALL_FOLDER_ID)?.filter(i => !isChatBot(i)))\n  }\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","/* eslint-disable no-null/no-null */\n// auth.ts\n\nexport interface AuthState {\n  accessToken?: string;\n  grantedScopes?: string;\n  expiresAt?: number;\n  isLoggedIn: boolean;\n  idToken?: string;\n}\n\nconst STORAGE_KEY = 'google_auth_state';\n\nexport function setAuthState(state: AuthState) {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n}\n\nexport function getAuthState(): AuthState | null {\n  const raw = localStorage.getItem(STORAGE_KEY);\n  return raw ? JSON.parse(raw) : null;\n}\n\nexport function clearAuthState() {\n  localStorage.removeItem(STORAGE_KEY);\n}\n\nexport function isTokenValid(state: AuthState | null): boolean {\n  if (!state || !state.accessToken || !state.expiresAt) return false;\n  return Date.now() < state.expiresAt - 60 * 1000;\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './browser/windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport { message as showMessage, Modal } from 'antd';\n\nimport type { AuthState } from './google-auth';\n\nimport { getAuthState, setAuthState } from './google-auth';\n\n// export const GOOGLE_APP_CLIENT_ID = '847573679345-qq64ofbqhv7gg61e04dbrk8b92djf1fb.apps.googleusercontent.com';\n// export const GOOGLE_APP_CLIENT_ID_PRO = '166854276552-euk0006iphou9bvqplmgmpc0vde8v1in.apps.googleusercontent.com';\nexport const GOOGLE_APP_CLIENT_ID_DEV = '545055439232-l17p8a5fs7b5377726doqt2cpd9qfta4.apps.googleusercontent.com';\nexport const GOOGLE_API_KEY_DEV = 'AIzaSyAc7yi96E4qjF16-n40wDm-Wz0MPZnLLs8';\nexport const GOOGLE_SCOPES = [\n  'openid',\n  'profile',\n  'email',\n  'https://www.googleapis.com/auth/calendar',\n  'https://www.googleapis.com/auth/calendar.events',\n  'https://www.googleapis.com/auth/calendar.readonly',\n  'https://www.googleapis.com/auth/calendar.events.freebusy',\n  'https://www.googleapis.com/auth/calendar.freebusy',\n];\n\nexport function loadGoogleSdk(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (window.google?.accounts?.oauth2) {\n      resolve();\n      return;\n    }\n\n    const script = document.createElement('script');\n    script.src = 'https://accounts.google.com/gsi/client';\n    script.async = true;\n    script.defer = true;\n    script.onload = () => resolve();\n    script.onerror = () => reject(new Error('Failed to load Google SDK'));\n    document.head.appendChild(script);\n  });\n}\n\nexport async function loginWithGoogle():Promise<AuthState> {\n  if (!window.google?.accounts?.oauth2) {\n    await loadGoogleSdk();\n  }\n  return new Promise((resolve, reject) => {\n    const client = window.google.accounts.oauth2.initTokenClient({\n      client_id: GOOGLE_APP_CLIENT_ID_DEV,\n      scope: GOOGLE_SCOPES.join(' '),\n      prompt: 'consent',\n      ux_mode: 'popup',\n      callback: (resp) => {\n        if (resp?.error) {\n          reject(resp.error);\n        }\n        const authState = {\n          isLoggedIn: true,\n          accessToken: resp.access_token,\n          idToken: resp.id_token,\n          grantedScopes: resp.scope,\n          expiresAt: Date.now() + resp.expires_in * 1000,\n        };\n        setAuthState(authState);\n        resolve(authState);\n      },\n    });\n\n    client.requestAccessToken();\n  });\n}\n\nexport const createAuthConfirmModal = (props:{ onOk?:(accessToken:string)=>void;onCancel?:()=>void }) => {\n  Modal.confirm({\n    title: 'Google authorization',\n    content: 'This service requires access to your Google Calendar.',\n    okText: 'Confirm',\n    cancelText: 'Cancel',\n    onOk: () => {\n      loginWithGoogle().then((authState) => {\n        props.onOk?.(authState.accessToken!);\n      }).catch((error) => {\n        console.error('Google login failed:', error);\n        showMessage.info('Google login failed');\n      });\n    },\n    onCancel: props?.onCancel,\n  });\n};\n\nexport interface ICreateMeetResponse {\n  summary: string;\n  start: { dateTime: string; timeZone: string };\n  end: { dateTime: string; timeZone: string };\n  attendees: { email: string }[];\n  reminders: {\n    useDefault: boolean;\n    overrides: { method: string; minutes: number }[];\n  };\n  conferenceData: {\n    createRequest: {\n      requestId: string;\n      conferenceSolutionKey: { type: string };\n    };\n  };\n  hangoutLink: string;\n}\nexport const createGoogleMeet = ({\n  title = 'Meeting Invitation',\n  startDate,\n  endDate,\n  selectedTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone,\n  emails = [],\n  googleToken,\n}: {\n  title?: string;\n  startDate: Date;\n  endDate: Date;\n  selectedTimezone: string;\n  emails: string[];\n  googleToken: string;\n}): Promise<ICreateMeetResponse> => {\n  return new Promise((resolve, reject) => {\n    const attendees = emails.map((email) => {\n      return {\n        email,\n      };\n    });\n    const event = {\n      summary: title,\n      start: { dateTime: new Date(startDate), timeZone: selectedTimezone },\n      end: { dateTime: new Date(endDate), timeZone: selectedTimezone },\n      attendees,\n      reminders: {\n        useDefault: false,\n        overrides: [\n          { method: 'email', minutes: 30 },\n          { method: 'popup', minutes: 10 },\n        ],\n      },\n      conferenceData: {\n        createRequest: {\n          requestId: `test-${Date.now()}`,\n          conferenceSolutionKey: { type: 'hangoutsMeet' },\n        },\n      },\n    };\n    fetch(\n      `https://www.googleapis.com/calendar/v3/calendars/primary/events?conferenceDataVersion=1&alt=json&key=${GOOGLE_API_KEY_DEV}`,\n      {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${googleToken}`,\n        },\n        body: JSON.stringify(event),\n      },\n    )\n      .then((response) => response.json())\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const getGoogleCalendarFreeBusy = ():Promise<{ start:string; end:string }[]> => {\n  const auth = getAuthState();\n  return new Promise((resolve, reject) => {\n    const params = {\n      timeMin: new Date().toISOString(), // 过去24小时\n      timeMax: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(), // 未来3天\n      items: [{ id: 'primary' }], // 查询主日历\n    };\n    fetch(`https://www.googleapis.com/calendar/v3/freeBusy?key=${GOOGLE_API_KEY_DEV}`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${auth?.accessToken}`,\n      },\n      body: JSON.stringify(params),\n    }).then((res) => res.json())\n      .then((res) => {\n        resolve(res?.calendars.primary.busy || []);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'premiumGiftStars') {\n    const {\n      months, userId, message,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'premiumGiftStars',\n      months,\n      message,\n      user,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, boostPeerId } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: boostPeerId,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import copy from 'copy-to-clipboard';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { selectChatTranslations } from '../../../../global/selectors';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n    const global = getGlobal();\n    const { id: messageId, chatId } = message;\n    const chatTranslations = selectChatTranslations(global, chatId);\n    const { autoTranslateLanguage } = global.settings.byKey;\n    const messageTranslation = autoTranslateLanguage && messageId\n      ? chatTranslations?.byLangCode[autoTranslateLanguage]?.[messageId] : undefined;\n    const { isPending, text: translatedText } = messageTranslation || {};\n    if (translatedText && !isPending) {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            copy(translatedText.text);\n          }\n          afterEffect?.();\n        },\n      });\n    } else {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          const messageIds = getMessageIdsForSelectedText();\n          if (messageIds?.length && onCopyMessages) {\n            onCopyMessages(messageIds);\n          } else if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            const clipboardText = renderMessageText(\n              { message, shouldRenderAsHtml: true },\n            );\n            if (clipboardText) {\n              copyHtmlToClipboard(\n                clipboardText.join(''),\n                getMessageTextWithSpoilers(message, statefulContent)!,\n              );\n            }\n          }\n\n          afterEffect?.();\n        },\n      });\n    }\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n  isUserId,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport SerenaPath from '../../chatAssistant/assets/serena.png';\nimport { canSummarize } from '../../chatAssistant/utils/ai-analyse-message';\nimport { AIReplyIcon, MeetingIcon, SummarizeIcon } from '../../chatAssistant/utils/icons';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canSmartReply?: boolean;\n  canScheduleMeeting?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onSmartReply?: NoneToVoidFunction;\n  onScheduleMeet?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  onSummarize?: NoneToVoidFunction;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canSmartReply,\n  canScheduleMeeting,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onSmartReply,\n  onScheduleMeet,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  onSummarize,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n  const canAISummarize = canSummarize(message);\n  const canSerenaAI = canAISummarize || canScheduleMeeting || canSmartReply;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? lang('SendAnotherGift')\n                : lang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n\n        {canSerenaAI && (\n          <MenuItem\n            customIcon={(\n              <img\n                src={SerenaPath}\n                className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n                alt=\"\"\n              />\n            )}\n            submenu={(\n              <>\n                {canScheduleMeeting && (\n                  <MenuItem\n                    customIcon={(\n                      <div className=\"mr-[1.25rem]\">\n                        <MeetingIcon />\n                      </div>\n                    )}\n                    onClick={onScheduleMeet}\n                  >\n                    {lang('Schedule Meeting')}\n                  </MenuItem>\n                )}\n                {canAISummarize && (\n                  <MenuItem\n                    customIcon={(\n                      <div className=\"mr-[1.25rem]\">\n                        <SummarizeIcon />\n                      </div>\n                    )}\n                    onClick={onSummarize}\n                  >\n                    {lang('Summarize')}\n                  </MenuItem>\n                )}\n                {canSmartReply && (\n                  <MenuItem\n                    customIcon={(\n                      <div className=\"mr-[1.25rem]\">\n                        <AIReplyIcon />\n                      </div>\n                    )}\n                    onClick={onSmartReply}\n                  >\n                    {lang('AI Reply')}\n                  </MenuItem>\n                )}\n              </>\n            )}\n          >\n            {lang('SerenaAI')}\n          </MenuItem>\n        )}\n\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {/* {canSmartReply && (\n          <MenuItem\n            customIcon={(\n              <img\n                className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n                src={SmartReplyIcon}\n                alt=\"\"\n              />\n            )}\n            onClick={onSmartReply}\n          >\n            {lang('Smart Reply')}\n          </MenuItem>\n        )} */}\n        {/* {canScheduleMeeting && (\n          <MenuItem\n            customIcon={(\n              <img\n                className=\"w-[20px] h-[20px] mr-[1.25rem] ml-[0.5rem]\"\n                src={ScheduleMeetingIcon}\n                alt=\"\"\n              />\n            )}\n            onClick={onScheduleMeet}\n          >\n            {lang('Schedule a Meeting')}\n          </MenuItem>\n        )} */}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageText,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport {\n  audioSummary, checkIsUrl, documentSummary, photoSummary, videoSummary, voiceToAudioSummary, webPageSummary,\n} from '../../chatAssistant/utils/ai-analyse-message';\nimport { chatAIGenerate } from '../../chatAssistant/utils/chat-api';\nimport { createAuthConfirmModal } from '../../chatAssistant/utils/google-api';\nimport { getAuthState, isTokenValid } from '../../chatAssistant/utils/google-auth';\nimport ScheduleMeeting from '../../chatAssistant/utils/schedule-meeting';\nimport { knowledgeEmbeddingStore } from '../../chatAssistant/vector-store';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport eventEmitter from '../../chatAssistant/lib/EventEmitter';\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canSmartReply?: boolean;\n  canScheduleMeeting?:boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canSmartReply,\n  canScheduleMeeting,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n    openChatAIWithInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text!.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSmartReply = useLastCallback(async () => {\n    closeMenu();\n    if (message.content.text?.text) {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n      });\n      const vectorSearchResults = await knowledgeEmbeddingStore.similaritySearch({\n        query: message.content.text?.text,\n      });\n      type Metadata = { answer: string }; // Define the type for metadata\n      const similarResult = vectorSearchResults.similarItems[0] as { metadata: Metadata; score: number } | undefined;\n      if (similarResult && similarResult.score > 0.8) {\n        eventEmitter.emit('update-input-text', similarResult.metadata.answer);\n      } else {\n        eventEmitter.emit('update-input-spiner', true);\n        chatAIGenerate({\n          data: {\n            messages: [\n              {\n                role: 'system',\n                content: '你是一个多语种智能助手。接收用户消息后，自动识别其使用的语言，并用相同的语言进行自然、得体的回复。你应该理解消息的语境，确保回复简洁、友好且符合语言习惯。',\n                id: '1',\n              },\n              {\n                role: 'user',\n                content: `请回复下面的消息: ${message.content.text?.text}`,\n                id: '2',\n              },\n            ],\n          },\n          onResponse: (response) => {\n            eventEmitter.emit('update-input-text', response);\n          },\n          onFinish: () => {\n            // eslint-disable-next-line no-console\n            console.log('Finish');\n          },\n        });\n      }\n    }\n  });\n\n  const handleScheduleMeeting = useLastCallback(() => {\n    const chatId = message.chatId;\n    const scheduleMeeting = ScheduleMeeting.create({ chatId });\n    const auth = getAuthState();\n    if (!auth || !isTokenValid(auth)) {\n      createAuthConfirmModal({\n        onOk: () => {\n          scheduleMeeting.start(message);\n        },\n      });\n    } else {\n      scheduleMeeting.start(message);\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  const handleSummarize = useLastCallback(async () => {\n    const {\n      photo, document, webPage, voice, audio, text, video,\n    } = message.content;\n    const isUrl = checkIsUrl(text?.text);\n    await openChatAIWithInfo({ chatId: message.chatId });\n    if (photo) {\n      photoSummary(message);\n    } else if ((webPage && !text?.text) || isUrl) {\n      webPageSummary(message);\n    } else if (document) {\n      documentSummary(message);\n    } else if (voice) {\n      voiceToAudioSummary(message);\n    } else if (audio) {\n      audioSummary(message);\n    } else if (video) {\n      videoSummary(message);\n    }\n    closeMenu();\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canSmartReply={canSmartReply}\n        canScheduleMeeting={canScheduleMeeting}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onSmartReply={handleSmartReply}\n        onScheduleMeet={handleScheduleMeeting}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        onSummarize={handleSummarize}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation;\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n    const hasTextContent = hasMessageText(message);\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canSmartReply: !isPinned && !isScheduled && canReplyGlobally && canSendText && hasTextContent,\n      canScheduleMeeting: !isOwn && hasTextContent,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n"],"names":["pdfjsLib","workerSrc","mammoth","require","async","replyToMention","message","isAuto","isMentioned","content","text","newMessage","chatId","timestamp","Date","getTime","id","uuidv4","createdAt","role","annotations","type","JSON","stringify","messageId","status","sendMessageToAIRoom","mentionReply","language","getAutoTransLang","then","response","replys","sendErrorMessage","catch","err","console","log","photoSummary","photo","mediaHash","getMediaHash","handleImageToSummaryText","mimeType","webPageSummary","webPage","url","webPageAISummary","summaryInfo","documentSummary","document","checkIsImage","indexOf","handleAudioToSummaryText","filename","fileName","size","mediaLoader","blobUrl","fetch","blob","arrayBuffer","TextDecoder","decode","extractRawText","value","pdf","data","promise","pdfText","i","numPages","page","getPage","getTextContent","items","map","item","str","join","documentAISummary","voiceToAudioSummary","voice","maxBase64Length","Math","floor","audio","showMessage","info","audioSummary","videoSummary","video","ChataiStores","storeMessage","eventEmitter","emit","Actions","AddRoomAIMessage","errorMsg","formData","FormData","append","summaryResponse","audioAISummary","reader","FileReader","onloadend","base64Data","result","toString","split","imageAISummary","image","readAsDataURL","canSummarize","isUrl","checkIsUrl","hasText","trim","test","startsWith","global","getGlobal","autoTranslateLanguage","settings","byKey","Intl","DisplayNames","of","memo","withGlobal","peerId","forceShowSelf","peer","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","title","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","className","withPeerColors","withEmojiStatus","onClick","itemClassName","lang","useOldLang","apiPeer","anyPeer","chat","isApiPeerChat","undefined","iconElement","titleElement","titleText","React","createElement","Icon","name","style","Avatar","getPeerTitle","FullNameTitle","fullClassName","buildClassName","isForum","isAvatarSquare","getPeerColorClass","dir","isRtl","formatMeetingTimeRange","startISO","endISO","timeZoneVisable","startDate","endDate","dayFormatter","DateTimeFormat","weekday","month","day","timeFormatter","hour","minute","hour12","formatTime","date","format","toLowerCase","replace","dateStr","startTimeStr","endTimeStr","timeZoneName","resolvedOptions","timeZone","suggestFreeTimes","busySlots","durationMinutes","count","now","DateTime","utc","endRange","plus","days","busyIntervals","slot","Interval","fromDateTimes","fromISO","start","end","freeSlots","cursor","done","dayStart","set","second","millisecond","dayEnd","slotStart","minutes","slotEnd","slotInterval","some","b","overlaps","push","toISO","length","startOf","ScheduleMeeting","constructor","email","hasConfirmed","_defineProperty","this","handlerRef","handler","create","params","existing","instances","get","instance","originalMessage","on","NewTextMessage","timeout","setTimeout","cleanup","off","clearTimeout","delete","isOutgoing","handleGoogleAuthCheck","calendlyUrl","extractCalendlyLinks","suitableDates","aFreeSlots","bBusySlots","aSlot","aStart","aEnd","hasConflict","bSlot","bStart","toISOString","getAvailableSlots","calendlyRanges","getGoogleCalendarFreeBusy","getSuitableTime","slice","toolCheckRes","Promise","resolve","reject","method","headers","body","messages","res","json","toolResults","forEach","toolCall","toolName","getMeetParamsByAITools","dateRange","isAvailable","suggestions","proposedSlot","myBusyTimes","proposedStart","proposedEnd","busy","busyStart","isTimeSlotAvailable","sendMessage","index","meetingTimeConfirmMessage","createMeetingTimeConfirmMessage","parseMessage2StoreMessage","currentChat","selectCurrentChat","getActions","openChatAIWithInfo","e","auth","getAuthState","isTokenValid","handleCreateGoogleMeet","accessToken","createAuthConfirmModal","onOk","createGoogleMeet","selectedTimezone","emails","googleToken","createMeetResponse","eventMessage","summary","attendees","attendee","dateTime","hangoutLink","messageList","threadId","Map","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","reaction","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","ref","useRef","isCustom","availableReaction","useMemo","find","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","documentId","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","random","isIntersecting","useIsIntersecting","mediaHashCenterIcon","getStickerHashById","mediaHashEffect","mediaDataCenterIcon","useMedia","mediaDataEffect","activeReaction","active","shouldPlayEffect","Boolean","shouldPlayCenter","shouldRender","shouldRenderEffect","transitionClassNames","animationClassNames","useShowTransitionDeprecated","shouldRenderCenter","centerAnimationClassNames","handleEnded","useLastCallback","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","useFlag","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","styles","root","animating","ReactionStaticEmoji","CustomEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","key","animatedIcon","roundToNearestEven","tgsUrl","play","noLoop","onLoad","onEnded","Fragment","effect","CustomEmojiEffect","particleSize","max","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","entry","lastHeight","current","newHeight","contentRect","height","isAnimatingScroll","container","target","closest","beginHeavyAnimation","resizeDiff","offsetHeight","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useResizeObserver","callback","delay","savedCallback","useEffect","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","maxLength","Button","ripple","disabled","getOffsetToContainer","element","offsetTop","offsetLeft","contains","offsetParent","top","left","withIconHeart","staticIconId","staticIcon","mediaData","useMediaTransitionDeprecated","shouldApplySizeFix","shouldReplaceWithHeartIcon","src","blankUrl","alt","draggable","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","shiftX","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","min","newTailPosition","hasFloatingBadge","isProgressFull","buildStyle","width","viewBox","fill","d","cn","inputs","twMerge","clsx","formatTimestamp","isSameDay","toDateString","isSameYear","getFullYear","timePart","String","getHours","padStart","getMinutes","getMonth","getDate","formatTimestampRange","normalizeTimestamp","ts","isToday","d2","d1","pad","n","formatDate","match","props","isOpen","CalendarModal","useModuleLoader","Bundles","Extra","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","scheduledAt","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onClose","onSecondButtonClick","AvatarList","peers","limit","badgeText","pxSize","AVATAR_SIZES","renderingBadgeText","MediaSpoiler","isVisible","withAnimation","thumbDataUri","canvasRef","useCanvasBlur","handleClick","el","rect","currentTarget","getBoundingClientRect","x","clientX","y","clientY","shiftY","setAttribute","usePrevious","prevRef","lastRef","useHorizontalScroll","containerRef","isDisabled","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","getStickerMediaHash","previewUrl","preloadImage","patternPositions","coordinates","ring","ringItemCount","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","isElementInViewport","display","windowHeight","windowSize","MAX_EFFECT_COUNT","IS_IOS","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","useShowTransition","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","AnimatedIcon","LOCAL_TGS_URLS","StarReactionEffect","nonInteractive","quality","REACTION_SIZE","selectStarsState","stars","ReactionButton","isOwnMessage","recentReactors","chosenClassName","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","useLang","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","stopPropagation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","getComputedStyle","scale","cancel","animate","offset","duration","easing","prevAmount","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","chosen","onMouseDown","onContextMenu","Sparkles","preset","animatedEmoji","AnimatedCounter","formatIntegerCompact","paidCounter","counter","Reactions","maxWidth","metaChildren","noRecentReactors","isCurrentUserPremium","tags","isAccountFrozen","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","openPremiumModal","showNotification","openFrozenAccountModal","results","areTags","recentReactions","withServiceReactions","areReactionsPossible","totalCount","reduce","acc","recentReactorsByReactionKey","recentReaction","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","actionText","cacheBreaker","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","RADIUS","ITERATIONS","dataUri","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","fastBlur","onload","requestMeasure","PickerItem","subtitle","avatarElement","inputElement","inputPosition","inactive","titleClassName","subtitleClassName","onDisabledClick","isClickable","RippleEffect","SummarizeIcon","_extends","xmlns","fillRule","clipRule","AIReplyIcon","MeetingIcon","AISettingIcon","stroke","strokeLinecap","strokeLinejoin","strokeWidth","RealTimeAIIcon","renderMessageText","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","maxTimestamp","entities","contentNotSupportedText","getMessageText","trimText","renderTextWithEntities","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","getMessageSummaryText","renderText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","useEnsureMessage","replyOriginForId","loadMessage","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","timeoutId","window","lockedSelectedIdsSet","Set","lockedUnselectedIdsSet","unlockedSelectedIds","has","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","categoryType","newSelectedCategories","includes","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","username","usernames","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","Radio","checked","onlyInput","Checkbox","beforeChildren","pickerCategoryTitle","header","peerChip","InputText","InfiniteScroll","pickerList","padded","itemSelector","Loading","noResults","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","cb","DEFAULT_DURATION","stopById","animateHorizontalScroll","selectCanAnimateInterface","getAttribute","containerWidth","scrollWidth","dataset","scrollId","path","remainingPath","isStopped","scrollSnapType","startAt","t","currentPath","transition","CUSTOM_PEER_PREMIUM","isCustomPeer","titleKey","subtitleKey","avatarIcon","withPremiumGradient","CUSTOM_PEER_INCLUDED_CHAT_TYPES","peerColorId","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","createRoomDescriptionMessage","createGoogleLoginMessage","createGoogleMeetingMessage","scheduleGoogleMeeting","insertMessage","summaryRoomMessage","selectChat","lastMessageId","selectChatLastMessageId","fetchChatMessageByOffsetId","offsetId","addOffset","sliceSize","MAIN_THREAD_ID","maxCount","formateMessages","formateMessage2Summary","summaryTime","messageCount","userIds","from","m","senderId","summaryMessage","generateRoomActionItems","senderName","firstName","lastName","getActionItems","createMeetingMentionMessage","loadedPreviewUrls","otherProps","isThumbOpen","unmarkThumbOpen","thumbClassNames","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","add","handleAnimationReady","useCustomBackground","theme","settingValue","setThemeSettings","setValue","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","URL","createObjectURL","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","getStickerFromGift","gift","sticker","attributes","attr","getTotalGiftAvailability","availabilityTotal","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","characters","elements","textLength","prevTextLength","charIndex","prevTextCharIndex","unshift","renderAnimatedCharacters","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","preventDefaultForScrollKeys","HTMLElement","tagName","isTextBox","disableScrolling","_excludedClosestSelector","onkeydown","enableScrolling","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","UNREAD_FOLDER_ID","getUnreadChatsByFolderId","ALL_FOLDER_ID","PRESET_FOLDER_ID","filterPresetTag","getOrderedIds","isChatBot","AI_FOLDER_ID","filterAITag","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","ReactionSelectorCustomReaction","isReady","noAppearAnimation","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","createClassNameBuilder","ReactionSelector","allAvailableReactions","topReactions","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isPrivate","canPlayAnimatedEmojis","isInSavedMessages","isInStoryViewer","isForEffects","effectReactions","isWithPaidReaction","onShowMore","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","Link","color","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","animateScroll","position","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","noLoad","forcePreview","thumbnail","localMediaHash","previewBlobUrl","ApiMediaFormat","BlobUrl","AnimatedIconWithPreview","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","priority","lastMessage","selectChatLastMessage","isVerified","STORAGE_KEY","setAuthState","state","localStorage","setItem","raw","getItem","parse","expiresAt","ENTITY_CLASS_BY_NODE_NAME","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","parseHtmlAsFormattedText","html","withMarkdownLinks","skipMarkdown","fragment","innerHTML","parsedHtml","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","textIndex","recursionDeepness","addEntity","node","nodeType","Node","COMMENT_NODE","entity","rawText","entityType","nodeName","anchor","MentionName","Url","href","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","substring","userId","Timestamp","isNaN","getEntityDataFromNode","hasChildNodes","childNodes","querySelectorAll","replaceWith","ELEMENT_NODE","getMessageIdsForSelectedText","selection","getSelection","selectedFragments","rangeCount","getRangeAt","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageIds","children","classList","messageEl","firstChild","removeChild","pop","parentNode","BadgeButton","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","abs","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","isLottie","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","withSharedAnimation","onAnimationEnd","GOOGLE_APP_CLIENT_ID_DEV","GOOGLE_API_KEY_DEV","GOOGLE_SCOPES","loginWithGoogle","google","accounts","oauth2","script","defer","onerror","Error","head","appendChild","initTokenClient","client_id","scope","prompt","ux_mode","resp","authState","isLoggedIn","access_token","idToken","id_token","grantedScopes","expires_in","requestAccessToken","Modal","confirm","okText","cancelText","reminders","useDefault","overrides","conferenceData","createRequest","requestId","conferenceSolutionKey","Authorization","timeMin","timeMax","calendars","primary","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","currency","purpose","hash","months","boostChannelId","option","users","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","savedId","buildStarsTransactionCustomPeer","customPeerAvatarColor","formatStarsTransactionAmount","starsAmount","nanos","number","formatStarsAmount","getStarsTransactionFromGift","transactionId","isGift","isMyGift","getPrizeStarsTransactionFromGiveaway","boostPeerId","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","getTriggerElement","getRootElement","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","onCloseAnimationEnd","MenuItem","destructive","div","ALLOWED_QUOTE_ENTITIES","getSelectionAsFormattedText","range","clonedSelection","commonAncestorContainer","currentElement","parentElement","wrapHtmlWithMarkupTags","getSelectionAsHtml","stripEntitiesForQuote","PinMessageModal","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","Transition","activeKey","handleOpenModal","isReadDate","MessageContextMenu","isReactionPickerOpen","poll","story","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canSmartReply","canScheduleMeeting","canQuote","canEdit","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","onReply","onSmartReply","onScheduleMeet","onOpenThread","onEdit","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","onSummarize","userFullName","canGift","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","scrollableRef","noReactions","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","canAISummarize","canSerenaAI","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","copyOptions","afterEffect","options","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","label","copyImageToClipboard","copyTextToClipboard","anchorNode","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","chatTranslations","selectChatTranslations","messageTranslation","byLangCode","isPending","translatedText","execCommand","copy","clipboardText","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","extraHeightAudioPlayer","middleColumn","getElementById","middleColumnComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","customIcon","SerenaPath","submenu","messagesCount","withPreventDefaultOnMouseDown","MenuSeparator","inline","withWrap","reactors","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","UNQUOTABLE_OFFSET","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","storyData","selectPeerStory","selectCanGift","hasTextContent","hasMessageText","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","ContextMenuContainer","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","reportMessages","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","calendar","chatsById","chats","byId","usersById","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","getMessageDownloadableMedia","getIsDownloading","selectionRange","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","startOffset","endOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","replyToPeerId","fromChatId","handleSmartReply","similarResult","knowledgeEmbeddingStore","similaritySearch","query","similarItems","score","metadata","answer","chatAIGenerate","onResponse","onFinish","handleScheduleMeeting","scheduleMeeting","handleOpenThread","handleEdit","handlePin","handleUnpin","isUnpin","handleForward","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","getMessageVideo","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","handleSummarize","ConfirmDialog","confirmLabel","confirmHandler"],"sourceRoot":""}