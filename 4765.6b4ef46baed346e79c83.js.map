{"version":3,"file":"4765.6b4ef46baed346e79c83.js","mappings":"4IACA,QAA4H,WCkB5H,GAAeA,EAAAA,EAAAA,IAZaC,IAExBC,EAAAA,GAAAA,cAAA,OAAKC,UDRc,YCSjBD,EAAAA,GAAAA,cAAA,OAAKC,WAAWC,EAAAA,EAAAA,GDTqB,WCSSC,KAC9CH,EAAAA,GAAAA,cAAA,OAAKC,UDVkD,YCWrDD,EAAAA,GAAAA,cAAA,OAAKC,WAAWC,EAAAA,EAAAA,GDXwD,WCW3BC,KAC7CH,EAAAA,GAAAA,cAAA,OAAKC,WAAWC,EAAAA,EAAAA,GDZ8E,WCY9CC,O,2DCZxD,SAAgB,KAAO,WAAW,OAAS,WAAW,IAAM,WAAW,IAAM,WAAW,IAAM,WAAW,OAAS,YCmBlH,GAAeL,EAAAA,EAAAA,IATf,UAAgB,MAAEM,IAChB,OACEJ,EAAAA,GAAAA,cAAA,OAAKC,WAAWC,EAAAA,EAAAA,GAAeC,EAAOE,KAAM,UAAW,kBACrDL,EAAAA,GAAAA,cAAA,KAAGC,WAAWC,EAAAA,EAAAA,GAAeC,EAAOG,OAAQH,EAAOC,MACnDJ,EAAAA,GAAAA,cAAA,KAAGC,WAAWC,EAAAA,EAAAA,GAAeC,EAAOI,OAAQJ,EAAOC,MAGzD,E,gJCkBA,MAAMI,EAA2BA,EAC/BC,KACAC,OACAC,UACAC,WACAC,WACAC,gBACAC,WACAC,gBACAC,oBACAC,SACAC,WACAC,WACAnB,gBAEA,MAAMoB,GAAeC,EAAAA,EAAAA,IAAaC,IAChC,MAAM,MAAEnB,GAAUmB,EAAMC,cACxBT,EAASX,EAAOmB,IACf,CAACR,IAEEU,GAAkBC,EAAAA,EAAAA,GAAiBtB,GAAkB,KACzDY,IAAgBZ,KAGlB,OACEJ,EAAAA,GAAAA,cAAA,OAAKS,GAAIA,EAAIR,WAAWC,EAAAA,EAAAA,GAAe,cAAeD,IACnDU,EAAQgB,IAAKC,GACZ5B,EAAAA,GAAAA,cAAC6B,EAAAA,EAAK,CACJnB,KAAMA,EACNoB,MAAOF,EAAOE,MACdV,SAAUA,GAAYQ,EAAOR,SAC7BH,kBAAmBA,EACnBb,MAAOwB,EAAOxB,MACd2B,QAASH,EAAOxB,QAAUQ,EAC1BoB,OAAQJ,EAAOI,OACfC,uBAAwBL,EAAOK,uBAC/BpB,SAAUA,EACVM,SAAUA,EACVe,UAAWpB,EAAgBA,IAAkBc,EAAOxB,WAAQ+B,EAC5DlC,UAAW2B,EAAO3B,UAClBc,SAAUM,EACVI,gBAAiBA,EAAgBG,EAAOxB,OACxCc,OAAQA,OAOlB,GAAepB,EAAAA,EAAAA,IAAKU,G,sDCpFpB,SAAgB,iBAAmB,WAAW,gBAAkB,WAAW,gBAAkB,WAAW,YAAc,WAAW,SAAW,WAAW,cAAgB,WAAW,WAAa,WAAW,eAAiB,W,0JCgB3N,MAAM4B,EAAsBA,EAC1BC,OACApC,YACAqC,sBAGEtC,EAAAA,GAAAA,cAACuC,EAAAA,EAAc,CACbtC,WAAWC,EAAAA,EAAAA,GAAeC,EAAAA,EAAOE,KAAMiC,EAAmBnC,EAAAA,EAAOqC,UAAYrC,EAAAA,EAAAA,QAAgBF,GAC7FwC,OAAQC,QAAQL,IAEfA,GAAQrC,EAAAA,GAAAA,cAAC2C,EAAAA,EAAe,CAACN,KAAMA,KAKtC,GAAevC,EAAAA,EAAAA,IAAKsC,G,uSCPb,MAAMQ,EAAqB,IA8B5BC,EAAsBA,EAC1BC,YACAC,QACA9C,YACA+C,mBACAC,kBACAR,SACAS,SACAC,SACAC,iBACAC,yBACAC,2BAA2B,cAC3BC,aACAC,kBACAC,WACAC,QACAC,cACAC,qBACAC,gBACAC,UACAC,sBACAC,UACAC,iBACAC,oBACAC,uBAAuB,UAEvB,MACEC,IAAKC,EAAQ,aACbC,IACEC,EAAAA,EAAAA,GAAkB,CACpB9B,SACAsB,sBACAS,kBAAkB,IAGdC,EAAkBrB,GAAkBC,GAE1CqB,EAAAA,EAAAA,IAAU,KACR,GAAKjC,EAML,OAFAkC,EAAAA,EAAAA,MAEOC,EAAAA,IACN,CAACnC,IAEJ,MAAMoC,GAAcnD,EAAAA,EAAAA,GAAiBoD,KAC9Bd,IAILc,EAAEC,iBACFf,KACO,KAGTU,EAAAA,EAAAA,IAAU,IACRjC,GAASuC,EAAAA,EAAAA,GAAyB,CAAEC,MAAOnB,EAASE,QAASa,SAAiB1C,EAC7E,CAACM,EAAQqB,EAASe,KACrBH,EAAAA,EAAAA,IAAU,IAAOjC,GAAU4B,EAASa,SAAUC,EAAAA,EAAAA,GAAUd,EAASa,cAAW/C,EAAY,CAACM,EAAQ4B,KAEjGe,EAAAA,EAAAA,GAAe,CACbC,SAAU5C,EACV6C,OAAQxB,KAGVyB,EAAAA,EAAAA,GAA4B,EAAEC,MAC5BC,SAASC,KAAKC,UAAUC,OAAO,kBAAmBlD,QAAQD,KAEtDA,IAAYA,QAAyBN,IAAfqD,KACxBK,EAAAA,EAAAA,IAAoBjD,GAGf,KACL6C,SAASC,KAAKC,UAAUG,OAAO,qBAEhC,CAACrD,IAEJ,MAAMsD,GAAOC,EAAAA,EAAAA,KAEb,IAAK1B,EACH,OAkCF,MAAM2B,GAAgB/F,EAAAA,EAAAA,GACpB,QACAD,EACAsD,GAAc,uBACdL,GAAU,OACVU,GAAsB,eACtBK,GAAkB,oBAGpB,OACEjE,EAAAA,GAAAA,cAACkG,EAAAA,EAAM,KACLlG,EAAAA,GAAAA,cAAA,OACEoE,IAAKC,EACLpE,UAAWgG,EACXE,UAAW,EACXC,KAAK,UAEJnC,GACCjE,EAAAA,GAAAA,cAACqG,EAAAA,EAAmB,CAClBC,YAAa7D,EACb8D,SAAUpC,IAGdnE,EAAAA,GAAAA,cAAA,OAAKC,UAAU,mBACbD,EAAAA,GAAAA,cAAA,OAAKC,UAAU,iBAAiBuG,QAAUhD,OAA4BrB,EAAV2B,IAC5D9D,EAAAA,GAAAA,cAAA,OAAKC,UAAU,eAAemE,IAAKtB,EAAWY,MAAOC,GAxD7D,WACE,GAAIR,EACF,OAAOA,EAGT,IAAKJ,IAAU0B,EAAiB,OAChC,MAAMgC,EACJzG,EAAAA,GAAAA,cAAC0G,EAAAA,EAAM,CACLzG,WAAWC,EAAAA,EAAAA,GAAemD,GAA0B,+BACpDsD,OAAK,EACLC,MAAOtD,EACPuD,KAAK,UACLC,UAAWf,EAAK,SAChBS,QAAS1C,GAET9D,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,WAIf,OAAI2C,EACKoD,EAIPzG,EAAAA,GAAAA,cAAA,OAAKC,WAAWC,EAAAA,EAAAA,GAAe,eAAgB+C,EAAiBiB,GAAqB,2BAClFO,GAAmBgC,EACpBzG,EAAAA,GAAAA,cAAA,OAAKC,UAAU,eAAe8C,GAGpC,CA4BWiE,GACAnD,EACD7D,EAAAA,GAAAA,cAAA,OAAKC,WAAWC,EAAAA,EAAAA,GAAe,8BAA+B8C,GAAmBU,MAAOA,GACrFD,QASf,GAAewD,EAAAA,EAAAA,GAAiBpE,G,uDChNhC,SAAgB,KAAO,WAAW,KAAO,WAAW,SAAW,WAAW,oBAAsB,W,6DCAhG,MCoFA,GAAe/C,EAAAA,EAAAA,IApE4BoH,EAAGC,QAAOpG,WAAUqG,iBAC7D,MAAMC,GAAYC,EAAAA,EAAAA,MAEZC,GAAkBC,EAAAA,EAAAA,IAAQ,IAAML,EAAMM,QAAQL,GAAa,CAACD,EAAOC,IAEnEM,GAAaF,EAAAA,EAAAA,IAAQ,IAClBL,EAAMM,QAAQL,GAAYO,WAChC,CAACR,EAAOC,IAiBX,OAfAQ,EAAAA,EAAAA,IAAgB,KACd,GAAIP,EAAUnC,QAAS,CACrB,MAAM2C,EAAkBN,GAAmBJ,EAAMW,OAAS,GAAM,IAC1DC,EAAcF,EAAiB,EACrCR,EAAUnC,QAAQxB,MAAMsE,YAAY,oBAAqB,GAAGH,MAC5DR,EAAUnC,QAAQxB,MAAMsE,YAAY,iBAAkB,GAAGD,KAC3D,GACC,CAACR,EAAiBJ,IASnBnH,EAAAA,GAAAA,cAAA,OAAKC,UDzCoB,YC0CvBD,EAAAA,GAAAA,cAAA,YACEA,EAAAA,GAAAA,cAAA,OAAKC,UD3C6C,YC4ChDD,EAAAA,GAAAA,cAAA,OAAKC,UD5CwJ,YC6C1JkH,EAAMxF,IAAI,CAACsG,EAAMC,KAChB,MAAMC,EAAWD,GAASX,EAC1B,OACEvH,EAAAA,GAAAA,cAAA,OACEoI,IAAKH,EACLhI,WAAWC,EAAAA,EAAAA,GDlD4J,WCoDrKiI,EDpDyL,WAA0B,iBC0D7NnI,EAAAA,GAAAA,cAAA,OAAKC,UD1DuE,YC2DzEkH,EAAMxF,IAAKsG,GACVjI,EAAAA,GAAAA,cAAA,OACEoI,IAAKH,EACLhI,WAAWC,EAAAA,EAAAA,GD9D6E,WC8DjDkH,IAAea,GD9DsD,aCgE3GA,KAIPjI,EAAAA,GAAAA,cAAA,SACEoE,IAAKiD,EACLgB,KAAK,QACLpI,UDvEoI,WCwEpIqI,IAAI,IACJC,IAAKpB,EAAMW,OAAS,EACpB1H,MAAOsH,EACP3G,SAzCYQ,IACpB,MAAM2G,EAAQM,SAASjH,EAAMkH,OAAOrI,MAAO,IACrCsI,EAAWvB,EAAMe,GACvBnH,EAAS2H,IAuCDC,KAAK,U,gJCtDjB,MAiCA,EAjC2CC,EACzCC,UACA5I,YACA2G,QAAQ,UACRE,YACAjG,WACA2F,UACA/C,eAEA,MAAMsC,GAAOC,EAAAA,EAAAA,KAEP8C,GAAkB5I,EAAAA,EAAAA,GACtB,uBACA2I,GAAW,WACX5I,GAGF,OACED,EAAAA,GAAAA,cAAC0G,EAAAA,EAAM,CACLzG,UAAW6I,EACXlC,MAAOA,EACPD,OAAK,EACL9F,SAAUA,EACV2F,QAASqC,IAAYhI,EAAW2F,OAAUrE,EAC1C2E,UAAWA,EACXX,UAAW,EACX4C,MAAOhD,EAAKgD,OAEXtF,I,wTCfP,MAAMuF,EAAmB,IACnBpG,EAAqB,IACrBqG,EAAoB,KAAOC,EAAAA,EA4LjC,EA1LmCC,EACjCC,mBAEA,MAAMC,GAAUC,EAAAA,EAAAA,cAEVvD,GAAOwD,EAAAA,EAAAA,MAEP,QACJC,EAAO,QACPC,EAAO,OACPC,EAAM,WACNC,EAAU,aACVC,EAAY,UACZ3J,EAAS,oBACT4J,EAAmB,cACnBC,EAAa,SACbC,EAAWf,EAAgB,KAC3BgB,EAAI,oBACJC,EAAmB,kBACnBC,EAAiB,gBACjBC,EAAe,MACfpH,EAAK,kBACLqH,GACEhB,GAEG3G,EAAQ4H,IAAaC,EAAAA,EAAAA,KAAS,GAC/BC,GAAWjD,EAAAA,EAAAA,OACX,qBAAEkD,IAAyBC,EAAAA,EAAAA,GAA4BhI,GAEvDiI,GAAgBhJ,EAAAA,EAAAA,GAAgB,KACpC2H,EAAQsB,oBAAoB,CAAEnB,cAG1BoB,GAAkBlJ,EAAAA,EAAAA,GAAiBmJ,KAClCA,GAAShB,IACdQ,GAAU,GACVS,WAAWJ,EAAe9H,EAAqBmI,EAAAA,KAC3CjB,GAEFT,EAAQS,EAAcJ,QAAQI,EAAckB,YAI1CC,GAAoBvJ,EAAAA,EAAAA,GAAgB,KACpCgI,IACEwB,MAAMC,QAAQzB,GAEhBA,EAAO0B,QAASC,GAAOhC,EAAQgC,EAAG3B,QAAQ2B,EAAGL,UAG7C3B,EAAQK,EAAOA,QAAQA,EAAOsB,UAG9BnB,IACFQ,GAAU,GACVS,WAAWJ,EAAe9H,EAAqBmI,EAAAA,MAEjDH,MAGIU,GAAc5J,EAAAA,EAAAA,GAAgB,KAC9BgI,IACEwB,MAAMC,QAAQzB,GAEhBA,EAAO0B,QAASC,GAAOhC,EAAQgC,EAAG3B,QAAQ2B,EAAGL,UAG7C3B,EAAQK,EAAOA,QAAQA,EAAOsB,UAGlCJ,OAGFlG,EAAAA,EAAAA,IAAU,IAAOjC,GAAS8I,EAAAA,EAAAA,GAAsBX,QAAmBzI,EAAY,CAACM,EAAQmI,KAExFlG,EAAAA,EAAAA,IAAU,KACR6F,EAASrF,QAAUsG,OAAOV,WAAW,IAAMF,GAAgB,GAAOb,GAE3D,KACDQ,EAASrF,UACXuG,aAAalB,EAASrF,SACtBqF,EAASrF,aAAU/C,KAGtB,CAAC4H,EAAUH,IAEd,MAAM8B,GAAmBhK,EAAAA,EAAAA,GAAgB,KACnCmI,GACAU,EAASrF,UACXuG,aAAalB,EAASrF,SACtBqF,EAASrF,aAAU/C,KAIjBwJ,GAAmBjK,EAAAA,EAAAA,GAAgB,KACnCmI,IACAU,EAASrF,SACXuG,aAAalB,EAASrF,SAExBqF,EAASrF,QAAUsG,OAAOV,WAAWF,EAAiBb,MAGlD6B,GAAgBpE,EAAAA,EAAAA,IAAQ,KAC5B,GAAKzE,EACL,OAAI8I,EAAAA,EAAAA,IAAc9I,GACTgD,EAAK+F,KAAK/I,IAGZgJ,EAAAA,EAAAA,GAAWhJ,EAAO,CAAC,kBAAmB,QAAS,KAAM,WAC3D,CAACgD,EAAMhD,IAEJiJ,GAAkBxE,EAAAA,EAAAA,IAAQ,KAC1BqE,EAAAA,EAAAA,IAAcpC,GACT1D,EAAK+F,KAAKrC,GAGI,iBAAZA,GACFsC,EAAAA,EAAAA,GAAWtC,EAAS,CAAC,kBAAmB,QAAS,KAAM,UAGzDA,EACN,CAAC1D,EAAM0D,IAEJwC,GAAqBzE,EAAAA,EAAAA,IAAQ,KACjC,GAAKmC,EACL,OAAIkC,EAAAA,EAAAA,IAAclC,GACT5D,EAAK+F,KAAKnC,GAGZA,GACN,CAAC5D,EAAM4D,IAEJuC,GAAe1E,EAAAA,EAAAA,IAAQ,IACvB0C,EAEAlK,EAAAA,GAAAA,cAACmM,EAAAA,EAAW,CACVlM,UAAU,0BACVmM,aAAW,EACXvF,KAAMoC,EACNoD,WAAYnC,IAKdD,GACW,SAATD,EAEAhK,EAAAA,GAAAA,cAACsM,EAAAA,EAAQ,CAACjE,KAAK,OAAOpI,WAAWC,EAAAA,EAAAA,GAAe,qBAAsB2G,KAAK,aAI1E7G,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAMsJ,GAAQ,cAAe/J,UAAU,sBACnD,CAACiK,EAAmBF,EAAMC,IAE7B,OACEjK,EAAAA,GAAAA,cAACkG,EAAAA,EAAM,CAACjG,UAAU,yBAAyBmK,kBAAmBA,GAC5DpK,EAAAA,GAAAA,cAAA,OACEC,WAAWC,EAAAA,EAAAA,GAAe,eAAgBsK,EAAsBvK,GAChEuG,QAAS8E,EACTiB,aAAcb,EACdc,aAAcb,GAEbO,EACDlM,EAAAA,GAAAA,cAAA,OAAKC,UAAU,WACZyC,QAAQkJ,IACP5L,EAAAA,GAAAA,cAAA,OAAKC,UAAU,sBAAsB2L,GAEtCI,GAEFtJ,QAAQuJ,IACPjM,EAAAA,GAAAA,cAAC0G,EAAAA,EAAM,CACLE,MAAM,oBACNJ,QAASyE,EACThL,UAAU,uBAETgM,GAGJ9B,GACCnK,EAAAA,GAAAA,cAACyM,EAAAA,EAAU,CAACxM,UAAU,qBAAqBmI,IAAKwB,EAAcG,SAAU2C,KAAKC,KAAK5C,EAAW,U,2SC3IvG,MA6NA,EA7N+B6C,EAC7BxI,MACAyI,YACA7C,OACA8C,gBACAC,cACAjE,kBACAkE,sBACAC,gBACAC,yBACAC,eACAlN,YACAyD,QACAD,WACA5C,WACAuM,qBACAC,SACAC,SACAC,WACAC,QACAC,cACAC,mBACAC,YACAC,WACAC,iBACAC,sBACAC,iBACAC,oBACAC,OACAC,cACA1H,UACA2H,gBACAC,WACAC,uBACAC,cACAC,qBAEA,IAAIC,GAAelH,EAAAA,EAAAA,MACflD,IACFoK,EAAepK,GAEjB,MAAOqK,EAAWC,EAAeC,KAAmBC,EAAAA,EAAAA,MAE9C,kBACJC,GAAiB,kBAAEC,GAAiB,wBACpCC,GAAuB,kBAAEC,GAAiB,uBAC1CC,GAAsB,sBAAEC,KACtBC,EAAAA,EAAAA,GAAuBX,GAAeT,GAEpCqB,IAAoB1N,EAAAA,EAAAA,GAAgB,IAAM8M,EAAatJ,SACvDmK,IAAiB3N,EAAAA,EAAAA,GAAgB,IAAM8M,EAAatJ,QAASoK,QAAQ,mBACrEC,IAAiB7N,EAAAA,EAAAA,GAAgB,KAC7BsM,EAAoBvI,SAAS+J,cAAc,YAAchB,EAAatJ,SAC3EsK,cAAc,mCAEbC,IAAY/N,EAAAA,EAAAA,GAAgB,KAAM,CAAGgO,WAAY1B,KAEjD2B,IAAmBjO,EAAAA,EAAAA,GAAiBoD,IACjBA,EAAE8K,SAAW9K,EAAE+K,SAAW/K,EAAEgL,UAC5BhL,EAAEiL,SAAWC,EAAAA,GAAYC,MAC9CnL,EAAEC,mBAIAuG,IAAc5J,EAAAA,EAAAA,GAAiBoD,IACnC,KAAKjE,GAAauM,IAAwB5G,EAA1C,CAIA,GAAIyH,EAAM,CAGR,IADuBnJ,EAAE8K,SAAW9K,EAAE+K,SAAW/K,EAAEgL,WAC5BhL,EAAEiL,SAAWC,EAAAA,GAAYC,MAASnL,EAAEiL,SAAWC,EAAAA,GAAYE,UAChF,OAGFpL,EAAEC,gBACJ,CAEAyB,EAAQ1B,EAAGsJ,GAEP+B,EAAAA,KAAiB9C,IACnBqB,KACA0B,EAAAA,EAAAA,IAAezB,IAhBjB,KAqBArD,YAAa+E,GACbC,gBAAiBC,KACfC,EAAAA,EAAAA,GAAc1L,IACXjE,IAAauM,GAAoC,IAAbtI,EAAEiL,SAAkB1B,IAAyBN,IAEtFjJ,EAAE2L,kBAEEpC,EACFA,EAAqBvJ,GAErBkK,GAAkBlK,MAIhBwL,IAAkB5O,EAAAA,EAAAA,GAAiBoD,IACnCyI,GAAY4C,EAAAA,MAGZpC,GAAmBjJ,EAAEiL,SAAWC,EAAAA,GAAYU,WAAclK,GAC5DuI,GAAwBjK,GAEtBA,EAAEiL,SAAWC,EAAAA,GAAYC,OACtBzJ,EAGH8E,GAAYxG,GAFZkK,GAAkBlK,OAOlBiB,IAAOC,EAAAA,EAAAA,KAEPC,IAAgB/F,EAAAA,EAAAA,GACpB,WACAD,EACA4N,GAAkB,kBAClBR,GAAU,aACVC,GAAU,SACVzM,GAAY,WACZuM,GAAsB,gBACtBG,GAAY,WACZuB,IAAqB,gBACrBtB,GAAS,QACTC,GAAe,cACfC,GAAoB,UACpBC,GAAa,YACbC,GAAY,YACZE,GAAuB,yBAGnB6C,GAAmB1C,EAAO,IAAM,MAEtC,OACEjO,EAAAA,GAAAA,cAAA,OACEoE,IAAKoK,EACLvO,UAAWgG,GACX2K,IAAK7K,GAAKgD,MAAQ,WAAQ5G,EAC1BuB,MAAOA,EACPwK,YAAaA,EACbI,YAAaA,GAEbtO,EAAAA,GAAAA,cAAC2Q,GAAgB,CACf1Q,WAAWC,EAAAA,EAAAA,GAAe,kBAAmBuO,GAAa,SAAU3F,GACpE1C,KAAOwH,OAAsBzL,EAAX,SAClB8L,KAAMA,EACN7J,IAAKyI,EACL1G,SAAWyH,OAAezL,EAAJ,EACtBqE,SAAW+G,GAAY4C,EAAAA,GAAgB7E,GAAcqE,GACrDzB,YAAaoC,GACbnC,cAAeA,KAAoBZ,GAAYQ,EAAkBiB,QAAoB7M,KAEnFtB,IAAa0M,GAAYF,GACzBrN,EAAAA,GAAAA,cAAC6Q,EAAAA,EAAY,MAEd9D,EACA/C,GACChK,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAMsJ,EAAM/J,WAAWC,EAAAA,EAAAA,GAAe,qBAAsB4M,KAEnEa,GAAc3N,EAAAA,GAAAA,cAAA,OAAKC,UAAU,kBAAkBwD,IAC9CkK,GAAalK,EACdwJ,GACCjN,EAAAA,GAAAA,cAAC0G,EAAAA,EAAM,CACL6H,eAAgBA,EAChBtO,WAAWC,EAAAA,EAAAA,GAAe,iBAAkBgN,GAC5CvG,OAAK,EACLC,MAAM,cACNC,KAAK,UACLL,QAAS6J,GACTnC,YAAaqC,IAEbvQ,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAMuM,KAGfE,GAEFY,QAAwC5L,IAAtB2M,IACjB9O,EAAAA,GAAAA,cAAC8Q,EAAAA,EAAI,CACHrO,OAAQoM,GACRkC,OAAQjC,GACRM,kBAAmBA,GACnBC,eAAgBA,GAChBE,eAAgBA,GAChBE,UAAWA,GACXxP,UAAU,8CACV+Q,WAAS,EACTlN,QAASmL,GACTlL,oBAAqBmL,GACrBQ,WAAY1B,EACZiD,gBAAiBjE,GAEhBe,EAAepM,IAAK+H,GAClB,gBAAiBA,EAChB1J,EAAAA,GAAAA,cAACkR,EAAAA,EAAa,CAAC9I,IAAKsB,EAAOtB,KAAO,cAElCpI,EAAAA,GAAAA,cAACmR,EAAAA,EAAQ,CACP/I,IAAKsB,EAAO3G,MACZiH,KAAMN,EAAOM,KACbyD,YAAa/D,EAAO+D,YACpB5M,UAAW6I,EAAO0H,QAClB5K,QAASkD,EAAO0H,SAEhBpR,EAAAA,GAAAA,cAAA,QAAMC,UAAU,uBACb8L,EAAAA,EAAAA,GAAWrC,EAAO3G,a,gNC9PrC,MAAMsO,EAA0B,GAE1BC,EAAkBC,EAAAA,GAAS,IAAMC,EAAAA,GAAa,IAAM,IAEpDC,EAAwBA,EAC5BC,OAAMC,YAAWC,cACjBC,6BAA4B5R,YAAW6R,mBAEvC,MAAMtD,GAAelH,EAAAA,EAAAA,MACfyK,GAAoBC,EAAAA,EAAAA,GAAsBL,IAEhDM,EAAAA,EAAAA,GAAoBzD,OAAcrM,GAAW,IAG7CuC,EAAAA,EAAAA,IAAU,KACR,MAAMwN,EAAY1D,EAAatJ,SACzB,YAAEiN,EAAW,YAAEC,EAAW,WAAEC,GAAeH,EACjD,GAAIC,GAAeC,EACjB,OAGF,MAAME,EAAmBJ,EAAUK,WAAWZ,GAC9C,IAAKW,EACH,OAGF,MAAQE,WAAYC,EAAqBL,YAAaM,GAAyBJ,EACzEK,EAAUF,EAAuBL,EAAc,EAAMM,EAAuB,EAG9EhG,KAAKkG,IAAID,EAAUN,GAAchB,IAIrCwB,EAAAA,EAAAA,GAAwBX,EAAWS,EAASrB,IAC3C,CAACK,IAEJ,MAAM5L,GAAOC,EAAAA,EAAAA,KAEb,OACEhG,EAAAA,GAAAA,cAAA,OACEC,WAAWC,EAAAA,EAAAA,GAAe,UAAW,eAAgBD,GACrDmE,IAAKoK,EACLoC,IAAK7K,EAAKgD,MAAQ,WAAQ5G,GAEzBuP,EAAK/P,IAAI,CAACmR,EAAKC,IACd/S,EAAAA,GAAAA,cAACgT,EAAAA,EAAG,CACF5K,IAAK0K,EAAIrS,GACTsC,MAAO+P,EAAI/P,MACXsC,SAAU0N,IAAMpB,EAChBsB,UAAWH,EAAIG,UACfC,WAAYJ,EAAII,WAChBC,cAAeL,EAAIK,cACnBpB,kBAAmBA,EACnBvL,QAASoL,EACTxD,SAAU2E,EACVhF,eAAgB+E,EAAI/E,eACpB8D,2BAA4BA,EAC5B5R,UAAW6R,OAOrB,GAAehS,EAAAA,EAAAA,IAAK2R,G,qKCpEpB,MAAM5P,EAAsBA,EAC1BpB,KACAqB,QACAV,WACAH,oBACAb,QACAM,OACAqB,UACAlB,WACAmB,SACAE,YACAjC,YACAmT,YACAjS,WACAD,SACAH,WACAU,kBACAQ,6BAEA,MAAM8D,GAAOC,EAAAA,EAAAA,KAEPC,GAAgB/F,EAAAA,EAAAA,GACpB,QACAD,EACAY,GAAY,WACZmB,GAAU,gBACVb,GAAY,YACZe,GAAa,UACbkR,GAAa,YACb1Q,QAAQtB,IAAa,eACrBa,GAA0B,wBAG5B,OACEjC,EAAAA,GAAAA,cAAA,SAAOC,UAAWgG,EAAe2K,IAAK7K,EAAKgD,MAAQ,WAAQ5G,GACzDnC,EAAAA,GAAAA,cAAA,SACEqI,KAAK,QACL3H,KAAMA,EACNN,MAAOA,EACPK,GAAIA,EACJsB,QAASA,EACThB,SAAUA,EACVF,SAAUA,GAAYmB,IAExBhC,EAAAA,GAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,GAAAA,cAAA,QAAMC,UAAU,QAAQ2Q,IAAK7K,EAAKgD,MAAQ,YAAS5G,GAAYL,GAC9DY,QAAQtB,IACPpB,EAAAA,GAAAA,cAAA,QACEC,WAAWC,EAAAA,EAAAA,GAAee,EAAmB,WAAYC,EAAS,oBAAiBiB,GACnFyO,IAAK7K,EAAKgD,MAAQ,YAAS5G,EAC3BqE,QAAStF,EAASO,OAAkBU,GAEnCf,IAINc,GAAalC,EAAAA,GAAAA,cAACqT,EAAAA,EAAO,QAK5B,GAAevT,EAAAA,EAAAA,IAAK+B,G,4FCzEpB,MA8CA,EA9CqCU,EACnCE,SACA6Q,WACAC,WACA9S,KACAR,YACAuG,UACA/C,WACA+P,oBACAC,2BACA/P,QACAU,IAAKsP,MAEL,MAAMlO,GAAawM,EAAAA,EAAAA,GAAsBvP,GACnCkR,GAAe3B,EAAAA,EAAAA,GAAsBvO,GACrCmQ,GAAkBtM,EAAAA,EAAAA,MAClBuM,OAA+B1R,IAAfqD,GAEhB,IAAEpB,EAAG,aAAEE,IAAiBC,EAAAA,EAAAA,GAAkB,CAC9C9B,OAAQA,IAAW6Q,EACnBlP,IAAKsP,EACLI,kBAAmBD,IAAkBJ,EACrCxT,WAAWsT,QAAmBpR,EAC9BqR,oBACAhP,kBAAkB,IAOpB,OAJIgB,IAAe/C,IACjBmR,EAAgB1O,QAAUyO,IAIzBrP,GAAgBgP,IACftT,EAAAA,GAAAA,cAAA,OACES,GAAIA,EACJ2D,IAAKA,EACLnE,UAAWA,EACXuG,QAASA,EACT9C,MAAOA,GAENjB,EAASgB,EAAWmQ,EAAgB1O,S,mPCxB7C,MAAM6O,EAAa,CACjBC,OAAQ,cACRC,YAAa,sBAkJf,EA/I0BjB,EACxB/S,YACA8C,QACAsC,WACA4N,YACAC,aACAC,gBACApB,oBACAvL,UACA4H,WACAL,iBACA8D,iCAEA,MAAMqC,GAAS5M,EAAAA,EAAAA,OAEfM,EAAAA,EAAAA,IAAgB,KAEVvC,QAAkClD,IAAtB4P,GAAmCmC,EAAOhP,SACxDgP,EAAOhP,QAAQS,UAAUwO,IAAIJ,EAAWC,SAEzC,CAAC3O,EAAU0M,KAEdrN,EAAAA,EAAAA,IAAU,KACR,IAAKW,QAAkClD,IAAtB4P,EACf,OAGF,MAAMqC,EAAQF,EAAOhP,QACfmP,EAAYD,EAAME,cAAe7Q,SAASsO,GAChD,IAAKsC,EAOH,YALIhP,IAAa+O,EAAMzO,UAAU4O,SAASR,EAAWC,UACnDQ,EAAAA,EAAAA,IAAgB,KACdJ,EAAMzO,UAAUwO,IAAIJ,EAAWC,WAMrC,MAAMS,EAAaL,EAAM5E,cAA2B,aAC9CkF,EAAiBL,EAAU7E,cAA2B,aAGtDmF,EAAYD,EAAeJ,cAAe9B,WAAaiC,EAAWH,cAAe9B,WACjFoC,EAAcF,EAAeG,YAAcJ,EAAWI,aAE5DL,EAAAA,EAAAA,IAAgB,KACdE,EAAe/O,UAAUG,OAAO,WAChC2O,EAAW9O,UAAUG,OAAO,WAC5B2O,EAAW/Q,MAAMoR,UAAY,eAAeH,sBAA8BC,YAE1EG,EAAAA,EAAAA,IAAoB,MAClBC,EAAAA,EAAAA,GAAYP,GAEL,KACLA,EAAW9O,UAAUwO,IAAI,WACzBM,EAAW/Q,MAAMoR,UAAY,OAE7BT,EAAU1O,UAAUG,OAAOiO,EAAWC,QACtCI,EAAMzO,UAAUwO,IAAIJ,EAAWC,cAIpC,CAAC3O,EAAU0M,IAEd,MAAM,kBACJjD,EAAiB,kBAAEE,EAAiB,wBAAED,EAAuB,uBAAEE,EAAsB,sBACrFC,EAAqB,kBAAEL,IACrBM,EAAAA,EAAAA,GAAuB+E,GAASnG,IAE9B,YAAEzC,EAAW,gBAAEgF,IAAoBE,EAAAA,EAAAA,GAAc1L,KACjDiJ,GAAmBjJ,EAAEiL,SAAWC,EAAAA,GAAYU,WAAclK,GAC5DuI,EAAwBjK,GAGX,cAAXA,EAAEuD,MAAwBvD,EAAEiL,SAAWC,EAAAA,GAAYC,MAIvDzJ,IAAU4H,KAGNgB,GAAoB1N,EAAAA,EAAAA,GAAgB,IAAMwS,EAAOhP,SACjDmK,GAAiB3N,EAAAA,EAAAA,GACrB,IAAOmQ,EAA6BqC,EAAOhP,QAASoK,QAAQuC,GAA8BpM,SAASC,MAE/F6J,GAAiB7N,EAAAA,EAAAA,GACrB,IAAM+D,SAAS+J,cAAc,YAAaA,cAAc,8BAEpDC,GAAY/N,EAAAA,EAAAA,GAAgB,KAAM,CAAGgO,YAAY,KAEvD,OACE1P,EAAAA,GAAAA,cAAA,OACEC,WAAWC,EAAAA,EAAAA,GAAe,MAAOsG,GAAW,mBAAoBvG,GAChEuG,QAAS8E,EACT4C,YAAaoC,EACbnC,cAAea,EACf5K,IAAK8P,GAELlU,EAAAA,GAAAA,cAAA,QAAMC,UAAU,aACI,iBAAV8C,GAAqBgJ,EAAAA,EAAAA,GAAWhJ,GAASA,EAChDL,QAAQwQ,IACPlT,EAAAA,GAAAA,cAAA,QAAMC,WAAWC,EAAAA,EAAAA,GAAe,QAASiT,GAAiBY,EAAWE,cAAef,GAErFD,GAAajT,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,aAAaT,UAAU,YAChDD,EAAAA,GAAAA,cAAA,KAAGC,UAAU,cAGd8N,QAAwC5L,IAAtB2M,GACjB9O,EAAAA,GAAAA,cAAC8Q,EAAAA,EAAI,CACHrO,OAAQoM,EACRkC,OAAQjC,EACRM,kBAAmBA,EACnBC,eAAgBA,EAChBE,eAAgBA,EAChBE,UAAWA,EACXxP,UAAU,mBACV+Q,WAAS,EACTlN,QAASmL,EACTlL,oBAAqBmL,EACrBQ,YAAU,GAET3B,EAAepM,IAAK+H,GAClB,gBAAiBA,EAChB1J,EAAAA,GAAAA,cAACkR,EAAAA,EAAa,CAAC9I,IAAKsB,EAAOtB,KAAO,cAElCpI,EAAAA,GAAAA,cAACmR,EAAAA,EAAQ,CACP/I,IAAKsB,EAAO3G,MACZiH,KAAMN,EAAOM,KACbyD,YAAa/D,EAAO+D,YACpB5M,UAAW6I,EAAO0H,QAClB5K,QAASkD,EAAO0H,SAEf1H,EAAO3G,W,mJC/JxB,MAAMkS,EAAQ,CACZC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,GAAI,IAKrBC,EAAe,IAyHrB,GAAexV,EAAAA,EAAAA,IA3GVyV,EACHC,WAAW,EACX3O,OAAO,IACP4O,SACAC,cACAC,UACAC,iBACAC,YACArP,cAEA,MAAMsP,GAAYxO,EAAAA,EAAAA,MACZyO,EAAQd,EAAMpO,GACdmP,GAAcC,EAAAA,EAAAA,GAAYT,GAE1BU,GAAMC,EAAAA,EAAAA,KAENvP,GAAQwP,EAAAA,EAAAA,GAAwBN,OAAW3T,GAAY0T,IAE7DnR,EAAAA,EAAAA,IAAU,KACR,IAEI2R,EACAC,EAHAC,GAAU,EACVC,EAAWlB,GAIfmB,EAAAA,EAAAA,IAAQ,KACN,IAAKX,EAAU5Q,QACb,OAAO,EAGL8Q,EAAY9Q,UAAYoR,IAC1BE,EAAW9J,KAAKpE,IAAIoE,KAAKnE,IAAI+M,EAAcgB,GAAgB,GA3C9C,GA4CbD,EAAgBK,KAAKC,MACrBL,EAAeN,EAAY9Q,SAG7B,MAAM0R,EAAiBlK,KAAKpE,IAAIoE,KAAKnE,IAAI+M,EAAcU,EAAY9Q,SAhDpD,GAiDT2R,EAAInK,KAAKpE,IAAI,GAAIoO,KAAKC,MAAQN,GAhDpB,KAiDVS,EAAkBC,EAAAA,GAAgBC,YAAYH,GAC9CI,EAAkBT,GAAYI,EAAiBJ,GAAYM,EAejE,OAsBN,SACEI,EACArQ,EACAsQ,EACAvQ,EACA4O,EACAU,EACAkB,GAAa,EACbxB,GAEA,MAAMyB,EAAmBxQ,EAAO,EAC1ByQ,GAAUzQ,EAAOsQ,GAAe,EArGxB,EAqGsCjB,EAC9CqB,EAAS3B,GAAmBc,KAAKC,MAlGjB,QAmGhBa,EAAc,EAAI9K,KAAK+K,GAAMF,EAC7BG,EAAWF,EAAc,EAAI9K,KAAK+K,GAAMjC,EACxCmC,EAAMT,EAAOU,WAAW,MAE1BR,IACFF,EAAOnB,MAAQlP,EACfqQ,EAAOW,OAAShR,EAEhB8Q,EAAIG,QAAU,QACdH,EAAII,YAAcnR,EAClB+Q,EAAIK,UAAYb,GAGlBQ,EAAIM,UAAU,EAAG,EAAGpR,EAAMA,GAC1B8Q,EAAIO,YACJP,EAAIQ,IAAId,EAAkBA,EAAkBC,EAAQE,EAAYE,GAChEC,EAAIS,QACN,CAjEMC,CACEvC,EAAU5Q,QACV6Q,EAAQG,GACE,OAATrP,EA3De,EADH,GA4DsCqP,EACnDtP,GAAS,QACTqQ,EACAf,EACAK,EACAX,GAGFW,GAAU,EAEHU,EAAkB,GACxBzC,EAAAA,KACF,CAACwB,EAAanP,EAAMkP,EAAOG,EAAKN,EAAgBhP,IAEnD,MAAM3G,GAAYC,EAAAA,EAAAA,GAChB,wBAAwB2G,IACxB6O,GAAe,cACfD,GAAU,SACVE,GAAW,YAGb,OACE3V,EAAAA,GAAAA,cAAA,OACEC,UAAWA,EACXuG,QAASA,IAEPmP,GAAW3V,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,UACxBV,EAAAA,GAAAA,cAAA,UAAQoE,IAAK0R,EAAW7V,UAAU,yBAAyByD,MAAO,UAAUqS,cAAkBA,W,iOCpDpG,MAAMuC,EAA4BA,EAChClU,MACAX,WACA8U,sBACAnY,QACAoY,UACAvY,YACAwY,UACAvW,aAAY,EACZwW,eACAC,yBACAC,cACA/X,WACAgY,eACAC,WACAC,kBACAC,cACAC,gBACAC,4BACAC,eACApY,WACAqY,mBACAC,UACAC,UACAC,SACA/S,UACAgT,YACAC,cACAC,iBACA1V,cAEA,IAAI2V,GAAWrS,EAAAA,EAAAA,MACXlD,IACFuV,EAAWvV,GAGb,MAAOwV,EAAgBC,EAAkBC,IAAsBlL,EAAAA,EAAAA,GAAQ6J,IAEvEsB,EAAAA,EAAAA,GAAoBJ,EAAUZ,EAAiBe,IAE/CpV,EAAAA,EAAAA,IAAU,KACHiV,EAASzU,UAIVuT,EACFkB,EAASzU,QAAQsI,QAEjBmM,EAASzU,QAAQ8U,SAElB,CAACvB,EAASG,IAEb,MAAMqB,GAAUjU,EAAAA,EAAAA,KACVD,GAAOwD,EAAAA,EAAAA,KAWb,SAAS2Q,IACPL,IACAP,KACF,CAOA,MAAMa,GAAgBzY,EAAAA,EAAAA,GAAiBoD,IACrC,GAAc,UAAVA,EAAEsD,IAAiB,CACrB,GAAIpE,EAGF,OAFAc,EAAEC,sBACFf,IAIF,GAAIuU,EAAqB,CACvB,MAAM6B,EAAU3U,SAAS+J,cAAc+I,GACnC6B,GACFA,EAAQ5M,OAEZ,CACF,CAEA,GAAI+K,GAAiC,cAAVzT,EAAEsD,IAAqB,CAChD,MAAMgS,EAAU3U,SAAS+J,cAAc+I,GACnC6B,GACFA,EAAQ5M,OAEZ,CAEc,cAAV1I,EAAEsD,KAA0D,IAAnCtD,EAAEtD,cAAc6Y,gBAAyD,IAAjCvV,EAAEtD,cAAc8Y,cACnFlB,QAIJ,OACEpZ,EAAAA,GAAAA,cAAA,OACEC,WAAWC,EAAAA,EAAAA,GAAe,cAAeD,EAAW2Z,GAAkB,aACtEpT,QAASA,EACToK,IAAKqJ,EAAQlR,MAAQ,WAAQ5G,GAE7BnC,EAAAA,GAAAA,cAACua,EAAAA,GAAU,CACT7Z,KAAK,OACL8Z,eAAa,EACbC,UAAWC,QAAQxY,IAAciX,GACjClZ,UAAU,sBACV0a,eAAe,wBAEdzY,IAAciX,EACbnZ,EAAAA,GAAAA,cAAC4a,EAAAA,EAAO,CAAChU,MAAO8R,EAAcmC,gBAAiBlC,EAAwBnS,QAASkT,IAC9EP,EACFnZ,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,aAAaT,UAAU,YAAYuG,QAAS6S,IAEvDrZ,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,SAAST,UAAU,iBAGlCD,EAAAA,GAAAA,cAAA,WAAMyD,GACNzD,EAAAA,GAAAA,cAAA,SACEoE,IAAKuV,EACLlZ,GAAI+X,EACJnQ,KAAK,OACLuI,IAAI,OACJgI,YAAaA,GAAeqB,EAAQ,UACpCha,UAAU,eACVG,MAAOA,EACPS,SAAUA,EACVgY,aAAcA,EACd9X,SA/EN,SAAsBQ,GACpB,MAAM,cAAEC,GAAkBD,EAC1BR,EAASS,EAAcpB,OAElBwZ,GACHM,GAEJ,EAyEMZ,QAASY,EACTX,OAnEN,WACEO,IACAP,KACF,EAiEMuB,UAAWX,EACXjB,0BAA2BA,IAE5BF,GACChZ,EAAAA,GAAAA,cAAC0G,EAAAA,EAAM,CACLC,OAAK,EACLE,KAAK,OACLD,MAAM,cACNJ,QAASgT,EACT3Y,UAAW2Y,EACX1S,UAAWf,EAAK,0BAEhB/F,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,QAGduY,GACCjZ,EAAAA,GAAAA,cAAC0G,EAAAA,EAAM,CACLC,OAAK,EACLE,KAAK,OACLD,MAAM,cACNJ,QAASiT,EACT5Y,UAAW4Y,EACX3S,UAAWf,EAAK,0BAEhB/F,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,UAGfV,EAAAA,GAAAA,cAACua,EAAAA,GAAU,CACT7Z,KAAK,OACL8Z,eAAa,EACbC,UAAWC,OAAOxY,GAClBjC,UAAU,uBACV0a,eAAe,wBAEdxB,GAAgBjX,EACflC,EAAAA,GAAAA,cAAC4a,EAAAA,EAAO,CAAChU,MAAO8R,EAAcmC,gBAAiBlC,EAAwBnS,QAASkT,KAE/EtZ,GAAS0Y,IAAaO,GACrBrZ,EAAAA,GAAAA,cAAC0G,EAAAA,EAAM,CACLC,OAAK,EACLE,KAAK,OACLD,MAAM,cACNJ,QAAS6S,GAETrZ,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,cASzB,GAAeZ,EAAAA,EAAAA,IAAKwY,G,uDCnPpB,SAAgB,MAAQ,W,iJCqBxB,MAAMyC,EAA+BA,EACnChY,QAAQ,8BACRlC,WACAma,aACAC,uBACAla,eAEA,MAAOma,EAAcC,IAAmB7Q,EAAAA,EAAAA,OACjC8Q,EAAgBC,IAAqB/Q,EAAAA,EAAAA,IAA6B2Q,IAEzEvW,EAAAA,EAAAA,IAAU,KACR2W,EAAkBJ,IACjB,CAACA,IAaJ,MAAMK,GAAmBha,EAAAA,EAAAA,IAAaia,IACpCJ,OAAgBhZ,GAChBpB,EAASwa,GAELH,GAAkBA,IAAmBH,GACvCO,IAAIC,gBAAgBL,GAEtBC,EAAkBG,IAAIE,gBAAgBH,KACrC,CAACH,EAAgBH,EAAsBla,IAEpC4a,GAAmBra,EAAAA,EAAAA,IAAY,KACnC6Z,OAAgBhZ,IACf,IAEGyZ,GAAiB1b,EAAAA,EAAAA,GACrBkb,GAAkB,SAClBva,GAAY,WACZma,GAAc,kBAGhB,OACEhb,EAAAA,GAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,GAAAA,cAAA,SACEC,UAAW2b,EACXxV,KAAK,SACLD,SAAU,EACVpD,MAAOA,GAEP/C,EAAAA,GAAAA,cAAA,SACEqI,KAAK,OACLtH,SAzCR,SAA0BQ,GACxB,MAAMkH,EAASlH,EAAMkH,OAEhBA,GAAQoT,QAAQ,KAIrBV,EAAgB1S,EAAOoT,MAAM,IAC7BpT,EAAOrI,MAAQ,GACjB,EAiCQ0b,OAAO,0BAET9b,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,eACV0a,GAAkBpb,EAAAA,GAAAA,cAAA,OAAK+b,IAAKX,EAAgBY,WAAW,EAAOC,IAAI,YAErEjc,EAAAA,GAAAA,cAACkc,EAAAA,EAAS,CAACC,KAAMjB,EAAcpX,QAAS6X,EAAkB5a,SAAUua,MAK1E,GAAexb,EAAAA,EAAAA,IAAKib,G,qKCzEpB,MAAMqB,EAA6BA,EACjCrb,WACA4Y,eAEA,MAAOuB,EAAcC,IAAmB7Q,EAAAA,EAAAA,MAElCgR,GAAmBha,EAAAA,EAAAA,IAAaia,IACpCJ,OAAgBhZ,GAChBpB,EAASwa,IACR,CAACxa,IAEE4a,GAAmBra,EAAAA,EAAAA,IAAY,KACnC6Z,OAAgBhZ,IACf,IAEGmJ,GAAchK,EAAAA,EAAAA,IAAY,MAC9B+a,EAAAA,EAAAA,GAAsB,wBAA0B9a,IAC9C,MAAMkH,EAASlH,EAAMkH,OAChBA,GAAQoT,QAAQ,IAGrBV,EAAgB1S,EAAOoT,MAAM,MAC5B,IACF,IAEH,OACE7b,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,SAAOoE,IAAKuV,EAAU1Z,UAAWE,EAAAA,EAAOmc,MAAO9V,QAAS8E,IACxDtL,EAAAA,GAAAA,cAACkc,EAAAA,EAAS,CAACC,KAAMjB,EAAcpX,QAAS6X,EAAkB5a,SAAUua,MAK1E,GAAexb,EAAAA,EAAAA,IAAKsc,G,kJCLpB,MA0PA,EAtPqCG,EACnCnY,MACAV,QACAzD,YACAuc,QACAC,eAT4B,YAU5BC,mBATgC,GAUhCC,gBAT6B,IAU7BC,0BACAC,YAEAC,mBAAkB,EAClBC,wBAAuB,EACvBC,aAEAC,cACAC,iBACAzZ,WACA0Z,yBACAC,aACAC,WACAC,UACA9W,UACAsU,YACAyC,aACAC,kBAEA,IAAIhP,GAAelH,EAAAA,EAAAA,MACflD,IACFoK,EAAepK,GAGjB,MAAMqZ,GAAWnW,EAAAA,EAAAA,IAKd,CAAC,IAEGoW,EAAmBC,IAAoBnW,EAAAA,EAAAA,IAAQ,IAC/C4V,EAIE,EACLQ,EAAAA,EAAAA,IAAS,CAACC,GAAW,KACnBT,EAAW,CAAEU,UAAWC,EAAAA,GAAkBC,UAAWH,cACpD,KAAM,GAAM,IACfD,EAAAA,EAAAA,IAAS,KACPR,EAAW,CAAEU,UAAWC,EAAAA,GAAkBE,YACzC,KAAM,GAAM,IATR,GAYR,CAACb,EAAYZ,KAGhB9X,EAAAA,EAAAA,IAAU,KACR,MAAMwZ,EAAkBf,EACpB3O,EAAatJ,QAASoK,QAAwB6N,GAC9C3O,EAAatJ,QACjB,IAAKwY,IAAsBQ,EACzB,OAGF,GAAIxB,EAAmB,KAAOF,GAASA,EAAM1U,OAAS4U,GAEpD,YADAgB,GAAkB,GAIpB,MAAM,aAAES,EAAY,aAAEC,GAAiBF,EACnCE,GAAgBD,EAAeC,GACjCV,KAED,CAAClB,EAAOkB,EAAmBhB,EAAkBS,KAGhDvV,EAAAA,EAAAA,IAAgB,KACd,MAAMsW,EAAkBf,EACpB3O,EAAatJ,QAASoK,QAAwB6N,GAC9C3O,EAAatJ,QAEXgN,EAAY1D,EAAatJ,SAE/B6P,EAAAA,EAAAA,IAAoB,KAClB,MAAMsJ,EAAQZ,EAASvY,QAIvB,IAAIoZ,EAEJ,GAJAD,EAAME,iBAAmBrM,EAAUsM,iBAAiC/B,GAIhE4B,EAAMI,eAAiBvT,MAAMwT,KAAKL,EAAME,kBAAkBI,SAASN,EAAMI,eAAgB,CAC3F,MAAM,UAAEG,GAAcV,EAChBW,EAAeR,EAAMI,cAAcK,wBAAwBC,IACjET,EAAeM,GAAaC,EAAeR,EAAMW,iBACnD,KAAO,CACL,MAAMC,EAAaZ,EAAME,iBAAiB,GACtCU,IACFZ,EAAMI,cAAgBQ,EACtBZ,EAAMW,iBAAmBC,EAAWH,wBAAwBC,IAEhE,CAEA,GAAInC,GAA2BE,EAC7B,OAGF,MAAM,UAAE8B,GAAcV,EACtB,OAAInB,GAAsC,IAAd6B,OAA5B,EAIO,MACLM,EAAAA,EAAAA,GAAYhB,EAAiBI,GAE7BD,EAAMc,wBAAyB,MAGlC,CACD3C,EAAOC,EAAcK,EAAiBC,EAAsBE,EAAaL,EACzEO,IAGF,MAAMiC,GAAe1d,EAAAA,EAAAA,GAAiBoD,IACpC,GAAI6Y,GAAoBD,EAAmB,CACzC,MAAM,uBACJyB,EAAsB,cAAEV,EAAa,iBAAEO,GACrCvB,EAASvY,QACPqZ,EAAmBd,EAASvY,QAAQqZ,iBAE1C,GAAIY,EAEF,YADA1B,EAASvY,QAAQia,wBAAyB,GAI5C,MAAME,EAAad,EAAiBzW,OAC9BoW,EAAkBf,EACpB3O,EAAatJ,QAASoK,QAAwB6N,GAC9C3O,EAAatJ,SACX,UAAE0Z,EAAS,aAAET,EAAY,aAAEmB,GAAiBpB,EAE5CqB,EAAYX,IADNS,EAAad,EAAiB,GAAGiB,UAAY,GACpB7C,EAI/B8C,GAHSJ,EACXd,EAAiBc,EAAa,GAAGG,UAAYjB,EAAiBc,EAAa,GAAGC,aAC9EnB,IAC2BS,EAAYU,IAAiB3C,EAC5D,IAAI+C,GAAY,EAEhB,GAAIH,EAAW,CACb,MAAMN,EAAaV,EAAiB,GACpC,GAAIU,EAAY,CACd,MAAMU,EAAgBV,EAAWH,wBAAwBC,IACnDF,EAAeJ,GAAemB,cAAgBnB,IAAkBQ,EAClER,EAAcK,wBAAwBC,IACtCY,EAEFlB,QAAsCtc,IAArB6c,GAAkCH,EAAeG,IAIlEvB,EAASvY,QAAQuZ,cAAgBQ,EACjCxB,EAASvY,QAAQ8Z,iBAAmBW,EACpCD,GAAY,EACZ/B,IAEJ,CACF,CAEA,GAAI8B,EAAc,CAChB,MAAMR,EAAaV,EAAiBc,EAAa,GACjD,GAAIJ,EAAY,CACd,MAAMU,EAAgBV,EAAWH,wBAAwBC,IACnDF,EAAeJ,GAAemB,cAAgBnB,IAAkBQ,EAClER,EAAcK,wBAAwBC,IACtCY,EAEFlB,QAAsCtc,IAArB6c,GAAkCH,EAAeG,IAIlEvB,EAASvY,QAAQuZ,cAAgBQ,EACjCxB,EAASvY,QAAQ8Z,iBAAmBW,EACpCD,GAAY,EACZhC,IAEJ,CACF,CAEA,IAAKgC,EACH,GAAIjB,GAAemB,aACjBnC,EAASvY,QAAQ8Z,iBAAmBP,EAAcK,wBAAwBC,QACrE,CACL,MAAME,EAAaV,EAAiB,GAEhCU,IACFxB,EAASvY,QAAQuZ,cAAgBQ,EACjCxB,EAASvY,QAAQ8Z,iBAAmBC,EAAWH,wBAAwBC,IAE3E,CAEJ,CAEI1B,GACFA,EAASvY,KAmBb,OAfA8C,EAAAA,EAAAA,IAAgB,KACd,MAAMsW,EAAkBf,EACpB3O,EAAatJ,QAASoK,QAAwB6N,GAC9C3O,EAAatJ,QACjB,IAAKgZ,EAAiB,OAEtB,MAAM2B,EAAsB/a,GAAasa,EAAata,GAItD,OAFAoZ,EAAgB4B,iBAAiB,SAAUD,GAEpC,KACL3B,EAAgB6B,oBAAoB,SAAUF,KAE/C,CAACT,EAAcjC,IAGhBnd,EAAAA,GAAAA,cAAA,OACEoE,IAAKoK,EACLvO,UAAWA,EACXqd,QAASA,EACT0C,eAAgBhD,IAAeJ,EAC/B9B,UAAWA,EACXyC,WAAYA,EACZC,YAAaA,EACbhX,QAASA,EACT9C,MAAOA,GAENwZ,EACAN,GAA2BJ,GAAO1U,OACjC9H,EAAAA,GAAAA,cAAA,OACEggB,eAAgBhD,EAChBtZ,OAAOuc,EAAAA,EAAAA,GAAW,qBAAsBzO,EAAAA,IAAc,WAAWqL,QAEhEpZ,GAEDA,G,mCC/RV,SAAgB,KAAO,WAAW,QAAU,WAAW,UAAY,W,wECiBnE,MAqBA,EArB+Byc,EAC7BC,UAAU,cACVC,YAAY,OACZrK,QACA8B,SACAwI,mBACAC,SACArgB,gBAEA,MAAM8T,GAAa7T,EAAAA,EAAAA,GAAe,WAAYigB,EAASC,EAAWngB,EAAWqgB,GAAU,UACjFC,EAAexK,GAAS8B,EAAU,iBAAiB9B,KAAS8B,SAAW1V,EACvEuB,GAAQuc,EAAAA,EAAAA,GACZI,GAAoBE,EACpB7d,QAAQqT,IAAU,UAAUA,OAC3BsK,GAAoB3d,QAAQmV,IAAW,WAAWA,OAErD,OACE7X,EAAAA,GAAAA,cAAA,OAAKC,UAAW8T,EAAYrQ,MAAOA,GAAQ4c,GAAU,K,gJCjBzD,MA+BA,EA/BqCE,EACnCC,QACAC,WACAC,iBACAze,YACAsE,cAEA,MAAMT,GAAOC,EAAAA,EAAAA,KAEb,OACEhG,EAAAA,GAAAA,cAAC0G,EAAAA,EAAM,CACLzG,UAAU,iBACV2G,MAAM,cACNC,KAAK,UACL+Z,QAAM,EACN1e,UAAWA,EACX6G,MAAOhD,EAAKgD,MACZvC,QAASA,GAETxG,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,SAAS,OAEnB,IACA+f,EACA,IAAI,OAEJ,IACAA,EAAQ,EAAIE,GAAkB,GAAGD,KAAcA,I,iFC3CtD,SAAgB,KAAO,WAAW,KAAO,WAAW,MAAQ,YCiB5D,EANoCxP,EAAGjR,YAAW4G,OAAO,UAErD7G,EAAAA,GAAAA,cAAA,OAAKC,WAAWC,EAAAA,EAAAA,GAAeC,EAAOE,KAAMF,EAAO0G,GAAO5G,I,+LCK9D,MAAM4gB,EAAmB,IAEnBC,EAA0BA,EAAGC,UAASC,SAAQC,YAClD,MAAMlb,GAAOwD,EAAAA,EAAAA,KACP0Q,GAAUjU,EAAAA,EAAAA,KACVkb,GAAcC,EAAAA,EAAAA,KAEdC,GAAaC,EAAAA,EAAAA,MACbhc,EAAW+b,EAAaJ,EAS9B,IARAM,EAAAA,EAAAA,GAAYJ,EAAa7b,EAAWwb,OAAmB1e,IAEvDuC,EAAAA,EAAAA,IAAU,KACHW,GACH4b,OAED,CAAC5b,EAAU4b,KAET5b,EAAU,OAEf,MAAMkc,EAAWP,EAASI,EACpBI,GAAOC,EAAAA,EAAAA,IAAoBF,GAE3BG,EAAYF,EAAKG,MAAM,KACvBC,EACJ5hB,EAAAA,GAAAA,cAAA,QAAM0D,MAAM,uCACTge,EAAU/f,IAAI,CAACkgB,EAAM3Z,IACpBlI,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACGkI,EAAQ,GAAK,IACdlI,EAAAA,GAAAA,cAAC2C,EAAAA,EAAe,CAACyF,IAAKF,EAAO7F,KAAMwf,OAQ3C,MAF+B,iCAAZd,EAIf/gB,EAAAA,GAAAA,cAAA,YACG+F,EAAKgb,EAAS,CAAES,KAAMI,GAAe,CAAEE,WAAW,KAMvD9hB,EAAAA,GAAAA,cAAA,YACGia,EAAQ8G,EAASS,KAKxB,GAAe1hB,EAAAA,EAAAA,IAAKghB,G,iFChDpB,MA6CA,GAAehhB,EAAAA,EAAAA,IA7CgBiiB,EAC7BthB,KACAC,OACAN,QACA0B,QACAC,WAAU,EACVlB,WACA0M,WACAyU,cACAjhB,WACAkhB,cAEA,MAAM5gB,GAAeC,EAAAA,EAAAA,IAAawD,IAC5B/D,GACFA,EAAS+D,GAGPmd,GACFA,EAAQnd,EAAEtD,cAAcO,UAEzB,CAAChB,EAAUkhB,IAERhiB,GAAYC,EAAAA,EAAAA,GAChB,WACAW,GAAY,WACZ0M,GAAY,WACZyU,GAAe,gBAGjB,OACEhiB,EAAAA,GAAAA,cAAA,SAAOC,UAAWA,EAAW8C,MAAOjB,GAClC9B,EAAAA,GAAAA,cAAA,SACEqI,KAAK,WACL5H,GAAIA,EACJC,KAAMA,EACNN,MAAOA,EACP2B,QAASA,EACTlB,SAAUA,EACVE,SAAUM,IAEZrB,EAAAA,GAAAA,cAAA,QAAMC,UAAU,a,6DC3CtB,MAyCA,GAAeH,EAAAA,EAAAA,IAzCeoiB,IAC5B,MAAM,GACJzhB,EAAE,MACFL,EAAK,MACL0B,EAAK,SACLqgB,EAAQ,MACRC,EAAK,IACLhe,EAAG,SACH+B,EAAQ,SACRpF,EAAQ,SACR0C,GACEye,EACEG,EAAYD,GAAStgB,EACrBmE,GAAgB/F,EAAAA,EAAAA,GACpB,cACAE,GAAS,UACTgiB,GAAS,QACTC,GAAa,aACbF,GAAY,aACZ,eAGF,OACEniB,EAAAA,GAAAA,cAAA,OAAKC,UAAWgG,GACdjG,EAAAA,GAAAA,cAAA,UACEC,UAAU,eACVQ,GAAIA,EACJL,MAAOA,GAAS,GAChBW,SAAUA,EACVoF,SAAUA,EACV/B,IAAKA,GAEJX,GAEF4e,GAAa5hB,GACZT,EAAAA,GAAAA,cAAA,SAAOsiB,QAAS7hB,GAAK4hB,K,kOClB7B,SAAShc,GAAoB,YAC3Bkc,EAAW,WACXC,EAAU,WACVC,EAAU,YACVnc,EAAW,oBACXvC,EAAmB,SACnBwC,IAEA,MAAM,sBACJmc,IACEpZ,EAAAA,EAAAA,cAEEvD,GAAOwD,EAAAA,EAAAA,KACPoZ,EAAyB,QAAbpc,EACZqc,EAAiBD,EAAYH,EAAaD,EAC1C9f,IAAS6D,GAAc5D,QAAQkgB,IAE/B,IACJxe,EAAG,aACHE,IACEC,EAAAA,EAAAA,GAAkB,CACpB9B,SACAsB,sBACAS,kBAAkB,IAGdqe,GAAqBnhB,EAAAA,EAAAA,GAAgB,KACzCghB,EAAsBC,EAAY,CAAEpc,SAAU,OAAU,CAAC,KAG3D,GAAKjC,GAAiBse,EAItB,OACE5iB,EAAAA,GAAAA,cAAA,OACEC,WAAWC,EAAAA,EAAAA,GAAeC,EAAAA,EAAOE,MACjC+D,IAAKA,GAELpE,EAAAA,GAAAA,cAAA,WAEI+F,EAAK,kCADN4c,EACyC,CACtCG,OAAOC,EAAAA,EAAAA,IAAgBhd,GAAMid,EAAAA,EAAAA,IAAoBJ,EAAeK,QAAS,CACvEhjB,UAAWE,EAAAA,EAAO+iB,YAOkB,CACtCJ,OAAOK,EAAAA,EAAAA,IAAkBpd,GAAMqd,EAAAA,EAAAA,IAAkBrd,EAAM6c,GAAmC,CACxF3iB,UAAWE,EAAAA,EAAO+iB,YAPnB,CACDpB,WAAW,EACXuB,cAAc,KAapBrjB,EAAAA,GAAAA,cAAA,WACG2iB,GACC3iB,EAAAA,GAAAA,cAAA,OAAKC,UAAWE,EAAAA,EAAOmjB,oBAAqB5f,MAAM,sCAC/C,MAAK6f,EAAAA,EAAAA,KACJC,EAAAA,EAAAA,GAAiBZ,EAAgCK,OAAQR,GAAY,GACrE,MACA1c,EAAK0d,UAITd,GACA3iB,EAAAA,GAAAA,cAAC0jB,EAAAA,EAAI,CAACC,WAAS,EAACnd,QAASqc,GACtB9c,EAAK,0BAMlB,C,OAEA,SAAejG,EAAAA,EAAAA,KAAK8jB,EAAAA,EAAAA,IACjBC,IACC,MAAM,MACJf,EAAK,IACLgB,GACED,EAEJ,MAAO,CACLtB,YAAaO,GAAOiB,QACpBvB,WAAYsB,GAAKC,QACjBtB,WAAYoB,EAAOG,WAAWvB,YAAcwB,EAAAA,MAV9BL,CAalBvd,I,2PCxGF,MAAM6d,EAAe,IACfC,EAAW,IACXC,EAAW,IACXC,EAAkB,KAAQnb,EAAAA,EAC1Bob,EAA6B,EAANpb,EAAAA,EAEvBqb,EAAeA,EACnBxjB,WACAyjB,QACAC,gBACAC,oBAEA,MAAOC,EAAeC,IAAoBta,EAAAA,EAAAA,IAAS,CAAEua,EAAG,EAAGC,EAAG,KACvDC,EAAMC,IAAW1a,EAAAA,EAAAA,IAAS6Z,GAC3Bc,GAAa3d,EAAAA,EAAAA,KAAO,GACpB4d,GAAoB5d,EAAAA,EAAAA,IAAO,CAAEud,EAAG,EAAGC,EAAG,IACtCK,GAAoB7d,EAAAA,EAAAA,IAAO,CAAEud,EAAG,EAAGC,EAAG,KAEpC/O,MAAOqP,IAAgBC,EAAAA,EAAAA,KACzBC,EAAuB5Y,KAAKpE,IAAI4b,EAAckB,EAAqC,EAAvBd,GAC5D1P,EAAc4P,EAChB9X,KAAKnE,IACL+c,EAAuBd,EAAMzO,MAC7BuP,EAAuBd,EAAM3M,QAC3B,EACA0N,EAAa3Q,EAAcmQ,EAAO,IAElCS,GAAmBhe,EAAAA,EAAAA,IAAQ,IAC1Bgd,EACE,CACLzO,MAAOyO,EAAMzO,MAAQwP,EACrB1N,OAAQ2M,EAAM3M,OAAS0N,GAHN,CAAExP,MAAO,EAAG8B,OAAQ,GAKtC,CAAC2M,EAAOe,IAELE,EAAgBA,CAACZ,EAAWC,EAAWY,KAC3C,MAAMpO,EAASgO,EAAuB,EAChCK,EAAeD,EAAY3P,MAAQ,EACnC6P,EAAgBF,EAAY7N,OAAS,EAErCgO,EAAanZ,KAAKnE,IAAI,EAAGod,EAAerO,GACxCwO,EAAapZ,KAAKnE,IAAI,EAAGqd,EAAgBtO,GAE/C,MAAO,CACLuN,GAAGkB,EAAAA,EAAAA,IAAMlB,GAAIgB,EAAYA,GACzBf,GAAGiB,EAAAA,EAAAA,IAAMjB,GAAIgB,EAAYA,KAIvBE,EAAalhB,IACjBmgB,EAAW/f,SAAU,EACrBggB,EAAkBhgB,SAAU+gB,EAAAA,EAAAA,GAAmBnhB,GAC/CqgB,EAAkBjgB,QAAU,IAAKyf,GACjClf,SAASqa,iBAAiB,YAAaoG,GACvCzgB,SAASqa,iBAAiB,YAAaoG,GACvCzgB,SAASqa,iBAAiB,UAAWqG,GACrC1gB,SAASqa,iBAAiB,WAAYqG,IAElCD,GAAWxkB,EAAAA,EAAAA,GAAiBoD,IAChC,GAAI,YAAaA,GAAKA,EAAEshB,QAAQte,OAAS,EAAG,OAC5C,IAAKmd,EAAW/f,QAAS,OACzB,MAAQ2f,EAAGwB,EAAQvB,EAAGwB,IAAWL,EAAAA,EAAAA,GAAmBnhB,GAC9CyhB,EAASF,EAASnB,EAAkBhgB,QAAQ2f,EAC5C2B,EAASF,EAASpB,EAAkBhgB,QAAQ4f,EAC5C2B,EAAchB,EAClBN,EAAkBjgB,QAAQ2f,EAAI0B,EAC9BpB,EAAkBjgB,QAAQ4f,EAAI0B,EAC9BhB,GAEFZ,EAAiB6B,KAEbN,GAAUzkB,EAAAA,EAAAA,GAAgB,KAC9BujB,EAAW/f,SAAU,EACrBO,SAASsa,oBAAoB,YAAamG,GAC1CzgB,SAASsa,oBAAoB,YAAamG,GAC1CzgB,SAASsa,oBAAoB,UAAWoG,GACxC1gB,SAASsa,oBAAoB,WAAYoG,KAGrCO,GAAmBhlB,EAAAA,EAAAA,GAAiBilB,IACxC,MAAMC,EAAgBhS,EAAc+R,EAAU,IACxCE,EAAsB,CAC1B9Q,MAAOyO,EAAOzO,MAAQ6Q,EACtB/O,OAAQ2M,EAAO3M,OAAS+O,GAGpBE,EAAQH,EAAU5B,EAClB0B,EAAchB,EAClBd,EAAcE,EAAIiC,EAClBnC,EAAcG,EAAIgC,EAClBD,GAGF7B,EAAQ2B,GACR/B,EAAiB6B,KA4BnB,IAAKjC,EAAO,OAEZ,MAAMuC,GAAazB,EAAuBE,EAAiBzP,OAAS,EAAI4O,EAAcE,EAChFmC,GAAY1B,EAAuBE,EAAiB3N,QAAU,EAAI8M,EAAcG,EAChFmC,GAAuBhH,EAAAA,EAAAA,GAC3B,UAAUuF,EAAiBzP,UAC3B,WAAWyP,EAAiB3N,WAC5B,SAASkP,MACT,QAAQC,OAGJE,GAAuBjH,EAAAA,EAAAA,GAC3B,UAAUuF,EAAiBzP,UAC3B,WAAWyP,EAAiB3N,WAC5B,SAASkP,EAAY1C,MACrB,QAAQ2C,EAAW3C,OAGrB,OACErkB,EAAAA,GAAAA,cAAA,WACEA,EAAAA,GAAAA,cAAA,OACEC,UAAWE,EAAAA,EAAOgnB,iBAClBzjB,OAAOuc,EAAAA,EAAAA,GACL,UAAUqF,MACV,WAAWA,QAGbtlB,EAAAA,GAAAA,cAAA,OACE+b,IAAKyI,EAAMzI,IACX9b,UAAWE,EAAAA,EAAOinB,gBAClB1jB,MAAOujB,EACPjL,WAAW,EACX9N,YAAa8X,EACbqB,aAAcrB,EACd/J,IAAI,GACJ7V,KAAK,iBAEPpG,EAAAA,GAAAA,cAAA,OAAKC,UAAWE,EAAAA,EAAOmnB,cACvBtnB,EAAAA,GAAAA,cAAA,OAAKC,UAAWE,EAAAA,EAAOonB,UACrBvnB,EAAAA,GAAAA,cAAA,OACE+b,IAAKyI,EAAMzI,IACX9b,UAAWE,EAAAA,EAAOqnB,gBAClB9jB,MAAOwjB,EACPlL,WAAW,EACXC,IAAI,GACJ7V,KAAK,mBAIXpG,EAAAA,GAAAA,cAAA,OAAKC,UAAWE,EAAAA,EAAOsnB,gBACrBznB,EAAAA,GAAAA,cAAC0nB,EAAAA,EAAW,CACVznB,UAAWE,EAAAA,EAAOwnB,WAClBrf,IAAK6b,EACL5b,IAAK6b,EACLhkB,MAAO2kB,EACPhkB,SAAU2lB,IAEZ1mB,EAAAA,GAAAA,cAAC0G,EAAAA,EAAM,CAACzG,UAAWE,EAAAA,EAAOynB,cAAejhB,OAAK,EAACC,MAAM,UAAUJ,QAlFlDqhB,KACjB,IAAKrD,EAAO,OAEZ,MAAMsD,EAAWxC,EAAuBC,EAClCwC,EAASvD,EAAMzO,MAAQ,EAAM+R,EAAW,EAAMnD,EAAcE,EAAIU,EAChEyC,EAASxD,EAAM3M,OAAS,EAAMiQ,EAAW,EAAMnD,EAAcG,EAAIS,EAEjE0C,EAAavb,KAAKpE,IAAImc,EAAe/X,KAAKnE,IAAImc,EAAeoD,IAE7D5Q,EAASzR,SAASyiB,cAAc,UACtChR,EAAOnB,MAAQkS,EACf/Q,EAAOW,OAASoQ,EACJ/Q,EAAOU,WAAW,MAC1BuQ,UACF3D,EACAuD,EAAOC,EACPF,EAAUA,EACV,EAAG,EACHG,EAAYA,GAEd/Q,EAAOkR,OAAQC,IACTA,GAAMtnB,GAASunB,EAAAA,EAAAA,IAAWD,EAAM,gBACnC,eA4DqFvhB,UAAU,QAC5F9G,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,cAOrB,GAAeZ,EAAAA,EAAAA,IAAKykB,G,6XChMpB,MAAMgE,EAAwB,IAC9B,IAAIC,EACAC,GAAwB,EAE5B,MA2CA,EA3C4CC,EAAGC,gBAAeC,MAC5D,MAAMC,GAAgBvhB,EAAAA,EAAAA,KAAO,GAEvBoE,GAAmBhK,EAAAA,EAAAA,GAAiBoD,IAIxC,GAHA+jB,EAAc3jB,SAAU,EAGpBujB,EAGF,OAFAA,GAAwB,OACxBE,EAAW7jB,GAIT0jB,IACF/c,aAAa+c,GACbA,OAAcrmB,GAEhBqmB,EAAchd,OAAOV,WAAW,KAC1B+d,EAAc3jB,SAChByjB,EAAW7jB,IAEZyjB,KAGC5c,GAAmBjK,EAAAA,EAAAA,GAAgB,KACvCmnB,EAAc3jB,SAAU,IAGpBoG,GAAc5J,EAAAA,EAAAA,GAAiBoD,IACnC+jB,EAAc3jB,SAAU,EACxByjB,EAAW7jB,KAGb,OACE9E,EAAAA,GAAAA,cAAC0G,EAAAA,EAAMoiB,EAAA,GACDF,EAAW,CACfrc,aAAe4D,EAAAA,QAAkChO,EAAnBuJ,EAC9Bc,aAAe2D,EAAAA,QAAkChO,EAAnBwJ,EAC9BnF,QAAU2J,EAAAA,GAA4B7E,EAAbqd,M,gLC3C/B,MAAMI,EAAkB,KAClBC,EAAkB,IAElB9M,EAAYA,EAAGC,OAAMpb,WAAU+C,cACnC,MAAMiC,GAAOwD,EAAAA,EAAAA,MACP,MAAEib,IAAUyE,EAAAA,EAAAA,GAAe9M,GAC3B1Z,EAASC,QAAQyZ,IAASzZ,QAAQ8hB,GACxC,OACExkB,EAAAA,GAAAA,cAAC6C,EAAAA,EAAK,CACJJ,OAAQA,EACRqB,QAASA,EACTf,MAAOgD,EAAK,gBACZ9F,UAAU,YACVmD,gBAAc,EACdc,mBAAiB,GAEjBlE,EAAAA,GAAAA,cAACukB,EAAAA,EAAY,CACXxjB,SAAUA,EACVyjB,MAAOA,EACPC,cAAesE,EACfrE,cAAesE,MAMvB,GAAelpB,EAAAA,EAAAA,IAAKoc,G,uDC5CpB,SAAgB,KAAO,WAAW,IAAM,WAAW,OAAS,W,kLCsC5D,MAAMgN,EAAqB,CAAErE,EAAG,EAAGC,EAAG,GAEhCqE,EAA0BA,EAC9B1lB,WACAhD,KACA2oB,SACAC,YACA3lB,MAAO4lB,EACPC,YACAC,iBAEA,MAAMzjB,GAAOC,EAAAA,EAAAA,KACP5B,GAAMkD,EAAAA,EAAAA,OAEL+W,EAAOoL,IAAYnf,EAAAA,EAAAA,IAAyB,CACjD2a,YAAY,EACZyE,OAAQR,EACRS,YAAaT,IAGT5Y,EAAmBxL,IACvBA,EAAE2L,kBACF3L,EAAEC,iBACF,MAAM,EAAE8f,EAAC,EAAEC,IAAMmB,EAAAA,EAAAA,GAAmBnhB,GAEpC2kB,EAAS,IACJpL,EACH4G,YAAY,EACZyE,OAAQ,CAAE7E,IAAGC,KACb/O,MAAO3R,EAAIc,SAASkN,YACpByF,OAAQzT,EAAIc,SAASoa,gBAInBsK,GAAkBtoB,EAAAA,EAAAA,IAAawD,IACnC,MAAM,EAAE+f,EAAC,EAAEC,IAAMmB,EAAAA,EAAAA,GAAmBnhB,GAE9B6kB,EAAc,CAClB9E,EAAGA,EAAIxG,EAAMqL,OAAO7E,EACpBC,EAAGA,EAAIzG,EAAMqL,OAAO5E,GAGtB2E,EAAUvkB,IAAO,IACZA,EACHykB,iBAGFP,EAAOO,EAAalpB,IACnB,CAACA,EAAI2oB,EAAQ/K,EAAMqL,OAAO7E,EAAGxG,EAAMqL,OAAO5E,IAEvC+E,GAAgBvoB,EAAAA,EAAAA,IAAY,KAChCmoB,EAAUvkB,IAAO,IACZA,EACH+f,YAAY,EACZlP,WAAO5T,EACP0V,YAAQ1V,KAGVknB,KACC,CAACA,KAEJ3kB,EAAAA,EAAAA,IAAU,KACJ2Z,EAAM4G,YAAcuE,GACtBC,EAAUvkB,IAAO,IACZA,EACH+f,YAAY,EACZlP,WAAO5T,EACP0V,YAAQ1V,MAGX,CAACqnB,EAAYnL,EAAM4G,cAEtBvgB,EAAAA,EAAAA,IAAU,KACJ2Z,EAAM4G,YACRzZ,OAAOsU,iBAAiB,YAAa8J,GACrCpe,OAAOsU,iBAAiB,YAAa8J,GACrCpe,OAAOsU,iBAAiB,WAAY+J,GACpCre,OAAOsU,iBAAiB,cAAe+J,GACvCre,OAAOsU,iBAAiB,UAAW+J,KAEnCre,OAAOuU,oBAAoB,YAAa6J,GACxCpe,OAAOuU,oBAAoB,YAAa6J,GACxCpe,OAAOuU,oBAAoB,WAAY8J,GACvCre,OAAOuU,oBAAoB,cAAe8J,GAC1Cre,OAAOuU,oBAAoB,UAAW8J,GAEtCJ,EAAUvkB,IAAO,IACZA,EACHykB,YAAaT,MAIV,KACD7K,EAAM4G,aACRzZ,OAAOuU,oBAAoB,YAAa6J,GACxCpe,OAAOuU,oBAAoB,YAAa6J,GACxCpe,OAAOuU,oBAAoB,WAAY8J,GACvCre,OAAOuU,oBAAoB,cAAe8J,GAC1Cre,OAAOuU,oBAAoB,UAAW8J,MAGzC,CAACD,EAAiBC,EAAexL,EAAM4G,aAE1C,MAAMhf,GAAgB/F,EAAAA,EAAAA,GAAeC,EAAAA,EAAO+R,UAAWmM,EAAM4G,YAAc9kB,EAAAA,EAAO8kB,YAE5E6E,GAAYtiB,EAAAA,EAAAA,IAAQ,KACjByY,EAAAA,EAAAA,GACL5B,EAAM4G,YAAc,wBAAwB5G,EAAMsL,YAAY9E,QAAQxG,EAAMsL,YAAY7E,OACxFzG,EAAMtI,MAAQ,UAAUsI,EAAMtI,eAAY5T,EAC1Ckc,EAAMxG,OAAS,WAAWwG,EAAMxG,gBAAa1V,EAC7CmnB,GAED,CAACA,EAAejL,EAAMxG,OAAQwG,EAAM4G,WAAY5G,EAAMsL,YAAY9E,EAAGxG,EAAMsL,YAAY7E,EAAGzG,EAAMtI,QAEnG,OACE/V,EAAAA,GAAAA,cAAA,OAAK0D,MAAOomB,EAAW7pB,UAAWgG,EAAe7B,IAAKA,GACnDX,GAEC+lB,GACAxpB,EAAAA,GAAAA,cAAA,OACE,aAAY+F,EAAK,mBACjBI,SAAU,EACVC,KAAK,SACLnG,WAAWC,EAAAA,EAAAA,GAAeC,EAAAA,EAAO4pB,KAAM,aAAc,kBACrD7b,YAAaoC,EACb+W,aAAc/W,EACd5M,MAAO6lB,GAEPvpB,EAAAA,GAAAA,cAAC+G,EAAAA,EAAI,CAACrG,KAAK,OAAOT,UAAWE,EAAAA,EAAO6J,UAO9C,GAAelK,EAAAA,EAAAA,IAAKqpB,G,gLC1IpB,MAAMa,EAA8BA,EAClCvpB,KACAE,UACAC,WACAC,WACAopB,iBACAC,iBACAC,UACAppB,WACAqpB,eACAnqB,gBAEA,MAAMoB,GAAeK,EAAAA,EAAAA,GAAgB,CAACH,EAAsC8oB,KAC1E,MAAM,MAAEjqB,EAAK,QAAE2B,GAAYR,EAAMC,cACjC,IAAI8oB,EAEAvoB,GACFuoB,GAAYC,EAAAA,EAAAA,IAAO,IAAI3pB,EAAUR,IACjCiqB,GAAkBjf,QAASof,IACpBF,EAAU3L,SAAS6L,EAAapqB,QACnCkqB,EAAUG,KAAKD,EAAapqB,WAIhCkqB,EAAY1pB,EAAS8pB,OAAQC,GAAMA,IAAMvqB,GACrCiqB,IACFC,EAAYA,EAAUI,OAAQC,IAAON,EAAiBO,KAAMJ,GAAiBA,EAAapqB,QAAUuqB,MAGxG5pB,EAASupB,KAELO,GAAwBnpB,EAAAA,EAAAA,GAAiBopB,IAC7C,MAAMC,EAAeD,GAAeJ,OAAQF,GAAiB5pB,EAAS+d,SAAS6L,EAAapqB,QAAQ0H,OACpG,OAAOijB,EAAe,EAAIA,EAAeD,EAAchjB,SAGzD,OACE9H,EAAAA,GAAAA,cAAA,OAAKS,GAAIA,EAAIR,WAAWC,EAAAA,EAAAA,GAAe,cAAeD,IACnDU,EAAQgB,IAAKC,GAEV5B,EAAAA,GAAAA,cAACgrB,EAAAA,EAAQ,CACPlpB,MAAOF,EAAOE,MACdV,SAAUQ,EAAOR,SACjBhB,MAAOwB,EAAOxB,MACd6qB,KAAMrpB,EAAOqpB,KACblpB,SAA8C,IAArCnB,GAAU6G,QAAQ7F,EAAOxB,OAClCS,SAAUe,EAAOf,UAAYA,EAC7BqB,UAAWgoB,GAA2D,IAA1CA,EAAeziB,QAAQ7F,EAAOxB,YAAgB+B,EAC1EpB,SAAUM,EACV+oB,aAAcA,EACdH,eAAgBA,EAChBiB,oBAAqBL,EAAsBjpB,EAAOkpB,eAAiB,IACnET,iBAAkBzoB,EAAOkpB,cACzBK,OAAQvqB,EACRupB,QAASA,OAQrB,GAAerqB,EAAAA,EAAAA,IAAKkqB,G,uDCjGpB,SAAgB,UAAY,W,gLCkB5B,MAAMnJ,EAAmB,IACnBuK,EAAe,GAEf3e,EAAaA,EAAG1C,WAAU9J,YAAWghB,YACzC,MAAOM,EAAU8J,IAAe/gB,EAAAA,EAAAA,IAASP,GACnChE,GAAOC,EAAAA,EAAAA,KAiBb,OAfAsb,EAAAA,EAAAA,GACE,IAAM+J,EAAaC,GAASA,EAAO,GACnC/J,EAAW,EAAIV,OAAmB1e,IAGpCuC,EAAAA,EAAAA,IAAU,KACJ6c,GAAY,GACdN,OAED,CAACM,EAAUN,KAEdvc,EAAAA,EAAAA,IAAU,KACR2mB,EAAYthB,IACX,CAACA,IAGF/J,EAAAA,GAAAA,cAAA,OAAKC,WAAWC,EAAAA,EAAAA,GAAeC,EAAAA,EAAOE,KAAMJ,IAC1CD,EAAAA,GAAAA,cAAA,OAAKC,UAAWE,EAAAA,EAAOorB,IAAKxV,MAAM,OAAO8B,OAAO,QAC9C7X,EAAAA,GAAAA,cAAA,UACEwrB,GAAG,KACHC,GAAG,KACHC,EAAGN,EACHtW,UAAU,sBACV6W,WAAW,MACX,mBAAiB,MACjB,oBAAmB,KAAQpK,EAAW,GAAKxX,EAAY,IACvD9J,UAAWE,EAAAA,EAAOyrB,UAGtB5rB,EAAAA,GAAAA,cAAC2C,EAAAA,EAAe,CAAC1C,UAAWE,EAAAA,EAAOkC,KAAMA,MAAMwpB,EAAAA,EAAAA,IAAqB9lB,EAAiB,IAAXwb,OAKhF,GAAezhB,EAAAA,EAAAA,IAAK2M,G,0JCjCpB,MAAMib,EAA4BA,EAChC/mB,UACA2H,MAAM,EACNC,OAAM5H,EAAUA,EAAQmH,OAAS,EAAI,KACrCa,OAAO,EACP7G,QACA1B,QACAS,WACAirB,WACAC,OACA9rB,YACA+rB,cACAjrB,WACAkrB,uBAEA,MAAMlmB,GAAOC,EAAAA,EAAAA,KACP3E,GAAeC,EAAAA,EAAAA,IAAaC,IAChCR,EAAS2Z,OAAOnZ,EAAMC,cAAcpB,SACnC,CAACW,IAEEmrB,GAAgBhsB,EAAAA,EAAAA,GACpBD,EACA,cACAY,GAAY,WACZirB,GAAY,WACZC,GAAQ,QAGJI,GAAa3kB,EAAAA,EAAAA,IAAQ,IACrB7G,EACMP,GAASO,EAAQmH,OAAS,GAAM,KAG/B1H,EAAQkI,KADaC,EAAMD,GAAOK,GACK,IAEjD,CAAChI,EAASP,EAAOmI,EAAKD,EAAKK,IA+B9B,OACE3I,EAAAA,GAAAA,cAAA,OAAKC,UAAWisB,GA7BZD,EAEAjsB,EAAAA,GAAAA,cAAA,OAAKC,UAAU,iBAAiB2Q,IAAK7K,EAAKgD,MAAQ,WAAQ5G,IACtDxB,GACAX,EAAAA,GAAAA,cAAAA,EAAAA,GAAAA,SAAA,KACEA,EAAAA,GAAAA,cAAA,QAAMC,UAAU,YAAY2Q,IAAI,QAAQtI,GACxCtI,EAAAA,GAAAA,cAAA,QAAMC,UAAU,QAAQ2Q,IAAI,QAAQob,EAAcA,EAAY5rB,GAASA,GACvEJ,EAAAA,GAAAA,cAAA,QAAMC,UAAU,YAAY2Q,IAAI,QAAQrI,KAO7CzG,EAKH9B,EAAAA,GAAAA,cAAA,OAAKC,UAAU,iBAAiB2Q,IAAK7K,EAAKgD,MAAQ,WAAQ5G,GACxDnC,EAAAA,GAAAA,cAAA,QAAMC,UAAU,QAAQ2Q,IAAI,QAAQ9O,IAClCnB,GACAX,EAAAA,GAAAA,cAAA,QAAMC,UAAU,QAAQ2Q,IAAI,QAAQob,EAAcA,EAAY5rB,GAASA,SAR7E,EAiBEJ,EAAAA,GAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,GAAAA,cAAA,OACEC,UAAU,oBACVyD,MAAO,UAAUyoB,OAEnBnsB,EAAAA,GAAAA,cAAA,SACEsI,IAAKA,EACLC,IAAKA,EACLnI,MAAOA,EACPuI,KAAMA,EACNN,KAAK,QACLpI,UAAU,qBACVc,SAAUM,IAEXV,GACCX,EAAAA,GAAAA,cAAA,OAAKC,UAAU,kBACZU,EAAQgB,IAAI,CAACC,EAAQsG,IACpBlI,EAAAA,GAAAA,cAAA,OACEC,WAAWC,EAAAA,EAAAA,GAAe,gBAAiBgI,IAAU9H,GAAS,UAC9DoG,QAASA,IAAMzF,EAASmH,IAEvBtG,QAUjB,GAAe9B,EAAAA,EAAAA,IAAK4nB,G,8JClHpB,SAAS0E,GAAU,SAAE3oB,EAAQ,UAAExD,IAC7B,MAAM8F,GAAOC,EAAAA,EAAAA,KAEb,OACEhG,EAAAA,GAAAA,cAAA,OACE4Q,IAAK7K,EAAKgD,MAAQ,WAAQ5G,EAC1BlC,WAAWC,EAAAA,EAAAA,GAAeC,EAAAA,EAAOksB,UAAWpsB,IAE3CwD,EAGP,C,OAEA,U,gLCYA,MAAM6oB,EAAyBA,EAC7BloB,MACA3D,KACAR,YACAG,QACA0B,QACAsgB,QACAmK,UACA1rB,WACAirB,WACAlT,cACAC,eACA2T,YACAC,YACAC,qBACAvmB,WACApF,WACA4rB,UACAC,aACA9R,YACAvB,SACAsT,UACAC,wBAEA,IAAIC,GAAczlB,EAAAA,EAAAA,MACdlD,IACF2oB,EAAc3oB,GAGhB,MAAM2B,GAAOC,EAAAA,EAAAA,KACPqc,EAAYD,GAASmK,GAAWzqB,EAChCmE,GAAgB/F,EAAAA,EAAAA,GACpB,cACAE,GAAS,UACTgiB,EAAQ,QAAUmK,GAAW,UAC7B1rB,GAAY,WACZirB,GAAY,WACZzJ,GAAa,aACbpiB,GAGI+sB,GAAetrB,EAAAA,EAAAA,GAAiB0Y,KACpC5F,EAAAA,EAAAA,IAAgB,KACd4F,EAAQ1W,MAAMmU,OAAS,KACvB9C,EAAAA,EAAAA,IAAoB,KAClB,MAAMkY,EAAY7S,EAAQ+D,aAC1B,MAAO,KACL/D,EAAQ1W,MAAMmU,OAAS,GAAGoV,cAMlCrlB,EAAAA,EAAAA,IAAgB,KACd,MAAMslB,EAAWH,EAAY7nB,QACxBgoB,GACLF,EAAaE,IACZ,IAEH,MAAM7rB,GAAeC,EAAAA,EAAAA,IAAawD,IAChC,MAAM2D,EAAS3D,EAAEtD,cACjB,IAAKsrB,EAAmB,CACtB,MAAMK,EAAuB1kB,EAAO6R,aAEpC7R,EAAOrI,MAAQqI,EAAOrI,MAAMgtB,QAAQ,MAAO,KAC3C3kB,EAAO6R,aAAe6S,CACxB,CACAH,EAAavkB,GACb1H,IAAW+D,IACV,CAACgoB,EAAmB/rB,IAEvB,OACEf,EAAAA,GAAAA,cAAA,OAAKC,UAAWgG,EAAe2K,IAAK7K,EAAKgD,MAAQ,WAAQ5G,GACvDnC,EAAAA,GAAAA,cAAA,YACEoE,IAAK2oB,EACL9sB,UAAU,eACVQ,GAAIA,EACJmQ,IAAI,OACJxQ,MAAOA,GAAS,GAChB+F,SAAUA,EACVyS,YAAaA,EACb6T,UAAWA,EACX5T,aAAcA,EACd2T,UAAWA,EACX3rB,SAAUA,EACVirB,SAAUA,EACV/qB,SAAUM,EACVsrB,QAASA,EACTC,WAAYA,EACZ9R,UAAWA,EACXvB,OAAQA,EACRsT,QAASA,EACT,aAAYxK,IAEbA,GACCriB,EAAAA,GAAAA,cAAA,SAAOsiB,QAAS7hB,GAAK4hB,GAEtBqK,GACC1sB,EAAAA,GAAAA,cAAA,OAAKC,UAAU,wBAAwBysB,KAM/C,GAAe5sB,EAAAA,EAAAA,IAAKwsB,G,6LC7GpB,MAAMe,EAA8BA,EAClC5qB,SACAM,QACAuqB,iBACAnqB,SACAd,OACAkrB,YACAC,eAAe,UACfC,uBACAC,oBACAC,gBACAC,qBACA3tB,YACAwD,WACAoqB,iBACA/pB,UACAC,0BAEA,MAAMgC,GAAOC,EAAAA,EAAAA,KAEPwI,GAAelH,EAAAA,EAAAA,MAEfwmB,GAAwBxsB,EAAAA,EAAAA,IAAa4G,KAC1B,IAAXA,GAAc2lB,KACjB,CAACA,IAEE1T,GAAgB4T,EAAAA,EAAAA,GAA0Bvf,EAAc/L,EAAQqrB,EAAuB,WAE7F,OACE9tB,EAAAA,GAAAA,cAAC6C,EAAAA,EAAK,CACJ5C,WAAWC,EAAAA,EAAAA,GAAe,UAAWD,GACrC8C,MAAQA,IAAWuqB,OAAoCnrB,EAAnB4D,EAAK,aACzC5C,OAAQA,EACRV,OAAQA,EACRqB,QAASA,EACTC,oBAAqBA,GAEpB1B,GAAQA,EAAKsf,MAAM,OAAOhgB,IAAKqsB,GAC9BhuB,EAAAA,GAAAA,cAAA,SAAIguB,IAELT,GAAa9pB,EACdzD,EAAAA,GAAAA,cAAA,OACEC,UAAW2tB,EAAqB,wBAA0B,sBAC1DxpB,IAAKoK,EACLsM,UAAWX,GAEXna,EAAAA,GAAAA,cAAC0G,EAAAA,EAAM,CACLzG,UAAU,wBACV2gB,QAAM,EACNpa,QAASqnB,EACTjnB,MAAO6mB,EAAuB,SAAW,UACzC5sB,SAAU6sB,GAETF,IAEDG,GAAiB3tB,EAAAA,GAAAA,cAAC0G,EAAAA,EAAM,CAACzG,UAAU,wBAAwB2gB,QAAM,EAACpa,QAAS1C,GAAUiC,EAAK,cAMpG,GAAejG,EAAAA,EAAAA,IAAKutB,G,uDC7FpB,SAAgB,UAAY,WAAW,WAAa,WAAW,KAAO,WAAW,KAAO,W","sources":["webpack://TeleGPT/./src/components/ui/placeholder/PlaceholderChatInfo.module.scss?3a84","webpack://TeleGPT/./src/components/ui/placeholder/PlaceholderChatInfo.tsx","webpack://TeleGPT/./src/components/ui/Toggle.module.scss?0590","webpack://TeleGPT/./src/components/ui/Toggle.tsx","webpack://TeleGPT/./src/components/ui/RadioGroup.tsx","webpack://TeleGPT/./src/components/ui/ImageCropper.module.scss?aea2","webpack://TeleGPT/./src/components/ui/Badge.tsx","webpack://TeleGPT/./src/components/ui/Modal.tsx","webpack://TeleGPT/./src/components/ui/ModalStarBalanceBar.module.scss?35ca","webpack://TeleGPT/./src/components/ui/RangeSliderWithMarks.module.scss?5535","webpack://TeleGPT/./src/components/ui/RangeSliderWithMarks.tsx","webpack://TeleGPT/./src/components/ui/FloatingActionButton.tsx","webpack://TeleGPT/./src/components/ui/Notification.tsx","webpack://TeleGPT/./src/components/ui/ListItem.tsx","webpack://TeleGPT/./src/components/ui/TabList.tsx","webpack://TeleGPT/./src/components/ui/Radio.tsx","webpack://TeleGPT/./src/components/ui/ShowTransition.tsx","webpack://TeleGPT/./src/components/ui/Tab.tsx","webpack://TeleGPT/./src/components/ui/ProgressSpinner.tsx","webpack://TeleGPT/./src/components/ui/SearchInput.tsx","webpack://TeleGPT/./src/components/ui/SelectAvatar.module.scss?3384","webpack://TeleGPT/./src/components/ui/AvatarEditable.tsx","webpack://TeleGPT/./src/components/ui/SelectAvatar.tsx","webpack://TeleGPT/./src/components/ui/InfiniteScroll.tsx","webpack://TeleGPT/./src/components/ui/Badge.module.scss?a5a8","webpack://TeleGPT/./src/components/ui/placeholder/Skeleton.tsx","webpack://TeleGPT/./src/components/ui/ShowMoreButton.tsx","webpack://TeleGPT/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://TeleGPT/./src/components/ui/MenuSeparator.tsx","webpack://TeleGPT/./src/components/ui/TextTimer.tsx","webpack://TeleGPT/./src/components/ui/Switcher.tsx","webpack://TeleGPT/./src/components/ui/Select.tsx","webpack://TeleGPT/./src/components/ui/ModalStarBalanceBar.tsx","webpack://TeleGPT/./src/components/ui/ImageCropper.tsx","webpack://TeleGPT/./src/components/ui/ResponsiveHoverButton.tsx","webpack://TeleGPT/./src/components/ui/CropModal.tsx","webpack://TeleGPT/./src/components/ui/RoundTimer.module.scss?7ffc","webpack://TeleGPT/./src/components/ui/Draggable.tsx","webpack://TeleGPT/./src/components/ui/CheckboxGroup.tsx","webpack://TeleGPT/./src/components/ui/Separator.module.scss?e4cd","webpack://TeleGPT/./src/components/ui/RoundTimer.tsx","webpack://TeleGPT/./src/components/ui/RangeSlider.tsx","webpack://TeleGPT/./src/components/ui/Separator.tsx","webpack://TeleGPT/./src/components/ui/TextArea.tsx","webpack://TeleGPT/./src/components/ui/ConfirmDialog.tsx","webpack://TeleGPT/./src/components/ui/Draggable.module.scss?804f"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Oob7moh7\",\"avatar\":\"ao0o6F_1\",\"info\":\"e94nYlC4\",\"title\":\"ANs9RCJu\",\"subtitle\":\"RSn3O5Rx\",\"animated\":\"AtWkrIxV\",\"slide\":\"_iiRl0o2\"};","import React from '@teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './PlaceholderChatInfo.module.scss';\n\nconst PlaceholderChatInfo = () => {\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.avatar, styles.animated)} />\n      <div className={styles.info}>\n        <div className={buildClassName(styles.title, styles.animated)} />\n        <div className={buildClassName(styles.subtitle, styles.animated)} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PlaceholderChatInfo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eGD1rubd\",\"widget\":\"EXXsQxeq\",\"min\":\"C4vXj96y\",\"mid\":\"nRNm3LRD\",\"max\":\"LdztzMx0\",\"filler\":\"kudEBJOk\"};","import React from '@teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Toggle.module.scss';\n\ninterface OwnProps {\n  value: 'min' | 'mid' | 'max';\n}\n\nfunction Toggle({ value }: OwnProps) {\n  return (\n    <div className={buildClassName(styles.root, 'Toggle')} aria-hidden>\n      <i className={buildClassName(styles.filler, styles[value])} />\n      <i className={buildClassName(styles.widget, styles[value])} />\n    </div>\n  );\n}\n\nexport default memo(Toggle);\n","import React from '@teact';\nimport type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Radio from './Radio';\n\nexport type IRadioOption<T = string> = {\n  label: TeactNode;\n  subLabel?: TeactNode;\n  value: T;\n  hidden?: boolean;\n  className?: string;\n  isCanCheckedInDisabled?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n  onClickAction?: (value: string) => void;\n  isLink?: boolean;\n  withIcon?: boolean;\n  subLabelClassName?: string;\n  subLabel?: TeactNode;\n  className?: string;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n  onClickAction,\n  subLabelClassName,\n  isLink,\n  withIcon,\n  subLabel,\n  className,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  const onSubLabelClick = useLastCallback((value: string) => () => {\n    onClickAction?.(value);\n  });\n\n  return (\n    <div id={id} className={buildClassName('radio-group', className)}>\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={subLabel || option.subLabel}\n          subLabelClassName={subLabelClassName}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          isCanCheckedInDisabled={option.isCanCheckedInDisabled}\n          disabled={disabled}\n          withIcon={withIcon}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          className={option.className}\n          onChange={handleChange}\n          onSubLabelClick={onSubLabelClick(option.value)}\n          isLink={isLink}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","// extracted by mini-css-extract-plugin\nexport default {\"previewContainer\":\"r_2tKzuI\",\"foregroundImage\":\"nJUDgVTD\",\"backgroundImage\":\"caUABR3p\",\"previewMask\":\"gR8q967h\",\"cropArea\":\"m_d02kUd\",\"confirmButton\":\"M0r9Gw03\",\"zoomSlider\":\"s73_IyYI\",\"bottomControls\":\"_YQbrXkD\"};","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import React from '@teact';\nimport type { ElementRef, FC, TeactNode } from '../../lib/teact/teact';\nimport { beginHeavyAnimation, useEffect } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport freezeWhenClosed from '../../util/hoc/freezeWhenClosed';\nimport trapFocus from '../../util/trapFocus';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Icon from '../common/icons/Icon';\nimport Button, { type OwnProps as ButtonProps } from './Button';\nimport ModalStarBalanceBar from './ModalStarBalanceBar';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nexport const ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  contentClassName?: string;\n  headerClassName?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  hasAbsoluteCloseButton?: boolean;\n  absoluteCloseButtonColor?: ButtonProps['color'];\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  dialogStyle?: string;\n  dialogRef?: ElementRef<HTMLDivElement>;\n  isLowStackPriority?: boolean;\n  dialogContent?: React.ReactNode;\n  ignoreFreeze?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n  withBalanceBar?: boolean;\n  currencyInBalanceBar?: 'TON' | 'XTR';\n  isCondensedHeader?: boolean;\n};\n\nconst Modal: FC<OwnProps> = ({\n  dialogRef,\n  title,\n  className,\n  contentClassName,\n  headerClassName,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  hasAbsoluteCloseButton,\n  absoluteCloseButtonColor = 'translucent',\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  dialogStyle,\n  isLowStackPriority,\n  dialogContent,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n  withBalanceBar,\n  isCondensedHeader,\n  currencyInBalanceBar = 'XTR',\n}) => {\n  const {\n    ref: modalRef,\n    shouldRender,\n  } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    withShouldRender: true,\n  });\n\n  const withCloseButton = hasCloseButton || hasAbsoluteCloseButton;\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useLastCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  });\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen, modalRef]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      beginHeavyAnimation(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useOldLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title && !withCloseButton) return undefined;\n    const closeButton = (\n      <Button\n        className={buildClassName(hasAbsoluteCloseButton && 'modal-absolute-close-button')}\n        round\n        color={absoluteCloseButtonColor}\n        size=\"smaller\"\n        ariaLabel={lang('Close')}\n        onClick={onClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n    );\n\n    if (hasAbsoluteCloseButton) {\n      return closeButton;\n    }\n\n    return (\n      <div className={buildClassName('modal-header', headerClassName, isCondensedHeader && 'modal-header-condensed')}>\n        {withCloseButton && closeButton}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n    isLowStackPriority && 'low-priority',\n    withBalanceBar && 'with-balance-bar',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        {withBalanceBar && (\n          <ModalStarBalanceBar\n            isModalOpen={isOpen}\n            currency={currencyInBalanceBar}\n          />\n        )}\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef} style={dialogStyle}>\n            {renderHeader()}\n            {dialogContent}\n            <div className={buildClassName('modal-content custom-scroll', contentClassName)} style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default freezeWhenClosed(Modal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UtvP6LQ2\",\"dots\":\"PdzBnsGR\",\"starIcon\":\"w919CqtI\",\"tonInUsdDescription\":\"VMKBAQXy\"};","// extracted by mini-css-extract-plugin\nexport default {\"dotWrapper\":\"s8NMMSES\",\"sliderContainer\":\"i_wrxmyh\",\"marksContainer\":\"bVlnaLCI\",\"mark\":\"AFFaq4eZ\",\"active\":\"cuogxYPG\",\"slider\":\"H_rMZrqn\",\"tickMarks\":\"O7SI4r_Y\",\"tick\":\"b6UDc3zh\",\"filled\":\"VELPJsJ0\",\"tickUnfilled\":\"K8NtimIi\"};","import React from '@teact';\nimport type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './RangeSliderWithMarks.module.scss';\n\nexport type OwnProps = {\n  marks: number[];\n  onChange: (value: number) => void;\n  rangeCount: number;\n};\n\nconst RangeSliderWithMarks: FC<OwnProps> = ({ marks, onChange, rangeCount }) => {\n  const sliderRef = useRef<HTMLInputElement>();\n\n  const rangeCountIndex = useMemo(() => marks.indexOf(rangeCount), [marks, rangeCount]);\n\n  const rangeValue = useMemo(() => {\n    return marks.indexOf(rangeCount).toString();\n  }, [marks, rangeCount]);\n\n  useLayoutEffect(() => {\n    if (sliderRef.current) {\n      const fillPercentage = (rangeCountIndex / (marks.length - 1)) * 100;\n      const thumbOffset = fillPercentage / 2;\n      sliderRef.current.style.setProperty('--fill-percentage', `${fillPercentage}%`);\n      sliderRef.current.style.setProperty('--thumb-offset', `${thumbOffset}%`);\n    }\n  }, [rangeCountIndex, marks]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const index = parseInt(event.target.value, 10);\n    const newValue = marks[index];\n    onChange(newValue);\n  };\n\n  return (\n    <div className={styles.dotWrapper}>\n      <form>\n        <div className={styles.sliderContainer}>\n          <div className={styles.tickMarks}>\n            {marks.map((mark, index) => {\n              const isFilled = index <= rangeCountIndex;\n              return (\n                <div\n                  key={mark}\n                  className={buildClassName(\n                    styles.tick,\n                    isFilled ? styles.filled : styles.tickUnfilled,\n                  )}\n                />\n              );\n            })}\n          </div>\n          <div className={styles.marksContainer}>\n            {marks.map((mark) => (\n              <div\n                key={mark}\n                className={buildClassName(styles.mark, rangeCount === mark && styles.active)}\n              >\n                {mark}\n              </div>\n            ))}\n          </div>\n          <input\n            ref={sliderRef}\n            type=\"range\"\n            className={styles.slider}\n            min=\"0\"\n            max={marks.length - 1}\n            value={rangeValue}\n            onChange={handleChange}\n            step=\"1\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(RangeSliderWithMarks);\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useOldLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\nimport { isLangFnParam } from '../../util/localization/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { REM } from '../common/helpers/mediaDimensions';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmoji from '../common/CustomEmoji';\nimport Icon from '../common/icons/Icon';\nimport StarIcon from '../common/icons/StarIcon';\nimport Button from './Button';\nimport Portal from './Portal';\nimport RoundTimer from './RoundTimer';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  notification: ApiNotification;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\nconst CUSTOM_EMOJI_SIZE = 1.75 * REM;\n\nconst Notification: FC<OwnProps> = ({\n  notification,\n}) => {\n  const actions = getActions();\n\n  const lang = useLang();\n\n  const {\n    localId,\n    message,\n    action,\n    actionText,\n    cacheBreaker,\n    className,\n    disableClickDismiss,\n    dismissAction,\n    duration = DEFAULT_DURATION,\n    icon,\n    shouldUseCustomIcon,\n    customEmojiIconId,\n    shouldShowTimer,\n    title,\n    containerSelector,\n  } = notification;\n\n  const [isOpen, setIsOpen] = useState(true);\n  const timerRef = useRef<number | undefined>();\n  const { transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  const handleDismiss = useLastCallback(() => {\n    actions.dismissNotification({ localId });\n  });\n\n  const closeAndDismiss = useLastCallback((force?: boolean) => {\n    if (!force && disableClickDismiss) return;\n    setIsOpen(false);\n    setTimeout(handleDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    if (dismissAction) {\n      // @ts-ignore\n      actions[dismissAction.action](dismissAction.payload);\n    }\n  });\n\n  const handleActionClick = useLastCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    if (disableClickDismiss) {\n      setIsOpen(false);\n      setTimeout(handleDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    }\n    closeAndDismiss();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    closeAndDismiss();\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(() => closeAndDismiss(true), duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, cacheBreaker]); // Reset timer if `cacheBreaker` changes\n\n  const handleMouseEnter = useLastCallback(() => {\n    if (disableClickDismiss) return;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    if (disableClickDismiss) return;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  });\n\n  const renderedTitle = useMemo(() => {\n    if (!title) return undefined;\n    if (isLangFnParam(title)) {\n      return lang.with(title);\n    }\n\n    return renderText(title, ['simple_markdown', 'emoji', 'br', 'links']);\n  }, [lang, title]);\n\n  const renderedMessage = useMemo(() => {\n    if (isLangFnParam(message)) {\n      return lang.with(message);\n    }\n\n    if (typeof message === 'string') {\n      return renderText(message, ['simple_markdown', 'emoji', 'br', 'links']);\n    }\n\n    return message;\n  }, [lang, message]);\n\n  const renderedActionText = useMemo(() => {\n    if (!actionText) return undefined;\n    if (isLangFnParam(actionText)) {\n      return lang.with(actionText);\n    }\n\n    return actionText;\n  }, [lang, actionText]);\n\n  const renderedIcon = useMemo(() => {\n    if (customEmojiIconId) {\n      return (\n        <CustomEmoji\n          className=\"notification-emoji-icon\"\n          forceAlways\n          size={CUSTOM_EMOJI_SIZE}\n          documentId={customEmojiIconId}\n        />\n      );\n    }\n\n    if (shouldUseCustomIcon) {\n      if (icon === 'star') {\n        return (\n          <StarIcon type=\"gold\" className={buildClassName('notification-icon')} size=\"adaptive\" />\n        );\n      }\n    }\n    return <Icon name={icon || 'info-filled'} className=\"notification-icon\" />;\n  }, [customEmojiIconId, icon, shouldUseCustomIcon]);\n\n  return (\n    <Portal className=\"Notification-container\" containerSelector={containerSelector}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {renderedIcon}\n        <div className=\"content\">\n          {Boolean(renderedTitle) && (\n            <div className=\"notification-title\">{renderedTitle}</div>\n          )}\n          {renderedMessage}\n        </div>\n        {Boolean(renderedActionText) && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleActionClick}\n            className=\"notification-button\"\n          >\n            {renderedActionText}\n          </Button>\n        )}\n        {shouldShowTimer && (\n          <RoundTimer className=\"notification-timer\" key={cacheBreaker} duration={Math.ceil(duration / 1000)} />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import React from '@teact';\nimport type { ElementRef, FC, TeactNode } from '../../lib/teact/teact';\nimport { useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport RippleEffect from './RippleEffect';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: IconName;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: ElementRef<HTMLDivElement>;\n  buttonRef?: ElementRef<HTMLDivElement | HTMLAnchorElement>;\n  icon?: IconName;\n  iconClassName?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: IconName;\n  secondaryIconClassName?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  withPrimaryColor?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  allowSelection?: boolean;\n  withColorTransition?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  menuBubbleClassName?: string;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n  nonInteractive?: boolean;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  iconClassName,\n  leftElement,\n  buttonClassName,\n  menuBubbleClassName,\n  secondaryIcon,\n  secondaryIconClassName,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  withPrimaryColor,\n  multiline,\n  isStatic,\n  allowSelection,\n  withColorTransition,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n  nonInteractive,\n}) => {\n  let containerRef = useRef<HTMLDivElement>();\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useOldLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    allowSelection && 'allow-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuAnchor && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    withPrimaryColor && 'primary',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n    withColorTransition && 'with-color-transition',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {leftElement}\n        {icon && (\n          <Icon name={icon} className={buildClassName('ListItem-main-icon', iconClassName)} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {secondaryIcon && (\n          <Button\n            nonInteractive={nonInteractive}\n            className={buildClassName('secondary-icon', secondaryIconClassName)}\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <Icon name={secondaryIcon} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"ListItem-context-menu with-menu-transitions\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n          bubbleClassName={menuBubbleClassName}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                <span className=\"list-item-ellipsis\">\n                  {renderText(action.title)}\n                </span>\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React from '@teact';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport { IS_ANDROID, IS_IOS } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: TeactNode;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  className?: string;\n  tabClassName?: string;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, onSwitchTab,\n  contextRootElementSelector, className, tabClassName,\n}) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const previousActiveTab = usePreviousDeprecated(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useOldLang();\n\n  return (\n    <div\n      className={buildClassName('TabList', 'no-scrollbar', className)}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id}\n          title={tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n          className={tabClassName}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import React from '@teact';\nimport type { ChangeEvent, MouseEventHandler } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  label?: TeactNode;\n  subLabel?: TeactNode;\n  value?: string;\n  checked?: boolean;\n  disabled?: boolean;\n  isCanCheckedInDisabled?: boolean;\n  isLink?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  withIcon?: boolean;\n  className?: string;\n  onlyInput?: boolean;\n  subLabelClassName?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSubLabelClick?: MouseEventHandler<HTMLSpanElement> | undefined;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  subLabelClassName,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  className,\n  onlyInput,\n  withIcon,\n  isLink,\n  onChange,\n  onSubLabelClick,\n  isCanCheckedInDisabled,\n}) => {\n  const lang = useOldLang();\n\n  const fullClassName = buildClassName(\n    'Radio',\n    className,\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    withIcon && 'with-icon',\n    isLoading && 'loading',\n    onlyInput && 'onlyInput',\n    Boolean(subLabel) && 'withSubLabel',\n    isCanCheckedInDisabled && 'canCheckedInDisabled',\n  );\n\n  return (\n    <label className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {Boolean(subLabel) && (\n          <span\n            className={buildClassName(subLabelClassName, 'subLabel', isLink ? 'subLabelLink' : undefined)}\n            dir={lang.isRtl ? 'auto' : undefined}\n            onClick={isLink ? onSubLabelClick : undefined}\n          >\n            {subLabel}\n          </span>\n        )}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import React from '@teact';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport { useRef } from '../../lib/teact/teact';\n\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../hooks/useShowTransition';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: ElementRef<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref: externalRef,\n}) => {\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const prevChildren = usePreviousDeprecated(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n\n  const { ref, shouldRender } = useShowTransition({\n    isOpen: isOpen && !isHidden,\n    ref: externalRef,\n    noMountTransition: isFirstRender && !shouldAnimateFirstRender,\n    className: isCustom ? false : undefined,\n    noCloseTransition,\n    withShouldRender: true,\n  });\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={className}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import React from '@teact';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { MouseButton } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Icon from '../common/icons/Icon';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: TeactNode;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  const tabRef = useRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuAnchor, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {typeof title === 'string' ? renderText(title) : title}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <Icon name=\"lock-badge\" className=\"blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { animate, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useDevicePixelRatio from '../../hooks/window/useDevicePixelRatio';\n\nimport Icon from '../common/icons/Icon';\n\nimport './ProgressSpinner.scss';\n\nconst SIZES = {\n  s: 42, m: 48, l: 54, xl: 52,\n};\nconst STROKE_WIDTH = 2;\nconst STROKE_WIDTH_XL = 3;\nconst PADDING = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\nconst GROW_DURATION = 600; // 0.6 s\nconst ROTATE_DURATION = 2000; // 2 s\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  rotationOffset?: number;\n  withColor?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  rotationOffset,\n  withColor,\n  onClick,\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const width = SIZES[size];\n  const progressRef = useStateRef(progress);\n\n  const dpr = useDevicePixelRatio();\n\n  const color = useDynamicColorListener(canvasRef, undefined, !withColor);\n\n  useEffect(() => {\n    let isFirst = true;\n    let growFrom = MIN_PROGRESS;\n    let growStartedAt: number | undefined;\n    let prevProgress: number | undefined;\n\n    animate(() => {\n      if (!canvasRef.current) {\n        return false;\n      }\n\n      if (progressRef.current !== prevProgress) {\n        growFrom = Math.min(Math.max(MIN_PROGRESS, prevProgress || 0), MAX_PROGRESS);\n        growStartedAt = Date.now();\n        prevProgress = progressRef.current;\n      }\n\n      const targetProgress = Math.min(Math.max(MIN_PROGRESS, progressRef.current), MAX_PROGRESS);\n      const t = Math.min(1, (Date.now() - growStartedAt!) / GROW_DURATION);\n      const animationFactor = timingFunctions.easeOutQuad(t);\n      const currentProgress = growFrom + (targetProgress - growFrom) * animationFactor;\n\n      drawSpinnerArc(\n        canvasRef.current,\n        width * dpr,\n        (size === 'xl' ? STROKE_WIDTH_XL : STROKE_WIDTH) * dpr,\n        color ?? 'white',\n        currentProgress,\n        dpr,\n        isFirst,\n        rotationOffset,\n      );\n\n      isFirst = false;\n\n      return currentProgress < 1;\n    }, requestMutation);\n  }, [progressRef, size, width, dpr, rotationOffset, color]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={onClick}\n    >\n      {!noCross && <Icon name=\"close\" />}\n      <canvas ref={canvasRef} className=\"ProgressSpinner_canvas\" style={`width: ${width}; height: ${width}px;`} />\n    </div>\n  );\n};\n\nfunction drawSpinnerArc(\n  canvas: HTMLCanvasElement,\n  size: number,\n  strokeWidth: number,\n  color: string,\n  progress: number,\n  dpr: number,\n  shouldInit = false,\n  rotationOffset?: number,\n) {\n  const centerCoordinate = size / 2;\n  const radius = (size - strokeWidth) / 2 - PADDING * dpr;\n  const offset = rotationOffset ?? (Date.now() % ROTATE_DURATION) / ROTATE_DURATION;\n  const startAngle = (2 * Math.PI) * offset;\n  const endAngle = startAngle + (2 * Math.PI) * progress;\n  const ctx = canvas.getContext('2d')!;\n\n  if (shouldInit) {\n    canvas.width = size;\n    canvas.height = size;\n\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = strokeWidth;\n  }\n\n  ctx.clearRect(0, 0, size, size);\n  ctx.beginPath();\n  ctx.arc(centerCoordinate, centerCoordinate, radius, startAngle, endAngle);\n  ctx.stroke();\n}\n\nexport default memo(ProgressSpinner);\n","import React from '@teact';\nimport type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Loading from './Loading';\nimport Transition from './Transition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLInputElement>;\n  children?: React.ReactNode;\n  resultsItemSelector?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  hasUpButton?: boolean;\n  hasDownButton?: boolean;\n  teactExperimentControlled?: boolean;\n  withBackIcon?: boolean;\n  onChange: (value: string) => void;\n  onStartBackspace?: NoneToVoidFunction;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onUpClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onDownClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onSpinnerClick?: NoneToVoidFunction;\n  onEnter?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  resultsItemSelector,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading = false,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  hasUpButton,\n  hasDownButton,\n  teactExperimentControlled,\n  withBackIcon,\n  onChange,\n  onStartBackspace,\n  onReset,\n  onFocus,\n  onBlur,\n  onClick,\n  onUpClick,\n  onDownClick,\n  onSpinnerClick,\n  onEnter,\n}) => {\n  let inputRef = useRef<HTMLInputElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n\n    if (!isInputFocused) {\n      handleFocus();\n    }\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    onFocus?.();\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    onBlur?.();\n  }\n\n  const handleKeyDown = useLastCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      if (onEnter) {\n        e.preventDefault();\n        onEnter();\n        return;\n      }\n\n      if (resultsItemSelector) {\n        const element = document.querySelector(resultsItemSelector) as HTMLElement;\n        if (element) {\n          element.focus();\n        }\n      }\n    }\n\n    if (resultsItemSelector && e.key === 'ArrowDown') {\n      const element = document.querySelector(resultsItemSelector) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n\n    if (e.key === 'Backspace' && e.currentTarget.selectionStart === 0 && e.currentTarget.selectionEnd === 0) {\n      onStartBackspace?.();\n    }\n  });\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      onClick={onClick}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(!isLoading && !withBackIcon)}\n        className=\"icon-container-left\"\n        slideClassName=\"icon-container-slide\"\n      >\n        {isLoading && !withBackIcon ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : withBackIcon ? (\n          <Icon name=\"arrow-left\" className=\"back-icon\" onClick={onReset} />\n        ) : (\n          <Icon name=\"search\" className=\"search-icon\" />\n        )}\n      </Transition>\n      <div>{children}</div>\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || oldLang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        teactExperimentControlled={teactExperimentControlled}\n      />\n      {hasUpButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onUpClick}\n          disabled={!onUpClick}\n          ariaLabel={lang('AriaSearchOlderResult')}\n        >\n          <Icon name=\"up\" />\n        </Button>\n      )}\n      {hasDownButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onDownClick}\n          disabled={!onDownClick}\n          ariaLabel={lang('AriaSearchNewerResult')}\n        >\n          <Icon name=\"down\" />\n        </Button>\n      )}\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(isLoading)}\n        className=\"icon-container-right\"\n        slideClassName=\"icon-container-slide\"\n      >\n        {withBackIcon && isLoading ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : (\n          (value || canClose) && onReset && (\n            <Button\n              round\n              size=\"tiny\"\n              color=\"translucent\"\n              onClick={onReset}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          )\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"axfkbhWJ\"};","import React from '@teact';\nimport type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Icon from '../common/icons/Icon';\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <Icon name=\"camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} draggable={false} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","import React from '@teact';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { openSystemFilesDialog } from '../../util/systemFilesDialog';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: ElementRef<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    openSystemFilesDialog('image/png, image/jpeg', (event) => {\n      const target = event.target as HTMLInputElement;\n      if (!target?.files?.[0]) {\n        return;\n      }\n      setSelectedFile(target.files[0]);\n    }, true);\n  }, []);\n\n  return (\n    <>\n      <input ref={inputRef} className={styles.input} onClick={handleClick} />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","import React from '@teact';\nimport type { UIEvent } from 'react';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { LoadMoreDirection } from '../../types';\n\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID } from '../../util/browser/windowEnvironment';\nimport buildStyle from '../../util/buildStyle';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce } from '../../util/schedulers';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  scrollContainerClosest?: string;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onWheel?: (e: React.WheelEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  scrollContainerClosest,\n  onLoadMore,\n  onScroll,\n  onWheel,\n  onClick,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  let containerRef = useRef<HTMLDivElement>();\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n    if (!loadMoreBackwards || !scrollContainer) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = scrollContainer;\n    if (clientHeight && scrollHeight < clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards, scrollContainerClosest]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n\n    const container = containerRef.current!;\n\n    requestForcedReflow(() => {\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = scrollContainer;\n        const newAnchorTop = state.currentAnchor.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = scrollContainer;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(scrollContainer, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [\n    items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning,\n    scrollContainerClosest,\n  ]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const scrollContainer = scrollContainerClosest\n        ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n        : containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = scrollContainer;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n    if (!scrollContainer) return undefined;\n\n    const handleNativeScroll = (e: Event) => handleScroll(e as unknown as UIEvent<HTMLDivElement>);\n\n    scrollContainer.addEventListener('scroll', handleNativeScroll);\n\n    return () => {\n      scrollContainer.removeEventListener('scroll', handleNativeScroll);\n    };\n  }, [handleScroll, scrollContainerClosest]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onWheel={onWheel}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onClick={onClick}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Y3ZoW17O\",\"default\":\"DWjOG2Ze\",\"alternate\":\"Lq67O2D2\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = buildStyle(\n    forceAspectRatio && aspectRatio,\n    Boolean(width) && `width: ${width}px`,\n    !forceAspectRatio && Boolean(height) && `height: ${height}px`,\n  );\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <Icon name=\"down\" />\n      Show\n      {' '}\n      {count}\n      {' '}\n      more\n      {' '}\n      {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"h039vb1K\",\"thin\":\"NGKaFgra\",\"thick\":\"_BdnjPEa\"};","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'thin' | 'thick';\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className, size = 'thin' }) => {\n  return (\n    <div className={buildClassName(styles.root, styles[size], className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import React from '@teact';\nimport { type FC, memo, useEffect } from '../../lib/teact/teact';\n\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\n\ntype OwnProps = {\n  langKey: string;\n  endsAt: number;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 500; // Sometimes second gets skipped if using 1000\n\nconst TextTimer: FC<OwnProps> = ({ langKey, endsAt, onEnd }) => {\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const serverTime = getServerTime();\n  const isActive = serverTime < endsAt;\n  useInterval(forceUpdate, isActive ? UPDATE_FREQUENCY : undefined);\n\n  useEffect(() => {\n    if (!isActive) {\n      onEnd?.();\n    }\n  }, [isActive, onEnd]);\n\n  if (!isActive) return undefined;\n\n  const timeLeft = endsAt - serverTime;\n  const time = formatMediaDuration(timeLeft);\n\n  const timeParts = time.split(':');\n  const timeCounter = (\n    <span style=\"font-variant-numeric: tabular-nums;\">\n      {timeParts.map((part, index) => (\n        <>\n          {index > 0 && ':'}\n          <AnimatedCounter key={index} text={part} />\n        </>\n      ))}\n    </span>\n  );\n\n  const isTypedKey = langKey === 'UnlockTimerPublicPostsSearch';\n\n  if (isTypedKey) {\n    return (\n      <span>\n        {lang(langKey, { time: timeCounter }, { withNodes: true })}\n      </span>\n    );\n  }\n\n  return (\n    <span>\n      {oldLang(langKey, time)}\n    </span>\n  );\n};\n\nexport default memo(TextTimer);\n","import React from '@teact';\nimport type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import React from '@teact';\nimport type { ChangeEvent } from 'react';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: ElementRef<HTMLSelectElement>;\n  hasArrow?: boolean;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","import React from '@teact';\nimport {\n  memo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStarsAmount, ApiTonAmount } from '../../api/types';\n\nimport {\n  TON_USD_RATE_DEFAULT,\n} from '../../config';\nimport { formatStarsAmount } from '../../global/helpers/payments';\nimport buildClassName from '../../util/buildClassName';\nimport { convertTonFromNanos, convertTonToUsd, formatCurrencyAsString } from '../../util/formatCurrency';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from './Link';\n\nimport styles from './ModalStarBalanceBar.module.scss';\n\nexport type OwnProps = {\n  onCloseAnimationEnd?: () => void;\n  isModalOpen?: true;\n  currency?: 'TON' | 'XTR';\n};\n\nexport type StateProps = {\n  starBalance?: ApiStarsAmount;\n  tonBalance?: ApiTonAmount;\n  tonUsdRate: number;\n};\n\nfunction ModalStarBalanceBar({\n  starBalance,\n  tonBalance,\n  tonUsdRate,\n  isModalOpen,\n  onCloseAnimationEnd,\n  currency,\n}: StateProps & OwnProps) {\n  const {\n    openStarsBalanceModal,\n  } = getActions();\n\n  const lang = useLang();\n  const isTonMode = currency === 'TON';\n  const currentBalance = isTonMode ? tonBalance : starBalance;\n  const isOpen = isModalOpen ? Boolean(currentBalance) : false;\n\n  const {\n    ref,\n    shouldRender,\n  } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    withShouldRender: true,\n  });\n\n  const handleGetMoreStars = useLastCallback(() => {\n    openStarsBalanceModal(isTonMode ? { currency: 'TON' } : {});\n  });\n\n  if (!shouldRender || !currentBalance) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root)}\n      ref={ref}\n    >\n      <div>\n        {isTonMode ? (\n          lang('ModalStarsBalanceBarDescription', {\n            stars: formatTonAsIcon(lang, convertTonFromNanos(currentBalance.amount), {\n              className: styles.starIcon,\n            }),\n          }, {\n            withNodes: true,\n            withMarkdown: true,\n          })\n        ) : (\n          lang('ModalStarsBalanceBarDescription', {\n            stars: formatStarsAsIcon(lang, formatStarsAmount(lang, currentBalance as ApiStarsAmount), {\n              className: styles.starIcon,\n            }),\n          }, {\n            withNodes: true,\n            withMarkdown: true,\n          })\n        )}\n      </div>\n      <div>\n        {isTonMode && (\n          <div className={styles.tonInUsdDescription} style=\"color: var(--color-text-secondary)\">\n            {`≈ ${formatCurrencyAsString(\n              convertTonToUsd((currentBalance as ApiTonAmount).amount, tonUsdRate, true),\n              'USD',\n              lang.code,\n            )}`}\n          </div>\n        )}\n        {!isTonMode && (\n          <Link isPrimary onClick={handleGetMoreStars}>\n            {lang('GetMoreStarsLinkText')}\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      stars,\n      ton,\n    } = global;\n\n    return {\n      starBalance: stars?.balance,\n      tonBalance: ton?.balance,\n      tonUsdRate: global.appConfig?.tonUsdRate || TON_USD_RATE_DEFAULT,\n    };\n  },\n)(ModalStarBalanceBar));\n","import React from '@teact';\nimport { memo, useMemo, useRef, useState } from '../../lib/teact/teact';\n\nimport buildStyle from '../../util/buildStyle';\nimport getPointerPosition from '../../util/events/getPointerPosition';\nimport { blobToFile } from '../../util/files';\nimport { clamp } from '../../util/math';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport RangeSlider from './RangeSlider';\n\nimport styles from './ImageCropper.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  image?: HTMLImageElement;\n  maxOutputSize: number;\n  minOutputSize: number;\n};\n\nconst PREVIEW_SIZE = 400;\nconst MIN_ZOOM = 100;\nconst MAX_ZOOM = 200;\nconst CROP_AREA_INSET = 0.125 * REM;\nconst MODAL_INLINE_PADDING = REM * 2;\n\nconst ImageCropper = ({\n  onChange,\n  image,\n  maxOutputSize,\n  minOutputSize,\n}: OwnProps) => {\n  const [imagePosition, setImagePosition] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(MIN_ZOOM);\n  const isDragging = useRef(false);\n  const lastMousePosition = useRef({ x: 0, y: 0 });\n  const lastImagePosition = useRef({ x: 0, y: 0 });\n\n  const { width: windowWidth } = useWindowSize();\n  const previewContainerSize = Math.min(PREVIEW_SIZE, windowWidth - MODAL_INLINE_PADDING * 2);\n  const scaleFactor = image\n    ? Math.max(\n      previewContainerSize / image.width,\n      previewContainerSize / image.height,\n    ) : 1;\n  const zoomFactor = scaleFactor * zoom / 100;\n\n  const previewImageSize = useMemo(() => {\n    if (!image) return { width: 0, height: 0 };\n    return {\n      width: image.width * zoomFactor,\n      height: image.height * zoomFactor,\n    };\n  }, [image, zoomFactor]);\n\n  const clampPosition = (x: number, y: number, previewSize: { width: number; height: number }) => {\n    const radius = previewContainerSize / 2;\n    const imgHalfWidth = previewSize.width / 2;\n    const imgHalfHeight = previewSize.height / 2;\n\n    const maxOffsetX = Math.max(0, imgHalfWidth - radius);\n    const maxOffsetY = Math.max(0, imgHalfHeight - radius);\n\n    return {\n      x: clamp(x, -maxOffsetX, maxOffsetX),\n      y: clamp(y, -maxOffsetY, maxOffsetY),\n    };\n  };\n\n  const startDrag = (e: any) => {\n    isDragging.current = true;\n    lastMousePosition.current = getPointerPosition(e);\n    lastImagePosition.current = { ...imagePosition };\n    document.addEventListener('mousemove', moveDrag);\n    document.addEventListener('touchmove', moveDrag);\n    document.addEventListener('mouseup', endDrag);\n    document.addEventListener('touchend', endDrag);\n  };\n  const moveDrag = useLastCallback((e: any) => {\n    if ('touches' in e && e.touches.length > 1) return;\n    if (!isDragging.current) return;\n    const { x: mouseX, y: mouseY } = getPointerPosition(e);\n    const deltaX = mouseX - lastMousePosition.current.x;\n    const deltaY = mouseY - lastMousePosition.current.y;\n    const newPosition = clampPosition(\n      lastImagePosition.current.x + deltaX,\n      lastImagePosition.current.y + deltaY,\n      previewImageSize,\n    );\n    setImagePosition(newPosition);\n  });\n  const endDrag = useLastCallback(() => {\n    isDragging.current = false;\n    document.removeEventListener('mousemove', moveDrag);\n    document.removeEventListener('touchmove', moveDrag);\n    document.removeEventListener('mouseup', endDrag);\n    document.removeEventListener('touchend', endDrag);\n  });\n\n  const handleZoomChange = useLastCallback((newZoom: number) => {\n    const newZoomFactor = scaleFactor * newZoom / 100;\n    const newPreviewImageSize = {\n      width: image!.width * newZoomFactor,\n      height: image!.height * newZoomFactor,\n    };\n\n    const ratio = newZoom / zoom;\n    const newPosition = clampPosition(\n      imagePosition.x * ratio,\n      imagePosition.y * ratio,\n      newPreviewImageSize,\n    );\n\n    setZoom(newZoom);\n    setImagePosition(newPosition);\n  });\n\n  const handleCrop = () => {\n    if (!image) return;\n\n    const cropSize = previewContainerSize / zoomFactor;\n    const cropX = (image.width / 2) - (cropSize / 2) - (imagePosition.x / zoomFactor);\n    const cropY = (image.height / 2) - (cropSize / 2) - (imagePosition.y / zoomFactor);\n\n    const outputSize = Math.min(maxOutputSize, Math.max(minOutputSize, cropSize));\n\n    const canvas = document.createElement('canvas');\n    canvas.width = outputSize;\n    canvas.height = outputSize;\n    const ctx = canvas.getContext('2d')!;\n    ctx.drawImage(\n      image,\n      cropX, cropY,\n      cropSize, cropSize,\n      0, 0,\n      outputSize, outputSize,\n    );\n    canvas.toBlob((blob) => {\n      if (blob) onChange(blobToFile(blob, 'avatar.jpg'));\n    }, 'image/jpeg');\n  };\n\n  if (!image) return undefined;\n\n  const imageLeft = (previewContainerSize - previewImageSize.width) / 2 + imagePosition.x;\n  const imageTop = (previewContainerSize - previewImageSize.height) / 2 + imagePosition.y;\n  const backgroundImageStyle = buildStyle(\n    `width: ${previewImageSize.width}px`,\n    `height: ${previewImageSize.height}px`,\n    `left: ${imageLeft}px`,\n    `top: ${imageTop}px`,\n  );\n\n  const foregroundImageStyle = buildStyle(\n    `width: ${previewImageSize.width}px`,\n    `height: ${previewImageSize.height}px`,\n    `left: ${imageLeft - CROP_AREA_INSET}px`,\n    `top: ${imageTop - CROP_AREA_INSET}px`,\n  );\n\n  return (\n    <div>\n      <div\n        className={styles.previewContainer}\n        style={buildStyle(\n          `width: ${previewContainerSize}px`,\n          `height: ${previewContainerSize}px`,\n        )}\n      >\n        <img\n          src={image.src}\n          className={styles.backgroundImage}\n          style={backgroundImageStyle}\n          draggable={false}\n          onMouseDown={startDrag}\n          onTouchStart={startDrag}\n          alt=\"\"\n          role=\"presentation\"\n        />\n        <div className={styles.previewMask} />\n        <div className={styles.cropArea}>\n          <img\n            src={image.src}\n            className={styles.foregroundImage}\n            style={foregroundImageStyle}\n            draggable={false}\n            alt=\"\"\n            role=\"presentation\"\n          />\n        </div>\n      </div>\n      <div className={styles.bottomControls}>\n        <RangeSlider\n          className={styles.zoomSlider}\n          min={MIN_ZOOM}\n          max={MAX_ZOOM}\n          value={zoom}\n          onChange={handleZoomChange}\n        />\n        <Button className={styles.confirmButton} round color=\"primary\" onClick={handleCrop} ariaLabel=\"Crop\">\n          <Icon name=\"check\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ImageCropper);\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { useRef } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default ResponsiveHoverButton;\n","import React from '@teact';\nimport {\n  memo,\n} from '../../lib/teact/teact';\n\nimport useImageLoader from '../../hooks/useImageLoader';\nimport useLang from '../../hooks/useLang';\n\nimport ImageCropper from './ImageCropper';\nimport Modal from './Modal';\n\nimport './CropModal.scss';\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst MAX_OUTPUT_SIZE = 1024;\nconst MIN_OUTPUT_SIZE = 256;\n\nconst CropModal = ({ file, onChange, onClose }: OwnProps) => {\n  const lang = useLang();\n  const { image } = useImageLoader(file);\n  const isOpen = Boolean(file) && Boolean(image);\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('CropperTitle')}\n      className=\"CropModal\"\n      hasCloseButton\n      isCondensedHeader\n    >\n      <ImageCropper\n        onChange={onChange}\n        image={image}\n        maxOutputSize={MAX_OUTPUT_SIZE}\n        minOutputSize={MIN_OUTPUT_SIZE}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eldglPwL\",\"svg\":\"xhUfxjkV\",\"circle\":\"hsaty2zA\"};","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport getPointerPosition from '../../util/events/getPointerPosition';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\n\nimport styles from './Draggable.module.scss';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getPointerPosition(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getPointerPosition(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <Icon name=\"sort\" className={styles.icon} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n","import React from '@teact';\nimport type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { unique } from '../../util/iteratees';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n  nestedOptions?: IRadioOption[];\n  user?: ApiUser;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected: string[];\n  disabled?: boolean;\n  nestedCheckbox?: boolean;\n  loadingOptions?: string[];\n  isRound?: boolean;\n  onChange: (value: string[]) => void;\n  onClickLabel?: (e: React.MouseEvent, value?: string) => void;\n  className?: string;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected,\n  disabled,\n  nestedCheckbox,\n  loadingOptions,\n  isRound,\n  onChange,\n  onClickLabel,\n  className,\n}) => {\n  const handleChange = useLastCallback((event: ChangeEvent<HTMLInputElement>, nestedOptionList?: IRadioOption[]) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n\n    if (checked) {\n      newValues = unique([...selected, value]);\n      nestedOptionList?.forEach((nestedOption) => {\n        if (!newValues.includes(nestedOption.value)) {\n          newValues.push(nestedOption.value);\n        }\n      });\n    } else {\n      newValues = selected.filter((v) => v !== value);\n      if (nestedOptionList) {\n        newValues = newValues.filter((v) => !nestedOptionList.some((nestedOption) => nestedOption.value === v));\n      }\n    }\n    onChange(newValues);\n  });\n  const getCheckedNestedCount = useLastCallback((nestedOptions: IRadioOption[]) => {\n    const checkedCount = nestedOptions?.filter((nestedOption) => selected.includes(nestedOption.value)).length;\n    return checkedCount > 0 ? checkedCount : nestedOptions.length;\n  });\n\n  return (\n    <div id={id} className={buildClassName('radio-group', className)}>\n      {options.map((option) => {\n        return (\n          <Checkbox\n            label={option.label}\n            subLabel={option.subLabel}\n            value={option.value}\n            user={option.user}\n            checked={selected?.indexOf(option.value) !== -1}\n            disabled={option.disabled || disabled}\n            isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n            onChange={handleChange}\n            onClickLabel={onClickLabel}\n            nestedCheckbox={nestedCheckbox}\n            nestedCheckboxCount={getCheckedNestedCount(option.nestedOptions ?? [])}\n            nestedOptionList={option.nestedOptions}\n            values={selected}\n            isRound={isRound}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","// extracted by mini-css-extract-plugin\nexport default {\"separator\":\"LxlpQKLr\"};","import React from '@teact';\nimport { memo, useEffect, useState } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatCountdownShort } from '../../util/dates/dateFormat';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\n\nimport styles from './RoundTimer.module.scss';\n\ntype OwnProps = {\n  duration: number;\n  className?: string;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 1000;\nconst TIMER_RADIUS = 14;\n\nconst RoundTimer = ({ duration, className, onEnd }: OwnProps) => {\n  const [timeLeft, setTimeLeft] = useState(duration);\n  const lang = useOldLang();\n\n  useInterval(\n    () => setTimeLeft((prev) => prev - 1),\n    timeLeft > 0 ? UPDATE_FREQUENCY : undefined,\n  );\n\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      onEnd?.();\n    }\n  }, [timeLeft, onEnd]);\n\n  useEffect(() => {\n    setTimeLeft(duration);\n  }, [duration]);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.svg} width=\"32px\" height=\"32px\">\n        <circle\n          cx=\"16\"\n          cy=\"16\"\n          r={TIMER_RADIUS}\n          transform=\"rotate(-90, 16, 16)\"\n          pathLength=\"100\"\n          stroke-dasharray=\"100\"\n          stroke-dashoffset={100 - ((timeLeft - 1) / duration) * 100} // Show it one step further due to animation\n          className={styles.circle}\n        />\n      </svg>\n      <AnimatedCounter className={styles.text} text={formatCountdownShort(lang, timeLeft * 1000)} />\n    </div>\n  );\n};\n\nexport default memo(RoundTimer);\n","import React from '@teact';\nimport type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => TeactNode;\n  onChange: (value: number) => void;\n  isCenteredLayout?: boolean;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  readOnly,\n  bold,\n  className,\n  renderValue,\n  onChange,\n  isCenteredLayout,\n}) => {\n  const lang = useOldLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    readOnly && 'readOnly',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  function renderTopRow() {\n    if (isCenteredLayout) {\n      return (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {!options && (\n            <>\n              <span className=\"value-min\" dir=\"auto\">{min}</span>\n              <span className=\"label\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n              <span className=\"value-max\" dir=\"auto\">{max}</span>\n            </>\n          )}\n        </div>\n      );\n    }\n\n    if (!label) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"label\" dir=\"auto\">{label}</span>\n        {!options && (\n          <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={mainClassName}>\n      {renderTopRow()}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","import React from '@teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './Separator.module.scss';\n\ntype OwnProps = {\n  children?: React.ReactNode;\n  className?: string;\n};\n\nfunction Separator({ children, className }: OwnProps) {\n  const lang = useOldLang();\n\n  return (\n    <div\n      dir={lang.isRtl ? 'rtl' : undefined}\n      className={buildClassName(styles.separator, className)}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Separator;\n","import React from '@teact';\nimport type { ChangeEvent, FormEvent } from 'react';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  let textareaRef = useRef<HTMLTextAreaElement>();\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useOldLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  const resizeHeight = useLastCallback((element: HTMLTextAreaElement) => {\n    requestMutation(() => {\n      element.style.height = '0';\n      requestForcedReflow(() => {\n        const newHeight = element.scrollHeight;\n        return () => {\n          element.style.height = `${newHeight}px`;\n        };\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    resizeHeight(textarea);\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    const target = e.currentTarget;\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = target.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      target.value = target.value.replace(/\\n/g, ' ');\n      target.selectionEnd = previousSelectionEnd;\n    }\n    resizeHeight(target);\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import React from '@teact';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n  title?: string;\n  noDefaultTitle?: boolean;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: TeactNode;\n  confirmIsDestructive?: boolean;\n  isConfirmDisabled?: boolean;\n  isOnlyConfirm?: boolean;\n  areButtonsInColumn?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  confirmHandler: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  title,\n  noDefaultTitle,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmIsDestructive,\n  isConfirmDisabled,\n  isOnlyConfirm,\n  areButtonsInColumn,\n  className,\n  children,\n  confirmHandler,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n\n  const containerRef = useRef<HTMLDivElement>();\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm', className)}\n      title={(title || (!noDefaultTitle ? lang('Telegram') : undefined))}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n          disabled={isConfirmDisabled}\n        >\n          {confirmLabel}\n        </Button>\n        {!isOnlyConfirm && <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kWQHzIMD\",\"isDragging\":\"k0c5WDAy\",\"knob\":\"UpzQzcvs\",\"icon\":\"JIThxQAL\"};"],"names":["memo","PlaceholderChatInfo","React","className","buildClassName","styles","value","root","filler","widget","RadioGroup","id","name","options","selected","disabled","loadingOption","onChange","onClickAction","subLabelClassName","isLink","withIcon","subLabel","handleChange","useCallback","event","currentTarget","onSubLabelClick","useLastCallback","map","option","Radio","label","checked","hidden","isCanCheckedInDisabled","isLoading","undefined","Badge","text","isAlternateColor","ShowTransition","alternate","isOpen","Boolean","AnimatedCounter","ANIMATION_DURATION","Modal","dialogRef","title","contentClassName","headerClassName","isSlim","header","hasCloseButton","hasAbsoluteCloseButton","absoluteCloseButtonColor","noBackdrop","noBackdropClose","children","style","dialogStyle","isLowStackPriority","dialogContent","onClose","onCloseAnimationEnd","onEnter","withBalanceBar","isCondensedHeader","currencyInBalanceBar","ref","modalRef","shouldRender","useShowTransition","withShouldRender","withCloseButton","useEffect","disableDirectTextInput","enableDirectTextInput","handleEnter","e","preventDefault","captureKeyboardListeners","onEsc","current","trapFocus","useHistoryBack","isActive","onBack","useLayoutEffectWithPrevDeps","prevIsOpen","document","body","classList","toggle","beginHeavyAnimation","remove","lang","useOldLang","fullClassName","Portal","tabIndex","role","ModalStarBalanceBar","isModalOpen","currency","onClick","closeButton","Button","round","color","size","ariaLabel","Icon","renderHeader","freezeWhenClosed","RangeSliderWithMarks","marks","rangeCount","sliderRef","useRef","rangeCountIndex","useMemo","indexOf","rangeValue","toString","useLayoutEffect","fillPercentage","length","thumbOffset","setProperty","mark","index","isFilled","key","type","min","max","parseInt","target","newValue","step","FloatingActionButton","isShown","buttonClassName","isRtl","DEFAULT_DURATION","CUSTOM_EMOJI_SIZE","REM","Notification","notification","actions","getActions","useLang","localId","message","action","actionText","cacheBreaker","disableClickDismiss","dismissAction","duration","icon","shouldUseCustomIcon","customEmojiIconId","shouldShowTimer","containerSelector","setIsOpen","useState","timerRef","transitionClassNames","useShowTransitionDeprecated","handleDismiss","dismissNotification","closeAndDismiss","force","setTimeout","ANIMATION_END_DELAY","payload","handleActionClick","Array","isArray","forEach","cb","handleClick","captureEscKeyListener","window","clearTimeout","handleMouseEnter","handleMouseLeave","renderedTitle","isLangFnParam","with","renderText","renderedMessage","renderedActionText","renderedIcon","CustomEmoji","forceAlways","documentId","StarIcon","onMouseEnter","onMouseLeave","RoundTimer","Math","ceil","ListItem","buttonRef","iconClassName","leftElement","menuBubbleClassName","secondaryIcon","secondaryIconClassName","rightElement","allowDisabledClick","ripple","narrow","inactive","focus","destructive","withPrimaryColor","multiline","isStatic","allowSelection","withColorTransition","contextActions","withPortalForMenu","href","onMouseDown","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","nonInteractive","containerRef","isTouched","markIsTouched","unmarkIsTouched","useFlag","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","closest","getMenuElement","querySelector","getLayout","withPortal","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","Main","Auxiliary","IS_TOUCH_ENV","requestMeasure","handleSecondaryIconClick","handleMouseDown","handleSecondaryIconMouseDown","useFastClick","stopPropagation","Secondary","ButtonElementTag","dir","RippleEffect","Menu","anchor","autoClose","bubbleClassName","MenuSeparator","MenuItem","handler","TAB_SCROLL_THRESHOLD_PX","SCROLL_DURATION","IS_IOS","IS_ANDROID","TabList","tabs","activeTab","onSwitchTab","contextRootElementSelector","tabClassName","previousActiveTab","usePreviousDeprecated","useHorizontalScroll","container","scrollWidth","offsetWidth","scrollLeft","activeTabElement","childNodes","offsetLeft","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","abs","animateHorizontalScroll","tab","i","Tab","isBlocked","badgeCount","isBadgeActive","onlyInput","Spinner","isHidden","isCustom","noCloseTransition","shouldAnimateFirstRender","externalRef","prevChildren","fromChildrenRef","isFirstRender","noMountTransition","classNames","active","badgeActive","tabRef","add","tabEl","prevTabEl","parentElement","contains","requestMutation","platformEl","prevPlatformEl","shiftLeft","scaleFactor","clientWidth","transform","requestForcedReflow","forceReflow","SIZES","s","m","l","xl","MIN_PROGRESS","ProgressSpinner","progress","square","transparent","noCross","rotationOffset","withColor","canvasRef","width","progressRef","useStateRef","dpr","useDevicePixelRatio","useDynamicColorListener","growStartedAt","prevProgress","isFirst","growFrom","animate","Date","now","targetProgress","t","animationFactor","timingFunctions","easeOutQuad","currentProgress","canvas","strokeWidth","shouldInit","centerCoordinate","radius","offset","startAngle","PI","endAngle","ctx","getContext","height","lineCap","strokeStyle","lineWidth","clearRect","beginPath","arc","stroke","drawSpinnerArc","SearchInput","resultsItemSelector","inputId","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","canClose","autoFocusSearch","hasUpButton","hasDownButton","teactExperimentControlled","withBackIcon","onStartBackspace","onReset","onFocus","onBlur","onUpClick","onDownClick","onSpinnerClick","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","blur","oldLang","handleFocus","handleKeyDown","element","selectionStart","selectionEnd","Transition","shouldCleanup","activeKey","Number","slideClassName","Loading","backgroundColor","onKeyDown","AvatarEditable","isForForum","currentAvatarBlobUrl","selectedFile","setSelectedFile","croppedBlobUrl","setCroppedBlobUrl","handleAvatarCrop","croppedImg","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","files","accept","src","draggable","alt","CropModal","file","SelectAvatar","openSystemFilesDialog","input","InfiniteScroll","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","scrollContainerClosest","onLoadMore","onScroll","onWheel","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","direction","LoadMoreDirection","Backwards","Forwards","scrollContainer","scrollHeight","clientHeight","state","newScrollTop","listItemElements","querySelectorAll","currentAnchor","from","includes","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","handleNativeScroll","addEventListener","removeEventListener","teactFastList","buildStyle","Skeleton","variant","animation","forceAspectRatio","inline","aspectRatio","ShowMoreButton","count","itemName","itemPluralName","isText","UPDATE_FREQUENCY","TextTimer","langKey","endsAt","onEnd","forceUpdate","useForceUpdate","serverTime","getServerTime","useInterval","timeLeft","time","formatMediaDuration","timeParts","split","timeCounter","part","withNodes","Switcher","noAnimation","onCheck","props","hasArrow","error","labelText","htmlFor","starBalance","tonBalance","tonUsdRate","openStarsBalanceModal","isTonMode","currentBalance","handleGetMoreStars","stars","formatTonAsIcon","convertTonFromNanos","amount","starIcon","formatStarsAsIcon","formatStarsAmount","withMarkdown","tonInUsdDescription","formatCurrencyAsString","convertTonToUsd","code","Link","isPrimary","withGlobal","global","ton","balance","appConfig","TON_USD_RATE_DEFAULT","PREVIEW_SIZE","MIN_ZOOM","MAX_ZOOM","CROP_AREA_INSET","MODAL_INLINE_PADDING","ImageCropper","image","maxOutputSize","minOutputSize","imagePosition","setImagePosition","x","y","zoom","setZoom","isDragging","lastMousePosition","lastImagePosition","windowWidth","useWindowSize","previewContainerSize","zoomFactor","previewImageSize","clampPosition","previewSize","imgHalfWidth","imgHalfHeight","maxOffsetX","maxOffsetY","clamp","startDrag","getPointerPosition","moveDrag","endDrag","touches","mouseX","mouseY","deltaX","deltaY","newPosition","handleZoomChange","newZoom","newZoomFactor","newPreviewImageSize","ratio","imageLeft","imageTop","backgroundImageStyle","foregroundImageStyle","previewContainer","backgroundImage","onTouchStart","previewMask","cropArea","foregroundImage","bottomControls","RangeSlider","zoomSlider","confirmButton","handleCrop","cropSize","cropX","cropY","outputSize","createElement","drawImage","toBlob","blob","blobToFile","BUTTON_ACTIVATE_DELAY","openTimeout","isFirstTimeActivation","ResponsiveHoverButton","onActivate","buttonProps","isMouseInside","_extends","MAX_OUTPUT_SIZE","MIN_OUTPUT_SIZE","useImageLoader","ZERO_POINT","Draggable","onDrag","onDragEnd","externalStyle","knobStyle","isDisabled","setState","origin","translation","handleMouseMove","handleMouseUp","cssStyles","knob","CheckboxGroup","nestedCheckbox","loadingOptions","isRound","onClickLabel","nestedOptionList","newValues","unique","nestedOption","push","filter","v","some","getCheckedNestedCount","nestedOptions","checkedCount","Checkbox","user","nestedCheckboxCount","values","TIMER_RADIUS","setTimeLeft","prev","svg","cx","cy","r","pathLength","circle","formatCountdownShort","readOnly","bold","renderValue","isCenteredLayout","mainClassName","trackWidth","Separator","separator","TextArea","success","inputMode","maxLength","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","resizeHeight","newHeight","textarea","previousSelectionEnd","replace","ConfirmDialog","noDefaultTitle","textParts","confirmLabel","confirmIsDestructive","isConfirmDisabled","isOnlyConfirm","areButtonsInColumn","confirmHandler","handleSelectWithEnter","useKeyboardListNavigation","textPart"],"sourceRoot":""}