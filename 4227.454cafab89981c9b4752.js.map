{"version":3,"file":"4227.454cafab89981c9b4752.js","mappings":"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","sources":["webpack://TelyAI/./src/hooks/useImageLoader.ts","webpack://TelyAI/./src/components/common/AnimatedCounter.tsx","webpack://TelyAI/./src/components/common/AnimatedCounter.module.scss?3640","webpack://TelyAI/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://TelyAI/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://TelyAI/./src/hooks/useSchedule.tsx","webpack://TelyAI/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://TelyAI/./src/components/common/PremiumProgress.module.scss?8969","webpack://TelyAI/./src/hooks/useResizeMessageObserver.ts","webpack://TelyAI/./src/hooks/schedulers/useTimeout.ts","webpack://TelyAI/./src/components/common/PasswordForm.tsx","webpack://TelyAI/./src/util/events/getPointerPosition.ts","webpack://TelyAI/./src/util/visibility/getOffsetToContainer.ts","webpack://TelyAI/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://TelyAI/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://TelyAI/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://TelyAI/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://TelyAI/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://TelyAI/./src/hooks/usePrevious.ts","webpack://TelyAI/./src/util/resolveTransitionName.ts","webpack://TelyAI/./src/components/middle/message/helpers/copyOptions.ts","webpack://TelyAI/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://TelyAI/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://TelyAI/./src/hooks/useHorizontalScroll.ts","webpack://TelyAI/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://TelyAI/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://TelyAI/./src/util/visibility/isElementInViewport.ts","webpack://TelyAI/./src/components/middle/message/reactions/Reactions.tsx","webpack://TelyAI/./src/hooks/useCanvasBlur.ts","webpack://TelyAI/./src/components/common/MediaSpoiler.tsx","webpack://TelyAI/./src/components/common/helpers/renderMessageText.ts","webpack://TelyAI/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://TelyAI/./src/hooks/useEnsureMessage.ts","webpack://TelyAI/./src/components/common/AvatarList.module.scss?00d4","webpack://TelyAI/./src/components/common/profile/RadialPatternBackground.tsx","webpack://TelyAI/./src/components/common/MediaSpoiler.module.scss?4929","webpack://TelyAI/./src/components/common/pickers/PeerPicker.tsx","webpack://TelyAI/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://TelyAI/./src/hooks/useRunDebounced.ts","webpack://TelyAI/./src/components/common/CalendarModal.async.tsx","webpack://TelyAI/./src/util/animateHorizontalScroll.ts","webpack://TelyAI/./src/util/objects/customPeer.ts","webpack://TelyAI/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://TelyAI/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://TelyAI/./src/components/common/AnimatedIconWithPreview.tsx","webpack://TelyAI/./src/hooks/useCustomBackground.ts","webpack://TelyAI/./src/components/common/pickers/PickerItem.tsx","webpack://TelyAI/./src/components/common/helpers/gifts.ts","webpack://TelyAI/./src/components/common/AvatarList.tsx","webpack://TelyAI/./src/components/common/PeerChip.module.scss?346e","webpack://TelyAI/./src/components/middle/message/MessageContextMenu.tsx","webpack://TelyAI/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://TelyAI/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://TelyAI/./src/util/scrollLock.ts","webpack://TelyAI/./src/components/common/PremiumProgress.tsx","webpack://TelyAI/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://TelyAI/./src/hooks/useFolderManager.ts","webpack://TelyAI/./src/hooks/useInputFocusOnOpen.ts","webpack://TelyAI/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://TelyAI/./src/components/common/AnimatedIconFromSticker.tsx","webpack://TelyAI/./src/components/common/helpers/sortChatIds.ts","webpack://TelyAI/./src/util/parseHtmlAsFormattedText.ts","webpack://TelyAI/./src/util/getMessageIdsForSelectedText.ts","webpack://TelyAI/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://TelyAI/./src/components/common/BadgeButton.module.scss?da7b","webpack://TelyAI/./src/components/common/BadgeButton.tsx","webpack://TelyAI/./src/util/animateScroll.ts","webpack://TelyAI/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://TelyAI/./src/components/common/PinMessageModal.async.tsx","webpack://TelyAI/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://TelyAI/./src/components/modals/prompt/PromptDialog.tsx","webpack://TelyAI/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://TelyAI/./src/components/middle/message/ContextMenuContainer.tsx","webpack://TelyAI/./src/components/common/PeerChip.tsx"],"sourcesContent":["import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { preloadImage } from '../util/files';\nimport useAsync from './useAsync';\n\nexport type UseImageLoaderResult = {\n  image?: HTMLImageElement;\n};\n\nexport default function useImageLoader(file?: Blob): UseImageLoaderResult {\n  const urlRef = useRef<string | undefined>();\n\n  const { result: image } = useAsync(() => {\n    if (!file) {\n      return Promise.resolve(undefined);\n    }\n\n    if (urlRef.current) {\n      URL.revokeObjectURL(urlRef.current);\n    }\n\n    const url = URL.createObjectURL(file);\n    urlRef.current = url;\n\n    return preloadImage(url);\n  }, [file]);\n\n  useEffect(() => {\n    return () => {\n      if (urlRef.current) {\n        URL.revokeObjectURL(urlRef.current);\n        urlRef.current = undefined;\n      }\n    };\n  }, []);\n\n  return { image };\n}\n","import React from '@teact';\nimport type { ElementRef, FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: ElementRef<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React from '@teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import React from '@teact';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import React from '@teact';\nimport { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import React from '@teact';\nimport {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { ElementRef } from '../lib/teact/teact';\nimport { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: ElementRef<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import React from '@teact';\nimport type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  const inputRef = useRef<HTMLInputElement>();\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getPointerPosition(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  if ('touches' in e) {\n    return {\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n    };\n  }\n\n  return {\n    x: e.clientX,\n    y: e.clientY,\n  };\n}\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement | null;\n  }\n\n  offsetTop -= container.clientTop;\n  offsetLeft -= container.clientLeft;\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import React from '@teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import type { AnimationLevel } from '../types';\n\nimport { ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN } from '../config.ts';\nimport { IS_ANDROID, IS_IOS } from './browser/windowEnvironment.ts';\n\nexport function resolveTransitionName(\n  name: 'slideOptimized' | 'slide' | 'layers',\n  animationLevel: AnimationLevel,\n  isDisabled = false,\n  isRtl = false,\n) {\n  if (isDisabled || animationLevel === ANIMATION_LEVEL_MIN) return 'none';\n\n  if (animationLevel === ANIMATION_LEVEL_MED) return 'slideFade';\n\n  return name === 'slideOptimized' ? (\n    isRtl ? 'slideOptimizedRtl' : 'slideOptimized'\n  ) : name === 'slide' ? (\n    isRtl ? 'slideRtl' : 'slide'\n  ) : (\n    IS_ANDROID ? 'slideFade' : IS_IOS ? 'slideLayers' : 'pushSlide'\n  );\n}\n","import copy from 'copy-to-clipboard';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getWebPagePhoto,\n  getWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport { selectChatTranslations } from '../../../../global/selectors';\nimport { IS_SAFARI } from '../../../../util/browser/windowEnvironment';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const { webPage } = statefulContent || {};\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getWebPageVideo(webPage) ? getWebPagePhoto(webPage) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          ) as string[];\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n    const global = getGlobal();\n    const { id: messageId, chatId } = message;\n    const chatTranslations = selectChatTranslations(global, chatId);\n    const { autoTranslateLanguage } = global.settings.byKey;\n    const messageTranslation = autoTranslateLanguage && messageId\n      ? chatTranslations?.byLangCode[autoTranslateLanguage]?.[messageId] : undefined;\n    const { isPending, text: translatedText } = messageTranslation || {};\n    if (translatedText && !isPending) {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            copy(translatedText.text);\n          }\n          afterEffect?.();\n        },\n      });\n    } else {\n      options.push({\n        label: getCopyLabel(hasSelection),\n        icon: 'copy',\n        handler: () => {\n          const messageIds = getMessageIdsForSelectedText();\n          if (messageIds?.length && onCopyMessages) {\n            onCopyMessages(messageIds);\n          } else if (hasSelection) {\n            document.execCommand('copy');\n          } else {\n            const clipboardText = renderMessageText(\n              { message, shouldRenderAsHtml: true },\n            );\n            if (clipboardText) {\n              copyHtmlToClipboard(\n                clipboardText.join(''),\n                getMessageTextWithSpoilers(message, statefulContent)!,\n              );\n            }\n          }\n\n          afterEffect?.();\n        },\n      });\n    }\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = selection?.anchorNode?.parentNode as HTMLElement;\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","import React from '@teact';\nimport { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n  const animationRef = useRef<Animation>();\n\n  const lang = useLang();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(lang, reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(lang, reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: ElementRef<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import React from '@teact';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n    openFrozenAccountModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/browser/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Icon from './icons/Icon';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  isNsfw?: boolean;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  isNsfw,\n  className,\n  width,\n  height,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n      {isNsfw && (\n        <span className={styles.nsfw}>\n          <Icon name=\"eye-crossed-outline\" className={styles.nsfwIcon} />\n          {lang('MediaSpoilerSensitive')}\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n}: {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import React from '@teact';\nimport {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  const containerRef = useRef<HTMLDivElement>();\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"nsfw\":\"FJGQoa6s\",\"nsfwIcon\":\"Y7JVRkxJ\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import React from '@teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getMainUsername, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  const inputRef = useRef<HTMLInputElement>();\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) {\n        return (\n          <div key={id}>\n            No peer or category with ID\n            {id}\n          </div>\n        );\n      }\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = getMainUsername(peer);\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n\n        onClick={() => handleItemClick(id)}\n\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","import React from '@teact';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById = new Map<string, VoidFunction>();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React from '@teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import React from '@teact';\nimport { type TeactNode } from '../../../lib/teact/teact';\n\nimport { IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {Boolean(inputElement) && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {Boolean(avatarElement) && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {Boolean(subtitle) && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canAppendTodoList?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onAppendTodoList?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  webPage,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  canAppendTodoList,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onAppendTodoList,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  const menuRef = useRef<HTMLDivElement>();\n  const scrollableRef = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: oldLang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, webPage, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? oldLang('SendAnotherGift')\n                : oldLang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{oldLang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{oldLang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {oldLang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {oldLang('Conversation.ContextViewReplies', repliesThreadInfo.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{oldLang('Edit')}</MenuItem>}\n        {canAppendTodoList && (\n          <MenuItem icon=\"add\" onClick={onAppendTodoList}>\n            {lang('MenuButtonAppendTodoList')}\n          </MenuItem>\n        )}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{oldLang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{oldLang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{oldLang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && (\n          <MenuItem icon=\"language\" onClick={onShowOriginal}>\n            {oldLang('ShowOriginalButton')}\n          </MenuItem>\n        )}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{oldLang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >\n            {oldLang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{oldLang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{oldLang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{oldLang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{oldLang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{oldLang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? oldLang('lng_context_cancel_download') : oldLang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{oldLang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{oldLang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{oldLang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{oldLang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(\n                  oldLang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'],\n                )}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(oldLang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? oldLang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : oldLang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? oldLang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : oldLang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","import React from '@teact';\nimport { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  const ref = useRef<HTMLButtonElement>();\n  const menuRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  const floatingBadgeRef = useRef<HTMLDivElement>();\n  const parentContainerRef = useRef<HTMLDivElement>();\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  AI_FOLDER_ID, ALL_FOLDER_ID, PRESET_FOLDER_ID, UNREAD_FOLDER_ID,\n} from '../config';\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback, addUnreadChatsByFolderIdCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds, getUnreadChatsByFolderId,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport { filterAITag, filterPresetTag } from '../components/chatAssistant/ai-chatfolders/tag-filter';\nimport { isChatBot } from '../components/chatAssistant/ai-chatfolders/util';\nimport { GLOBAL_SUMMARY_CHATID } from '../components/chatAssistant/variables';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  if (folderId === UNREAD_FOLDER_ID) {\n    return getUnreadChatsByFolderId()[ALL_FOLDER_ID];\n  }\n  if (folderId === PRESET_FOLDER_ID) {\n    return filterPresetTag(getOrderedIds(ALL_FOLDER_ID)?.filter((i) => !isChatBot(i)));\n  }\n  if (folderId === AI_FOLDER_ID) {\n    return filterAITag(getOrderedIds(ALL_FOLDER_ID)?.filter((i) => !isChatBot(i)));\n  }\n  if (folderId === ALL_FOLDER_ID) {\n    const res = getOrderedIds(folderId);\n    if (res && res?.indexOf(GLOBAL_SUMMARY_CHATID) < 0) {\n      res?.unshift(GLOBAL_SUMMARY_CHATID);\n    } else {\n      res?.sort((a, b) => (a === GLOBAL_SUMMARY_CHATID ? -1 : b === GLOBAL_SUMMARY_CHATID ? 1 : 0));\n    }\n\n    return res;\n  }\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n\nexport function useFolderManagerForUnreadChatsByFolder() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadChatsByFolderIdCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadChatsByFolderId();\n}\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: ElementRef<HTMLDivElement>;\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React from '@teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './browser/windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import React from '@teact';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n        && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hJUqHi4B\",\"clickable\":\"hjDEmFaT\"};","import React from '@teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './BadgeButton.module.scss';\n\ntype OwnProps = {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst BadgeButton = ({\n  children,\n  className,\n  onClick,\n  onMouseDown,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default BadgeButton;\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { IS_ANDROID } from './browser/windowEnvironment';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, clientHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React from '@teact';\nimport type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import React from '@teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport { IS_ANDROID, IS_IOS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const effectRef = useRef<HTMLDivElement>();\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React from '@teact';\nimport { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiWebPage,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  TODO_ITEMS_LIMIT,\n} from '../../../config';\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSavedDialogIdFromMessage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { selectMessageDownloadableMedia } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canSmartReply?: boolean;\n  canScheduleMeeting?:boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canAppendTodoList?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n  savedDialogId?: string;\n};\n\nconst selection = window.getSelection();\nconst UNQUOTABLE_OFFSET = -1;\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  webPage,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  canAppendTodoList,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  savedDialogId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n    openTodoListModal,\n    showNotification,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [selectionQuoteOffset, setSelectionQuoteOffset] = useState(UNQUOTABLE_OFFSET);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    const global = getGlobal();\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = selectMessageDownloadableMedia(global, msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text.replace(/\\u00A0/g, ' ');\n\n    const canQuote = selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text);\n    if (!canQuote) {\n      setSelectionQuoteOffset(UNQUOTABLE_OFFSET);\n      return;\n    }\n\n    setSelectionQuoteOffset(selectionRange.startOffset);\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = selectionQuoteOffset !== UNQUOTABLE_OFFSET && selectionRange\n      ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({\n        fromChatId: message.chatId, messageId: message.id, quoteText, quoteOffset: selectionQuoteOffset,\n      });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        quoteOffset: selectionQuoteOffset,\n        monoforumPeerId: savedDialogId,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    if (message.content.todo) {\n      openTodoListModal({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    } else {\n      setEditingId({ messageId: message.id });\n    }\n    closeMenu();\n  });\n\n  const handleAppendTodoList = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForAppendToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      openTodoListModal({\n        chatId: message.chatId,\n        messageId: message.id,\n        forNewTask: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    const global = getGlobal();\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = selectMessageDownloadableMedia(global, msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={selectionQuoteOffset !== UNQUOTABLE_OFFSET}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canAppendTodoList={canAppendTodoList}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        webPage={webPage}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        // onSmartReply={handleSmartReply}\n        // onScheduleMeet={handleScheduleMeeting}\n        onEdit={handleEdit}\n        onAppendTodoList={handleAppendTodoList}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={oldLang('lng_polls_stop_warning')}\n        confirmLabel={oldLang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n      && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !chat.isMonoforum\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    const savedDialogId = selectSavedDialogIdFromMessage(global, message);\n    const todoItemsMax = global.appConfig?.todoItemsMax || TODO_ITEMS_LIMIT;\n    const canAppendTodoList = message.content.todo?.todo.othersCanAppend\n      && message.content.todo?.todo.items?.length < todoItemsMax;\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canAppendTodoList,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n      savedDialogId,\n    };\n  },\n)(ContextMenuContainer));\n","import React from '@teact';\nimport type { TeactNode } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n\n  peerId?: string;\n\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n"],"names":["useImageLoader","file","urlRef","useRef","result","image","useAsync","Promise","resolve","undefined","current","URL","revokeObjectURL","url","createObjectURL","preloadImage","useEffect","ANIMATION_TIME","MAX_SIMULTANEOUS_ANIMATIONS","scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","AnimatedCounter","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","characters","useMemo","renderAnimatedCharacters","timeoutId","window","setTimeout","clearTimeout","React","buildClassName","styles","root","dir","memo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","characterContainer","character","characterOld","characterNew","ReadTimeMenuItem","message","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","getActions","lang","useOldLang","readDate","shouldRenderSkeleton","MenuItem","icon","item","Transition","name","activeKey","transition","Skeleton","skeleton","Boolean","formatDateAtTime","get","onClick","handleOpenModal","chatId","isReadDate","REACTION_SIZE","REM","ReactionSelectorCustomReaction","reaction","chosen","isReady","noAppearAnimation","style","isLocked","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","handleClick","useLastCallback","type","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","custom","customAnimated","visible","onMouseDown","onContextMenu","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","StarReaction","size","noLoop","CustomEmoji","documentId","Icon","lock","useSchedule","canScheduleUntilOnline","onCancel","openAt","onScheduled","setOnScheduled","useState","handleMessageSchedule","date","isWhenOnline","scheduledAt","Math","round","max","getTime","Date","now","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","requestCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","CalendarModal","isOpen","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onClose","onSubmit","onSecondButtonClick","ICON_SIZE","CENTER_ICON_MULTIPLIER","EFFECT_SIZE","CUSTOM_EMOJI_EFFECT_MULTIPLIER","MIN_PARTICLE_SIZE","ReactionAnimatedEmoji","containerId","effectSize","activeReactions","availableReactions","genericEffects","withEffects","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","isCustom","availableReaction","find","r","isSameReaction","centerIconId","centerIcon","id","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","available","emoticon","emoji","effectId","stickers","floor","random","isIntersecting","useIsIntersecting","mediaHashCenterIcon","getStickerHashById","mediaHashEffect","mediaDataCenterIcon","useMedia","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRender","shouldRenderEffect","transitionClassNames","animationClassNames","useShowTransitionDeprecated","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","useFlag","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","key","animatedIcon","roundToNearestEven","play","onLoad","onEnded","effect","CustomEmojiEffect","particleSize","withGlobal","global","genericEmojiEffects","reactions","selectTabState","selectPerformanceSettingsValue","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","entry","lastHeight","newHeight","contentRect","height","isAnimatingScroll","container","target","closest","beginHeavyAnimation","resizeDiff","offsetHeight","scrollHeight","scrollTop","throttledResize","useThrottledCallback","useResizeObserver","callback","delay","savedCallback","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","inputRef","isMobile","useAppLayout","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","tabIndex","value","onChange","e","MIN_PASSWORD_LENGTH","maxLength","role","title","Button","ripple","disabled","getPointerPosition","x","touches","clientX","y","clientY","getOffsetToContainer","element","offsetTop","offsetLeft","contains","offsetParent","clientTop","clientLeft","top","left","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","useMediaTransitionDeprecated","shouldApplySizeFix","shouldReplaceWithHeartIcon","src","blankUrl","alt","draggable","isSelectionRangeInsideMessage","range","ancestor","commonAncestorContainer","el","nodeType","Node","TEXT_NODE","parentNode","LastEditTimeMenuItem","editDate","usePrevious","prevRef","lastRef","resolveTransitionName","animationLevel","ANIMATION_LEVEL_MIN","ANIMATION_LEVEL_MED","IS_ANDROID","IS_IOS","getMessageCopyOptions","statefulContent","href","canCopy","afterEffect","onCopyLink","onCopyMessages","onCopyNumber","webPage","options","getMessageText","photo","getMessagePhoto","getWebPageVideo","getWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","selection","getSelection","push","label","handler","mediaLoader","ApiMediaFormat","BlobUrl","blobUrl","then","copyImageToClipboard","copyTextToClipboard","hasSelection","anchorNode","toString","replace","checkMessageHasSelection","getCopyLabel","messageIds","getMessageIdsForSelectedText","document","execCommand","clipboardText","renderMessageText","shouldRenderAsHtml","copyHtmlToClipboard","join","getMessageTextWithSpoilers","messageId","chatTranslations","selectChatTranslations","autoTranslateLanguage","settings","byKey","messageTranslation","byLangCode","isPending","translatedText","copy","selectionParentNode","selectedMessageElement","getMessageHtmlId","MAX_SCALE","selectStarsState","stars","ReactionButton","isOwnMessage","recentReactors","chosenClassName","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","count","stopPropagation","useEffectWithPrevDeps","prevReaction","amount","localAmount","button","balance","originReaction","getBoundingClientRect","startX","offsetWidth","startY","currentScale","Number","getComputedStyle","scale","cancel","animate","min","offset","duration","easing","prevAmount","shouldRenderPaidCounter","useShowTransition","withShouldRender","own","paid","outside","isReactionChosen","Sparkles","preset","PaidReactionEmoji","animatedEmoji","formatIntegerCompact","paidCounter","AvatarList","peers","counter","useHorizontalScroll","containerRef","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","EFFECT_AMOUNT","isLottie","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","Array","from","map","generateRandomDropPath","buildStyle","path","particle","withSharedAnimation","onAnimationEnd","isElementInViewport","display","rect","windowHeight","windowSize","MAX_RECENT_AVATARS","PAID_SEND_DELAY","Reactions","threadId","maxWidth","metaChildren","noRecentReactors","isCurrentUserPremium","tags","isAccountFrozen","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","openPremiumModal","showNotification","openFrozenAccountModal","results","areTags","recentReactions","withServiceReactions","areReactionsPossible","totalCount","reduce","acc","recentReactorsByReactionKey","recentReaction","peerId","getReactionKey","peer","selectPeer","props","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","actionText","cacheBreaker","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","isOutgoing","withContextMenu","onRemove","RADIUS","ITERATIONS","useCanvasBlur","dataUri","withRaf","radius","preferredWidth","preferredHeight","canvasRef","isStarted","useSyncEffect","canvas","img","Image","processBlur","width","ctx","getContext","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","drawImage","fastBlur","onload","requestMeasure","BLUR_RADIUS","ANIMATION_DURATION","MediaSpoiler","isVisible","withAnimation","thumbDataUri","isNsfw","currentTarget","shiftX","shiftY","setAttribute","maskAnimation","dots","nsfw","nsfwIcon","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","isForMediaViewer","maxTimestamp","entities","content","contentNotSupportedText","trimText","renderTextWithEntities","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","getMessageSummaryText","renderText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","useEnsureMessage","replyOriginForId","loadMessage","RINGS","BASE_RING_ITEM_COUNT","RING_INCREMENT","CENTER_EMPTINESS","MAX_RADIUS","BASE_ICON_SIZE","MIN_SIZE","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","getStickerMediaHash","previewUrl","patternPositions","coordinates","ring","ringItemCount","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","clientWidth","clientHeight","draw","save","forEach","centerShift","renderX","renderY","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","FOCUS_DELAY_MS","MAX_FULL_ITEMS","ALWAYS_FULL_ITEMS_COUNT","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","itemClassName","noScrollRestore","isSearchable","lockedUnselectedSubtitle","forceShowSelf","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","lockedSelectedIdsSet","Set","lockedUnselectedIdsSet","unlockedSelectedIds","has","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","concat","handleItemClick","categoryType","newSelectedCategories","slice","includes","splice","indexOf","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","isSelf","isApiPeerChat","isAlwaysUnselected","isAlwaysSelected","isChecked","subtitle","subtitleClassName","username","getMainUsername","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","FullNameTitle","avatarElement","Avatar","isSavedMessages","inactive","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","header","PeerChip","peerChip","customPeer","clickArg","canClose","isMinimized","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","cb","useModuleLoader","Bundles","Extra","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","getAttribute","containerWidth","scrollWidth","dataset","scrollId","remainingPath","isStopped","set","scrollSnapType","startAt","cleanup","delete","t","currentPath","CUSTOM_PEER_PREMIUM","isCustomPeer","titleKey","subtitleKey","avatarIcon","isAvatarSquare","withPremiumGradient","CUSTOM_PEER_INCLUDED_CHAT_TYPES","peerColorId","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","loadedPreviewUrls","otherProps","isThumbOpen","unmarkThumbOpen","thumbClassNames","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","add","handleAnimationReady","_extends","useCustomBackground","theme","settingValue","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","catch","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","titleClassName","isClickable","multiline","clickable","withAvatar","RippleEffect","input","endInput","startInput","separator","getStickerFromGift","gift","sticker","attributes","attr","getTotalGiftAvailability","availabilityTotal","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","DEFAULT_LIMIT","limit","badgeText","pxSize","AVATAR_SIZES","renderingBadgeText","avatar","badge","SCROLLBAR_WIDTH","REACTION_SELECTOR_WIDTH_REM","MessageContextMenu","isReactionPickerOpen","topReactions","defaultTagReactions","poll","story","isPrivate","enabledReactions","isWithPaidReaction","reactionsLimit","anchor","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canQuote","canEdit","canAppendTodoList","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","canPlayAnimatedEmojis","isInSavedMessages","onReply","onOpenThread","onEdit","onAppendTodoList","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onCloseAnimationEnd","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","userFullName","canGift","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","menuRef","scrollableRef","oldLang","noReactions","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","copyOptions","groupStatefulContent","getTriggerElement","querySelector","getRootElement","getMenuElement","getLayout","extraHeightAudioPlayer","middleColumn","getElementById","middleColumnComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","shouldAvoidNegativePosition","menuElMinWidth","disableScrolling","handleOpenMessageReactionPicker","position","Menu","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","option","withPreventDefaultOnMouseDown","destructive","MenuSeparator","inline","withWrap","reactors","getUserFullName","TITLE_MAX_LENGTH","LOOP_LIMIT","withCount","editSavedReactionTag","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","body","withPortal","tagText","tail","viewBox","tailFill","d","PromptDialog","initialValue","autoClose","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","isTextBox","_excludedClosestSelector","onkeydown","enableScrolling","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","parentWidth","minShift","maxShift","currentShift","safeShift","newTailPosition","hasFloatingBadge","isProgressFull","withBadge","primary","badgeContainer","floatingBadgeWrapper","floatingBadge","floatingBadgeValue","floatingBadgeTriangle","fill","right","fullProgress","div","createElement","ALLOWED_QUOTE_ENTITIES","Bold","Italic","Underline","Strike","getSelectionAsFormattedText","html","clonedSelection","cloneContents","appendChild","ELEMENT_NODE","classList","currentElement","parentElement","entityType","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","UNREAD_FOLDER_ID","getUnreadChatsByFolderId","ALL_FOLDER_ID","PRESET_FOLDER_ID","filterPresetTag","getOrderedIds","isChatBot","AI_FOLDER_ID","filterAITag","res","GLOBAL_SUMMARY_CHATID","sort","a","b","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useFolderManagerForUnreadChatsByFolder","addUnreadChatsByFolderIdCallback","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isConnected","blur","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","animateScroll","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","addExtraClass","requestForcedReflow","AnimatedIconFromSticker","noLoad","forcePreview","thumbnail","localMediaHash","previewBlobUrl","AnimatedIconWithPreview","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","chat","selectChat","priority","lastMessage","selectChatLastMessage","isVerified","ENTITY_CLASS_BY_NODE_NAME","B","STRONG","I","EM","INS","U","S","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","fragment","parsedHtml","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","trim","textIndex","recursionDeepness","addEntity","node","COMMENT_NODE","index","rawText","nodeName","MentionName","Url","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","substring","userId","language","Timestamp","timestamp","isNaN","getEntityDataFromNode","hasChildNodes","childNodes","querySelectorAll","replaceWith","selectedFragments","rangeCount","getRangeAt","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","removeChild","pop","cn","createClassNameBuilder","REACTIONS_AMOUNT","FADE_IN_DELAY","isInStoryViewer","isForEffects","effectReactions","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","color","BadgeButton","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","targetContainerHeight","normalHeight","scrollTo","scrollFrom","calculateScrollFrom","absPath","abs","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","PinMessageModal","MAX_EFFECT_COUNT","QUALITY","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","prevLocalAmount","prev","noMountTransition","newEffectsIds","teactFastList","StarIcon","StarReactionEffect","nonInteractive","quality","submitText","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","UNQUOTABLE_OFFSET","ContextMenuContainer","messageListType","customEmojiSetsInfo","album","noOptions","hasFullInfo","activeDownloads","isMessageTranslated","canReplyInChat","savedDialogId","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","reportMessages","openTodoListModal","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","selectionQuoteOffset","setSelectionQuoteOffset","calendar","chatsById","chats","byId","usersById","users","uniqueReactors","PREVIEW_AVATAR_COUNT","messages","msg","downloadableMedia","selectMessageDownloadableMedia","getIsDownloading","selectionRange","collapsed","selectionText","messageText","startOffset","endOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","quoteOffset","monoforumPeerId","replyToPeerId","fromChatId","handleOpenThread","handleEdit","todo","handleAppendTodoList","forNewTask","handlePin","handleUnpin","isUnpin","handleForward","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","video","getMessageVideo","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","ConfirmDialog","confirmLabel","confirmHandler","detectedLanguage","selectCurrentMessageList","defaultTags","selectActiveDownloads","chatFullInfo","selectChatFullInfo","user","selectUser","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isMonoforum","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","storyData","selectPeerStory","selectCanGift","selectSavedDialogIdFromMessage","todoItemsMax","TODO_ITEMS_LIMIT","othersCanAppend","isForbidden","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","selectCanScheduleUntilOnline","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","isCloseNonDestructive","mockPeer","withPeerColors","withEmojiStatus","apiPeer","anyPeer","iconElement","titleElement","titleText","iconWrapper","getPeerTitle","fullClassName","isForum","squareAvatar","minimized","closeable","nonDestructive","notClickable","getPeerColorClass","remove"],"sourceRoot":""}