{"version":3,"file":"4565.abbeed198f37279393c4.js","mappings":"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","sources":["webpack://TelyAI/./src/hooks/animations/useTransitionActiveKey.ts","webpack://TelyAI/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://TelyAI/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://TelyAI/./src/components/common/PeerBadge.module.scss?732c","webpack://TelyAI/./src/components/modals/common/TableInfoModal.tsx","webpack://TelyAI/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://TelyAI/./src/components/common/PeerBadge.tsx","webpack://TelyAI/./src/components/modals/common/ParticlesHeader.module.scss?e18b","webpack://TelyAI/./src/components/modals/common/ParticlesHeader.tsx","webpack://TelyAI/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://TelyAI/./src/components/common/pickers/PickerModal.tsx","webpack://TelyAI/./src/components/modals/common/TableAboutModal.tsx","webpack://TelyAI/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://TelyAI/./src/components/modals/common/SwayingStar.module.scss?cb91","webpack://TelyAI/./src/components/modals/common/SwayingStar.tsx","webpack://TelyAI/./src/components/modals/common/SpeedingDiamond.module.scss?0154","webpack://TelyAI/./src/components/modals/common/SpeedingDiamond.tsx","webpack://TelyAI/./src/util/particles.ts","webpack://TelyAI/./src/components/common/InteractiveSparkles.module.scss?9aaf","webpack://TelyAI/./src/components/common/InteractiveSparkles.tsx"],"sourcesContent":["import { useMemo, useRef } from '../../lib/teact/teact';\n\n/**\n * Use this hook to bind `<Transition />` animation to changes in the dependency array.\n * Use optional parameter `noAnimation` if you want to prevent the animation even if the dependency array changes.\n*/\nexport function useTransitionActiveKey(deps: unknown[], noAnimation?: boolean): number {\n  const activeKey = useRef(0);\n\n  useMemo(() => {\n    if (!noAnimation) activeKey.current += 1;\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [...deps]);\n\n  return activeKey.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React from '@teact';\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +\n              {formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption))\n              && Boolean(perUserStarCount) && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React from '@teact';\nimport { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n  withBalanceBar?: boolean;\n  currencyInBalanceBar?: 'TON' | 'XTR';\n  isLowStackPriority?: true;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n  withBalanceBar,\n  isLowStackPriority,\n  currencyInBalanceBar,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n      withBalanceBar={withBalanceBar}\n      currencyInBalanceBar={currencyInBalanceBar}\n      isLowStackPriority={isLowStackPriority}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {Boolean(label) && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","import React from '@teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  const lang = useLang();\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gibpMWRW\",\"particles\":\"ptK2PtrY\",\"title\":\"uHi7dzFK\",\"description\":\"y4GHVbyq\",\"stickerWrapper\":\"Kjblw3yb\"};","import React from '@teact';\nimport type { TeactNode } from '@teact';\nimport { memo, useRef } from '@teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback.ts';\n\nimport InteractiveSparkles from '../../common/InteractiveSparkles';\nimport StickerView from '../../common/StickerView';\nimport SpeedingDiamond from './SpeedingDiamond.tsx';\nimport SwayingStar from './SwayingStar.tsx';\n\nimport styles from './ParticlesHeader.module.scss';\n\ninterface OwnProps {\n  model: 'swaying-star' | 'speeding-diamond' | 'sticker';\n  sticker?: ApiSticker;\n  color: 'purple' | 'gold' | 'blue';\n  title: TeactNode;\n  description: TeactNode;\n  isDisabled?: boolean;\n  className?: string;\n}\n\nconst GIFT_STICKER_SIZE = 8 * REM;\n\nconst PARTICLE_PARAMS = {\n  centerShift: [0, -36] as const,\n};\n\nfunction ParticlesHeader({\n  model,\n  sticker,\n  color,\n  title,\n  description,\n  isDisabled,\n  className,\n}: OwnProps) {\n  const stickerRef = useRef<HTMLDivElement>();\n  const triggerSparklesRef = useRef<(() => void) | undefined>();\n\n  const handleMouseMove = useLastCallback(() => {\n    triggerSparklesRef.current?.();\n  });\n\n  const handleRequestAnimation = useLastCallback((animate: NoneToVoidFunction) => {\n    triggerSparklesRef.current = animate;\n  });\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <InteractiveSparkles\n        color={color}\n        centerShift={PARTICLE_PARAMS.centerShift}\n        isDisabled={isDisabled}\n        className={styles.particles}\n        onRequestAnimation={handleRequestAnimation}\n      />\n\n      {model === 'swaying-star' ? (\n        <SwayingStar\n          color={color as 'purple' | 'gold'}\n          centerShift={PARTICLE_PARAMS.centerShift}\n          onMouseMove={handleMouseMove}\n        />\n      ) : model === 'speeding-diamond' ? (\n        <SpeedingDiamond onMouseMove={handleMouseMove} />\n      ) : model === 'sticker' && sticker && (\n        <div\n          ref={stickerRef}\n          className={styles.stickerWrapper}\n          style={`width: ${GIFT_STICKER_SIZE}px; height: ${GIFT_STICKER_SIZE}px`}\n          onMouseMove={handleMouseMove}\n        >\n          <StickerView\n            containerRef={stickerRef}\n            sticker={sticker}\n            size={GIFT_STICKER_SIZE}\n            shouldPreloadPreview\n            shouldLoop={true}\n          />\n        </div>\n      )}\n\n      <h2 className={styles.title}>\n        {title}\n      </h2>\n\n      <div className={styles.description}>\n        {description}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(ParticlesHeader);\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import React from '@teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","import React from '@teact';\nimport { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"KQ61en7j\",\"star\":\"no11eFNA\",\"star_purple\":\"NXn1Bbql\",\"starPurple\":\"NXn1Bbql\"};","import React from '@teact';\nimport { memo, useRef } from '@teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom.ts';\nimport buildClassName from '../../../util/buildClassName.ts';\n\nimport useLastCallback from '../../../hooks/useLastCallback.ts';\n\nimport styles from './SwayingStar.module.scss';\n\ninterface OwnProps {\n  color: 'purple' | 'gold';\n  centerShift: readonly [number, number];\n  onMouseMove: NoneToVoidFunction;\n}\n\nconst INTERACTIVE_RADIUS = 50;\n\nfunction SwayingStar({\n  color,\n  centerShift,\n  onMouseMove,\n}: OwnProps) {\n  const starRef = useRef<HTMLDivElement>();\n\n  const handleMouseMove = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const centerX = rect.left + rect.width / 2 + centerShift[0];\n    const centerY = rect.top + rect.height / 2 + centerShift[1];\n    const mouseX = e.clientX - centerX;\n    const mouseY = e.clientY - centerY;\n    const normalizedX = Math.max(-1, Math.min(1, mouseX / INTERACTIVE_RADIUS));\n    const normalizedY = Math.max(-1, Math.min(1, mouseY / INTERACTIVE_RADIUS));\n    const rotateY = normalizedX * 40;\n    const rotateX = -normalizedY * 40;\n\n    requestMutation(() => {\n      starRef.current!.style.transform = `scale(1.1) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n    });\n\n    onMouseMove();\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    requestMutation(() => {\n      starRef.current!.style.transform = '';\n    });\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div\n        ref={starRef}\n        className={buildClassName(styles.star, styles[`star_${color}`])}\n        role=\"img\"\n        aria-label=\"Telegram Stars\"\n      />\n    </div>\n  );\n}\n\nexport default memo(SwayingStar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lIc96mwM\",\"diamond\":\"vIrSZr0L\"};","import React from '@teact';\nimport { memo, useState } from '@teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom.ts';\nimport { animateSingle } from '../../../util/animation.ts';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets.ts';\n\nimport useLastCallback from '../../../hooks/useLastCallback.ts';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview.tsx';\n\nimport styles from './SpeedingDiamond.module.scss';\n\nimport diamondPreviewUrl from '../../../assets/diamond.png';\n\ninterface OwnProps {\n  onMouseMove: NoneToVoidFunction;\n}\n\nconst MAX_SPEED = 5;\nconst MIN_SPEED = 1;\nconst SLOWDOWN_DELAY = 300;\nconst SLOWDOWN_DURATION = 1500;\n\nlet slowdownTimeout: number | undefined;\nlet isAnimating = true;\n\nfunction SpeedingDiamond({ onMouseMove }: OwnProps) {\n  const [speed, setSpeed] = useState(MIN_SPEED);\n\n  const handleMouseMove = useLastCallback(() => {\n    if (slowdownTimeout) {\n      clearTimeout(slowdownTimeout);\n      slowdownTimeout = undefined;\n    }\n\n    slowdownTimeout = window.setTimeout(() => {\n      const startAt = Date.now();\n\n      isAnimating = true;\n\n      animateSingle(() => {\n        if (!isAnimating) return false;\n\n        const t = Math.min((Date.now() - startAt) / SLOWDOWN_DURATION, 1);\n        const speed = (MAX_SPEED - MIN_SPEED) * (1 - transition(t));\n\n        setSpeed(speed);\n\n        isAnimating = t < 1 && speed > 1;\n\n        return isAnimating;\n      }, requestMutation);\n    }, SLOWDOWN_DELAY);\n\n    isAnimating = false;\n    setSpeed(MAX_SPEED);\n    onMouseMove();\n  });\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={styles.diamond}\n        onMouseMove={handleMouseMove}\n      >\n        <AnimatedIconWithPreview\n          speed={speed}\n          size={130}\n          tgsUrl={LOCAL_TGS_URLS.Diamond}\n          previewUrl={diamondPreviewUrl}\n          nonInteractive\n          noLoop={false}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default memo(SpeedingDiamond);\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 2);\n}\n","// GPU-Accelerated Particle System Library\n\nimport generateUniqueId from './generateUniqueId.ts';\n\nimport { getIsInBackground } from '../hooks/window/useBackgroundMode.ts';\n\nexport interface ParticleConfig {\n  width?: number;\n  height?: number;\n  particleCount?: number;\n  color?: Color | ColorPair;\n  speed?: number;\n  baseSize?: number;\n  minSpawnRadius?: number;\n  maxSpawnRadius?: number;\n  distanceLimit?: number;\n  fadeInTime?: number;\n  fadeOutTime?: number;\n  minLifetime?: number;\n  maxLifetime?: number;\n  maxStartTimeDelay?: number;\n  edgeFadeZone?: number;\n  centerShift?: readonly [number, number];\n  accelerationFactor?: number;\n  selfDestroyTime?: number;\n}\n\ninterface Locations {\n  attributes: {\n    startPosition: number;\n    velocity: number;\n    startTime: number;\n    lifetime: number;\n    size: number;\n    baseOpacity: number;\n    color: number;\n  };\n  uniforms: {\n    resolution: WebGLUniformLocation | null;\n    time: WebGLUniformLocation | null;\n    canvasWidth: WebGLUniformLocation | null;\n    canvasHeight: WebGLUniformLocation | null;\n    accelerationFactor: WebGLUniformLocation | null;\n    fadeInTime: WebGLUniformLocation | null;\n    fadeOutTime: WebGLUniformLocation | null;\n    edgeFadeZone: WebGLUniformLocation | null;\n    rotationMatrices: WebGLUniformLocation | null;\n    spawnCenter: WebGLUniformLocation | null;\n  };\n}\n\ninterface Buffers {\n  startPosition: WebGLBuffer | null;\n  velocity: WebGLBuffer | null;\n  startTime: WebGLBuffer | null;\n  lifetime: WebGLBuffer | null;\n  size: WebGLBuffer | null;\n  baseOpacity: WebGLBuffer | null;\n  color: WebGLBuffer | null;\n}\n\ninterface ParticleSystem {\n  id: string;\n  config: Required<ParticleConfig>;\n  buffers: Buffers;\n  startTime: number;\n  seed: number;\n  centerX: number;\n  centerY: number;\n  avgDistance: number;\n  selfDestroyTimeout?: number;\n}\n\ninterface ParticleSystemManager {\n  addSystem: (options: Partial<ParticleConfig>) => NoneToVoidFunction;\n}\n\ntype Color = readonly [number, number, number];\ntype ColorPair = readonly [Color, Color];\n\nexport const PARTICLE_COLORS = {\n  blue: [0, 152 / 255, 234 / 255] as Color,\n  blueGradient: [\n    [1 / 255, 88 / 255, 175 / 255],\n    [103 / 255, 208 / 255, 255 / 255],\n  ] as ColorPair,\n  purple: [150 / 255, 111 / 255, 254 / 255] as Color,\n  purpleGradient: [\n    [107 / 255, 147 / 255, 255 / 255],\n    [228 / 255, 106 / 255, 206 / 255],\n  ] as ColorPair,\n  gold: [255 / 255, 191 / 255, 10 / 255] as Color,\n  goldGradient: [\n    [253 / 255, 235 / 255, 50 / 255],\n    [215 / 255, 89 / 255, 2 / 255],\n  ] as ColorPair,\n};\n\nexport const PARTICLE_BURST_PARAMS: Partial<ParticleConfig> = {\n  particleCount: 5,\n  distanceLimit: 1,\n  fadeInTime: 0.05,\n  minLifetime: 3,\n  maxLifetime: 3,\n  maxStartTimeDelay: 0,\n  selfDestroyTime: 3,\n  minSpawnRadius: 5,\n  maxSpawnRadius: 50,\n};\n\nconst DEFAULT_CONFIG: Required<ParticleConfig> = {\n  width: 350,\n  height: 230,\n  particleCount: 100,\n  color: [0, 152 / 255, 234 / 255], // #0098EA (TON)\n  speed: 18,\n  baseSize: 6,\n  minSpawnRadius: 35,\n  maxSpawnRadius: 70,\n  distanceLimit: 0.7,\n  fadeInTime: 0.25,\n  fadeOutTime: 1,\n  minLifetime: 4,\n  maxLifetime: 6,\n  maxStartTimeDelay: 3,\n  edgeFadeZone: 50,\n  centerShift: [0, 0],\n  accelerationFactor: 3,\n  selfDestroyTime: 0,\n};\n\nconst SIZE_SMALL = 0.67;\nconst SIZE_MEDIUM = 1.33;\nconst SIZE_LARGE = 2.2;\n\nconst canvasManagers = new Map<HTMLCanvasElement, ParticleSystemManager>();\n\nexport function setupParticles(\n  canvas: HTMLCanvasElement,\n  options: Partial<ParticleConfig>,\n) {\n  let manager = canvasManagers.get(canvas);\n  if (!manager) {\n    manager = createParticleSystemManager(canvas);\n    canvasManagers.set(canvas, manager);\n  }\n\n  return manager.addSystem(options);\n}\n\nfunction createParticleSystemManager(canvas: HTMLCanvasElement) {\n  const gl = canvas.getContext('webgl', {\n    alpha: true,\n    antialias: false,\n    preserveDrawingBuffer: false,\n  })!;\n\n  if (!gl) {\n    throw new Error('WebGL not supported');\n  }\n\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, VERTEX_SHADER_SOURCE);\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, FRAGMENT_SHADER_SOURCE);\n\n  if (!vertexShader || !fragmentShader) {\n    throw new Error('Failed to create shaders');\n  }\n\n  const program = createProgram(gl, vertexShader, fragmentShader)!;\n  if (!program) {\n    throw new Error('Failed to create shader program');\n  }\n\n  const dpr = window.devicePixelRatio || 1;\n  const systems = new Map<string, ParticleSystem>();\n\n  const locations: Locations = {\n    attributes: {\n      startPosition: gl.getAttribLocation(program, 'a_startPosition'),\n      velocity: gl.getAttribLocation(program, 'a_velocity'),\n      startTime: gl.getAttribLocation(program, 'a_startTime'),\n      lifetime: gl.getAttribLocation(program, 'a_lifetime'),\n      size: gl.getAttribLocation(program, 'a_size'),\n      baseOpacity: gl.getAttribLocation(program, 'a_baseOpacity'),\n      color: gl.getAttribLocation(program, 'a_color'),\n    },\n    uniforms: {\n      resolution: gl.getUniformLocation(program, 'u_resolution'),\n      time: gl.getUniformLocation(program, 'u_time'),\n      canvasWidth: gl.getUniformLocation(program, 'u_canvasWidth'),\n      canvasHeight: gl.getUniformLocation(program, 'u_canvasHeight'),\n      accelerationFactor: gl.getUniformLocation(program, 'u_accelerationFactor'),\n      fadeInTime: gl.getUniformLocation(program, 'u_fadeInTime'),\n      fadeOutTime: gl.getUniformLocation(program, 'u_fadeOutTime'),\n      edgeFadeZone: gl.getUniformLocation(program, 'u_edgeFadeZone'),\n      rotationMatrices: gl.getUniformLocation(program, 'u_rotationMatrices'),\n      spawnCenter: gl.getUniformLocation(program, 'u_spawnCenter'),\n    },\n  };\n\n  let animationId: number | undefined;\n  let unsubscribeFromIsInBackground: NoneToVoidFunction | undefined = undefined;\n\n  function initParticleData(system: ParticleSystem): void {\n    const rng = new SeededRandom(system.seed);\n    const { config } = system;\n\n    const startPositions = new Float32Array(config.particleCount * 2);\n    const velocities = new Float32Array(config.particleCount * 2);\n    const startTimes = new Float32Array(config.particleCount);\n    const lifetimes = new Float32Array(config.particleCount);\n    const sizes = new Float32Array(config.particleCount);\n    const baseOpacities = new Float32Array(config.particleCount);\n    const colors = new Float32Array(config.particleCount * 3); // RGB for each particle\n\n    for (let i = 0; i < config.particleCount; i++) {\n      const angle = rng.next() * Math.PI * 2;\n      const spawnRadius = rng.nextBetween(config.minSpawnRadius, config.maxSpawnRadius);\n\n      const cos = Math.cos(angle);\n      const sin = Math.sin(angle);\n\n      const spawnX = system.centerX + cos * spawnRadius;\n      const spawnY = system.centerY + sin * spawnRadius;\n\n      startPositions[i * 2] = spawnX * dpr;\n      startPositions[i * 2 + 1] = spawnY * dpr;\n\n      lifetimes[i] = rng.nextBetween(config.minLifetime, config.maxLifetime);\n      startTimes[i] = rng.next() * config.maxStartTimeDelay;\n\n      const travelDist = rng.nextBetween(\n        system.avgDistance * config.distanceLimit * 0.5,\n        system.avgDistance * config.distanceLimit,\n      );\n\n      // Calculate speed based on travel distance and lifetime\n      const speed = (travelDist / lifetimes[i]) * dpr;\n\n      velocities[i * 2] = cos * speed;\n      velocities[i * 2 + 1] = sin * speed;\n\n      const sizeVariant = rng.next();\n      if (sizeVariant < 0.3) {\n        sizes[i] = config.baseSize * SIZE_SMALL * dpr;\n      } else if (sizeVariant < 0.7) {\n        sizes[i] = config.baseSize * SIZE_MEDIUM * dpr;\n      } else {\n        sizes[i] = config.baseSize * SIZE_LARGE * dpr;\n      }\n\n      baseOpacities[i] = rng.nextBetween(0.3, 0.8);\n\n      const particleColor = resolveColor(config.color, rng);\n      colors[i * 3] = particleColor[0];\n      colors[i * 3 + 1] = particleColor[1];\n      colors[i * 3 + 2] = particleColor[2];\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.startPosition);\n    gl.bufferData(gl.ARRAY_BUFFER, startPositions, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.velocity);\n    gl.bufferData(gl.ARRAY_BUFFER, velocities, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.startTime);\n    gl.bufferData(gl.ARRAY_BUFFER, startTimes, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.lifetime);\n    gl.bufferData(gl.ARRAY_BUFFER, lifetimes, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.size);\n    gl.bufferData(gl.ARRAY_BUFFER, sizes, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.baseOpacity);\n    gl.bufferData(gl.ARRAY_BUFFER, baseOpacities, gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.color);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n  }\n\n  function initCanvas(): void {\n    // Find the max canvas size from all systems\n    let maxWidth = 0;\n    let maxHeight = 0;\n    systems.forEach((system) => {\n      maxWidth = Math.max(maxWidth, system.config.width);\n      maxHeight = Math.max(maxHeight, system.config.height);\n    });\n\n    // Default to first system's size if no systems yet\n    if (systems.size === 0) {\n      maxWidth = DEFAULT_CONFIG.width;\n      maxHeight = DEFAULT_CONFIG.height;\n    }\n\n    if (canvas.width !== maxWidth * dpr || canvas.height !== maxHeight * dpr) {\n      canvas.width = maxWidth * dpr;\n      canvas.height = maxHeight * dpr;\n      canvas.style.width = maxWidth + 'px';\n      canvas.style.height = maxHeight + 'px';\n    }\n\n    gl.viewport(0, 0, canvas.width, canvas.height);\n  }\n\n  function initWebGLState(): void {\n    gl.useProgram(program);\n\n    // Set static uniforms that will be updated per system\n    gl.uniform2f(locations.uniforms.resolution, canvas.width, canvas.height);\n\n    gl.uniformMatrix2fv(locations.uniforms.rotationMatrices, false, getRotations());\n\n    // Set blending state\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n    // Set clear color\n    gl.clearColor(0, 0, 0, 0);\n  }\n\n  function render(currentTime: number): void {\n    if (!animationId) return;\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    // Render all systems\n    systems.forEach((system) => {\n      const systemTime = (currentTime - system.startTime) / 1000;\n\n      // Set uniforms for this system\n      gl.uniform1f(locations.uniforms.time, systemTime);\n      gl.uniform1f(locations.uniforms.canvasWidth, system.config.width * dpr);\n      gl.uniform1f(locations.uniforms.canvasHeight, system.config.height * dpr);\n      gl.uniform1f(locations.uniforms.accelerationFactor, system.config.accelerationFactor);\n      gl.uniform1f(locations.uniforms.fadeInTime, system.config.fadeInTime);\n      gl.uniform1f(locations.uniforms.fadeOutTime, system.config.fadeOutTime);\n      gl.uniform1f(locations.uniforms.edgeFadeZone, system.config.edgeFadeZone * dpr);\n      gl.uniform2f(locations.uniforms.spawnCenter, system.centerX * dpr, system.centerY * dpr);\n\n      // Bind attributes for this system\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.startPosition);\n      gl.enableVertexAttribArray(locations.attributes.startPosition);\n      gl.vertexAttribPointer(locations.attributes.startPosition, 2, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.velocity);\n      gl.enableVertexAttribArray(locations.attributes.velocity);\n      gl.vertexAttribPointer(locations.attributes.velocity, 2, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.startTime);\n      gl.enableVertexAttribArray(locations.attributes.startTime);\n      gl.vertexAttribPointer(locations.attributes.startTime, 1, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.lifetime);\n      gl.enableVertexAttribArray(locations.attributes.lifetime);\n      gl.vertexAttribPointer(locations.attributes.lifetime, 1, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.size);\n      gl.enableVertexAttribArray(locations.attributes.size);\n      gl.vertexAttribPointer(locations.attributes.size, 1, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.baseOpacity);\n      gl.enableVertexAttribArray(locations.attributes.baseOpacity);\n      gl.vertexAttribPointer(locations.attributes.baseOpacity, 1, gl.FLOAT, false, 0, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, system.buffers.color);\n      gl.enableVertexAttribArray(locations.attributes.color);\n      gl.vertexAttribPointer(locations.attributes.color, 3, gl.FLOAT, false, 0, 0);\n\n      // Draw particles for this system\n      gl.drawArrays(gl.POINTS, 0, system.config.particleCount);\n    });\n\n    animationId = requestAnimationFrame(render);\n  }\n\n  function addSystem(options: Partial<ParticleConfig>) {\n    const id = generateUniqueId();\n    const config: Required<ParticleConfig> = { ...DEFAULT_CONFIG, ...options };\n\n    const buffers: Buffers = {\n      startPosition: gl.createBuffer(),\n      velocity: gl.createBuffer(),\n      startTime: gl.createBuffer(),\n      lifetime: gl.createBuffer(),\n      size: gl.createBuffer(),\n      baseOpacity: gl.createBuffer(),\n      color: gl.createBuffer(),\n    };\n\n    const system: ParticleSystem = {\n      id,\n      config,\n      buffers,\n      startTime: performance.now(),\n      seed: Math.floor(Math.random() * 1000000),\n      centerX: config.width / 2 + config.centerShift[0],\n      centerY: config.height / 2 + config.centerShift[1],\n      avgDistance: (config.width / 2 + config.height / 2) / 2,\n    };\n\n    systems.set(id, system);\n\n    initParticleData(system);\n    initCanvas();\n\n    if (config.selfDestroyTime) {\n      system.selfDestroyTimeout = window.setTimeout(() => {\n        removeSystem(id);\n      }, config.selfDestroyTime * 1000);\n    }\n\n    if (systems.size === 1) {\n      initWebGLState();\n\n      unsubscribeFromIsInBackground = getIsInBackground.subscribe(() => {\n        const isActive = !getIsInBackground();\n        if (isActive && !animationId) {\n          animationId = requestAnimationFrame(render);\n        } else if (!isActive && animationId) {\n          cancelAnimationFrame(animationId);\n          animationId = undefined;\n        }\n      });\n\n      animationId = requestAnimationFrame(render);\n    }\n\n    return () => removeSystem(id);\n  }\n\n  function removeSystem(id: string): void {\n    const system = systems.get(id);\n    if (!system) return;\n\n    if (system.selfDestroyTimeout) {\n      clearTimeout(system.selfDestroyTimeout);\n    }\n\n    Object.values(system.buffers).forEach((buffer) => {\n      if (buffer) gl.deleteBuffer(buffer);\n    });\n\n    systems.delete(id);\n\n    if (systems.size === 0) {\n      destroy();\n    }\n  }\n\n  function destroy(): void {\n    if (animationId !== undefined) {\n      cancelAnimationFrame(animationId);\n      animationId = undefined;\n    }\n\n    unsubscribeFromIsInBackground?.();\n\n    systems.clear();\n\n    gl.deleteProgram(program);\n    gl.deleteShader(vertexShader!);\n    gl.deleteShader(fragmentShader!);\n\n    canvasManagers.delete(canvas);\n  }\n\n  return { addSystem };\n}\n\nconst VERTEX_SHADER_SOURCE = `\n    attribute vec2 a_startPosition;\n    attribute vec2 a_velocity;\n    attribute float a_startTime;\n    attribute float a_lifetime;\n    attribute float a_size;\n    attribute float a_baseOpacity;\n    attribute vec3 a_color;\n\n    uniform vec2 u_resolution;\n    uniform float u_time;\n    uniform float u_canvasWidth;\n    uniform float u_canvasHeight;\n    uniform float u_accelerationFactor;\n    uniform float u_fadeInTime;\n    uniform float u_fadeOutTime;\n    uniform float u_edgeFadeZone;\n    uniform mat2 u_rotationMatrices[18];\n    uniform vec2 u_spawnCenter;\n\n    varying float v_opacity;\n    varying vec3 v_color;\n\n    void main() {\n        float totalAge = u_time - a_startTime;\n        float age = mod(totalAge, a_lifetime);\n\n        // For the initial animation, fade in all particles\n        float globalFadeIn = min(u_time / u_fadeInTime, 1.0);\n\n        float lifeRatio = age / a_lifetime;\n\n        // Calculate rotation based on completed lifecycles\n        float lifecycleCount = floor(totalAge / a_lifetime);\n        int rotationIndex = int(mod(lifecycleCount, 18.0));\n\n        // Get rotation matrix\n        mat2 rotationMatrix = u_rotationMatrices[rotationIndex];\n\n        // Rotate start position around spawn center\n        vec2 startOffset = a_startPosition - u_spawnCenter;\n        vec2 rotatedStartOffset = rotationMatrix * startOffset;\n        vec2 rotatedStartPosition = u_spawnCenter + rotatedStartOffset;\n\n        // Apply rotation matrix to velocity\n        vec2 rotatedVelocity = rotationMatrix * a_velocity;\n\n        // Apply shoot-out effect: fast initial speed that slows down\n        float speedMultiplier = 1.0 + u_accelerationFactor * exp(-3.0 * lifeRatio);\n\n        vec2 position = rotatedStartPosition + rotatedVelocity * age * speedMultiplier;\n\n        float opacity = 1.0;\n        if (lifeRatio < u_fadeInTime / a_lifetime) {\n            opacity = (lifeRatio * a_lifetime) / u_fadeInTime;\n        } else if (lifeRatio > 1.0 - u_fadeOutTime / a_lifetime) {\n            opacity = (1.0 - lifeRatio) * a_lifetime / u_fadeOutTime;\n        }\n        opacity *= a_baseOpacity * globalFadeIn;\n\n        float distToLeft = position.x;\n        float distToRight = u_canvasWidth - position.x;\n        float distToTop = position.y;\n        float distToBottom = u_canvasHeight - position.y;\n        float distToEdge = min(min(distToLeft, distToRight), min(distToTop, distToBottom));\n\n        if (distToEdge < u_edgeFadeZone) {\n            opacity *= distToEdge / u_edgeFadeZone;\n        }\n\n        vec2 clipSpace = ((position / u_resolution) * 2.0 - 1.0) * vec2(1, -1);\n        gl_Position = vec4(clipSpace, 0, 1);\n        gl_PointSize = a_size;\n        v_opacity = opacity;\n        v_color = a_color;\n    }\n`;\n\nconst FRAGMENT_SHADER_SOURCE = `\n    precision mediump float;\n\n    varying float v_opacity;\n    varying vec3 v_color;\n\n    void main() {\n        vec2 coord = gl_PointCoord - vec2(0.5);\n\n        // Create a four-pointed star\n        float absX = abs(coord.x);\n        float absY = abs(coord.y);\n\n        // Star parameters\n        float innerSize = 0.12;    // Size of center square\n        float armLength = 0.45;    // Length of star arms\n        float armWidth = 0.08;     // Half-width of star arms at base\n\n        float dist = 1.0; // Default to outside\n\n        // Center square\n        if (absX <= innerSize && absY <= innerSize) {\n            dist = max(absX, absY) - innerSize;\n        }\n        // Horizontal arms (left and right points)\n        else if (absY <= armWidth && absX <= armLength) {\n            // Taper the arms - they get narrower toward the tips\n            float normalizedX = (absX - innerSize) / (armLength - innerSize);\n            float taperFactor = 1.0 - normalizedX * 0.8; // Taper to 20% of original width\n            float currentArmWidth = armWidth * taperFactor;\n            dist = absY - currentArmWidth;\n        }\n        // Vertical arms (top and bottom points)\n        else if (absX <= armWidth && absY <= armLength) {\n            // Taper the arms - they get narrower toward the tips\n            float normalizedY = (absY - innerSize) / (armLength - innerSize);\n            float taperFactor = 1.0 - normalizedY * 0.8; // Taper to 20% of original width\n            float currentArmWidth = armWidth * taperFactor;\n            dist = absX - currentArmWidth;\n        }\n\n        // Use smoothstep for anti-aliasing to reduce subpixel artifacts\n        float alpha = 1.0 - smoothstep(-0.01, 0.01, dist);\n\n        if (alpha <= 0.0) {\n            discard;\n        }\n\n        gl_FragColor = vec4(v_color * v_opacity * alpha, v_opacity * alpha);\n    }\n`;\n\nfunction createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader | undefined {\n  const shader = gl.createShader(type);\n  if (!shader) return undefined;\n\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    gl.deleteShader(shader);\n    return undefined;\n  }\n\n  return shader;\n}\n\nfunction createProgram(gl: WebGLRenderingContext,\n  vertexShader: WebGLShader,\n  fragmentShader: WebGLShader): WebGLProgram | undefined {\n  const program = gl.createProgram();\n  if (!program) return undefined;\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    gl.deleteProgram(program);\n    return undefined;\n  }\n\n  return program;\n}\n\nclass SeededRandom {\n  private seed: number;\n\n  constructor(seed: number) {\n    this.seed = seed;\n  }\n\n  next(): number {\n    this.seed = (this.seed * 9301 + 49297) % 233280;\n    return this.seed / 233280;\n  }\n\n  nextBetween(min: number, max: number): number {\n    return min + (max - min) * this.next();\n  }\n}\n\nlet rotationsCache: Float32Array | undefined;\n\nfunction getRotations(): Float32Array {\n  if (!rotationsCache) {\n    const ROTATION_COUNT = 18; // n = [0..17]\n    const ROTATION_ANGLE_DEGREES = 220;\n\n    rotationsCache = new Float32Array(ROTATION_COUNT * 4); // mat2 = 4 floats\n\n    for (let i = 0; i < ROTATION_COUNT; i++) {\n      const angle = (ROTATION_ANGLE_DEGREES * Math.PI / 180) * i;\n      const cos = Math.cos(angle);\n      const sin = Math.sin(angle);\n\n      // mat2 in column-major order: [cos, sin, -sin, cos]\n      rotationsCache[i * 4] = cos;\n      rotationsCache[i * 4 + 1] = sin;\n      rotationsCache[i * 4 + 2] = -sin;\n      rotationsCache[i * 4 + 3] = cos;\n    }\n  }\n\n  return rotationsCache;\n}\n\nfunction resolveColor(colorDefinition: Color | ColorPair, rng: SeededRandom) {\n  if (Array.isArray(colorDefinition[0])) {\n    const [color1, color2] = colorDefinition as ColorPair;\n\n    return [\n      rng.nextBetween(color1[0], color2[0]),\n      rng.nextBetween(color1[1], color2[1]),\n      rng.nextBetween(color1[2], color2[2]),\n    ] as Color;\n  }\n\n  return colorDefinition as Color;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"sparkles\":\"hHHgpBRr\"};","import React from '@teact';\nimport { memo, useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { PARTICLE_BURST_PARAMS, PARTICLE_COLORS, setupParticles } from '../../util/particles';\n\nimport styles from './InteractiveSparkles.module.scss';\n\ninterface OwnProps {\n  color?: 'purple' | 'gold' | 'blue';\n  centerShift?: readonly [number, number];\n  isDisabled?: boolean;\n  className?: string;\n  onRequestAnimation?: (animate: NoneToVoidFunction) => void;\n}\n\nconst DEFAULT_PARTICLE_PARAMS = {\n  centerShift: [0, -36] as const,\n};\n\nconst InteractiveSparkles = ({\n  color = 'purple',\n  centerShift = DEFAULT_PARTICLE_PARAMS.centerShift,\n  isDisabled,\n  className,\n  onRequestAnimation,\n}: OwnProps) => {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  useLayoutEffect(() => {\n    if (isDisabled) return undefined;\n\n    return setupParticles(canvasRef.current!, {\n      color: PARTICLE_COLORS[`${color}Gradient`],\n      centerShift,\n    });\n  }, [centerShift, color, isDisabled]);\n\n  useEffect(() => {\n    if (!onRequestAnimation) return;\n\n    const animate = () => {\n      if (isDisabled) return;\n\n      setupParticles(canvasRef.current!, {\n        color: PARTICLE_COLORS[`${color}Gradient`],\n        centerShift,\n        ...PARTICLE_BURST_PARAMS,\n      });\n    };\n\n    onRequestAnimation(animate);\n  }, [centerShift, color, isDisabled, onRequestAnimation]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className={buildClassName(styles.sparkles, className)}\n    />\n  );\n};\n\nexport default memo(InteractiveSparkles);\n"],"names":["useTransitionActiveKey","deps","noAnimation","activeKey","useRef","useMemo","current","MAX_STARS_COUNT","StarTopupOptionList","isActive","className","options","selectedStarOption","selectedStarCount","starsNeeded","onClick","oldLang","useOldLang","lang","useLang","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","useFlag","useEffect","renderingOptions","canExtend","undefined","maxOption","reduce","max","option","stars","forceShowAll","result","currentStackedStarsCount","canExtendOptions","forEach","index","isExtended","push","starsCount","Math","min","isWide","length","React","buildClassName","styles","map","isOdd","isActiveOption","perUserStarCount","winner","winners","find","opt","users","perUserStars","wideOption","active","key","optionTop","formatInteger","stackedStars","dir","isRtl","Array","from","StarIcon","stackedStar","type","size","optionBottom","formatCurrency","amount","currency","Boolean","renderText","Button","moreOptions","isText","noForcedUpperCase","Icon","iconDown","name","memo","TableInfoModal","isOpen","title","tableData","headerAvatarPeer","header","modalHeader","footer","buttonText","hasBackdrop","onClose","onButtonClick","withBalanceBar","isLowStackPriority","currencyInBalanceBar","openChat","getActions","handleOpenChat","useLastCallback","peerId","id","Modal","hasCloseButton","hasAbsoluteCloseButton","absoluteCloseButtonColor","isSlim","contentClassName","content","Avatar","peer","avatar","table","label","value","cell","fullWidth","PeerChip","chatId","chatItem","forceShowSelf","withEmojiStatus","clickArg","noFooter","PeerBadge","avatarPeer","avatarWebPhoto","avatarSize","text","badgeText","badgeIcon","badgeClassName","badgeIconClassName","textClassName","root","clickable","top","webPhoto","badge","GIFT_STICKER_SIZE","REM","PARTICLE_PARAMS","centerShift","ParticlesHeader","model","sticker","color","description","isDisabled","stickerRef","triggerSparklesRef","handleMouseMove","handleRequestAnimation","animate","InteractiveSparkles","particles","onRequestAnimation","SwayingStar","onMouseMove","SpeedingDiamond","ref","stickerWrapper","style","StickerView","containerRef","shouldPreloadPreview","shouldLoop","PickerModal","confirmButtonText","isConfirmDisabled","shouldAdaptToSearch","withFixedHeight","onConfirm","withPremiumGradient","modalProps","hasButton","_extends","withSearch","fixedHeight","headerClassName","children","buttonWrapper","disabled","TableAboutModal","listItemData","headerIconName","withSeparator","topIcon","icon","subtitle","ListItem","isStatic","multiline","iconClassName","listItemIcon","Separator","separator","starRef","e","rect","currentTarget","getBoundingClientRect","centerX","left","width","centerY","height","mouseX","clientX","mouseY","clientY","normalizedX","normalizedY","rotateY","rotateX","requestMutation","transform","handleMouseLeave","onMouseLeave","star","role","slowdownTimeout","isAnimating","speed","setSpeed","useState","clearTimeout","window","setTimeout","startAt","Date","now","animateSingle","t","transition","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","Diamond","previewUrl","diamondPreviewUrl","nonInteractive","noLoop","PARTICLE_COLORS","blue","blueGradient","purple","purpleGradient","gold","goldGradient","PARTICLE_BURST_PARAMS","particleCount","distanceLimit","fadeInTime","minLifetime","maxLifetime","maxStartTimeDelay","selfDestroyTime","minSpawnRadius","maxSpawnRadius","DEFAULT_CONFIG","baseSize","fadeOutTime","edgeFadeZone","accelerationFactor","canvasManagers","Map","setupParticles","canvas","manager","get","gl","getContext","alpha","antialias","preserveDrawingBuffer","Error","vertexShader","createShader","VERTEX_SHADER","VERTEX_SHADER_SOURCE","fragmentShader","FRAGMENT_SHADER","FRAGMENT_SHADER_SOURCE","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","dpr","devicePixelRatio","systems","locations","attributes","startPosition","getAttribLocation","velocity","startTime","lifetime","baseOpacity","uniforms","resolution","getUniformLocation","time","canvasWidth","canvasHeight","rotationMatrices","spawnCenter","animationId","unsubscribeFromIsInBackground","render","currentTime","clear","COLOR_BUFFER_BIT","system","systemTime","uniform1f","config","uniform2f","bindBuffer","ARRAY_BUFFER","buffers","enableVertexAttribArray","vertexAttribPointer","FLOAT","drawArrays","POINTS","requestAnimationFrame","removeSystem","selfDestroyTimeout","Object","values","buffer","deleteBuffer","delete","cancelAnimationFrame","deleteShader","addSystem","generateUniqueId","createBuffer","performance","seed","floor","random","avgDistance","set","rng","SeededRandom","startPositions","Float32Array","velocities","startTimes","lifetimes","sizes","baseOpacities","colors","i","angle","next","PI","spawnRadius","nextBetween","cos","sin","spawnX","spawnY","sizeVariant","particleColor","resolveColor","bufferData","STATIC_DRAW","initParticleData","maxWidth","maxHeight","viewport","initCanvas","useProgram","uniformMatrix2fv","rotationsCache","ROTATION_COUNT","ROTATION_ANGLE_DEGREES","getRotations","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","clearColor","getIsInBackground","subscribe","createParticleSystemManager","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","constructor","this","colorDefinition","isArray","color1","color2","DEFAULT_PARTICLE_PARAMS","canvasRef","useLayoutEffect"],"sourceRoot":""}