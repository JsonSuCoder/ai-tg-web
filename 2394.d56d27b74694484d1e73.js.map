{"version":3,"file":"2394.d56d27b74694484d1e73.js","mappings":"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AAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,KAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MA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","sources":["webpack://TeleGPT/./src/components/right/DeleteMemberModal.tsx","webpack://TeleGPT/./src/global/actions/ui/calls.ts","webpack://TeleGPT/./src/types/electron.ts","webpack://TeleGPT/./src/lib/secret-sauce/utils.ts","webpack://TeleGPT/./src/lib/secret-sauce/parseSdp.ts","webpack://TeleGPT/./src/lib/secret-sauce/buildSdp.ts","webpack://TeleGPT/./src/lib/secret-sauce/blacksilence.ts","webpack://TeleGPT/./src/lib/secret-sauce/secretsauce.ts","webpack://TeleGPT/./src/lib/secret-sauce/p2p.ts","webpack://TeleGPT/./src/global/actions/api/calls.async.ts","webpack://TeleGPT/./src/util/phoneCallEmojiConstants.ts","webpack://TeleGPT/./src/global/actions/apiUpdaters/calls.async.ts","webpack://TeleGPT/./src/components/calls/group/helpers/formatGroupCallVolume.ts","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipantMenu.tsx","webpack://TeleGPT/./src/hooks/useRunThrottled.ts","webpack://TeleGPT/./src/components/calls/group/OutlinedMicrophoneIcon.tsx","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipant.module.scss?2375","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipant.tsx","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipantList.tsx","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipantList.module.scss?6462","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipantVideo.module.scss?799e","webpack://TeleGPT/./src/components/calls/group/GroupCallParticipantVideo.tsx","webpack://TeleGPT/./src/util/vibrate.ts","webpack://TeleGPT/./src/components/calls/group/MicrophoneButton.module.scss?3a9a","webpack://TeleGPT/./src/components/calls/group/MicrophoneButton.tsx","webpack://TeleGPT/./src/components/calls/group/GroupCall.module.scss?4417","webpack://TeleGPT/./src/components/calls/group/GroupCall.tsx","webpack://TeleGPT/./src/components/calls/group/hooks/useGroupCallVideoLayout.ts","webpack://TeleGPT/./src/components/calls/ActiveCallHeader.tsx","webpack://TeleGPT/./src/components/calls/phone/PhoneCallButton.module.scss?9dea","webpack://TeleGPT/./src/components/calls/phone/PhoneCallButton.tsx","webpack://TeleGPT/./src/components/calls/phone/PhoneCall.module.scss?a250","webpack://TeleGPT/./src/components/calls/phone/PhoneCall.tsx","webpack://TeleGPT/./src/components/calls/phone/RatePhoneCallModal.module.scss?64f6","webpack://TeleGPT/./src/components/calls/phone/RatePhoneCallModal.tsx","webpack://TeleGPT/./src/bundles/calls.ts","webpack://TeleGPT/./src/hooks/window/useFullscreen.ts"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import type { ApiGroupCall } from '../../../api/types';\nimport type { CallSound } from '../../../types';\nimport type { RequiredGlobalActions } from '../../index';\nimport type {\n  ActionReturnType, GlobalState, TabArgs,\n} from '../../types';\n\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { omit } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport safePlay from '../../../util/safePlay';\nimport { callApi } from '../../../api/gramjs';\nimport { getMainUsername } from '../../helpers';\nimport {\n  addActionHandler, getGlobal,\n  setGlobal,\n} from '../../index';\nimport { updateGroupCall } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat, selectChatFullInfo, selectIsCurrentUserFrozen,\n  selectTabState, selectUser,\n} from '../../selectors';\nimport { selectActiveGroupCall, selectChatGroupCall, selectGroupCall } from '../../selectors/calls';\nimport { fetchChatByUsername, loadFullChat } from '../api/chats';\n\n// This is a tiny MP3 file that is silent - retrieved from https://bigsoundbank.com and then modified\n// eslint-disable-next-line max-len\nconst silentSound = 'data:audio/mpeg;base64,SUQzBAAAAAABEVRYWFgAAAAtAAADY29tbWVudABCaWdTb3VuZEJhbmsuY29tIC8gTGFTb25vdGhlcXVlLm9yZwBURU5DAAAAHQAAA1N3aXRjaCBQbHVzIMKpIE5DSCBTb2Z0d2FyZQBUSVQyAAAABgAAAzIyMzUAVFNTRQAAAA8AAANMYXZmNTcuODMuMTAwAAAAAAAAAAAAAAD/80DEAAAAA0gAAAAATEFNRTMuMTAwVVVVVVVVVVVVVUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQsRbAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQMSkAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV';\n\nlet audioElement: HTMLAudioElement | undefined;\nlet audioContext: AudioContext | undefined;\nlet sounds: Record<CallSound, HTMLAudioElement>;\n\n// Workaround: this function is called once on the first user interaction.\n// After that, it will be possible to play the notification on iOS without problems.\n// https://rosswintle.uk/2019/01/skirting-the-ios-safari-audio-auto-play-policy-for-ui-sound-effects/\nexport function initializeSoundsForSafari() {\n  initializeSounds();\n\n  return Promise.all(Object.values(sounds).map((sound) => {\n    const prevSrc = sound.src;\n    sound.src = silentSound;\n    sound.muted = true;\n    sound.volume = 0.0001;\n    return sound.play()\n      .then(() => {\n        sound.pause();\n        sound.volume = 1;\n        sound.currentTime = 0;\n        sound.muted = false;\n\n        requestNextMutation(() => {\n          sound.src = prevSrc;\n        });\n      });\n  }));\n}\n\nexport function initializeSounds() {\n  if (sounds) {\n    return;\n  }\n  const joinAudio = new Audio('./voicechat_join.mp3');\n  const connectingAudio = new Audio('./voicechat_connecting.mp3');\n  connectingAudio.loop = true;\n  const leaveAudio = new Audio('./voicechat_leave.mp3');\n  const allowTalkAudio = new Audio('./voicechat_onallowtalk.mp3');\n  const busyAudio = new Audio('./call_busy.mp3');\n  const connectAudio = new Audio('./call_connect.mp3');\n  const endAudio = new Audio('./call_end.mp3');\n  const incomingAudio = new Audio('./call_incoming.mp3');\n  incomingAudio.loop = true;\n  const ringingAudio = new Audio('./call_ringing.mp3');\n  ringingAudio.loop = true;\n\n  sounds = {\n    join: joinAudio,\n    allowTalk: allowTalkAudio,\n    leave: leaveAudio,\n    connecting: connectingAudio,\n    incoming: incomingAudio,\n    end: endAudio,\n    connect: connectAudio,\n    busy: busyAudio,\n    ringing: ringingAudio,\n  };\n}\n\nasync function fetchGroupCall<T extends GlobalState>(global: T, groupCall: Partial<ApiGroupCall>) {\n  if (selectIsCurrentUserFrozen(global)) return undefined;\n  const result = await callApi('getGroupCall', {\n    call: groupCall,\n  });\n\n  if (!result) return undefined;\n\n  global = getGlobal();\n\n  const existingGroupCall = selectGroupCall(global, groupCall.id!);\n\n  global = updateGroupCall(\n    global,\n    groupCall.id!,\n    omit(result.groupCall, ['connectionState']),\n    undefined,\n    existingGroupCall?.isLoaded ? undefined : result.groupCall.participantsCount,\n  );\n\n  setGlobal(global);\n\n  return result.groupCall;\n}\n\nfunction requestGroupCallParticipants(\n  groupCall: Partial<ApiGroupCall>, nextOffset?: string,\n) {\n  return callApi('fetchGroupCallParticipants', {\n    call: groupCall as ApiGroupCall,\n    offset: nextOffset,\n  });\n}\n\naddActionHandler('toggleGroupCallPanel', (global, actions, payload): ActionReturnType => {\n  const { force, tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    isCallPanelVisible: 'force' in (payload || {}) ? force : !selectTabState(global, tabId).isCallPanelVisible,\n  }, tabId);\n});\n\naddActionHandler('subscribeToGroupCallUpdates', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const { subscribed, id } = payload!;\n  const groupCall = selectGroupCall(global, id);\n\n  if (!groupCall) return;\n\n  if (subscribed) {\n    await fetchGroupCall(global, groupCall);\n    global = getGlobal();\n    await requestGroupCallParticipants(groupCall);\n  }\n\n  await callApi('toggleGroupCallStartSubscription', {\n    subscribed,\n    call: groupCall,\n  });\n});\n\naddActionHandler('createGroupCall', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('createGroupCall', {\n    peer: chat,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateGroupCall(global, result.id, {\n    ...result,\n    chatId,\n  });\n  setGlobal(global);\n\n  actions.requestMasterAndJoinGroupCall({ id: result.id, accessHash: result.accessHash, tabId });\n});\n\naddActionHandler('createGroupCallInviteLink', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n\n  let inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  if (hasPublicUsername) {\n    inviteLink = await callApi('exportGroupCallInvite', {\n      call: groupCall,\n      canSelfUnmute: false,\n    });\n  }\n\n  if (!inviteLink) {\n    return;\n  }\n\n  copyTextToClipboard(inviteLink);\n  actions.showNotification({\n    message: {\n      key: 'LinkCopied',\n    },\n    tabId,\n  });\n});\n\naddActionHandler('joinVoiceChatByLink', async (global, actions, payload): Promise<void> => {\n  const { username, inviteHash, tabId = getCurrentTabId() } = payload;\n\n  const chat = await fetchChatByUsername(global, username);\n\n  if (!chat) {\n    actions.showNotification({ message: langProvider.oldTranslate('NoUsernameFound'), tabId });\n    return;\n  }\n\n  global = getGlobal();\n  const full = await loadFullChat(global, actions, chat);\n\n  if (full?.groupCall) {\n    actions.requestMasterAndJoinGroupCall({\n      id: full.groupCall.id,\n      accessHash: full.groupCall.accessHash,\n      inviteHash,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('requestMasterAndJoinGroupCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'joinGroupCall',\n    payload,\n    tabId: payload.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('requestMasterAndAcceptCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'acceptCall',\n    payload: undefined,\n    tabId: payload?.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('joinGroupCall', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, id, accessHash, inviteHash, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (!ARE_CALLS_SUPPORTED) {\n    actions.showNotification({\n      message: \"Sorry, your browser doesn't support group calls\",\n      tabId,\n    });\n    return;\n  }\n\n  if (global.phoneCall) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  createAudioElement();\n\n  initializeSounds();\n  global = getGlobal();\n  void checkNavigatorUserMediaPermissions(global, actions, true, tabId);\n\n  const { groupCalls: { activeGroupCallId } } = global;\n  let groupCall = id ? selectGroupCall(global, id) : selectChatGroupCall(global, chatId!);\n\n  if (groupCall && groupCall.id === activeGroupCallId) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  if (activeGroupCallId) {\n    if ('leaveGroupCall' in actions) {\n      actions.leaveGroupCall({\n        rejoin: payload,\n        tabId,\n      });\n    }\n    return;\n  }\n\n  if (groupCall && activeGroupCallId === groupCall.id) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  if (!groupCall && (!id || !accessHash) && chatId) {\n    const chat = selectChat(global, chatId);\n\n    if (!chat) return;\n\n    await loadFullChat(global, actions, chat);\n    global = getGlobal();\n    groupCall = selectChatGroupCall(global, chatId);\n  } else if (!groupCall && id && accessHash) {\n    groupCall = await fetchGroupCall(global, {\n      id,\n      accessHash,\n    });\n  }\n\n  if (!groupCall) return;\n\n  global = getGlobal();\n  global = updateGroupCall(\n    global,\n    groupCall.id,\n    {\n      ...groupCall,\n      inviteHash,\n    },\n    undefined,\n    groupCall.participantsCount + 1,\n  );\n  global = {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      activeGroupCallId: groupCall.id,\n    },\n  };\n\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: false, tabId });\n});\n\naddActionHandler('playGroupCallSound', (global, actions, payload): ActionReturnType => {\n  const { sound } = payload!;\n\n  if (!sounds[sound]) {\n    return;\n  }\n\n  const doPlay = () => {\n    if (sound !== 'connecting') {\n      sounds.connecting.pause();\n    }\n    if (sound !== 'incoming') {\n      sounds.incoming.pause();\n    }\n    if (sound !== 'ringing') {\n      sounds.ringing.pause();\n    }\n    safePlay(sounds[sound]);\n  };\n\n  doPlay();\n});\n\naddActionHandler('loadMoreGroupCallParticipants', (global): ActionReturnType => {\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) {\n    return;\n  }\n\n  void requestGroupCallParticipants(groupCall, groupCall.nextOffset);\n});\n\naddActionHandler('requestMasterAndRequestCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'requestCall',\n    payload,\n    tabId: payload.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('requestCall', (global, actions, payload): ActionReturnType => {\n  const { userId, isVideo, tabId = getCurrentTabId() } = payload;\n\n  if (global.phoneCall) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  const user = selectUser(global, userId);\n\n  if (!user) {\n    return;\n  }\n\n  initializeSounds();\n  global = getGlobal();\n  void checkNavigatorUserMediaPermissions(global, actions, isVideo, tabId);\n\n  global = getGlobal();\n  global = {\n    ...global,\n    phoneCall: {\n      id: '',\n      state: 'requesting',\n      participantId: userId,\n      isVideo,\n      adminId: global.currentUserId,\n    },\n  };\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: false, tabId });\n});\n\nfunction createAudioContext() {\n  return (new (window.AudioContext || (window as any).webkitAudioContext)());\n}\n\nconst silence = (ctx: AudioContext) => {\n  const oscillator = ctx.createOscillator();\n  const dst = oscillator.connect(ctx.createMediaStreamDestination());\n  oscillator.start();\n  return new MediaStream([Object.assign((dst as any).stream.getAudioTracks()[0], { enabled: false })]);\n};\n\nfunction createAudioElement() {\n  const ctx = createAudioContext();\n  audioElement = new Audio();\n  audioContext = ctx;\n  audioElement.srcObject = silence(ctx);\n  safePlay(audioElement);\n}\n\nexport function getGroupCallAudioElement() {\n  return audioElement;\n}\n\nexport function getGroupCallAudioContext() {\n  return audioContext;\n}\n\nexport function removeGroupCallAudioElement() {\n  audioElement?.pause();\n  audioContext = undefined;\n  audioElement = undefined;\n}\n\n// This method is used instead of a navigator.permissions.query to determine permission to use a microphone,\n// because Firefox does not have support for 'microphone' and 'camera' permissions\n// https://github.com/mozilla/standards-positions/issues/19#issuecomment-370158947\nexport function checkNavigatorUserMediaPermissions<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions, isVideo?: boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  if (isVideo) {\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((stream) => {\n        if (stream.getVideoTracks().length === 0) {\n          actions.showNotification({\n            message: langProvider.oldTranslate('Call.Camera.Error'),\n            tabId,\n          });\n        } else {\n          stream.getTracks().forEach((track) => track.stop());\n          checkMicrophonePermission(global, actions, tabId);\n        }\n      })\n      .catch(() => {\n        actions.showNotification({\n          message: langProvider.oldTranslate('Call.Camera.Error'),\n          tabId,\n        });\n      });\n  } else {\n    checkMicrophonePermission(global, actions, tabId);\n  }\n}\n\nfunction checkMicrophonePermission<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  navigator.mediaDevices.getUserMedia({ audio: true })\n    .then((stream) => {\n      if (stream.getAudioTracks().length === 0) {\n        actions.showNotification({\n          message: langProvider.oldTranslate('RequestAcces.Error.HaveNotAccess.Call'),\n          tabId,\n        });\n      } else {\n        stream.getTracks().forEach((track) => track.stop());\n      }\n    })\n    .catch(() => {\n      actions.showNotification({\n        message: langProvider.oldTranslate('RequestAcces.Error.HaveNotAccess.Call'),\n        tabId,\n      });\n    });\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  googleLogin: () => Promise<any>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import type { P2PPayloadType } from './p2pMessage';\nimport type { PayloadType } from './types';\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// unsign => sign\nexport function toTelegramSource(source: number) {\n  // eslint-disable-next-line no-bitwise\n  return source << 0;\n}\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// sign => unsign\nexport function fromTelegramSource(source: number) {\n  // eslint-disable-next-line no-bitwise\n  return source >>> 0;\n}\n\nexport function getAmplitude(array: Uint8Array, scale = 3) {\n  if (!array) return 0;\n\n  const { length } = array;\n  let total = 0;\n  for (let i = 0; i < length; i++) {\n    total += array[i] * array[i];\n  }\n  const rms = Math.sqrt(total / length) / 255;\n\n  return Math.min(1, rms * scale);\n}\n\nexport function p2pPayloadTypeToConference(p: P2PPayloadType): PayloadType {\n  return {\n    id: p.id,\n    name: p.name,\n    'rtcp-fbs': p.feedbackTypes,\n    clockrate: p.clockrate,\n    parameters: p.parameters,\n    channels: p.channels,\n  };\n}\n\nexport function isRelayAddress(candidate: string) {\n  const parts = candidate.split(' ');\n  return parts.some((part) => part === 'relay');\n}\n\nexport function removeRelatedAddress(candidate: string) {\n  const parts = candidate.split(' ');\n\n  const raddrIndex = parts.indexOf('raddr');\n  if (raddrIndex !== -1) {\n    parts.splice(raddrIndex, 2);\n  }\n\n  const rportIndex = parts.indexOf('rport');\n  if (rportIndex !== -1) {\n    parts.splice(rportIndex, 2);\n  }\n\n  return parts.join(' ');\n}\n\nexport const THRESHOLD = 0.1;\n\nexport const IS_SCREENSHARE_SUPPORTED = 'getDisplayMedia' in (navigator?.mediaDevices || {});\nexport const IS_ECHO_CANCELLATION_SUPPORTED = navigator?.mediaDevices?.getSupportedConstraints().echoCancellation;\n// @ts-ignore\nexport const IS_NOISE_SUPPRESSION_SUPPORTED = navigator?.mediaDevices?.getSupportedConstraints().noiseSuppression;\n","import { toTelegramSource } from './utils';\nimport type { JoinGroupCallPayload, SsrcGroup } from './types';\n\nexport default (sessionDescription: RTCSessionDescriptionInit, isP2p = false): JoinGroupCallPayload => {\n  if (!sessionDescription || !sessionDescription.sdp) {\n    throw Error('Failed parsing SDP: session description is null');\n  }\n\n  const sections = sessionDescription\n    .sdp\n    .split('\\r\\nm=')\n    .map((s, i) => (i === 0 ? s : `m=${s}`))\n    .reduce((acc: Record<string, string[]>, el) => {\n      const name = el.match(/^m=(.+?)\\s/)?.[1] || 'header';\n      acc[acc.hasOwnProperty(name) && name === 'video' ? 'screencast' : name] = el.split('\\r\\n').filter(Boolean);\n      return acc;\n    }, {});\n\n  const lookup = (prefix: string, sectionName?: string) => {\n    if (!sectionName) {\n      return Object.values(sections).map((section) => {\n        return section.find((line) => line.startsWith(prefix))?.substr(prefix.length);\n      }).filter(Boolean)[0];\n    } else {\n      return sections[sectionName]?.find((line) => line.startsWith(prefix))?.substr(prefix.length);\n    }\n  };\n\n  const parseExtmaps = (sectionName: string) => {\n    return sections[sectionName].filter((l) => l.startsWith('a=extmap')).map((l) => {\n      const [, id, uri] = l.match(/extmap:(\\d+)(?:\\/.+)?\\s(.+)/)!;\n      return { id: Number(id), uri };\n    });\n  };\n\n  const parsePayloadTypes = (sectionName: string) => {\n    const payloads = sections[sectionName].filter((l) => l.startsWith('a=rtpmap')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const [name, clockrate, channels] = data.split('/');\n      return {\n        id: Number(id), name, clockrate: Number(clockrate), ...(channels && { channels: Number(channels) }),\n      };\n    });\n\n    const fbParams = sections[sectionName].filter((l) => l.startsWith('a=rtcp-fb')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const [type, subtype] = data.split(' ');\n      return { id: Number(id), type, subtype: subtype || '' };\n    });\n\n    const parameters = sections[sectionName].filter((l) => l.startsWith('a=fmtp')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const d = data?.split(';').reduce((acc: Record<string, string>, q) => {\n        const [name, value] = q.split('=');\n        acc[name] = value;\n        return acc;\n      }, {});\n      if (!d || Object.values(d).some((z) => !z)) return undefined;\n      return { id: Number(id), data: d };\n    }).filter(Boolean);\n\n    return payloads.map((payload) => {\n      const p = parameters.filter((l) => l!.id === payload.id).map((q) => q!.data).reduce((acc, el) => {\n        return Object.assign(acc, el);\n      }, {});\n      const f = fbParams.filter((l) => l.id === payload.id).map((l) => {\n        return {\n          type: l.type,\n          subtype: l.subtype,\n        };\n      });\n\n      return {\n        ...payload,\n        ...(Object.keys(p).length > 0 && { parameters: p }),\n        ...(f.length > 0 && { feedbackTypes: f }),\n      };\n    });\n  };\n\n  const rawSource = lookup('a=ssrc:', 'audio');\n  const sourceAudio = rawSource && Number(rawSource.split(' ')[0]);\n\n  // TODO multiple source groups\n  const rawSourceVideo = lookup('a=ssrc-group:', 'video')?.split(' ') || undefined;\n  const rawSourceScreencast = lookup('a=ssrc-group:', 'screencast')?.split(' ') || undefined;\n\n  if (!rawSourceVideo) {\n    throw Error('Failed parsing SDP: no video ssrc');\n  }\n\n  const [hash, fingerprint] = lookup('a=fingerprint:')?.split(' ') || [];\n\n  const setup = lookup('a=setup:');\n  if (!hash || !fingerprint) {\n    throw Error('Failed parsing SDP: no fingerprint');\n  }\n\n  console.log(sections);\n\n  const ufrag = lookup('a=ice-ufrag:');\n  const pwd = lookup('a=ice-pwd:');\n\n  if (!ufrag || !pwd) {\n    throw Error('Failed parsing SDP: no ICE ufrag or pwd');\n  }\n\n  return {\n    fingerprints: [\n      {\n        fingerprint,\n        hash,\n        setup: isP2p ? setup! : 'active',\n      },\n    ],\n    pwd,\n    ufrag,\n    ...(sourceAudio && { ssrc: toTelegramSource(sourceAudio) }),\n    ...(rawSourceVideo && {\n      'ssrc-groups': [\n        {\n          semantics: rawSourceVideo[0],\n          sources: rawSourceVideo.slice(1, rawSourceVideo.length).map(Number).map(toTelegramSource),\n        },\n        (isP2p && rawSourceScreencast && {\n          semantics: rawSourceScreencast[0],\n          sources: rawSourceScreencast.slice(1, rawSourceScreencast.length).map(Number).map(toTelegramSource),\n        }),\n      ].filter(Boolean) as SsrcGroup[],\n    }),\n    ...(isP2p && {\n      audioExtmap: parseExtmaps('audio'),\n      videoExtmap: parseExtmaps('video'),\n      screencastExtmap: parseExtmaps('screencast'),\n      audioPayloadTypes: parsePayloadTypes('audio'),\n      videoPayloadTypes: parsePayloadTypes('video'),\n      screencastPayloadTypes: parsePayloadTypes('screencast'),\n    }),\n  };\n};\n","import type {\n  Candidate, GroupCallTransport, PayloadType, RTPExtension, SsrcGroup,\n} from './types';\nimport { fromTelegramSource } from './utils';\n\nexport type Conference = {\n  sessionId: number;\n  audioExtensions: RTPExtension[];\n  videoExtensions: RTPExtension[];\n  audioPayloadTypes: PayloadType[];\n  videoPayloadTypes: PayloadType[];\n  ssrcs: Ssrc[];\n  transport: GroupCallTransport;\n};\n\nexport type Ssrc = {\n  userId: string;\n  endpoint: string;\n  mid: string;\n  isMain: boolean;\n  isRemoved?: boolean;\n  isVideo: boolean;\n  isPresentation?: boolean;\n  sourceGroups: SsrcGroup[];\n};\n\nexport default (conference: Conference, isAnswer = false, isPresentation = false, isP2p = false) => {\n  const lines: string[] = [];\n\n  const add = (value: string) => {\n    lines.push(value);\n  };\n\n  const {\n    sessionId,\n    ssrcs,\n    audioExtensions,\n    videoExtensions,\n    audioPayloadTypes,\n    videoPayloadTypes,\n    transport: {\n      ufrag,\n      pwd,\n      fingerprints,\n      candidates,\n    },\n  } = conference;\n\n  // Header\n  add('v=0'); // version\n  add(`o=- ${sessionId} 2 IN IP4 0.0.0.0`); // sessionId, 2=sessionVersion\n  add('s=-'); // name of the session\n  add('t=0 0'); // time when session is valid\n  add('a=ice-options:trickle');\n  add('a=msid-semantic:WMS *');\n  add(`a=group:BUNDLE ${ssrcs.map((ssrc) => ssrc.mid).join(' ')}${isPresentation ? '' : ` ${isP2p ? '3' : '2'}`}`);\n  // ice-lite: is a minimal version of the ICE specification, intended only for servers running on a public IP address\n  if (!isP2p) add('a=ice-lite');\n\n  const addCandidate = (c: Candidate) => {\n    if (c.sdpString) {\n      add(`a=${c.sdpString}`);\n    } else {\n      let str = '';\n      str += 'a=candidate:';\n      str += `${c.foundation} ${c.component} ${c.protocol} ${c.priority} ${c.ip} ${c.port} typ ${c.type}`;\n      if ('rel-addr' in c) {\n        str += ` raddr ${c['rel-addr']} rport ${c['rel-port']}`;\n      }\n      str += ` generation ${c.generation}`;\n      add(str);\n    }\n  };\n\n  const addTransport = () => {\n    add(`a=ice-ufrag:${ufrag}`);\n    add(`a=ice-pwd:${pwd}`);\n    fingerprints.forEach((fingerprint) => {\n      add(`a=fingerprint:${fingerprint.hash} ${fingerprint.fingerprint}`);\n      add(`a=setup:${isP2p ? (fingerprint.setup) : 'passive'}`);\n    });\n\n    candidates.forEach(addCandidate);\n  };\n\n  const addPayloadType = (payloadType: PayloadType) => {\n    const {\n      channels, id, name, clockrate, parameters,\n    } = payloadType;\n\n    const channelsString = channels ? `/${channels}` : '';\n    add(`a=rtpmap:${id} ${name}/${clockrate}${channelsString}`);\n\n    if (parameters) {\n      const parametersString = Object.keys(parameters).map((key) => {\n        return `${key}=${parameters![key]};`;\n      }).join(' ');\n\n      add(`a=fmtp:${id} ${parametersString}`);\n    }\n\n    payloadType['rtcp-fbs']?.forEach((fbParam) => {\n      add(`a=rtcp-fb:${id} ${fbParam.type}${fbParam.subtype ? ` ${fbParam.subtype}` : ''}`);\n    });\n  };\n\n  const addSsrcEntry = (entry: Ssrc) => {\n    const payloadTypes = entry.isVideo ? videoPayloadTypes : audioPayloadTypes;\n\n    const type = entry.isVideo ? 'video' : 'audio';\n    add(`m=${type} ${entry.isMain ? 1 : 0} RTP/SAVPF ${payloadTypes.map((l) => l.id).join(' ')}`);\n    add('c=IN IP4 0.0.0.0');\n    add('b=AS:1300'); // 1300000 / 1000\n    add(`a=mid:${entry.mid}`);\n    add('a=rtcp-mux');\n    payloadTypes.forEach(addPayloadType);\n\n    add('a=rtcp:1 IN IP4 0.0.0.0');\n    if (entry.isVideo) {\n      add('a=rtcp-rsize');\n    }\n\n    (entry.isVideo ? videoExtensions : audioExtensions).forEach(({ id, uri }) => {\n      add(`a=extmap:${id} ${uri}`);\n    });\n\n    if (entry.isRemoved) {\n      add('a=inactive');\n      return;\n    }\n\n    addTransport();\n\n    if (isP2p) {\n      add('a=sendrecv');\n      add('a=bundle-only');\n    } else {\n      if (isAnswer) {\n        add('a=recvonly');\n        return;\n      }\n      if (entry.isMain) {\n        add('a=sendrecv');\n      } else {\n        add('a=sendonly');\n        add('a=bundle-only');\n      }\n    }\n\n    entry.sourceGroups.forEach((sourceGroup) => {\n      if (sourceGroup.semantics) {\n        add(`a=ssrc-group:${sourceGroup.semantics} ${sourceGroup.sources.map(fromTelegramSource).join(' ')}`);\n      }\n      sourceGroup.sources.forEach((ssrcTelegram) => {\n        const ssrc = fromTelegramSource(ssrcTelegram);\n        add(`a=ssrc:${ssrc} cname:${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} msid:${entry.endpoint} ${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} mslabel:${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} label:${entry.endpoint}`);\n      });\n    });\n  };\n\n  if (!isP2p) {\n    ssrcs.filter((ssrc) => ssrc.mid === '0' || ssrc.mid === '1').map(addSsrcEntry);\n  } else {\n    ssrcs.filter(addSsrcEntry);\n  }\n\n  if (!isPresentation) {\n    add('m=application 1 UDP/DTLS/SCTP webrtc-datachannel');\n    add('c=IN IP4 0.0.0.0');\n    addTransport();\n    add('a=ice-options:trickle');\n    add(`a=mid:${isP2p ? '3' : (isPresentation ? '1' : '2')}`);\n    add('a=sctp-port:5000');\n    add('a=max-message-size:262144');\n  }\n\n  if (!isP2p) {\n    ssrcs.filter((ssrc) => ssrc.mid !== '0' && ssrc.mid !== '1').map(addSsrcEntry);\n  }\n\n  return `${lines.join('\\n')}\\n`;\n};\n","// https://blog.mozilla.org/webrtc/warm-up-with-replacetrack/\n\nexport const silence = (ctx: AudioContext) => {\n  const oscillator = ctx.createOscillator();\n  const dst = oscillator.connect(ctx.createMediaStreamDestination());\n  oscillator.start();\n  return new MediaStream([Object.assign((dst as any).stream.getAudioTracks()[0], { enabled: false })]);\n};\n\nexport const black = ({ width = 640, height = 480 } = {}) => {\n  const canvas = Object.assign(document.createElement('canvas'), { width, height });\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw Error('Cannot create canvas ctx');\n\n  ctx.fillRect(0, 0, width, height);\n  const stream = canvas.captureStream();\n  return new MediaStream([Object.assign(stream.getVideoTracks()[0], { enabled: false })]);\n};\n","import parseSdp from './parseSdp';\nimport { ColibriClass } from './colibriClass';\nimport type {\n  GroupCallConnectionData, GroupCallConnectionState, GroupCallParticipant, JoinGroupCallPayload,\n} from './types';\nimport buildSdp, { Conference, Ssrc } from './buildSdp';\nimport { black, silence } from './blacksilence';\nimport {\n  getAmplitude,\n  IS_ECHO_CANCELLATION_SUPPORTED,\n  IS_NOISE_SUPPRESSION_SUPPORTED,\n  THRESHOLD,\n} from './utils';\nimport Deferred from \"../../util/Deferred\";\nimport safePlay from \"../../util/safePlay\";\n\nexport type StreamType = 'audio' | 'video' | 'presentation';\nconst DEFAULT_MID = 3;\ntype GroupCallState = {\n  connection?: RTCPeerConnection;\n  screenshareConnection?: RTCPeerConnection;\n  dataChannel?: RTCDataChannel;\n  screenshareDataChannel?: RTCDataChannel;\n  participants?: GroupCallParticipant[];\n  conference?: Partial<Conference>;\n  screenshareConference?: Partial<Conference>;\n  streams?: Record<string, {\n    audio?: MediaStream;\n    video?: MediaStream;\n    presentation?: MediaStream;\n  }>;\n  participantFunctions?: Record<string, {\n    setVolume?: (volume: number) => void;\n    toggleMute?: (muted: boolean) => void;\n    getCurrentAmplitude?: () => number;\n  }>;\n  onUpdate?: (...args: any[]) => void;\n  myId?: string;\n  black?: MediaStream;\n  silence?: MediaStream;\n  updatingParticipantsQueue?: any[];\n  facingMode?: VideoFacingModeEnum;\n  isSpeakerDisabled?: boolean;\n  analyserInterval?: number;\n  speaking?: Record<string, number>;\n  audioElement?: HTMLAudioElement;\n  destination?: MediaStreamAudioDestinationNode;\n  audioContext?: AudioContext;\n  mediaStream?: MediaStream;\n  lastMid: number;\n  audioStream?: MediaStream;\n  audioSource?: MediaStreamAudioSourceNode;\n  audioAnalyser?: AnalyserNode;\n};\n\nlet state: GroupCallState | undefined;\n\nexport async function getDevices(streamType: StreamType, isInput = true) {\n  return (await navigator.mediaDevices.enumerateDevices())\n    .filter((l) => l.kind === `${streamType}${isInput ? 'input' : 'output'}`);\n}\n\nexport function toggleSpeaker() {\n  if (!state) {\n    return;\n  }\n\n  state.isSpeakerDisabled = !state.isSpeakerDisabled;\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallConnectionState',\n    connectionState: 'connected',\n    isSpeakerDisabled: state.isSpeakerDisabled,\n  });\n  if (state.participantFunctions) {\n    Object.values(state.participantFunctions).forEach((l) => {\n      l.toggleMute?.(!!state?.isSpeakerDisabled);\n    });\n  }\n}\n\nfunction leavePresentation(isFromToggle?: boolean) {\n  if (!state) {\n    return;\n  }\n  state.screenshareDataChannel?.close();\n  state.screenshareConnection?.close();\n\n  if (!isFromToggle) {\n    state.onUpdate?.({\n      '@type': 'updateGroupCallLeavePresentation',\n    });\n  }\n}\n\nexport function toggleNoiseSuppression() {\n  if (!state || !state.myId || !state.streams) {\n    return;\n  }\n\n  const audioStream = state.streams[state.myId].audio;\n  if (!audioStream) {\n    return;\n  }\n\n  const track = audioStream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  // @ts-ignore\n  const { echoCancellation, noiseSuppression } = track.getConstraints();\n\n  track.applyConstraints({\n    echoCancellation: !echoCancellation,\n    // @ts-ignore\n    noiseSuppression: !noiseSuppression,\n  });\n}\n\nexport function getUserStreams(userId: string) {\n  return state?.streams?.[userId];\n}\n\nexport function setVolume(userId: string, volume: number) {\n  const participantFunctions = state?.participantFunctions?.[userId];\n  if (!participantFunctions) return;\n  participantFunctions.setVolume?.(volume);\n}\n\nexport function isStreamEnabled(streamType: StreamType, userId?: string) {\n  const id = userId || state?.myId;\n  const stream = id && getUserStreams(id)?.[streamType];\n  if (!stream) return false;\n\n  return stream.getTracks()[0]?.enabled;\n}\n\nfunction updateGroupCallStreams(userId: string) {\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallStreams',\n    userId,\n    hasAudioStream: isStreamEnabled('audio', userId),\n    hasVideoStream: isStreamEnabled('video', userId),\n    hasPresentationStream: isStreamEnabled('presentation', userId),\n    amplitude: state.speaking?.[userId],\n  });\n}\n\nasync function getUserStream(streamType: StreamType, facing: VideoFacingModeEnum = 'user') {\n  if (streamType === 'audio' && state?.audioStream) {\n    return state.audioStream;\n  }\n\n  if (streamType === 'presentation') {\n    return (navigator.mediaDevices as any).getDisplayMedia({\n      audio: false,\n      video: true,\n    });\n  }\n\n  const media = await navigator.mediaDevices.getUserMedia({\n    audio: streamType === 'audio' ? {\n      // @ts-ignore\n      ...(IS_ECHO_CANCELLATION_SUPPORTED && {echoCancellation: true}),\n      ...(IS_NOISE_SUPPRESSION_SUPPORTED && {noiseSuppression: true}),\n    } : false,\n    video: streamType === 'video' ? {\n      facingMode: facing,\n    } : false,\n  });\n\n  if (state && streamType === 'audio') {\n    state.audioStream = media;\n  }\n\n  if (streamType === 'video') {\n    const vid = document.createElement('video');\n    vid.srcObject = media;\n\n    const deferred = new Deferred();\n    vid.oncanplay = () => deferred.resolve();\n    await deferred.promise;\n  }\n\n  return media;\n}\n\nexport async function switchCameraInput() {\n  if (!state?.myId || !state.connection || !state.streams || !state.facingMode) {\n    return;\n  }\n\n  const stream = getUserStreams(state.myId)?.video;\n\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  state.facingMode = state.facingMode === 'environment' ? 'user' : 'environment';\n  try {\n    const newStream = await getUserStream('video', state.facingMode);\n\n    await sender.replaceTrack(newStream.getTracks()[0]);\n    state.streams[state.myId].video = newStream;\n  } catch (e) {\n\n  }\n}\n\nexport async function toggleStream(streamType: StreamType, value: boolean | undefined = undefined) {\n  if (!state || !state.myId || !state.connection || !state.streams) {\n    return;\n  }\n\n  const stream = getUserStreams(state.myId)?.[streamType];\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = [\n    ...state.connection.getSenders(),\n    ...(state.screenshareConnection?.getSenders() || []),\n  ].find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  value = value === undefined ? !track.enabled : value;\n\n  try {\n    if (value && !track.enabled) {\n      const newStream = await getUserStream(streamType);\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      state.streams[state.myId][streamType] = newStream;\n      if (streamType === 'video') {\n        state.facingMode = 'user';\n      } else if (streamType === 'audio') {\n        const { audioContext } = state;\n        if (!audioContext) return;\n        const source = state.audioSource || audioContext.createMediaStreamSource(newStream);\n\n        const analyser = state.audioAnalyser || audioContext.createAnalyser();\n        analyser.minDecibels = -100;\n        analyser.maxDecibels = -30;\n        analyser.smoothingTimeConstant = 0.05;\n        analyser.fftSize = 1024;\n\n        source.connect(analyser);\n\n        state = {\n          ...state,\n          audioSource: source,\n          audioAnalyser: analyser,\n          participantFunctions: {\n            ...state.participantFunctions,\n            [state.myId]: {\n              ...state.participantFunctions?.[state.myId],\n              getCurrentAmplitude: () => {\n                const array = new Uint8Array(analyser.frequencyBinCount);\n                analyser.getByteFrequencyData(array);\n                return getAmplitude(array, 1.5);\n              },\n            },\n          },\n        };\n      }\n    } else if (!value && track.enabled) {\n      const newStream = streamType === 'audio' ? state.silence : state.black;\n      if (!newStream) return;\n\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      state.streams[state.myId][streamType] = newStream;\n      if (streamType === 'video') {\n        state.facingMode = undefined;\n      }\n\n      if(streamType !== 'audio') {\n        // We only want to stop video streams\n        track.stop();\n      } else {\n        state.audioSource?.disconnect();\n        state.audioAnalyser?.disconnect();\n      }\n    }\n    updateGroupCallStreams(state.myId!);\n    if (streamType === 'presentation' && !value) leavePresentation(true);\n  } catch (e) {\n\n  }\n}\n\nfunction updateConnectionState(connectionState: GroupCallConnectionState) {\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallConnectionState',\n    connectionState,\n  });\n}\n\nexport function leaveGroupCall() {\n  if (!state) {\n    return;\n  }\n\n  if (state.myId && state.streams?.[state.myId]) {\n    Object.values(state.streams[state.myId] || {}).forEach((stream) => {\n      stream?.getTracks().forEach((track) => {\n        track.stop();\n      });\n    });\n  }\n\n  state.audioStream?.getTracks().forEach((track) => {\n    track.stop();\n  });\n  leavePresentation(true);\n  state.dataChannel?.close();\n  state.connection?.close();\n  updateConnectionState('disconnected');\n\n  if (state.analyserInterval) {\n    clearInterval(state.analyserInterval);\n  }\n\n  state = undefined;\n}\n\nfunction analyzeAmplitudes() {\n  if (!state || !state.participantFunctions) return;\n\n  Object.keys(state.participantFunctions).forEach((id) => {\n    const { getCurrentAmplitude } = state!.participantFunctions![Number(id)];\n\n    if (getCurrentAmplitude) {\n      const amplitude = getCurrentAmplitude();\n      const prevAmplitude = state!.speaking![id] || 0;\n      state!.speaking![id] = amplitude;\n      if ((amplitude > THRESHOLD && prevAmplitude <= THRESHOLD)\n        || (amplitude <= THRESHOLD && prevAmplitude > THRESHOLD)) {\n        updateGroupCallStreams(id);\n      }\n    }\n  });\n}\n\nfunction createDataChannel(connection: RTCPeerConnection) {\n  const dataChannel = connection.createDataChannel('data', {\n    id: 0,\n  });\n\n  dataChannel.onopen = () => {\n    // console.log('Data channel open!');\n  };\n\n  dataChannel.onmessage = (e) => {\n    // console.log('onmessage');\n    const data = JSON.parse(e.data) as ColibriClass;\n    // console.log(data);\n    switch (data.colibriClass) {\n      case 'DominantSpeakerEndpointChangeEvent':\n        break;\n      case 'SenderVideoConstraints':\n\n        break;\n      case 'EndpointConnectivityStatusChangeEvent':\n\n        break;\n    }\n  };\n\n  dataChannel.onerror = (e) => {\n    console.log('%conerror', 'background: green; font-size: 5em');\n    console.error(e);\n  };\n\n  return dataChannel;\n}\n\nexport async function handleUpdateGroupCallParticipants(updatedParticipants: GroupCallParticipant[]) {\n  if (!state) {\n    return;\n  }\n\n  const {\n    participants, conference, connection, myId,\n  } = state;\n\n  if (!participants || !conference || !connection || !conference.ssrcs || !conference.transport || !myId) {\n    return;\n  }\n\n  // Joined from another client\n  if (updatedParticipants.find((participant) => {\n    return participant.isSelf\n      && participant.source\n      !== state?.conference?.ssrcs?.find((l) => l.isMain && !l.isVideo)?.sourceGroups[0].sources[0];\n  })) {\n    leaveGroupCall();\n    return;\n  }\n\n  const newEndpoints: string[] = [];\n  updatedParticipants.forEach((participant) => {\n    if (participant.isSelf) {\n      if (participant.isMuted && !participant.canSelfUnmute) {\n        // Muted by admin\n        toggleStream('audio', false);\n        toggleStream('video', false);\n        toggleStream('presentation', false);\n      }\n      return;\n    }\n\n    const { isLeft } = participant;\n    const isAudioLeft = participant.isMuted || participant.isMutedByMe;\n    const isVideoLeft = !participant.isVideoJoined || !participant.video || isLeft;\n    const isPresentationLeft = !participant.presentation || isLeft;\n\n    let hasVideo = false;\n    let hasAudio = false;\n    let hasPresentation = false;\n\n    conference.ssrcs!.filter((l) => l.userId === participant.id).forEach((ssrc) => {\n      if (!ssrc.isVideo) {\n        if (ssrc.sourceGroups[0].sources[0] === participant.source) {\n          hasAudio = true;\n        }\n        // console.log('has audio, removed=', isAudioLeft);\n        ssrc.isRemoved = isAudioLeft;\n      }\n\n      if (ssrc.isVideo) {\n        if (!ssrc.isPresentation) {\n          if (!!participant.video && ssrc.endpoint === participant.video.endpoint) {\n            hasVideo = true;\n          }\n          // console.log('has video = ', hasVideo, ' removed=', isVideoLeft);\n          ssrc.isRemoved = isVideoLeft;\n        }\n\n        if (ssrc.isPresentation) {\n          if (!!participant.presentation && ssrc.endpoint === participant.presentation.endpoint) {\n            hasPresentation = true;\n          }\n          // console.log('has presentation, removed=', isPresentationLeft);\n          ssrc.isRemoved = isPresentationLeft;\n        }\n      }\n    });\n\n    if (!isAudioLeft && !hasAudio) {\n      // console.log('add audio');\n      state!.lastMid = state!.lastMid + 1;\n      conference.ssrcs!.push({\n        userId: participant.id,\n        isMain: false,\n        endpoint: `audio${participant.source}`,\n        isVideo: false,\n        sourceGroups: [{\n          sources: [participant.source],\n        }],\n        mid: state!.lastMid.toString()\n      });\n    }\n\n    if (!isVideoLeft && !hasVideo && participant.video) {\n      // console.log('add video', participant.video);\n      state!.lastMid = state!.lastMid + 1;\n\n      newEndpoints.push(participant.video.endpoint);\n      conference.ssrcs!.push({\n        userId: participant.id,\n        isMain: false,\n        endpoint: participant.video.endpoint,\n        isVideo: true,\n        sourceGroups: participant.video.sourceGroups,\n        mid: state!.lastMid.toString()\n      });\n    }\n\n    if (!isPresentationLeft && !hasPresentation && participant.presentation) {\n      // console.log('add presentation');\n      state!.lastMid = state!.lastMid + 1;\n      conference.ssrcs!.push({\n        isPresentation: true,\n        userId: participant.id,\n        isMain: false,\n        endpoint: participant.presentation.endpoint,\n        isVideo: true,\n        sourceGroups: participant.presentation.sourceGroups,\n        mid: state!.lastMid.toString()\n      });\n    }\n  });\n\n  if (state.updatingParticipantsQueue) {\n    state.updatingParticipantsQueue.push(conference);\n    return;\n  } else {\n    state.updatingParticipantsQueue = [];\n  }\n\n  const sdp = buildSdp(conference as Conference);\n  await connection.setRemoteDescription({\n    type: 'offer',\n    sdp,\n  });\n\n  try {\n    const answer = await connection.createAnswer();\n    await connection.setLocalDescription(answer);\n\n    updateGroupCallStreams(myId);\n    if (state.updatingParticipantsQueue.length > 0) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const newConference of state.updatingParticipantsQueue) {\n        await connection.setRemoteDescription({\n          type: 'offer',\n          sdp: buildSdp(newConference as Conference),\n        });\n        const answerNew = await connection.createAnswer();\n        await connection.setLocalDescription(answerNew);\n        updateGroupCallStreams(myId);\n\n        // if (newEndpoints.length > 0) {\n        //   sendDataChannelMessage({\n        //     colibriClass: 'ReceiverVideoConstraints',\n        //     defaultConstraints: {\n        //       maxHeight: 0,\n        //     },\n        //     constraints: {\n        //       ...(newEndpoints.reduce((acc: Record<string, any>, el) => {\n        //         acc[el] = {\n        //           minHeight: 0,\n        //           maxHeight: 1080,\n        //         };\n        //         return acc;\n        //       }, {})),\n        //     },\n        //     onStageEndpoints: [],\n        //   });\n        // }\n      }\n    }\n    state.updatingParticipantsQueue = undefined;\n  } catch (e) {\n    console.error(e);\n  }\n}\n//\n// function sendDataChannelMessage(message: ColibriClass) {\n//   if (!state || !state.dataChannel || state.dataChannel.readyState !== 'open') {\n//     return;\n//   }\n//\n//   // console.log('SEND!', message);\n//   state.dataChannel.send(JSON.stringify(message));\n// }\n\nexport async function handleUpdateGroupCallConnection(data: GroupCallConnectionData, isPresentation: boolean) {\n  if (!state) {\n    return;\n  }\n\n  const conference = isPresentation ? state.screenshareConference : state.conference;\n  const connection = isPresentation ? state.screenshareConnection : state.connection;\n\n  if (!conference || !connection || !conference.ssrcs) {\n    return;\n  }\n\n  const sessionId = Date.now();\n  const newConference = {\n    ...conference,\n    transport: data.transport,\n    sessionId,\n    audioExtensions: data.audio?.['rtp-hdrexts'],\n    audioPayloadTypes: data.audio?.['payload-types'],\n    videoExtensions: data.video?.['rtp-hdrexts'],\n    videoPayloadTypes: data.video?.['payload-types'],\n  } as Conference;\n\n  state = {\n    ...state,\n    ...(!isPresentation ? { conference: newConference } : { screenshareConference: newConference }),\n  };\n\n  try {\n    await connection.setRemoteDescription({\n      type: 'answer',\n      sdp: buildSdp(newConference, true, isPresentation),\n    });\n\n    // state.resolveTest();\n    // state.test = true;\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction handleTrack(e: RTCTrackEvent) {\n  if (!state || !state.audioElement || !state.audioContext || !state.mediaStream) {\n    return;\n  }\n  const ssrc = state.conference?.ssrcs?.find((l) => l.endpoint === e.track.id);\n  if (!ssrc || !ssrc.userId) {\n    return;\n  }\n\n  const { userId, isPresentation } = ssrc;\n  const participant = state.participants?.find((p) => p.id === userId);\n\n  const streamType = (e.track.kind === 'video' ? (isPresentation ? 'presentation' : 'video') : 'audio') as StreamType;\n\n  e.track.onended = () => {\n    delete state?.streams?.[userId][streamType];\n    updateGroupCallStreams(userId);\n  };\n\n  const stream = e.streams[0];\n\n  if (e.track.kind === 'audio') {\n    const { mediaStream } = state;\n    const audioContext = new (window.AudioContext)();\n    const source = audioContext.createMediaStreamSource(stream);\n\n    const gainNode = audioContext.createGain();\n    gainNode.gain.value = (participant?.volume || 10000) / 10000;\n\n    const muteNode = audioContext.createGain();\n    gainNode.gain.value = 1;\n\n    const analyser = audioContext.createAnalyser();\n    analyser.minDecibels = -100;\n    analyser.maxDecibels = -30;\n    analyser.smoothingTimeConstant = 0.05;\n    analyser.fftSize = 1024;\n\n    source.connect(analyser).connect(muteNode).connect(gainNode).connect(audioContext.destination);\n\n    mediaStream!.addTrack(source.mediaStream.getAudioTracks()[0]);\n\n    // https://stackoverflow.com/questions/41784137/webrtc-doesnt-work-with-audiocontext#comment117600018_41784241\n    const test = new Audio();\n    test.srcObject = stream;\n    // test.srcObject = source.mediaStream;\n    test.muted = true;\n    test.remove();\n\n    state = {\n      ...state,\n      participantFunctions: {\n        ...state.participantFunctions,\n        [userId]: {\n          ...state.participantFunctions?.[userId],\n          setVolume: (volume: number) => {\n            gainNode.gain.value = volume > 1 ? volume * 2 : volume;\n          },\n          toggleMute: (muted?: boolean) => {\n            muteNode.gain.value = muted ? 0 : 1;\n          },\n          getCurrentAmplitude: () => {\n            const array = new Uint8Array(analyser.frequencyBinCount);\n            analyser.getByteFrequencyData(array);\n            return getAmplitude(array, 1.5);\n          },\n        },\n      },\n    };\n  }\n\n  state = {\n    ...state,\n    streams: {\n      ...state.streams,\n      [userId]: {\n        ...state.streams?.[userId],\n        [streamType]: stream,\n      },\n    },\n  };\n\n  updateGroupCallStreams(userId);\n}\n\nfunction initializeConnection(\n  streams: MediaStream[],\n  resolve: (payload: JoinGroupCallPayload) => void,\n  isPresentation = false,\n) {\n  const connection = new RTCPeerConnection();\n\n  const dataChannel = isPresentation ? undefined : createDataChannel(connection);\n\n  streams.forEach((stream) => stream.getTracks().forEach((track) => {\n    connection.addTrack(track, stream);\n  }));\n\n  if (!isPresentation) {\n    connection.oniceconnectionstatechange = () => {\n      const connectionState = connection.iceConnectionState;\n      console.log('iceconnectionstatechange', connectionState);\n      if (connectionState === 'connected' || connectionState === 'completed') {\n        updateConnectionState('connected');\n      } else if (connectionState === 'checking' || connectionState === 'new') {\n        updateConnectionState('connecting');\n      } else if (connection.iceConnectionState === 'disconnected') {\n        updateConnectionState('reconnecting');\n      }\n    };\n  }\n  connection.onconnectionstatechange = () => {\n    console.log('connectionstatechange', connection.connectionState);\n  }\n  connection.ontrack = handleTrack;\n  connection.onnegotiationneeded = async () => {\n    if (!state) return;\n\n    console.log('onnegotiationneeded');\n\n    const { myId } = state;\n\n    if (!myId) {\n      return;\n    }\n    const offer = await connection.createOffer({\n      offerToReceiveVideo: true,\n      offerToReceiveAudio: !isPresentation,\n    });\n    console.log('offer created');\n\n    await connection.setLocalDescription(offer);\n    console.log('local desc set');\n\n    if (!offer.sdp) {\n      return;\n    }\n\n    const sdp = parseSdp(offer);\n    const audioSsrc: Ssrc | undefined = !isPresentation ? {\n      userId: '',\n      sourceGroups: [\n        {\n          sources: [sdp.ssrc || 0],\n        },\n      ],\n      isRemoved: isPresentation,\n      isMain: true,\n      isVideo: false,\n      isPresentation,\n      endpoint: isPresentation ? '1' : '0',\n      mid: isPresentation ? '1' : '0'\n    } : undefined;\n\n    const videoSsrc: Ssrc | undefined = sdp['ssrc-groups'] && {\n      isPresentation,\n      userId: '',\n      sourceGroups: sdp['ssrc-groups'],\n      isMain: true,\n      isVideo: true,\n      endpoint: isPresentation ? '0' : '1',\n      mid: isPresentation ? '0' : '1'\n    };\n\n    const conference = isPresentation ? state.screenshareConference : state.conference;\n\n    const ssrcs: Ssrc[] = [];\n    if (isPresentation) {\n      if (videoSsrc) ssrcs.push(videoSsrc);\n      if (audioSsrc) ssrcs.push(audioSsrc);\n    } else {\n      if (audioSsrc) ssrcs.push(audioSsrc);\n      if (videoSsrc) ssrcs.push(videoSsrc);\n    }\n\n    const audioStream = streams.find((l) => l.getTracks()[0].kind === 'audio');\n    const videoStream = streams.find((l) => l.getTracks()[0].kind === 'video');\n\n    state = {\n      ...state,\n      ...(!isPresentation ? {\n        conference: {\n          ...conference,\n          ssrcs,\n        },\n      } : {\n        screenshareConference: {\n          ...conference,\n          ssrcs,\n        },\n      }),\n      streams: {\n        ...state.streams,\n        [myId]: {\n          ...state.streams?.[myId],\n          ...(audioStream && { audio: audioStream }),\n          ...(!isPresentation && videoStream ? { video: videoStream } : { presentation: videoStream }),\n        },\n      },\n    };\n\n    updateGroupCallStreams(myId);\n\n    resolve(sdp);\n  };\n\n  return { connection, dataChannel };\n}\n\nexport async function startSharingScreen(): Promise<JoinGroupCallPayload | undefined> {\n  if (!state) {\n    return undefined;\n  }\n\n  try {\n    const stream: MediaStream | undefined = await getUserStream('presentation');\n\n    if (!stream) {\n      return undefined;\n    }\n\n    stream.getTracks()[0].onended = () => {\n      if (state && state.myId) {\n        delete state.streams?.[state.myId].presentation;\n        updateGroupCallStreams(state.myId);\n        leavePresentation();\n      }\n    };\n\n    return await new Promise((resolve) => {\n      const { connection, dataChannel } = initializeConnection([stream], resolve, true);\n      state = {\n        ...state!,\n        screenshareConnection: connection,\n        screenshareDataChannel: dataChannel,\n      };\n    });\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function joinGroupCall(\n  myId: string,\n  audioContext: AudioContext,\n  audioElement: HTMLAudioElement,\n  onUpdate: (...args: any[]) => void,\n): Promise<JoinGroupCallPayload> {\n  if (state) {\n    throw Error('Already in call');\n  }\n\n  updateConnectionState('connecting');\n\n  const mediaStream = new MediaStream();\n  audioElement.srcObject = mediaStream;\n  safePlay(audioElement);\n\n  state = {\n    onUpdate,\n    participants: [],\n    myId,\n    speaking: {},\n    silence: silence(audioContext),\n    black: black({ width: 640, height: 480 }),\n    // @ts-ignore\n    analyserInterval: setInterval(analyzeAmplitudes, 1000),\n    audioElement,\n    // destination,\n    audioContext,\n    mediaStream,\n    lastMid: DEFAULT_MID,\n  };\n\n  // Prepare microphone\n  getUserStream('audio');\n\n  return new Promise((resolve) => {\n    state = {\n      ...state!,\n      ...initializeConnection([state!.silence!, state!.black!], resolve),\n    };\n  });\n}\n","import { black, silence } from './blacksilence';\nimport type { ApiPhoneCallConnection, P2pParsedSdp } from './types';\nimport parseSdp from './parseSdp';\nimport type { MediaContent, MediaStateMessage, P2pMessage } from './p2pMessage';\nimport {\n  fromTelegramSource,\n  IS_ECHO_CANCELLATION_SUPPORTED,\n  IS_NOISE_SUPPRESSION_SUPPORTED, \n  p2pPayloadTypeToConference,\n} from './utils';\nimport buildSdp, { Conference } from './buildSdp';\nimport { StreamType } from './secretsauce';\n\ntype P2pState = {\n  connection: RTCPeerConnection;\n  dataChannel: RTCDataChannel;\n  emitSignalingData: (data: P2pMessage) => void;\n  onUpdate: (...args: any[]) => void;\n  conference?: Partial<Conference>;\n  isOutgoing: boolean;\n  pendingCandidates: string[];\n  streams: {\n    video?: MediaStream;\n    audio?: MediaStream;\n    presentation?: MediaStream;\n    ownAudio?: MediaStream;\n    ownVideo?: MediaStream;\n    ownPresentation?: MediaStream;\n  };\n  silence: MediaStream;\n  blackVideo: MediaStream;\n  blackPresentation: MediaStream;\n  mediaState: Omit<MediaStateMessage, '@type'>;\n  audio: HTMLAudioElement;\n  gotInitialSetup?: boolean;\n  facingMode?: VideoFacingModeEnum;\n};\n\nlet state: P2pState | undefined;\n\nconst ICE_CANDIDATE_POOL_SIZE = 10;\n\nexport function getStreams() {\n  return state?.streams;\n}\n\nfunction updateStreams() {\n  state?.onUpdate({\n    ...state.mediaState,\n    '@type': 'updatePhoneCallMediaState',\n  });\n}\n\nfunction getUserStream(streamType: StreamType, facing: VideoFacingModeEnum = 'user') {\n  if (streamType === 'presentation') {\n    return (navigator.mediaDevices as any).getDisplayMedia({\n      audio: false,\n      video: true,\n    });\n  }\n\n  return navigator.mediaDevices.getUserMedia({\n    audio: streamType === 'audio' ? {\n      ...(IS_ECHO_CANCELLATION_SUPPORTED && { echoCancellation: true }),\n      ...(IS_NOISE_SUPPRESSION_SUPPORTED && { noiseSuppression: true }),\n    } : false,\n    video: streamType === 'video' ? {\n      facingMode: facing,\n    } : false,\n  });\n}\n\nexport async function switchCameraInputP2p() {\n  if (!state || !state.facingMode) {\n    return;\n  }\n\n  const stream = state.streams.ownVideo;\n\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  state.facingMode = state.facingMode === 'environment' ? 'user' : 'environment';\n  try {\n    const newStream = await getUserStream('video', state.facingMode);\n\n    await sender.replaceTrack(newStream.getTracks()[0]);\n    state.streams.ownVideo = newStream;\n    updateStreams();\n  } catch (e) {\n\n  }\n}\n\nexport async function toggleStreamP2p(streamType: StreamType, value: boolean | undefined = undefined) {\n  if (!state) return;\n  const stream = streamType === 'audio' ? state.streams.ownAudio\n    : (streamType === 'video' ? state.streams.ownVideo : state.streams.ownPresentation);\n\n  if (!stream) return;\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  value = value === undefined ? !track.enabled : value;\n\n  try {\n    if (value && !track.enabled) {\n      const newStream = await getUserStream(streamType);\n      newStream.getTracks()[0].onended = () => {\n        toggleStreamP2p(streamType, false);\n      };\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      if (streamType === 'audio') {\n        state.streams.ownAudio = newStream;\n      } else if (streamType === 'video') {\n        state.streams.ownVideo = newStream;\n        state.facingMode = 'user';\n      } else {\n        state.streams.ownPresentation = newStream;\n      }\n      if (streamType === 'video' || streamType === 'presentation') {\n        toggleStreamP2p(streamType === 'video' ? 'presentation' : 'video', false);\n      }\n      // if (streamType === 'video') {\n      //   state.facingMode = 'user';\n      // }\n    } else if (!value && track.enabled) {\n      track.stop();\n      const newStream = streamType === 'audio' ? state.silence\n        : (streamType === 'video' ? state.blackVideo : state.blackPresentation);\n      if (!newStream) return;\n\n      await sender.replaceTrack(newStream.getTracks()[0]);\n\n      if (streamType === 'audio') {\n        state.streams.ownAudio = newStream;\n      } else if (streamType === 'video') {\n        state.streams.ownVideo = newStream;\n      } else {\n        state.streams.ownPresentation = newStream;\n      }\n      // if (streamType === 'video') {\n      //   state.facingMode = undefined;\n      // }\n    }\n    updateStreams();\n    sendMediaState();\n  } catch (err) {\n    console.error(err)\n  }\n}\n\nexport async function joinPhoneCall(\n  connections: ApiPhoneCallConnection[],\n  emitSignalingData: (data: P2pMessage) => void,\n  isOutgoing: boolean,\n  shouldStartVideo: boolean,\n  isP2p: boolean,\n  onUpdate: (...args: any[]) => void,\n) {\n  const conn = new RTCPeerConnection({\n    iceServers: connections.map((connection) => (\n      {\n        urls: [\n          connection.isTurn && `turn:${connection.ip}:${connection.port}`,\n          connection.isStun && `stun:${connection.ip}:${connection.port}`,\n        ].filter(Boolean),\n        username: connection.username,\n        credentialType: 'password',\n        credential: connection.password,\n      }\n    )),\n    iceTransportPolicy: isP2p ? 'all' : 'relay',\n    bundlePolicy: 'max-bundle',\n    iceCandidatePoolSize: ICE_CANDIDATE_POOL_SIZE,\n  });\n\n  conn.onicecandidate = (e) => {\n    if (!e.candidate) {\n      return;\n    };\n    emitSignalingData({\n      '@type': 'Candidates',\n      candidates: [{\n        sdpString: e.candidate.candidate,\n      }],\n    });\n  };\n\n  conn.onconnectionstatechange = () => {\n    onUpdate({\n      '@type': 'updatePhoneCallConnectionState',\n      connectionState: conn.connectionState,\n    });\n  };\n\n  conn.ontrack = (e) => {\n    if (!state) return;\n\n    const stream = e.streams[0];\n    if (e.track.kind === 'audio') {\n      state.audio.srcObject = stream;\n      state.audio.play().catch();\n      state.streams.audio = stream;\n    } else if (e.transceiver.mid === '1') {\n      state.streams.video = stream;\n    } else {\n      state.streams.presentation = stream;\n    }\n\n    updateStreams();\n  };\n\n  conn.oniceconnectionstatechange = async (e) => {\n    switch(conn.iceConnectionState) {\n      case 'disconnected':\n      case 'failed':\n        if (isOutgoing) {\n          await createOffer(conn, {\n            offerToReceiveAudio: true,\n            offerToReceiveVideo: true,\n            iceRestart: true,\n          });\n        }\n      default:\n        break;\n    }\n  }\n\n  const slnc = silence(new AudioContext());\n  const video = black({ width: 640, height: 480 });\n  const screenshare = black({ width: 640, height: 480 });\n  conn.addTrack(slnc.getTracks()[0], slnc);\n  conn.addTrack(video.getTracks()[0], video);\n  conn.addTrack(screenshare.getTracks()[0], screenshare);\n\n  const dc = conn.createDataChannel('data', {\n    id: 0,\n    negotiated: true,\n  });\n\n  dc.onmessage = (e) => {\n    processSignalingMessage(JSON.parse(e.data));\n  };\n\n  const audio = new Audio();\n\n  state = {\n    audio,\n    connection: conn,\n    emitSignalingData,\n    isOutgoing,\n    pendingCandidates: [],\n    onUpdate,\n    streams: {\n      ownVideo: video,\n      ownAudio: slnc,\n      ownPresentation: screenshare,\n    },\n    mediaState: {\n      isBatteryLow: false,\n      screencastState: 'inactive',\n      videoState: 'inactive',\n      videoRotation: 0,\n      isMuted: true,\n    },\n    blackVideo: video,\n    blackPresentation: screenshare,\n    silence: slnc,\n    dataChannel: dc,\n  };\n\n  try {\n    toggleStreamP2p('audio', true);\n  } catch (err) {\n    console.error(err)\n  }\n\n  if (isOutgoing) {\n    await createOffer(conn, {\n      offerToReceiveAudio: true,\n      offerToReceiveVideo: true,\n    })\n  }\n}\n\nexport function stopPhoneCall() {\n  if (!state) return;\n\n  state.streams.ownVideo?.getTracks().forEach((track) => track.stop());\n  state.streams.ownPresentation?.getTracks().forEach((track) => track.stop());\n  state.streams.ownAudio?.getTracks().forEach((track) => track.stop());\n  state.dataChannel.close();\n  state.connection.close();\n  state = undefined;\n}\n\nfunction sendMediaState() {\n  if (!state) return;\n  const { emitSignalingData, streams } = state;\n\n  emitSignalingData({\n    '@type': 'MediaState',\n    videoRotation: 0,\n    isMuted: !streams.ownAudio?.getTracks()[0].enabled,\n    isBatteryLow: true,\n    videoState: streams.ownVideo?.getTracks()[0].enabled ? 'active' : 'inactive',\n    screencastState: streams.ownPresentation?.getTracks()[0].enabled ? 'active' : 'inactive',\n  });\n}\n\nfunction filterVP8(mediaContent: MediaContent) {\n  if (!state || state.isOutgoing) return mediaContent;\n\n  const { payloadTypes } = mediaContent!;\n  const idx = payloadTypes.findIndex((payloadType) => payloadType.name === 'VP8');\n  const vp8PayloadType = payloadTypes[idx];\n  const rtxIdx = payloadTypes.findIndex((payloadType) => Number(payloadType.parameters?.apt) === vp8PayloadType.id);\n  mediaContent.payloadTypes = [payloadTypes[idx], payloadTypes[rtxIdx]];\n\n  return mediaContent;\n}\n\nfunction sendInitialSetup(sdp: P2pParsedSdp) {\n  if (!state) return;\n  const { emitSignalingData } = state;\n\n  if (!sdp.ssrc || !sdp['ssrc-groups'] || !sdp['ssrc-groups'][0] || !sdp['ssrc-groups'][1]) return;\n\n  emitSignalingData({\n    '@type': 'InitialSetup',\n    fingerprints: sdp.fingerprints,\n    ufrag: sdp.ufrag,\n    pwd: sdp.pwd,\n    audio: {\n      ssrc: fromTelegramSource(sdp.ssrc).toString(),\n      ssrcGroups: [],\n      payloadTypes: sdp.audioPayloadTypes,\n      rtpExtensions: sdp.audioExtmap,\n    },\n    video: filterVP8({\n      ssrc: fromTelegramSource(sdp['ssrc-groups'][0].sources[0]).toString(),\n      ssrcGroups: [{\n        semantics: sdp['ssrc-groups'][0].semantics,\n        ssrcs: sdp['ssrc-groups'][0].sources.map(fromTelegramSource),\n      }],\n      payloadTypes: sdp.videoPayloadTypes,\n      rtpExtensions: sdp.videoExtmap,\n    }),\n    screencast: filterVP8({\n      ssrc: fromTelegramSource(sdp['ssrc-groups'][1].sources[0]).toString(),\n      ssrcGroups: [{\n        semantics: sdp['ssrc-groups'][1].semantics,\n        ssrcs: sdp['ssrc-groups'][1].sources.map(fromTelegramSource),\n      }],\n      payloadTypes: sdp.screencastPayloadTypes,\n      rtpExtensions: sdp.screencastExtmap,\n    }),\n  });\n}\n\nexport async function processSignalingMessage(message: P2pMessage) {\n  if (!state || !state.connection) return;\n\n  switch (message['@type']) {\n    case 'MediaState': {\n      state.mediaState = message;\n      updateStreams();\n      sendMediaState();\n      break;\n    }\n    case 'Candidates': {\n      const { pendingCandidates, gotInitialSetup } = state;\n      message.candidates.forEach((candidate) => {\n        pendingCandidates.push(candidate.sdpString);\n      });\n      if (gotInitialSetup) {\n        await commitPendingIceCandidates();\n      }\n      break;\n    }\n    case 'InitialSetup': {\n      const {\n        connection, isOutgoing,\n      } = state;\n      if (!connection) return;\n\n      const newConference = {\n        transport: {\n          candidates: [],\n          ufrag: message.ufrag,\n          pwd: message.pwd,\n          fingerprints: message.fingerprints,\n          'rtcp-mux': false,\n          xmlns: '',\n        },\n        sessionId: Date.now(),\n        ssrcs: [\n          message.audio && {\n            isVideo: false,\n            isMain: false,\n            userId: '123',\n            endpoint: '0',\n            mid: '0',\n            sourceGroups: [{\n              sources: [message.audio.ssrc],\n            }],\n          },\n          message.video && {\n            isVideo: true,\n            isPresentation: false,\n            isMain: false,\n            userId: '123',\n            endpoint: '1',\n            mid: '1',\n            sourceGroups: message.video.ssrcGroups.map((l) => ({\n              semantics: l.semantics,\n              sources: l.ssrcs,\n            })),\n          },\n          message.screencast && {\n            isVideo: true,\n            isPresentation: true,\n            isMain: false,\n            userId: '123',\n            endpoint: '2',\n            mid: '2',\n            sourceGroups: message.screencast.ssrcGroups.map((l) => ({\n              semantics: l.semantics,\n              sources: l.ssrcs,\n            })),\n          },\n        ],\n        audioPayloadTypes: message.audio!.payloadTypes?.map(p2pPayloadTypeToConference) || [],\n        audioExtensions: message.audio!.rtpExtensions,\n        videoPayloadTypes: filterVP8(message.video!).payloadTypes?.map(p2pPayloadTypeToConference) || [],\n        videoExtensions: message.video!.rtpExtensions,\n      } as Conference;\n\n      await connection.setRemoteDescription({\n        sdp: buildSdp(newConference, isOutgoing, undefined, true),\n        type: isOutgoing ? 'answer' : 'offer',\n      });\n\n      state.conference = newConference;\n\n      if (!isOutgoing) {\n        const answer = await connection.createAnswer();\n        await connection.setLocalDescription(answer);\n        sendInitialSetup(parseSdp(connection.localDescription!, true) as P2pParsedSdp);\n      }\n      state.gotInitialSetup = true;\n      await commitPendingIceCandidates();\n      break;\n    }\n  }\n}\n\nasync function commitPendingIceCandidates() {\n  if (!state) {\n    return;\n  }\n  const { pendingCandidates, connection } = state;\n  if (!pendingCandidates.length) {\n    return;\n  }\n  await Promise.all(pendingCandidates.map((c) => tryAddCandidate(connection, c)));\n  state.pendingCandidates = [];\n}\n\nasync function tryAddCandidate(connection: RTCPeerConnection, candidate: string) {\n  try {\n    await connection.addIceCandidate({\n      candidate,\n      sdpMLineIndex: 0,\n    })\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function createOffer(conn: RTCPeerConnection, params: RTCOfferOptions) {\n  const offer = await conn.createOffer(params);\n  await conn.setLocalDescription(offer);\n  sendInitialSetup(parseSdp(conn.localDescription!, true) as P2pParsedSdp);\n}\n","import type { ActionReturnType } from '../../types';\n\nimport { GROUP_CALL_VOLUME_MULTIPLIER } from '../../../config';\nimport {\n  isStreamEnabled,\n  joinGroupCall,\n  leaveGroupCall,\n  setVolume, startSharingScreen,\n  stopPhoneCall,\n  toggleStream,\n} from '../../../lib/secret-sauce';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  removeGroupCall,\n  updateActiveGroupCall,\n} from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectChat, selectTabState, selectUser } from '../../selectors';\nimport {\n  selectActiveGroupCall, selectPhoneCallUser,\n} from '../../selectors/calls';\nimport { getGroupCallAudioContext, getGroupCallAudioElement, removeGroupCallAudioElement } from '../ui/calls';\nimport { loadFullChat } from './chats';\n\nconst HANG_UP_UI_DELAY = 500;\n\naddActionHandler('leaveGroupCall', async (global, actions, payload): Promise<void> => {\n  const {\n    isFromLibrary, shouldDiscard, shouldRemove, rejoin,\n    isPageUnload, tabId = getCurrentTabId(),\n  } = payload || {};\n\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) {\n    return;\n  }\n\n  global = updateActiveGroupCall(global, { connectionState: 'disconnected' }, groupCall.participantsCount - 1);\n  global = {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      activeGroupCallId: undefined,\n    },\n  };\n  setGlobal(global);\n\n  await callApi('leaveGroupCall', {\n    call: groupCall, isPageUnload,\n  });\n  await callApi('abortRequestGroup', 'call');\n\n  if (shouldDiscard) {\n    await callApi('discardGroupCall', {\n      call: groupCall,\n    });\n  }\n\n  global = getGlobal();\n  if (shouldRemove) {\n    global = removeGroupCall(global, groupCall.id);\n  }\n\n  removeGroupCallAudioElement();\n\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n  if (!isFromLibrary) {\n    leaveGroupCall();\n  }\n\n  actions.afterHangUp();\n\n  if (rejoin) {\n    actions.requestMasterAndJoinGroupCall({\n      ...rejoin,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('toggleGroupCallVideo', async (global): Promise<void> => {\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  await toggleStream('video');\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    videoStopped: !isStreamEnabled('video'),\n    participant: user,\n  });\n});\n\naddActionHandler('requestToSpeak', (global, actions, payload): ActionReturnType => {\n  const { value } = payload || { value: true };\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  void callApi('editGroupCallParticipant', {\n    call: groupCall,\n    raiseHand: value,\n    participant: user,\n  });\n});\n\naddActionHandler('setGroupCallParticipantVolume', (global, actions, payload): ActionReturnType => {\n  const { participantId, volume } = payload!;\n\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, participantId);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  setVolume(participantId, Math.floor(volume / GROUP_CALL_VOLUME_MULTIPLIER) / 100);\n\n  void callApi('editGroupCallParticipant', {\n    call: groupCall,\n    volume: Number(volume),\n    participant: user,\n  });\n});\n\naddActionHandler('toggleGroupCallMute', async (global, actions, payload): Promise<void> => {\n  const { participantId, value } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, participantId || global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  const muted = value === undefined ? isStreamEnabled('audio', user.id) : value;\n\n  if (!participantId) {\n    await toggleStream('audio');\n  } else {\n    setVolume(participantId, muted ? 0 : 1);\n  }\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    muted,\n    participant: user,\n  });\n});\n\naddActionHandler('toggleGroupCallPresentation', async (global, actions, payload): Promise<void> => {\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  const value = payload?.value !== undefined ? payload?.value : !isStreamEnabled('presentation');\n  if (value) {\n    const params = await startSharingScreen();\n    if (!params) {\n      return;\n    }\n\n    await callApi('joinGroupCallPresentation', {\n      call: groupCall,\n      params,\n    });\n  } else {\n    await toggleStream('presentation', false);\n    await callApi('leaveGroupCallPresentation', {\n      call: groupCall,\n    });\n  }\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    presentationPaused: !isStreamEnabled('presentation'),\n    participant: user,\n  });\n});\n\naddActionHandler('connectToActiveGroupCall', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) return;\n\n  if (groupCall.connectionState === 'discarded') {\n    actions.showNotification({ message: 'This voice chat is not active', tabId });\n    return;\n  }\n\n  const audioElement = getGroupCallAudioElement();\n  const audioContext = getGroupCallAudioContext();\n\n  if (!audioElement || !audioContext) {\n    return;\n  }\n\n  const {\n    currentUserId,\n  } = global;\n\n  if (!currentUserId) return;\n\n  const params = await joinGroupCall(currentUserId, audioContext, audioElement, actions.apiUpdate);\n\n  const result = await callApi('joinGroupCall', {\n    call: groupCall,\n    params,\n    inviteHash: groupCall.inviteHash,\n  });\n\n  global = getGlobal();\n\n  if (!result) {\n    actions.showNotification({\n      // TODO[lang] Localize error message\n      message: 'Failed to join voice chat',\n      tabId,\n    });\n    actions.leaveGroupCall({ tabId });\n    return;\n  }\n\n  actions.loadMoreGroupCallParticipants();\n\n  if (groupCall.chatId) {\n    global = getGlobal();\n    const chat = selectChat(global, groupCall.chatId);\n    if (!chat) return;\n    await loadFullChat(global, actions, chat);\n  }\n});\n\naddActionHandler('connectToActivePhoneCall', async (global, actions): Promise<void> => {\n  const { phoneCall } = global;\n\n  if (!phoneCall) return;\n\n  const user = selectPhoneCallUser(global);\n\n  if (!user) return;\n\n  const dhConfig = await callApi('getDhConfig');\n\n  if (!dhConfig) return;\n\n  await callApi('createPhoneCallState', [true]);\n\n  const gAHash = await callApi('requestPhoneCall', [dhConfig])!;\n\n  const result = await callApi('requestCall', { user, gAHash, isVideo: phoneCall.isVideo });\n\n  if (!result) {\n    if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n  }\n});\n\naddActionHandler('acceptCall', async (global): Promise<void> => {\n  const { phoneCall } = global;\n\n  if (!phoneCall) return;\n\n  const dhConfig = await callApi('getDhConfig');\n  if (!dhConfig) return;\n\n  await callApi('createPhoneCallState', [false]);\n\n  const gB = await callApi('acceptPhoneCall', [dhConfig])!;\n  await callApi('acceptCall', { call: phoneCall, gB });\n});\n\naddActionHandler('sendSignalingData', (global, actions, payload): ActionReturnType => {\n  const { phoneCall } = global;\n  if (!phoneCall) {\n    return;\n  }\n\n  const data = JSON.stringify(payload);\n\n  (async () => {\n    const encodedData = await callApi('encodePhoneCallData', [data]);\n\n    if (!encodedData) return;\n\n    callApi('sendSignalingData', { data: encodedData, call: phoneCall });\n  })();\n});\n\naddActionHandler('closeCallRatingModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    ratingPhoneCall: undefined,\n  }, tabId);\n});\n\naddActionHandler('setCallRating', (global, actions, payload): ActionReturnType => {\n  const { rating, comment, tabId = getCurrentTabId() } = payload;\n\n  const { ratingPhoneCall } = selectTabState(global, tabId);\n  if (!ratingPhoneCall) {\n    return undefined;\n  }\n\n  callApi('setCallRating', { call: ratingPhoneCall, rating, comment });\n\n  return updateTabState(global, {\n    ratingPhoneCall: undefined,\n  }, tabId);\n});\n\naddActionHandler('hangUp', (global, actions, payload): ActionReturnType => {\n  const { isPageUnload, tabId = getCurrentTabId() } = payload || {};\n  const { phoneCall } = global;\n\n  if (!phoneCall) return undefined;\n\n  if (phoneCall.state === 'discarded') {\n    callApi('destroyPhoneCallState');\n    stopPhoneCall();\n\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n    actions.afterHangUp();\n\n    return undefined;\n  }\n\n  callApi('destroyPhoneCallState');\n  stopPhoneCall();\n  callApi('discardCall', { call: phoneCall, isPageUnload });\n\n  if (phoneCall.state === 'requesting') {\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n    actions.afterHangUp();\n\n    return undefined;\n  }\n\n  setTimeout(() => {\n    global = getGlobal();\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n    actions.afterHangUp();\n  }, HANG_UP_UI_DELAY);\n\n  return undefined;\n});\n","export const EMOJI_DATA = new Uint16Array([\n  0xd83d, 0xde09, 0xd83d, 0xde0d, 0xd83d, 0xde1b, 0xd83d, 0xde2d, 0xd83d, 0xde31, 0xd83d, 0xde21,\n  0xd83d, 0xde0e, 0xd83d, 0xde34, 0xd83d, 0xde35, 0xd83d, 0xde08, 0xd83d, 0xde2c, 0xd83d, 0xde07,\n  0xd83d, 0xde0f, 0xd83d, 0xdc6e, 0xd83d, 0xdc77, 0xd83d, 0xdc82, 0xd83d, 0xdc76, 0xd83d, 0xdc68,\n  0xd83d, 0xdc69, 0xd83d, 0xdc74, 0xd83d, 0xdc75, 0xd83d, 0xde3b, 0xd83d, 0xde3d, 0xd83d, 0xde40,\n  0xd83d, 0xdc7a, 0xd83d, 0xde48, 0xd83d, 0xde49, 0xd83d, 0xde4a, 0xd83d, 0xdc80, 0xd83d, 0xdc7d,\n  0xd83d, 0xdca9, 0xd83d, 0xdd25, 0xd83d, 0xdca5, 0xd83d, 0xdca4, 0xd83d, 0xdc42, 0xd83d, 0xdc40,\n  0xd83d, 0xdc43, 0xd83d, 0xdc45, 0xd83d, 0xdc44, 0xd83d, 0xdc4d, 0xd83d, 0xdc4e, 0xd83d, 0xdc4c,\n  0xd83d, 0xdc4a, 0x270c, 0x270b, 0xd83d, 0xdc50, 0xd83d, 0xdc46, 0xd83d, 0xdc47, 0xd83d, 0xdc49,\n  0xd83d, 0xdc48, 0xd83d, 0xde4f, 0xd83d, 0xdc4f, 0xd83d, 0xdcaa, 0xd83d, 0xdeb6, 0xd83c, 0xdfc3,\n  0xd83d, 0xdc83, 0xd83d, 0xdc6b, 0xd83d, 0xdc6a, 0xd83d, 0xdc6c, 0xd83d, 0xdc6d, 0xd83d, 0xdc85,\n  0xd83c, 0xdfa9, 0xd83d, 0xdc51, 0xd83d, 0xdc52, 0xd83d, 0xdc5f, 0xd83d, 0xdc5e, 0xd83d, 0xdc60,\n  0xd83d, 0xdc55, 0xd83d, 0xdc57, 0xd83d, 0xdc56, 0xd83d, 0xdc59, 0xd83d, 0xdc5c, 0xd83d, 0xdc53,\n  0xd83c, 0xdf80, 0xd83d, 0xdc84, 0xd83d, 0xdc9b, 0xd83d, 0xdc99, 0xd83d, 0xdc9c, 0xd83d, 0xdc9a,\n  0xd83d, 0xdc8d, 0xd83d, 0xdc8e, 0xd83d, 0xdc36, 0xd83d, 0xdc3a, 0xd83d, 0xdc31, 0xd83d, 0xdc2d,\n  0xd83d, 0xdc39, 0xd83d, 0xdc30, 0xd83d, 0xdc38, 0xd83d, 0xdc2f, 0xd83d, 0xdc28, 0xd83d, 0xdc3b,\n  0xd83d, 0xdc37, 0xd83d, 0xdc2e, 0xd83d, 0xdc17, 0xd83d, 0xdc34, 0xd83d, 0xdc11, 0xd83d, 0xdc18,\n  0xd83d, 0xdc3c, 0xd83d, 0xdc27, 0xd83d, 0xdc25, 0xd83d, 0xdc14, 0xd83d, 0xdc0d, 0xd83d, 0xdc22,\n  0xd83d, 0xdc1b, 0xd83d, 0xdc1d, 0xd83d, 0xdc1c, 0xd83d, 0xdc1e, 0xd83d, 0xdc0c, 0xd83d, 0xdc19,\n  0xd83d, 0xdc1a, 0xd83d, 0xdc1f, 0xd83d, 0xdc2c, 0xd83d, 0xdc0b, 0xd83d, 0xdc10, 0xd83d, 0xdc0a,\n  0xd83d, 0xdc2b, 0xd83c, 0xdf40, 0xd83c, 0xdf39, 0xd83c, 0xdf3b, 0xd83c, 0xdf41, 0xd83c, 0xdf3e,\n  0xd83c, 0xdf44, 0xd83c, 0xdf35, 0xd83c, 0xdf34, 0xd83c, 0xdf33, 0xd83c, 0xdf1e, 0xd83c, 0xdf1a,\n  0xd83c, 0xdf19, 0xd83c, 0xdf0e, 0xd83c, 0xdf0b, 0x26a1, 0x2614, 0x2744, 0x26c4, 0xd83c, 0xdf00,\n  0xd83c, 0xdf08, 0xd83c, 0xdf0a, 0xd83c, 0xdf93, 0xd83c, 0xdf86, 0xd83c, 0xdf83, 0xd83d, 0xdc7b,\n  0xd83c, 0xdf85, 0xd83c, 0xdf84, 0xd83c, 0xdf81, 0xd83c, 0xdf88, 0xd83d, 0xdd2e, 0xd83c, 0xdfa5,\n  0xd83d, 0xdcf7, 0xd83d, 0xdcbf, 0xd83d, 0xdcbb, 0x260e, 0xd83d, 0xdce1, 0xd83d, 0xdcfa, 0xd83d,\n  0xdcfb, 0xd83d, 0xdd09, 0xd83d, 0xdd14, 0x23f3, 0x23f0, 0x231a, 0xd83d, 0xdd12, 0xd83d, 0xdd11,\n  0xd83d, 0xdd0e, 0xd83d, 0xdca1, 0xd83d, 0xdd26, 0xd83d, 0xdd0c, 0xd83d, 0xdd0b, 0xd83d, 0xdebf,\n  0xd83d, 0xdebd, 0xd83d, 0xdd27, 0xd83d, 0xdd28, 0xd83d, 0xdeaa, 0xd83d, 0xdeac, 0xd83d, 0xdca3,\n  0xd83d, 0xdd2b, 0xd83d, 0xdd2a, 0xd83d, 0xdc8a, 0xd83d, 0xdc89, 0xd83d, 0xdcb0, 0xd83d, 0xdcb5,\n  0xd83d, 0xdcb3, 0x2709, 0xd83d, 0xdceb, 0xd83d, 0xdce6, 0xd83d, 0xdcc5, 0xd83d, 0xdcc1, 0x2702,\n  0xd83d, 0xdccc, 0xd83d, 0xdcce, 0x2712, 0x270f, 0xd83d, 0xdcd0, 0xd83d, 0xdcda, 0xd83d, 0xdd2c,\n  0xd83d, 0xdd2d, 0xd83c, 0xdfa8, 0xd83c, 0xdfac, 0xd83c, 0xdfa4, 0xd83c, 0xdfa7, 0xd83c, 0xdfb5,\n  0xd83c, 0xdfb9, 0xd83c, 0xdfbb, 0xd83c, 0xdfba, 0xd83c, 0xdfb8, 0xd83d, 0xdc7e, 0xd83c, 0xdfae,\n  0xd83c, 0xdccf, 0xd83c, 0xdfb2, 0xd83c, 0xdfaf, 0xd83c, 0xdfc8, 0xd83c, 0xdfc0, 0x26bd, 0x26be,\n  0xd83c, 0xdfbe, 0xd83c, 0xdfb1, 0xd83c, 0xdfc9, 0xd83c, 0xdfb3, 0xd83c, 0xdfc1, 0xd83c, 0xdfc7,\n  0xd83c, 0xdfc6, 0xd83c, 0xdfca, 0xd83c, 0xdfc4, 0x2615, 0xd83c, 0xdf7c, 0xd83c, 0xdf7a, 0xd83c,\n  0xdf77, 0xd83c, 0xdf74, 0xd83c, 0xdf55, 0xd83c, 0xdf54, 0xd83c, 0xdf5f, 0xd83c, 0xdf57, 0xd83c,\n  0xdf71, 0xd83c, 0xdf5a, 0xd83c, 0xdf5c, 0xd83c, 0xdf61, 0xd83c, 0xdf73, 0xd83c, 0xdf5e, 0xd83c,\n  0xdf69, 0xd83c, 0xdf66, 0xd83c, 0xdf82, 0xd83c, 0xdf70, 0xd83c, 0xdf6a, 0xd83c, 0xdf6b, 0xd83c,\n  0xdf6d, 0xd83c, 0xdf6f, 0xd83c, 0xdf4e, 0xd83c, 0xdf4f, 0xd83c, 0xdf4a, 0xd83c, 0xdf4b, 0xd83c,\n  0xdf52, 0xd83c, 0xdf47, 0xd83c, 0xdf49, 0xd83c, 0xdf53, 0xd83c, 0xdf51, 0xd83c, 0xdf4c, 0xd83c,\n  0xdf50, 0xd83c, 0xdf4d, 0xd83c, 0xdf46, 0xd83c, 0xdf45, 0xd83c, 0xdf3d, 0xd83c, 0xdfe1, 0xd83c,\n  0xdfe5, 0xd83c, 0xdfe6, 0x26ea, 0xd83c, 0xdff0, 0x26fa, 0xd83c, 0xdfed, 0xd83d, 0xddfb, 0xd83d,\n  0xddfd, 0xd83c, 0xdfa0, 0xd83c, 0xdfa1, 0x26f2, 0xd83c, 0xdfa2, 0xd83d, 0xdea2, 0xd83d, 0xdea4,\n  0x2693, 0xd83d, 0xde80, 0x2708, 0xd83d, 0xde81, 0xd83d, 0xde82, 0xd83d, 0xde8b, 0xd83d, 0xde8e,\n  0xd83d, 0xde8c, 0xd83d, 0xde99, 0xd83d, 0xde97, 0xd83d, 0xde95, 0xd83d, 0xde9b, 0xd83d, 0xdea8,\n  0xd83d, 0xde94, 0xd83d, 0xde92, 0xd83d, 0xde91, 0xd83d, 0xdeb2, 0xd83d, 0xdea0, 0xd83d, 0xde9c,\n  0xd83d, 0xdea6, 0x26a0, 0xd83d, 0xdea7, 0x26fd, 0xd83c, 0xdfb0, 0xd83d, 0xddff, 0xd83c, 0xdfaa,\n  0xd83c, 0xdfad, 0xd83c, 0xddef, 0xd83c, 0xddf5, 0xd83c, 0xddf0, 0xd83c, 0xddf7, 0xd83c, 0xdde9,\n  0xd83c, 0xddea, 0xd83c, 0xdde8, 0xd83c, 0xddf3, 0xd83c, 0xddfa, 0xd83c, 0xddf8, 0xd83c, 0xddeb,\n  0xd83c, 0xddf7, 0xd83c, 0xddea, 0xd83c, 0xddf8, 0xd83c, 0xddee, 0xd83c, 0xddf9, 0xd83c, 0xddf7,\n  0xd83c, 0xddfa, 0xd83c, 0xddec, 0xd83c, 0xdde7, 0x0031, 0x20e3, 0x0032, 0x20e3, 0x0033, 0x20e3,\n  0x0034, 0x20e3, 0x0035, 0x20e3, 0x0036, 0x20e3, 0x0037, 0x20e3, 0x0038, 0x20e3, 0x0039, 0x20e3,\n  0x0030, 0x20e3, 0xd83d, 0xdd1f, 0x2757, 0x2753, 0x2665, 0x2666, 0xd83d, 0xdcaf, 0xd83d, 0xdd17,\n  0xd83d, 0xdd31, 0xd83d, 0xdd34, 0xd83d, 0xdd35, 0xd83d, 0xdd36, 0xd83d, 0xdd37,\n]);\n\nexport const EMOJI_OFFSETS = [\n  0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22,\n  24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46,\n  48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70,\n  72, 74, 76, 78, 80, 82, 84, 86, 87, 88, 90, 92,\n  94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116,\n  118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140,\n  142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164,\n  166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188,\n  190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212,\n  214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236,\n  238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 259,\n  260, 261, 262, 264, 266, 268, 270, 272, 274, 276, 278, 280,\n  282, 284, 286, 288, 290, 292, 294, 295, 297, 299, 301, 303,\n  305, 306, 307, 308, 310, 312, 314, 316, 318, 320, 322, 324,\n  326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348,\n  350, 351, 353, 355, 357, 359, 360, 362, 364, 365, 366, 368,\n  370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392,\n  394, 396, 398, 400, 402, 404, 406, 407, 408, 410, 412, 414,\n  416, 418, 420, 422, 424, 426, 427, 429, 431, 433, 435, 437,\n  439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 459, 461,\n  463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485,\n  487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 508,\n  510, 511, 513, 515, 517, 519, 521, 522, 524, 526, 528, 529,\n  531, 532, 534, 536, 538, 540, 542, 544, 546, 548, 550, 552,\n  554, 556, 558, 560, 562, 564, 566, 567, 569, 570, 572, 574,\n  576, 578, 582, 586, 590, 594, 598, 602, 606, 610, 614, 618,\n  620, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 641,\n  642, 643, 644, 646, 648, 650, 652, 654, 656, 658,\n];\n","import type { ApiPhoneCall } from '../../../api/types';\nimport type { ApiCallProtocol } from '../../../lib/secret-sauce';\nimport type { ActionReturnType } from '../../types';\n\nimport {\n  handleUpdateGroupCallConnection,\n  handleUpdateGroupCallParticipants,\n  joinPhoneCall, processSignalingMessage,\n} from '../../../lib/secret-sauce';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { omit } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { EMOJI_DATA, EMOJI_OFFSETS } from '../../../util/phoneCallEmojiConstants';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport { updateGroupCall, updateGroupCallParticipant } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectActiveGroupCall, selectGroupCallParticipant, selectPhoneCallUser } from '../../selectors/calls';\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  const { activeGroupCallId } = global.groupCalls;\n\n  switch (update['@type']) {\n    case 'updateGroupCallLeavePresentation': {\n      actions.toggleGroupCallPresentation({ value: false });\n      break;\n    }\n    case 'updateGroupCallStreams': {\n      if (!update.userId || !activeGroupCallId) break;\n      if (!selectGroupCallParticipant(global, activeGroupCallId, update.userId)) break;\n\n      return updateGroupCallParticipant(global, activeGroupCallId, update.userId, omit(update, ['@type', 'userId']));\n    }\n    case 'updateGroupCallConnectionState': {\n      if (!activeGroupCallId) break;\n\n      if (update.connectionState === 'disconnected') {\n        if ('leaveGroupCall' in actions) actions.leaveGroupCall({ isFromLibrary: true, tabId: getCurrentTabId() });\n        break;\n      }\n\n      return updateGroupCall(global, activeGroupCallId, {\n        connectionState: update.connectionState,\n        isSpeakerDisabled: update.isSpeakerDisabled,\n      });\n    }\n    case 'updateGroupCallParticipants': {\n      const { groupCallId, participants } = update;\n      if (activeGroupCallId === groupCallId) {\n        void handleUpdateGroupCallParticipants(participants);\n      }\n      break;\n    }\n    case 'updateGroupCallConnection': {\n      if (update.data.stream) {\n        actions.showNotification({ message: 'Big live streams are not yet supported', tabId: getCurrentTabId() });\n        if ('leaveGroupCall' in actions) actions.leaveGroupCall({ tabId: getCurrentTabId() });\n        break;\n      }\n      void handleUpdateGroupCallConnection(update.data, update.presentation);\n\n      const groupCall = selectActiveGroupCall(global);\n      if (groupCall?.participants && Object.keys(groupCall.participants).length > 0) {\n        void handleUpdateGroupCallParticipants(Object.values(groupCall.participants));\n      }\n      break;\n    }\n    case 'updatePhoneCallMediaState':\n      return {\n        ...global,\n        phoneCall: {\n          ...global.phoneCall,\n          ...omit(update, ['@type']),\n        } as ApiPhoneCall,\n      };\n    case 'updatePhoneCall': {\n      if (!ARE_CALLS_SUPPORTED) return undefined;\n      const { phoneCall, currentUserId } = global;\n\n      const call: ApiPhoneCall = {\n        ...phoneCall,\n        ...update.call,\n      };\n\n      const isOutgoing = phoneCall?.adminId === currentUserId;\n\n      global = {\n        ...global,\n        phoneCall: call,\n      };\n      setGlobal(global);\n      global = getGlobal();\n\n      if (phoneCall && phoneCall.id && call.id !== phoneCall.id) {\n        if (call.state !== 'discarded') {\n          callApi('discardCall', {\n            call,\n            isBusy: true,\n          });\n        }\n        return undefined;\n      }\n\n      const {\n        accessHash, state, connections, gB,\n      } = call;\n\n      if (state === 'active' || state === 'accepted') {\n        if (!verifyPhoneCallProtocol(call.protocol)) {\n          const user = selectPhoneCallUser(global);\n          if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n          actions.showNotification({\n            message: langProvider.oldTranslate('VoipPeerIncompatible', user?.firstName),\n            tabId: getCurrentTabId(),\n          });\n          return undefined;\n        }\n      }\n\n      if (state === 'discarded') {\n        // Discarded from other device\n        if (!phoneCall) return undefined;\n\n        return updateTabState(global, {\n          ...(call.needRating && { ratingPhoneCall: call }),\n          isCallPanelVisible: undefined,\n        }, getCurrentTabId());\n      } else if (state === 'accepted' && accessHash && gB) {\n        (async () => {\n          const { gA, keyFingerprint, emojis } = await callApi('confirmPhoneCall', [gB, EMOJI_DATA, EMOJI_OFFSETS])!;\n\n          global = getGlobal();\n          const newCall = {\n            ...global.phoneCall,\n            emojis,\n          } as ApiPhoneCall;\n\n          global = {\n            ...global,\n            phoneCall: newCall,\n          };\n          setGlobal(global);\n\n          callApi('confirmCall', {\n            call, gA, keyFingerprint,\n          });\n        })();\n      } else if (state === 'active' && connections && phoneCall?.state !== 'active') {\n        if (!isOutgoing) {\n          callApi('receivedCall', { call });\n          (async () => {\n            const { emojis } = await callApi('confirmPhoneCall', [call!.gAOrB!, EMOJI_DATA, EMOJI_OFFSETS])!;\n\n            global = getGlobal();\n            const newCall = {\n              ...global.phoneCall,\n              emojis,\n            } as ApiPhoneCall;\n\n            global = {\n              ...global,\n              phoneCall: newCall,\n            };\n            setGlobal(global);\n          })();\n        }\n        void joinPhoneCall(\n          connections,\n          actions.sendSignalingData,\n          isOutgoing,\n          Boolean(call?.isVideo),\n          Boolean(call.isP2pAllowed),\n          actions.apiUpdate,\n        );\n      }\n\n      return global;\n    }\n    case 'updatePhoneCallConnectionState': {\n      const { connectionState } = update;\n\n      if (!global.phoneCall) return global;\n\n      if (connectionState === 'closed' || connectionState === 'disconnected' || connectionState === 'failed') {\n        if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n        return undefined;\n      }\n\n      return {\n        ...global,\n        phoneCall: {\n          ...global.phoneCall,\n          isConnected: connectionState === 'connected',\n        },\n      };\n    }\n    case 'updatePhoneCallSignalingData': {\n      const { phoneCall } = global;\n\n      if (!phoneCall) {\n        break;\n      }\n\n      callApi('decodePhoneCallData', [update.data])?.then(processSignalingMessage);\n      break;\n    }\n  }\n\n  return undefined;\n});\n\nfunction verifyPhoneCallProtocol(protocol?: ApiCallProtocol) {\n  return protocol?.libraryVersions.some((version) => {\n    return version === '4.0.0' || version === '4.0.1';\n  });\n}\n","import type { GroupCallParticipant } from '../../../../lib/secret-sauce';\n\nimport { GROUP_CALL_DEFAULT_VOLUME, GROUP_CALL_VOLUME_MULTIPLIER } from '../../../../config';\n\nexport default function formatGroupCallVolume(participant: GroupCallParticipant) {\n  return Math.floor((participant.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER).toString();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallParticipant } from '../../../lib/secret-sauce';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { GROUP_CALL_DEFAULT_VOLUME, GROUP_CALL_VOLUME_MULTIPLIER } from '../../../config';\nimport { selectIsAdminInActiveGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunThrottled from '../../../hooks/useRunThrottled';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport DeleteMemberModal from '../../right/DeleteMemberModal';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './GroupCallParticipantMenu.scss';\n\nconst SPEAKER_ICON_DISABLED_SEGMENT: [number, number] = [0, 17];\nconst SPEAKER_ICON_ENABLED_SEGMENT: [number, number] = [17, 34];\n\ntype OwnProps =\n  {\n    participant?: GroupCallParticipant;\n    onCloseAnimationEnd: VoidFunction;\n    onClose: VoidFunction;\n    isDropdownOpen: boolean;\n    menuRef?: React.RefObject<HTMLDivElement>;\n  }\n  & MenuPositionOptions;\n\ntype StateProps = {\n  isAdmin: boolean;\n};\n\nconst VOLUME_ZERO = 0;\nconst VOLUME_LOW = 50;\nconst VOLUME_MEDIUM = 100;\nconst VOLUME_NORMAL = 150;\n\nconst VOLUME_CHANGE_THROTTLE = 500;\n\nconst SPEAKER_ICON_SIZE = 24;\n\nconst GroupCallParticipantMenu: FC<OwnProps & StateProps> = ({\n  participant,\n  onCloseAnimationEnd,\n  onClose,\n  isDropdownOpen,\n  isAdmin,\n  menuRef,\n  ...menuPositionOptions\n}) => {\n  const {\n    toggleGroupCallMute,\n    setGroupCallParticipantVolume,\n    toggleGroupCallPanel,\n    openChat,\n    requestToSpeak,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isDeleteUserModalOpen, openDeleteUserModal, closeDeleteUserModal] = useFlag();\n\n  const id = participant?.id;\n  const {\n    isMutedByMe, isMuted, isSelf, canSelfUnmute,\n  } = participant || {};\n  const isRaiseHand = Boolean(participant?.raiseHandRating);\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n\n  const [localVolume, setLocalVolume] = useState(\n    isMutedByMe ? VOLUME_ZERO : ((participant?.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER),\n  );\n\n  const [shouldPlay, setShouldPlay] = useState(false);\n\n  const isLocalVolumeZero = localVolume === VOLUME_ZERO;\n  const speakerIconPlaySegment = isLocalVolumeZero ? SPEAKER_ICON_DISABLED_SEGMENT : SPEAKER_ICON_ENABLED_SEGMENT;\n\n  useEffect(() => {\n    if (isDropdownOpen) return;\n    setShouldPlay(false);\n  }, [isDropdownOpen]);\n\n  const handleSetLocalVolume = useLastCallback((volume: number) => {\n    setLocalVolume(volume);\n    const isNewLocalVolumeZero = volume === VOLUME_ZERO;\n    setShouldPlay(isNewLocalVolumeZero !== isLocalVolumeZero);\n  });\n\n  useEffect(() => {\n    setLocalVolume(isMutedByMe\n      ? VOLUME_ZERO\n      : ((participant?.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER));\n    // We only want to initialize local volume when switching participants and ignore following updates from server\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [id]);\n\n  const runThrottled = useRunThrottled(VOLUME_CHANGE_THROTTLE);\n\n  const handleRemove = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    openDeleteUserModal();\n    onClose();\n  });\n\n  const handleCancelRequestToSpeak = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    requestToSpeak({\n      value: false,\n    });\n    onClose();\n  });\n\n  const handleMute = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    onClose();\n\n    if (!isAdmin) {\n      handleSetLocalVolume(isMutedByMe ? GROUP_CALL_DEFAULT_VOLUME / GROUP_CALL_VOLUME_MULTIPLIER : VOLUME_ZERO);\n    } else if (shouldRaiseHand) {\n      handleSetLocalVolume((participant?.volume ?? GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER);\n    }\n\n    toggleGroupCallMute({\n      participantId: id!,\n      value: isAdmin ? !shouldRaiseHand : !isMutedByMe,\n    });\n  });\n\n  const handleOpenProfile = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    toggleGroupCallPanel();\n    openChat({\n      id,\n    });\n    onClose();\n  });\n\n  const handleChangeVolume = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = Number(e.target.value);\n    handleSetLocalVolume(value);\n\n    runThrottled(() => {\n      if (value === VOLUME_ZERO) {\n        toggleGroupCallMute({\n          participantId: id!,\n          value: true,\n        });\n      } else {\n        setGroupCallParticipantVolume({\n          participantId: id!,\n          volume: Math.floor(value * GROUP_CALL_VOLUME_MULTIPLIER),\n        });\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Menu\n        isOpen={isDropdownOpen}\n        ref={menuRef}\n        withPortal\n        onClose={onClose}\n        onCloseAnimationEnd={onCloseAnimationEnd}\n        className=\"participant-menu with-menu-transitions\"\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...menuPositionOptions}\n      >\n        {!isSelf && !shouldRaiseHand && (\n          <div className=\"group\">\n            <div className={buildClassName(\n              'volume-control',\n              localVolume < VOLUME_LOW && 'low',\n              localVolume >= VOLUME_LOW && localVolume < VOLUME_MEDIUM && 'medium',\n              localVolume >= VOLUME_MEDIUM && localVolume < VOLUME_NORMAL && 'normal',\n              localVolume >= VOLUME_NORMAL && 'high',\n            )}\n            >\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"200\"\n                value={localVolume}\n                onChange={handleChangeVolume}\n              />\n              <div className=\"info\">\n                <AnimatedIcon\n                  tgsUrl={LOCAL_TGS_URLS.Speaker}\n                  play={shouldPlay ? speakerIconPlaySegment.toString() : false}\n                  playSegment={speakerIconPlaySegment}\n                  size={SPEAKER_ICON_SIZE}\n                />\n                <span>{localVolume}%</span>\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"group\">\n          {(isRaiseHand && isSelf) && (\n            <MenuItem\n              icon=\"stop-raising-hand\"\n              onClick={handleCancelRequestToSpeak}\n            >\n              {lang('VoipGroupCancelRaiseHand')}\n            </MenuItem>\n          )}\n          {!isSelf && <MenuItem icon=\"user\" onClick={handleOpenProfile}>{lang('VoipGroupOpenProfile')}</MenuItem>}\n          {!isSelf && (\n            // TODO cross mic\n            <MenuItem\n              icon={isMuted ? (isAdmin && shouldRaiseHand ? 'allow-speak' : 'microphone-alt') : 'microphone-alt'}\n              onClick={handleMute}\n            >\n              {isAdmin\n                ? lang(shouldRaiseHand ? 'VoipGroupAllowToSpeak' : 'VoipMute')\n                : lang(isMutedByMe ? 'VoipGroupUnmuteForMe' : 'VoipGroupMuteForMe')}\n            </MenuItem>\n          )}\n          {!isSelf && isAdmin && (\n            // TODO replace with hand\n            <MenuItem icon=\"delete-user\" destructive onClick={handleRemove}>\n              {lang('VoipGroupUserRemove')}\n            </MenuItem>\n          )}\n        </div>\n      </Menu>\n\n      {!isSelf && isAdmin && (\n        <DeleteMemberModal\n          isOpen={isDeleteUserModalOpen}\n          userId={id}\n          onClose={closeDeleteUserModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isAdmin: selectIsAdminInActiveGroupCall(global),\n    };\n  },\n)(GroupCallParticipantMenu));\n","import useThrottledCallback from './useThrottledCallback';\n\nexport default function useRunThrottled(ms: number, noFirst?: boolean, deps: any = []) {\n  return useThrottledCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { GroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { THRESHOLD } from '../../../lib/secret-sauce';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\n\ntype OwnProps = {\n  participant: GroupCallParticipant;\n  noColor?: boolean;\n  className?: string;\n};\n\nconst OutlinedMicrophoneIcon: FC<OwnProps> = ({\n  participant,\n  noColor,\n  className,\n}) => {\n  const { isMuted, isMutedByMe } = participant;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n  const prevIsRaiseHand = usePreviousDeprecated(isRaiseHand);\n  const canSelfUnmute = Boolean(participant?.canSelfUnmute);\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n  const prevIsMuted = usePreviousDeprecated(isMuted);\n\n  const playSegment: [number, number] = useMemo(() => {\n    if (isMuted && !prevIsMuted) {\n      return [43, 64];\n    }\n\n    if (!isMuted && prevIsMuted) {\n      return [22, 42];\n    }\n\n    if (isRaiseHand && !prevIsRaiseHand) {\n      return [65, 84];\n    }\n\n    if (!shouldRaiseHand && prevIsRaiseHand) {\n      return [0, 21];\n    }\n\n    // TODO cancel request to speak should play in reverse\n    // if (!isRaiseHand && prevIsRaiseHand) {\n    //   return [84, 65];\n    // }\n\n    return isMuted ? [22, 23] : [43, 44];\n    // eslint-disable-next-line\n  }, [isMuted, shouldRaiseHand, isRaiseHand]);\n\n  const microphoneColor: string = useMemo(() => {\n    if (noColor) {\n      return '#ffffff';\n    }\n\n    if (isRaiseHand) {\n      return '#4da6e0';\n    }\n\n    if (shouldRaiseHand || isMutedByMe) {\n      return '#ff706f';\n    }\n\n    if (isSpeaking) {\n      return '#57bc6c';\n    }\n\n    return '#aaaaaa';\n  }, [noColor, isRaiseHand, shouldRaiseHand, isMutedByMe, isSpeaking]);\n\n  return (\n    <AnimatedIcon\n      tgsUrl={LOCAL_TGS_URLS.VoiceOutlined}\n      play={playSegment.toString()}\n      playSegment={playSegment}\n      size={28}\n      color={microphoneColor}\n      className={className}\n      forceAlways\n      nonInteractive\n    />\n  );\n};\n\nexport default memo(OutlinedMicrophoneIcon);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wk7JwPx3\",\"subtitle\":\"ShcCNemD\",\"subtitleText\":\"UZLgp2cx\",\"icon\":\"vRc6jhKf\",\"subtitleBlue\":\"yA7bxEWw\",\"subtitleRed\":\"DnuZwImI\",\"subtitleGreen\":\"BkgYQGFq\",\"avatar\":\"ouHUJ9ff\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { GROUP_CALL_DEFAULT_VOLUME } from '../../../config';\nimport { THRESHOLD } from '../../../lib/secret-sauce';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport formatGroupCallVolume from './helpers/formatGroupCallVolume';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport GroupCallParticipantMenu from './GroupCallParticipantMenu';\nimport OutlinedMicrophoneIcon from './OutlinedMicrophoneIcon';\n\nimport styles from './GroupCallParticipant.module.scss';\n\ntype OwnProps = {\n  participant: TypeGroupCallParticipant;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n};\n\nconst GroupCallParticipant: FC<OwnProps & StateProps> = ({\n  participant,\n  peer,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const {\n    isSelf, isMutedByMe, isMuted, hasVideoStream, hasPresentationStream,\n  } = participant;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleBeforeContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isSelf);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => menuRef.current!,\n    [],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: true }),\n    [],\n  );\n\n  const hasCustomVolume = Boolean(\n    !isMuted && isSpeaking && participant.volume && participant.volume !== GROUP_CALL_DEFAULT_VOLUME,\n  );\n\n  const [aboutText, aboutColor] = useMemo(() => {\n    if (isMutedByMe) {\n      return [lang('VoipGroupMutedForMe'), styles.subtitleRed];\n    }\n\n    if (isRaiseHand) {\n      return [lang('WantsToSpeak'), styles.subtitleBlue];\n    }\n\n    if (hasCustomVolume) {\n      return [\n        lang('SpeakingWithVolume', formatGroupCallVolume(participant))\n          .replace('%%', '%'),\n        styles.subtitleGreen,\n      ];\n    }\n\n    if (!isMuted && isSpeaking) {\n      return [\n        lang('Speaking'),\n        styles.subtitleGreen,\n      ];\n    }\n\n    if (isSelf) {\n      return [lang('ThisIsYou'), styles.subtitleBlue];\n    }\n\n    return participant.about ? [participant.about, ''] : [lang('Listening'), styles.subtitleBlue];\n  }, [isMutedByMe, isRaiseHand, hasCustomVolume, isMuted, isSpeaking, isSelf, participant, lang]);\n\n  if (!peer) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      leftElement={<Avatar peer={peer} className={styles.avatar} />}\n      rightElement={<OutlinedMicrophoneIcon participant={participant} className={styles.icon} />}\n      className={styles.root}\n      onClick={handleContextMenu}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      multiline\n      ripple\n      ref={ref}\n    >\n      <FullNameTitle peer={peer} withEmojiStatus className={styles.title} />\n      <span className={buildClassName(styles.subtitle, 'subtitle', aboutColor)}>\n        {hasPresentationStream && <Icon name=\"share-screen\" />}\n        {hasVideoStream && <Icon name=\"video\" />}\n        {hasCustomVolume && <Icon name=\"speaker\" />}\n        <span className={styles.subtitleText}>{renderText(aboutText)}</span>\n      </span>\n      <GroupCallParticipantMenu\n        participant={participant}\n        isDropdownOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        getLayout={getLayout}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        menuRef={menuRef}\n      />\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { participant }): StateProps => {\n    return {\n      peer: selectUser(global, participant.id) || selectChat(global, participant.id),\n    };\n  },\n)(GroupCallParticipant));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { selectActiveGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { compareFields } from '../../../util/iteratees';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport GroupCallParticipant from './GroupCallParticipant';\n\nimport styles from './GroupCallParticipantList.module.scss';\n\ntype OwnProps = {\n  panelOffset: number;\n  isLandscape: boolean;\n};\n\ntype StateProps = {\n  participantsCount: number;\n  participants?: Record<string, TypeGroupCallParticipant>;\n  canInvite?: boolean;\n};\n\nconst GroupCallParticipantList: FC<OwnProps & StateProps> = ({\n  panelOffset,\n  participants,\n  participantsCount,\n  isLandscape,\n}) => {\n  const {\n    loadMoreGroupCallParticipants,\n  } = getActions();\n\n  const orderedParticipantIds = useMemo(() => {\n    return Object.values(participants || {}).sort(compareParticipants).map((participant) => participant.id);\n  }, [participants]);\n\n  const handleLoadMoreGroupCallParticipants = useLastCallback(() => {\n    loadMoreGroupCallParticipants();\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMoreGroupCallParticipants,\n    orderedParticipantIds,\n    orderedParticipantIds.length >= participantsCount,\n  );\n\n  return (\n    <InfiniteScroll\n      items={viewportIds}\n      onLoadMore={getMore}\n      style={`transform: translateY(${panelOffset}px);`}\n      className={buildClassName(styles.root, !isLandscape && styles.portrait)}\n    >\n      {participants && viewportIds?.map(\n        (participantId) => (\n          participants[participantId] && (\n            <GroupCallParticipant\n              key={participantId}\n              teactOrderKey={orderedParticipantIds.indexOf(participantId)}\n              participant={participants[participantId]}\n            />\n          )\n        ),\n      )}\n    </InfiniteScroll>\n  );\n};\n\nfunction compareParticipants(a: TypeGroupCallParticipant, b: TypeGroupCallParticipant) {\n  return compareFields(!a.isMuted, !b.isMuted)\n        || compareFields(a.presentation, b.presentation)\n        || compareFields(a.video, b.video)\n        || compareFields(a.raiseHandRating, b.raiseHandRating);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { participantsCount, participants } = selectActiveGroupCall(global) || {};\n\n    return {\n      participants,\n      participantsCount: participantsCount || 0,\n    };\n  },\n)(GroupCallParticipantList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"npTa6CmI\",\"portrait\":\"v7oB2HTv\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DKuzmnN7\",\"hidden\":\"T_wodAHA\",\"noAnimate\":\"yPCkJzpi\",\"root\":\"eBq1NoLo\",\"speaking\":\"h4NcT6OS\",\"loader\":\"XedVWQii\",\"video\":\"eUXuK9Oz\",\"videoFallback\":\"eTpvBU_b eUXuK9Oz\",\"thumbnailWrapper\":\"R5ULTrF9\",\"thumbnail\":\"cjUWuViy\",\"flipped\":\"O2bTiH2E\",\"pinButton\":\"lPdblo0y\",\"bottomPanel\":\"T1deCDSn\",\"info\":\"LzFFayK3\",\"pinned\":\"B4WZhF9P\",\"name\":\"RBwMAuKp\",\"status\":\"z1ZZTsjC\",\"icon\":\"j1aDzn1H\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\nimport type { VideoLayout, VideoParticipant } from './hooks/useGroupCallVideoLayout';\n\nimport { GROUP_CALL_DEFAULT_VOLUME } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getUserStreams, THRESHOLD } from '../../../lib/secret-sauce';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport { animate } from '../../../util/animation';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { fastRaf } from '../../../util/schedulers';\nimport formatGroupCallVolume from './helpers/formatGroupCallVolume';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport GroupCallParticipantMenu from './GroupCallParticipantMenu';\nimport OutlinedMicrophoneIcon from './OutlinedMicrophoneIcon';\n\nimport styles from './GroupCallParticipantVideo.module.scss';\n\nconst BLUR_RADIUS = 2;\nconst BLUR_ITERATIONS = 2;\nconst VIDEO_FALLBACK_UPDATE_INTERVAL = 1000;\n\ntype OwnProps = {\n  layout: VideoLayout;\n  setPinned: (participant?: VideoParticipant) => void;\n  pinnedVideo: VideoParticipant | undefined;\n  canPin: boolean;\n  participant: TypeGroupCallParticipant;\n  className?: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n};\n\nconst GroupCallParticipantVideo: FC<OwnProps & StateProps> = ({\n  layout,\n  pinnedVideo,\n  setPinned,\n  canPin,\n  className,\n  participant,\n  user,\n  chat,\n}) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const thumbnailRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoFallbackRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    x, y, width, height, noAnimate, isRemoved,\n    type,\n  } = layout;\n  const {\n    isSelf, isMutedByMe, isMuted,\n  } = participant;\n  const isPinned = pinnedVideo?.id === participant.id && pinnedVideo?.type === type;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n  const shouldFlipVideo = type === 'video' && participant.isSelf;\n\n  const status = useMemo(() => {\n    if (isSelf) {\n      return lang('ThisIsYou');\n    }\n\n    if (isMutedByMe) {\n      return lang('VoipGroupMutedForMe');\n    }\n\n    if (isRaiseHand) {\n      return lang('WantsToSpeak');\n    }\n\n    if (isMuted || !isSpeaking) {\n      return lang('Listening');\n    }\n\n    if (participant.volume && participant.volume !== GROUP_CALL_DEFAULT_VOLUME) {\n      return lang('SpeakingWithVolume', formatGroupCallVolume(participant))\n        .replace('%%', '%');\n    }\n\n    return lang('Speaking');\n  }, [isSelf, isMutedByMe, isRaiseHand, isMuted, isSpeaking, participant, lang]);\n\n  const prevLayoutRef = useRef<VideoLayout>();\n  if (!isRemoved) {\n    prevLayoutRef.current = layout;\n  }\n  const {\n    x: prevX, y: prevY, width: prevWidth, height: prevHeight,\n  } = prevLayoutRef.current || {};\n\n  const [currentX, currentY, currentWidth, currentHeight] = isRemoved\n    ? [prevX, prevY, prevWidth, prevHeight] : [x, y, width, height];\n\n  const [isHidden, setIsHidden] = useState(!noAnimate);\n\n  const streams = getUserStreams(user?.id || chat!.id);\n  const actualStream = type === 'video' ? streams?.video : streams?.presentation;\n  const streamRef = useRef(actualStream);\n  if (actualStream?.active && actualStream?.getVideoTracks()[0].enabled) {\n    streamRef.current = actualStream;\n  }\n  const stream = streamRef.current;\n\n  const handleInactive = useLastCallback(() => {\n    const video = videoRef.current;\n    if (!video) return;\n    // eslint-disable-next-line no-null/no-null\n    video.srcObject = null;\n  });\n\n  useEffect(() => {\n    stream?.addEventListener('inactive', handleInactive);\n    return () => {\n      stream?.removeEventListener('inactive', handleInactive);\n    };\n  }, [handleInactive, stream]);\n\n  useEffect(() => {\n    setIsHidden(false);\n  }, []);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleCanPlay = useLastCallback(() => {\n    setIsLoading(false);\n  });\n\n  // When video stream is removed, the video element starts showing empty black screen.\n  // To avoid that, we hide the video element and show the fallback frame instead, which is constantly updated\n  // every VIDEO_FALLBACK_UPDATE_INTERVAL milliseconds.\n  useInterval(() => {\n    if (!stream?.active) return;\n    const video = videoRef.current!;\n    const canvas = videoFallbackRef.current!;\n\n    requestMutation(() => {\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      canvas.getContext('2d')!.drawImage(video, 0, 0, canvas.width, canvas.height);\n    });\n  }, VIDEO_FALLBACK_UPDATE_INTERVAL);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    const thumbnail = thumbnailRef.current;\n    if (!video || !thumbnail || !stream) return undefined;\n\n    const ctx = thumbnail.getContext('2d', { alpha: false });\n    if (!ctx) return undefined;\n\n    let isDrawing = true;\n    requestMutation(() => {\n      if (!isDrawing) return;\n      thumbnail.width = 16;\n      thumbnail.height = 16;\n      ctx.filter = 'blur(2px)';\n\n      const draw = () => {\n        if (!isDrawing) return false;\n        if (!stream.active) {\n          return false;\n        }\n        ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight, 0, 0, thumbnail.width, thumbnail.height);\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, thumbnail.width, thumbnail.height, BLUR_RADIUS, BLUR_ITERATIONS);\n        }\n        return true;\n      };\n\n      animate(draw, fastRaf);\n    });\n\n    return () => {\n      isDrawing = false;\n    };\n  }, [stream]);\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isSelf);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => menuRef.current!,\n    [],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: true }),\n    [],\n  );\n\n  const handleClickPin = useCallback(() => {\n    setPinned(!isPinned ? {\n      id: user?.id || chat!.id,\n      type,\n    } : undefined);\n  }, [chat, isPinned, setPinned, type, user?.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.wrapper,\n        (isHidden || isRemoved) && styles.hidden,\n        noAnimate && styles.noAnimate,\n        className,\n        isPinned && styles.pinned,\n      )}\n      style={`--x: ${currentX}px; --y: ${currentY}px; --width: ${currentWidth}px; --height: ${currentHeight}px;`}\n      ref={ref}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={canPin ? handleClickPin : undefined}\n    >\n      <div\n        className={buildClassName(\n          styles.root,\n          isSpeaking && styles.speaking,\n        )}\n      >\n        {isLoading && (\n          <Skeleton className={buildClassName(styles.video, styles.loader)} />\n        )}\n        {stream && (\n          <video\n            className={buildClassName(styles.video, shouldFlipVideo && styles.flipped)}\n            muted\n            autoPlay\n            playsInline\n            srcObject={stream}\n            ref={videoRef}\n            onCanPlay={handleCanPlay}\n          />\n        )}\n        <canvas\n          className={buildClassName(styles.videoFallback, shouldFlipVideo && styles.flipped)}\n          ref={videoFallbackRef}\n        />\n        <div className={styles.thumbnailWrapper}>\n          <canvas\n            className={buildClassName(styles.thumbnail, shouldFlipVideo && styles.flipped)}\n            ref={thumbnailRef}\n          />\n        </div>\n        {canPin && (\n          <Button\n            round\n            size=\"smaller\"\n            ripple\n            color=\"translucent\"\n            className={styles.pinButton}\n            ariaLabel={lang(isPinned ? 'lng_group_call_context_unpin_camera' : 'lng_group_call_context_pin_camera')}\n            onClick={handleClickPin}\n          >\n            <Icon name={isPinned ? 'unpin' : 'pin'} />\n          </Button>\n        )}\n        <div className={styles.bottomPanel}>\n          <div className={styles.info}>\n            <FullNameTitle peer={user || chat!} className={styles.name} />\n            <div className={styles.status}>{status}</div>\n          </div>\n          <OutlinedMicrophoneIcon participant={participant} className={styles.icon} noColor />\n        </div>\n      </div>\n\n      <GroupCallParticipantMenu\n        participant={participant}\n        isDropdownOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        getLayout={getLayout}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        menuRef={menuRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { participant }): StateProps => {\n    return {\n      user: participant.isUser ? selectUser(global, participant.id) : undefined,\n      chat: !participant.isUser ? selectChat(global, participant.id) : undefined,\n    };\n  },\n)(GroupCallParticipantVideo));\n","export const vibrateShort = () => {\n  navigator.vibrate?.(50);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lKdhQ5pw\",\"spinner\":\"tyQNJC6B\",\"spinnerVisible\":\"LowChABq\",\"mutedByAdmin\":\"Ynow5UuE\",\"canUnmute\":\"bjKqp3SI\",\"icon\":\"Ea1XnQaX\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallConnectionState } from '../../../lib/secret-sauce';\n\nimport { selectActiveGroupCall, selectGroupCallParticipant } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { vibrateShort } from '../../../util/vibrate';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './MicrophoneButton.module.scss';\n\nconst CONNECTION_STATE_DEFAULT = 'discarded';\n\ntype OwnProps = {\n  className?: string;\n};\n\ntype StateProps = {\n  connectionState?: GroupCallConnectionState;\n  hasRequestedToSpeak: boolean;\n  isMuted?: boolean;\n  canSelfUnmute?: boolean;\n  noAudioStream: boolean;\n};\n\nconst REQUEST_TO_SPEAK_THROTTLE = 3000;\nconst HOLD_TO_SPEAK_TIME = 200;\nconst ICON_SIZE = 36;\n\nconst MicrophoneButton: FC<OwnProps & StateProps> = ({\n  className,\n  noAudioStream,\n  canSelfUnmute,\n  isMuted,\n  connectionState,\n}) => {\n  const {\n    toggleGroupCallMute,\n    requestToSpeak,\n    playGroupCallSound,\n  } = getActions();\n\n  const lang = useOldLang();\n  const muteMouseDownState = useRef('up');\n\n  const [isRequestingToSpeak, setIsRequestingToSpeak] = useState(false);\n  const isConnecting = connectionState !== 'connected';\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n  const prevShouldRaiseHand = usePreviousDeprecated(shouldRaiseHand);\n\n  useEffect(() => {\n    if (prevShouldRaiseHand && !shouldRaiseHand) {\n      playGroupCallSound({ sound: 'allowTalk' });\n    }\n  }, [playGroupCallSound, prevShouldRaiseHand, shouldRaiseHand]);\n\n  // Voice mini\n  // unmuted -> muted [69, 99]\n  // muted -> unmuted [36, 69]\n  // raise -> muted [0, 36]\n  // muted -> raise [99, 136]\n  // unmuted -> raise [136, 172]\n  // TODO should probably move to other component\n  const playSegment: [number, number] = useMemo(() => {\n    if (isRequestingToSpeak) {\n      const r = Math.floor(Math.random() * 100);\n      return (r < 32 ? [0, 120]\n        : (r < 64 ? [120, 240]\n          : (r < 97 ? [240, 420]\n            : [420, 540]\n          )\n        )\n      );\n    }\n    if (!prevShouldRaiseHand && shouldRaiseHand) {\n      return noAudioStream ? [99, 135] : [136, 172];\n    }\n    if (prevShouldRaiseHand && !shouldRaiseHand) {\n      return [0, 36];\n    }\n    if (!shouldRaiseHand) {\n      return noAudioStream ? [69, 99] : [36, 69];\n    }\n    return [0, 0];\n  }, [prevShouldRaiseHand, isRequestingToSpeak, noAudioStream, shouldRaiseHand]);\n\n  const animatedIconName = isRequestingToSpeak ? 'HandFilled' : 'VoiceMini';\n\n  const toggleMute = useCallback(() => {\n    vibrateShort();\n    toggleGroupCallMute();\n  }, [toggleGroupCallMute]);\n\n  const handleMouseDownMute = useCallback(() => {\n    if (shouldRaiseHand) {\n      if (isRequestingToSpeak) return;\n      vibrateShort();\n      requestToSpeak();\n      setIsRequestingToSpeak(true);\n      setTimeout(() => {\n        setIsRequestingToSpeak(false);\n      }, REQUEST_TO_SPEAK_THROTTLE);\n      return;\n    }\n    muteMouseDownState.current = 'down';\n    if (noAudioStream) {\n      setTimeout(() => {\n        if (muteMouseDownState.current === 'down') {\n          muteMouseDownState.current = 'hold';\n          toggleMute();\n        }\n      }, HOLD_TO_SPEAK_TIME);\n    }\n  }, [isRequestingToSpeak, noAudioStream, requestToSpeak, shouldRaiseHand, toggleMute]);\n\n  const handleMouseUpMute = useCallback(() => {\n    if (shouldRaiseHand) {\n      return;\n    }\n    toggleMute();\n    muteMouseDownState.current = 'up';\n  }, [shouldRaiseHand, toggleMute]);\n\n  return (\n    <Button\n      round\n      size=\"default\"\n      className={buildClassName(\n        styles.root,\n        !isConnecting && noAudioStream && styles.canUnmute,\n        !isConnecting && shouldRaiseHand && styles.mutedByAdmin,\n        className,\n      )}\n      onMouseDown={handleMouseDownMute}\n      onMouseUp={handleMouseUpMute}\n      ariaLabel={lang(isMuted ? 'VoipUnmute' : 'VoipMute')}\n      disabled={isConnecting}\n    >\n      <AnimatedIcon\n        tgsUrl={LOCAL_TGS_URLS[animatedIconName]}\n        size={ICON_SIZE}\n        play={playSegment.toString()}\n        playSegment={playSegment}\n        className={styles.icon}\n        forceAlways\n      />\n      <Spinner className={buildClassName(styles.spinner, isConnecting && styles.spinnerVisible)} color=\"white\" />\n    </Button>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const groupCall = selectActiveGroupCall(global);\n\n    const { connectionState } = groupCall || {};\n    const meParticipant = groupCall && selectGroupCallParticipant(global, groupCall.id, global.currentUserId!);\n\n    const {\n      raiseHandRating, hasAudioStream, canSelfUnmute, isMuted,\n    } = meParticipant || {};\n\n    return {\n      connectionState: connectionState || CONNECTION_STATE_DEFAULT,\n      hasRequestedToSpeak: Boolean(raiseHandRating),\n      noAudioStream: !hasAudioStream,\n      canSelfUnmute,\n      isMuted,\n    };\n  },\n)(MicrophoneButton));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OsO5GKfn\",\"panelWrapper\":\"cUVoePr_\",\"panel\":\"Thuz79M3\",\"panelScrollTrigger\":\"zoK6Y6IS\",\"panelHeader\":\"DMBtCL9Z\",\"scrolled\":\"GdEH1Agb\",\"fullscreen\":\"JJx0QI2w\",\"landscape\":\"wamCuzMB\",\"headerButton\":\"gmyieSid\",\"firstButton\":\"hVnn6KBp\",\"lastButton\":\"iy78A5rG\",\"panelHeaderText\":\"TwEEA77i\",\"title\":\"pNZ9skLf\",\"bigger\":\"NumT3v5i\",\"subtitle\":\"gmfUKabx\",\"participants\":\"iTeC_RxH\",\"participantVideos\":\"PZmKIdTl\",\"addParticipantButton\":\"clmu2oBt\",\"videos\":\"ATwoMlAV\",\"mainVideoContainer\":\"hqFon3dV\",\"videosHeader\":\"KPHc659W\",\"appFullscreen\":\"cl2sfoBF\",\"videosHeaderLastButton\":\"_t50HVNJ\",\"videosContent\":\"oEEQZilE\",\"actions\":\"uGzi9s97\",\"actionButton\":\"foXbVcnN\",\"destructive\":\"YIR9Z9CZ\",\"canRequestToSpeak\":\"ZoiZQu_O\",\"muted\":\"wpvv1V6m\",\"portrait\":\"R6HQcMwx\",\"noVideoParticipants\":\"aepCFyJQ\",\"noSidebar\":\"XjgP21E6\"};","import '../../../global/actions/calls';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  GroupCallConnectionState, GroupCallParticipant as TypeGroupCallParticipant,\n} from '../../../lib/secret-sauce';\nimport type { VideoParticipant } from './hooks/useGroupCallVideoLayout';\n\nimport { IS_SCREENSHARE_SUPPORTED } from '../../../lib/secret-sauce';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport {\n  selectCanInviteToActiveGroupCall,\n  selectGroupCall,\n  selectGroupCallParticipant,\n  selectIsAdminInActiveGroupCall,\n} from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIntersectionObserver, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useFullscreenStatus } from '../../../hooks/window/useFullscreen';\nimport useGroupCallVideoLayout from './hooks/useGroupCallVideoLayout';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Modal from '../../ui/Modal';\nimport GroupCallParticipantList from './GroupCallParticipantList';\nimport GroupCallParticipantVideo from './GroupCallParticipantVideo';\nimport MicrophoneButton from './MicrophoneButton';\n\nimport styles from './GroupCall.module.scss';\n\nconst INTERSECTION_THROTTLE = 200;\n\nexport type OwnProps = {\n  groupCallId: string;\n};\n\ntype StateProps = {\n  isCallPanelVisible: boolean;\n  connectionState: GroupCallConnectionState;\n  title?: string;\n  meParticipant?: TypeGroupCallParticipant;\n  participantsCount?: number;\n  isAdmin: boolean;\n  participants: Record<string, TypeGroupCallParticipant>;\n  canInvite: boolean;\n};\n\nconst GroupCall: FC<OwnProps & StateProps> = ({\n  groupCallId,\n  isCallPanelVisible,\n  connectionState,\n  participantsCount,\n  title,\n  meParticipant,\n  isAdmin,\n  participants,\n  canInvite,\n}) => {\n  const {\n    toggleGroupCallVideo,\n    toggleGroupCallPresentation,\n    leaveGroupCall,\n    toggleGroupCallPanel,\n    connectToActiveGroupCall,\n    playGroupCallSound,\n    createGroupCallInviteLink,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const primaryVideoContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const secondaryVideoContainerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const panelScrollTriggerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const panelRef = useRef<HTMLDivElement>(null);\n\n  const [isLeaving, setIsLeaving] = useState(false);\n  const isOpen = !isCallPanelVisible && !isLeaving;\n\n  const { observe } = useIntersectionObserver({\n    rootRef: panelRef,\n    throttleMs: INTERSECTION_THROTTLE,\n    isDisabled: !isOpen,\n  });\n\n  const hasScrolled = !useIsIntersecting(panelScrollTriggerRef, isOpen ? observe : undefined);\n\n  const { isMobile, isLandscape } = useAppLayout();\n\n  const [isFullscreen, openFullscreen, closeFullscreen] = useFlag();\n  const [isSidebarOpen, openSidebar, closeSidebar] = useFlag(true);\n  const isLandscapeLayout = Boolean(isFullscreen && isLandscape);\n  const isAppFullscreen = useFullscreenStatus();\n\n  const firstPresentation = useMemo(() => {\n    return Object.values(participants).find(({ presentation }) => presentation);\n  }, [participants]);\n  const videoParticipants = useMemo(() => Object.values(participants)\n    .filter(({ video, presentation }) => video || presentation)\n    .flatMap(({ id, video, presentation }) => compact([\n      video ? {\n        id,\n        type: 'video' as const,\n      } : undefined,\n      presentation ? {\n        id,\n        type: 'screen' as const,\n      } : undefined,\n    ])),\n  [participants]);\n  const hasVideoParticipants = videoParticipants.length > 0;\n\n  const groupCallTitle = title || lang('VoipGroupVoiceChat');\n  const membersString = lang('Participants', participantsCount, 'i');\n\n  const [isConfirmLeaveModalOpen, openConfirmLeaveModal, closeConfirmLeaveModal] = useFlag();\n  const [isEndGroupCallModal, setIsEndGroupCallModal] = useState(false);\n  const [shouldEndGroupCall, setShouldEndGroupCall] = useState(false);\n\n  const hasVideo = meParticipant?.hasVideoStream;\n  const hasPresentation = meParticipant?.hasPresentationStream;\n  const hasAudioStream = meParticipant?.hasAudioStream;\n  const isConnecting = connectionState !== 'connected';\n  const canSelfUnmute = meParticipant?.canSelfUnmute;\n  const canRequestToSpeak = !canSelfUnmute && !hasAudioStream;\n\n  useEffect(() => {\n    if (connectionState === 'connected') {\n      playGroupCallSound({ sound: 'join' });\n    } else if (connectionState === 'reconnecting') {\n      playGroupCallSound({ sound: 'connecting' });\n    }\n  }, [connectionState]);\n\n  const handleCloseConfirmLeaveModal = useLastCallback(() => {\n    closeConfirmLeaveModal();\n    setIsEndGroupCallModal(false);\n  });\n\n  const handleToggleFullscreen = useLastCallback(() => {\n    if (!containerRef.current || isMobile) return;\n\n    if (isFullscreen) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  });\n\n  const handleToggleSidebar = useLastCallback(() => {\n    if (isSidebarOpen) {\n      closeSidebar();\n    } else {\n      openSidebar();\n    }\n  });\n\n  const handleToggleGroupCallPanel = useLastCallback(() => {\n    toggleGroupCallPanel();\n  });\n\n  const handleInviteMember = useLastCallback(() => {\n    createGroupCallInviteLink();\n  });\n\n  const handleClickVideo = useLastCallback(() => {\n    toggleGroupCallVideo();\n  });\n\n  useEffect(() => {\n    connectToActiveGroupCall();\n  }, [connectToActiveGroupCall, groupCallId]);\n\n  const handleLeaveGroupCall = useLastCallback(() => {\n    if (isAdmin && !isConfirmLeaveModalOpen) {\n      openConfirmLeaveModal();\n      return;\n    }\n    playGroupCallSound({ sound: 'leave' });\n    setIsLeaving(true);\n    closeConfirmLeaveModal();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (!isLeaving) return;\n\n    leaveGroupCall({\n      shouldDiscard: shouldEndGroupCall,\n    });\n  });\n\n  const handleToggleGroupCallPresentation = useLastCallback(() => {\n    toggleGroupCallPresentation();\n  });\n\n  const canPinVideo = videoParticipants.length > 1 && !isMobile;\n  const isLandscapeWithVideos = isLandscapeLayout && hasVideoParticipants;\n  const [pinnedVideo, setPinnedVideo] = useState<VideoParticipant | undefined>(undefined);\n  const {\n    videoLayout,\n    panelOffset,\n  } = useGroupCallVideoLayout({\n    primaryContainerRef: primaryVideoContainerRef,\n    secondaryContainerRef: secondaryVideoContainerRef,\n    videoParticipants,\n    isLandscapeLayout,\n    pinnedVideo,\n  });\n\n  const handleSetPinnedVideo = useLastCallback((video: VideoParticipant | undefined) => {\n    setPinnedVideo(video);\n    if (video && !isFullscreen) {\n      openFullscreen();\n    }\n  });\n\n  const handleOpenFirstPresentation = useLastCallback(() => {\n    if (!firstPresentation) return;\n\n    setPinnedVideo({\n      id: firstPresentation.id,\n      type: 'screen',\n    });\n  });\n\n  useEffect(handleOpenFirstPresentation, [handleOpenFirstPresentation, Boolean(firstPresentation)]);\n\n  useEffect(() => {\n    if (!pinnedVideo) return;\n    if (!videoParticipants.some((l) => l.type === pinnedVideo.type && l.id === pinnedVideo.id)) {\n      setPinnedVideo(undefined);\n    }\n  }, [pinnedVideo, videoLayout, videoParticipants]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={toggleGroupCallPanel}\n      className={buildClassName(\n        styles.root,\n        (isFullscreen || isMobile) && styles.fullscreen,\n        isAppFullscreen && styles.appFullscreen,\n        isLandscapeLayout && styles.landscape,\n        !hasVideoParticipants && styles.noVideoParticipants,\n        !isLandscapeLayout && styles.portrait,\n        !isSidebarOpen && isLandscapeWithVideos && styles.noSidebar,\n      )}\n      dialogRef={containerRef}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {isLandscapeWithVideos && (\n        <div className={styles.videos}>\n          <div className={styles.videosHeader}>\n            {!isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                onClick={handleToggleFullscreen}\n                className={buildClassName(styles.headerButton, styles.firstButton)}\n                ariaLabel={lang(isFullscreen ? 'AccExitFullscreen' : 'AccSwitchToFullscreen')}\n              >\n                <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n              </Button>\n            )}\n\n            <h3 className={buildClassName(styles.title, styles.bigger)}>\n              {title || lang('VoipGroupVoiceChat')}\n            </h3>\n\n            {isLandscapeWithVideos && !isSidebarOpen && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                className={buildClassName(styles.headerButton, styles.videosHeaderLastButton)}\n                onClick={handleToggleSidebar}\n                ariaLabel={lang('AccDescrExpandPanel')}\n              >\n                <Icon name=\"sidebar\" />\n              </Button>\n            )}\n          </div>\n\n          <div\n            className={styles.videosContent}\n            ref={primaryVideoContainerRef}\n          />\n        </div>\n      )}\n\n      <div className={styles.panelWrapper} ref={panelRef}>\n        <div className={buildClassName(styles.panel, 'custom-scroll')}>\n          <div className={styles.panelScrollTrigger} ref={panelScrollTriggerRef} />\n\n          <div className={buildClassName(styles.panelHeader, hasScrolled && styles.scrolled)}>\n            {!isLandscapeWithVideos && !isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.firstButton,\n                  styles.headerButton,\n                )}\n                onClick={handleToggleFullscreen}\n                ariaLabel={lang('AccSwitchToFullscreen')}\n              >\n                <Icon name=\"fullscreen\" />\n              </Button>\n            )}\n\n            {isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                onClick={handleToggleGroupCallPanel}\n                className={buildClassName(styles.headerButton, styles.firstButton)}\n                ariaLabel={lang('Close')}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            )}\n\n            {isLandscapeWithVideos && (\n              <Button\n                round\n                size=\"smaller\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.firstButton,\n                  styles.headerButton,\n                )}\n                color=\"translucent\"\n                onClick={handleToggleSidebar}\n                ariaLabel={lang('AccDescrCollapsePanel')}\n              >\n                <Icon name=\"sidebar\" />\n              </Button>\n            )}\n\n            <div className={styles.panelHeaderText}>\n              <h3 className={buildClassName(styles.title, isLandscapeWithVideos && styles.bigger)}>\n                {isLandscapeWithVideos ? membersString : groupCallTitle}\n              </h3>\n              {!isLandscapeWithVideos && (\n                <span className={styles.subtitle}>\n                  {membersString}\n                </span>\n              )}\n            </div>\n\n            {!isLandscapeWithVideos && canInvite && (\n              <Button\n                round\n                size=\"smaller\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.lastButton,\n                  styles.headerButton,\n                )}\n                color=\"translucent\"\n                onClick={handleInviteMember}\n                ariaLabel={lang('VoipGroupInviteMember')}\n              >\n                <Icon name=\"add-user\" />\n              </Button>\n            )}\n          </div>\n\n          <div className={styles.participants}>\n            <div\n              className={styles.participantVideos}\n              ref={secondaryVideoContainerRef}\n              style={`height: ${panelOffset}px;`}\n            >\n              {videoLayout.map((layout) => {\n                const participant = participants[layout.participantId];\n                if (!layout.isRemounted || !participant) {\n                  return (\n                    <div\n                      teactOrderKey={layout.orderKey}\n                      key={`${layout.participantId}_${layout.type}`}\n                    />\n                  );\n                }\n\n                return (\n                  <GroupCallParticipantVideo\n                    teactOrderKey={layout.orderKey}\n                    key={`${layout.participantId}_${layout.type}`}\n                    layout={layout}\n                    canPin={canPinVideo}\n                    setPinned={handleSetPinnedVideo}\n                    pinnedVideo={pinnedVideo}\n                    participant={participant}\n                  />\n                );\n              })}\n            </div>\n            <GroupCallParticipantList\n              panelOffset={panelOffset}\n              isLandscape={isLandscapeWithVideos}\n            />\n          </div>\n        </div>\n\n        <FloatingActionButton\n          key=\"add-participant\"\n          isShown={isLandscapeWithVideos && canInvite}\n          onClick={handleInviteMember}\n          className={styles.addParticipantButton}\n          ariaLabel={lang('VoipGroupInviteMember')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      </div>\n\n      <div className={styles.mainVideoContainer}>\n        {videoLayout.map((layout) => {\n          const participant = participants[layout.participantId];\n          if (layout.isRemounted || !participant) {\n            return (\n              <div\n                teactOrderKey={layout.orderKey}\n                key={`${layout.participantId}_${layout.type}`}\n              />\n            );\n          }\n          return (\n            <GroupCallParticipantVideo\n              teactOrderKey={layout.orderKey}\n              key={`${layout.participantId}_${layout.type}`}\n              layout={layout}\n              canPin={canPinVideo}\n              setPinned={handleSetPinnedVideo}\n              pinnedVideo={pinnedVideo}\n              participant={participant}\n              className={styles.video}\n            />\n          );\n        })}\n      </div>\n\n      <div className={styles.actions}>\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          onClick={handleClickVideo}\n          ariaLabel={lang(hasVideo ? 'VoipStopVideo' : 'VoipStartVideo')}\n          disabled={isConnecting}\n        >\n          <Icon name={!hasVideo ? 'video-stop' : 'video'} />\n        </Button>\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          onClick={handleToggleGroupCallPresentation}\n          ariaLabel={lang(hasPresentation ? 'lng_group_call_screen_share_stop' : 'lng_group_call_tooltip_screen')}\n          disabled={isConnecting || !IS_SCREENSHARE_SUPPORTED}\n        >\n          <Icon name={!hasPresentation ? 'share-screen-stop' : 'share-screen'} />\n        </Button>\n\n        <MicrophoneButton className={styles.actionButton} />\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          ariaLabel={lang('lng_group_call_settings')}\n          disabled\n        >\n          <Icon name=\"settings-filled\" />\n        </Button>\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            styles.destructive,\n          )}\n          onClick={handleLeaveGroupCall}\n          ariaLabel={lang('lng_group_call_leave')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      </div>\n\n      <Modal\n        isOpen={isConfirmLeaveModalOpen}\n        onClose={handleCloseConfirmLeaveModal}\n        className=\"error\"\n        title={lang(isEndGroupCallModal ? 'VoipGroupEndAlertTitle' : 'VoipGroupLeaveAlertTitle')}\n      >\n        <p>{lang(isEndGroupCallModal ? 'VoipGroupEndAlertText' : 'VoipGroupLeaveAlertText')}</p>\n        {!isEndGroupCallModal && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={lang('VoipGroupEndChat')}\n            checked={shouldEndGroupCall}\n            onCheck={setShouldEndGroupCall}\n          />\n        )}\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" onClick={handleLeaveGroupCall}>\n            {lang(isEndGroupCallModal ? 'VoipGroupEnd' : 'VoipGroupLeave')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseConfirmLeaveModal}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </Modal>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { groupCallId }): StateProps => {\n    const {\n      connectionState, title, participants, participantsCount, chatId,\n    } = selectGroupCall(global, groupCallId)! || {};\n\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n\n    return {\n      connectionState,\n      title: title || chat?.title,\n      participantsCount,\n      meParticipant: selectGroupCallParticipant(global, groupCallId, global.currentUserId!),\n      isCallPanelVisible: Boolean(selectTabState(global).isCallPanelVisible),\n      isAdmin: selectIsAdminInActiveGroupCall(global),\n      participants,\n      canInvite: selectCanInviteToActiveGroupCall(global),\n    };\n  },\n)(GroupCall));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\n\nconst PADDING_HORIZONTAL = 10;\nconst PADDING_VERTICAL = 8;\nconst PREFERRED_PANEL_VIDEO_HEIGHT = 240;\n\nexport type VideoLayout = {\n  participantId: string;\n  type: 'video' | 'screen';\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  shouldRemount?: boolean;\n  isRemounted?: boolean;\n  noAnimate?: boolean;\n  isRemoved?: boolean;\n  orderKey: number;\n};\n\nexport type VideoParticipant = {\n  id: string;\n  type: 'video' | 'screen';\n};\n\nexport default function useGroupCallVideoLayout({\n  primaryContainerRef,\n  secondaryContainerRef,\n  videoParticipants,\n  isLandscapeLayout,\n  pinnedVideo,\n}: {\n  primaryContainerRef: RefObject<HTMLDivElement>;\n  secondaryContainerRef: RefObject<HTMLDivElement>;\n  videoParticipants: VideoParticipant[];\n  isLandscapeLayout: boolean;\n  pinnedVideo: VideoParticipant | undefined;\n}) {\n  const [videoLayout, setVideoLayout] = useState<VideoLayout[]>([]);\n  const [panelOffset, setPanelOffset] = useState(0);\n  const videosCount = videoParticipants.length;\n  const prevVideosCount = usePreviousDeprecated(videosCount);\n  const prevVideoParticipants = usePreviousDeprecated(videoParticipants);\n  const removedVideoParticipants = useMemo(() => {\n    return prevVideoParticipants?.filter(\n      ({ id, type }) => !videoParticipants.some((p) => p.id === id && p.type === type),\n    );\n  }, [prevVideoParticipants, videoParticipants]);\n\n  const recalculateLayout = useLastCallback(() => {\n    const primaryContainer = primaryContainerRef.current;\n    const secondaryContainer = secondaryContainerRef.current;\n    if (!secondaryContainer) return;\n\n    const removed = prevVideosCount !== undefined && prevVideosCount > videosCount\n      ? prevVideosCount - videosCount : 0;\n\n    const {\n      x: secondaryInitialX,\n      y: secondaryInitialY,\n      width: secondaryContainerWidth,\n    } = secondaryContainer.getBoundingClientRect();\n\n    const layout: VideoLayout[] = [];\n    if (pinnedVideo !== undefined || !primaryContainer || !isLandscapeLayout) {\n      const isRemounted = true;\n      let skip = false;\n      let pinnedSkipIndex = 0;\n      let pinnedPush: VideoLayout | undefined;\n      let participants = videoParticipants;\n      if (pinnedVideo && primaryContainer && isLandscapeLayout) {\n        pinnedSkipIndex = participants\n          .findIndex(({ id, type }) => id === pinnedVideo.id && type === pinnedVideo.type);\n        if (pinnedSkipIndex !== -1) {\n          const {\n            x: initialX,\n            y: initialY,\n            width: containerWidth,\n            height: containerHeight,\n          } = primaryContainer.getBoundingClientRect();\n\n          const { id: participantId, type } = pinnedVideo;\n\n          pinnedPush = {\n            x: initialX,\n            y: initialY,\n            width: containerWidth,\n            height: containerHeight,\n            participantId,\n            type,\n            orderKey: pinnedSkipIndex,\n          };\n          skip = true;\n          participants = participants\n            .filter(({ id, type: videoType }) => id !== participantId || videoType !== pinnedVideo.type);\n        }\n      }\n\n      const secondaryVideosCounts = skip ? videosCount - 1 : videosCount;\n\n      const isFirstBig = secondaryVideosCounts % 2 === 1;\n      const columns = 2;\n      const rows = Math.ceil(secondaryVideosCounts / columns);\n      const smallWidth = (secondaryContainerWidth - (columns - 1) * PADDING_HORIZONTAL) / columns;\n      const heightTotal = Math.max(0, isFirstBig\n        ? (PREFERRED_PANEL_VIDEO_HEIGHT + (rows - 1) * smallWidth + (rows - 1) * PADDING_VERTICAL)\n        : rows * smallWidth + (rows - 1) * PADDING_VERTICAL);\n\n      for (let i = 0; i < secondaryVideosCounts; i++) {\n        const isBig = isFirstBig && i === 0;\n        const width = isBig ? secondaryContainerWidth : smallWidth;\n        const height = isBig ? PREFERRED_PANEL_VIDEO_HEIGHT : smallWidth;\n\n        const realIndex = isFirstBig && i !== 0 ? i + 1 : i;\n\n        const x = (isRemounted ? 0 : secondaryInitialX) + (realIndex % columns) * (width + PADDING_HORIZONTAL);\n        const y = (isRemounted ? 0 : secondaryInitialY) + (isFirstBig && i !== 0 ? (\n          PREFERRED_PANEL_VIDEO_HEIGHT + PADDING_VERTICAL\n          + (Math.floor(realIndex / columns) - 1) * (height + PADDING_VERTICAL)\n        ) : (\n          Math.floor(realIndex / columns) * (height + PADDING_VERTICAL)\n        ));\n        layout.push({\n          x,\n          y,\n          width,\n          height,\n          shouldRemount: !isRemounted,\n          isRemounted,\n          noAnimate: true,\n          participantId: participants[i].id,\n          type: participants[i].type,\n          orderKey: i >= pinnedSkipIndex ? i + 1 : i,\n        });\n      }\n\n      if (pinnedPush) {\n        layout.splice(pinnedSkipIndex, 0, pinnedPush);\n      }\n\n      if (removedVideoParticipants) {\n        for (let i = 0; i < removed; i++) {\n          layout.push({\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n            isRemounted,\n            isRemoved: true,\n            participantId: removedVideoParticipants[i].id,\n            type: removedVideoParticipants[i].type,\n            orderKey: i + videosCount,\n          });\n        }\n      }\n\n      setPanelOffset(heightTotal);\n      setVideoLayout(layout);\n      return;\n    }\n\n    const {\n      x: initialX,\n      y: initialY,\n      width: containerWidth,\n      height: containerHeight,\n    } = primaryContainer.getBoundingClientRect();\n\n    const columns = calculateColumnsCount(videosCount);\n    const rows = Math.ceil(videosCount / columns);\n    const totalGridSize = rows * columns;\n    const shouldFillLastRow = totalGridSize > videosCount;\n    const width = (containerWidth - (columns - 1) * PADDING_HORIZONTAL) / columns;\n    const height = (containerHeight - (rows - 1) * PADDING_VERTICAL) / rows;\n\n    const lastRowWidth = width * (videosCount % columns);\n    for (let i = 0; i < videosCount; i++) {\n      const row = Math.floor(i / columns);\n      const shouldCenter = shouldFillLastRow && row === rows - 1;\n      const x = initialX + (i % columns) * (width + PADDING_HORIZONTAL)\n        + (shouldCenter ? (containerWidth - lastRowWidth) / 2 : 0);\n      const y = initialY + Math.floor(i / columns) * (height + PADDING_VERTICAL);\n      layout.push({\n        x,\n        y,\n        width,\n        height,\n        participantId: videoParticipants[i].id,\n        type: videoParticipants[i].type,\n        orderKey: i,\n      });\n    }\n\n    if (removedVideoParticipants) {\n      for (let i = 0; i < removed; i++) {\n        layout.push({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n          isRemoved: true,\n          participantId: removedVideoParticipants[i].id,\n          type: removedVideoParticipants[i].type,\n          orderKey: i + videosCount,\n        });\n      }\n    }\n\n    setPanelOffset(0);\n    setVideoLayout(layout);\n  });\n\n  useEffect(recalculateLayout, [\n    recalculateLayout, videoParticipants, isLandscapeLayout, pinnedVideo,\n  ]);\n\n  useResizeObserver(primaryContainerRef, recalculateLayout, !primaryContainerRef.current);\n  useResizeObserver(secondaryContainerRef, recalculateLayout, !secondaryContainerRef.current);\n\n  return {\n    videoLayout, panelOffset,\n  };\n}\n\nfunction calculateColumnsCount(videosCount: number) {\n  if (videosCount >= 25) {\n    return 5;\n  } else if (videosCount >= 13) {\n    return 4;\n  } else if (videosCount >= 7) {\n    return 3;\n  } else if (videosCount >= 3) {\n    return 2;\n  } else {\n    return 1;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiGroupCall, ApiUser } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { selectActiveGroupCall, selectPhoneCallUser } from '../../global/selectors/calls';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ActiveCallHeader.scss';\n\ntype StateProps = {\n  isCallPanelVisible?: boolean;\n  groupCall?: ApiGroupCall;\n  phoneCallUser?: ApiUser;\n};\n\nconst ActiveCallHeader: FC<StateProps> = ({\n  groupCall,\n  phoneCallUser,\n  isCallPanelVisible,\n}) => {\n  const { toggleGroupCallPanel } = getActions();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    document.body.classList.toggle('has-call-header', Boolean(isCallPanelVisible));\n    window.electron?.setTrafficLightPosition(isCallPanelVisible ? 'lowered' : 'standard');\n\n    return () => {\n      document.body.classList.toggle('has-call-header', false);\n      window.electron?.setTrafficLightPosition('standard');\n    };\n  }, [isCallPanelVisible]);\n\n  function handleToggleGroupCallPanel() {\n    toggleGroupCallPanel();\n  }\n\n  if (!groupCall && !phoneCallUser) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'ActiveCallHeader',\n        isCallPanelVisible && 'open',\n      )}\n      onClick={handleToggleGroupCallPanel}\n    >\n      <span className=\"title\">{phoneCallUser?.firstName || groupCall?.title || lang('VoipGroupVoiceChat')}</span>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    return {\n      groupCall: tabState.isMasterTab ? selectActiveGroupCall(global) : undefined,\n      isCallPanelVisible: tabState.isCallPanelVisible,\n      phoneCallUser: tabState.isMasterTab ? selectPhoneCallUser(global) : undefined,\n    };\n  },\n)(ActiveCallHeader));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lBO3RZUM\",\"button\":\"ch2sqAKW\",\"active\":\"OQxlsRp7\",\"button-text\":\"aHguvLcL\",\"buttonText\":\"aHguvLcL\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './PhoneCallButton.module.scss';\n\ntype OwnProps = {\n  onClick: VoidFunction;\n  label: string;\n  icon?: IconName;\n  iconClassName?: string;\n  customIcon?: React.ReactNode;\n  className?: string;\n  isDisabled?: boolean;\n  isActive?: boolean;\n};\n\nconst PhoneCallButton: FC<OwnProps> = ({\n  onClick,\n  label,\n  customIcon,\n  icon,\n  iconClassName,\n  className,\n  isDisabled,\n  isActive,\n}) => {\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        className={buildClassName(className, styles.button, isActive && styles.active)}\n        onClick={onClick}\n        disabled={isDisabled}\n      >\n        {customIcon || <Icon name={icon!} className={iconClassName} />}\n      </Button>\n      <div className={styles.buttonText}>{label}</div>\n    </div>\n  );\n};\n\nexport default memo(PhoneCallButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GNYRVAUg\",\"blurred\":\"RBmbMiou\",\"single-column\":\"O7cZE08z\",\"singleColumn\":\"O7cZE08z\",\"header\":\"GI6dY5aJ\",\"close-button\":\"ULiJZuaP\",\"closeButton\":\"ULiJZuaP\",\"emojis-backdrop\":\"RFBKZpjx\",\"emojisBackdrop\":\"RFBKZpjx\",\"open\":\"zi1NlOXX\",\"emojis\":\"DFco1VIN\",\"emoji-tooltip\":\"MRIShZ3V\",\"emojiTooltip\":\"MRIShZ3V\",\"user-info\":\"eaUe2A0c\",\"userInfo\":\"eaUe2A0c\",\"buttons\":\"qIeflO02\",\"leave\":\"hclywYYk\",\"accept\":\"ln_ZBUHy\",\"accept-icon\":\"cVRd3twS\",\"acceptIcon\":\"cVRd3twS\",\"main-video\":\"bGlBFSJq\",\"mainVideo\":\"bGlBFSJq\",\"second-video\":\"TOFu1n5x\",\"secondVideo\":\"TOFu1n5x\",\"visible\":\"LOnSFN9w\",\"fullscreen\":\"Omg5T1o6\"};","import '../../../global/actions/calls';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoneCall, ApiUser } from '../../../api/types';\n\nimport {\n  getStreams, IS_SCREENSHARE_SUPPORTED, switchCameraInputP2p, toggleStreamP2p,\n} from '../../../lib/secret-sauce';\nimport { selectTabState } from '../../../global/selectors';\nimport { selectPhoneCallUser } from '../../../global/selectors/calls';\nimport {\n  IS_ANDROID,\n  IS_IOS,\n  IS_REQUEST_FULLSCREEN_SUPPORTED,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport PhoneCallButton from './PhoneCallButton';\n\nimport styles from './PhoneCall.module.scss';\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCall?: ApiPhoneCall;\n  isOutgoing: boolean;\n  isCallPanelVisible?: boolean;\n};\n\nconst PhoneCall: FC<StateProps> = ({\n  user,\n  isOutgoing,\n  phoneCall,\n  isCallPanelVisible,\n}) => {\n  const lang = useOldLang();\n  const {\n    hangUp, requestMasterAndAcceptCall, playGroupCallSound, toggleGroupCallPanel, connectToActivePhoneCall,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [isFullscreen, openFullscreen, closeFullscreen] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const toggleFullscreen = useCallback(() => {\n    if (isFullscreen) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  const handleToggleFullscreen = useCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isFullscreen) {\n      document.exitFullscreen().then(closeFullscreen);\n    } else {\n      containerRef.current.requestFullscreen().then(openFullscreen);\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  useEffect(() => {\n    if (!IS_REQUEST_FULLSCREEN_SUPPORTED) return undefined;\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    container.addEventListener('fullscreenchange', toggleFullscreen);\n\n    return () => {\n      container.removeEventListener('fullscreenchange', toggleFullscreen);\n    };\n  }, [toggleFullscreen]);\n\n  const handleClose = useCallback(() => {\n    toggleGroupCallPanel();\n    if (isFullscreen) {\n      closeFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, toggleGroupCallPanel]);\n\n  const isDiscarded = phoneCall?.state === 'discarded';\n  const isBusy = phoneCall?.reason === 'busy';\n\n  const isIncomingRequested = phoneCall?.state === 'requested' && !isOutgoing;\n  const isOutgoingRequested = (phoneCall?.state === 'requested' || phoneCall?.state === 'waiting') && isOutgoing;\n  const isActive = phoneCall?.state === 'active';\n  const isConnected = phoneCall?.isConnected;\n\n  const [isHangingUp, startHangingUp, stopHangingUp] = useFlag();\n  const handleHangUp = useCallback(() => {\n    startHangingUp();\n    hangUp();\n  }, [hangUp, startHangingUp]);\n\n  useEffect(() => {\n    if (isHangingUp) {\n      playGroupCallSound({ sound: 'end' });\n    } else if (isIncomingRequested) {\n      playGroupCallSound({ sound: 'incoming' });\n    } else if (isBusy) {\n      playGroupCallSound({ sound: 'busy' });\n    } else if (isDiscarded) {\n      playGroupCallSound({ sound: 'end' });\n    } else if (isOutgoingRequested) {\n      playGroupCallSound({ sound: 'ringing' });\n    } else if (isConnected) {\n      playGroupCallSound({ sound: 'connect' });\n    }\n  }, [isBusy, isDiscarded, isIncomingRequested, isOutgoingRequested, isConnected, playGroupCallSound, isHangingUp]);\n\n  useEffect(() => {\n    if (phoneCall?.id) {\n      stopHangingUp();\n    } else {\n      connectToActivePhoneCall();\n    }\n  }, [connectToActivePhoneCall, phoneCall?.id, stopHangingUp]);\n\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, isConnected ? 1000 : undefined);\n\n  const callStatus = useMemo(() => {\n    const state = phoneCall?.state;\n    if (isHangingUp) {\n      return lang('lng_call_status_hanging');\n    }\n    if (isBusy) return 'busy';\n    if (state === 'requesting') {\n      return lang('lng_call_status_requesting');\n    } else if (state === 'requested') {\n      return isOutgoing ? lang('lng_call_status_ringing') : lang('lng_call_status_incoming');\n    } else if (state === 'waiting') {\n      return lang('lng_call_status_waiting');\n    } else if (state === 'active' && isConnected) {\n      return undefined;\n    } else {\n      return lang('lng_call_status_exchanging');\n    }\n  }, [isBusy, isConnected, isHangingUp, isOutgoing, lang, phoneCall?.state]);\n\n  const hasVideo = phoneCall?.videoState === 'active';\n  const hasPresentation = phoneCall?.screencastState === 'active';\n\n  const streams = getStreams();\n  const hasOwnAudio = streams?.ownAudio?.getTracks()[0].enabled;\n  const hasOwnPresentation = streams?.ownPresentation?.getTracks()[0].enabled;\n  const hasOwnVideo = streams?.ownVideo?.getTracks()[0].enabled;\n\n  const [isHidingPresentation, startHidingPresentation, stopHidingPresentation] = useFlag();\n  const [isHidingVideo, startHidingVideo, stopHidingVideo] = useFlag();\n\n  const handleTogglePresentation = useCallback(() => {\n    if (hasOwnPresentation) {\n      startHidingPresentation();\n    }\n    if (hasOwnVideo) {\n      startHidingVideo();\n    }\n    setTimeout(async () => {\n      await toggleStreamP2p('presentation');\n      stopHidingPresentation();\n      stopHidingVideo();\n    }, 250);\n  }, [\n    hasOwnPresentation, hasOwnVideo, startHidingPresentation, startHidingVideo, stopHidingPresentation, stopHidingVideo,\n  ]);\n\n  const handleToggleVideo = useCallback(() => {\n    if (hasOwnVideo) {\n      startHidingVideo();\n    }\n    if (hasOwnPresentation) {\n      startHidingPresentation();\n    }\n    setTimeout(async () => {\n      await toggleStreamP2p('video');\n      stopHidingPresentation();\n      stopHidingVideo();\n    }, 250);\n  }, [\n    hasOwnPresentation, hasOwnVideo, startHidingPresentation, startHidingVideo, stopHidingPresentation, stopHidingVideo,\n  ]);\n\n  const handleToggleAudio = useCallback(() => {\n    void toggleStreamP2p('audio');\n  }, []);\n\n  const [isEmojiOpen, openEmoji, closeEmoji] = useFlag();\n\n  const [isFlipping, startFlipping, stopFlipping] = useFlag();\n\n  const handleFlipCamera = useCallback(() => {\n    startFlipping();\n    switchCameraInputP2p();\n    setTimeout(stopFlipping, 250);\n  }, [startFlipping, stopFlipping]);\n\n  const timeElapsed = phoneCall?.startDate && (Number(new Date()) / 1000 - phoneCall.startDate);\n\n  useEffect(() => {\n    if (phoneCall?.state === 'discarded') {\n      setTimeout(hangUp, 250);\n    }\n  }, [hangUp, phoneCall?.reason, phoneCall?.state]);\n\n  return (\n    <Modal\n      isOpen={phoneCall && phoneCall?.state !== 'discarded' && !isCallPanelVisible}\n      onClose={handleClose}\n      className={buildClassName(\n        styles.root,\n        isMobile && styles.singleColumn,\n      )}\n      dialogRef={containerRef}\n    >\n      <Avatar\n        peer={user}\n        size=\"jumbo\"\n        className={hasVideo || hasPresentation ? styles.blurred : ''}\n      />\n      {phoneCall?.screencastState === 'active' && streams?.presentation\n        && <video className={styles.mainVideo} muted autoPlay playsInline srcObject={streams.presentation} />}\n      {phoneCall?.videoState === 'active' && streams?.video\n        && <video className={styles.mainVideo} muted autoPlay playsInline srcObject={streams.video} />}\n      <video\n        className={buildClassName(\n          styles.secondVideo,\n          !isHidingPresentation && hasOwnPresentation && styles.visible,\n          isFullscreen && styles.fullscreen,\n        )}\n        muted\n        autoPlay\n        playsInline\n        srcObject={streams?.ownPresentation}\n      />\n      <video\n        className={buildClassName(\n          styles.secondVideo,\n          !isHidingVideo && hasOwnVideo && styles.visible,\n          isFullscreen && styles.fullscreen,\n        )}\n        muted\n        autoPlay\n        playsInline\n        srcObject={streams?.ownVideo}\n      />\n      <div className={styles.header}>\n        {IS_REQUEST_FULLSCREEN_SUPPORTED && (\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={handleToggleFullscreen}\n            ariaLabel={lang(isFullscreen ? 'AccExitFullscreen' : 'AccSwitchToFullscreen')}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          className={styles.closeButton}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      </div>\n      <div\n        className={buildClassName(styles.emojisBackdrop, isEmojiOpen && styles.open)}\n        onClick={!isEmojiOpen ? openEmoji : closeEmoji}\n      >\n        <div className={buildClassName(styles.emojis, isEmojiOpen && styles.open)}>\n          {phoneCall?.isConnected && phoneCall?.emojis && renderText(phoneCall.emojis, ['emoji'])}\n        </div>\n        <div className={buildClassName(styles.emojiTooltip, isEmojiOpen && styles.open)}>\n          {lang('CallEmojiKeyTooltip', user?.firstName).replace('%%', '%')}\n        </div>\n      </div>\n      <div className={styles.userInfo}>\n        <h1>{user?.firstName}</h1>\n        <span className={styles.status}>{callStatus || formatMediaDuration(timeElapsed || 0)}</span>\n      </div>\n      <div className={styles.buttons}>\n        <PhoneCallButton\n          onClick={handleToggleAudio}\n          icon=\"microphone\"\n          isDisabled={!isActive}\n          isActive={hasOwnAudio}\n          label={lang(hasOwnAudio ? 'lng_call_mute_audio' : 'lng_call_unmute_audio')}\n        />\n        <PhoneCallButton\n          onClick={handleToggleVideo}\n          icon=\"video\"\n          isDisabled={!isActive}\n          isActive={hasOwnVideo}\n          label={lang(hasOwnVideo ? 'lng_call_stop_video' : 'lng_call_start_video')}\n        />\n        {hasOwnVideo && (IS_ANDROID || IS_IOS) && (\n          <PhoneCallButton\n            onClick={handleFlipCamera}\n            customIcon={(\n              <AnimatedIcon\n                tgsUrl={LOCAL_TGS_URLS.CameraFlip}\n                playSegment={!isFlipping ? [0, 1] : [0, 10]}\n                size={32}\n              />\n            )}\n            isDisabled={!isActive}\n            label={lang('VoipFlip')}\n          />\n        )}\n        {IS_SCREENSHARE_SUPPORTED && (\n          <PhoneCallButton\n            onClick={handleTogglePresentation}\n            icon=\"share-screen\"\n            isDisabled={!isActive}\n            isActive={hasOwnPresentation}\n            label={lang('lng_call_screencast')}\n          />\n        )}\n        {isIncomingRequested && (\n          <PhoneCallButton\n            onClick={requestMasterAndAcceptCall}\n            icon=\"phone-discard\"\n            isDisabled={isDiscarded}\n            label={lang('lng_call_accept')}\n            className={styles.accept}\n            iconClassName={styles.acceptIcon}\n          />\n        )}\n        <PhoneCallButton\n          onClick={handleHangUp}\n          icon=\"phone-discard\"\n          isDisabled={isDiscarded}\n          label={lang(isIncomingRequested ? 'lng_call_decline' : 'lng_call_end_call')}\n          className={styles.leave}\n        />\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { phoneCall, currentUserId } = global;\n    const { isCallPanelVisible, isMasterTab } = selectTabState(global);\n    const user = selectPhoneCallUser(global);\n\n    return {\n      isCallPanelVisible: Boolean(isCallPanelVisible),\n      user,\n      isOutgoing: phoneCall?.adminId === currentUserId,\n      phoneCall: isMasterTab ? phoneCall : undefined,\n    };\n  },\n)(PhoneCall));\n","// extracted by mini-css-extract-plugin\nexport default {\"stars\":\"P7EfDKJN\",\"star\":\"t8LJLFSN\",\"isFilled\":\"_XX6q8YW\",\"comment\":\"EvL0WaKD\",\"visible\":\"v5hn1XvT\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './RatePhoneCallModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\nconst RatePhoneCallModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const { closeCallRatingModal, setCallRating } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const lang = useOldLang();\n  const [rating, setRating] = useState<number | undefined>();\n\n  const handleSend = useCallback(() => {\n    if (!rating) {\n      closeCallRatingModal();\n      return;\n    }\n    setCallRating({\n      rating: rating + 1,\n      comment: inputRef.current?.value || '',\n    });\n  }, [closeCallRatingModal, rating, setCallRating]);\n\n  function handleClickStar(index: number) {\n    return () => setRating(rating === index ? undefined : index);\n  }\n\n  const handleCancelClick = useCallback(() => {\n    closeCallRatingModal();\n  }, [closeCallRatingModal]);\n\n  return (\n    <Modal title={lang('lng_call_rate_label')} className=\"narrow\" onClose={closeCallRatingModal} isOpen={isOpen}>\n      <div className={styles.stars}>\n        {new Array(5).fill(undefined).map((_, i) => {\n          const isFilled = rating !== undefined && rating >= i;\n          return (\n            <Icon\n              name={isFilled ? 'favorite-filled' : 'favorite'}\n              className={buildClassName(\n                isFilled && styles.isFilled,\n                styles.star,\n              )}\n              onClick={handleClickStar(i)}\n            />\n          );\n        })}\n      </div>\n      <InputText\n        ref={inputRef}\n        placeholder={lang('lng_call_rate_comment')}\n        className={buildClassName(styles.comment, rating !== 4 && rating !== undefined && styles.visible)}\n      />\n\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleSend}>\n          {lang('Send')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={handleCancelClick}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(RatePhoneCallModal);\n","import { initializeSoundsForSafari } from '../global/actions/ui/calls';\nimport { IS_IOS, IS_SAFARI } from '../util/browser/windowEnvironment';\n\nexport { default as GroupCall } from '../components/calls/group/GroupCall';\nexport { default as ActiveCallHeader } from '../components/calls/ActiveCallHeader';\nexport { default as PhoneCall } from '../components/calls/phone/PhoneCall';\nexport { default as RatePhoneCallModal } from '../components/calls/phone/RatePhoneCallModal';\n\nif (IS_SAFARI || IS_IOS) {\n  document.addEventListener('click', initializeSoundsForSafari, { once: true });\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n"],"names":["memo","withGlobal","global","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","DeleteMemberModal","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","React","createElement","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","silentSound","audioElement","audioContext","sounds","initializeSoundsForSafari","initializeSounds","Promise","all","Object","values","map","sound","prevSrc","src","muted","volume","play","then","pause","currentTime","requestNextMutation","joinAudio","Audio","connectingAudio","loop","leaveAudio","allowTalkAudio","busyAudio","connectAudio","endAudio","incomingAudio","ringingAudio","join","allowTalk","leave","connecting","incoming","end","connect","busy","ringing","async","fetchGroupCall","groupCall","selectIsCurrentUserFrozen","result","callApi","call","getGlobal","existingGroupCall","selectGroupCall","updateGroupCall","omit","isLoaded","participantsCount","setGlobal","requestGroupCallParticipants","nextOffset","offset","addActionHandler","actions","payload","force","tabId","getCurrentTabId","updateTabState","isCallPanelVisible","selectTabState","subscribed","selectChat","peer","requestMasterAndJoinGroupCall","accessHash","selectActiveGroupCall","hasPublicUsername","Boolean","getMainUsername","inviteLink","selectChatFullInfo","canSelfUnmute","copyTextToClipboard","showNotification","message","key","username","inviteHash","fetchChatByUsername","langProvider","full","loadFullChat","requestMasterAndCallAction","action","ARE_CALLS_SUPPORTED","phoneCall","toggleGroupCallPanel","ctx","window","AudioContext","webkitAudioContext","srcObject","silence","safePlay","createAudioElement","checkNavigatorUserMediaPermissions","groupCalls","activeGroupCallId","selectChatGroupCall","leaveGroupCall","rejoin","isVideo","state","participantId","adminId","currentUserId","oscillator","createOscillator","dst","createMediaStreamDestination","start","MediaStream","assign","stream","getAudioTracks","enabled","getGroupCallAudioElement","getGroupCallAudioContext","removeGroupCallAudioElement","navigator","mediaDevices","getUserMedia","video","getVideoTracks","length","getTracks","forEach","track","stop","checkMicrophonePermission","catch","audio","ElectronEvent","toTelegramSource","source","fromTelegramSource","getAmplitude","array","scale","total","i","rms","Math","sqrt","min","p2pPayloadTypeToConference","p","name","feedbackTypes","clockrate","parameters","channels","THRESHOLD","IS_SCREENSHARE_SUPPORTED","IS_ECHO_CANCELLATION_SUPPORTED","getSupportedConstraints","echoCancellation","IS_NOISE_SUPPRESSION_SUPPORTED","noiseSuppression","sessionDescription","isP2p","sdp","Error","sections","split","s","reduce","acc","el","match","hasOwnProperty","filter","lookup","prefix","sectionName","find","line","startsWith","substr","section","parseExtmaps","l","uri","Number","parsePayloadTypes","payloads","data","fbParams","type","subtype","d","q","value","some","z","f","keys","rawSource","sourceAudio","rawSourceVideo","rawSourceScreencast","hash","fingerprint","setup","console","log","ufrag","pwd","fingerprints","ssrc","semantics","sources","slice","audioExtmap","videoExtmap","screencastExtmap","audioPayloadTypes","videoPayloadTypes","screencastPayloadTypes","conference","isAnswer","isPresentation","lines","add","push","sessionId","ssrcs","audioExtensions","videoExtensions","transport","candidates","mid","addCandidate","c","sdpString","str","foundation","component","protocol","priority","ip","port","generation","addTransport","addPayloadType","payloadType","parametersString","fbParam","addSsrcEntry","entry","payloadTypes","isMain","isRemoved","sourceGroups","sourceGroup","ssrcTelegram","endpoint","black","width","height","canvas","document","getContext","fillRect","captureStream","leavePresentation","isFromToggle","screenshareDataChannel","close","screenshareConnection","onUpdate","getUserStreams","streams","setVolume","participantFunctions","isStreamEnabled","streamType","myId","updateGroupCallStreams","hasAudioStream","hasVideoStream","hasPresentationStream","amplitude","speaking","getUserStream","facing","audioStream","getDisplayMedia","media","facingMode","vid","deferred","Deferred","oncanplay","resolve","promise","toggleStream","connection","sender","getSenders","newStream","replaceTrack","audioSource","createMediaStreamSource","analyser","audioAnalyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","getCurrentAmplitude","Uint8Array","frequencyBinCount","getByteFrequencyData","disconnect","e","updateConnectionState","connectionState","dataChannel","analyserInterval","clearInterval","analyzeAmplitudes","prevAmplitude","handleUpdateGroupCallParticipants","updatedParticipants","participants","participant","isSelf","newEndpoints","isMuted","isLeft","isAudioLeft","isMutedByMe","isVideoLeft","isVideoJoined","isPresentationLeft","presentation","hasVideo","hasAudio","hasPresentation","lastMid","toString","updatingParticipantsQueue","buildSdp","setRemoteDescription","answer","createAnswer","setLocalDescription","newConference","answerNew","error","handleTrack","mediaStream","kind","onended","gainNode","createGain","gain","muteNode","destination","addTrack","test","remove","toggleMute","initializeConnection","RTCPeerConnection","createDataChannel","onopen","onmessage","JSON","parse","colibriClass","onerror","oniceconnectionstatechange","iceConnectionState","onconnectionstatechange","ontrack","onnegotiationneeded","offer","createOffer","offerToReceiveVideo","offerToReceiveAudio","parseSdp","audioSsrc","videoSsrc","screenshareConference","videoStream","updateStreams","mediaState","toggleStreamP2p","ownAudio","ownVideo","ownPresentation","blackVideo","blackPresentation","sendMediaState","err","stopPhoneCall","emitSignalingData","videoRotation","isBatteryLow","videoState","screencastState","filterVP8","mediaContent","isOutgoing","idx","findIndex","vp8PayloadType","rtxIdx","apt","sendInitialSetup","ssrcGroups","rtpExtensions","screencast","processSignalingMessage","pendingCandidates","gotInitialSetup","candidate","commitPendingIceCandidates","xmlns","Date","now","localDescription","addIceCandidate","sdpMLineIndex","tryAddCandidate","conn","params","isFromLibrary","shouldDiscard","shouldRemove","isPageUnload","updateActiveGroupCall","removeGroupCall","afterHangUp","videoStopped","raiseHand","floor","GROUP_CALL_VOLUME_MULTIPLIER","startSharingScreen","presentationPaused","setInterval","joinGroupCall","apiUpdate","loadMoreGroupCallParticipants","selectPhoneCallUser","dhConfig","gAHash","hangUp","gB","stringify","encodedData","ratingPhoneCall","rating","comment","setTimeout","EMOJI_DATA","Uint16Array","EMOJI_OFFSETS","update","toggleGroupCallPresentation","selectGroupCallParticipant","updateGroupCallParticipant","isSpeakerDisabled","groupCallId","handleUpdateGroupCallConnection","isBusy","connections","libraryVersions","version","firstName","needRating","gA","keyFingerprint","emojis","newCall","gAOrB","shouldStartVideo","iceServers","urls","isTurn","isStun","credentialType","credential","password","iceTransportPolicy","bundlePolicy","iceCandidatePoolSize","onicecandidate","transceiver","iceRestart","slnc","screenshare","dc","negotiated","joinPhoneCall","sendSignalingData","isP2pAllowed","isConnected","formatGroupCallVolume","GROUP_CALL_DEFAULT_VOLUME","SPEAKER_ICON_DISABLED_SEGMENT","SPEAKER_ICON_ENABLED_SEGMENT","isAdmin","selectIsAdminInActiveGroupCall","GroupCallParticipantMenu","onCloseAnimationEnd","isDropdownOpen","menuRef","menuPositionOptions","toggleGroupCallMute","setGroupCallParticipantVolume","openChat","requestToSpeak","isDeleteUserModalOpen","openDeleteUserModal","closeDeleteUserModal","useFlag","isRaiseHand","raiseHandRating","shouldRaiseHand","localVolume","setLocalVolume","useState","shouldPlay","setShouldPlay","isLocalVolumeZero","speakerIconPlaySegment","useEffect","handleSetLocalVolume","useLastCallback","runThrottled","ms","noFirst","deps","useThrottledCallback","cb","useRunThrottled","handleRemove","stopPropagation","handleCancelRequestToSpeak","handleMute","handleOpenProfile","Menu","_extends","ref","withPortal","className","buildClassName","max","onChange","target","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Speaker","playSegment","size","MenuItem","icon","onClick","destructive","OutlinedMicrophoneIcon","noColor","isSpeaking","prevIsRaiseHand","usePreviousDeprecated","prevIsMuted","useMemo","microphoneColor","VoiceOutlined","color","forceAlways","nonInteractive","GroupCallParticipant","useRef","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleBeforeContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","current","getRootElement","closest","getMenuElement","getLayout","hasCustomVolume","aboutText","aboutColor","styles","subtitleRed","subtitleBlue","replace","subtitleGreen","about","ListItem","leftElement","Avatar","avatar","rightElement","root","onMouseDown","onContextMenu","multiline","ripple","FullNameTitle","withEmojiStatus","subtitle","Icon","subtitleText","anchor","compareParticipants","a","b","compareFields","GroupCallParticipantList","panelOffset","isLandscape","orderedParticipantIds","sort","handleLoadMoreGroupCallParticipants","viewportIds","getMore","useInfiniteScroll","InfiniteScroll","items","onLoadMore","style","teactOrderKey","indexOf","isUser","GroupCallParticipantVideo","layout","pinnedVideo","setPinned","canPin","thumbnailRef","videoRef","videoFallbackRef","x","y","noAnimate","isPinned","shouldFlipVideo","status","prevLayoutRef","prevY","prevWidth","prevHeight","currentX","currentY","currentWidth","currentHeight","prevX","isHidden","setIsHidden","actualStream","streamRef","active","handleInactive","addEventListener","removeEventListener","isLoading","setIsLoading","handleCanPlay","useInterval","requestMutation","videoWidth","videoHeight","drawImage","thumbnail","alpha","isDrawing","animate","draw","IS_CANVAS_FILTER_SUPPORTED","fastBlur","fastRaf","handleClickPin","onDoubleClick","Skeleton","autoPlay","playsInline","onCanPlay","Button","round","ariaLabel","vibrateShort","vibrate","meParticipant","hasRequestedToSpeak","noAudioStream","MicrophoneButton","playGroupCallSound","muteMouseDownState","isRequestingToSpeak","setIsRequestingToSpeak","isConnecting","prevShouldRaiseHand","r","random","animatedIconName","handleMouseDownMute","handleMouseUpMute","onMouseUp","disabled","Spinner","canInvite","selectCanInviteToActiveGroupCall","GroupCall","toggleGroupCallVideo","connectToActiveGroupCall","createGroupCallInviteLink","containerRef","primaryVideoContainerRef","secondaryVideoContainerRef","panelScrollTriggerRef","panelRef","isLeaving","setIsLeaving","observe","useIntersectionObserver","rootRef","throttleMs","isDisabled","hasScrolled","useIsIntersecting","isMobile","useAppLayout","isFullscreen","openFullscreen","closeFullscreen","isSidebarOpen","openSidebar","closeSidebar","isLandscapeLayout","isAppFullscreen","useFullscreenStatus","firstPresentation","videoParticipants","flatMap","compact","hasVideoParticipants","groupCallTitle","membersString","isConfirmLeaveModalOpen","openConfirmLeaveModal","closeConfirmLeaveModal","isEndGroupCallModal","setIsEndGroupCallModal","shouldEndGroupCall","setShouldEndGroupCall","canRequestToSpeak","handleCloseConfirmLeaveModal","handleToggleFullscreen","handleToggleSidebar","handleToggleGroupCallPanel","handleInviteMember","handleClickVideo","handleLeaveGroupCall","handleCloseAnimationEnd","handleToggleGroupCallPresentation","canPinVideo","isLandscapeWithVideos","setPinnedVideo","videoLayout","primaryContainerRef","secondaryContainerRef","setVideoLayout","setPanelOffset","videosCount","prevVideosCount","prevVideoParticipants","removedVideoParticipants","recalculateLayout","primaryContainer","secondaryContainer","removed","secondaryInitialX","secondaryInitialY","secondaryContainerWidth","getBoundingClientRect","isRemounted","pinnedPush","skip","pinnedSkipIndex","initialX","initialY","containerWidth","containerHeight","orderKey","videoType","secondaryVideosCounts","isFirstBig","columns","rows","ceil","smallWidth","heightTotal","isBig","realIndex","PREFERRED_PANEL_VIDEO_HEIGHT","shouldRemount","splice","calculateColumnsCount","shouldFillLastRow","lastRowWidth","row","useResizeObserver","useGroupCallVideoLayout","handleSetPinnedVideo","handleOpenFirstPresentation","Modal","fullscreen","appFullscreen","landscape","noVideoParticipants","portrait","noSidebar","dialogRef","videos","videosHeader","headerButton","firstButton","bigger","videosHeaderLastButton","videosContent","panelWrapper","panel","panelScrollTrigger","panelHeader","scrolled","panelHeaderText","lastButton","participantVideos","FloatingActionButton","isShown","addParticipantButton","mainVideoContainer","actionButton","Checkbox","label","checked","onCheck","isText","tabState","isMasterTab","phoneCallUser","ActiveCallHeader","body","classList","toggle","electron","setTrafficLightPosition","PhoneCallButton","customIcon","iconClassName","isActive","PhoneCall","requestMasterAndAcceptCall","connectToActivePhoneCall","toggleFullscreen","exitFullscreen","requestFullscreen","IS_REQUEST_FULLSCREEN_SUPPORTED","container","handleClose","isDiscarded","reason","isIncomingRequested","isOutgoingRequested","isHangingUp","startHangingUp","stopHangingUp","handleHangUp","forceUpdate","useForceUpdate","callStatus","hasOwnAudio","hasOwnPresentation","hasOwnVideo","isHidingPresentation","startHidingPresentation","stopHidingPresentation","isHidingVideo","startHidingVideo","stopHidingVideo","handleTogglePresentation","handleToggleVideo","handleToggleAudio","isEmojiOpen","openEmoji","closeEmoji","isFlipping","startFlipping","stopFlipping","handleFlipCamera","switchCameraInputP2p","timeElapsed","startDate","singleColumn","blurred","mainVideo","secondVideo","visible","header","closeButton","emojisBackdrop","open","emojiTooltip","userInfo","formatMediaDuration","buttons","IS_ANDROID","IS_IOS","CameraFlip","accept","acceptIcon","RatePhoneCallModal","closeCallRatingModal","setCallRating","inputRef","setRating","handleSend","handleCancelClick","Array","fill","_","isFilled","index","InputText","placeholder","IS_SAFARI","once","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","setIsFullscreen","useLayoutEffect","element","listener","isEnabled","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","checkIfFullscreen","removeElectronListener","on","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp"],"sourceRoot":""}