{"version":3,"file":"2786.635cdf21878398e5dbaa.js","mappings":"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","sources":["webpack://TeleGPT/./node_modules/@cryptography/aes/dist/es/aes.js","webpack://TeleGPT/./node_modules/os-browserify/browser.js","webpack://TeleGPT/./node_modules/async-mutex/index.mjs","webpack://TeleGPT/./node_modules/big-integer/BigInteger.js"],"sourcesContent":["var S = new Uint8Array(256);\nvar Si = new Uint8Array(256);\nvar T1 = new Uint32Array(256);\nvar T2 = new Uint32Array(256);\nvar T3 = new Uint32Array(256);\nvar T4 = new Uint32Array(256);\nvar T5 = new Uint32Array(256);\nvar T6 = new Uint32Array(256);\nvar T7 = new Uint32Array(256);\nvar T8 = new Uint32Array(256);\nfunction computeTables() {\n    var d = new Uint8Array(256);\n    var t = new Uint8Array(256);\n    var x2;\n    var x4;\n    var x8;\n    var s;\n    var tEnc;\n    var tDec;\n    var x = 0;\n    var xInv = 0;\n    // Compute double and third tables\n    for (var i = 0; i < 256; i++) {\n        d[i] = i << 1 ^ (i >> 7) * 283;\n        t[d[i] ^ i] = i;\n    }\n    for (; !S[x]; x ^= x2 || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        S[x] = s;\n        Si[s] = x;\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n        T1[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T2[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T3[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T4[x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        T5[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T6[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T7[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        T8[s] = tDec = tDec << 24 ^ tDec >>> 8;\n        xInv = t[xInv] || 1;\n    }\n}\n\n/**\n * Gets a uint32 from string in big-endian order order\n */\nfunction s2i(str, pos) {\n    return (str.charCodeAt(pos) << 24\n        ^ str.charCodeAt(pos + 1) << 16\n        ^ str.charCodeAt(pos + 2) << 8\n        ^ str.charCodeAt(pos + 3));\n}\n\n/* eslint-disable import/prefer-default-export */\n/**\n * Helper function for transforming string key to Uint32Array\n */\nfunction getWords(key) {\n    if (key instanceof Uint32Array) {\n        return key;\n    }\n    if (typeof key === 'string') {\n        if (key.length % 4 !== 0)\n            for (var i = key.length % 4; i <= 4; i++)\n                key += '\\0x00';\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4)\n            buf[i / 4] = s2i(key, i);\n        return buf;\n    }\n    if (key instanceof Uint8Array) {\n        var buf = new Uint32Array(key.length / 4);\n        for (var i = 0; i < key.length; i += 4) {\n            buf[i / 4] = (key[i] << 24\n                ^ key[i + 1] << 16\n                ^ key[i + 2] << 8\n                ^ key[i + 3]);\n        }\n        return buf;\n    }\n    throw new Error('Unable to create 32-bit words');\n}\nfunction xor(left, right, to) {\n    if (to === void 0) { to = left; }\n    for (var i = 0; i < left.length; i++)\n        to[i] = left[i] ^ right[i];\n}\n\ncomputeTables();\n/**\n * Low-level AES Cipher\n */\nvar AES = /** @class */ (function () {\n    function AES(_key) {\n        var key = getWords(_key);\n        if (key.length !== 4 && key.length !== 6 && key.length !== 8) {\n            throw new Error('Invalid key size');\n        }\n        this.encKey = new Uint32Array(4 * key.length + 28);\n        this.decKey = new Uint32Array(4 * key.length + 28);\n        this.encKey.set(key);\n        var rcon = 1;\n        var i = key.length;\n        var tmp;\n        // schedule encryption keys\n        for (; i < 4 * key.length + 28; i++) {\n            tmp = this.encKey[i - 1];\n            // apply sbox\n            if (i % key.length === 0 || (key.length === 8 && i % key.length === 4)) {\n                tmp = S[tmp >>> 24] << 24 ^ S[(tmp >> 16) & 255] << 16 ^ S[(tmp >> 8) & 255] << 8 ^ S[tmp & 255];\n                // shift rows and add rcon\n                if (i % key.length === 0) {\n                    tmp = tmp << 8 ^ tmp >>> 24 ^ (rcon << 24);\n                    rcon = rcon << 1 ^ (rcon >> 7) * 283;\n                }\n            }\n            this.encKey[i] = this.encKey[i - key.length] ^ tmp;\n        }\n        // schedule decryption keys\n        for (var j = 0; i; j++, i--) {\n            tmp = this.encKey[j & 3 ? i : i - 4];\n            if (i <= 4 || j < 4) {\n                this.decKey[j] = tmp;\n            }\n            else {\n                this.decKey[j] = (T5[S[tmp >>> 24]]\n                    ^ T6[S[(tmp >> 16) & 255]]\n                    ^ T7[S[(tmp >> 8) & 255]]\n                    ^ T8[S[tmp & 255]]);\n            }\n        }\n    }\n    AES.prototype.encrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.encKey[0];\n        var b = message[1] ^ this.encKey[1];\n        var c = message[2] ^ this.encKey[2];\n        var d = message[3] ^ this.encKey[3];\n        var rounds = this.encKey.length / 4 - 2;\n        var k = 4;\n        var a2;\n        var b2;\n        var c2;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T1[a >>> 24] ^ T2[(b >> 16) & 255] ^ T3[(c >> 8) & 255] ^ T4[d & 255] ^ this.encKey[k];\n            b2 = T1[b >>> 24] ^ T2[(c >> 16) & 255] ^ T3[(d >> 8) & 255] ^ T4[a & 255] ^ this.encKey[k + 1];\n            c2 = T1[c >>> 24] ^ T2[(d >> 16) & 255] ^ T3[(a >> 8) & 255] ^ T4[b & 255] ^ this.encKey[k + 2];\n            d = T1[d >>> 24] ^ T2[(a >> 16) & 255] ^ T3[(b >> 8) & 255] ^ T4[c & 255] ^ this.encKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n            // console.log(a, b, c, d);\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[i] = (S[a >>> 24] << 24\n                ^ S[(b >> 16) & 255] << 16\n                ^ S[(c >> 8) & 255] << 8\n                ^ S[d & 255]\n                ^ this.encKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    AES.prototype.decrypt = function (_message) {\n        var message = getWords(_message);\n        var out = new Uint32Array(4);\n        var a = message[0] ^ this.decKey[0];\n        var b = message[3] ^ this.decKey[1];\n        var c = message[2] ^ this.decKey[2];\n        var d = message[1] ^ this.decKey[3];\n        var rounds = this.decKey.length / 4 - 2;\n        var a2;\n        var b2;\n        var c2;\n        var k = 4;\n        // Inner rounds.  Cribbed from OpenSSL.\n        for (var i = 0; i < rounds; i++) {\n            a2 = T5[a >>> 24] ^ T6[(b >> 16) & 255] ^ T7[(c >> 8) & 255] ^ T8[d & 255] ^ this.decKey[k];\n            b2 = T5[b >>> 24] ^ T6[(c >> 16) & 255] ^ T7[(d >> 8) & 255] ^ T8[a & 255] ^ this.decKey[k + 1];\n            c2 = T5[c >>> 24] ^ T6[(d >> 16) & 255] ^ T7[(a >> 8) & 255] ^ T8[b & 255] ^ this.decKey[k + 2];\n            d = T5[d >>> 24] ^ T6[(a >> 16) & 255] ^ T7[(b >> 8) & 255] ^ T8[c & 255] ^ this.decKey[k + 3];\n            a = a2;\n            b = b2;\n            c = c2;\n            k += 4;\n        }\n        // Last round.\n        for (var i = 0; i < 4; i++) {\n            out[3 & -i] = (Si[a >>> 24] << 24\n                ^ Si[(b >> 16) & 255] << 16\n                ^ Si[(c >> 8) & 255] << 8\n                ^ Si[d & 255]\n                ^ this.decKey[k++]);\n            a2 = a;\n            a = b;\n            b = c;\n            c = d;\n            d = a2;\n        }\n        return out;\n    };\n    return AES;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE = /** @class */ (function () {\n    function AES_IGE(key, iv, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.key = getWords(key);\n        this.iv = getWords(iv);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var prevX = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevY = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = text.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.encrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                cipherText[j] = y[k];\n        }\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        var cipherText = getWords(message);\n        var text = buf || new Uint32Array(cipherText.length);\n        var prevY = this.iv.subarray(this.blockSize, this.iv.length);\n        var prevX = this.iv.subarray(0, this.blockSize);\n        var yXOR = new Uint32Array(this.blockSize);\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = cipherText.subarray(i, i + this.blockSize);\n            xor(x, prevY, yXOR);\n            var y = this.cipher.decrypt(yXOR);\n            xor(y, prevX);\n            prevX = x;\n            prevY = y;\n            for (var j = i, k = 0; j < text.length && k < 4; j++, k++)\n                text[j] = y[k];\n        }\n        return text;\n    };\n    return AES_IGE;\n}());\n\n/**\n * AES-IGE mode.\n */\nvar AES_IGE$1 = /** @class */ (function () {\n    function AES_IGE(key, counter, blockSize) {\n        if (blockSize === void 0) { blockSize = 16; }\n        this.offset = 0;\n        this.key = getWords(key);\n        this.counter = getWords(counter);\n        this.cipher = new AES(key);\n        this.blockSize = blockSize / 4;\n        if (this.counter.length !== 4) {\n            throw new Error('AES-CTR mode counter must be 16 bytes length');\n        }\n    }\n    /**\n     * Encrypts plain text with AES-IGE mode.\n     */\n    AES_IGE.prototype.encrypt = function (message, buf) {\n        var text = getWords(message);\n        var cipherText = buf || new Uint32Array(text.length);\n        var offset = this.offset;\n        for (var i = 0; i < text.length; i += this.blockSize) {\n            var x = this.cipher.encrypt(this.counter);\n            for (var j = i, k = offset; j < text.length && k < this.blockSize; j++, k++)\n                cipherText[j] = x[k] ^ text[j];\n            if (text.length - i >= this.blockSize)\n                this.incrementCounter();\n            if (offset) {\n                i -= offset;\n                offset = 0;\n            }\n        }\n        this.offset = (this.offset + (text.length % 4)) % 4;\n        return cipherText;\n    };\n    /**\n     * Decrypts cipher text with AES-IGE mode.\n     */\n    AES_IGE.prototype.decrypt = function (message, buf) {\n        return this.encrypt(message, buf);\n    };\n    AES_IGE.prototype.incrementCounter = function () {\n        // increment counter\n        for (var carry = this.counter.length - 1; carry >= 0; carry--) {\n            if (++this.counter[carry] < 0xFFFFFFFF)\n                break; // If overflowing, it'll be 0 and we'll have to continue propagating the carry\n        }\n    };\n    return AES_IGE;\n}());\n\nexport default AES;\nexport { AES_IGE$1 as CTR, AES_IGE as IGE };\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","const E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_value, _cancelError = E_CANCELED) {\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._weightedWaiters = [];\n    }\n    acquire(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve, reject) => {\n            const task = { resolve, reject, weight, priority };\n            const i = findIndexFromEnd(this._queue, (other) => priority <= other.priority);\n            if (i === -1 && weight <= this._value) {\n                // Needs immediate dispatch, skip the queue\n                this._dispatchItem(task);\n            }\n            else {\n                this._queue.splice(i + 1, 0, task);\n            }\n        });\n    }\n    runExclusive(callback_1) {\n        return __awaiter$2(this, arguments, void 0, function* (callback, weight = 1, priority = 0) {\n            const [value, release] = yield this.acquire(weight, priority);\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        if (this._couldLockImmediately(weight, priority)) {\n            return Promise.resolve();\n        }\n        else {\n            return new Promise((resolve) => {\n                if (!this._weightedWaiters[weight - 1])\n                    this._weightedWaiters[weight - 1] = [];\n                insertSorted(this._weightedWaiters[weight - 1], { resolve, priority });\n            });\n        }\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    getValue() {\n        return this._value;\n    }\n    setValue(value) {\n        this._value = value;\n        this._dispatchQueue();\n    }\n    release(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        this._value += weight;\n        this._dispatchQueue();\n    }\n    cancel() {\n        this._queue.forEach((entry) => entry.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatchQueue() {\n        this._drainUnlockWaiters();\n        while (this._queue.length > 0 && this._queue[0].weight <= this._value) {\n            this._dispatchItem(this._queue.shift());\n            this._drainUnlockWaiters();\n        }\n    }\n    _dispatchItem(item) {\n        const previousValue = this._value;\n        this._value -= item.weight;\n        item.resolve([previousValue, this._newReleaser(item.weight)]);\n    }\n    _newReleaser(weight) {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this.release(weight);\n        };\n    }\n    _drainUnlockWaiters() {\n        if (this._queue.length === 0) {\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                waiters.forEach((waiter) => waiter.resolve());\n                this._weightedWaiters[weight - 1] = [];\n            }\n        }\n        else {\n            const queuedPriority = this._queue[0].priority;\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                const i = waiters.findIndex((waiter) => waiter.priority <= queuedPriority);\n                (i === -1 ? waiters : waiters.splice(0, i))\n                    .forEach((waiter => waiter.resolve()));\n            }\n        }\n    }\n    _couldLockImmediately(weight, priority) {\n        return (this._queue.length === 0 || this._queue[0].priority < priority) &&\n            weight <= this._value;\n    }\n}\nfunction insertSorted(a, v) {\n    const i = findIndexFromEnd(a, (other) => v.priority <= other.priority);\n    a.splice(i + 1, 0, v);\n}\nfunction findIndexFromEnd(a, predicate) {\n    for (let i = a.length - 1; i >= 0; i--) {\n        if (predicate(a[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nvar __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, arguments, void 0, function* (priority = 0) {\n            const [, releaser] = yield this._semaphore.acquire(1, priority);\n            return releaser;\n        });\n    }\n    runExclusive(callback, priority = 0) {\n        return this._semaphore.runExclusive(() => callback(), 1, priority);\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock(priority = 0) {\n        return this._semaphore.waitForUnlock(1, priority);\n    }\n    release() {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let isTimeout = false;\n                const handle = setTimeout(() => {\n                    isTimeout = true;\n                    reject(timeoutError);\n                }, timeout);\n                try {\n                    const ticket = yield (isSemaphore(sync)\n                        ? sync.acquire(weight, priority)\n                        : sync.acquire(priority));\n                    if (isTimeout) {\n                        const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                        release();\n                    }\n                    else {\n                        clearTimeout(handle);\n                        resolve(ticket);\n                    }\n                }\n                catch (e) {\n                    if (!isTimeout) {\n                        clearTimeout(handle);\n                        reject(e);\n                    }\n                }\n            }));\n        },\n        runExclusive(callback, weight, priority) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire(weight, priority);\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        release(weight) {\n            sync.release(weight);\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => {\n                const handle = setTimeout(() => reject(timeoutError), timeout);\n                (isSemaphore(sync)\n                    ? sync.waitForUnlock(weight, priority)\n                    : sync.waitForUnlock(priority)).then(() => {\n                    clearTimeout(handle);\n                    resolve();\n                });\n            });\n        },\n        isLocked: () => sync.isLocked(),\n        getValue: () => sync.getValue(),\n        setValue: (value) => sync.setValue(value),\n    };\n}\nfunction isSemaphore(sync) {\n    return sync.getValue !== undefined;\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\nexport { E_ALREADY_LOCKED, E_CANCELED, E_TIMEOUT, Mutex, Semaphore, tryAcquire, withTimeout };\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {\r\n        return new NativeBigInt(this.value / parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {\r\n        return new NativeBigInt(this.value % parseValue(v).value);\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);\r\n        if (b === _0) return Integer[1];\r\n        if (a === _0) return Integer[0];\r\n        if (a === _1) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(_0);\r\n        var x = this;\r\n        var y = Integer[1];\r\n        while (true) {\r\n            if ((b & _1) === _1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === _0) break;\r\n            b /= _2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        if (exp.isNegative()) {\r\n            exp = exp.multiply(Integer[-1]);\r\n            base = base.modInv(mod);\r\n        }\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations, rng) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2), rng));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = function(v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value << v.value)\r\n    }\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = function (v){\r\n        v = parseValue(v)\r\n        return new NativeBigInt(this.value >> v.value)\r\n    }\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b, rng) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var usedRNG = rng || Math.random;\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(usedRNG() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(usedRNG() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define( function () {\r\n        return bigInt;\r\n    });\r\n}\r\n"],"names":["S","Uint8Array","Si","T1","Uint32Array","T2","T3","T4","T5","T6","T7","T8","s2i","str","pos","charCodeAt","getWords","key","length","i","buf","Error","xor","left","right","to","x2","x4","s","tEnc","tDec","d","t","x","xInv","computeTables","AES","_key","this","encKey","decKey","set","tmp","rcon","j","prototype","encrypt","_message","a2","b2","c2","message","out","a","b","c","rounds","k","decrypt","AES_IGE","iv","blockSize","cipher","text","cipherText","prevX","subarray","prevY","yXOR","y","counter","offset","incrementCounter","carry","exports","endianness","hostname","location","loadavg","uptime","freemem","Number","MAX_VALUE","totalmem","cpus","type","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","E_CANCELED","Semaphore","constructor","_value","_cancelError","_queue","_weightedWaiters","acquire","weight","priority","Promise","resolve","reject","task","findIndexFromEnd","other","_dispatchItem","splice","runExclusive","callback_1","thisArg","_arguments","arguments","generator","callback","value","P","fulfilled","step","next","e","rejected","result","done","then","apply","waitForUnlock","_couldLockImmediately","v","insertSorted","isLocked","getValue","setValue","_dispatchQueue","cancel","forEach","entry","_drainUnlockWaiters","shift","item","previousValue","_newReleaser","called","waiters","waiter","queuedPriority","findIndex","predicate","Mutex","cancelError","_semaphore","releaser","BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","radix","alphabet","caseSensitive","parseValue","parseBase","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","n","Math","floor","arrayToSmall","arr","trim","compareAbs","createArray","Array","truncate","ceil","add","sum","l_a","l_b","r","base","push","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","multiplySmall","shiftLeft","concat","multiplyKaratsuba","max","slice","ac","bd","abcd","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","negate","abs","comparison","quotientDigit","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","bigInt","modPow","Object","create","plus","subtractAny","minus","small","multiply","l1","l2","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","modInv","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","undefined","bits","bitLength","logN","log","toJSNumber","isProbablePrime","iterations","rng","randBetween","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","LOBMASK_I","roughLOB","integerLogarithm","p","min","gcd","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","map","valueOf","neg","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","indexOf","test","parseNumberValue","toArray","toJSON","parseInt","minusOne","lcm","isInstance","usedRNG","random","low","range","restricted","top","fromArray","module","hasOwnProperty"],"sourceRoot":""}